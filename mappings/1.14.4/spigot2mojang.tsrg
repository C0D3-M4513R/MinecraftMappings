net/minecraft/server/PacketStatusListener net/minecraft/server/network/ServerStatusPacketListenerImpl
	a DISCONNECT_REASON
	d hasRequestedStatus
	minecraftServer server
	networkManager connection
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/PacketStatusInPing;)V handlePingRequest
	a (Lnet/minecraft/server/PacketStatusInStart;)V handleStatusRequest
net/minecraft/server/DataConverterSchemaV1486 net/minecraft/util/datafix/schemas/V1486
net/minecraft/server/LootItemConditionRandomChance net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition
	a probability
	a (F)Lcrk$a; randomChance
	a (Lnet/minecraft/server/LootItemConditionRandomChance;)F access$000
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b (F)Lnet/minecraft/server/LootItemCondition; lambda$randomChance$0
net/minecraft/server/DataConverterSchemaV1483 net/minecraft/util/datafix/schemas/V1483
bsv$1 net/minecraft/world/level/block/TripWireBlock$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
net/minecraft/server/CommandStopSound net/minecraft/server/commands/StopSoundCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$4
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/SoundCategory;Lnet/minecraft/server/MinecraftKey;)I stopSound
	a (Lnet/minecraft/server/SoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
	b (Lnet/minecraft/server/SoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
net/minecraft/server/WorldGenDecoratorEndGateway net/minecraft/world/level/levelgen/placement/EndGatewayPlacementDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorEmptyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/NBTTagInt net/minecraft/nbt/IntTag
	a ()B getId
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)V load
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTBase; copy
	c ()Lnet/minecraft/server/NBTTagInt; copy
	d ()J getAsLong
	e ()I getAsInt
	f ()S getAsShort
	g ()B getAsByte
	h ()D getAsDouble
	i ()F getAsFloat
	j ()Ljava/lang/Number; getAsNumber
net/minecraft/server/DataConverterSchemaV1481 net/minecraft/util/datafix/schemas/V1481
net/minecraft/server/ServerPing net/minecraft/network/protocol/status/ServerStatus
	a description
	b players
	c version
	d favicon
	a ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	b ()Lnet/minecraft/server/ServerPing$ServerPingPlayerSample; getPlayers
	d ()Ljava/lang/String; getFavicon
	getServerData ()Lnet/minecraft/server/ServerPing$ServerData; getVersion
	setMOTD (Lnet/minecraft/server/IChatBaseComponent;)V setDescription
	setPlayerSample (Lnet/minecraft/server/ServerPing$ServerPingPlayerSample;)V setPlayers
	setServerInfo (Lnet/minecraft/server/ServerPing$ServerData;)V setVersion
net/minecraft/server/DataConverterLevelDataGeneratorOptions net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix
	a MAP
	a ()Ljava/lang/IllegalStateException; lambda$null$1
	a (Lcom/mojang/datafixers/types/DynamicOps;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object; lambda$convert$3
	a (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$convert$5
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; getLayerInfoFromString
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; convert
	a (Ljava/util/HashMap;)V lambda$static$0
	b (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$null$4
	b (Ljava/lang/String;)Ljava/util/List; getLayersInfoFromString
cqa$b net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionEnchant; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionEnchant;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$deserialize$0
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/TileEntityCampfire net/minecraft/world/level/block/entity/CampfireBlockEntity
	cookingTimes cookingProgress
	cookingTotalTimes cookingTime
	L_ ()V clearContent
	T_ ()V tick
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/RecipeCampfire;)Lnet/minecraft/server/ItemStack; lambda$cook$0
	a (Lnet/minecraft/server/ItemStack;)Ljava/util/Optional; getCookableRecipe
	a (Lnet/minecraft/server/ItemStack;I)Z placeFood
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	d (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; saveMetadataAndItems
	f ()V dowse
	h ()V cook
	s ()V makeParticles
	t ()V markUpdated
cqa$a net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder
	a enchantments
	a ()Lcqa$a; getThis
	a (Lnet/minecraft/server/Enchantment;)Lcqa$a; withEnchantment
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcqg$a; getThis
byo$1 net/minecraft/world/level/dimension/NetherDimension$1
	a this$0
	g ()D getCenterX
	h ()D getCenterZ
net/minecraft/server/WorldGenDecoratorLakeWater net/minecraft/world/level/levelgen/placement/LakeWaterPlacementDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorLakeChanceConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/BlockDiodeAbstract net/minecraft/world/level/block/DiodeBlock
	b SHAPE
	c POWERED
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isLocked
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z shouldTurnOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I getOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getAlternateSignalAt
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I getAlternateSignal
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I getInputSignal
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	c (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z shouldPrioritize
	c (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V checkTickOnNeighbor
	d (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V updateNeighborsInFront
	f (Lnet/minecraft/server/IBlockData;)Z canOcclude
	h (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	j (Lnet/minecraft/server/IBlockData;)I getDelay
	q (Lnet/minecraft/server/IBlockData;)Z isAlternateInput
net/minecraft/server/RayTrace$BlockCollisionOption net/minecraft/world/level/ClipContext$Block
	c shapeGetter
	d $VALUES
net/minecraft/server/ContainerHopper net/minecraft/world/inventory/HopperMenu
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()Lnet/minecraft/server/IInventory; getContainer
net/minecraft/server/BiomeStoneBeach net/minecraft/world/level/biome/StoneShoreBiome
dsr$1 net/minecraft/client/renderer/entity/IllusionerRenderer$1
	a this$0
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityIllagerIllusioner;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFFFFFF)V render
cqa$1 net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$1
net/minecraft/server/BlockStepAbstract net/minecraft/world/level/block/SlabBlock
	a TYPE
	b WATERLOGGED
	c BOTTOM_AABB
	d TOP_AABB
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	n (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
cqr$a net/minecraft/world/level/storage/loot/functions/SetNbtFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetTag; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetTag;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/WorldGenFeatureDefinedStructureJigsawJunction net/minecraft/world/level/levelgen/feature/structures/JigsawJunction
	a sourceX
	b sourceGroundY
	c sourceZ
	d deltaY
	e destProjection
	a ()I getSourceX
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureDefinedStructureJigsawJunction; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	b ()I getSourceGroundY
	c ()I getSourceZ
	d ()I getDeltaY
	e ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching; getDestProjection
net/minecraft/server/LootValueBinomial net/minecraft/world/level/storage/loot/BinomialDistributionGenerator
	d n
	e p
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (IF)Lnet/minecraft/server/LootValueBinomial; binomial
	a (Ljava/util/Random;)I getInt
	a (Lnet/minecraft/server/LootValueBinomial;)I access$000
	b (Lnet/minecraft/server/LootValueBinomial;)F access$100
net/minecraft/server/BlockIceFrost net/minecraft/world/level/block/FrostedIceBlock
	a AGE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;I)Z fewerNeigboursThan
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z slightlyMelt
net/minecraft/server/PacketPlayOutRemoveEntityEffect net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket
	a entityId
	b effect
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getEntity
	b ()Lnet/minecraft/server/MobEffectList; getEffect
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/ScoreboardTeamBase net/minecraft/world/scores/Team
	allowFriendlyFire ()Z isAllowFriendlyFire
	getPlayerNameSet ()Ljava/util/Collection; getPlayers
	i ()Z canSeeFriendlyInvisibles
	isAlly (Lnet/minecraft/server/ScoreboardTeamBase;)Z isAlliedTo
	j ()Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility; getNameTagVisibility
net/minecraft/server/BlockBannerWall net/minecraft/world/level/block/WallBannerBlock
	a FACING
	b SHAPES
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	l ()Ljava/lang/String; getDescriptionId
net/minecraft/server/PathfinderGoalLookAtTradingPlayer net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal
	f villager
	a ()Z canUse
net/minecraft/server/BlockSkullWall net/minecraft/world/level/block/WallSkullBlock
	a FACING
	b AABBS
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	l ()Ljava/lang/String; getDescriptionId
net/minecraft/server/Particle net/minecraft/core/particles/ParticleType
	a overrideLimiter
	b deserializer
	c ()Z getOverrideLimiter
	d ()Lgf$a; getDeserializer
net/minecraft/server/AreaContextTransformed net/minecraft/world/level/newbiome/context/BigContext
	a (II)I random
	a (IIII)I random
	a (JJ)V initRandom
	a (Lnet/minecraft/server/AreaTransformer8;)Lnet/minecraft/server/Area; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/Area;)Lnet/minecraft/server/Area; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;)Lnet/minecraft/server/Area; createResult
net/minecraft/server/BlockBeetroot net/minecraft/world/level/block/BeetrootBlock
	a AGE
	c SHAPE_BY_AGE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/World;)I getBonemealAgeIncrease
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	d ()Lnet/minecraft/server/BlockStateInteger; getAgeProperty
	e ()I getMaxAge
	f ()Lnet/minecraft/server/IMaterial; getBaseSeedId
net/minecraft/server/BiomeRoofedForest net/minecraft/world/level/biome/DarkForestBiome
	b (Lnet/minecraft/server/BlockPosition;)I getGrassColor
net/minecraft/server/DataConverterSchemaV1466 net/minecraft/util/datafix/schemas/V1466
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
net/minecraft/server/DataConverterSchemaV1460 net/minecraft/util/datafix/schemas/V1460
	a ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$45
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$43
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$26
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$39
	a (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$32
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$44
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$42
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$25
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	b (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$30
	c ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$37
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$41
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$24
	d ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$36
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$40
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$23
	e ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$27
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$38
	e (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$22
	f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$35
	f (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$21
	g (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$34
	g (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$20
	h (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$33
	h (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$19
	i (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$31
	i (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$18
	j (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$29
	j (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$17
	k (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$28
	k (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$16
	l (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$1
	l (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$15
	m (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	m (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$14
	n (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$13
	o (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$12
	p (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
	q (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
	r (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
	s (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
	t (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
	u (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
	v (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
	w (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	x (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	y (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
cek net/minecraft/world/level/levelgen/feature/SimulatedFeature
	a (Lve;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V simulate
to$a net/minecraft/server/commands/SpreadPlayersCommand$Position
	a x
	b z
	a ()V normalize
	a (DD)V set
	a (DDDD)Z clamp
	a (Ljava/util/Random;DDDD)V randomize
	a (Lnet/minecraft/server/IBlockAccess;)I getSpawnY
	a (Lto$a;)D dist
	a (Lto$a;D)D access$002
	b ()F getLength
	b (Lnet/minecraft/server/IBlockAccess;)Z isSafe
	b (Lto$a;)V moveAway
	b (Lto$a;D)D access$102
	c (Lto$a;)D access$000
	d (Lto$a;)D access$100
net/minecraft/server/MapIcon$Type net/minecraft/world/level/saveddata/maps/MapDecoration$Type
	B icon
	C renderedOnFrame
	D mapColor
	E $VALUES
	a ()B getIcon
	a (B)Lnet/minecraft/server/MapIcon$Type; byIcon
	b ()Z isRenderedOnFrame
	c ()Z hasMapColor
	d ()I getMapColor
net/minecraft/server/EntityTypes net/minecraft/world/entity/EntityType
	aY LOGGER
	aZ factory
	ba category
	bb serialize
	bc summon
	bd fireImmune
	be canSpawnFarFromPlayer
	bf descriptionId
	bg description
	bh lootTable
	bi dimensions
	a ()Z canSerialize
	a (DDD)Lnet/minecraft/server/AxisAlignedBB; getAABB
	a (ILnet/minecraft/server/World;)Lnet/minecraft/server/Entity; create
	a (Ljava/lang/String;)Ljava/util/Optional; byString
	a (Ljava/lang/String;Lais$a;)Lnet/minecraft/server/EntityTypes; register
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/AxisAlignedBB;)D getYOffset
	a (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/Optional; by
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/Entity;)V lambda$create$1
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/World;)Ljava/util/Optional; create
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/World;Ljava/util/function/Function;)Lnet/minecraft/server/Entity; loadEntityRecursive
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/World;Ljava/util/function/Function;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Entity; lambda$loadEntityRecursive$3
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; create
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;Lnet/minecraft/server/NBTTagCompound;)V updateCustomEntityTag
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/Entity; create
	b ()Z canSummon
	b (Lnet/minecraft/server/NBTTagCompound;)V lambda$create$2
	b (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/World;)Ljava/util/Optional; loadStaticEntity
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/Entity; lambda$create$0
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumMobSpawn;ZZ)Lnet/minecraft/server/Entity; create
	c ()Z fireImmune
	d ()Z canSpawnFarFromPlayer
	e ()Lnet/minecraft/server/EnumCreatureType; getCategory
	f ()Ljava/lang/String; getDescriptionId
	g ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	getChunkRange ()I chunkRange
	getName (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/MinecraftKey; getKey
	getUpdateInterval ()I updateInterval
	h ()Lnet/minecraft/server/MinecraftKey; getDefaultLootTable
	i ()F getWidth
	isDeltaTracking ()Z trackDeltas
	j ()F getHeight
	k ()Lnet/minecraft/server/EntitySize; getDimensions
	o ()Lorg/apache/logging/log4j/Logger; access$000
	spawnCreature (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumMobSpawn;ZZ)Lnet/minecraft/server/Entity; spawn
	spawnCreature (Lnet/minecraft/server/World;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumMobSpawn;ZZ)Lnet/minecraft/server/Entity; spawn
net/minecraft/server/CreativeModeTab net/minecraft/world/item/CreativeModeTab
	a TABS
	b TAB_BUILDING_BLOCKS
	c TAB_DECORATIONS
	d TAB_REDSTONE
	e TAB_TRANSPORTATION
	f TAB_MISC
	g TAB_SEARCH
	h TAB_FOOD
	i TAB_TOOLS
	j TAB_COMBAT
	k TAB_BREWING
	l TAB_MATERIALS
	m TAB_HOTBAR
	n TAB_INVENTORY
	o id
	p langId
	q recipeFolderName
	r backgroundSuffix
	s canScroll
	t showTitle
	u enchantmentCategories
	v iconItemStack
	a ()I getId
	a (Ljava/lang/String;)Lnet/minecraft/server/CreativeModeTab; setBackgroundSuffix
	a (Lnet/minecraft/server/EnchantmentSlotType;)Z hasEnchantmentCategory
	a (Lnet/minecraft/server/NonNullList;)V fillItemList
	a ([Lnet/minecraft/server/EnchantmentSlotType;)Lnet/minecraft/server/CreativeModeTab; setEnchantmentCategories
	b ()Ljava/lang/String; getLangId
	b (Ljava/lang/String;)Lnet/minecraft/server/CreativeModeTab; setRecipeFolderName
	c ()Ljava/lang/String; getRecipeFolderName
	d ()Ljava/lang/String; getName
	e ()Lnet/minecraft/server/ItemStack; getIconItem
	f ()Lnet/minecraft/server/ItemStack; makeIcon
	g ()Ljava/lang/String; getBackgroundSuffix
	h ()Z showTitle
	i ()Lnet/minecraft/server/CreativeModeTab; hideTitle
	j ()Z canScroll
	k ()Lnet/minecraft/server/CreativeModeTab; hideScroll
	l ()I getColumn
	m ()Z isTopRow
	n ()Z isAlignedRight
	o ()[Lnet/minecraft/server/EnchantmentSlotType; getEnchantmentCategories
bse$1 net/minecraft/world/level/block/StairBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$StairsShape
	b $SwitchMap$net$minecraft$world$level$block$Mirror
cv$a net/minecraft/commands/arguments/OperationArgument$Operation
auz$1 net/minecraft/world/entity/monster/Ravager$1
cv$b net/minecraft/commands/arguments/OperationArgument$SimpleOperation
net/minecraft/server/TileEntityFurnaceFurnace net/minecraft/world/level/block/entity/FurnaceBlockEntity
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
net/minecraft/server/BlockStateList net/minecraft/world/level/block/state/StateDefinition
	a NAME_PATTERN
	b owner
	c propertiesByName
	d states
	a ()Lcom/google/common/collect/ImmutableList; getPossibleStates
	a (Lbvu$b;Ljava/lang/Object;Ljava/util/Map;Ljava/util/List;Ljava/util/List;)V lambda$new$2
	a (Ljava/lang/String;)Lnet/minecraft/server/IBlockState; getProperty
	a (Ljava/util/List;Ljava/lang/Comparable;)Ljava/util/List; lambda$null$0
	a (Lnet/minecraft/server/IBlockState;Ljava/util/List;)Ljava/util/stream/Stream; lambda$new$1
	d ()Ljava/util/Collection; getProperties
	e ()Ljava/util/regex/Pattern; access$000
	getBlock ()Ljava/lang/Object; getOwner
	getBlockData ()Lnet/minecraft/server/IBlockDataHolder; any
net/minecraft/server/RecipeRepair net/minecraft/world/item/crafting/RepairItemRecipe
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
net/minecraft/server/PacketPlayOutScoreboardObjective net/minecraft/network/protocol/game/ClientboundSetObjectivePacket
	a objectiveName
	b displayName
	c renderType
	d method
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/lang/String; getObjectiveName
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	d ()I getMethod
	e ()Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay; getRenderType
cfk net/minecraft/world/level/levelgen/feature/package-info
j net/minecraft/FieldsAreNonnullByDefault
l net/minecraft/MethodsReturnNonnullByDefault
net/minecraft/server/DataConverterSchemaV1470 net/minecraft/util/datafix/schemas/V1470
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
cfv net/minecraft/world/level/levelgen/feature/structures/package-info
cfz net/minecraft/world/level/levelgen/package-info
net/minecraft/server/WorldGenFeatureConfiguration net/minecraft/world/level/levelgen/feature/FeatureConfiguration
	e NONE
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
cfy net/minecraft/world/level/levelgen/flat/package-info
cpo$a net/minecraft/world/level/storage/loot/entries/LootPoolEntries$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootEntryAbstract; deserialize
	a (Ljava/lang/Class;)Lcpq$b; getSerializer
	a (Lnet/minecraft/server/LootEntryAbstract;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/TickListPriority net/minecraft/world/level/TickPriority
	h value
	i $VALUES
	a ()I getValue
	a (I)Lnet/minecraft/server/TickListPriority; byValue
net/minecraft/server/Statistic net/minecraft/stats/Stat
	o formatter
	p value
	q type
	a (I)Ljava/lang/String; format
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/String; locationToKey
	a (Lnet/minecraft/server/StatisticWrapper;Ljava/lang/Object;)Ljava/lang/String; buildName
	b ()Ljava/lang/Object; getValue
	getWrapper ()Lnet/minecraft/server/StatisticWrapper; getType
cxa$10 com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$9
	a this$0
net/minecraft/server/WorldGenEndCityPieces$PieceGenerator net/minecraft/world/level/levelgen/structure/EndCityPieces$SectionGenerator
	a ()V init
	a (Lnet/minecraft/server/DefinedStructureManager;ILnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)Z generate
net/minecraft/server/MaterialMapColor net/minecraft/world/level/material/MaterialColor
	A COLOR_BLUE
	B COLOR_BROWN
	C COLOR_GREEN
	D COLOR_RED
	E COLOR_BLACK
	F GOLD
	G DIAMOND
	H LAPIS
	I EMERALD
	J PODZOL
	K NETHER
	L TERRACOTTA_WHITE
	M TERRACOTTA_ORANGE
	N TERRACOTTA_MAGENTA
	O TERRACOTTA_LIGHT_BLUE
	P TERRACOTTA_YELLOW
	Q TERRACOTTA_LIGHT_GREEN
	R TERRACOTTA_PINK
	S TERRACOTTA_GRAY
	T TERRACOTTA_LIGHT_GRAY
	U TERRACOTTA_CYAN
	V TERRACOTTA_PURPLE
	W TERRACOTTA_BLUE
	X TERRACOTTA_BROWN
	Y TERRACOTTA_GREEN
	Z TERRACOTTA_RED
	a MATERIAL_COLORS
	aa TERRACOTTA_BLACK
	ac id
	b NONE
	c GRASS
	d SAND
	e WOOL
	f FIRE
	g ICE
	h METAL
	i PLANT
	j SNOW
	k CLAY
	l DIRT
	m STONE
	n WATER
	o WOOD
	p QUARTZ
	q COLOR_ORANGE
	r COLOR_MAGENTA
	rgb col
	s COLOR_LIGHT_BLUE
	t COLOR_YELLOW
	u COLOR_LIGHT_GREEN
	v COLOR_PINK
	w COLOR_GRAY
	x COLOR_LIGHT_GRAY
	y COLOR_CYAN
	z COLOR_PURPLE
	a (I)I calculateRGBColor
net/minecraft/server/BiomeRoofedForestMutated net/minecraft/world/level/biome/DarkForestHillsBiome
	b (Lnet/minecraft/server/BlockPosition;)I getGrassColor
bor$1 net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
ama$1 net/minecraft/world/entity/ai/behavior/WeightedList$1
net/minecraft/server/HttpUtilities net/minecraft/util/HttpUtil
	a DOWNLOAD_EXECUTOR
	b LOGGER
	a ()I getAvailablePort
	a (Ljava/io/File;Ljava/lang/String;Ljava/util/Map;ILnet/minecraft/server/IProgressUpdate;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture; downloadTo
	a (Ljava/net/URL;Ljava/lang/String;ZLjava/net/Proxy;)Ljava/lang/String; performPost
	a (Ljava/net/URL;Ljava/util/Map;ZLjava/net/Proxy;)Ljava/lang/String; performPost
	a (Ljava/util/Map;)Ljava/lang/String; buildQuery
	a (Lnet/minecraft/server/IProgressUpdate;Ljava/lang/String;Ljava/net/Proxy;Ljava/util/Map;Ljava/io/File;I)Ljava/lang/Object; lambda$downloadTo$0
axr$a net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition
	a time
	b activity
	a ()I getTime
	b ()Lnet/minecraft/server/Activity; getActivity
net/minecraft/server/PacketLoginOutListener net/minecraft/network/protocol/login/ClientLoginPacketListener
	a (Lnet/minecraft/server/PacketLoginOutCustomPayload;)V handleCustomQuery
	a (Lnet/minecraft/server/PacketLoginOutDisconnect;)V handleDisconnect
	a (Lnet/minecraft/server/PacketLoginOutEncryptionBegin;)V handleHello
	a (Lnet/minecraft/server/PacketLoginOutSetCompression;)V handleCompression
	a (Lnet/minecraft/server/PacketLoginOutSuccess;)V handleGameProfile
net/minecraft/server/ItemBisected net/minecraft/world/item/DoubleHighBlockItem
	a (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/IBlockData;)Z placeBlock
net/minecraft/server/WorldGenFeatureFlowerPlain net/minecraft/world/level/levelgen/feature/PlainFlowerFeature
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getRandomFlower
net/minecraft/server/BlockLadder net/minecraft/world/level/block/LadderBlock
	b WATERLOGGED
	c EAST_AABB
	d WEST_AABB
	e SOUTH_AABB
	f NORTH_AABB
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z canAttachTo
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/WorldProviderTheEnd net/minecraft/world/level/dimension/end/TheEndDimension
	f END_SPAWN_POINT
	g dragonFight
	a (FF)[F getSunriseColor
	a (II)Z isFoggyAt
	a (IIZ)Lnet/minecraft/server/BlockPosition; getValidSpawnPosition
	a (JF)F getTimeOfDay
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)Lnet/minecraft/server/BlockPosition; getSpawnPosInChunk
	b ()F getCloudHeight
	b (FF)Lnet/minecraft/server/Vec3D; getFogColor
	c ()Z hasGround
	d ()Lnet/minecraft/server/BlockPosition; getDimensionSpecificSpawn
	k ()V saveData
	l ()V tick
	m ()Lnet/minecraft/server/ChunkGenerator; createRandomLevelGenerator
	n ()Z isNaturalDimension
	o ()Z mayRespawn
	p ()Lnet/minecraft/server/DimensionManager; getType
	q ()Lnet/minecraft/server/EnderDragonBattle; getDragonFight
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSimple net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleRoom
	p mainDesign
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
arh$1 net/minecraft/world/entity/animal/Fox$1
net/minecraft/server/DataConverterSchemaV1451 net/minecraft/util/datafix/schemas/V1451
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$0
net/minecraft/server/BlockGlass net/minecraft/world/level/block/GlassBlock
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
bty$1 net/minecraft/world/level/block/entity/BrewingStandBlockEntity$1
	a this$0
	a ()I getCount
	a (I)I get
	a (II)V set
ce$a net/minecraft/commands/Commands$ParseFunction
net/minecraft/server/ServerPing$ServerPingPlayerSample$Serializer net/minecraft/network/protocol/status/ServerStatus$Players$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/ServerPing$ServerPingPlayerSample; deserialize
	a (Lnet/minecraft/server/ServerPing$ServerPingPlayerSample;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
chz net/minecraft/world/level/levelgen/placement/nether/package-info
net/minecraft/server/ControllerMoveFlying net/minecraft/world/entity/ai/control/FlyingMoveControl
	a ()V tick
net/minecraft/server/BehaviorBedJump net/minecraft/world/entity/ai/behavior/JumpOnBed
	a speed
	b targetBed
	c remainingTimeToReachBed
	d remainingJumps
	e remainingCooldownUntilNextJump
	a (J)Z timedOut
	a (Lnet/minecraft/server/EntityInsentient;)Ljava/util/Optional; getNearestBed
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BlockPosition;)V startWalkingTowardsBed
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z isBed
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BlockPosition;)V lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z nearBed
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z onOrOverBed
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)Z canStillUse
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z onBedSurface
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	e (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z tiredOfWalking
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z tiredOfJumping
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
bdr$a net/minecraft/world/item/TooltipFlag$Default
	a NORMAL
	b ADVANCED
	c advanced
	d $VALUES
	a ()Z isAdvanced
cia net/minecraft/world/level/levelgen/placement/package-info
net/minecraft/server/WorldGenFeatureDefinedStructurePools net/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType
	b SINGLE
	c LIST
	d FEATURE
	e EMPTY
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure; lambda$static$0
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; register
net/minecraft/server/ArgumentEntitySummon net/minecraft/commands/arguments/EntitySummonArgument
	a ERROR_UNKNOWN_ENTITY
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentEntitySummon; id
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/MinecraftKey; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; getSummonableEntity
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; verifyCanSummon
	b (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$verifyCanSummon$1
ama$a net/minecraft/world/entity/ai/behavior/WeightedList$WeightedEntry
	a this$0
	b data
	c weight
	d randWeight
	a ()D getRandWeight
	a (F)V setRandom
	b ()Ljava/lang/Object; getData
net/minecraft/server/ReportedException net/minecraft/ReportedException
	a report
	a ()Lnet/minecraft/server/CrashReport; getReport
net/minecraft/server/PacketPlayInFlying$PacketPlayInPosition net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
bb$b net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance
	a item
	b durability
	c delta
	a (Lnet/minecraft/server/CriterionConditionItem;Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lbb$b; changedDurability
	a (Lnet/minecraft/server/ItemStack;I)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
arh$i net/minecraft/world/entity/animal/Fox$FoxGroupData
	a type
	b numParents
arh$j net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal
	f this$0
	a ()Z canUse
	b ()Z canContinueToUse
arh$k net/minecraft/world/entity/animal/Fox$FoxLookControl
	h this$0
	a ()V tick
	b ()Z resetXRotOnTick
bb$a net/minecraft/advancements/critereon/ItemDurabilityTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/ItemStack;I)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
arh$l net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal
	d this$0
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLiving;D)V checkAndPerformAttack
	c ()V start
net/minecraft/server/RecipeItemStack$Provider net/minecraft/world/item/crafting/Ingredient$Value
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
arh$e net/minecraft/world/entity/animal/Fox$FoxBreedGoal
	d this$0
	c ()V start
	g ()V breed
arh$f net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal
	g ticksWaited
	h this$0
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	c ()V start
	e ()V tick
	h ()D acceptedDistance
	j ()Z shouldRecalculatePath
	m ()V onReachedTarget
net/minecraft/server/WorldGenCarverWrapper net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver
	a worldCarver
	b config
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenCarverWrapper; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Ljava/util/Random;II)Z isStartChunk
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/Random;IIIIILjava/util/BitSet;)Z carve
arh$g net/minecraft/world/entity/animal/Fox$FoxFloatGoal
	a this$0
	a ()Z canUse
	c ()V start
arh$h net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal
	a this$0
	b fox
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
arh$a net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal
	i this$0
	j trustedLastHurtBy
	k trustedLastHurt
	l timestamp
	a ()Z canUse
	c ()V start
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStones net/minecraft/world/level/levelgen/structure/StrongholdPieces$SmoothStoneSelector
	a (Ljava/util/Random;IIIZ)V next
arh$b net/minecraft/world/entity/animal/Fox$FaceplantGoal
	a countdown
	b this$0
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
arh$c net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector
	a this$0
	a (Lnet/minecraft/server/EntityLiving;)Z test
cja net/minecraft/world/level/levelgen/structure/package-info
arh$d net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal
	a this$0
	b alertableTargeting
	g ()Z hasShelter
	h ()Z alertable
net/minecraft/server/WorldGenFeatureOceanRuin$Temperature net/minecraft/world/level/levelgen/structure/OceanRuinFeature$Type
	c BY_NAME
	d name
	e $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenFeatureOceanRuin$Temperature; byName
	a (Lnet/minecraft/server/WorldGenFeatureOceanRuin$Temperature;)Lnet/minecraft/server/WorldGenFeatureOceanRuin$Temperature; lambda$static$0
net/minecraft/server/WorldGenDecoratorEmpty net/minecraft/world/level/levelgen/placement/NopePlacementDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorEmptyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/GameRules$GameRuleVisitor net/minecraft/world/level/GameRules$GameRuleTypeVisitor
	a (Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleDefinition;)V visit
net/minecraft/server/ArgumentItemPredicate net/minecraft/commands/arguments/item/ItemPredicateArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	a ()Lnet/minecraft/server/ArgumentItemPredicate; itemPredicate
	a (Lcom/mojang/brigadier/StringReader;)Ldz$b; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; getItemPredicate
	a (Ldz$a;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate; lambda$parse$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/ArgumentParserItemStack;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate; lambda$parse$2
cwk$a com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus
	a bytesWritten
	b totalBytes
	c this$0
net/minecraft/server/ArgumentNBTKey net/minecraft/commands/arguments/NbtPathArgument
	a ERROR_INVALID_NODE
	b ERROR_NOTHING_FOUND
	c EXAMPLES
	a ()Lnet/minecraft/server/ArgumentNBTKey; nbtPath
	a (C)Z isAllowedInUnquotedName
	a (Lcom/mojang/brigadier/StringReader;)Lcr$h; parse
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lcr$i; readObjectNode
	a (Lcom/mojang/brigadier/StringReader;Z)Lcr$i; parseNode
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcr$h; getPath
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/function/Predicate; access$000
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTBase;)Z lambda$createTagPredicate$1
	b (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; readUnquotedName
	b (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/function/Predicate; createTagPredicate
gi$1 net/minecraft/core/particles/SimpleParticleType$1
	a (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleType; fromCommand
	a (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleType; fromNetwork
	b (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParam; fromCommand
	b (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParam; fromNetwork
bs$a net/minecraft/advancements/critereon/TickTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lx$a;)V addListener
	b ()V trigger
	b (Lx$a;)V removeListener
bs$b net/minecraft/advancements/critereon/TickTrigger$TriggerInstance
net/minecraft/server/BiomeMesa net/minecraft/world/level/biome/BadlandsBiome
	a (Lnet/minecraft/server/BlockPosition;)I getFoliageColor
	b (Lnet/minecraft/server/BlockPosition;)I getGrassColor
arh$u net/minecraft/world/entity/animal/Fox$StalkPreyGoal
	a this$0
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/DataConverterSchemaV99 net/minecraft/util/datafix/schemas/V99
	a ADD_NAMES
	b LOGGER
	c ITEM_TO_BLOCKENTITY
	a ()Ljava/util/Map; access$000
	a (Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$34
	a (Lcom/mojang/datafixers/Dynamic;Ljava/util/Map;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$33
	a (Lcom/mojang/datafixers/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object; addNames
	a (Lcom/mojang/datafixers/Dynamic;Ljava/util/Map;Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$addNames$35
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$21
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	a (Ljava/util/HashMap;)V lambda$static$32
	a (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$27
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$30
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$31
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$20
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerThrowableProjectile
	b (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$24
	c ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$29
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$28
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$19
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMinecart
	d ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$26
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$25
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$18
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$23
	e (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$17
	f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$22
	f (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$16
	g (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$14
	g (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$15
	h (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$12
	h (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$13
	i (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$3
	i (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
	j (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMinecart$2
	j (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
	k (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerThrowableProjectile$1
	k (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
	l (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	l (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
	m (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
	n (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
	o (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
	p (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
arh$q net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal
	a this$0
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	g ()Z canFoxMove
net/minecraft/server/ItemBed net/minecraft/world/item/BedItem
	a (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/IBlockData;)Z placeBlock
arh$r net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal
	b this$0
	c relX
	d relZ
	e lookTime
	f looksRemaining
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	j ()V resetLook
net/minecraft/server/PacketStatusInListener net/minecraft/network/protocol/status/ServerStatusPacketListener
	a (Lnet/minecraft/server/PacketStatusInPing;)V handlePingRequest
	a (Lnet/minecraft/server/PacketStatusInStart;)V handleStatusRequest
arh$s net/minecraft/world/entity/animal/Fox$SeekShelterGoal
	b this$0
	c interval
	a ()Z canUse
	c ()V start
arh$t net/minecraft/world/entity/animal/Fox$SleepGoal
	b this$0
	c countdown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	j ()Z canSleep
net/minecraft/server/PathfinderWater net/minecraft/world/level/pathfinder/SwimNodeEvaluator
	j allowBreaching
	a (DDD)Lnet/minecraft/server/PathDestination; getGoal
	a (III)Lnet/minecraft/server/PathPoint; getNode
	a (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;IIILnet/minecraft/server/EntityInsentient;IIIZZ)Lnet/minecraft/server/PathType; getBlockPathType
	a ([Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)I getNeighbors
	b ()Lnet/minecraft/server/PathPoint; getStart
	b (III)Lnet/minecraft/server/PathPoint; getWaterNode
	c (III)Lnet/minecraft/server/PathType; isFree
net/minecraft/server/BlockSlowSand net/minecraft/world/level/block/SoulsandBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
arh$m net/minecraft/world/entity/animal/Fox$FoxMoveControl
	i this$0
	a ()V tick
arh$n net/minecraft/world/entity/animal/Fox$FoxPanicGoal
	f this$0
	a ()Z canUse
cwk$1 com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$1
	a this$0
cjv net/minecraft/world/level/levelgen/structure/templatesystem/package-info
arh$o net/minecraft/world/entity/animal/Fox$FoxPounceGoal
	a this$0
	C_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
cwk$2 com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$2
	a this$0
arh$p net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal
	a this$0
	a ()Z canUse
	c ()V start
	e ()V tick
net/minecraft/server/PersistentBase net/minecraft/world/level/saveddata/SavedData
	a LOGGER
	c dirty
	a (Ljava/io/File;)V save
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Z)V setDirty
	b ()V setDirty
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c ()Z isDirty
net/minecraft/server/BlockFloorSign net/minecraft/world/level/block/StandingSignBlock
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
hl$a net/minecraft/data/recipes/SingleItemRecipeBuilder$Result
	a id
	b group
	c ingredient
	d result
	e count
	f advancement
	g advancementId
	h type
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
net/minecraft/server/ArgumentItemStack net/minecraft/commands/arguments/item/ItemArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/ArgumentItemStack; item
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ArgumentPredicateItemStack; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ArgumentPredicateItemStack; getItem
net/minecraft/server/StatisticManager net/minecraft/stats/StatsCounter
	a stats
	a (Lnet/minecraft/server/StatisticWrapper;Ljava/lang/Object;)I getValue
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Statistic;I)V increment
	getStatisticValue (Lnet/minecraft/server/Statistic;)I getValue
	setStatistic (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Statistic;I)V setValue
net/minecraft/server/InstantMobEffect net/minecraft/world/effect/InstantenousMobEffect
	a ()Z isInstantenous
	a (II)Z isDurationEffectTick
don$a net/minecraft/client/renderer/block/model/MultiVariant$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldon; deserialize
net/minecraft/server/ItemPickaxe net/minecraft/world/item/PickaxeItem
	a DIGGABLES
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	b (Lnet/minecraft/server/IBlockData;)Z canDestroySpecial
net/minecraft/server/EnumColor net/minecraft/world/item/DyeColor
	A $VALUES
	q BY_ID
	r BY_FIREWORK_COLOR
	s id
	t name
	u color
	v textureDiffuseColor
	w textureDiffuseColorBGR
	x textureDiffuseColors
	y fireworkColor
	z textColor
	a (Ljava/lang/String;Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/EnumColor; byName
	a (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/EnumColor; lambda$static$2
	b ()Ljava/lang/String; getName
	b (I)Lnet/minecraft/server/EnumColor; byFireworkColor
	b (Lnet/minecraft/server/EnumColor;)Ljava/lang/Integer; lambda$static$1
	c ()I getTextureDiffuseColorBGR
	c (I)[Lnet/minecraft/server/EnumColor; lambda$static$0
	d ()[F getTextureDiffuseColors
	e ()Lnet/minecraft/server/MaterialMapColor; getMaterialColor
	f ()I getFireworkColor
	fromColorIndex (I)Lnet/minecraft/server/EnumColor; byId
	g ()I getTextColor
	getColorIndex ()I getId
	m ()Ljava/lang/String; getSerializedName
cqr$1 net/minecraft/world/level/storage/loot/functions/SetNbtFunction$1
net/minecraft/server/BlockWetSponge net/minecraft/world/level/block/WetSpongeBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
net/minecraft/server/EntityRabbit$ControllerJumpRabbit net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl
	b this$0
	c rabbit
	d canJump
	a (Z)V setCanJump
	b ()V tick
	c ()Z wantJump
	d ()Z canJump
ap$b net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance
	a item
	b levels
	a (Lnet/minecraft/server/ItemStack;I)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lap$b; enchantedItem
net/minecraft/server/WorldGenDecoratorHeight32 net/minecraft/world/level/levelgen/placement/CountHeightmap32Decorator
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
ap$a net/minecraft/advancements/critereon/EnchantedItemTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/ItemStack;I)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
net/minecraft/server/BehavorMove net/minecraft/world/entity/ai/behavior/MoveToTargetSink
	a path
	b lastTargetPos
	c speed
	d remainingDelay
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/MemoryTarget;)Z reachedTarget
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/MemoryTarget;J)Z tryComputePath
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)Z canStillUse
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V start
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
ckm net/minecraft/world/level/levelgen/surfacebuilders/package-info
ayu$2 net/minecraft/world/inventory/ContainerLevelAccess$2
	b val$level
	c val$pos
	a (Ljava/util/function/BiFunction;)Ljava/util/Optional; evaluate
ayu$1 net/minecraft/world/inventory/ContainerLevelAccess$1
	a (Ljava/util/function/BiFunction;)Ljava/util/Optional; evaluate
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdChestCorridor net/minecraft/world/level/levelgen/structure/StrongholdPieces$ChestCorridor
	a hasPlacedChest
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdChestCorridor; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
cks net/minecraft/world/level/levelgen/synth/package-info
beu$1 net/minecraft/world/item/crafting/RecipeType$1
	g val$name
net/minecraft/server/WorldGenFeatureEndPlatform net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature
	a PLATFORM_ORIGIN
	aS PLATFORM_ORIGIN_CHUNK
	a (IIII)I checkerboardDistance
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/BlockWitherSkullWall net/minecraft/world/level/block/WitherWallSkullBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
net/minecraft/server/BlockStemmed net/minecraft/world/level/block/StemGrownBlock
	d ()Lnet/minecraft/server/BlockStem; getStem
	e ()Lnet/minecraft/server/BlockStemAttached; getAttachedStem
net/minecraft/server/AutoRecipeOutput net/minecraft/world/inventory/StackedContentsCompatible
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillStackedContents
net/minecraft/server/ChunkConverter$Type net/minecraft/world/level/chunk/UpgradeData$BlockFixers
	f DIRECTIONS
	g $VALUES
clf net/minecraft/world/level/lighting/SpatialLongSet
	a map
bqg$1 net/minecraft/world/level/block/Mirror$1
	a $SwitchMap$net$minecraft$world$level$block$Mirror
net/minecraft/server/CriterionTriggerInventoryChanged net/minecraft/advancements/critereon/InventoryChangeTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/PlayerInventory;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lba$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
clg net/minecraft/world/level/lighting/package-info
net/minecraft/server/ItemBow net/minecraft/world/item/BowItem
	a (I)F getPowerForTime
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityHuman;)V lambda$releaseUsing$2
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)F lambda$new$1
	c (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)F lambda$new$0
	e_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	f_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
net/minecraft/server/CriterionConditionDamageSource net/minecraft/advancements/critereon/DamageSourcePredicate
	a ANY
	b isProjectile
	c isExplosion
	d bypassesArmor
	e bypassesInvulnerability
	f bypassesMagic
	g isFire
	h isMagic
	i isLightning
	j directEntity
	k sourceEntity
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionDamageSource; fromJson
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; getOptionalBoolean
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V addOptionally
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DamageSource;)Z matches
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/DamageSource;)Z matches
net/minecraft/server/SystemUtils net/minecraft/Util
	a timeSource
	b WORKER_COUNT
	c BACKGROUND_EXECUTOR
	d LOGGER
	a ()Ljava/util/stream/Collector; toMap
	a (Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;Ljava/lang/Number;)Ljava/util/Optional; lambda$readUUID$7
	a (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; findNextInIterable
	a (Ljava/lang/Number;Ljava/lang/Number;)Ljava/util/UUID; lambda$null$6
	a (Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object; make
	a (Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable; name
	a (Ljava/lang/String;)Z lambda$getVmArguments$2
	a (Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Ljava/util/Optional; readUUID
	a (Ljava/lang/String;Ljava/util/UUID;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; writeUUID
	a (Ljava/lang/String;Lnet/minecraft/server/MinecraftKey;)Ljava/lang/String; makeDescriptionId
	a (Ljava/lang/Thread;Ljava/lang/Throwable;)V lambda$makeBackgroundExecutor$1
	a (Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture; failedFuture
	a (Ljava/util/List;)Ljava/lang/Object; lastOf
	a (Ljava/util/List;Ljava/lang/Void;)Ljava/util/List; lambda$sequence$5
	a (Ljava/util/List;[Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V lambda$sequence$4
	a (Ljava/util/Optional;)Ljava/util/stream/Stream; toStream
	a (Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional; ifElse
	a (Ljava/util/concurrent/CompletableFuture;Ljava/util/List;ILjava/lang/Object;Ljava/lang/Throwable;)V lambda$null$3
	a (Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread; lambda$makeBackgroundExecutor$0
	a (Ljava/util/function/Supplier;)Ljava/lang/Object; make
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Object;)Ljava/lang/String; getPropertyName
	b (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; findPreviousInIterable
	b (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; sequence
	e ()Ljava/util/concurrent/Executor; backgroundExecutor
	f ()V shutdownBackgroundExecutor
	g ()Lnet/minecraft/server/SystemUtils$OS; getPlatform
	getMonotonicMillis ()J getMillis
	getMonotonicNanos ()J getNanos
	getTimeMillis ()J getEpochMillis
	h ()Ljava/util/stream/Stream; getVmArguments
	i ()Lit/unimi/dsi/fastutil/Hash$Strategy; identityStrategy
	j ()Lorg/apache/logging/log4j/Logger; access$100
	k ()Ljava/util/concurrent/ExecutorService; makeBackgroundExecutor
cij$c net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftPiece
	a type
	a ()Lnet/minecraft/server/IBlockData; getPlanksBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/StructureBoundingBox;IIII)Z isSupportingBox
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b ()Lnet/minecraft/server/IBlockData; getFenceBlock
net/minecraft/server/WorldGenFeaturePumpkinStack net/minecraft/world/level/levelgen/feature/PumpkinBlockPileFeature
	a (Lnet/minecraft/server/GeneratorAccess;)Lnet/minecraft/server/IBlockData; getBlockState
cls net/minecraft/world/level/material/package-info
bpu$1 net/minecraft/world/level/block/LadderBlock$1
	a $SwitchMap$net$minecraft$core$Direction
clw net/minecraft/world/level/newbiome/area/package-info
net/minecraft/server/PacketPlayOutRecipes$Action net/minecraft/network/protocol/game/ClientboundRecipePacket$State
	d $VALUES
net/minecraft/server/TileEntity net/minecraft/world/level/block/entity/BlockEntity
	a LOGGER
	b type
	c blockState
	f remove
	g hasLoggedInvalidStateBefore
	position worldPosition
	world level
	V_ ()V setRemoved
	a (DDD)D distanceToSqr
	a (Ljava/lang/String;)Lnet/minecraft/server/TileEntity; lambda$loadStatic$2
	a (Ljava/lang/String;Lnet/minecraft/server/TileEntityTypes;)Lnet/minecraft/server/TileEntity; lambda$loadStatic$0
	a (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/server/EnumBlockMirror;)V mirror
	a (Lnet/minecraft/server/EnumBlockRotation;)V rotate
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;Lnet/minecraft/server/TileEntity;)Lnet/minecraft/server/TileEntity; lambda$loadStatic$1
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	create (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/TileEntity; loadStatic
	d (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; saveMetadata
	f ()Ljava/lang/Object; lambda$logInvalidState$4
	getBlock ()Lnet/minecraft/server/IBlockData; getBlockState
	getPosition ()Lnet/minecraft/server/BlockPosition; getBlockPos
	getWorld ()Lnet/minecraft/server/World; getLevel
	h ()Ljava/lang/String; lambda$fillCrashReportCategory$3
	hasWorld ()Z hasLevel
	i ()D getViewDistance
	invalidateBlockCache ()V clearCache
	isFilteredNBT ()Z onlyOpCanSetNbt
	n ()V clearRemoved
	q ()Lnet/minecraft/server/TileEntityTypes; getType
	r ()V logInvalidState
	setProperty (II)Z triggerEvent
	setWorld (Lnet/minecraft/server/World;)V setLevel
	update ()V setChanged
net/minecraft/server/PathfinderGoalAvoidTarget net/minecraft/world/entity/ai/goal/AvoidEntityGoal
	a mob
	b toAvoid
	c maxDist
	d path
	e pathNav
	f avoidClass
	g avoidPredicate
	h predicateOnAvoidEntity
	i walkSpeedModifier
	j sprintSpeedModifier
	k avoidEntityTargeting
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLiving;)Z lambda$new$1
	b ()Z canContinueToUse
	b (Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
	c ()V start
	d ()V stop
	e ()V tick
cma net/minecraft/world/level/newbiome/context/package-info
net/minecraft/server/WorldGenSurfaceExtremeHills net/minecraft/world/level/levelgen/surfacebuilders/MountainSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPortalRoom net/minecraft/world/level/levelgen/structure/StrongholdPieces$PortalRoom
	a hasPlacedSpawner
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPortalRoom; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
bvn$1 net/minecraft/world/level/block/piston/PistonBaseBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$level$material$PushReaction
net/minecraft/server/CursorPosition net/minecraft/core/Cursor3D
	a minX
	b minY
	c minZ
	d maxX
	e maxY
	f maxZ
	g x
	h y
	i z
	j started
	a ()Z advance
	b ()I nextX
	c ()I nextY
	d ()I nextZ
	e ()I getNextType
net/minecraft/server/DataWatcherSerializer net/minecraft/network/syncher/EntityDataSerializer
	a (I)Lnet/minecraft/server/DataWatcherObject; createAccessor
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
net/minecraft/server/DefinedStructureTestTrue net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest
	a INSTANCE
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
net/minecraft/server/BiomeBirchForest net/minecraft/world/level/biome/BirchForestBiome
cmy net/minecraft/world/level/newbiome/layer/package-info
net/minecraft/server/WorldGenDecorator net/minecraft/world/level/levelgen/placement/FeatureDecorator
	A HELL_FIRE
	B MAGMA
	C EMERALD_ORE
	D LAVA_LAKE
	E WATER_LAKE
	F DUNGEONS
	G DARK_OAK_TREE
	H ICEBERG
	I LIGHT_GEM_CHANCE
	J END_ISLAND
	K CHORUS_PLANT
	L END_GATEWAY
	M configurationFactory
	a COUNT_HEIGHTMAP
	b COUNT_TOP_SOLID
	c COUNT_HEIGHTMAP_32
	d COUNT_HEIGHTMAP_DOUBLE
	e COUNT_HEIGHT_64
	f NOISE_HEIGHTMAP_32
	g NOISE_HEIGHTMAP_DOUBLE
	h NOPE
	i CHANCE_HEIGHTMAP
	j CHANCE_HEIGHTMAP_DOUBLE
	k CHANCE_PASSTHROUGH
	l CHANCE_TOP_SOLID_HEIGHTMAP
	m COUNT_EXTRA_HEIGHTMAP
	n COUNT_RANGE
	o COUNT_BIASED_RANGE
	p COUNT_VERY_BIASED_RANGE
	q RANDOM_COUNT_RANGE
	r CHANCE_RANGE
	s COUNT_CHANCE_HEIGHTMAP
	t COUNT_CHANCE_HEIGHTMAP_DOUBLE
	u COUNT_DEPTH_AVERAGE
	v TOP_SOLID_HEIGHTMAP
	w TOP_SOLID_HEIGHTMAP_RANGE
	x TOP_SOLID_HEIGHTMAP_NOISE_BIASED
	y CARVING_MASK
	z FOREST_ROCK
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration; createSettings
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenDecorator;)Lnet/minecraft/server/WorldGenDecorator; register
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/WorldGenFeatureConfigured;)Z placeFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/WorldGenFeatureConfigured;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Ljava/util/concurrent/atomic/AtomicBoolean;Lnet/minecraft/server/BlockPosition;)V lambda$placeFeature$0
net/minecraft/server/CommandXp$Unit net/minecraft/server/commands/ExperienceCommand$Type
	c add
	d set
	e name
	f query
	g $VALUES
	a (Lnet/minecraft/server/CommandXp$Unit;)Ljava/util/function/ToIntFunction; access$000
	a (Lnet/minecraft/server/EntityPlayer;)I lambda$static$3
	a (Lnet/minecraft/server/EntityPlayer;Ljava/lang/Integer;)Z lambda$static$2
	b (Lnet/minecraft/server/EntityPlayer;)I lambda$static$1
	b (Lnet/minecraft/server/EntityPlayer;Ljava/lang/Integer;)Z lambda$static$0
cnl net/minecraft/world/level/package-info
net/minecraft/server/PacketPlayInSetJigsaw net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket
	a pos
	b attachementType
	c targetPool
	d finalState
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/MinecraftKey; getTargetPool
	d ()Lnet/minecraft/server/MinecraftKey; getAttachementType
	e ()Ljava/lang/String; getFinalState
net/minecraft/server/EnumItemRarity net/minecraft/world/item/Rarity
	e color
	f $VALUES
cnk net/minecraft/world/level/newbiome/layer/traits/package-info
net/minecraft/server/BlockConduit net/minecraft/world/level/block/ConduitBlock
	a WATERLOGGED
	b SHAPE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/DataConverterBedItem net/minecraft/util/datafix/fixes/BedItemColorFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
cnz net/minecraft/world/level/redstone/Redstone
cny net/minecraft/world/level/pathfinder/package-info
net/minecraft/server/WeightedList net/minecraft/world/entity/ai/behavior/WeightedList
	a entries
	b random
	a ()V shuffle
	a (Lama$a;)V lambda$shuffle$0
	a (Ljava/lang/Object;I)V add
	b ()Ljava/util/stream/Stream; stream
net/minecraft/server/AdvancementRequirements net/minecraft/advancements/RequirementsStrategy
	a (Ljava/util/Collection;)[[Ljava/lang/String; lambda$static$1
	b (Ljava/util/Collection;)[[Ljava/lang/String; lambda$static$0
coa net/minecraft/world/level/redstone/package-info
net/minecraft/server/WorldMapFrame net/minecraft/world/level/saveddata/maps/MapFrame
	a pos
	b rotation
	c entityId
	a ()Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/BlockPosition;)Ljava/lang/String; frameId
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/WorldMapFrame; load
	b ()Lnet/minecraft/server/BlockPosition; getPos
	c ()I getRotation
	d ()I getEntityId
	e ()Ljava/lang/String; getId
coi net/minecraft/world/level/saveddata/maps/package-info
net/minecraft/server/AutoRecipeStackManager net/minecraft/world/entity/player/StackedContents
	a contents
	a ()V clear
	a (I)Lnet/minecraft/server/ItemStack; fromStackingIndex
	a (II)I take
	a (Lnet/minecraft/server/AutoRecipeStackManager;I)Z access$200
	a (Lnet/minecraft/server/AutoRecipeStackManager;II)I access$000
	a (Lnet/minecraft/server/IRecipe;ILit/unimi/dsi/fastutil/ints/IntList;)I getBiggestCraftableStack
	a (Lnet/minecraft/server/IRecipe;Lit/unimi/dsi/fastutil/ints/IntList;)Z canCraft
	a (Lnet/minecraft/server/IRecipe;Lit/unimi/dsi/fastutil/ints/IntList;I)Z canCraft
	a (Lnet/minecraft/server/ItemStack;)V accountSimpleStack
	a (Lnet/minecraft/server/ItemStack;I)V accountStack
	b (I)Z has
	b (II)V put
	b (Lnet/minecraft/server/AutoRecipeStackManager;II)V access$100
	b (Lnet/minecraft/server/IRecipe;Lit/unimi/dsi/fastutil/ints/IntList;)I getBiggestCraftableStack
	b (Lnet/minecraft/server/ItemStack;)V accountStack
	c (Lnet/minecraft/server/ItemStack;)I getStackingIndex
net/minecraft/server/MobEffectUtil net/minecraft/world/effect/MobEffectUtil
	a (Lnet/minecraft/server/EntityLiving;)Z hasDigSpeed
	a (Lnet/minecraft/server/MobEffect;F)Ljava/lang/String; formatDuration
	b (Lnet/minecraft/server/EntityLiving;)I getDigSpeedAmplification
	c (Lnet/minecraft/server/EntityLiving;)Z hasWaterBreathing
net/minecraft/server/EntityInsentient net/minecraft/world/entity/Mob
	b DATA_MOB_FLAGS_ID
	bA handItems
	bB armorItems
	bE pathfindingMalus
	bI delayedLeashHolderId
	bJ leashInfoTag
	bK restrictCenter
	bL restrictRadius
	bt jumpControl
	bz sensing
	c bodyRotationControl
	dropChanceArmor armorDropChances
	dropChanceHand handDropChances
	e ambientSoundTime
	f xpReward
	goalTarget target
	lookController lookControl
	lootTableKey lootTable
	moveController moveControl
	persistent persistenceRequired
	A ()I getAmbientSoundInterval
	B ()V playAmbientSound
	C (Lnet/minecraft/server/Entity;)Z doHurtTarget
	F ()V updateControlFlags
	I ()Z requiresCustomPersistence
	K ()V sendDebugPackets
	M ()I getMaxHeadXRot
	a (B)V handleEntityEvent
	a (FFF)F rotlerp
	a (Lnet/minecraft/server/BlockPosition;)Z isWithinRestriction
	a (Lnet/minecraft/server/BlockPosition;I)V restrictTo
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/DamageSource;Z)V dropFromLootTable
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/Entity;FF)V lookAt
	a (Lnet/minecraft/server/Entity;Z)Z startRiding
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityItem;)V pickUpItem
	a (Lnet/minecraft/server/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkMobSpawnRules
	a (Lnet/minecraft/server/EnumItemSlot;F)V setDropChance
	a (Lnet/minecraft/server/EnumItemSlot;I)Lnet/minecraft/server/Item; getEquipmentForSlot
	a (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;)Z checkSpawnRules
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/Item;)Z isHolding
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumItemSlot;)Z canReplaceCurrentItem
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/PathType;)F getPathfindingMalus
	a (Lnet/minecraft/server/PathType;F)V setPathfindingMalus
	a (ZLnet/minecraft/server/DamageSource;)Lnet/minecraft/server/LootTableInfo$Builder; createLootContext
	aZ ()Ljava/lang/Iterable; getHandSlots
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	aa ()V baseTick
	b (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentEnchantments
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	b (Lnet/minecraft/server/EnumItemSlot;)Lnet/minecraft/server/ItemStack; getItemBySlot
	b (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)Z isValidSlotForItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	ba ()Ljava/lang/Iterable; getArmorSlots
	blockEaten ()V ate
	bv ()I getMaxFallDistance
	c (I)Z isMaxGroupSizeReached
	c (Lnet/minecraft/server/DamageSource;)V playHurtSound
	c (Lnet/minecraft/server/EntityLiving;)Z canAttack
	c (Lnet/minecraft/server/Tag;)V jumpInLiquid
	cG ()Lnet/minecraft/server/MinecraftKey; getLootTable
	ca ()Z isControlledByLocalInstance
	canPickupLoot ()Z canPickUpLoot
	cl ()V registerAttributes
	d (I)V setDelayedLeashHolderId
	d (Lnet/minecraft/server/EnumItemSlot;)F getEquipmentDropChance
	dA ()I getMaxHeadYRot
	dB ()I getHeadRotSpeed
	dC ()I getMaxSpawnClusterSize
	dD ()Z canBeControlledByRider
	dH ()Z isWithinRestriction
	dI ()Lnet/minecraft/server/BlockPosition; getRestrictCenter
	dJ ()F getRestrictRadius
	dK ()V clearRestriction
	dL ()Z hasRestriction
	dM ()V tickLeash
	dR ()Z isAggressive
	dS ()Z isSunBurnTick
	dT ()V restoreLeashFromSave
	dc ()V serverAiStep
	df ()Z isEffectiveAi
	di ()Lnet/minecraft/server/EnumMainHand; getMainArm
	doSpawnEffect ()V spawnAnim
	e (FF)F tickHeadTurn
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	g (Lnet/minecraft/server/ItemStack;)Z canHoldItem
	getControllerJump ()Lnet/minecraft/server/ControllerJump; getJumpControl
	getControllerLook ()Lnet/minecraft/server/ControllerLook; getLookControl
	getControllerMove ()Lnet/minecraft/server/ControllerMove; getMoveControl
	getEntitySenses ()Lnet/minecraft/server/EntitySenses; getSensing
	getExpValue (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	getGoalTarget ()Lnet/minecraft/server/EntityLiving; getTarget
	getSoundAmbient ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	h ()V tick
	h (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumItemSlot; getEquipmentSlotForItem
	initPathfinder ()V registerGoals
	isNoAI ()Z isNoAi
	isPersistent ()Z isPersistenceRequired
	isTypeNotPersistent (D)Z removeWhenFarAway
	k ()V aiStep
	l ()V resetAmbientSoundTime
	mobTick ()V customServerAiStep
	o ()Lnet/minecraft/server/EntityAIBodyControl; createBodyControl
	o (F)V setSpeed
	p (Z)V setLeftHanded
	prepare (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	q (Z)V setAggressive
	r (F)V setZza
	s (F)V setYya
	setCanPickupLoot (Z)V setCanPickUpLoot
	setGoalTarget (Lnet/minecraft/server/EntityLiving;)V setTarget
	setLeashHolder (Lnet/minecraft/server/Entity;Z)V setLeashedTo
	setNoAI (Z)V setNoAi
	setPersistent ()V setPersistenceRequired
	t (F)V setXxa
	u_ ()V defineSynchedData
	unleash (ZZ)V dropLeash
coj net/minecraft/world/level/saveddata/package-info
net/minecraft/server/CrashReportSystemDetails net/minecraft/CrashReportCategory
	a report
	b title
	c entries
	d stackTrace
	a ()[Ljava/lang/StackTraceElement; getStacktrace
	a (DDD)Ljava/lang/String; formatLocation
	a (I)I fillInStackTrace
	a (III)Ljava/lang/String; formatLocation
	a (Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z validateStackTrace
	a (Ljava/lang/String;Ljava/lang/Object;)Lnet/minecraft/server/CrashReportSystemDetails; setDetail
	a (Ljava/lang/String;Ljava/lang/Throwable;)V setDetailError
	a (Ljava/lang/String;Lnet/minecraft/server/CrashReportCallable;)Lnet/minecraft/server/CrashReportSystemDetails; setDetail
	a (Ljava/lang/StringBuilder;)V getDetails
	a (Lnet/minecraft/server/BlockPosition;)Ljava/lang/String; formatLocation
	a (Lnet/minecraft/server/CrashReportSystemDetails;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V populateBlockDetails
	b (I)V trimStacktrace
	b (Lnet/minecraft/server/BlockPosition;)Ljava/lang/String; lambda$populateBlockDetails$0
dlm$1 net/minecraft/client/particle/NoteParticle$1
net/minecraft/server/ArgumentMinecraftKeyRegistered net/minecraft/commands/arguments/ResourceLocationArgument
	a ERROR_UNKNOWN_ID
	b ERROR_UNKNOWN_ADVANCEMENT
	c ERROR_UNKNOWN_RECIPE
	d EXAMPLES
	a ()Lnet/minecraft/server/ArgumentMinecraftKeyRegistered; id
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/MinecraftKey; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/Advancement; getAdvancement
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$getRecipe$3
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IRecipe; getRecipe
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; getId
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
net/minecraft/server/LazyInitVar net/minecraft/util/LazyLoadedValue
	a factory
	b value
	a ()Ljava/lang/Object; get
net/minecraft/server/IDyeable net/minecraft/world/item/DyeableLeatherItem
	a (Lnet/minecraft/server/ItemStack;)Z hasCustomColor
	a (Lnet/minecraft/server/ItemStack;I)V setColor
	a (Lnet/minecraft/server/ItemStack;Ljava/util/List;)Lnet/minecraft/server/ItemStack; dyeArmor
	b (Lnet/minecraft/server/ItemStack;)I getColor
	c (Lnet/minecraft/server/ItemStack;)V clearColor
cop net/minecraft/world/level/storage/LevelStorageException
cor net/minecraft/world/level/storage/LevelSummary
	a levelId
	b levelName
	c lastPlayed
	d sizeOnDisk
	e requiresConversion
	f gameMode
	g hardcore
	h hasCheats
	i worldVersionName
	j worldVersion
	k snapshot
	l generatorType
	a ()Ljava/lang/String; getLevelId
	a (Lcor;)I compareTo
	b ()Ljava/lang/String; getLevelName
	c ()J getSizeOnDisk
	d ()Z isRequiresConversion
	e ()J getLastPlayed
	f ()Lnet/minecraft/server/EnumGamemode; getGameMode
	g ()Z isHardcore
	h ()Z hasCheats
	i ()Lnet/minecraft/server/IChatBaseComponent; getWorldVersionName
	j ()I getWorldVersion
	k ()Z isSnapshot
	l ()Z markVersionInList
	m ()Z askToOpenWorld
	n ()Z isOldCustomizedWorld
	o ()Z shouldBackup
auq$1 net/minecraft/world/entity/monster/Illusioner$1
net/minecraft/server/TagRegistry net/minecraft/tags/TagManager
	blockTags blocks
	entityTags entityTypes
	fluidTags fluids
	itemTags items
	a (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/datafixers/util/Pair;)Lzi$a; lambda$reload$0
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lxd$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lzi$a;)V lambda$reload$1
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/TagRegistry; deserializeFromNetwork
	getBlockTags ()Lnet/minecraft/server/TagsServer; getBlocks
	getEntityTags ()Lnet/minecraft/server/TagsServer; getEntityTypes
	getFluidTags ()Lnet/minecraft/server/TagsServer; getFluids
	getItemTags ()Lnet/minecraft/server/TagsServer; getItems
net/minecraft/server/NPC net/minecraft/world/entity/npc/Npc
net/minecraft/server/WorldGenFeatureTallGrassConfiguration net/minecraft/world/level/levelgen/feature/GrassConfiguration
	a state
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureTallGrassConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/ScoreboardScore net/minecraft/world/scores/Score
	a SCORE_COMPARATOR
	b scoreboard
	c objective
	f locked
	g forceUpdate
	playerName owner
	score count
	a (Lnet/minecraft/server/ScoreboardScore;Lnet/minecraft/server/ScoreboardScore;)I lambda$static$0
	a (Z)V setLocked
	addScore (I)V add
	b (I)V remove
	c ()V reset
	f ()Lnet/minecraft/server/Scoreboard; getScoreboard
	g ()Z isLocked
	getPlayerName ()Ljava/lang/String; getOwner
	incrementScore ()V increment
net/minecraft/server/ArgumentEnchantment net/minecraft/commands/arguments/ItemEnchantmentArgument
	a ERROR_UNKNOWN_ENCHANTMENT
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentEnchantment; enchantment
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/Enchantment; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/Enchantment; getEnchantment
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$parse$1
net/minecraft/server/MobEffectList net/minecraft/world/effect/MobEffect
	a attributeModifiers
	b category
	c color
	d descriptionId
	a (II)Z isDurationEffectTick
	a (ILnet/minecraft/server/AttributeModifier;)D getAttributeModifierValue
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AttributeMapBase;I)V removeAttributeModifiers
	a (Lnet/minecraft/server/IAttribute;Ljava/lang/String;DLnet/minecraft/server/AttributeModifier$Operation;)Lnet/minecraft/server/MobEffectList; addAttributeModifier
	applyInstantEffect (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;Lnet/minecraft/server/EntityLiving;ID)V applyInstantenousEffect
	b ()Ljava/lang/String; getOrCreateDescriptionId
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AttributeMapBase;I)V addAttributeModifiers
	c ()Ljava/lang/String; getDescriptionId
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	e ()Lnet/minecraft/server/MobEffectInfo; getCategory
	fromId (I)Lnet/minecraft/server/MobEffectList; byId
	g ()Ljava/util/Map; getAttributeModifiers
	h ()Z isBeneficial
	isInstant ()Z isInstantenous
	tick (Lnet/minecraft/server/EntityLiving;I)V applyEffectTick
net/minecraft/server/DataConverterTileEntity net/minecraft/util/datafix/fixes/BlockEntityIdFix
	a ID_MAP
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$1
	a (Ljava/util/HashMap;)V lambda$static$0
net/minecraft/server/BehaviorLookInteract net/minecraft/world/entity/ai/behavior/SetLookAndInteract
	a type
	b interactionRangeSqr
	c targetFilter
	d selfFilter
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/EntityLiving;)V lambda$null$3
	a (Lnet/minecraft/server/EntityLiving;)Z isMatchingTarget
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BehaviorController;Ljava/util/List;)V lambda$start$4
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$null$2
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityLiving;)Ljava/util/List; getVisibleEntities
	c (Lnet/minecraft/server/EntityLiving;)Z lambda$new$1
	d (Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
net/minecraft/server/PacketPlayInTileNBTQuery net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery
	a transactionId
	b pos
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getTransactionId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/BlockPosition; getPos
net/minecraft/server/CriterionTriggerEnchantedItem net/minecraft/advancements/critereon/EnchantedItemTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;I)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lap$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
cef$a net/minecraft/world/level/levelgen/feature/ShipwreckFeature$FeatureStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
net/minecraft/server/PathfinderGoalRandomSwim net/minecraft/world/entity/ai/goal/RandomSwimmingGoal
	g ()Lnet/minecraft/server/Vec3D; getPosition
net/minecraft/server/DataConverterBlockRename net/minecraft/util/datafix/fixes/BlockRenameFix
	a name
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	a (Ljava/lang/String;)Ljava/lang/String; fixBlock
cpv net/minecraft/world/level/storage/loot/entries/package-info
net/minecraft/server/CancelledPacketHandleException net/minecraft/server/RunningOnDifferentThreadException
	INSTANCE RUNNING_ON_DIFFERENT_THREAD
net/minecraft/server/WorldGenHellLava net/minecraft/world/level/levelgen/feature/NetherSpringFeature
	a NETHERRACK
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureHellFlowingLavaConfiguration;)Z place
net/minecraft/server/WorldGenDesertWell net/minecraft/world/level/levelgen/feature/DesertWellFeature
	a IS_SAND
	aS sandSlab
	aT sandstone
	aU water
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/ContainerBrewingStand$SlotPotionBottle net/minecraft/world/inventory/BrewingStandMenu$PotionSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	b_ (Lnet/minecraft/server/ItemStack;)Z mayPlaceItem
net/minecraft/server/WorldChunkManagerOverworld net/minecraft/world/level/biome/OverworldBiomeSource
	c noiseBiomeLayer
	d blockBiomeLayer
	e possibleBiomes
	a (II)Lnet/minecraft/server/BiomeBase; getBiome
	a (III)Ljava/util/Set; getBiomesWithin
	a (IIIIZ)[Lnet/minecraft/server/BiomeBase; getBiomeBlock
	a (IIILjava/util/List;)Z containsOnly
	a (IIILjava/util/List;Ljava/util/Random;)Lnet/minecraft/server/BlockPosition; findBiome
	a (Lnet/minecraft/server/StructureGenerator;)Z canGenerateStructure
	b ()Ljava/util/Set; getSurfaceBlocks
	b (II)Lnet/minecraft/server/BiomeBase; getNoiseBiome
	b (Lnet/minecraft/server/StructureGenerator;)Ljava/lang/Boolean; lambda$canGenerateStructure$0
auq$b net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal
	a this$0
	a ()Z canUse
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
auq$a net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal
	a this$0
	e lastTargetId
	a ()Z canUse
	c ()V start
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
net/minecraft/server/CustomFunctionData net/minecraft/server/ServerFunctionManager
	a PATH_PREFIX_LENGTH
	b PATH_SUFFIX_LENGTH
	c LOGGER
	d TICK_FUNCTION_TAG
	e LOAD_FUNCTION_TAG
	g functions
	h isInFunction
	i commandQueue
	j nestedCalls
	k tags
	l ticking
	m postReload
	a ()Lnet/minecraft/server/MinecraftServer; getServer
	a (Ljava/lang/String;)Z lambda$onResourceManagerReload$0
	a (Lnet/minecraft/server/CustomFunction;Ljava/lang/Throwable;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/CustomFunction; addFunction
	a (Lnet/minecraft/server/CustomFunction;Lnet/minecraft/server/CommandListenerWrapper;)I execute
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;)Ljava/util/List; readLinesAsync
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; get
	a (Lnet/minecraft/server/MinecraftKey;Ljava/util/List;)Lnet/minecraft/server/CustomFunction; lambda$onResourceManagerReload$2
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/CustomFunction;Ljava/lang/Throwable;)Lnet/minecraft/server/CustomFunction; lambda$onResourceManagerReload$3
	b ()I getCommandLimit
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;)Ljava/util/List; lambda$onResourceManagerReload$1
	c ()Ljava/util/Map; getFunctions
	d ()Lcom/mojang/brigadier/CommandDispatcher; getDispatcher
	f ()Lnet/minecraft/server/CommandListenerWrapper; getGameLoopSender
	g ()Lnet/minecraft/server/CommandListenerWrapper; getCompilationContext
	h ()Lnet/minecraft/server/Tags; getTags
net/minecraft/server/PacketPlayOutMount net/minecraft/network/protocol/game/ClientboundSetPassengersPacket
	a vehicle
	b passengers
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()[I getPassengers
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getVehicle
net/minecraft/server/CommandGamemode net/minecraft/server/commands/GameModeCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lnet/minecraft/server/EnumGamemode;)I setMode
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EnumGamemode;)V logGamemodeChange
	a (Lnet/minecraft/server/EnumGamemode;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lnet/minecraft/server/EnumGamemode;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
cqu net/minecraft/world/level/storage/loot/functions/package-info
net/minecraft/server/WorldGenIglooPiece net/minecraft/world/level/levelgen/structure/IglooPieces
	a STRUCTURE_LOCATION_IGLOO
	b STRUCTURE_LOCATION_LADDER
	c STRUCTURE_LOCATION_LABORATORY
	d PIVOTS
	e OFFSETS
	a ()Ljava/util/Map; access$000
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)V addPieces
	b ()Ljava/util/Map; access$100
	c ()Lnet/minecraft/server/MinecraftKey; access$200
eap$a$1 net/minecraft/client/sounds/SoundManager$Preparations$1
	a val$soundLocation
	b val$sound
	c this$0
	a ()Ldzm; getSound
	a (Leam;)V preloadIfRequired
	e ()I getWeight
	k ()Ljava/lang/Object; getSound
cqv net/minecraft/world/level/storage/loot/package-info
net/minecraft/server/DragonControllerLandingFly net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase
	b NEAR_EGG_TARGETING
	c currentPath
	d targetLocation
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
bqx$1 net/minecraft/world/level/block/RailState$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
dlm$a net/minecraft/client/particle/NoteParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/FluidTypeLava net/minecraft/world/level/material/LavaFluid
	a ()Lnet/minecraft/server/TextureType; getRenderLayer
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/server/FluidType;)Z isSame
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V fizz
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V beforeDestroyingBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/Fluid;)V spreadTo
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z hasFlammableNeighbours
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Lnet/minecraft/server/Fluid;)I getSpreadDelay
	b ()Lnet/minecraft/server/Item; getBucket
	b (Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/IBlockData; createLegacyBlock
	b (Lnet/minecraft/server/IWorldReader;)I getSlopeFindDistance
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isFlammable
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Ljava/util/Random;)V randomTick
	c (Lnet/minecraft/server/IWorldReader;)I getDropOff
	d ()F getExplosionResistance
	e ()Lnet/minecraft/server/FluidType; getFlowing
	f ()Lnet/minecraft/server/FluidType; getSource
	g ()Z canConvertToSource
	j ()Lnet/minecraft/server/ParticleParam; getDripParticle
	k ()Z isRandomlyTicking
cra net/minecraft/world/level/storage/loot/parameters/package-info
azg$2 net/minecraft/world/inventory/HorseInventoryMenu$2
	a val$horse
	b this$0
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	b ()Z isActive
azg$1 net/minecraft/world/inventory/HorseInventoryMenu$1
	a val$horse
	b this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	b ()Z isActive
net/minecraft/server/VoxelShapeCubeMerger net/minecraft/world/phys/shapes/DiscreteCubeMerger
	a result
	b firstSize
	c secondSize
	d gcd
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Lcsu$a;)Z forMergedIndexes
net/minecraft/server/InsensitiveStringMap net/minecraft/util/InsensitiveStringMap
	a map
	a (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; put
net/minecraft/server/WorldGenSurfaceComposite net/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder
	a surfaceBuilder
	b config
	a ()Lnet/minecraft/server/WorldGenSurfaceConfiguration; getSurfaceBuilderConfiguration
	a (J)V initNoise
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenSurfaceComposite; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJ)V apply
net/minecraft/server/WorldGenDecoratorHeight64 net/minecraft/world/level/levelgen/placement/CountHeight64Decorator
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
dam$a net/minecraft/client/gui/components/toasts/Toast$Visibility
	a SHOW
	b HIDE
	c soundEvent
	d $VALUES
	a (Leap;)V playSound
net/minecraft/server/WorldGenDecoratorNoiseHeight32 net/minecraft/world/level/levelgen/placement/NoiseHeightmap32Decorator
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorNoiseConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
crt net/minecraft/world/level/storage/package-info
adg$a net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection
	e leaveIds
	f logIds
	g stateToIdMap
	a ()Z skippable
	a (I)Z isLog
	a (III)V setDistance
	a (Ladg$a;I)I access$200
	a (Ladg$a;III)V access$300
	a (Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/datafixers/Dynamic; makeLeafTag
	b (I)Z isLeaf
	d (I)I getDistance
crs net/minecraft/world/level/storage/loot/predicates/package-info
atn$1 net/minecraft/world/entity/decoration/ItemFrame$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
cru net/minecraft/world/level/storage/threaded/package-info
adg$b net/minecraft/util/datafix/fixes/LeavesFix$Section
	a paletteFinder
	b palette
	c index
	d storage
	e blockStateType
	a ()Z skippable
	a (Lcom/mojang/datafixers/Dynamic;)V readStorage
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; write
	a (Ljava/lang/String;ZI)I getStateId
	a (Ljava/util/List;)Ljava/util/List; lambda$new$0
	b ()Z isSkippable
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/util/Pair; lambda$write$2
	c ()I getIndex
	c (I)I getBlock
	c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$write$1
net/minecraft/server/ITileInventory net/minecraft/world/MenuProvider
	getScoreboardDisplayName ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/BiomeRedwoodTaigaHillsMutated net/minecraft/world/level/biome/GiantSpruceTaigaHillsMutatedBiome
csa net/minecraft/world/level/timers/package-info
net/minecraft/server/FurnaceRecipe net/minecraft/world/item/crafting/SmeltingRecipe
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
csb net/minecraft/world/package-info
net/minecraft/server/PacketPlayOutScoreboardDisplayObjective net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket
	a slot
	b objectiveName
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getSlot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/lang/String; getObjectiveName
net/minecraft/server/DataConverterMaterialId net/minecraft/util/datafix/fixes/ItemIdFix
	ID_MAPPING ITEM_NAMES
	a (I)Ljava/lang/String; getItem
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Pair; lambda$null$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$2
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	a (Ljava/lang/Integer;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
cij$1 net/minecraft/world/level/levelgen/structure/MineShaftPieces$1
	a $SwitchMap$net$minecraft$world$level$levelgen$feature$MineshaftFeature$Type
	b $SwitchMap$net$minecraft$core$Direction
csg net/minecraft/world/phys/PosAndRot
	a pos
	b xRot
	c yRot
	a ()Lnet/minecraft/server/Vec3D; pos
	b ()F xRot
	c ()F yRot
net/minecraft/server/BlockLogAbstract net/minecraft/world/level/block/LogBlock
	b woodMaterialColor
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MaterialMapColor; getMapColor
net/minecraft/server/PacketPlayInUseItem net/minecraft/network/protocol/game/ServerboundUseItemOnPacket
	a blockHit
	b hand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/EnumHand; getHand
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/MovingObjectPositionBlock; getHitResult
net/minecraft/server/PacketPlayOutUpdateAttributes$AttributeSnapshot net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot
	a this$0
	b name
	c base
	d modifiers
	a ()Ljava/lang/String; getName
	b ()D getBase
	c ()Ljava/util/Collection; getModifiers
net/minecraft/server/PlayerInteractManager net/minecraft/server/level/ServerPlayerGameMode
	c LOGGER
	currentTick gameTicks
	e isDestroyingBlock
	g destroyPos
	gamemode gameModeForPlayer
	i hasDelayedDestroy
	j delayedDestroyPos
	k delayedTickStart
	l lastSentState
	lastDigTick destroyProgressStart
	world level
	a ()V tick
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType;)V destroyAndAck
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType;Lnet/minecraft/server/EnumDirection;I)V handleBlockBreakAction
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; useItem
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; useItemOn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)F incrementDestroyProgress
	a (Lnet/minecraft/server/WorldServer;)V setLevel
	b (Lnet/minecraft/server/EnumGamemode;)V updateGameMode
	breakBlock (Lnet/minecraft/server/BlockPosition;)Z destroyBlock
	c ()Z isSurvival
	getGameMode ()Lnet/minecraft/server/EnumGamemode; getGameModeForPlayer
	setGameMode (Lnet/minecraft/server/EnumGamemode;)V setGameModeForPlayer
csj net/minecraft/world/phys/package-info
net/minecraft/server/WorldGenScatteredPiece net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece
	a width
	b height
	c depth
	d heightPosition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;I)Z updateAverageGroundHeight
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/PathfinderAbstract net/minecraft/world/level/pathfinder/NodeEvaluator
	a level
	b mob
	c nodes
	d entityWidth
	e entityHeight
	f entityDepth
	g canPassDoors
	h canOpenDoors
	i canFloat
	a ()V done
	a (DDD)Lnet/minecraft/server/PathDestination; getGoal
	a (III)Lnet/minecraft/server/PathPoint; getNode
	a (IIII)Lnet/minecraft/server/PathPoint; lambda$getNode$0
	a (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;IIILnet/minecraft/server/EntityInsentient;IIIZZ)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/EntityInsentient;)V prepare
	a (Z)V setCanPassDoors
	a ([Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)I getNeighbors
	b ()Lnet/minecraft/server/PathPoint; getStart
	b (Z)V setCanOpenDoors
	c ()Z canPassDoors
	c (Z)V setCanFloat
	d ()Z canOpenDoors
	e ()Z canFloat
net/minecraft/server/BlockCoralFanWallAbstract net/minecraft/world/level/block/BaseCoralWallFanBlock
	a FACING
	c SHAPES
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
net/minecraft/server/PotionBrewer net/minecraft/world/item/alchemy/PotionBrewing
	a POTION_MIXES
	b CONTAINER_MIXES
	c ALLOWED_CONTAINERS
	d ALLOWED_CONTAINER
	a ()V bootStrap
	a (Lnet/minecraft/server/Item;)V addContainer
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/Item;Lnet/minecraft/server/Item;)V addContainerRecipe
	a (Lnet/minecraft/server/ItemStack;)Z isIngredient
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z hasMix
	a (Lnet/minecraft/server/PotionRegistry;)Z isBrewablePotion
	a (Lnet/minecraft/server/PotionRegistry;Lnet/minecraft/server/Item;Lnet/minecraft/server/PotionRegistry;)V addMix
	b (Lnet/minecraft/server/ItemStack;)Z isContainerIngredient
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z hasContainerMix
	c (Lnet/minecraft/server/ItemStack;)Z isPotionIngredient
	c (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z hasPotionMix
	d (Lnet/minecraft/server/ItemStack;)Z lambda$static$0
	d (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; mix
net/minecraft/server/ServerPing$ServerPingPlayerSample net/minecraft/network/protocol/status/ServerStatus$Players
	a maxPlayers
	b numPlayers
	c sample
	a ()I getMaxPlayers
	a ([Lcom/mojang/authlib/GameProfile;)V setSample
	b ()I getNumPlayers
	c ()[Lcom/mojang/authlib/GameProfile; getSample
net/minecraft/server/ICrafting net/minecraft/world/inventory/ContainerListener
	a (Lnet/minecraft/server/Container;ILnet/minecraft/server/ItemStack;)V slotChanged
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/NonNullList;)V refreshContainer
net/minecraft/server/CommandTell net/minecraft/server/commands/MsgCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/IChatBaseComponent;)I sendMessage
csw net/minecraft/world/phys/shapes/IntPointRange
	a parts
	b origin
net/minecraft/server/WorldGenFeatureBlock net/minecraft/world/level/levelgen/feature/SimpleBlockFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureBlockConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/RandomPositionGenerator net/minecraft/world/entity/ai/util/RandomPos
	a (Ljava/util/Random;IILnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/BlockPosition; getRandomDelta
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityCreature;)Lnet/minecraft/server/BlockPosition; moveAboveSolid
	a (Lnet/minecraft/server/EntityCreature;II)Lnet/minecraft/server/Vec3D; getPos
	a (Lnet/minecraft/server/EntityCreature;IILjava/util/function/ToDoubleFunction;)Lnet/minecraft/server/Vec3D; getLandPos
	a (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/EnumDirection;D)Lnet/minecraft/server/Vec3D; getPosTowards
	a (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; getPosTowards
	a (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/Vec3D; getPosTowards
	a (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/Vec3D;ZDLjava/util/function/ToDoubleFunction;)Lnet/minecraft/server/Vec3D; generateRandomPos
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityCreature;)Z isWaterDestination
	b (Lnet/minecraft/server/EntityCreature;II)Lnet/minecraft/server/Vec3D; getLandPos
	b (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; getLandPosAvoid
	c (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; getPosAvoid
	d (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; generateRandomPos
cpx$a net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionExplosionDecay; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/EnumProtocolDirection net/minecraft/network/protocol/PacketFlow
	c $VALUES
	a ()Lnet/minecraft/server/EnumProtocolDirection; getOpposite
ctd net/minecraft/world/phys/shapes/WorldRegionIndirectVoxelShape
	b x
	c y
	d z
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
net/minecraft/server/MovingObjectPositionEntity net/minecraft/world/phys/EntityHitResult
	b entity
	c ()Lnet/minecraft/server/MovingObjectPosition$EnumMovingObjectType; getType
cte net/minecraft/world/phys/shapes/package-info
net/minecraft/server/WorldGenFeatureBlockConfiguration net/minecraft/world/level/levelgen/feature/SimpleBlockConfiguration
	a toPlace
	b placeOn
	c placeIn
	d placeUnder
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureBlockConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/IBlockData;)Ljava/lang/Object; lambda$serialize$2
	b (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/IBlockData;)Ljava/lang/Object; lambda$serialize$1
	c (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/IBlockData;)Ljava/lang/Object; lambda$serialize$0
net/minecraft/server/IChunkAccess net/minecraft/world/level/chunk/ChunkAccess
	a ()Lnet/minecraft/server/ChunkSection; getHighestSection
	a (II)Z isYSpaceEmpty
	a (Ljava/util/Map;)V setAllStarts
	a (Lnet/minecraft/server/BlockPosition;IZ)I getRawBrightness
	a (Lnet/minecraft/server/Entity;)V addEntity
	a (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap; getHeightmap
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/HeightMap$Type;[J)V setHeightmap
	a (Lnet/minecraft/server/LightEngine;)V setLightEngine
	a (Lnet/minecraft/server/NBTTagCompound;)V setBlockEntityNbt
	a (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/BitSet; getCarvingMask
	a (SI)V addPackedPostProcess
	a ([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList; getOrCreateOffsetList
	a ([Lnet/minecraft/server/BiomeBase;)V setBiomes
	b ()I getHighestSectionPosition
	b (J)V setInhabitedTime
	b (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap; getOrCreateHeightmapUnprimed
	b (Z)V setLightCorrect
	c ()Ljava/util/Set; getBlockEntitiesPos
	c (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/BlockPosition; getHeighestPosition
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	f ()Ljava/util/Collection; getHeightmaps
	f (Lnet/minecraft/server/BlockPosition;)V markPosForPostprocessing
	getBiomeIndex ()[Lnet/minecraft/server/BiomeBase; getBiomes
	getChunkStatus ()Lnet/minecraft/server/ChunkStatus; getStatus
	h ()Ljava/util/Map; getAllStarts
	i (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbt
	isNeedsSaving ()Z isUnsaved
	j (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbtForSaving
	l ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
	m ()Ljava/util/stream/Stream; getLights
	n ()Lnet/minecraft/server/TickList; getBlockTicks
	o ()Lnet/minecraft/server/TickList; getLiquidTicks
	p ()Lnet/minecraft/server/ChunkConverter; getUpgradeData
	q ()J getInhabitedTime
	r ()Z isLightCorrect
	removeTileEntity (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	setLastSaved (J)V setLastSaveTime
	setNeedsSaving (Z)V setUnsaved
	setTileEntity (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	setType (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
ctn net/minecraft/world/scores/package-info
ctm net/minecraft/world/scores/criteria/package-info
ctp com/mojang/blaze3d/audio/Channel
	a LOGGER
	b source
	c initialized
	d streamingBufferSize
	e stream
	a ()Lctp; create
	a (F)V setPitch
	a (I)V pumpBuffers
	a (Lctu;)V attachStaticBuffer
	a (Leai;)V attachBufferStream
	a (Ljavax/sound/sampled/AudioFormat;I)I calculateBufferSize
	a (Lnet/minecraft/server/Vec3D;)V setSelfPosition
	a (Z)V setLooping
	b ()V destroy
	b (F)V setVolume
	b (I)V lambda$pumpBuffers$1
	b (Z)V setRelative
	c ()V play
	c (F)V linearAttenuation
	c (I)V lambda$attachStaticBuffer$0
	d ()V pause
	e ()V unpause
	f ()V stop
	g ()Z stopped
	h ()V disableAttenuation
	i ()V updateStream
	j ()I getState
	k ()I removeProcessedBuffers
net/minecraft/server/PacketPlayInTabComplete net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket
	a id
	b command
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/lang/String; getCommand
dbq$a net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList
	a this$0
	a ()V resetRows
	a (Ldbq$a$a;)V setSelected
	a (Ldbq$a;)Lcyc; access$200
cto com/mojang/blaze3d/Blaze3D
	a ()V youJustLostTheGame
	b ()D getTime
ctr com/mojang/blaze3d/audio/Listener
	a UP
	b gain
	a ()F getGain
	a (F)V setGain
	a (Lnet/minecraft/server/Vec3D;)V setListenerPosition
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;)V setListenerOrientation
	b ()V reset
ctq com/mojang/blaze3d/audio/Library
	a LOGGER
	b device
	c context
	d EMPTY
	e staticChannels
	f streamingChannels
	g listener
	a ()V init
	a (Lctp;)V releaseChannel
	a (Lctq$c;)Lctp; acquireChannel
	b ()V cleanup
	c ()Lctr; getListener
	d ()Ljava/lang/String; getDebugString
	e ()I getChannelCount
	f ()J tryOpenDevice
ctt com/mojang/blaze3d/audio/OpenAlUtil
	a LOGGER
	a (I)Ljava/lang/String; alErrorToString
	a (JLjava/lang/String;)Z checkALCError
	a (Ljava/lang/String;)Z checkALError
	a (Ljavax/sound/sampled/AudioFormat;)I audioFormatToOpenAl
	b (I)Ljava/lang/String; alcErrorToString
cts com/mojang/blaze3d/audio/OggAudioStream
	a handle
	b audioFormat
	c input
	d buffer
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
	a (Lcts$a;)Z readFrame
	a (Ljava/nio/FloatBuffer;Lcts$a;)V convertMono
	a (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;Lcts$a;)V convertStereo
	b ()Ljava/nio/ByteBuffer; readAll
	c ()Z refillFromStream
	d ()V forwardBuffer
ctv com/mojang/blaze3d/font/GlyphInfo
	a ()F getBearingX
	a (Z)F getAdvance
	b ()F getBoldOffset
	c ()F getShadowOffset
net/minecraft/server/PathfinderGoalBreakDoor net/minecraft/world/entity/ai/goal/BreakDoorGoal
	a breakTime
	b lastBreakProgress
	c doorBreakTime
	g validDifficulties
	a ()Z canUse
	a (Lnet/minecraft/server/EnumDifficulty;)Z isValidDifficulty
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	f ()I getDoorBreakTime
ctu com/mojang/blaze3d/audio/SoundBuffer
	a data
	b format
	c hasAlBuffer
	d alBuffer
	a ()Ljava/util/OptionalInt; getAlBuffer
	b ()V discardAlBuffer
	c ()Ljava/util/OptionalInt; releaseAlBuffer
net/minecraft/server/BehaviorCareer net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/VillagePlaceType;)V lambda$start$2
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/VillagerProfession;)V lambda$null$1
	a (Lnet/minecraft/server/VillagePlaceType;Lnet/minecraft/server/VillagerProfession;)Z lambda$null$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
ctx com/mojang/blaze3d/font/RawGlyph
	a (II)V upload
	d ()I getPixelWidth
	e ()I getPixelHeight
	f ()Z isColored
	g ()F getOversample
	h ()F getLeft
	i ()F getRight
	j ()F getUp
	k ()F getDown
	l ()F getBearingY
ctw com/mojang/blaze3d/font/GlyphProvider
	a (C)Lctx; getGlyph
ctz com/mojang/blaze3d/pipeline/RenderTarget
	a width
	b height
	c viewWidth
	d viewHeight
	e useDepth
	f frameBufferId
	g colorTextureId
	h depthBufferId
	i clearChannels
	j filterMode
	a ()V destroyBuffers
	a (FFFF)V setClearColor
	a (I)V setFilterMode
	a (II)V blitToScreen
	a (IIZ)V resize
	a (Z)V bindWrite
	b ()V checkStatus
	b (IIZ)V createBuffers
	b (Z)V clear
	c ()V bindRead
	c (IIZ)V blitToScreen
	d ()V unbindRead
	e ()V unbindWrite
cty com/mojang/blaze3d/font/TrueTypeGlyphProvider
	a LOGGER
	b font
	c oversample
	d skip
	e shiftX
	f shiftY
	g pointScale
	h ascent
	a (C)Lctx; getGlyph
	a (I)V lambda$new$0
	a (Lcty;)F access$100
	a (Ljava/nio/ByteBuffer;)Lorg/lwjgl/stb/STBTTFontinfo; getStbttFontinfo
	b (C)Lcty$a; getGlyph
	b (Lcty;)F access$200
	c (Lcty;)F access$300
	d (Lcty;)F access$400
	e (Lcty;)Lorg/lwjgl/stb/STBTTFontinfo; access$500
	f (Lcty;)F access$600
net/minecraft/server/EntityRabbit$GroupDataRabbit net/minecraft/world/entity/animal/Rabbit$RabbitGroupData
	a rabbitType
net/minecraft/server/ArgumentPosition net/minecraft/commands/arguments/coordinates/BlockPosArgument
	a ERROR_NOT_LOADED
	b ERROR_OUT_OF_WORLD
	c EXAMPLES
	a ()Lnet/minecraft/server/ArgumentPosition; blockPos
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/BlockPosition; getLoadedBlockPos
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/BlockPosition; getOrLoadBlockPos
net/minecraft/server/ItemMinecart net/minecraft/world/item/MinecartItem
	a DISPENSE_ITEM_BEHAVIOR
	b type
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemMinecart;)Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; access$000
dcc$a net/minecraft/client/gui/screens/MenuScreens$ScreenConstructor
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/Containers;Lcyc;I)V fromPacket
cua com/mojang/blaze3d/platform/ClipboardManager
	a clipboardScratchBuffer
	a (JLjava/lang/String;)V setClipboard
	a (JLjava/nio/ByteBuffer;Ljava/lang/String;)V setClipboard
	a (JLorg/lwjgl/glfw/GLFWErrorCallbackI;)Ljava/lang/String; getClipboard
dbq$1 net/minecraft/client/gui/screens/CreateFlatWorldScreen$1
net/minecraft/server/NBTTagByteArray net/minecraft/nbt/ByteArrayTag
	a ()B getId
	a (I)Lnet/minecraft/server/NBTTagByte; get
	a (ILnet/minecraft/server/NBTBase;)Z setTag
	a (ILnet/minecraft/server/NBTTagByte;)Lnet/minecraft/server/NBTTagByte; set
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)V load
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (Ljava/util/List;)[B toArray
	a_ ()I getElementType
	b ()Lnet/minecraft/server/NBTBase; copy
	b (I)Lnet/minecraft/server/NBTTagByte; remove
	b (ILnet/minecraft/server/NBTBase;)Z addTag
	b (ILnet/minecraft/server/NBTTagByte;)V add
	c (I)Lnet/minecraft/server/NBTBase; remove
	c (ILnet/minecraft/server/NBTBase;)V add
	d (ILnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; set
	getBytes ()[B getAsByteArray
cuc com/mojang/blaze3d/platform/DisplayData
	a width
	b height
	c fullscreenWidth
	d fullscreenHeight
	e isFullscreen
net/minecraft/server/WorldGenFeatureRandomScattered net/minecraft/world/level/levelgen/feature/RandomScatteredFeature
	a (Lnet/minecraft/server/ChunkGenerator;)I getSpacing
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;II)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IIII)Lnet/minecraft/server/ChunkCoordIntPair; getPotentialFeatureChunkFromLocationWithOffset
	b (Lnet/minecraft/server/ChunkGenerator;)I getSeparation
	getSeed ()I getRandomSalt
cub com/mojang/blaze3d/platform/DebugMemoryUntracker
	a UNTRACK
	a ()Ljava/lang/invoke/MethodHandle; lambda$static$0
	a (J)V untrack
	a (Lorg/lwjgl/system/Pointer;)V untrack
cue com/mojang/blaze3d/platform/InputConstants
	a UNKNOWN
	b glfwRawMouseMotionSupported
	c GLFW_RAW_MOUSE_MOTION
	a ()Z isRawMouseInputSupported
	a (I)Ljava/lang/String; translateKeyCode
	a (II)Lcue$a; getKey
	a (JI)Z isKeyDown
	a (JIDD)V grabOrReleaseMouse
	a (JLorg/lwjgl/glfw/GLFWCursorPosCallbackI;Lorg/lwjgl/glfw/GLFWMouseButtonCallbackI;Lorg/lwjgl/glfw/GLFWScrollCallbackI;)V setupMouseCallbacks
	a (JLorg/lwjgl/glfw/GLFWKeyCallbackI;Lorg/lwjgl/glfw/GLFWCharModsCallbackI;)V setupKeyboardCallbacks
	a (JZ)V updateRawMouseInput
	a (Ljava/lang/String;)Lcue$a; getKey
	b (I)Ljava/lang/String; translateScanCode
net/minecraft/server/BlockRotatable net/minecraft/world/level/block/RotatedPillarBlock
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
cud com/mojang/blaze3d/platform/GlDebug
	a BYTE_BUFFER
	b FLOAT_BUFFER
	c INT_BUFFER
	d LOGGER
	e NEWLINE_JOINER
	f STATEMENT_JOINER
	g BY_ID
	h DEBUG_LEVELS
	i DEBUG_LEVELS_ARB
	j SAVED_STATES
	a (I)Ljava/lang/String; printUnknownToken
	a (IIIIIJJ)V printDebugLog
	a (ILjava/lang/String;)V setup
	a (IZ)V enableDebugCallback
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; lambda$setup$0
	b (I)Ljava/lang/String; sourceToString
	c (I)Ljava/lang/String; typeToString
	d (I)Ljava/lang/String; severityToString
cug com/mojang/blaze3d/platform/MemoryTracker
	a (I)I genLists
	a (II)V releaseLists
	b (I)V releaseList
	c (I)Ljava/nio/ByteBuffer; createByteBuffer
	d (I)Ljava/nio/FloatBuffer; createFloatBuffer
net/minecraft/server/WorldGenSurfaceMesaForest net/minecraft/world/level/levelgen/surfacebuilders/WoodedBadlandsSurfaceBuilder
	S WHITE_TERRACOTTA
	T ORANGE_TERRACOTTA
	U TERRACOTTA
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/Advancements net/minecraft/advancements/AdvancementList
	a LOGGER
	c roots
	d tasks
	e listener
	a ()V clear
	a (Ljava/util/Map;)V add
	a (Ljava/util/Set;)V remove
	a (Lnet/minecraft/server/Advancement;)V remove
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Advancement; get
	a (Lr$a;)V setListener
	b ()Ljava/lang/Iterable; getRoots
	c ()Ljava/util/Collection; getAllAdvancements
cuf com/mojang/blaze3d/platform/Lighting
	a BUFFER
	b LIGHT_0
	c LIGHT_1
	a ()V turnOff
	a (FFF)Lnet/minecraft/server/Vector3fa; createVector
	a (FFFF)Ljava/nio/FloatBuffer; getBuffer
	b ()V turnOn
	c ()V turnOnGui
cui com/mojang/blaze3d/platform/MonitorCreator
cuh com/mojang/blaze3d/platform/Monitor
	a monitor
	b videoModes
	c currentMode
	d x
	e y
	a ()Lcun; getCurrentMode
	a (I)Lcun; getMode
	a (Lcun;)I getVideoModeIndex
	a (Ljava/util/Optional;)Lcun; getPreferredVidMode
	b ()I getX
	c ()I getY
	d ()I getModeCount
	e ()J getMonitor
	f ()V refreshVideoModes
cuk com/mojang/blaze3d/platform/PngInfo
	a width
	b height
	a (Ljava/io/InputStream;)Lcuk$a; createCallbacks
cuj com/mojang/blaze3d/platform/NativeImage
	a OPEN_OPTIONS
	b format
	c width
	d height
	e useStbFree
	f pixels
	g size
	a ()I getWidth
	a (II)I getPixelRGBA
	a (III)V setPixelRGBA
	a (IIIII)V fillRect
	a (IIIIIIIZ)V upload
	a (IIIIIIIZZZ)V upload
	a (IIIIIIZZ)V copyRect
	a (IIIILcuj;)V resizeSubRectTo
	a (IIIZ)V upload
	a (IZ)V downloadTexture
	a (Lcuj$a;Ljava/io/InputStream;)Lcuj; read
	a (Lcuj$a;Ljava/nio/ByteBuffer;)Lcuj; read
	a (Lcuj;)V copyFrom
	a (Ljava/io/File;)V writeToFile
	a (Ljava/io/InputStream;)Lcuj; read
	a (Ljava/lang/String;)V writeToFile
	a (Ljava/nio/ByteBuffer;)Lcuj; read
	a (Ljava/nio/file/Path;)V writeToFile
	a (Lorg/lwjgl/stb/STBTTFontinfo;IIIFFFFII)V copyFromFont
	a (Z)V downloadFrameBuffer
	a (ZZ)V setFilter
	b ()I getHeight
	b (II)B getLuminanceOrAlpha
	b (III)V blendPixel
	b (Ljava/lang/String;)Lcuj; fromBase64
	b (Z)V setClamp
	c ()Lcuj$a; format
	d ()[I makePixelArray
	e ()V flipY
	f ()V untrack
	g ()V checkAllocated
cum com/mojang/blaze3d/platform/SnooperAccess
cul com/mojang/blaze3d/platform/ScreenManager
	a monitors
	b monitorCreator
	a ()V shutdown
	a (III)I clamp
	a (J)Lcuh; getMonitor
	a (JI)V onMonitorChange
	a (Lcuo;)Lcuh; findBestMonitor
cuo com/mojang/blaze3d/platform/Window
	a LOGGER
	b defaultErrorCallback
	c minecraft
	d screenManager
	e window
	f windowedX
	g windowedY
	h windowedWidth
	i windowedHeight
	j preferredFullscreenVideoMode
	k fullscreen
	l actuallyFullscreen
	m x
	n y
	o width
	p height
	q framebufferWidth
	r framebufferHeight
	s guiScaledWidth
	t guiScaledHeight
	u guiScale
	v errorSection
	w dirty
	x lastDrawTime
	y framerateLimit
	z vsync
	a ()V setDefaultGlErrorCallback
	a (D)V setGuiScale
	a (I)V setFramerateLimit
	a (IJ)V defaultErrorCallback
	a (IZ)I calculateScale
	a (JII)V onMove
	a (JZ)V onFocus
	a (Ljava/io/InputStream;Ljava/io/InputStream;)V setIcon
	a (Ljava/io/InputStream;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;)Ljava/nio/ByteBuffer; readIconPixels
	a (Ljava/lang/String;)V setGlErrorSection
	a (Ljava/util/Optional;)V setPreferredFullscreenVideoMode
	a (Ljava/util/function/BiConsumer;)V checkGlfwError
	a (Z)V setupGuiState
	b ()I getFramerateLimit
	b (I)V setWidth
	b (IJ)V bootCrash
	b (JII)V onFramebufferResize
	b (Z)V updateVsync
	c ()V limitDisplayFPS
	c (I)V setHeight
	c (JII)V onResize
	c (Z)V updateDisplay
	d ()Ljava/util/Optional; getPreferredFullscreenVideoMode
	d (Z)V updateRawMouseInput
	e ()V changeFullscreenVideoMode
	e (Z)V updateFullscreen
	f ()V toggleFullScreen
	g ()J getWindow
	h ()Z isFullscreen
	i ()I getWidth
	j ()I getHeight
	k ()V pollEventQueue
	l ()I getScreenWidth
	m ()I getScreenHeight
	n ()I getGuiScaledWidth
	o ()I getGuiScaledHeight
	p ()I getX
	q ()I getY
	r ()D getGuiScale
	s ()Lcuh; findBestMonitor
	t ()V setBootGlErrorCallback
	u ()V refreshFramebufferSize
	v ()V setMode
cun com/mojang/blaze3d/platform/VideoMode
	a width
	b height
	c redBits
	d greenBits
	e blueBits
	f refreshRate
	g PATTERN
	a ()I getWidth
	a (Ljava/lang/String;)Ljava/util/Optional; read
	b ()I getHeight
	c ()I getRedBits
	d ()I getGreenBits
	e ()I getBlueBits
	f ()I getRefreshRate
	g ()Ljava/lang/String; write
cuq com/mojang/blaze3d/shaders/AbstractUniform
	a (F)V set
	a (FF)V set
	a (FFF)V set
	a (FFFF)V set
	a (IIII)V setSafe
	a (Lcve;)V set
	a ([F)V set
	b (FFFF)V setSafe
cup com/mojang/blaze3d/platform/WindowEventHandler
	a ()V resizeDisplay
	a (Z)V setWindowActive
	b (Z)V updateDisplay
cus com/mojang/blaze3d/shaders/Effect
	a ()I getId
	b ()V markDirty
	c ()Lcut; getVertexProgram
	d ()Lcut; getFragmentProgram
cur com/mojang/blaze3d/shaders/BlendMode
	a lastApplied
	b srcColorFactor
	c srcAlphaFactor
	d dstColorFactor
	e dstAlphaFactor
	f blendFunc
	g separateBlend
	h opaque
	a ()V apply
	a (Ljava/lang/String;)I stringToBlendFunc
	b ()Z isOpaque
	b (Ljava/lang/String;)I stringToBlendFactor
cuu com/mojang/blaze3d/shaders/ProgramManager
	a LOGGER
	b instance
	a ()V createInstance
	a (Lcus;)V releaseProgram
	b ()Lcuu; getInstance
	b (Lcus;)V linkProgram
	c ()I createProgram
cut com/mojang/blaze3d/shaders/Program
	a type
	b name
	c id
	d references
	a ()V close
	a (Lcus;)V attachToEffect
	a (Lcut$a;Ljava/lang/String;Ljava/io/InputStream;)Lcut; compileShader
	b ()Ljava/lang/String; getName
cuw com/mojang/blaze3d/vertex/BufferBuilder
	a LOGGER
	b buffer
	c intBuffer
	d shortBuffer
	e floatBuffer
	f vertices
	g currentElement
	h elementIndex
	i noColor
	j mode
	k xo
	l yo
	m zo
	n format
	o building
	a ()Lcuw$a; getState
	a (DD)Lcuw; uv
	a (DDD)V postProcessFacePosition
	a (FFF)V sortQuads
	a (FFFF)Lcuw; color
	a (FFFI)V faceTint
	a (I)V fixupQuadColor
	a (II)Lcuw; uv2
	a (III)I clamp
	a (IIII)V faceTex2
	a (ILcvc;)V begin
	a (Lcuw$a;)V restoreState
	a (Ljava/nio/FloatBuffer;FFFII)F getQuadDistanceFromPlayer
	a ([FLjava/lang/Integer;Ljava/lang/Integer;)I lambda$sortQuads$0
	a ([I)V putBulkData
	b ()V clear
	b (DDD)Lcuw; vertex
	b (FFF)V postNormal
	b (FFFI)V fixupVertexColor
	b (I)V ensureCapacity
	b (II)V fixupVertexColor
	b (IIII)Lcuw; color
	c ()V noColor
	c (DDD)V offset
	c (FFF)Lcuw; normal
	c (I)I roundUp
	c (IIII)V putColor
	d ()V endVertex
	d (FFF)V fixupQuadColor
	d (I)I getStartingColorIndex
	e ()V end
	f ()Ljava/nio/ByteBuffer; getBuffer
	g ()Lcvc; getVertexFormat
	h ()I getVertexCount
	i ()I getDrawMode
	j ()I getBufferIndex
	k ()V nextElement
cuv com/mojang/blaze3d/shaders/Uniform
	a LOGGER
	b location
	c count
	d type
	e intValues
	f floatValues
	g name
	h dirty
	i parent
	a ()Ljava/lang/String; getName
	a (F)V set
	a (FF)V set
	a (FFF)V set
	a (FFFF)V set
	a (I)V setLocation
	a (IIII)V setSafe
	a (Lcve;)V set
	a (Ljava/lang/String;)I getTypeFromString
	a ([F)V set
	b ()V upload
	b (FFFF)V setSafe
	c ()V markDirty
	d ()V uploadAsInteger
	e ()V uploadAsFloat
	f ()V uploadAsMatrix
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdRightTurn net/minecraft/world/level/levelgen/structure/StrongholdPieces$RightTurn
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdRightTurn; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
cuy com/mojang/blaze3d/vertex/DefaultVertexFormat
	a ELEMENT_POSITION
	b ELEMENT_COLOR
	c ELEMENT_UV0
	d ELEMENT_UV1
	e ELEMENT_NORMAL
	f ELEMENT_PADDING
	g BLOCK
	h BLOCK_NORMALS
	i ENTITY
	j PARTICLE
	k POSITION
	l POSITION_COLOR
	m POSITION_TEX
	n POSITION_NORMAL
	o POSITION_TEX_COLOR
	p POSITION_TEX_NORMAL
	q POSITION_TEX2_COLOR
	r POSITION_TEX_COLOR_NORMAL
cn$a net/minecraft/commands/arguments/GameProfileArgument$Result
cux com/mojang/blaze3d/vertex/BufferUploader
	a (Lcuw;)V end
cn$b net/minecraft/commands/arguments/GameProfileArgument$SelectorResult
	a selector
net/minecraft/server/EntityEvoker net/minecraft/world/entity/monster/Evoker
	bz wololoTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L ()V customServerAiStep
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/EntityEvoker;)Lnet/minecraft/server/EntitySheep; access$300
	a (Lnet/minecraft/server/EntityEvoker;Lnet/minecraft/server/EntitySheep;)V access$900
	a (Lnet/minecraft/server/EntitySheep;)V setWololoTarget
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityEvoker;)Ljava/util/Random; access$400
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityEvoker;)Ljava/util/Random; access$500
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	d (Lnet/minecraft/server/EntityEvoker;)Ljava/util/Random; access$600
	dV ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	dW ()Lnet/minecraft/server/SoundEffect; getCastingSoundEvent
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityEvoker;)Ljava/util/Random; access$700
	ep ()Lnet/minecraft/server/EntitySheep; getWololoTarget
	f (Lnet/minecraft/server/EntityEvoker;)Ljava/util/Random; access$800
	h ()V tick
	n ()V registerGoals
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
	u_ ()V defineSynchedData
cuz com/mojang/blaze3d/vertex/Tesselator
	a builder
	b uploader
	c INSTANCE
	a ()Lcuz; getInstance
	b ()V end
	c ()Lcuw; getBuilder
net/minecraft/server/WorldGenFeatureLakeConfiguration net/minecraft/world/level/levelgen/feature/LakeConfiguration
	a state
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureLakeConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/BlockMagma net/minecraft/world/level/block/MagmaBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;)I getLightColor
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V stepOn
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	g (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z hasPostProcess
cvb com/mojang/blaze3d/vertex/VertexBufferUploader
	a buffer
	a (Lcuw;)V end
	a (Lcva;)V setBuffer
cva com/mojang/blaze3d/vertex/VertexBuffer
	a id
	b format
	c vertexCount
	a ()V bind
	a (I)V draw
	a (Ljava/nio/ByteBuffer;)V upload
	b ()V unbind
	c ()V delete
net/minecraft/server/ItemLeash net/minecraft/world/item/LeadItem
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z bindPlayerMobs
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
cvd com/mojang/blaze3d/vertex/VertexFormatElement
	a LOGGER
	b type
	c usage
	d index
	e count
	a ()Lcvd$a; getType
	a (ILcvd$b;)Z supportsUsage
	b ()Lcvd$b; getUsage
	c ()I getCount
	d ()I getIndex
	e ()I getByteSize
	f ()Z isPosition
cvc com/mojang/blaze3d/vertex/VertexFormat
	a LOGGER
	b elements
	c offsets
	d vertexSize
	e colorOffset
	f texOffset
	g normalOffset
	a ()V clear
	a (I)Z hasUv
	a (Lcvd;)Lcvc; addElement
	b ()Z hasNormal
	b (I)I getUvOffset
	c ()I getNormalOffset
	c (I)Lcvd; getElement
	d ()Z hasColor
	d (I)I getOffset
	e ()I getColorOffset
	f ()I getIntegerSize
	g ()I getVertexSize
	h ()Ljava/util/List; getElements
	i ()I getElementCount
	j ()Z hasPositionElement
cvf com/mojang/math/Vector3d
	a x
	b y
	c z
cve com/mojang/math/Matrix4f
	a values
	a (DFFF)Lcve; perspective
	a (FFFF)Lcve; orthographic
	a (IIF)V set
	a (Ljava/nio/FloatBuffer;)V load
	a (Ljava/nio/FloatBuffer;Z)V load
	b (Ljava/nio/FloatBuffer;)V store
	b (Ljava/nio/FloatBuffer;Z)V store
cvh com/mojang/realmsclient/KeyCombo
	a chars
	b matchIndex
	c onCompletion
	a ()V reset
	a (C)Z keyPressed
cvg com/mojang/math/Vector4f
	a values
	a ()F x
	a (FFFF)V set
	a (Lnet/minecraft/server/Quaternion;)V transform
	a (Lnet/minecraft/server/Vector3fa;)V mul
	b ()F y
	c ()F z
	d ()F w
cvj com/mojang/realmsclient/client/FileDownload
	a LOGGER
	b cancelled
	c finished
	d error
	e extracting
	f tempFile
	g resourcePackPath
	h request
	i currentThread
	j requestConfig
	k INVALID_FILE_NAMES
	a ()V cancel
	a (Lcom/mojang/realmsclient/dto/WorldDownload;Ljava/lang/String;Lcwk$a;Lnet/minecraft/realms/RealmsAnvilLevelStorageSource;)V download
	a (Lcvj;)Lorg/apache/http/client/config/RequestConfig; access$200
	a (Lcvj;Ljava/io/File;)Ljava/io/File; access$002
	a (Lcvj;Ljava/lang/String;Ljava/io/File;Lnet/minecraft/realms/RealmsAnvilLevelStorageSource;)V access$1000
	a (Lcvj;Lorg/apache/http/client/methods/HttpGet;)Lorg/apache/http/client/methods/HttpGet; access$102
	a (Lcvj;Z)Z access$302
	a (Ljava/lang/String;)J contentLength
	a (Ljava/lang/String;Ljava/io/File;Lnet/minecraft/realms/RealmsAnvilLevelStorageSource;)V untarGzipArchive
	b ()Z isFinished
	b (Lcvj;)Lorg/apache/http/client/methods/HttpGet; access$100
	b (Lcvj;Z)Z access$702
	b (Ljava/lang/String;)Ljava/lang/String; findAvailableFolderName
	c ()Z isError
	c (Lcvj;)Ljava/io/File; access$000
	c (Lcvj;Z)Z access$902
	d ()Z isExtracting
	d (Lcvj;)Z access$300
	e ()Lorg/apache/logging/log4j/Logger; access$500
	e (Lcvj;)Z access$800
	f (Lcvj;)Ljava/io/File; access$1100
net/minecraft/server/PacketPlayOutAttachEntity net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket
	a sourceId
	b destId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getSourceId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getDestId
net/minecraft/server/BiomeDecoratorGroups net/minecraft/world/level/biome/BiomeDefaultFeatures
	A (Lnet/minecraft/server/BiomeBase;)V addMountainTrees
	B (Lnet/minecraft/server/BiomeBase;)V addMountainEdgeTrees
	C (Lnet/minecraft/server/BiomeBase;)V addJungleTrees
	D (Lnet/minecraft/server/BiomeBase;)V addJungleEdgeTrees
	E (Lnet/minecraft/server/BiomeBase;)V addBadlandsTrees
	F (Lnet/minecraft/server/BiomeBase;)V addSnowyTrees
	G (Lnet/minecraft/server/BiomeBase;)V addGiantSpruceTrees
	H (Lnet/minecraft/server/BiomeBase;)V addGiantTrees
	I (Lnet/minecraft/server/BiomeBase;)V addJungleGrass
	J (Lnet/minecraft/server/BiomeBase;)V addSavannaGrass
	K (Lnet/minecraft/server/BiomeBase;)V addShatteredSavannaGrass
	L (Lnet/minecraft/server/BiomeBase;)V addSavannaExtraGrass
	M (Lnet/minecraft/server/BiomeBase;)V addBadlandGrass
	N (Lnet/minecraft/server/BiomeBase;)V addForestFlowers
	O (Lnet/minecraft/server/BiomeBase;)V addForestGrass
	P (Lnet/minecraft/server/BiomeBase;)V addSwampVegetation
	Q (Lnet/minecraft/server/BiomeBase;)V addMushroomFieldVegetation
	R (Lnet/minecraft/server/BiomeBase;)V addPlainVegetation
	S (Lnet/minecraft/server/BiomeBase;)V addDesertVegetation
	T (Lnet/minecraft/server/BiomeBase;)V addGiantTaigaVegetation
	U (Lnet/minecraft/server/BiomeBase;)V addDefaultFlowers
	V (Lnet/minecraft/server/BiomeBase;)V addWarmFlowers
	W (Lnet/minecraft/server/BiomeBase;)V addDefaultGrass
	X (Lnet/minecraft/server/BiomeBase;)V addTaigaGrass
	Y (Lnet/minecraft/server/BiomeBase;)V addPlainGrass
	Z (Lnet/minecraft/server/BiomeBase;)V addDefaultMushrooms
	a (Lnet/minecraft/server/BiomeBase;)V addDefaultCarvers
	aa (Lnet/minecraft/server/BiomeBase;)V addDefaultExtraVegetation
	ab (Lnet/minecraft/server/BiomeBase;)V addBadlandExtraVegetation
	ac (Lnet/minecraft/server/BiomeBase;)V addJungleExtraVegetation
	ad (Lnet/minecraft/server/BiomeBase;)V addDesertExtraVegetation
	ae (Lnet/minecraft/server/BiomeBase;)V addSwampExtraVegetation
	af (Lnet/minecraft/server/BiomeBase;)V addDesertExtraDecoration
	ag (Lnet/minecraft/server/BiomeBase;)V addSwampExtraDecoration
	ah (Lnet/minecraft/server/BiomeBase;)V addColdOceanExtraVegetation
	ai (Lnet/minecraft/server/BiomeBase;)V addDefaultSeagrass
	aj (Lnet/minecraft/server/BiomeBase;)V addWarmSeagrass
	ak (Lnet/minecraft/server/BiomeBase;)V addDeepWarmSeagrass
	al (Lnet/minecraft/server/BiomeBase;)V addLukeWarmKelp
	am (Lnet/minecraft/server/BiomeBase;)V addDefaultSprings
	an (Lnet/minecraft/server/BiomeBase;)V addIcebergs
	ao (Lnet/minecraft/server/BiomeBase;)V addBlueIce
	ap (Lnet/minecraft/server/BiomeBase;)V addSurfaceFreezing
	aq (Lnet/minecraft/server/BiomeBase;)V addEndCity
	b (Lnet/minecraft/server/BiomeBase;)V addOceanCarvers
	c (Lnet/minecraft/server/BiomeBase;)V addStructureFeaturePlacement
	d (Lnet/minecraft/server/BiomeBase;)V addDefaultLakes
	e (Lnet/minecraft/server/BiomeBase;)V addDesertLakes
	f (Lnet/minecraft/server/BiomeBase;)V addDefaultMonsterRoom
	g (Lnet/minecraft/server/BiomeBase;)V addDefaultUndergroundVariety
	h (Lnet/minecraft/server/BiomeBase;)V addDefaultOres
	i (Lnet/minecraft/server/BiomeBase;)V addExtraGold
	j (Lnet/minecraft/server/BiomeBase;)V addExtraEmeralds
	k (Lnet/minecraft/server/BiomeBase;)V addInfestedStone
	l (Lnet/minecraft/server/BiomeBase;)V addDefaultSoftDisks
	m (Lnet/minecraft/server/BiomeBase;)V addSwampClayDisk
	n (Lnet/minecraft/server/BiomeBase;)V addMossyStoneBlock
	o (Lnet/minecraft/server/BiomeBase;)V addFerns
	p (Lnet/minecraft/server/BiomeBase;)V addBerryBushes
	q (Lnet/minecraft/server/BiomeBase;)V addSparseBerryBushes
	r (Lnet/minecraft/server/BiomeBase;)V addLightBambooVegetation
	s (Lnet/minecraft/server/BiomeBase;)V addBambooVegetation
	t (Lnet/minecraft/server/BiomeBase;)V addTaigaTrees
	u (Lnet/minecraft/server/BiomeBase;)V addWaterTrees
	v (Lnet/minecraft/server/BiomeBase;)V addBirchTrees
	w (Lnet/minecraft/server/BiomeBase;)V addOtherBirchTrees
	x (Lnet/minecraft/server/BiomeBase;)V addTallBirchTrees
	y (Lnet/minecraft/server/BiomeBase;)V addSavannaTrees
	z (Lnet/minecraft/server/BiomeBase;)V addShatteredSavannaTrees
cvi com/mojang/realmsclient/RealmsMainScreen
	A createdTrial
	B showingPopup
	C hasUnreadNews
	D newsLink
	E carouselIndex
	F carouselTick
	G hasSwitchedCarouselImage
	H realmsGenericErrorScreen
	I regionsPinged
	J keyCombos
	K clicks
	L connectLock
	M expiredHover
	N showPopupButton
	O pendingInvitesButton
	P newsButton
	Q createTrialButton
	R buyARealmButton
	S closeButton
	a LOGGER
	b overrideConfigure
	c inviteNarrationLimiter
	d dontSetConnectedToRealms
	e IMAGES_LOCATION
	f realmsDataFetcher
	g lastScrollYPosition
	h lastScreen
	i realmSelectionList
	j selectedServerId
	k playButton
	l backButton
	m renewButton
	n configureButton
	o leaveButton
	p toolTip
	q realmsServers
	r numberOfPendingInvites
	s animTick
	t hasParentalConsent
	u checkedParentalConsent
	v checkedClientCompatability
	w hasFetchedServers
	x popupOpenedByUser
	y justClosedPopup
	z trialsAvailable
	A ()V onClosePopup
	B ()I popupX0
	C ()I popupY0
	D ()V renderLocal
	E ()V renderStage
	F ()V lambda$init$2
	G ()V lambda$init$1
	H ()V lambda$init$0
	a ()Z shouldShowMessageInList
	a (CLcvh;)V lambda$charTyped$4
	a (DD)Z isOutsidePopup
	a (II)V drawRealmsLogo
	a (IIII)V drawExpired
	a (IIIII)V drawExpiring
	a (IIIIZ)V renderMoreInfo
	a (IIIIZZ)V drawInvitationPendingIcon
	a (IIZIIZZ)V renderNews
	a (J)Lcom/mojang/realmsclient/dto/RealmsServer; findServer
	a (Lcom/mojang/realmsclient/dto/RealmsServer;)V updateButtonStates
	a (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/realms/RealmsScreen;)V play
	a (Lcvi;)J access$000
	a (Lcvi;I)I access$2002
	a (Lcvi;IIII)V access$2700
	a (Lcvi;IIIII)V access$2900
	a (Lcvi;IIIIZ)V access$3900
	a (Lcvi;IIIIZZ)V access$3500
	a (Lcvi;IIZIIZZ)V access$3800
	a (Lcvi;J)Lcom/mojang/realmsclient/dto/RealmsServer; access$100
	a (Lcvi;Lcom/mojang/realmsclient/dto/RealmsServer;)V access$200
	a (Lcvi;Ljava/lang/String;)Ljava/lang/String; access$2302
	a (Lcvi;Z)Z access$2202
	a (Lcyc;Lcom/mojang/realmsclient/dto/RealmsServer;)V lambda$configureClicked$3
	a (Ljava/lang/String;)V browseURL
	a (Ljava/lang/String;II)V renderMousehoverTooltip
	a (Lnet/minecraft/realms/RealmsScreen;)Lnet/minecraft/realms/RealmsScreen; access$1102
	a (Z)V setCreatedTrial
	b ()Z shouldShowPopup
	b (DD)Z inPendingInvitationArea
	b (II)V drawPopup
	b (IIII)V drawOpen
	b (Lcom/mojang/realmsclient/dto/RealmsServer;)Z shouldPlayButtonBeActive
	b (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/realms/RealmsScreen;)V connectToServer
	b (Lcvi;)V access$300
	b (Lcvi;IIII)V access$2800
	b (Lcvi;J)J access$002
	b (Lcvi;Lcom/mojang/realmsclient/dto/RealmsServer;)V access$700
	b (Lcvi;Z)Z access$2502
	b (Z)Z access$1302
	c ()V addButtons
	c (IIII)V drawClose
	c (Lcom/mojang/realmsclient/dto/RealmsServer;)Z shouldRenewButtonBeActive
	c (Lcvi;)Z access$400
	c (Lcvi;IIII)V access$3000
	c (Lcvi;Lcom/mojang/realmsclient/dto/RealmsServer;)V access$2100
	c (Lcvi;Z)Z access$3702
	c (Z)Z access$1402
	d ()V postInit
	d (IIII)V drawLeave
	d (Lcom/mojang/realmsclient/dto/RealmsServer;)Z shouldConfigureButtonBeVisible
	d (Lcvi;)Lnet/minecraft/realms/RealmsScreen; access$500
	d (Lcvi;IIII)V access$3200
	d (Lcvi;Lcom/mojang/realmsclient/dto/RealmsServer;)Z access$2400
	d (Z)Z access$1502
	e ()V removeSelection
	e (IIII)V drawConfigure
	e (Lcom/mojang/realmsclient/dto/RealmsServer;)Z shouldLeaveButtonBeVisible
	e (Lcvi;)V access$600
	e (Lcvi;IIII)V access$3300
	f ()Lcvi; newScreen
	f (Lcom/mojang/realmsclient/dto/RealmsServer;)V configureClicked
	f (Lcvi;)V access$800
	g ()V closePopup
	g (Lcom/mojang/realmsclient/dto/RealmsServer;)V leaveClicked
	g (Lcvi;)Ljava/util/List; access$900
	h ()Lorg/apache/logging/log4j/Logger; access$1000
	h (Lcom/mojang/realmsclient/dto/RealmsServer;)Z isSelfOwnedServer
	h (Lcvi;)V access$1200
	i ()Lnet/minecraft/realms/RealmsScreen; access$1100
	i (Lcom/mojang/realmsclient/dto/RealmsServer;)Z isSelfOwnedNonExpiredServer
	i (Lcvi;)Ljava/util/List; access$1700
	j ()Lcvz; access$1600
	j (Lcvi;)Lnet/minecraft/realms/RealmsButton; access$1800
	k ()Z access$3100
	k (Lcvi;)Lcvi$d; access$1900
	l ()Z hasParentalConsent
	l (Lcvi;)I access$2000
	m ()Z shouldShowPopupButton
	m (Lcvi;)Ljava/lang/String; access$2300
	n ()V pingRegions
	n (Lcvi;)Z access$2500
	o ()Ljava/util/List; getOwnedNonExpiredWorldIds
	o (Lcvi;)I access$2600
	p ()V onPlay
	p (Lcvi;)I access$3400
	q ()V onRenew
	q (Lcvi;)Ljava/lang/String; access$3600
	r ()V createTrial
	r (Lcvi;)Z access$3700
	s ()V checkClientCompatability
	s (Lcvi;)Z access$2200
	t ()V checkUnreadNews
	t (Lcvi;)I access$4000
	u ()V checkParentalConsent
	u (Lcvi;)I access$4100
	v ()V switchToStage
	v (Lcvi;)V access$4200
	w ()V switchToLocal
	x ()V switchToProd
	y ()V stopRealmsFetcher
	z ()V saveListScrollPosition
net/minecraft/server/MerchantWrapper net/minecraft/world/entity/npc/ClientSideMerchant
	a container
	b source
	c offers
	d xp
	a ()Lnet/minecraft/server/IInventory; getContainer
	a (Lnet/minecraft/server/MerchantRecipe;)V notifyTrade
	a (Lnet/minecraft/server/MerchantRecipeList;)V overrideOffers
	dW ()I getVillagerXp
	dX ()Lnet/minecraft/server/EntityHuman; getTradingPlayer
	dZ ()Lnet/minecraft/server/MerchantRecipeList; getOffers
	e (Lnet/minecraft/server/EntityHuman;)V setTradingPlayer
	ea ()Z showProgressBar
	eb ()Lnet/minecraft/server/SoundEffect; getNotifyTradeSound
	eg ()Lnet/minecraft/server/World; getLevel
	i (Lnet/minecraft/server/ItemStack;)V notifyTradeUpdated
	s (I)V overrideXp
cvl com/mojang/realmsclient/client/Ping
	a ()Ljava/util/List; pingAllRegions
	a (Ljava/lang/String;)I ping
	a (Ljava/net/Socket;)V close
	a ([Lcvl$a;)Ljava/util/List; ping
	b ()J now
cvk com/mojang/realmsclient/client/FileUpload
	a LOGGER
	b file
	c worldId
	d slotId
	e uploadInfo
	f sessionId
	g username
	h clientVersion
	i uploadStatus
	j cancelled
	k uploadTask
	l requestConfig
	a ()V cancel
	a (I)Lcxe; requestUpload
	a (JI)Z shouldRetry
	a (Ljava/util/function/Consumer;)V upload
	a (Lorg/apache/http/HttpResponse;)J getRetryDelaySeconds
	a (Lorg/apache/http/HttpResponse;Lcxe$a;)V handleResponse
	a (Lorg/apache/http/client/methods/HttpPost;)V setupRequest
	a (Lorg/apache/http/client/methods/HttpPost;Lorg/apache/http/impl/client/CloseableHttpClient;)V cleanup
	b ()Z isFinished
	b (JI)Lcxe; retryUploadAfter
	c ()Lcxe; lambda$upload$0
com/mojang/realmsclient/dto/Subscription$a com/mojang/realmsclient/dto/Subscription$SubscriptionType
	a NORMAL
	b RECURRING
	c $VALUES
cvn com/mojang/realmsclient/client/RealmsClientConfig
	a proxy
	a ()Ljava/net/Proxy; getProxy
	a (Ljava/net/Proxy;)V setProxy
cvm com/mojang/realmsclient/client/RealmsClient
	a currentEnvironment
	b initialized
	c LOGGER
	d sessionId
	e username
	f gson
	a ()Lcvm; createRealmsClient
	a (IILcom/mojang/realmsclient/dto/RealmsServer$c;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; fetchWorldTemplates
	a (J)Lcom/mojang/realmsclient/dto/RealmsServer; getOwnWorld
	a (JI)Z switchSlot
	a (JILcom/mojang/realmsclient/dto/RealmsWorldOptions;)V updateSlot
	a (JLjava/lang/String;)V uninvite
	a (JLjava/lang/String;Ljava/lang/Integer;Z)Ljava/lang/Boolean; resetWorldWithSeed
	a (JLjava/lang/String;Ljava/lang/String;)V initializeWorld
	a (Lcom/mojang/realmsclient/dto/PingResult;)V sendPingResults
	a (Lcvp;)Ljava/lang/String; execute
	a (Ljava/lang/String;)V acceptInvitation
	a (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; createTrial
	b ()V switchToStage
	b (J)Lcom/mojang/realmsclient/dto/RealmsServerAddress; join
	b (JI)Lcom/mojang/realmsclient/dto/WorldDownload; download
	b (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; invite
	b (JLjava/lang/String;Ljava/lang/String;)V update
	b (Ljava/lang/String;)V rejectInvitation
	b (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; url
	c ()V switchToProd
	c (J)V uninviteMyselfFrom
	c (JLjava/lang/String;)V restoreWorld
	c (Ljava/lang/String;)Ljava/lang/String; url
	d ()V switchToLocal
	d (J)Lcom/mojang/realmsclient/dto/BackupList; backupsFor
	d (JLjava/lang/String;)Ljava/lang/Boolean; putIntoMinigameMode
	e ()Lcom/mojang/realmsclient/dto/RealmsServerList; listWorlds
	e (J)Ljava/lang/Boolean; open
	e (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; op
	f ()Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; getLiveStats
	f (J)Ljava/lang/Boolean; close
	f (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; deop
	g ()Ljava/lang/Boolean; mcoEnabled
	g (J)Lcom/mojang/realmsclient/dto/Subscription; subscriptionFor
	g (JLjava/lang/String;)Ljava/lang/Boolean; resetWorldWithTemplate
	h ()Ljava/lang/Boolean; stageAvailable
	h (J)V deleteWorld
	h (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo; upload
	i ()Lcvm$a; clientCompatible
	j ()I pendingInvitesCount
	k ()Lcom/mojang/realmsclient/dto/PendingInvitesList; pendingInvites
	l ()V agreeToTos
	m ()Lcom/mojang/realmsclient/dto/RealmsNews; getNews
	n ()Ljava/lang/Boolean; trialAvailable
net/minecraft/server/ItemAxe net/minecraft/world/item/AxeItem
	a STRIPABLES
	e DIGGABLES
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemActionContext;Lnet/minecraft/server/EntityHuman;)V lambda$useOn$0
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)F getDestroySpeed
cvp com/mojang/realmsclient/client/Request
	a connection
	b url
	c connected
	a ()I getRetryAfterHeader
	a (Ljava/io/InputStream;)Ljava/lang/String; read
	a (Ljava/lang/String;)Lcvp; get
	a (Ljava/lang/String;II)Lcvp; get
	a (Ljava/lang/String;Ljava/lang/String;)V cookie
	a (Ljava/lang/String;Ljava/lang/String;II)Lcvp; post
	a (Ljava/net/HttpURLConnection;)I getRetryAfterHeader
	a (Ljava/net/HttpURLConnection;Ljava/lang/String;)Ljava/lang/String; getHeader
	a (Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V cookie
	b ()I responseCode
	b (Ljava/lang/String;)Lcvp; delete
	b (Ljava/lang/String;Ljava/lang/String;)Lcvp; post
	b (Ljava/lang/String;Ljava/lang/String;II)Lcvp; put
	c ()Ljava/lang/String; text
	c (Ljava/lang/String;)Ljava/lang/String; getHeader
	c (Ljava/lang/String;Ljava/lang/String;)Lcvp; put
	d ()Lcvp; connect
	e ()Lcvp; doConnect
	f ()V dispose
net/minecraft/server/ChunkTaskQueue net/minecraft/server/level/ChunkTaskPriorityQueue
	a PRIORITY_LEVEL_COUNT
	b taskQueue
	c firstQueue
	d name
	e acquired
	f maxTasks
	a ()Ljava/util/stream/Stream; pop
	a (I)Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap; lambda$new$0
	a (ILnet/minecraft/server/ChunkCoordIntPair;I)V resortChunkTasks
	a (J)Ljava/lang/Runnable; acquire
	a (JLjava/util/Optional;)Lcom/mojang/datafixers/util/Either; lambda$pop$6
	a (JZ)V release
	a (Ljava/util/Optional;)Z lambda$release$3
	a (Ljava/util/Optional;JI)V submit
	b ()Lit/unimi/dsi/fastutil/longs/LongSet; getAcquired
	b (J)Lcom/mojang/datafixers/util/Either; lambda$null$5
	c (J)V lambda$acquire$4
	d (J)Ljava/util/List; lambda$submit$2
	e (J)Ljava/util/List; lambda$resortChunkTasks$1
cvo com/mojang/realmsclient/client/RealmsError
	a LOGGER
	b errorMessage
	c errorCode
	a ()Ljava/lang/String; getErrorMessage
	b ()I getErrorCode
cvr com/mojang/realmsclient/dto/ValueObject
cvq com/mojang/realmsclient/client/UploadStatus
	a bytesWritten
	b totalBytes
cvt com/mojang/realmsclient/exception/RealmsHttpException
cvs com/mojang/realmsclient/exception/RealmsDefaultUncaughtExceptionHandler
	a logger
cvv com/mojang/realmsclient/exception/RetryCallException
	e delaySeconds
cvu com/mojang/realmsclient/exception/RealmsServiceException
	a httpResultCode
	b httpResponseContent
	c errorCode
	d errorMsg
net/minecraft/server/WorldGenPackedIce1 net/minecraft/world/level/levelgen/feature/IcePatchFeature
	a block
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRadiusConfiguration;)Z place
ddb$c$1 net/minecraft/client/gui/screens/controls/ControlList$KeyEntry$1
	a val$this$0
	b val$key
	c this$1
cvx com/mojang/realmsclient/gui/LongRunningTask
	a longRunningMcoTaskScreen
	a ()Z aborted
	a (Lcwo;)V setScreen
	a (Ljava/lang/String;)V error
	b ()V tick
	b (Ljava/lang/String;)V setTitle
	c ()V init
	d ()V abortTask
net/minecraft/server/WorldGenPackedIce2 net/minecraft/world/level/levelgen/feature/IceSpikeFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
ddb$c$2 net/minecraft/client/gui/screens/controls/ControlList$KeyEntry$2
	a val$this$0
	b this$1
cvw com/mojang/realmsclient/gui/ChatFormatting
	A isFormat
	B toString
	C $VALUES
	a BLACK
	b DARK_BLUE
	c DARK_GREEN
	d DARK_AQUA
	e DARK_RED
	f DARK_PURPLE
	g GOLD
	h GRAY
	i DARK_GRAY
	j BLUE
	k GREEN
	l AQUA
	m RED
	n LIGHT_PURPLE
	o YELLOW
	p WHITE
	q OBFUSCATED
	r BOLD
	s STRIKETHROUGH
	t UNDERLINE
	u ITALIC
	v RESET
	w FORMATTING_BY_CHAR
	x FORMATTING_BY_NAME
	y STRIP_FORMATTING_PATTERN
	z code
	a ()C getChar
	a (Lcvw;)Lcvw; lambda$static$1
	b ()Ljava/lang/String; getName
	b (Lcvw;)Lcvw; lambda$static$0
net/minecraft/server/TileEntityEndGateway net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity
	a LOGGER
	c teleportCooldown
	T_ ()V tick
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (F)F getSpawnPercent
	a (Lnet/minecraft/server/BlockPosition;Z)V setExitPosition
	a (Lnet/minecraft/server/Chunk;)Lnet/minecraft/server/BlockPosition; findValidSpawnInChunk
	a (Lnet/minecraft/server/Entity;)V teleportEntity
	a (Lnet/minecraft/server/EnumDirection;)Z shouldRenderFace
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;IZ)Lnet/minecraft/server/BlockPosition; findTallestBlock
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Chunk; getChunk
	a_ (II)Z triggerEvent
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (F)F getCooldownPercent
	b (Lnet/minecraft/server/BlockPosition;)V createExitPortal
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	d ()Z isSpawning
	f ()Z isCoolingDown
	h ()V triggerCooldown
	i ()D getViewDistance
	s ()I getParticleAmount
	t ()Lnet/minecraft/server/BlockPosition; findExitPosition
	u ()V findExitPortal
cvz com/mojang/realmsclient/gui/RealmsDataFetcher
	a LOGGER
	b scheduler
	c stopped
	d serverListUpdateTask
	e pendingInviteUpdateTask
	f trialAvailabilityTask
	g liveStatsTask
	h unreadNewsTask
	i removedServers
	j servers
	k livestats
	l pendingInvitesCount
	m trialAvailable
	n hasUnreadNews
	o newsLink
	p serverListScheduledFuture
	q pendingInviteScheduledFuture
	r trialAvailableScheduledFuture
	s liveStatsScheduledFuture
	t unreadNewsScheduledFuture
	u fetchStatus
	a ()Z isStopped
	a (Lcom/mojang/realmsclient/dto/RealmsServer;)V removeItem
	a (Lcvz$d;)Z isFetchedSinceLastTry
	a (Lcvz;)Z access$500
	a (Lcvz;I)I access$1002
	a (Lcvz;Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists;)Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; access$1202
	a (Lcvz;Ljava/lang/String;)Ljava/lang/String; access$1402
	a (Lcvz;Ljava/util/List;)V access$600
	a (Lcvz;Z)Z access$1102
	a (Ljava/util/List;)V initWithSpecificTaskList
	b ()V init
	b (Lcvz;)Ljava/util/Map; access$800
	b (Lcvz;Ljava/util/List;)V access$700
	b (Lcvz;Z)Z access$1302
	b (Ljava/util/List;)V setServers
	c ()V markClean
	c (Ljava/util/List;)V sort
	d ()V forceUpdate
	e ()Ljava/util/List; getServers
	f ()I getPendingInvitesCount
	g ()Z isTrialAvailable
	h ()Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; getLivestats
	i ()Z hasUnreadNews
	j ()Ljava/lang/String; newsLink
	k ()V stop
	l ()Lorg/apache/logging/log4j/Logger; access$900
	m ()V scheduleTasks
	n ()V cancelTasks
	o ()Z isActive
net/minecraft/server/ItemShears net/minecraft/world/item/ShearsItem
	a (Lnet/minecraft/server/EntityLiving;)V lambda$mineBlock$0
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z mineBlock
	b (Lnet/minecraft/server/IBlockData;)Z canDestroySpecial
cvy com/mojang/realmsclient/gui/RealmsConstants
	a (I)I row
net/minecraft/server/IFluidContainer net/minecraft/world/level/block/LiquidBlockContainer
	canPlace (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	place (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
net/minecraft/server/EntityItemFrame net/minecraft/world/entity/decoration/ItemFrame
	ITEM DATA_ITEM
	ar dropChance
	e LOGGER
	g DATA_ROTATION
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	V ()V kill
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;)V dropItem
	a (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/server/EnumDirection;)V setDirection
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aS ()F getPickRadius
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (Lnet/minecraft/server/Entity;Z)V dropItem
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/ItemStack;)V removeFramedMap
	f ()V recalculateBoundingBox
	i ()Z survives
	k ()I getWidth
	l ()I getHeight
	m ()V playPlacementSound
	q ()I getAnalogOutput
	u_ ()V defineSynchedData
cwa com/mojang/realmsclient/gui/RealmsWorldSlotButton
	a serverDataProvider
	b toolTipSetter
	c listener
	d slotIndex
	e animTick
	f state
	a (IIIIZLjava/lang/String;IJLjava/lang/String;ZZLcwa$a;Ljava/lang/String;)V drawSlotFrame
net/minecraft/server/PacketPlayOutKickDisconnect net/minecraft/network/protocol/game/ClientboundDisconnectPacket
	a reason
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/IChatBaseComponent; getReason
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
cwc com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen
	a difficulties
	b gameModes
	c lastScreen
	d BUTTON_BACK_ID
	e backup
	f keys
	g backupInfoList
	a (Lcwc;)Lnet/minecraft/realms/RealmsScreen; access$000
	a (Lcwc;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; access$300
	a (Ljava/lang/String;)Ljava/lang/String; gameDifficultyMetadata
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; checkForSpecificMetadata
	b (Lcwc;)Lcom/mojang/realmsclient/dto/Backup; access$100
	b (Ljava/lang/String;)Ljava/lang/String; gameModeMetadata
	c (Lcwc;)Ljava/util/List; access$200
net/minecraft/server/EntityGhast net/minecraft/world/entity/monster/Ghast
	b DATA_IS_CHARGING
	c explosionPower
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkGhastSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cU ()F getSoundVolume
	cc ()Lnet/minecraft/server/SoundCategory; getSoundSource
	cl ()V registerAttributes
	dC ()I getMaxSpawnClusterSize
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	getPower ()I getExplosionPower
	h ()V tick
	h (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$0
	l ()Z isCharging
	n ()V registerGoals
	r (Z)V setCharging
	u_ ()V defineSynchedData
cwb com/mojang/realmsclient/gui/RowButton
	a width
	b height
	c xOffset
	d yOffset
	a ()I getRight
	a (I)V onClick
	a (IIII)V drawForRowAt
	a (IIZ)V draw
	a (Ljava/util/List;Lnet/minecraft/realms/RealmsObjectSelectionList;IIII)V drawButtonsInRow
	a (Lnet/minecraft/realms/RealmsObjectSelectionList;Lnet/minecraft/realms/RealmListEntry;Ljava/util/List;IDD)V rowButtonMouseClicked
	b ()I getBottom
net/minecraft/server/NavigationGuardian net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation
	p allowBreaching
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
	a (Lnet/minecraft/server/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/server/Vec3D;)V doStuckDetection
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;III)Z canMoveDirectly
	b ()Lnet/minecraft/server/Vec3D; getTempMobPos
	c ()V tick
	d (Z)V setCanFloat
	m ()V updatePath
dan$1 net/minecraft/client/gui/components/toasts/ToastComponent$1
cwe com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen
	a LOGGER
	b lastScreen
	c mainScreen
	d serverData
	e serverId
	f title
	g message
	h left_x
	i right_x
	j default_button_width
	k default_button_offset
	l playButtonIds
	m resetButtonIds
	n downloadButtonIds
	o downloadConfirmationIds
	p slotsThatHasBeenDownloaded
	q animTick
	a ()V addButtons
	a (I)I getFramePositionX
	a (IIIIZLjava/lang/String;IJLjava/lang/String;Z)V drawSlotFrame
	a (J)V fetchServerData
	a (Lcwe;)V access$000
	a (Lcwe;I)V access$400
	a (Lcwe;Lcom/mojang/realmsclient/dto/RealmsServer;)Lcom/mojang/realmsclient/dto/RealmsServer; access$202
	a (Ljava/lang/String;)V setTitle
	b ()Ljava/util/List; access$100
	b (I)V downloadWorld
	b (Lcwe;)Lcom/mojang/realmsclient/dto/RealmsServer; access$200
	c ()Ljava/util/List; access$300
	c (I)V switchSlot
	c (Lcwe;)Lnet/minecraft/realms/RealmsScreen; access$600
	d ()Lorg/apache/logging/log4j/Logger; access$500
	d (Lcwe;)J access$700
	e ()V backButtonClicked
	e (Lcwe;)Lcvi; access$800
	f ()Z isMinigame
cpg$a net/minecraft/world/level/storage/loot/RandomValueBounds$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootValueBounds; deserialize
	a (Lnet/minecraft/server/LootValueBounds;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/WorldGenFeatureSwampHut net/minecraft/world/level/levelgen/feature/SwamplandHutFeature
	a SWAMPHUT_ENEMIES
	aS SWAMPHUT_ANIMALS
	a ()Lceu$a; getStartFactory
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	c (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z isSwamphut
	d ()I getRandomSalt
	e ()Ljava/util/List; getSpecialEnemies
	f ()Ljava/util/List; getSpecialAnimals
cwd com/mojang/realmsclient/gui/screens/RealmsBackupScreen
	a LOGGER
	b lastScrollPosition
	c lastScreen
	d backups
	e toolTip
	f backupObjectSelectionList
	g selectedBackup
	h slotId
	i downloadButton
	j restoreButton
	k changesButton
	l noBackups
	m serverData
	n titleLabel
	a ()Lorg/apache/logging/log4j/Logger; access$100
	a (I)I access$1002
	a (Lcom/mojang/realmsclient/dto/Backup;Ljava/lang/String;)V addToChangeList
	a (Lcwd;)Lcom/mojang/realmsclient/dto/RealmsServer; access$000
	a (Lcwd;I)V access$800
	a (Lcwd;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$302
	a (Lcwd;Ljava/lang/String;)Ljava/lang/String; access$1202
	a (Lcwd;Ljava/util/List;)Ljava/util/List; access$202
	a (Ljava/lang/String;II)V renderMousehoverTooltip
	b ()V generateChangeList
	b (I)V restoreClicked
	b (Lcwd;)Ljava/util/List; access$200
	b (Lcwd;I)I access$702
	c ()V postInit
	c (Lcwd;)Lcwd$a; access$400
	d ()V updateButtonStates
	d (Lcwd;)V access$500
	e ()Z shouldChangesButtonBeVisible
	e (Lcwd;)V access$600
	f ()Z shouldRestoreButtonBeVisible
	f (Lcwd;)I access$700
	g ()V downloadClicked
	g (Lcwd;)Lcwg; access$900
	h ()V downloadWorldData
	h (Lcwd;)V access$1100
	i ()V restore
net/minecraft/server/TileEntityShulkerBox net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity
	a SLOTS
	c openCount
	contents itemStacks
	i animationStatus
	j progress
	k progressOld
	l color
	m loadColorFromBlock
	M_ ()I getContainerSize
	T_ ()V tick
	a (F)F getProgress
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	a (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/AxisAlignedBB; getBoundingBox
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NonNullList;)V setItems
	a_ (II)Z triggerEvent
	a_ (Lnet/minecraft/server/EntityHuman;)V startOpen
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/AxisAlignedBB; getBoundingBox
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b_ (Lnet/minecraft/server/EntityHuman;)V stopOpen
	c ()Z isEmpty
	c (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/AxisAlignedBB; getTopBoundingBox
	f ()Lnet/minecraft/server/NonNullList; getItems
	f (Lnet/minecraft/server/NBTTagCompound;)V loadFromTag
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	g (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; saveToTag
	h ()V updateAnimation
	s ()Lnet/minecraft/server/TileEntityShulkerBox$AnimationPhase; getAnimationStatus
	t ()Lnet/minecraft/server/EnumColor; getColor
	u ()V moveCollidedEntities
	v ()V doNeighborUpdates
net/minecraft/server/BiomeSwamp net/minecraft/world/level/biome/SwampBiome
	a (Lnet/minecraft/server/BlockPosition;)I getFoliageColor
	b (Lnet/minecraft/server/BlockPosition;)I getGrassColor
cwg com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen
	a LOGGER
	b toolTip
	c lastScreen
	d serverData
	e serverId
	f left_x
	g right_x
	h default_button_width
	i default_button_offset
	j playersButton
	k settingsButton
	l subscriptionButton
	m optionsButton
	n backupButton
	o resetWorldButton
	p switchMinigameButton
	q stateChanged
	r animTick
	s clicks
	a ()V stateChanged
	a (I)V addSlotButton
	a (II)I centerButton
	a (IIII)V drawServerStatus
	a (IIIII)V drawExpiring
	a (ILcom/mojang/realmsclient/dto/RealmsServer;)V switchToFullSlot
	a (ILcwa$a;ZZ)V onSlotClick
	a (J)V fetchServerData
	a (JI)V switchSlot
	a (Lcom/mojang/realmsclient/dto/RealmsServer;)V joinRealm
	a (Lcom/mojang/realmsclient/dto/RealmsServer;IZI)V lambda$switchToEmptySlot$3
	a (Lcom/mojang/realmsclient/dto/RealmsWorldOptions;)V saveSlotSettings
	a (Lcom/mojang/realmsclient/dto/WorldTemplate;)V callback
	a (Lcwg;)Lcom/mojang/realmsclient/dto/RealmsServer; access$000
	a (Lcwg;Lcom/mojang/realmsclient/dto/RealmsServer;)Lcom/mojang/realmsclient/dto/RealmsServer; access$002
	a (Lcwg;ZI)V lambda$switchSlot$4
	a (Ljava/lang/Object;)V callback
	a (Ljava/lang/String;)V lambda$addSlotButton$1
	a (Ljava/lang/String;II)V renderMousehoverTooltip
	a (Ljava/lang/String;Ljava/lang/String;)V saveSettings
	a (Lnet/minecraft/realms/RealmsButton;)V hide
	a (Lnet/minecraft/realms/RealmsScreen;)V closeTheWorld
	a (ZLnet/minecraft/realms/RealmsScreen;)V openTheWorld
	b ()Lcwg; getNewScreen
	b (I)I leftButton
	b (IIII)V drawExpired
	b (ILcom/mojang/realmsclient/dto/RealmsServer;)V switchToEmptySlot
	b (Lcom/mojang/realmsclient/dto/RealmsServer;IZI)V lambda$switchToFullSlot$2
	b (Lcom/mojang/realmsclient/dto/WorldTemplate;)V switchMinigame
	b (Lcwg;)Lcvi; access$100
	b (Lnet/minecraft/realms/RealmsButton;)V show
	c ()Lorg/apache/logging/log4j/Logger; access$700
	c (I)I frame
	c (IIII)V drawOpen
	c (Lcwg;)V access$200
	d ()V backButtonClicked
	d (IIII)V drawClose
	d (Lcwg;)V access$300
	e ()V disableButtons
	e (Lcwg;)Z access$400
	f ()V switchToMinigame
	f (Lcwg;)V access$500
	g ()Z isMinigame
	g (Lcwg;)V access$600
	h ()V hideRegularButtons
	i ()V showRegularButtons
	j ()V hideMinigameButtons
	k ()V showMinigameButtons
	l ()Lcom/mojang/realmsclient/dto/RealmsServer; lambda$addSlotButton$0
cwf com/mojang/realmsclient/gui/screens/RealmsClientOutdatedScreen
	a lastScreen
	b outdated
	a (Lcwf;)Lnet/minecraft/realms/RealmsScreen; access$000
net/minecraft/server/WorldGenContext net/minecraft/world/level/newbiome/context/Context
	a ()Lnet/minecraft/server/NoiseGeneratorPerlin; getBiomeNoise
	a (I)I nextRandom
cwi com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen
	a server
	b lastScreen
	c nameBox
	d descriptionBox
	e createButton
	f createRealmLabel
	a ()V createWorld
	a (Lcwi;)V access$000
	b ()Z valid
	b (Lcwi;)Lcvi; access$100
cwh com/mojang/realmsclient/gui/screens/RealmsConfirmScreen
	a parent
	b title1
	c yesButton
	d noButton
	e id
	f title2
	g delayTicker
cwk com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen
	a LOGGER
	b lastScreen
	c worldDownload
	d downloadTitle
	e narrationRateLimiter
	f cancelButton
	g worldName
	h downloadStatus
	i errorMessage
	j status
	k progress
	l cancelled
	m showDots
	n finished
	o extracting
	p previousWrittenBytes
	q previousTimeSnapshot
	r bytesPersSecond
	s animTick
	t DOTS
	u dotIndex
	v WARNING_ID
	w confirmationId
	x checked
	y downloadLock
	a ()Ljava/util/concurrent/locks/ReentrantLock; access$200
	a (I)V setConfirmationId
	a (J)Ljava/lang/String; humanReadableSpeed
	a (Lcwk;)V access$100
	a (Lcwk;Ljava/lang/String;)Ljava/lang/String; access$302
	a (Lcwk;Z)Z access$002
	a (Ljava/lang/String;)J getContentLength
	b ()Lorg/apache/logging/log4j/Logger; access$1100
	b (J)Ljava/lang/String; humanReadableSize
	b (Lcwk;)Z access$000
	b (Lcwk;Ljava/lang/String;)Ljava/lang/String; access$802
	b (Lcwk;Z)Z access$1002
	c ()V checkDownloadSize
	c (J)V drawDownloadSpeed0
	c (Lcwk;)V access$400
	c (Lcwk;Z)Z access$1202
	d ()V backButtonClicked
	d (Lcwk;)Ljava/lang/String; access$500
	d (Lcwk;Z)Z access$1302
	e ()V drawDots
	e (Lcwk;)Lcom/mojang/realmsclient/dto/WorldDownload; access$600
	f ()V drawProgressBar
	f (Lcwk;)Lcwk$a; access$700
	g ()V drawDownloadSpeed
	g (Lcwk;)Lnet/minecraft/realms/RealmsButton; access$900
	h ()V downloadSave
	i ()V downloadCancelled
net/minecraft/server/BlockComposter$ContainerInput net/minecraft/world/level/block/ComposterBlock$InputContainer
	a state
	b level
	c pos
	d changed
	J_ ()I getMaxStackSize
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
	e ()V setChanged
cwj com/mojang/realmsclient/gui/screens/RealmsCreateTrialScreen
	a lastScreen
	b nameBox
	c descriptionBox
	d initialized
	e createButton
	a ()V createWorld
	a (Lcwj;)V access$000
	b ()Z valid
	b (Lcwj;)Lcvi; access$100
cwm com/mojang/realmsclient/gui/screens/RealmsInviteScreen
	a LOGGER
	b profileName
	c serverData
	d configureScreen
	e lastScreen
	f BUTTON_INVITE_ID
	g BUTTON_CANCEL_ID
	h inviteButton
	i PROFILENAME_EDIT_BOX
	j errorMsg
	k showError
	a ()V onInvite
	a (Lcwm;)V access$000
	a (Ljava/lang/String;)V showError
	b (Lcwm;)Lnet/minecraft/realms/RealmsScreen; access$100
cwl com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen
	a nextScreen
	b line1
	c line2
	a (Lcvu;)V errorMessage
	a (Lcwl;)Lnet/minecraft/realms/RealmsScreen; access$000
	a (Ljava/lang/String;)V errorMessage
	a (Ljava/lang/String;Ljava/lang/String;)V errorMessage
cwo com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen
	a symbols
	b LOGGER
	c BUTTON_CANCEL_ID
	d BUTTON_BACK_ID
	e lastScreen
	f taskThread
	g title
	h error
	i errorMessage
	j aborted
	k animTicks
	l task
	m buttonLength
	a ()V start
	a (Lcwo;)V access$000
	a (Ljava/lang/String;)V error
	b ()Z aborted
	b (Ljava/lang/String;)V setTitle
	c ()V cancelOrBackButtonClicked
cwn com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen
	a listener
	b yesButton
	c noButton
	d id
	e type
	f line2
	g line3
	h okButton
	i yesNoQuestion
cwq com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen
	a nextScreen
	a (Lcwq;)Lnet/minecraft/realms/RealmsScreen; access$000
net/minecraft/server/ItemSuspiciousStew net/minecraft/world/item/SuspiciousStewItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/MobEffectList;I)V saveMobEffect
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
net/minecraft/server/BiomeFlowerForest net/minecraft/world/level/biome/ForestFlowerBiome
cwp com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen
	a realmsDataFetcher
	b numberOfPendingInvites
	c checkedMcoAvailability
	d trialAvailable
	e validClient
	f hasUnreadNews
	g tasks
	a ()V checkIfMcoEnabled
	a (II)V drawIcons
	a (Z)Z access$002
	b (Z)Z access$102
net/minecraft/server/WorldGenCanyonOcean net/minecraft/world/level/levelgen/carver/UnderwaterCanyonWorldCarver
	a (Lnet/minecraft/server/IChunkAccess;IIIIIIII)Z hasWater
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;IIIIIIIILjava/util/concurrent/atomic/AtomicBoolean;)Z carveBlock
cws com/mojang/realmsclient/gui/screens/RealmsPlayerScreen
	a LOGGER
	b toolTip
	c lastScreen
	d serverData
	e invitedObjectSelectionList
	f column1_x
	g column_width
	h column2_x
	i removeButton
	j opdeopButton
	k selectedInvitedIndex
	l selectedInvited
	m player
	n stateChanged
	o titleLabel
	a ()V updateButtonStates
	a (I)Z shouldRemoveAndOpdeopButtonBeVisible
	a (IIII)V drawRemoveIcon
	a (Lcom/mojang/realmsclient/dto/Ops;)V updateOps
	a (Lcws;)Lcwg; access$000
	a (Lcws;I)V access$300
	a (Lcws;IIII)V access$1100
	a (Ljava/lang/String;II)V renderMousehoverTooltip
	b ()V backButtonClicked
	b (I)V op
	b (IIII)V drawOpped
	b (Lcws;)Lcom/mojang/realmsclient/dto/RealmsServer; access$100
	b (Lcws;I)V access$400
	b (Lcws;IIII)V access$1200
	c (I)V deop
	c (IIII)V drawNormal
	c (Lcws;)I access$200
	c (Lcws;I)V access$500
	c (Lcws;IIII)V access$1300
	d (I)V uninvite
	d (Lcws;)V access$600
	d (Lcws;I)I access$202
	e (I)V deleteFromInvitedList
	e (Lcws;)I access$700
	f (Lcws;)I access$800
	g (Lcws;)Ljava/lang/String; access$900
	h (Lcws;)V access$1000
	i (Lcws;)I access$1400
cwr com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen
	a LOGGER
	b lastScreen
	c toolTip
	d loaded
	e pendingInvitationSelectionList
	f titleLabel
	g selectedInvite
	h acceptButton
	i rejectButton
	a ()Lorg/apache/logging/log4j/Logger; access$000
	a (I)V updateList
	a (Lcom/mojang/realmsclient/dto/PendingInvite;)Ljava/lang/String; getAge
	a (Lcwr;)Lcwr$a; access$200
	a (Lcwr;I)V access$400
	a (Lcwr;Ljava/lang/String;)Ljava/lang/String; access$902
	a (Lcwr;Z)Z access$102
	a (Ljava/lang/String;II)V renderMousehoverTooltip
	b ()V updateButtonStates
	b (I)V reject
	b (Lcwr;)I access$300
	b (Lcwr;I)I access$302
	c (I)V accept
	c (Lcwr;)V access$500
	c (Lcwr;I)V access$700
	d (I)Z shouldAcceptAndRejectButtonBeVisible
	d (Lcwr;)Lnet/minecraft/realms/RealmsScreen; access$600
	d (Lcwr;I)V access$800
cwu com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen
	a slot
	b LOGGER
	c lastScreen
	d serverData
	e returnScreen
	f titleLabel
	g subtitleLabel
	h title
	i subtitle
	j buttonTitle
	k subtitleColor
	l BUTTON_CANCEL_ID
	m BUTTON_FRAME_START
	n templates
	o adventuremaps
	p experiences
	q inspirations
	r typeToReset
	s worldInfoToReset
	t worldTemplateToReset
	u resetTitle
	v confirmationId
	a ()Lorg/apache/logging/log4j/Logger; access$100
	a (I)V setConfirmationId
	a (IILjava/lang/String;JLjava/lang/String;Lcwu$b;ZZ)V drawFrame
	a (Lcom/mojang/realmsclient/dto/WorldTemplate;)V callback
	a (Lcwu$c;)V resetWorld
	a (Lcwu;)Lnet/minecraft/realms/RealmsScreen; access$000
	a (Lcwu;IILjava/lang/String;JLjava/lang/String;Lcwu$b;ZZ)V access$800
	a (Lcwu;Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; access$202
	a (Ljava/lang/Object;)V callback
	a (Ljava/lang/String;)V setResetTitle
	a (Lnet/minecraft/realms/RealmsScreen;)V switchSlot
	b ()V switchSlot
	b (I)V setSlot
	b (Lcom/mojang/realmsclient/dto/WorldTemplate;)V resetWorldWithTemplate
	b (Lcwu$c;)V triggerResetWorld
	b (Lcwu;)Ljava/lang/String; access$600
	b (Lcwu;Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; access$302
	c (I)I frame
	c (Lcwu;)Lcom/mojang/realmsclient/dto/RealmsServer; access$700
	c (Lcwu;Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; access$402
	d (Lcwu;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; access$200
	d (Lcwu;Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; access$502
	e (Lcwu;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; access$300
	f (Lcwu;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; access$400
	g (Lcwu;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; access$500
cwt com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen
	a levelTypes
	b lastScreen
	c titleLabel
	d seedEdit
	e generateStructures
	f levelTypeIndex
	g BUTTON_CANCEL_ID
	h BUTTON_RESET_ID
	i SEED_EDIT_BOX
	j resetButton
	k levelTypeButton
	l generateStructuresButton
	m buttonTitle
	a ()V onReset
	a (Lcwt;)Lcwu; access$000
	a (Lcwt;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$402
	a (Lcwt;Ljava/lang/Integer;)Ljava/lang/Integer; access$202
	b ()Ljava/lang/String; levelTypeTitle
	b (Lcwt;)V access$100
	c ()Ljava/lang/String; generateStructuresTitle
	c (Lcwt;)Ljava/lang/Integer; access$200
	d (Lcwt;)Ljava/lang/String; access$300
	e (Lcwt;)Ljava/lang/Boolean; access$400
	f (Lcwt;)Ljava/lang/String; access$500
net/minecraft/server/PacketPlayOutAbilities net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket
	a invulnerable
	b isFlying
	c canFly
	d instabuild
	e flyingSpeed
	f walkingSpeed
	a (F)V setFlyingSpeed
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Z)V setInvulnerable
	b ()Z isInvulnerable
	b (F)V setWalkingSpeed
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	b (Z)V setFlying
	c ()Z isFlying
	c (Z)V setCanFly
	d ()Z canFly
	d (Z)V setInstabuild
	e ()Z canInstabuild
	f ()F getFlyingSpeed
	g ()F getWalkingSpeed
cww com/mojang/realmsclient/gui/screens/RealmsScreenWithCallback
	a (Ljava/lang/Object;)V callback
net/minecraft/server/LootItemUser net/minecraft/world/level/storage/loot/LootContextUser
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/LootCollector;Ljava/util/function/Function;Ljava/util/Set;Lnet/minecraft/server/LootContextParameterSet;)V validate
net/minecraft/server/EntitySlime$ControllerMoveSlime net/minecraft/world/entity/monster/Slime$SlimeMoveControl
	i yRot
	j jumpDelay
	k slime
	l isAggressive
	a ()V tick
	a (D)V setWantedMovement
	a (FZ)V setDirection
cwv com/mojang/realmsclient/gui/screens/RealmsResourcePackScreen
	a LOGGER
	b lastScreen
	c serverAddress
	d connectLock
	a ()V lambda$confirmResult$0
	a (Ljava/lang/Throwable;)Ljava/lang/Void; lambda$confirmResult$1
cwy com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen
	a LOGGER
	b lastScreen
	c worldTemplateObjectSelectionList
	d selectedTemplate
	e title
	f selectButton
	g trailerButton
	h publisherButton
	i toolTip
	j currentLink
	k worldType
	l clicks
	m warning
	n warningURL
	o displayWarning
	p hoverWarning
	q noTemplatesMessage
	a ()Lorg/apache/logging/log4j/Logger; access$500
	a (IILjava/util/List;)V renderMultilineMessage
	a (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;)V fetchTemplatesAsync
	a (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;Lcvm;)Lcom/mojang/datafixers/util/Either; fetchTemplates
	a (Lcwy;)V access$000
	a (Lcwy;I)I access$1002
	a (Lcwy;Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;Lcvm;)Lcom/mojang/datafixers/util/Either; access$400
	a (Lcwy;Ljava/lang/String;)Ljava/lang/String; access$1302
	a (Lcwy;Ljava/util/List;)Ljava/util/List; access$702
	a (Lcxl$b;)I lambda$renderMultilineMessage$0
	a (Ljava/lang/String;)V setTitle
	a (Ljava/lang/String;II)V renderMousehoverTooltip
	b ()V updateButtonStates
	b (Lcwy;)V access$100
	b (Lcwy;I)I access$1202
	b (Lcwy;Ljava/lang/String;)Ljava/lang/String; access$902
	b (Ljava/lang/String;)V setWarning
	c ()Z shouldSelectButtonBeActive
	c (Lcwy;)V access$200
	d ()Z shouldPublisherBeVisible
	d (Lcwy;)V access$300
	e ()Lcom/mojang/realmsclient/dto/WorldTemplate; getSelectedTemplate
	e (Lcwy;)Lcwy$a; access$600
	f ()Z shouldTrailerBeVisible
	f (Lcwy;)Z access$800
	g ()V backButtonClicked
	g (Lcwy;)Ljava/lang/String; access$900
	h ()V selectTemplate
	h (Lcwy;)V access$1100
	i ()V onTrailer
	i (Lcwy;)I access$1200
	j ()V onPublish
cwx com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen
	a LOGGER
	b lastScreen
	c worldId
	d slotId
	e uploadButton
	f DATE_FORMAT
	g levelList
	h selectedWorld
	i worldSelectionList
	j worldLang
	k conversionLang
	l gameModesLang
	m titleLabel
	n subtitleLabel
	o noWorldsLabel
	a ()V loadLevelList
	a (Lcwx;)Lcwu; access$000
	a (Lcwx;I)I access$502
	a (Lcwx;Lnet/minecraft/realms/RealmsLevelSummary;)Ljava/lang/String; access$300
	a (Lnet/minecraft/realms/RealmsLevelSummary;)Ljava/lang/String; gameModeName
	b ()V upload
	b (Lcwx;)V access$100
	b (Lcwx;Lnet/minecraft/realms/RealmsLevelSummary;)Ljava/lang/String; access$400
	b (Lnet/minecraft/realms/RealmsLevelSummary;)Ljava/lang/String; formatLastPlayed
	c (Lcwx;)Ljava/util/List; access$200
	d (Lcwx;)I access$500
	e (Lcwx;)Lnet/minecraft/realms/RealmsButton; access$600
	f (Lcwx;)Lcwx$b; access$700
	g (Lcwx;)Ljava/lang/String; access$800
	h (Lcwx;)Ljava/lang/String; access$900
cwz com/mojang/realmsclient/gui/screens/RealmsSettingsScreen
	a configureWorldScreen
	b serverData
	c COMPONENT_WIDTH
	d doneButton
	e descEdit
	f nameEdit
	g titleLabel
	a ()V save
	a (Lcwz;)Lcwg; access$000
	b (Lcwz;)Lcom/mojang/realmsclient/dto/RealmsServer; access$100
net/minecraft/server/PacketPlayOutPlayerInfo net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket
	a action
	b entries
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/List; getEntries
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketPlayOutPlayerInfo$EnumPlayerInfoAction; getAction
dof$b net/minecraft/client/renderer/block/model/BlockModelDefinition$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; getVariants
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldof; deserialize
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ldos; getMultiPart
cxb com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen
	a LOGGER
	b lastScreen
	c serverData
	d mainScreen
	e BUTTON_BACK_ID
	f BUTTON_DELETE_ID
	g BUTTON_SUBSCRIPTION_ID
	h subscriptionTitle
	i subscriptionStartLabelText
	j timeLeftLabelText
	k daysLeftLabelText
	l daysLeft
	m startDate
	n type
	o PURCHASE_LINK
	a ()Lorg/apache/logging/log4j/Logger; access$200
	a (I)Ljava/lang/String; daysLeftPresentation
	a (J)V getSubscription
	a (Lcxb;)Lcom/mojang/realmsclient/dto/RealmsServer; access$000
	b (J)Ljava/lang/String; localPresentation
	b (Lcxb;)Lnet/minecraft/realms/RealmsScreen; access$100
	c (Lcxb;)Lnet/minecraft/realms/RealmsScreen; access$300
dof$a net/minecraft/client/renderer/block/model/BlockModelDefinition$Context
	a gson
	b definition
	a ()Lnet/minecraft/server/BlockStateList; getDefinition
	a (Lnet/minecraft/server/BlockStateList;)V setDefinition
cxa com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen
	A forceGameModeButton
	B titleLabel
	C warningLabel
	a parent
	b difficulties
	c gameModes
	d gameModeHints
	e nameEdit
	f column1_x
	g column_width
	h column2_x
	i options
	j worldType
	k activeSlot
	l difficultyIndex
	m gameModeIndex
	n pvp
	o spawnNPCs
	p spawnAnimals
	q spawnMonsters
	r spawnProtection
	s commandBlocks
	t forceGameMode
	u pvpButton
	v spawnAnimalsButton
	w spawnMonstersButton
	x spawnNPCsButton
	y spawnProtectionButton
	z commandBlocksButton
	a ()V createDifficultyAndGameMode
	a (Lcxa;)Ljava/lang/Boolean; access$000
	a (Lcxa;I)I access$202
	a (Lcxa;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$002
	a (Lcxa;Ljava/lang/Integer;)Ljava/lang/Integer; access$2002
	b ()Ljava/lang/String; difficultyTitle
	b (Lcxa;)Ljava/lang/String; access$100
	b (Lcxa;I)I access$602
	b (Lcxa;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$402
	c ()Ljava/lang/String; gameModeTitle
	c (Lcxa;)I access$200
	c (Lcxa;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$1102
	d ()Ljava/lang/String; pvpTitle
	d (Lcxa;)Ljava/lang/String; access$300
	d (Lcxa;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$1202
	e ()Ljava/lang/String; spawnAnimalsTitle
	e (Lcxa;)Ljava/lang/Boolean; access$400
	e (Lcxa;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$1402
	f ()Ljava/lang/String; spawnMonstersTitle
	f (Lcxa;)Ljava/lang/String; access$500
	f (Lcxa;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$1602
	g ()Ljava/lang/String; spawnNPCsTitle
	g (Lcxa;)I access$600
	h ()Ljava/lang/String; commandBlocksTitle
	h (Lcxa;)Ljava/lang/String; access$700
	i ()Ljava/lang/String; forceGameModeTitle
	i (Lcxa;)Lcom/mojang/realmsclient/dto/RealmsServer$c; access$800
	j ()Ljava/lang/String; getSlotName
	j (Lcxa;)Lnet/minecraft/realms/RealmsButton; access$900
	k ()V saveSettings
	k (Lcxa;)Ljava/lang/String; access$1000
	l (Lcxa;)Ljava/lang/Boolean; access$1100
	m (Lcxa;)Ljava/lang/Boolean; access$1200
	n (Lcxa;)Ljava/lang/String; access$1300
	o (Lcxa;)Ljava/lang/Boolean; access$1400
	p (Lcxa;)Ljava/lang/String; access$1500
	q (Lcxa;)Ljava/lang/Boolean; access$1600
	r (Lcxa;)Ljava/lang/String; access$1700
	s (Lcxa;)V access$1800
	t (Lcxa;)Lnet/minecraft/realms/RealmsSliderButton; access$1900
	u (Lcxa;)Ljava/lang/Integer; access$2000
net/minecraft/server/WorldGenGroundBush net/minecraft/world/level/levelgen/feature/GroundBushFeature
	a leaf
	aS trunk
	a (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;)Z doPlace
cxd com/mojang/realmsclient/gui/screens/RealmsUploadScreen
	a LOGGER
	b lastScreen
	c selectedLevel
	d worldId
	e slotId
	f uploadStatus
	g narrationRateLimiter
	h errorMessage
	i status
	j progress
	k cancelled
	l uploadFinished
	m showDots
	n uploadStarted
	o backButton
	p cancelButton
	q animTick
	r DOTS
	s dotIndex
	t previousWrittenBytes
	u previousTimeSnapshot
	v bytesPersSecond
	w uploadLock
	a ()Ljava/util/concurrent/locks/ReentrantLock; access$300
	a (J)Ljava/lang/String; humanReadableByteCount
	a (JLcxd$a;)D convertToUnit
	a (Lcxd;)V access$000
	a (Lcxd;Ljava/io/File;)Ljava/io/File; access$800
	a (Lcxd;Ljava/lang/String;)Ljava/lang/String; access$402
	a (Lcxd;Z)Z access$1402
	a (Ljava/io/File;)Z verify
	a (Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;Ljava/lang/String;Z)V addFileToTarGz
	b ()Lorg/apache/logging/log4j/Logger; access$1300
	b (J)Lcxd$a; getLargestUnit
	b (JLcxd$a;)Ljava/lang/String; humanReadableSize
	b (Lcxd;)V access$100
	b (Lcxd;Ljava/io/File;)Z access$900
	b (Lcxd;Ljava/lang/String;)Ljava/lang/String; access$1002
	b (Lcxd;Z)Z access$1502
	b (Ljava/io/File;)Ljava/io/File; tarGzipArchive
	c ()V onBack
	c (J)V drawUploadSpeed0
	c (Lcxd;)J access$200
	d ()V onCancel
	d (Lcxd;)Z access$500
	e ()V drawDots
	e (Lcxd;)V access$600
	f ()V drawProgressBar
	f (Lcxd;)Lnet/minecraft/realms/RealmsLevelSummary; access$700
	g ()V drawUploadSpeed
	g (Lcxd;)I access$1100
	h ()V upload
	h (Lcxd;)Lcvq; access$1200
	i ()V uploadCancelled
	i (Lcxd;)Lnet/minecraft/realms/RealmsButton; access$1600
dof$c net/minecraft/client/renderer/block/model/BlockModelDefinition$MissingVariantException
	a this$0
cxc com/mojang/realmsclient/gui/screens/RealmsTermsScreen
	a LOGGER
	b lastScreen
	c mainScreen
	d realmsServer
	e agreeButton
	f onLink
	g realmsToSUrl
	a ()V agreedToTos
	a (Lcxc;)V access$000
	b (Lcxc;)Lnet/minecraft/realms/RealmsScreen; access$100
net/minecraft/server/ShapeDetectorBlock net/minecraft/world/level/block/state/pattern/BlockInWorld
	a level
	b pos
	c loadChunks
	d state
	e entity
	f cachedEntity
	a ()Lnet/minecraft/server/IBlockData; getState
	a (Ljava/util/function/Predicate;)Ljava/util/function/Predicate; hasState
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$hasState$0
	a (Lnet/minecraft/server/IBlockData;)Ljava/util/function/Predicate; hasState
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$hasState$1
	b ()Lnet/minecraft/server/TileEntity; getEntity
	c ()Lnet/minecraft/server/IWorldReader; getLevel
	getPosition ()Lnet/minecraft/server/BlockPosition; getPos
cxf com/mojang/realmsclient/util/JsonUtils
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/util/Date; getDateOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;I)I getIntOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;J)J getLongOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; getStringOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Z)Z getBooleanOr
cxe com/mojang/realmsclient/gui/screens/UploadResult
	a statusCode
	b errorMessage
cxh com/mojang/realmsclient/util/RealmsTasks
	a LOGGER
	a ()Lorg/apache/logging/log4j/Logger; access$100
	a (I)V access$000
	b (I)V pause
cxg com/mojang/realmsclient/util/RealmsPersistence
	a ()Lcxg$a; readFile
	a (Lcxg$a;)V writeFile
cxj com/mojang/realmsclient/util/RealmsUtil
	a gameProfileCache
	b authenticationService
	c sessionService
	a ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; access$000
	a (Ljava/lang/Long;)Ljava/lang/String; convertToAgePresentation
	a (Ljava/lang/String;)Ljava/lang/String; uuidToName
	b (Ljava/lang/String;)Ljava/util/Map; getTextures
	c (Ljava/lang/String;)V browseTo
cxi com/mojang/realmsclient/util/RealmsTextureManager
	a textures
	b skinFetchStatus
	c fetchedSkins
	d LOGGER
	a ()Lorg/apache/logging/log4j/Logger; access$000
	a (Ljava/lang/String;)V bindFace
	a (Ljava/lang/String;Ljava/lang/Runnable;)V withBoundFace
	a (Ljava/lang/String;Ljava/lang/String;)V bindWorldTemplate
	a (Ljava/util/UUID;)V bindDefaultFace
	b ()Ljava/util/Map; access$100
	b (Ljava/lang/String;Ljava/lang/Runnable;)V lambda$withBoundFace$0
	b (Ljava/lang/String;Ljava/lang/String;)I getTextureId
	c ()Ljava/util/Map; access$200
cxl com/mojang/realmsclient/util/TextRenderingUtils
	a (Ljava/lang/String;)Ljava/util/List; lineBreak
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; split
	a (Ljava/lang/String;Ljava/util/List;)Ljava/util/List; decompose
	a (Ljava/lang/String;[Lcxl$b;)Ljava/util/List; decompose
	a (Ljava/util/List;Ljava/util/List;)Ljava/util/List; insertLinks
cwc$1 com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$1
	a this$0
cxk com/mojang/realmsclient/util/SkinProcessor
	a pixels
	b width
	c height
	a (IIII)V doLegacyTransparencyHack
	a (Ljava/awt/image/BufferedImage;)Ljava/awt/image/BufferedImage; process
	b (IIII)V setNoAlpha
cxn net/minecraft/client/AmbientOcclusionStatus
	a OFF
	b MIN
	c MAX
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Lcxn; byId
	b ()Ljava/lang/String; getKey
	b (I)[Lcxn; lambda$static$0
cxm com/mojang/realmsclient/util/UploadTokenCache
	a tokenCache
	a (J)Ljava/lang/String; get
	a (JLjava/lang/String;)V put
	b (J)V invalidate
cxp net/minecraft/client/BooleanOption
	Q getter
	R setter
	a (Lcyg;)V toggle
	a (Lcyg;III)Lczg; createButton
	a (Lcyg;Lczi;)V lambda$createButton$0
	a (Lcyg;Ljava/lang/String;)V set
	a (Lcyg;Z)V set
	b (Lcyg;)Z get
	c (Lcyg;)Ljava/lang/String; getMessage
cxo net/minecraft/client/AttackIndicatorStatus
	a OFF
	b CROSSHAIR
	c HOTBAR
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Lcxo; byId
	b ()Ljava/lang/String; getKey
	b (I)[Lcxo; lambda$static$0
net/minecraft/server/BehaviorController net/minecraft/world/entity/ai/Brain
	c availableGoalsByPriority
	e activityRequirements
	f coreActivities
	g activeActivities
	h defaultActivity
	i lastScheduleUpdate
	a ()Ljava/util/Map; getMemories
	a (JJ)V updateActivity
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$serialize$12
	a (Lcom/mojang/datafixers/util/Pair;)Z lambda$activityRequirementsAreMet$19
	a (Ljava/lang/Integer;)Ljava/util/Map; lambda$null$5
	a (Ljava/lang/Object;)Z isEmptyCollection
	a (Ljava/util/Map$Entry;)Z lambda$startEachNonRunningBehavior$15
	a (Ljava/util/Map;)Ljava/util/stream/Stream; lambda$startEachNonRunningBehavior$14
	a (Ljava/util/Set;)V setCoreActivities
	a (Lnet/minecraft/server/Activity;)V setActivity
	a (Lnet/minecraft/server/Activity;Lcom/google/common/collect/ImmutableList;)V addActivity
	a (Lnet/minecraft/server/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V addActivity
	a (Lnet/minecraft/server/Activity;Lcom/mojang/datafixers/util/Pair;)V lambda$addActivity$7
	a (Lnet/minecraft/server/Behavior;)Z lambda$startEachNonRunningBehavior$16
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/MemoryModuleType;Ljava/lang/Object;)V lambda$null$8
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/MemoryModuleType;Ljava/util/Optional;)V lambda$copyWithoutGoals$9
	a (Lnet/minecraft/server/MemoryModuleType;Lcom/mojang/datafixers/Dynamic;)V readMemory
	a (Lnet/minecraft/server/MemoryModuleType;Lnet/minecraft/server/MemoryStatus;)Z checkMemory
	a (Lnet/minecraft/server/Sensor;)V lambda$new$2
	a (Lnet/minecraft/server/SensorType;)V lambda$new$1
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V tick
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;JLnet/minecraft/server/Behavior;)V lambda$tickEachRunningBehavior$18
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Sensor;)V lambda$tickEachSensor$13
	b (Ljava/util/Map$Entry;)Z lambda$serialize$11
	b (Ljava/util/Map;)Ljava/util/stream/Stream; lambda$getRunningBehaviorsStream$3
	b (Lnet/minecraft/server/Activity;)V setDefaultActivity
	b (Lnet/minecraft/server/Behavior;)Z lambda$getRunningBehaviorsStream$4
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V stopAll
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;JLnet/minecraft/server/Behavior;)V lambda$startEachNonRunningBehavior$17
	c ()Ljava/util/Set; getActiveActivities
	c (Lnet/minecraft/server/Activity;)Z isActive
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V tickEachSensor
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;JLnet/minecraft/server/Behavior;)V lambda$stopAll$10
	d ()Ljava/util/stream/Stream; getRunningBehaviorsStream
	d (Lnet/minecraft/server/Activity;)Z activityRequirementsAreMet
	d (Lnet/minecraft/server/MemoryModuleType;)V lambda$new$0
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V startEachNonRunningBehavior
	e ()V useDefaultActivity
	e (Lnet/minecraft/server/Activity;)Ljava/util/Set; lambda$null$6
	e (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V tickEachRunningBehavior
	f ()Lnet/minecraft/server/BehaviorController; copyWithoutGoals
	hasMemory (Lnet/minecraft/server/MemoryModuleType;)Z hasMemoryValue
	removeMemory (Lnet/minecraft/server/MemoryModuleType;)V eraseMemory
cxr net/minecraft/client/ClientRecipeBook
	k recipes
	l collectionsByTab
	m collections
	a (Lcyj;)Ljava/util/List; getCollection
	a (Lcyj;Ldfc;)V addToCollection
	b (Lcyj;)Ldfc; createCollection
	b (Lnet/minecraft/server/ContainerRecipeBook;)Ljava/util/List; getCategories
	c (Lcyj;)Ljava/util/List; lambda$addToCollection$1
	d (Lcyj;)Ljava/util/List; lambda$createCollection$0
	g (Lnet/minecraft/server/IRecipe;)Lcyj; getCategory
	i ()V setupCollections
	j ()Ljava/util/List; getCollections
cxq net/minecraft/client/Camera
	a initialized
	b level
	c entity
	d position
	e blockPosition
	f forwards
	g up
	h left
	i xRot
	j yRot
	k detached
	l mirror
	m eyeHeight
	n eyeHeightOld
	a ()V tick
	a (D)D getMaxZoom
	a (DDD)V move
	a (FF)V setRotation
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/Entity;ZZF)V setup
	a (Lnet/minecraft/server/Vec3D;)V setPosition
	b ()V recalculateViewVector
	b (DDD)V setPosition
	c ()Lnet/minecraft/server/Vec3D; getPosition
	d ()Lnet/minecraft/server/BlockPosition; getBlockPosition
	e ()F getXRot
	f ()F getYRot
	g ()Lnet/minecraft/server/Entity; getEntity
	h ()Z isInitialized
	i ()Z isDetached
	j ()Z isMirror
	k ()Lnet/minecraft/server/Fluid; getFluidInCamera
	l ()Lnet/minecraft/server/Vec3D; getLookVector
	m ()Lnet/minecraft/server/Vec3D; getUpVector
	n ()Lnet/minecraft/server/Vec3D; getLeftVector
	o ()V reset
cxt net/minecraft/client/CycleOption
	Q setter
	R toString
	a (Lcyg;I)V toggle
	a (Lcyg;III)Lczg; createButton
	a (Lcyg;Lczi;)V lambda$createButton$0
	c (Lcyg;)Ljava/lang/String; getMessage
cxs net/minecraft/client/CloudStatus
	a OFF
	b FAST
	c FANCY
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Lcxs; byId
	b ()Ljava/lang/String; getKey
	b (I)[Lcxs; lambda$static$0
net/minecraft/server/BlockRedstoneTorchWall net/minecraft/world/level/block/RedstoneWallTorchBlock
	b FACING
	c LIT
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z hasNeighborSignal
	l ()Ljava/lang/String; getDescriptionId
cxv net/minecraft/client/FullscreenResolutionProgressOption
	a (Lcuh;Lcun;)Ljava/lang/Double; lambda$null$0
	a (Lcuh;Lcuo;Lcyg;)Ljava/lang/Double; lambda$new$1
	a (Lcuh;Lcuo;Lcyg;Ljava/lang/Double;)V lambda$new$2
	a (Lcuh;Lcyg;Lcyi;)Ljava/lang/String; lambda$new$3
net/minecraft/server/ItemWaterLily net/minecraft/world/item/WaterLilyBlockItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
cxu net/minecraft/client/DebugQueryHandler
	a connection
	b transactionId
	c callback
	a (ILjava/util/function/Consumer;)V queryEntityTag
	a (ILnet/minecraft/server/NBTTagCompound;)Z handleResponse
	a (Ljava/util/function/Consumer;)I startTransaction
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Consumer;)V queryBlockEntityTag
dny$d$2 net/minecraft/client/renderer/block/ModelBlockRenderer$Cache$2
	a this$0
cxx net/minecraft/client/GuiMessage
	a addedTime
	b message
	c id
	a ()Lnet/minecraft/server/IChatBaseComponent; getMessage
	b ()I getAddedTime
	c ()I getId
dny$d$1 net/minecraft/client/renderer/block/ModelBlockRenderer$Cache$1
	a this$0
cxw net/minecraft/client/Game
	a minecraft
	b launcher
	c listener
	a ()V onStartGameSession
	b ()V onLeaveGameSession
dzw$a net/minecraft/client/searchtree/ReloadableSearchTree$MergingUniqueIterator
	a firstIterator
	b secondIterator
	c orderT
cxz net/minecraft/client/KeyMapping
	a ALL
	b MAP
	c CATEGORIES
	d CATEGORY_SORT_ORDER
	e name
	f defaultKey
	g category
	h key
	i isDown
	j clickCount
	a ()V setAll
	a (I)Z matchesMouse
	a (II)Z matches
	a (Lcue$a;)V click
	a (Lcue$a;Z)V set
	a (Lcxz;)I compareTo
	a (Ljava/lang/String;)Ljava/util/function/Supplier; createNameSupplier
	a (Ljava/util/HashMap;)V lambda$static$0
	b ()V releaseAll
	b (Lcue$a;)V setKey
	b (Lcxz;)Z same
	b (Ljava/lang/String;)Ljava/lang/String; lambda$createNameSupplier$1
	c ()V resetMapping
	d ()Z isDown
	e ()Ljava/lang/String; getCategory
	f ()Z consumeClick
	g ()Ljava/lang/String; getName
	h ()Lcue$a; getDefaultKey
	i ()Z isUnbound
	j ()Ljava/lang/String; getTranslatedKeyMessage
	k ()Z isDefault
	l ()Ljava/lang/String; saveString
	m ()V release
cwt$2 com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen$2
	a this$0
net/minecraft/server/WorldGenFeatureCoral net/minecraft/world/level/levelgen/feature/CoralFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z placeFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
	b (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z placeCoralBlock
net/minecraft/server/CommandWorldBorder net/minecraft/server/commands/WorldBorderCommand
	a ERROR_SAME_CENTER
	b ERROR_SAME_SIZE
	c ERROR_TOO_SMALL
	d ERROR_TOO_BIG
	e ERROR_SAME_WARNING_TIME
	f ERROR_SAME_WARNING_DISTANCE
	g ERROR_SAME_DAMAGE_BUFFER
	h ERROR_SAME_DAMAGE_AMOUNT
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	a (Lnet/minecraft/server/CommandListenerWrapper;)I getSize
	a (Lnet/minecraft/server/CommandListenerWrapper;DJ)I setSize
	a (Lnet/minecraft/server/CommandListenerWrapper;F)I setDamageBuffer
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I setWarningTime
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Vec2F;)I setCenter
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	b (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	b (Lnet/minecraft/server/CommandListenerWrapper;F)I setDamageAmount
	b (Lnet/minecraft/server/CommandListenerWrapper;I)I setWarningDistance
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
cxy net/minecraft/client/HotbarManager
	a LOGGER
	b optionsFile
	c fixerUpper
	d hotbars
	e loaded
	a ()V save
	a (I)Ldmr; get
	b ()V load
cwt$3 com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen$3
	a this$0
cwt$1 com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen$1
	a this$0
net/minecraft/server/ItemShield net/minecraft/world/item/ShieldItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbdr;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)F lambda$new$0
	e (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumColor; getColor
	e_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	f (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; getDescriptionId
	f_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
cya net/minecraft/client/KeyboardHandler
	a minecraft
	b sendRepeatsToGui
	c clipboardManager
	d debugCrashKeyTime
	e debugCrashKeyReportedTime
	f debugCrashKeyReportedCount
	g handledDebugKey
	a ()Ljava/lang/String; getClipboard
	a (I)V handleModelDebugHotkeys
	a (IJ)V lambda$getClipboard$7
	a (I[ZLdad;III)V lambda$keyPress$4
	a (J)V setup
	a (JII)V charTyped
	a (JIIII)V keyPress
	a (Ldae;CI)V lambda$charTyped$6
	a (Ldae;II)V lambda$charTyped$5
	a (Ljava/lang/String;)V setClipboard
	a (Ljava/lang/String;[Ljava/lang/Object;)V debugFeedbackTranslated
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/NBTTagCompound;)V copyCreateBlockCommand
	a (Lnet/minecraft/server/IChatBaseComponent;)V lambda$keyPress$3
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/NBTTagCompound;)V copyCreateEntityCommand
	a (Z)V setSendRepeatsToGui
	a (ZZ)V copyRecreateCommand
	b ()V tick
	b (I)Z handleChunkDebugKeys
	b (Ljava/lang/String;[Ljava/lang/Object;)V debugWarningTranslated
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/NBTTagCompound;)V lambda$copyRecreateCommand$0
	b (Lnet/minecraft/server/IChatBaseComponent;)V lambda$null$2
	b (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/NBTTagCompound;)V lambda$copyRecreateCommand$1
	c (I)Z handleDebugKeys
	c (Ljava/lang/String;[Ljava/lang/Object;)V debugFeedback
eap$a net/minecraft/client/sounds/SoundManager$Preparations
	a registry
	a (Leap$a;)Ljava/util/Map; access$300
	a (Leap$a;Lnet/minecraft/server/MinecraftKey;Ldzn;Lnet/minecraft/server/IResourceManager;)V access$000
	a (Ljava/util/Map;Leam;)V apply
	a (Lnet/minecraft/server/MinecraftKey;Ldzn;Lnet/minecraft/server/IResourceManager;)V handleRegistration
cyc net/minecraft/client/Minecraft
	A fpsString
	B wireframe
	C chunkPath
	D chunkVisibility
	E smartCull
	F LOGGER
	G RESOURCE_RELOAD_INITIAL_TASK
	H MAX_SUPPORTED_TEXTURE_SIZE
	I resourcePackDirectory
	J profileProperties
	K displayData
	L currentServer
	M textureManager
	N instance
	O fixerUpper
	P virtualScreen
	Q hasCrashed
	R delayedCrash
	S connectedToRealms
	T timer
	U snooper
	V entityRenderDispatcher
	W itemRenderer
	X itemInHandRenderer
	Y searchRegistry
	Z user
	a ON_OSX
	aA mainRenderTarget
	aB textureAtlas
	aC soundManager
	aD musicManager
	aE fontManager
	aF splashManager
	aG minecraftSessionService
	aH skinManager
	aI gameThread
	aJ modelManager
	aK blockRenderer
	aL paintingTextures
	aM mobEffectTextures
	aN toast
	aO game
	aP running
	aQ lastTime
	aR frames
	aS tutorial
	aT windowActive
	aU progressTasks
	aV pendingReload
	aW debugPath
	aa pause
	ab pausePartialTick
	ac singleplayerServer
	ad progressListener
	ae hotbarManager
	af assetsDirectory
	ag launchedVersion
	ah versionType
	ai proxy
	aj levelSource
	ak fps
	al rightClickDelay
	am connectToIp
	an connectToPort
	ao lastNanoTime
	ap is64bit
	aq demo
	ar pendingConnection
	as isLocalServer
	at profiler
	au resourceManager
	av clientPackSource
	aw resourcePackRepository
	ax languageManager
	ay blockColors
	az itemColors
	b DEFAULT_FONT
	c ALT_FONT
	d reserve
	e gameMode
	f window
	g level
	h levelRenderer
	i player
	j cameraEntity
	k crosshairPickEntity
	l particleEngine
	m font
	n screen
	o overlay
	p gameRenderer
	q debugRenderer
	r missTime
	s gui
	t noRender
	u hitResult
	v options
	w mouseHandler
	x keyboardHandler
	y gameDirectory
	z frameTimer
	A ()Leac; getSingleplayerServer
	B ()Lnet/minecraft/server/MojangStatisticsGenerator; getSnooper
	C ()Lcyn; getUser
	D ()Lcom/mojang/authlib/properties/PropertyMap; getProfileProperties
	E ()Ljava/net/Proxy; getProxy
	F ()Ldxc; getTextureManager
	G ()Lnet/minecraft/server/IResourceManager; getResourceManager
	H ()Lnet/minecraft/server/ResourcePackRepository; getResourcePackRepository
	I ()Ldxj; getClientPackSource
	J ()Ljava/io/File; getResourcePackDirectory
	K ()Ldxz; getLanguageManager
	L ()Ldxa; getTextureAtlas
	M ()Z is64Bit
	N ()Z isPaused
	O ()Leap; getSoundManager
	P ()Leak$a; getSituationalMusic
	Q ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
	R ()Z isSnooperEnabled
	S ()Ldxt; getSkinManager
	T ()Lnet/minecraft/server/Entity; getCameraEntity
	U ()Ldnw; getBlockRenderer
	V ()Ldsa; getEntityRenderDispatcher
	W ()Ldsv; getItemRenderer
	X ()Ldne; getItemInHandRenderer
	Y ()I getAverageFps
	Z ()Lnet/minecraft/server/CircularTimer; getFrameTimer
	a ()V resizeDisplay
	a (I)V debugFpsMeterKeyPress
	a (IJ)V onFullscreenError
	a (Lcyc;)Z access$000
	a (Ldcg;)V setOverlay
	a (Ldcl;)V setScreen
	a (Ldfc;)Ljava/util/stream/Stream; lambda$createSearchTrees$15
	a (Ldkf;)V setLevel
	a (Ldki;)V setCurrentServer
	a (Ldzw;Ldzv;Lnet/minecraft/server/ItemStack;)V lambda$createSearchTrees$9
	a (Ldzx$a;)Ldzu; getSearchTree
	a (Ljava/io/File;II)Lnet/minecraft/server/IChatBaseComponent; grabPanoramixScreenshot
	a (Ljava/io/File;IIII)Lnet/minecraft/server/IChatBaseComponent; grabHugeScreenshot
	a (Ljava/io/File;Lnet/minecraft/server/ChatModifier;)V lambda$grabHugeScreenshot$30
	a (Ljava/lang/String;)Z lambda$null$12
	a (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/WorldSettings;)V selectLevel
	a (Ljava/lang/String;ZLjava/util/function/Supplier;Lnet/minecraft/server/IResourcePack;Lnet/minecraft/server/ResourcePackInfo;Lnet/minecraft/server/ResourcePackLoader$Position;)Ldxw; lambda$new$2
	a (Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)V lambda$reloadResourcePacks$16
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage; lambda$delayTextureReload$27
	a (Lnet/minecraft/server/CrashReport;)V delayCrash
	a (Lnet/minecraft/server/Entity;)V setCameraEntity
	a (Lnet/minecraft/server/IChatBaseComponent;)V lambda$grabPanoramixScreenshot$28
	a (Lnet/minecraft/server/IRecipe;)Lnet/minecraft/server/MinecraftKey; lambda$null$14
	a (Lnet/minecraft/server/ItemStack;)Ljava/util/stream/Stream; lambda$createSearchTrees$8
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/TileEntity;)Lnet/minecraft/server/ItemStack; addCustomNbtData
	a (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooper
	a (Z)V setWindowActive
	aA ()V selfTest
	aB ()I getFramerateLimit
	aC ()Z isFramerateLimited
	aD ()V renderFpsMeter
	aE ()V startAttack
	aF ()V startUseItem
	aG ()V handleKeybinds
	aH ()V pickBlock
	aI ()Ljava/lang/String; getCurrentSnooperAction
	aJ ()Ljava/lang/String; lambda$fillReport$26
	aK ()Ljava/lang/String; lambda$fillReport$25
	aL ()Ljava/lang/String; lambda$fillReport$24
	aM ()Ljava/lang/String; lambda$fillReport$23
	aN ()Ljava/lang/String; lambda$fillReport$22
	aO ()Z lambda$tick$19
	aP ()V lambda$tick$18
	aQ ()V lambda$init$3
	aR ()I lambda$new$0
	aa ()Z isConnectedToRealms
	ab ()Lcom/mojang/datafixers/DataFixer; getFixerUpper
	ac ()F getFrameTime
	ad ()F getDeltaFrameTime
	ae ()Lcyp; getBlockColors
	af ()Lcys; getItemColors
	ag ()Z showOnlyReducedInfo
	ah ()Ldan; getToasts
	ai ()Leaz; getTutorial
	aj ()Z isWindowActive
	ak ()Lcxy; getHotbarManager
	al ()Ldyt; getModelManager
	am ()Ldar; getFontManager
	an ()Ldxs; getPaintingTextures
	ao ()Ldxr; getMobEffectTextures
	ap ()Lnet/minecraft/server/GameProfilerFiller; getProfiler
	aq ()Lcxw; getGame
	ar ()Lvx; getProgressListener
	as ()Ldxu; getSplashManager
	at ()Ldcg; getOverlay
	au ()V init
	av ()V createSearchTrees
	aw ()Z checkIs64Bit
	ay ()Ljava/lang/Thread; getRunningThread
	az ()V startTimerHackThread
	b ()V run
	b (I)Lnet/minecraft/server/WorldLoadListener; lambda$selectLevel$20
	b (Ldcl;)V clearLevel
	b (Ldfc;)Ljava/util/stream/Stream; lambda$createSearchTrees$13
	b (Ldkf;)V updateLevelInEngines
	b (Ljava/io/File;Lnet/minecraft/server/ChatModifier;)V lambda$grabPanoramixScreenshot$29
	b (Ljava/lang/String;)Z lambda$null$5
	b (Ljava/util/concurrent/CompletableFuture;)V lambda$runTick$17
	b (Ljava/util/function/Supplier;)Lnet/minecraft/server/IResourcePack; lambda$null$1
	b (Lnet/minecraft/server/CrashReport;)Lnet/minecraft/server/CrashReport; fillReport
	b (Lnet/minecraft/server/IChatBaseComponent;)V lambda$selectLevel$21
	b (Lnet/minecraft/server/IRecipe;)Ljava/util/stream/Stream; lambda$null$10
	b (Lnet/minecraft/server/ItemStack;)Ljava/util/stream/Stream; lambda$createSearchTrees$7
	b (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooperInitial
	b (Z)V updateDisplay
	c ()Lctz; getMainRenderTarget
	c (Ldcl;)V updateScreenAndTick
	c (Ljava/lang/Runnable;)Z shouldRun
	c (Lnet/minecraft/server/CrashReport;)V crash
	c (Lnet/minecraft/server/IChatBaseComponent;)Ljava/lang/String; lambda$null$11
	c (Lnet/minecraft/server/ItemStack;)Ljava/util/stream/Stream; lambda$createSearchTrees$6
	c (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooperWithOpenGL
	c (Z)V pauseGame
	d ()Ljava/lang/String; getLaunchedVersion
	d (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	d (Lnet/minecraft/server/IChatBaseComponent;)Ljava/lang/String; lambda$null$4
	d (Z)V setConnectedToRealms
	e ()Ljava/lang/String; getVersionType
	e (Z)V runTick
	f ()Z isEnforceUnicode
	f (Z)V continueAttack
	g ()Ljava/util/concurrent/CompletableFuture; reloadResourcePacks
	h ()Lnet/minecraft/server/Convertable; getLevelSource
	i ()V destroy
	j ()V emergencySave
	k ()V stop
	l ()Leak; getMusicManager
	m ()V tick
	n ()V clearLevel
	o ()Z isDemo
	p ()Ldkc; getConnection
	r ()Z renderNames
	s ()Z useFancyGraphics
	t ()Z useAmbientOcclusion
	u ()Lcyc; getInstance
	v ()Ljava/util/concurrent/CompletableFuture; delayTextureReload
	w ()I maxSupportedTextureSize
	x ()Ldki; getCurrentServer
	y ()Z isLocalServer
	z ()Z hasSingleplayerServer
net/minecraft/server/NewVillagePieces net/minecraft/world/level/levelgen/feature/VillagePieces
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Lnet/minecraft/server/SeededRandom;Lnet/minecraft/server/WorldGenFeatureVillageConfiguration;)V addPieces
cyb net/minecraft/client/LogaritmicProgressOption
	a (D)D toPct
	b (D)D toValue
cye net/minecraft/client/NarratorStatus
	a OFF
	b ALL
	c CHAT
	d SYSTEM
	e BY_ID
	f id
	g key
	h $VALUES
	a ()I getId
	a (I)Lcye; byId
	b ()Ljava/lang/String; getKey
	b (I)[Lcye; lambda$static$0
cyd net/minecraft/client/MouseHandler
	a minecraft
	b isLeftPressed
	c isMiddlePressed
	d isRightPressed
	e xpos
	f ypos
	g fakeRightMouse
	h activeButton
	i ignoreFirstMove
	j clickDepth
	k mousePressedTime
	l smoothTurnX
	m smoothTurnY
	n accumulatedDX
	o accumulatedDY
	p accumulatedScroll
	q lastMouseEventTime
	r mouseGrabbed
	a ()V turnPlayer
	a (J)V setup
	a (JDD)V onScroll
	a (JIII)V onPress
	a (Ldae;DD)V lambda$onMove$2
	a (Ldae;DDDD)V lambda$onMove$3
	a ([ZDDI)V lambda$onPress$1
	b ()Z isLeftPressed
	b (JDD)V onMove
	b ([ZDDI)V lambda$onPress$0
	c ()Z isMiddlePressed
	d ()Z isRightPressed
	e ()D xpos
	f ()D ypos
	g ()V setIgnoreFirstMove
	h ()Z isMouseGrabbed
	i ()V grabMouse
	j ()V releaseMouse
net/minecraft/server/CriterionTriggerBredAnimals net/minecraft/advancements/critereon/BredAnimalsTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityAnimal;Lnet/minecraft/server/EntityAnimal;Lnet/minecraft/server/EntityAgeable;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lae$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
cyg net/minecraft/client/Options
	A attackIndicator
	B tutorialStep
	C biomeBlendRadius
	D mouseWheelSensitivity
	E rawMouseInput
	F glDebugVerbosity
	G autoJump
	H autoSuggestions
	I chatColors
	J chatLinks
	K chatLinksPrompt
	L enableVsync
	M entityShadows
	N forceUnicodeFont
	O invertYMouse
	P discreteMouseScroll
	Q realmsNotifications
	R reducedDebugInfo
	S snooperEnabled
	T showSubtitles
	U backgroundForChatOnly
	V touchscreen
	W fullscreen
	X bobView
	Y keyUp
	Z keyLeft
	a COLON_SPLITTER
	aA hideGui
	aB thirdPersonView
	aC renderDebug
	aD renderDebugCharts
	aE renderFpsChart
	aF lastMpIp
	aG smoothCamera
	aH fov
	aI gamma
	aJ guiScale
	aK particles
	aL narratorStatus
	aM languageCode
	aN LOGGER
	aO GSON
	aP RESOURCE_PACK_TYPE
	aQ modelParts
	aR sourceVolumes
	aS optionsFile
	aa keyDown
	ab keyRight
	ac keyJump
	ad keySneak
	ae keySprint
	af keyInventory
	ag keySwapHands
	ah keyDrop
	ai keyUse
	aj keyAttack
	ak keyPickItem
	al keyChat
	am keyPlayerList
	an keyCommand
	ao keyScreenshot
	ap keyTogglePerspective
	aq keySmoothCamera
	ar keyFullscreen
	as keySpectatorOutlines
	at keyAdvancements
	au keyHotbarSlots
	av keySaveHotbarActivator
	aw keyLoadHotbarActivator
	ax keyMappings
	ay minecraft
	az difficulty
	b sensitivity
	c renderDistance
	d framerateLimit
	e renderClouds
	f fancyGraphics
	g ambientOcclusion
	h resourcePacks
	i incompatibleResourcePacks
	j chatVisibility
	k chatOpacity
	l textBackgroundOpacity
	m fullscreenVideoModeString
	n hideServerAddress
	o advancedItemTooltips
	p pauseOnLostFocus
	q mainHand
	r overrideWidth
	s overrideHeight
	t heldItemTooltips
	u chatScale
	v chatWidth
	w chatHeightUnfocused
	x chatHeightFocused
	y mipmapLevels
	z useNativeTransport
	a ()V load
	a (F)F getBackgroundOpacity
	a (I)I getBackgroundColor
	a (Lawh;)V toggleModelPart
	a (Lawh;Z)V setModelPart
	a (Lcxz;Lcue$a;)V setKey
	a (Ljava/lang/String;)F readFloat
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; dataFix
	a (Lnet/minecraft/server/ResourcePackRepository;)V loadResourcePacks
	a (Lnet/minecraft/server/SoundCategory;)F getSoundSourceVolume
	a (Lnet/minecraft/server/SoundCategory;F)V setSoundCategoryVolume
	b ()V save
	b (F)I getBackgroundColor
	c ()V broadcastOptions
	d ()Ljava/util/Set; getModelParts
	e ()Lcxs; getCloudsType
	f ()Z useNativeTransport
awg$1 net/minecraft/world/entity/player/Player$1
	a $SwitchMap$net$minecraft$world$entity$Pose
cyf net/minecraft/client/Option
	A AUTO_SUGGESTIONS
	B CHAT_COLOR
	C CHAT_LINKS
	D CHAT_LINKS_PROMPT
	E DISCRETE_MOUSE_SCROLL
	F ENABLE_VSYNC
	G ENTITY_SHADOWS
	H FORCE_UNICODE_FONT
	I INVERT_MOUSE
	J REALMS_NOTIFICATIONS
	K REDUCED_DEBUG_INFO
	L SHOW_SUBTITLES
	M SNOOPER_ENABLED
	N TOUCHSCREEN
	O USE_FULLSCREEN
	P VIEW_BOBBING
	Q captionId
	a BIOME_BLEND_RADIUS
	b CHAT_HEIGHT_FOCUSED
	c CHAT_HEIGHT_UNFOCUSED
	d CHAT_OPACITY
	e CHAT_SCALE
	f CHAT_WIDTH
	g FOV
	h FRAMERATE_LIMIT
	i GAMMA
	j MIPMAP_LEVELS
	k MOUSE_WHEEL_SENSITIVITY
	l RAW_MOUSE_INPUT
	m RENDER_DISTANCE
	n SENSITIVITY
	o TEXT_BACKGROUND_OPACITY
	p AMBIENT_OCCLUSION
	q ATTACK_INDICATOR
	r CHAT_VISIBILITY
	s GRAPHICS
	t GUI_SCALE
	u MAIN_HAND
	v NARRATOR
	w PARTICLES
	x RENDER_CLOUDS
	y TEXT_BACKGROUND
	z AUTO_JUMP
	A (Lcyg;)Ljava/lang/Double; lambda$static$18
	B (Lcyg;)Ljava/lang/Double; lambda$static$15
	C (Lcyg;)Ljava/lang/Double; lambda$static$12
	D (Lcyg;)Ljava/lang/Double; lambda$static$9
	E (Lcyg;)Ljava/lang/Double; lambda$static$6
	F (Lcyg;)Ljava/lang/Double; lambda$static$3
	G (Lcyg;)Ljava/lang/Double; lambda$static$0
	a ()Ljava/lang/String; getCaption
	a (Lcyg;)Z lambda$static$96
	a (Lcyg;III)Lczg; createButton
	a (Lcyg;Lcxt;)Ljava/lang/String; lambda$static$63
	a (Lcyg;Lcyi;)Ljava/lang/String; lambda$static$43
	a (Lcyg;Ljava/lang/Boolean;)V lambda$static$97
	a (Lcyg;Ljava/lang/Double;)V lambda$static$42
	a (Lcyg;Ljava/lang/Integer;)V lambda$static$62
	b (Lcyg;)Z lambda$static$94
	b (Lcyg;Lcxt;)Ljava/lang/String; lambda$static$61
	b (Lcyg;Lcyi;)Ljava/lang/String; lambda$static$40
	b (Lcyg;Ljava/lang/Boolean;)V lambda$static$95
	b (Lcyg;Ljava/lang/Double;)V lambda$static$39
	b (Lcyg;Ljava/lang/Integer;)V lambda$static$60
	c (Lcyg;)Ljava/lang/String; getMessage
	c (Lcyg;Lcxt;)Ljava/lang/String; lambda$static$59
	c (Lcyg;Lcyi;)Ljava/lang/String; lambda$static$37
	c (Lcyg;Ljava/lang/Boolean;)V lambda$static$93
	c (Lcyg;Ljava/lang/Double;)V lambda$static$36
	c (Lcyg;Ljava/lang/Integer;)V lambda$static$58
	d (Lcyg;)Z lambda$static$92
	d (Lcyg;Lcxt;)Ljava/lang/String; lambda$static$57
	d (Lcyg;Lcyi;)Ljava/lang/String; lambda$static$32
	d (Lcyg;Ljava/lang/Boolean;)V lambda$static$91
	d (Lcyg;Ljava/lang/Double;)V lambda$static$31
	d (Lcyg;Ljava/lang/Integer;)V lambda$static$56
	e (Lcyg;)Z lambda$static$90
	e (Lcyg;Lcxt;)Ljava/lang/String; lambda$static$55
	e (Lcyg;Lcyi;)Ljava/lang/String; lambda$static$29
	e (Lcyg;Ljava/lang/Boolean;)V lambda$static$89
	e (Lcyg;Ljava/lang/Double;)V lambda$static$28
	e (Lcyg;Ljava/lang/Integer;)V lambda$static$54
	f (Lcyg;)Z lambda$static$88
	f (Lcyg;Lcxt;)Ljava/lang/String; lambda$static$53
	f (Lcyg;Lcyi;)Ljava/lang/String; lambda$static$26
	f (Lcyg;Ljava/lang/Boolean;)V lambda$static$87
	f (Lcyg;Ljava/lang/Double;)V lambda$static$25
	f (Lcyg;Ljava/lang/Integer;)V lambda$static$52
	g (Lcyg;)Z lambda$static$86
	g (Lcyg;Lcxt;)Ljava/lang/String; lambda$static$51
	g (Lcyg;Lcyi;)Ljava/lang/String; lambda$static$23
	g (Lcyg;Ljava/lang/Boolean;)V lambda$static$85
	g (Lcyg;Ljava/lang/Double;)V lambda$static$22
	g (Lcyg;Ljava/lang/Integer;)V lambda$static$50
	h (Lcyg;)Z lambda$static$84
	h (Lcyg;Lcxt;)Ljava/lang/String; lambda$static$49
	h (Lcyg;Lcyi;)Ljava/lang/String; lambda$static$20
	h (Lcyg;Ljava/lang/Boolean;)V lambda$static$83
	h (Lcyg;Ljava/lang/Double;)V lambda$static$19
	h (Lcyg;Ljava/lang/Integer;)V lambda$static$48
	i (Lcyg;)Z lambda$static$82
	i (Lcyg;Lcxt;)Ljava/lang/String; lambda$static$47
	i (Lcyg;Lcyi;)Ljava/lang/String; lambda$static$17
	i (Lcyg;Ljava/lang/Boolean;)V lambda$static$81
	i (Lcyg;Ljava/lang/Double;)V lambda$static$16
	i (Lcyg;Ljava/lang/Integer;)V lambda$static$46
	j (Lcyg;)Z lambda$static$80
	j (Lcyg;Lcxt;)Ljava/lang/String; lambda$static$45
	j (Lcyg;Lcyi;)Ljava/lang/String; lambda$static$14
	j (Lcyg;Ljava/lang/Boolean;)V lambda$static$79
	j (Lcyg;Ljava/lang/Double;)V lambda$static$13
	j (Lcyg;Ljava/lang/Integer;)V lambda$static$44
	k (Lcyg;)Z lambda$static$78
	k (Lcyg;Lcyi;)Ljava/lang/String; lambda$static$11
	k (Lcyg;Ljava/lang/Boolean;)V lambda$static$77
	k (Lcyg;Ljava/lang/Double;)V lambda$static$10
	l (Lcyg;)Z lambda$static$76
	l (Lcyg;Lcyi;)Ljava/lang/String; lambda$static$8
	l (Lcyg;Ljava/lang/Boolean;)V lambda$static$75
	l (Lcyg;Ljava/lang/Double;)V lambda$static$7
	m (Lcyg;)Z lambda$static$74
	m (Lcyg;Lcyi;)Ljava/lang/String; lambda$static$5
	m (Lcyg;Ljava/lang/Boolean;)V lambda$static$73
	m (Lcyg;Ljava/lang/Double;)V lambda$static$4
	n (Lcyg;)Z lambda$static$72
	n (Lcyg;Lcyi;)Ljava/lang/String; lambda$static$2
	n (Lcyg;Ljava/lang/Boolean;)V lambda$static$71
	n (Lcyg;Ljava/lang/Double;)V lambda$static$1
	o (Lcyg;)Z lambda$static$70
	o (Lcyg;Ljava/lang/Boolean;)V lambda$static$69
	p (Lcyg;)Z lambda$static$68
	p (Lcyg;Ljava/lang/Boolean;)V lambda$static$67
	q (Lcyg;)Z lambda$static$66
	q (Lcyg;Ljava/lang/Boolean;)V lambda$static$65
	r (Lcyg;)Z lambda$static$64
	r (Lcyg;Ljava/lang/Boolean;)V lambda$static$34
	s (Lcyg;)Ljava/lang/Double; lambda$static$41
	t (Lcyg;)Ljava/lang/Double; lambda$static$38
	u (Lcyg;)Ljava/lang/Double; lambda$static$35
	v (Lcyg;)Z lambda$static$33
	w (Lcyg;)Ljava/lang/Double; lambda$static$30
	x (Lcyg;)Ljava/lang/Double; lambda$static$27
	y (Lcyg;)Ljava/lang/Double; lambda$static$24
	z (Lcyg;)Ljava/lang/Double; lambda$static$21
cyi net/minecraft/client/ProgressOption
	Q steps
	R minValue
	S maxValue
	T getter
	U setter
	V toString
	a (D)D toPct
	a (F)V setMaxValue
	a (Lcyg;)D get
	a (Lcyg;D)V set
	a (Lcyg;III)Lczg; createButton
	b ()D getMinValue
	b (D)D toValue
	c ()D getMaxValue
	c (D)D clamp
	c (Lcyg;)Ljava/lang/String; getMessage
net/minecraft/server/BlockPropertyStructureMode net/minecraft/world/level/block/state/properties/StructureMode
	e name
	f $VALUES
	m ()Ljava/lang/String; getSerializedName
cyh net/minecraft/client/ParticleStatus
	a ALL
	b DECREASED
	c MINIMAL
	d BY_ID
	e id
	f key
	g $VALUES
	a ()Ljava/lang/String; getKey
	a (I)Lcyh; byId
	b ()I getId
	b (I)[Lcyh; lambda$static$0
crm$a net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionEntityProperty; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionEntityProperty;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cyk net/minecraft/client/Screenshot
	a LOGGER
	b DATE_FORMAT
	c rowHeight
	d outputStream
	e bytes
	f width
	g height
	h file
	a ()V saveRow
	a (IILctz;)Lcuj; takeScreenshot
	a (Lcuj;Ljava/io/File;Ljava/util/function/Consumer;)V lambda$grab$1
	a (Ljava/io/File;)Ljava/io/File; getFile
	a (Ljava/io/File;IILctz;Ljava/util/function/Consumer;)V grab
	a (Ljava/io/File;Ljava/lang/String;IILctz;Ljava/util/function/Consumer;)V grab
	a (Ljava/io/File;Lnet/minecraft/server/ChatModifier;)V lambda$null$0
	a (Ljava/nio/ByteBuffer;IIII)V addRegion
	b ()Ljava/io/File; close
net/minecraft/server/DataConverterSpawnEgg net/minecraft/util/datafix/fixes/ItemSpawnEggFix
	ID_MAPPING ID_TO_ENTITY
	a ()Ljava/lang/IllegalStateException; lambda$null$4
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$5
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$null$3
	a ([Ljava/lang/String;)V lambda$static$0
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$null$2
	c (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$null$1
net/minecraft/server/BlockPortal net/minecraft/world/level/block/NetherPortalBlock
	b X_AXIS_AABB
	c Z_AXIS_AABB
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z trySpawnPortal
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPortal$Shape; isPortal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	c (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ShapeDetector$ShapeDetectorCollection; getPortalShape
net/minecraft/server/BlockAttachable net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z canAttach
	j (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumDirection; getConnectedDirection
net/minecraft/server/BiomeSavanna net/minecraft/world/level/biome/SavannaBiome
cyj net/minecraft/client/RecipeBookCategories
	a SEARCH
	b BUILDING_BLOCKS
	c REDSTONE
	d EQUIPMENT
	e MISC
	f FURNACE_SEARCH
	g FURNACE_FOOD
	h FURNACE_BLOCKS
	i FURNACE_MISC
	j BLAST_FURNACE_SEARCH
	k BLAST_FURNACE_BLOCKS
	l BLAST_FURNACE_MISC
	m SMOKER_SEARCH
	n SMOKER_FOOD
	o STONECUTTER
	p CAMPFIRE
	q itemIcons
	r $VALUES
	a ()Ljava/util/List; getIconItems
cym net/minecraft/client/Timer
	a ticks
	b partialTick
	c tickDelta
	d lastMs
	e msPerTick
	a (J)V advanceTime
cyl net/minecraft/client/Session
	a players
	b isRemoteServer
	c difficulty
	d gameMode
	e id
cyo net/minecraft/client/color/block/BlockColor
cyn net/minecraft/client/User
	a name
	b uuid
	c accessToken
	d type
	a ()Ljava/lang/String; getSessionId
	b ()Ljava/lang/String; getUuid
	c ()Ljava/lang/String; getName
	d ()Ljava/lang/String; getAccessToken
	e ()Lcom/mojang/authlib/GameProfile; getGameProfile
	f ()Lcyn$a; getType
net/minecraft/server/TileEntityJigsaw net/minecraft/world/level/block/entity/JigsawBlockEntity
	a attachementType
	b targetPool
	c finalState
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Ljava/lang/String;)V setFinalState
	a (Lnet/minecraft/server/MinecraftKey;)V setAttachementType
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/MinecraftKey;)V setTargetPool
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	d ()Lnet/minecraft/server/MinecraftKey; getAttachementType
	f ()Lnet/minecraft/server/MinecraftKey; getTargetPool
	g ()Ljava/lang/String; getFinalState
cyq net/minecraft/client/color/block/package-info
cwt$4 com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen$4
	a this$0
cyp net/minecraft/client/color/block/BlockColors
	a blockColors
	b coloringStates
	a ()Lcyp; createDefault
	a (Lcyo;[Lnet/minecraft/server/Block;)V register
	a (Ljava/util/Set;[Lnet/minecraft/server/Block;)V addColoringStates
	a (Lnet/minecraft/server/Block;)Ljava/util/Set; getColoringProperties
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;I)I getColor
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getColor
	a (Lnet/minecraft/server/IBlockState;[Lnet/minecraft/server/Block;)V addColoringState
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$10
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$9
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$8
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$7
	f (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$6
	g (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$5
	h (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$4
	i (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$3
	j (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$2
	k (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$1
	l (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$0
net/minecraft/server/PathfinderGoalRemoveBlock net/minecraft/world/entity/ai/goal/RemoveBlockGoal
	entity removerMob
	g blockToRemove
	i ticksSinceReachedGoal
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/BlockPosition; getPosWithBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playDestroyProgressSound
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V playBreakSound
	c ()V start
	d ()V stop
	e ()V tick
	m ()Z tryFindBlock
cys net/minecraft/client/color/item/ItemColors
	a itemColors
	a (Lcyp;)Lcys; createDefault
	a (Lcyp;Lnet/minecraft/server/ItemStack;I)I lambda$createDefault$5
	a (Lcyr;[Lnet/minecraft/server/IMaterial;)V register
	a (Lnet/minecraft/server/ItemMonsterEgg;Lnet/minecraft/server/ItemStack;I)I lambda$createDefault$4
	a (Lnet/minecraft/server/ItemStack;I)I getColor
	b (Lnet/minecraft/server/ItemStack;I)I lambda$createDefault$7
	c (Lnet/minecraft/server/ItemStack;I)I lambda$createDefault$6
	d (Lnet/minecraft/server/ItemStack;I)I lambda$createDefault$3
	e (Lnet/minecraft/server/ItemStack;I)I lambda$createDefault$2
	f (Lnet/minecraft/server/ItemStack;I)I lambda$createDefault$1
	g (Lnet/minecraft/server/ItemStack;I)I lambda$createDefault$0
cyr net/minecraft/client/color/item/ItemColor
net/minecraft/server/Criterion net/minecraft/advancements/Criterion
	a trigger
	a ()Lnet/minecraft/server/CriterionInstance; getTrigger
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/Criterion; criterionFromJson
	a (Ljava/util/Map;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b ()Lcom/google/gson/JsonElement; serializeToJson
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/util/Map; criteriaFromJson
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/Criterion; criterionFromNetwork
	c (Lnet/minecraft/server/PacketDataSerializer;)Ljava/util/Map; criteriaFromNetwork
cyu net/minecraft/client/gui/Font
	a lineHeight
	b random
	c textureManager
	d fonts
	e bidirectional
	a ()Z isBidirectional
	a (C)F charWidth
	a (Ldav;ZZFFFLcuw;FFFF)V renderChar
	a (Ljava/lang/String;)Ljava/lang/String; bidirectionalShaping
	a (Ljava/lang/String;FFI)I drawShadow
	a (Ljava/lang/String;FFIZ)I drawInternal
	a (Ljava/lang/String;I)Ljava/lang/String; substrByWidth
	a (Ljava/lang/String;IIII)V drawWordWrap
	a (Ljava/lang/String;IIZ)I getWordPosition
	a (Ljava/lang/String;IZ)Ljava/lang/String; substrByWidth
	a (Ljava/util/List;)V reload
	a (Z)V setBidirectional
	b (Ljava/lang/String;)I width
	b (Ljava/lang/String;FFI)I draw
	b (Ljava/lang/String;FFIZ)F renderText
	b (Ljava/lang/String;I)I wordWrapHeight
	b (Ljava/lang/String;IIII)V drawWordWrapInternal
	c (Ljava/lang/String;)Ljava/lang/String; eraseTrailingNewLines
	c (Ljava/lang/String;I)Ljava/util/List; split
	d (Ljava/lang/String;I)Ljava/lang/String; insertLineBreaks
	e (Ljava/lang/String;I)I indexAtWidth
cyt net/minecraft/client/color/item/package-info
cyw net/minecraft/client/gui/GuiComponent
cyv net/minecraft/client/gui/Gui
	A displayHealth
	B lastHealthTime
	C healthBlinkTime
	D screenWidth
	E screenHeight
	F chatListeners
	a vignetteBrightness
	b VIGNETTE_LOCATION
	c WIDGETS_LOCATION
	d PUMPKIN_BLUR_LOCATION
	e random
	f minecraft
	g itemRenderer
	h chat
	i tickCount
	j overlayMessageString
	k overlayMessageTime
	l animateOverlayMessageColor
	m toolHighlightTimer
	n lastToolHighlight
	o debugScreen
	p subtitleOverlay
	q spectatorGui
	r tabList
	s bossOverlay
	t titleTime
	u title
	v subtitle
	w titleFadeInTime
	x titleStayTime
	y titleFadeOutTime
	z lastHealth
	a ()V resetTitleTimes
	a (F)V render
	a (FIILdxb;)V lambda$renderEffects$0
	a (I)V renderJumpMeter
	a (IIFLnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)V renderSlot
	a (Lcyu;II)V drawBackdrop
	a (Ljava/lang/String;)V setNowPlaying
	a (Ljava/lang/String;Ljava/lang/String;III)V setTitles
	a (Ljava/lang/String;Z)V setOverlayMessage
	a (Lnet/minecraft/server/ChatMessageType;Lnet/minecraft/server/IChatBaseComponent;)V handleChat
	a (Lnet/minecraft/server/Entity;)V updateVignetteBrightness
	a (Lnet/minecraft/server/EntityLiving;)I getVehicleMaxHearts
	a (Lnet/minecraft/server/IChatBaseComponent;Z)V setOverlayMessage
	a (Lnet/minecraft/server/MovingObjectPosition;)Z canRenderCrosshairForSpectator
	a (Lnet/minecraft/server/ScoreboardObjective;)V displayScoreboardSidebar
	a (Lnet/minecraft/server/ScoreboardScore;)Z lambda$displayScoreboardSidebar$1
	b ()V renderEffects
	b (F)V renderHotbar
	b (I)V renderExperienceBar
	b (Lnet/minecraft/server/Entity;)V renderVignette
	c ()V renderSelectedItemName
	c (F)V renderPortalOverlay
	c (I)I getVisibleVehicleHeartRows
	d ()V renderDemoOverlay
	e ()V tick
	f ()Lczj; getChat
	g ()I getGuiTicks
	h ()Lcyu; getFont
	i ()Ldah; getSpectatorGui
	j ()Lczv; getTabList
	k ()V onDisconnected
	l ()Lczh; getBossOverlay
	m ()V clearCache
	n ()V renderCrosshair
	o ()Lnet/minecraft/server/EntityHuman; getCameraPlayer
	p ()Lnet/minecraft/server/EntityLiving; getPlayerVehicleWithHealth
	q ()V renderPlayerHealth
	r ()V renderVehicleHealth
	s ()V renderPumpkin
cyy net/minecraft/client/gui/chat/ChatListener
	a (Lnet/minecraft/server/ChatMessageType;Lnet/minecraft/server/IChatBaseComponent;)V handle
cyx net/minecraft/client/gui/MapRenderer
	a MAP_ICONS_LOCATION
	b textureManager
	c maps
	a ()V resetData
	a (Lcyx$a;)Lnet/minecraft/server/WorldMap; getData
	a (Lcyx;)Ldxc; access$400
	a (Ljava/lang/String;)Lcyx$a; getMapInstanceIfExists
	a (Lnet/minecraft/server/WorldMap;)V update
	a (Lnet/minecraft/server/WorldMap;Z)V render
	b ()Lnet/minecraft/server/MinecraftKey; access$500
	b (Lnet/minecraft/server/WorldMap;)Lcyx$a; getMapInstance
net/minecraft/server/EnchantmentFire net/minecraft/world/item/enchantment/FireAspectEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
cyz net/minecraft/client/gui/chat/NarratorChatListener
	a NO_TITLE
	b INSTANCE
	c LOGGER
	d narrator
	a ()Z isActive
	a (Lcye;)V updateNarratorStatus
	a (Ljava/lang/String;)V sayNow
	a (Lnet/minecraft/server/ChatMessageType;Lnet/minecraft/server/IChatBaseComponent;)V handle
	a (ZLjava/lang/String;)V doSay
	b ()V clear
	c ()V destroy
	d ()Lcye; getStatus
cwc$a com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoList
	a this$0
cfj$a net/minecraft/world/level/levelgen/feature/WoodlandMansionFeature$WoodlandMansionStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)V postProcess
net/minecraft/server/ItemNamedBlock net/minecraft/world/item/ItemNameBlockItem
	a ()Ljava/lang/String; getDescriptionId
net/minecraft/server/BlockRedstoneOre net/minecraft/world/level/block/RedStoneOreBlock
	a LIT
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;)I getLightEmission
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V attack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V stepOn
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	playEffect (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V spawnParticles
czb net/minecraft/client/gui/chat/StandardChatListener
	a minecraft
	a (Lnet/minecraft/server/ChatMessageType;Lnet/minecraft/server/IChatBaseComponent;)V handle
cza net/minecraft/client/gui/chat/OverlayChatListener
	a minecraft
	a (Lnet/minecraft/server/ChatMessageType;Lnet/minecraft/server/IChatBaseComponent;)V handle
czd net/minecraft/client/gui/components/AbstractButton
net/minecraft/server/PathfinderGoalSwell net/minecraft/world/entity/ai/goal/SwellGoal
	a creeper
	b target
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
czc net/minecraft/client/gui/chat/package-info
net/minecraft/server/ServerPing$ServerData net/minecraft/network/protocol/status/ServerStatus$Version
	a name
	b protocol
	a ()Ljava/lang/String; getName
	getProtocolVersion ()I getProtocol
net/minecraft/server/IReloadListener net/minecraft/server/packs/resources/PreparableReloadListener
	a (Lxd$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
net/minecraft/server/EntityLargeFireball net/minecraft/world/entity/projectile/LargeFireball
	yield explosionPower
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/CommandExceptionProvider net/minecraft/commands/BrigadierExceptions
	A DISPATCHER_PARSE_EXCEPTION
	a DOUBLE_TOO_SMALL
	b DOUBLE_TOO_BIG
	c FLOAT_TOO_SMALL
	d FLOAT_TOO_BIG
	e INTEGER_TOO_SMALL
	f INTEGER_TOO_BIG
	g LONG_TOO_SMALL
	h LONG_TOO_BIG
	i LITERAL_INCORRECT
	j READER_EXPECTED_START_OF_QUOTE
	k READER_EXPECTED_END_OF_QUOTE
	l READER_INVALID_ESCAPE
	m READER_INVALID_BOOL
	n READER_INVALID_INT
	o READER_EXPECTED_INT
	p READER_INVALID_LONG
	q READER_EXPECTED_LONG
	r READER_INVALID_DOUBLE
	s READER_EXPECTED_DOUBLE
	t READER_INVALID_FLOAT
	u READER_EXPECTED_FLOAT
	v READER_EXPECTED_BOOL
	w READER_EXPECTED_SYMBOL
	x DISPATCHER_UNKNOWN_COMMAND
	y DISPATCHER_UNKNOWN_ARGUMENT
	z DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$16
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$7
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$15
	b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$6
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$14
	c (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$5
	d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$13
	d (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	e (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$12
	e (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	f (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$11
	f (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	g (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$10
	g (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	h (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$9
	h (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	i (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$8
czf net/minecraft/client/gui/components/AbstractSliderButton
cze net/minecraft/client/gui/components/AbstractSelectionList
net/minecraft/server/WorldGenStage$Decoration net/minecraft/world/level/levelgen/GenerationStep$Decoration
	i BY_NAME
	j name
	k $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenStage$Decoration; byName
	a (Lnet/minecraft/server/WorldGenStage$Decoration;)Lnet/minecraft/server/WorldGenStage$Decoration; lambda$static$0
net/minecraft/server/BlockCoralFanAbstract net/minecraft/world/level/block/BaseCoralFanBlock
	a AABB
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
czh net/minecraft/client/gui/components/BossHealthOverlay
	a GUI_BARS_LOCATION
	b minecraft
	c events
	a ()V render
	a (IILnet/minecraft/server/BossBattle;)V drawBar
	a (Lnet/minecraft/server/PacketPlayOutBoss;)V update
	b ()V reset
	c ()Z hasBoss
	d ()Z shouldPlayMusic
	e ()Z shouldDarkenScreen
	f ()Z shouldCreateWorldFog
czg net/minecraft/client/gui/components/AbstractWidget
cqj$a net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder
	a count
	b limit
	a ()Lcqj$a; getThis
	a (I)Lcqj$a; setLimit
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcqg$a; getThis
net/minecraft/server/DataConverterBedBlock net/minecraft/util/datafix/fixes/BedBlockEntityInjecter
	a ()Ljava/lang/IllegalStateException; lambda$null$3
	a (Lcom/mojang/datafixers/Dynamic;)Ljava/lang/Integer; lambda$null$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$4
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$cap$1
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
czj net/minecraft/client/gui/components/ChatComponent
	a LOGGER
	b minecraft
	c recentChat
	d allMessages
	e trimmedMessages
	f chatScrollbarPos
	g newMessageSinceScroll
	a ()V rescaleChat
	a (D)V scrollChat
	a (DD)Lnet/minecraft/server/IChatBaseComponent; getClickedComponentAt
	a (I)V render
	a (Ljava/lang/String;)V addRecentChat
	a (Lnet/minecraft/server/IChatBaseComponent;)V addMessage
	a (Lnet/minecraft/server/IChatBaseComponent;I)V addMessage
	a (Lnet/minecraft/server/IChatBaseComponent;IIZ)V addMessage
	a (Z)V clearMessages
	b ()Ljava/util/List; getRecentChat
	b (D)I getWidth
	b (I)V removeById
	c ()V resetChatScroll
	c (D)I getHeight
	c (I)D getTimeFactor
	d ()Z isChatFocused
	e ()I getWidth
	f ()I getHeight
	g ()D getScale
	h ()I getLinesPerPage
cqj$b net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEnchantFunction; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEnchantFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
czi net/minecraft/client/gui/components/Button
czl net/minecraft/client/gui/components/ComponentRenderUtils
	a (Ljava/lang/String;Z)Ljava/lang/String; stripColor
	a (Lnet/minecraft/server/IChatBaseComponent;ILcyu;ZZ)Ljava/util/List; wrapComponents
czk net/minecraft/client/gui/components/Checkbox
	a selected
	b TEXTURE
	a ()Z selected
czn net/minecraft/client/gui/components/DebugScreenOverlay
	a HEIGHTMAP_NAMES
	b minecraft
	c font
	d block
	e liquid
	f lastPos
	g clientChunk
	h serverChunk
	a ()V clearChunkCache
	a (IIF)I colorLerp
	a (IIII)I getSampleColor
	a (J)J bytesToMegabytes
	a (Lcom/mojang/datafixers/util/Either;)Lnet/minecraft/server/Chunk; lambda$getServerChunk$4
	a (Leac;)Lnet/minecraft/server/WorldServer; lambda$getLevel$1
	a (Ljava/util/EnumMap;)V lambda$static$0
	a (Ljava/util/Map$Entry;)Ljava/lang/String; getPropertyValueString
	a (Lnet/minecraft/server/CircularTimer;IIZ)V drawChart
	a (Lnet/minecraft/server/IChunkAccess;)Lnet/minecraft/server/Chunk; lambda$null$2
	a (Lnet/minecraft/server/PlayerChunk$Failure;)Lnet/minecraft/server/Chunk; lambda$null$3
	b ()V render
	c ()V drawGameInformation
	d ()V drawSystemInformation
	e ()Ljava/util/List; getGameInformation
	f ()Ljava/util/List; getSystemInformation
	g ()Ljava/lang/String; getServerChunkStats
	h ()Lnet/minecraft/server/World; getLevel
	i ()Lnet/minecraft/server/Chunk; getServerChunk
	j ()Lnet/minecraft/server/Chunk; getClientChunk
czm net/minecraft/client/gui/components/ContainerObjectSelectionList
czp net/minecraft/client/gui/components/ImageButton
	a resourceLocation
	b xTexStart
	c yTexStart
	d yDiffTex
	e textureWidth
	f textureHeight
	a (II)V setPosition
ay$a net/minecraft/advancements/critereon/FishingRodHookedTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityFishingHook;Ljava/util/Collection;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
czo net/minecraft/client/gui/components/EditBox
	a font
	b value
	c maxLength
	d frame
	e bordered
	f canLoseFocus
	g isEditable
	h shiftPressed
	i displayPos
	j cursorPos
	k highlightPos
	l textColor
	m textColorUneditable
	n suggestion
	o responder
	p filter
	q formatter
	a ()V tick
	a (I)V deleteWords
	a (II)I getWordPosition
	a (IIII)V renderHighlight
	a (IIZ)I getWordPosition
	a (Ljava/lang/String;)V setValue
	a (Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/String; lambda$new$0
	a (Ljava/util/function/BiFunction;)V setFormatter
	a (Ljava/util/function/Consumer;)V setResponder
	a (Ljava/util/function/Predicate;)V setFilter
	a (Z)V setFocus
	b ()Ljava/lang/String; getValue
	b (I)V deleteChars
	b (Ljava/lang/String;)V insertText
	b (Z)V setBordered
	c ()Ljava/lang/String; getHighlighted
	c (I)I getWordPosition
	c (Ljava/lang/String;)V setSuggestion
	c (Z)V setEditable
	d ()V moveCursorToStart
	d (I)V moveCursor
	d (Ljava/lang/String;)V onValueChange
	d (Z)V setCanLoseFocus
	e ()V moveCursorToEnd
	e (I)V moveCursorTo
	e (Z)V setVisible
	f ()Z canConsumeInput
	f (I)V setCursorPosition
	g ()I getCursorPosition
	g (I)V setMaxLength
	h ()I getInnerWidth
	h (I)V setTextColor
	i ()Z isVisible
	i (I)V setTextColorUneditable
	j ()I getMaxLength
	j (I)V setHighlightPos
	k ()Z isBordered
	k (I)I getScreenX
	l ()Z isEditable
	l (I)V setX
	m (I)V deleteText
czr net/minecraft/client/gui/components/LockIconButton
	a locked
	a ()Z isLocked
	a (Z)V setLocked
czq net/minecraft/client/gui/components/LerpingBossEvent
	h targetPercent
	i setTime
	a (F)V setPercent
	a (Lnet/minecraft/server/PacketPlayOutBoss;)V update
	k ()F getPercent
ay$b net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance
	a rod
	b entity
	c item
	a (Lnet/minecraft/server/CriterionConditionItem;Lnet/minecraft/server/CriterionConditionEntity;Lnet/minecraft/server/CriterionConditionItem;)Lay$b; fishedItem
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityFishingHook;Ljava/util/Collection;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/server/RegistryBlocks net/minecraft/core/DefaultedRegistry
	R defaultKey
	S defaultValue
	a ()Lnet/minecraft/server/MinecraftKey; getDefaultKey
	a (I)Ljava/lang/Object; byId
	a (ILnet/minecraft/server/MinecraftKey;Ljava/lang/Object;)Ljava/lang/Object; registerMapping
	a (Ljava/lang/Object;)I getId
	a (Ljava/util/Random;)Ljava/lang/Object; getRandom
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/Object; get
	b (Ljava/lang/Object;)Lnet/minecraft/server/MinecraftKey; getKey
czt net/minecraft/client/gui/components/OptionButton
	a option
	a ()Lcyf; getOption
czs net/minecraft/client/gui/components/ObjectSelectionList
czv net/minecraft/client/gui/components/PlayerTabOverlay
	a PLAYER_ORDERING
	b minecraft
	c gui
	d footer
	e header
	f visibilityId
	g visible
	a ()V reset
	a (IIILdkg;)V renderPingIcon
	a (ILnet/minecraft/server/Scoreboard;Lnet/minecraft/server/ScoreboardObjective;)V render
	a (Ldkg;)Lnet/minecraft/server/IChatBaseComponent; getNameForDisplay
	a (Lnet/minecraft/server/IChatBaseComponent;)V setFooter
	a (Lnet/minecraft/server/ScoreboardObjective;ILjava/lang/String;IILdkg;)V renderTablistScore
	a (Z)V setVisible
	b (Lnet/minecraft/server/IChatBaseComponent;)V setHeader
czu net/minecraft/client/gui/components/OptionsList
	a (Lcyf;)I addBig
	a (Lcyf;Lcyf;)V addSmall
	a ([Lcyf;)V addSmall
cpx$1 net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$1
czx net/minecraft/client/gui/components/SliderButton
	a option
bhn$1 net/minecraft/world/level/GameRules$1
czw net/minecraft/client/gui/components/ScrolledSelectionList
cqj$1 net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$1
czz net/minecraft/client/gui/components/SubtitleOverlay
	a minecraft
	b subtitles
	c isListening
	a ()V render
	a (Ldzp;Leaq;)V onPlaySound
czy net/minecraft/client/gui/components/StateSwitchingButton
	a resourceLocation
	b isStateTriggered
	c xTexStart
	d yTexStart
	e xDiffTex
	f yDiffTex
	a ()Z isStateTriggered
	a (II)V setPosition
	a (IIIILnet/minecraft/server/MinecraftKey;)V initTextureValues
	a (Z)V setStateTriggered
net/minecraft/server/PacketHandshakingInListener net/minecraft/network/protocol/handshake/ServerHandshakePacketListener
	a (Lnet/minecraft/server/PacketHandshakingInSetProtocol;)V handleIntention
net/minecraft/server/BlockNetherWart net/minecraft/world/level/block/NetherWartBlock
	b SHAPE_BY_AGE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
net/minecraft/server/NBTBase net/minecraft/nbt/Tag
	a TAG_NAMES
	b SYNTAX_HIGHLIGHTING_KEY
	c SYNTAX_HIGHLIGHTING_STRING
	d SYNTAX_HIGHLIGHTING_NUMBER
	e SYNTAX_HIGHLIGHTING_NUMBER_TYPE
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	asString ()Ljava/lang/String; getAsString
	b_ ()V stripEmptyChildren
	clone ()Lnet/minecraft/server/NBTBase; copy
	createTag (B)Lnet/minecraft/server/NBTBase; newTag
	getTypeId ()B getId
	k ()Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	l (I)Ljava/lang/String; getTagTypeName
net/minecraft/server/EntityWaterAnimal net/minecraft/world/entity/animal/WaterAnimal
	A ()I getAmbientSoundInterval
	a (I)V handleAirSupply
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	aa ()V baseTick
	bE ()Z isPushedByWater
	cQ ()Lnet/minecraft/server/EnumMonsterType; getMobType
	cm ()Z canBreatheUnderwater
	d (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
net/minecraft/server/BehaviorRaidReset net/minecraft/world/entity/ai/behavior/ResetRaidStatus
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/DataConverterSaddle net/minecraft/util/datafix/fixes/EntityHorseSaddleFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/CommandEffect net/minecraft/server/commands/EffectCommands
	a ERROR_GIVE_FAILED
	b ERROR_CLEAR_EVERYTHING_FAILED
	c ERROR_CLEAR_SPECIFIC_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I clearEffects
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/MobEffectList;)I clearEffect
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/MobEffectList;Ljava/lang/Integer;IZ)I giveEffect
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/BehaviorRaid net/minecraft/world/entity/ai/behavior/SetRaidStatus
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BiomeFrozenOcean net/minecraft/world/level/biome/FrozenOceanBiome
	u FROZEN_TEMPERATURE_NOISE
	c (Lnet/minecraft/server/BlockPosition;)F getTemperatureNoCache
net/minecraft/server/DispenseBehaviorProjectile net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior
	a ()F getUncertainty
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
net/minecraft/server/IBlockWaterlogged net/minecraft/world/level/block/SimpleWaterloggedBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/FluidType; takeLiquid
net/minecraft/server/EnchantmentDurability net/minecraft/world/item/enchantment/DigDurabilityEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/ItemStack;)Z canEnchant
	a (Lnet/minecraft/server/ItemStack;ILjava/util/Random;)Z shouldIgnoreDurabilityDrop
	b (I)I getMaxCost
cwr$b$a com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionListEntry$AcceptRowButton
	e this$1
	a (I)V onClick
	a (IIZ)V draw
ah$b net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance
	a victims
	a (Lnet/minecraft/server/EntityPlayer;Ljava/util/Collection;)Z matches
	a ([Lnet/minecraft/server/CriterionConditionEntity;)Lah$b; channeledLightning
	b ()Lcom/google/gson/JsonElement; serializeToJson
ah$a net/minecraft/advancements/critereon/ChanneledLightningTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/EntityPlayer;Ljava/util/Collection;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
net/minecraft/server/EntityEvokerFangs net/minecraft/world/entity/projectile/EvokerFangs
	b warmupDelayTicks
	c sentSpikeEvent
	d lifeTicks
	e clientSideAttackStarted
	f owner
	g ownerUUID
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (B)V handleEntityEvent
	a (F)F getAnimationProgress
	a (Lnet/minecraft/server/EntityLiving;)V setOwner
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityLiving;)V dealDamageTo
	h ()V tick
	u_ ()V defineSynchedData
cwr$b$b com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionListEntry$RejectRowButton
	e this$1
	a (I)V onClick
	a (IIZ)V draw
aym$3 net/minecraft/world/inventory/AnvilMenu$3
	a $SwitchMap$net$minecraft$world$item$enchantment$Enchantment$Rarity
aym$2 net/minecraft/world/inventory/AnvilMenu$2
	a val$access
	b this$0
	a (Lnet/minecraft/server/EntityHuman;)Z mayPickup
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$onTake$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
aym$1 net/minecraft/world/inventory/AnvilMenu$1
	a this$0
	e ()V setChanged
net/minecraft/server/PacketPlayOutGameStateChange net/minecraft/network/protocol/game/ClientboundGameEventPacket
	a EVENT_LANGUAGE_ID
	b event
	c param
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getEvent
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()F getParam
net/minecraft/server/DataConverterPotionId net/minecraft/util/datafix/fixes/ItemPotionFix
	a POTIONS
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a ([Ljava/lang/String;)V lambda$static$0
net/minecraft/server/BlockPropertyDoorHinge net/minecraft/world/level/block/state/properties/DoorHingeSide
	c $VALUES
	m ()Ljava/lang/String; getSerializedName
net/minecraft/server/DataConverterWolf net/minecraft/util/datafix/fixes/EntityWolfColorFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fixTag$0
net/minecraft/server/BiomeLayoutTheEndConfiguration net/minecraft/world/level/biome/TheEndBiomeSourceSettings
	a seed
	a ()J getSeed
	a (J)Lnet/minecraft/server/BiomeLayoutTheEndConfiguration; setSeed
net/minecraft/server/TagsServer net/minecraft/tags/SynchronizableTagCollection
	a registry
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)V loadFromNetwork
net/minecraft/server/TileEntityStructure net/minecraft/world/level/block/entity/StructureBlockEntity
	metadata metaData
	relativePosition structurePos
	size structureSize
	usageMode mode
	A ()J getSeed
	B ()Z detectSize
	C ()Z saveStructure
	D ()Z loadStructure
	E ()V unloadStructure
	F ()Z isStructureLoadable
	G ()Z isPowered
	H ()Z getShowAir
	I ()Z getShowBoundingBox
	J ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	K ()V updateBlockState
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (F)V setIntegrity
	a (J)V setSeed
	a (Ljava/util/List;)Ljava/util/List; filterRelatedCornerBlocks
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/List;)Lnet/minecraft/server/StructureBoundingBox; calculateEnclosingBoundingBox
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Ljava/util/List; getNearbyCornerBlocks
	a (Lnet/minecraft/server/EntityHuman;)Z usedBy
	a (Lnet/minecraft/server/MinecraftKey;)V setStructureName
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/TileEntityStructure;)Z lambda$filterRelatedCornerBlocks$0
	a (Z)V setIgnoreEntities
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (J)Ljava/util/Random; createRandom
	b (Ljava/lang/String;)V setMetaData
	b (Lnet/minecraft/server/BlockPosition;)V setStructurePos
	b (Lnet/minecraft/server/EnumBlockMirror;)V setMirror
	b (Lnet/minecraft/server/EnumBlockRotation;)V setRotation
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b (Z)Z saveStructure
	c (Lnet/minecraft/server/BlockPosition;)V setStructureSize
	c (Z)Z loadStructure
	d (Z)V setPowered
	e (Z)V setShowAir
	f ()Z hasStructureName
	f (Z)V setShowBoundingBox
	g ()Lnet/minecraft/server/BlockPosition; getStructurePos
	getUsageMode ()Lnet/minecraft/server/BlockPropertyStructureMode; getMode
	h ()Lnet/minecraft/server/BlockPosition; getStructureSize
	s ()Lnet/minecraft/server/EnumBlockMirror; getMirror
	setAuthor (Lnet/minecraft/server/EntityLiving;)V createdBy
	setUsageMode (Lnet/minecraft/server/BlockPropertyStructureMode;)V setMode
	t ()Lnet/minecraft/server/EnumBlockRotation; getRotation
	u ()Ljava/lang/String; getMetaData
	x ()V nextMode
	y ()Z isIgnoreEntities
	z ()F getIntegrity
net/minecraft/server/BiomeFrozenRiver net/minecraft/world/level/biome/FrozenRiverBiome
net/minecraft/server/WorldGenFeatureBlueIce net/minecraft/world/level/levelgen/feature/BlueIceFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/RemoteControlListener net/minecraft/server/rcon/thread/RconThread
	h port
	i serverIp
	j socket
	k rconPassword
	l clients
	a ()V start
	b ()V stop
	f ()V initClients
	g ()V clearClients
net/minecraft/server/IWorldWriter net/minecraft/world/level/LevelWriter
	a (Lnet/minecraft/server/BlockPosition;Z)Z removeBlock
	addEntity (Lnet/minecraft/server/Entity;)Z addFreshEntity
	b (Lnet/minecraft/server/BlockPosition;Z)Z destroyBlock
	setTypeAndData (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)Z setBlock
dks$a net/minecraft/client/particle/BubblePopParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/EnumRenderType net/minecraft/world/level/block/RenderShape
	d $VALUES
net/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility net/minecraft/world/scores/Team$Visibility
	e name
	f id
	g BY_NAME
	h $VALUES
	a ()[Ljava/lang/String; getAllNames
	a (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility; byName
	a (Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility;)Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility; lambda$static$1
	b ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	b (Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility;)Ljava/lang/String; lambda$static$0
crm$1 net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$1
net/minecraft/server/WorldGenDecoratorChancePass net/minecraft/world/level/levelgen/placement/ChancePassthroughDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorChanceConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/CombatMath net/minecraft/world/damagesource/CombatRules
	a (FF)F getDamageAfterMagicAbsorb
	a (FFF)F getDamageAfterAbsorb
net/minecraft/server/ContainerAnvil net/minecraft/world/inventory/AnvilMenu
	c LOGGER
	containerAccess access
	h repairItemCountCost
	levelCost cost
	renameText itemName
	repairInventory repairSlots
	resultInventory resultSlots
	a (Ljava/lang/String;)V setItemName
	a (Lnet/minecraft/server/ContainerAnvil;)Lnet/minecraft/server/ContainerProperty; access$000
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Ljava/lang/Boolean; lambda$stillValid$1
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	b (Lnet/minecraft/server/ContainerAnvil;)Lnet/minecraft/server/IInventory; access$100
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$removed$0
	c (Lnet/minecraft/server/ContainerAnvil;)I access$200
	d (I)I calculateIncreasedRepairCost
	e ()V createResult
	f ()I getCost
net/minecraft/server/PacketPlayOutExplosion net/minecraft/network/protocol/game/ClientboundExplodePacket
	a x
	b y
	c z
	d power
	e toBlow
	f knockbackX
	g knockbackY
	h knockbackZ
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()F getKnockbackX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()F getKnockbackY
	d ()F getKnockbackZ
	e ()D getX
	f ()D getY
	g ()D getZ
	h ()F getPower
	i ()Ljava/util/List; getToBlow
net/minecraft/server/DefinedStructureProcessorJigsawReplacement net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor
	a INSTANCE
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
eap$1 net/minecraft/client/sounds/SoundManager$1
eap$2 net/minecraft/client/sounds/SoundManager$2
	a $SwitchMap$net$minecraft$client$resources$sounds$Sound$Type
net/minecraft/server/WorldGenFeatureSnowStack net/minecraft/world/level/levelgen/feature/SnowBlockPileFeature
	a (Lnet/minecraft/server/GeneratorAccess;)Lnet/minecraft/server/IBlockData; getBlockState
net/minecraft/server/DataConverterSchemaV1510 net/minecraft/util/datafix/schemas/V1510
net/minecraft/server/BlockGravel net/minecraft/world/level/block/GravelBlock
	q (Lnet/minecraft/server/IBlockData;)I getDustColor
net/minecraft/server/BlockFenceGate net/minecraft/world/level/block/FenceGateBlock
	d Z_SHAPE
	e X_SHAPE
	f Z_SHAPE_LOW
	g X_SHAPE_LOW
	h Z_COLLISION_SHAPE
	i X_COLLISION_SHAPE
	j Z_OCCLUSION_SHAPE
	k X_OCCLUSION_SHAPE
	w Z_OCCLUSION_SHAPE_LOW
	x X_OCCLUSION_SHAPE_LOW
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z connectsToDirection
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	h (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
	j (Lnet/minecraft/server/IBlockData;)Z isWall
net/minecraft/server/PacketPlayOutEntity$PacketPlayOutRelEntityMoveLook net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/DataConverterEntityCatSplit net/minecraft/util/datafix/fixes/EntityCatSplitFix
	a (Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
net/minecraft/server/EnchantmentInfiniteArrows net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/CommandGamerule net/minecraft/server/commands/GameRuleCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/GameRules$GameRuleKey;)I access$000
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/GameRules$GameRuleKey;)I access$100
	b (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/GameRules$GameRuleKey;)I setRule
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/GameRules$GameRuleKey;)I queryRule
net/minecraft/server/IInventoryHolder net/minecraft/world/WorldlyContainerHolder
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IWorldInventory; getContainer
net/minecraft/server/GameRules$GameRuleValue net/minecraft/world/level/GameRules$Value
	a type
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V setFromArgument
	e ()Lnet/minecraft/server/GameRules$GameRuleValue; getSelf
	getIntValue ()I getCommandResult
	getValue ()Ljava/lang/String; serialize
	onChange (Lnet/minecraft/server/MinecraftServer;)V onChanged
	setValue (Ljava/lang/String;)V deserialize
cxw$a net/minecraft/client/Game$Metrics
	a min
	b max
	c average
	d samples
net/minecraft/server/Navigation net/minecraft/world/entity/ai/navigation/GroundPathNavigation
	p avoidSun
	D_ ()V trimPath
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
	a (IIIIIILnet/minecraft/server/Vec3D;DD)Z canWalkOn
	a (Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;III)Z canMoveDirectly
	a (Z)V setCanOpenDoors
	b ()Lnet/minecraft/server/Vec3D; getTempMobPos
	b (IIIIIILnet/minecraft/server/Vec3D;DD)Z canWalkAbove
	b (Z)V setCanPassDoors
	c (Z)V setAvoidSun
	e ()Z canPassDoors
	f ()Z canOpenDoors
	t ()I getSurfaceY
net/minecraft/server/IAsyncTaskHandler net/minecraft/util/thread/BlockableEventLoop
	b name
	c LOGGER
	d pendingRunnables
	e blockingCount
	a (Ljava/lang/Object;)V tell
	a (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; submit
	awaitTasks (Ljava/util/function/BooleanSupplier;)V managedBlock
	b (Ljava/lang/Runnable;)Ljava/lang/Void; lambda$submitAsync$0
	be ()I getPendingTasksCount
	bf ()Ljava/lang/String; name
	bg ()V dropAllTasks
	bi ()V waitForTasks
	canExecute (Ljava/lang/Runnable;)Z shouldRun
	e (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; submit
	executeAll ()V runAllTasks
	executeFuture (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; submitAsync
	executeNext ()Z pollTask
	executeSync (Ljava/lang/Runnable;)V executeBlocking
	executeTask (Ljava/lang/Runnable;)V doRunTask
	g (Ljava/lang/Runnable;)V tell
	getThread ()Ljava/lang/Thread; getRunningThread
	isMainThread ()Z isSameThread
	isNotMainThread ()Z scheduleExecutables
	postToMainThread (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
net/minecraft/server/HeightMap net/minecraft/world/level/levelgen/Heightmap
	a NOT_AIR
	b MATERIAL_MOTION_BLOCKING
	c data
	d isOpaque
	e chunk
	a ()[J getRawData
	a (I)I getFirstAvailable
	a (II)I getFirstAvailable
	a (III)V setHeight
	a (IIILnet/minecraft/server/IBlockData;)Z update
	a (Lnet/minecraft/server/IBlockData;)Z lambda$static$1
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/Set;)V primeHeightmaps
	a ([J)V setRawData
	b ()Ljava/util/function/Predicate; access$000
	b (II)I getHighestTaken
	b (Lnet/minecraft/server/IBlockData;)Z lambda$static$0
	c ()Ljava/util/function/Predicate; access$100
	c (II)I getIndex
dab net/minecraft/client/gui/components/Widget
net/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType
	c id
	d BY_ID
	e $VALUES
	a ()Ljava/lang/String; getId
	a (Ljava/lang/String;)Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay; byId
daa net/minecraft/client/gui/components/VolumeSlider
	a source
net/minecraft/server/WorldGenMegaTreeProvider net/minecraft/world/level/block/grower/AbstractMegaTreeGrower
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenTreeAbstract; getMegaFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z growTree
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;II)Z placeMega
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;II)Z isTwoByTwoSapling
dad net/minecraft/client/gui/components/events/ContainerEventHandler
	a (DD)Ljava/util/Optional; getChildAt
	a (DDDLdae;)Z lambda$mouseScrolled$1
	a (DDILdae;)Z lambda$mouseReleased$0
	a (III)Z keyReleased
	a (Ldae;)V setInitialFocus
	b (Ldae;)V magicalSpecialHackyFocus
dac net/minecraft/client/gui/components/events/AbstractContainerEventHandler
daf net/minecraft/client/gui/components/events/package-info
auz$c net/minecraft/world/entity/monster/Ravager$RavagerNodeEvaluator
	a (Lnet/minecraft/server/IBlockAccess;ZZLnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathType;)Lnet/minecraft/server/PathType; evaluateBlockPathType
dae net/minecraft/client/gui/components/events/GuiEventListener
	a (III)Z keyReleased
	b (DD)V mouseMoved
auz$b net/minecraft/world/entity/monster/Ravager$RavagerNavigation
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
dah net/minecraft/client/gui/components/spectator/SpectatorGui
	a SPECTATOR_LOCATION
	b WIDGETS_LOCATION
	c minecraft
	d lastSelectionTime
	e menu
	a ()V renderTooltip
	a (D)V onMouseScrolled
	a (F)V renderHotbar
	a (FIILdgc;)V renderPage
	a (I)V onHotbarSelected
	a (IIFFLdga;)V renderSlot
	a (Ldfy;)V onSpectatorMenuClosed
	b ()Z isMenuActive
	c ()V onMouseMiddleClick
	d ()F getHotbarAlpha
net/minecraft/server/DataConverterAdvancement net/minecraft/util/datafix/fixes/AdvancementsFix
	a renames
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$2
	a (Lcom/mojang/datafixers/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
dag net/minecraft/client/gui/components/package-info
net/minecraft/server/VoxelShapeCollisionEntity net/minecraft/world/phys/shapes/EntityCollisionContext
	a EMPTY
	b sneaking
	c entityBottom
	d heldItem
	a (Lnet/minecraft/server/Item;)Z isHoldingItem
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/BlockPosition;Z)Z isAbove
	b ()Z isSneaking
daj net/minecraft/client/gui/components/toasts/AdvancementToast
	c advancement
	d playedSound
	a (Ldan;J)Ldam$a; render
dai net/minecraft/client/gui/components/spectator/package-info
dal net/minecraft/client/gui/components/toasts/SystemToast
	c id
	d title
	e message
	f lastChanged
	g changed
	a ()Ldal$a; getToken
	a (Ldan;J)Ldam$a; render
	a (Ldan;Ldal$a;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;)V addOrUpdate
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;)V reset
	b ()Ljava/lang/Object; getToken
auz$a net/minecraft/world/entity/monster/Ravager$RavagerMeleeAttackGoal
	d this$0
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
net/minecraft/server/EnumAxisCycle net/minecraft/core/AxisCycle
	d AXIS_VALUES
	e VALUES
	f $VALUES
	a ()Lnet/minecraft/server/EnumAxisCycle; inverse
	a (DDDLnet/minecraft/server/EnumDirection$EnumAxis;)D cycle
	a (IIILnet/minecraft/server/EnumDirection$EnumAxis;)I cycle
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection$EnumAxis; cycle
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumAxisCycle; between
dak net/minecraft/client/gui/components/toasts/RecipeToast
	c recipes
	d lastChanged
	e changed
	a (Ldan;J)Ldam$a; render
	a (Ldan;Lnet/minecraft/server/IRecipe;)V addOrUpdate
	a (Lnet/minecraft/server/IRecipe;)V addItem
dan net/minecraft/client/gui/components/toasts/ToastComponent
	a minecraft
	b visible
	c queued
	a ()V render
	a (Ldam;)V addToast
	a (Ldan;)Lcyc; access$100
	a (Ljava/lang/Class;Ljava/lang/Object;)Ldam; getToast
	b ()V clear
	c ()Lcyc; getMinecraft
dam net/minecraft/client/gui/components/toasts/Toast
	a TEXTURE
	b NO_TOKEN
	a (Ldan;J)Ldam$a; render
	b ()Ljava/lang/Object; getToken
net/minecraft/server/CriterionTriggers net/minecraft/advancements/CriteriaTriggers
	A EFFECTS_CHANGED
	B USED_TOTEM
	C NETHER_TRAVEL
	D FISHING_ROD_HOOKED
	E CHANNELED_LIGHTNING
	F SHOT_CROSSBOW
	G KILLED_BY_CROSSBOW
	H RAID_WIN
	I BAD_OMEN
	J CRITERIA
	a IMPOSSIBLE
	b PLAYER_KILLED_ENTITY
	c ENTITY_KILLED_PLAYER
	d ENTER_BLOCK
	e INVENTORY_CHANGED
	f RECIPE_UNLOCKED
	g PLAYER_HURT_ENTITY
	h ENTITY_HURT_PLAYER
	i ENCHANTED_ITEM
	j FILLED_BUCKET
	k BREWED_POTION
	l CONSTRUCT_BEACON
	m USED_ENDER_EYE
	n SUMMONED_ENTITY
	o BRED_ANIMALS
	p LOCATION
	q SLEPT_IN_BED
	r CURED_ZOMBIE_VILLAGER
	s TRADE
	t ITEM_DURABILITY_CHANGED
	u LEVITATION
	v CHANGED_DIMENSION
	w TICK
	x TAME_ANIMAL
	y PLACED_BLOCK
	z CONSUME_ITEM
	a ()Ljava/lang/Iterable; all
	a (Lnet/minecraft/server/CriterionTrigger;)Lnet/minecraft/server/CriterionTrigger; register
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/CriterionTrigger; getCriterion
dap net/minecraft/client/gui/components/toasts/package-info
dao net/minecraft/client/gui/components/toasts/TutorialToast
	c icon
	d title
	e message
	f visibility
	g lastProgressTime
	h lastProgress
	i progress
	j progressable
	a ()V hide
	a (F)V updateProgress
	a (Ldan;J)Ldam$a; render
dar net/minecraft/client/gui/font/FontManager
	a LOGGER
	b fonts
	c providers
	d textureManager
	e forceUnicode
	f reloadListener
	a ()Lnet/minecraft/server/IReloadListener; getReloadListener
	a (Ldar;)Z access$000
	a (Lnet/minecraft/server/MinecraftKey;)Lcyu; get
	a (ZLjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V setForceUnicode
	b ()Lorg/apache/logging/log4j/Logger; access$100
	b (Ldar;)Ljava/util/Map; access$200
	b (Lnet/minecraft/server/MinecraftKey;)Lcyu; lambda$get$0
	c (Ldar;)Ljava/util/Set; access$300
	d (Ldar;)Ldxc; access$400
daq net/minecraft/client/gui/font/AllMissingGlyphProvider
	a (C)Lctx; getGlyph
dat net/minecraft/client/gui/font/FontTexture
	f name
	g colored
	h root
	a ()Lnet/minecraft/server/MinecraftKey; getName
	a (Lctx;)Ldav; add
	a (Lnet/minecraft/server/IResourceManager;)V load
das net/minecraft/client/gui/font/FontSet
	a LOGGER
	b SPACE_GLYPH
	c SPACE_INFO
	d RANDOM
	e textureManager
	f name
	g missingGlyph
	h providers
	i glyphs
	j glyphInfos
	k glyphsByWidth
	l textures
	a ()V closeTextures
	a (C)Lctv; getGlyphInfo
	a (I)Ldav; lambda$getGlyph$3
	a (Lctv;)Ldav; getRandomGlyph
	a (Lctx;)Ldav; stitch
	a (Ljava/util/List;)V reload
	b ()F lambda$static$0
	b (C)Ldav; getGlyph
	b (I)Lctv; lambda$getGlyphInfo$2
	c (C)Lctx; getRaw
	c (I)Lit/unimi/dsi/fastutil/chars/CharList; lambda$reload$1
dav net/minecraft/client/gui/font/glyphs/BakedGlyph
	a texture
	b u0
	c u1
	d v0
	e v1
	f left
	g right
	h up
	i down
	a ()Lnet/minecraft/server/MinecraftKey; getTexture
	a (Ldxc;ZFFLcuw;FFFF)V render
cue$b com/mojang/blaze3d/platform/InputConstants$Type
	a KEYSYM
	b SCANCODE
	c MOUSE
	d MOUSE_BUTTON_NAMES
	e map
	f defaultPrefix
	g $VALUES
	a ()Ljava/lang/String; getDefaultPrefix
	a (I)Lcue$a; getOrCreate
	a (Lcue$b;)Ljava/lang/String; access$200
	a (Lcue$b;Ljava/lang/String;I)V addKey
dle$1 net/minecraft/client/particle/HeartParticle$1
dau net/minecraft/client/gui/font/TextFieldHelper
	a minecraft
	b font
	c getMessageFn
	d setMessageFn
	e maxWidth
	f cursorPos
	g selectionPos
	a ()V setStart
	a (C)Z charTyped
	a (I)Z keyPressed
	a (Ljava/lang/String;)V insertText
	b ()V setEnd
	c ()I getCursorPos
	d ()I getSelectionPos
	e ()Ljava/lang/String; getSelected
	f ()V deleteSelection
cue$a com/mojang/blaze3d/platform/InputConstants$Key
	a name
	b type
	c value
	d NAME_MAP
	a ()Lcue$b; getType
	b ()I getValue
	c ()Ljava/lang/String; getName
	d ()Ljava/util/Map; access$100
dax net/minecraft/client/gui/font/glyphs/MissingGlyph
	a INSTANCE
	b IMAGE_DATA
	c $VALUES
	a (II)V upload
	a (Lcuj;)V lambda$static$0
	d ()I getPixelWidth
	e ()I getPixelHeight
	f ()Z isColored
	g ()F getOversample
daw net/minecraft/client/gui/font/glyphs/EmptyGlyph
	a ()Lnet/minecraft/server/MinecraftKey; getTexture
	a (Ldxc;ZFFLcuw;FFFF)V render
daz net/minecraft/client/gui/font/package-info
day net/minecraft/client/gui/font/glyphs/package-info
dba net/minecraft/client/gui/font/providers/BitmapProvider
	a LOGGER
	b image
	c glyphs
	a ()Lorg/apache/logging/log4j/Logger; access$100
	a (C)Lctx; getGlyph
net/minecraft/server/EntityDolphin net/minecraft/world/entity/animal/Dolphin
	b ALLOWED_ITEMS
	bA SWIM_WITH_PLAYER_TARGETING
	bz MOISNTESS_LEVEL
	c TREASURE_POS
	d GOT_FISH
	C (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	M ()I getMaxHeadXRot
	a (B)V handleEntityEvent
	a (I)V handleAirSupply
	a (Lnet/minecraft/server/EntityDolphin;)Ljava/util/Random; access$100
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityItem;)V pickUpItem
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/ParticleParam;)V addParticlesAroundSelf
	ai ()Lnet/minecraft/server/SoundEffect; getSwimSound
	aj ()Lnet/minecraft/server/SoundEffect; getSwimSplashSound
	b (I)V setMoisntessLevel
	b (Lnet/minecraft/server/EntityDolphin;)Ljava/util/Random; access$200
	b (Lnet/minecraft/server/EntityItem;)Z lambda$static$0
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkDolphinSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	bp ()I getMaxAirSupply
	c (Lnet/minecraft/server/EntityDolphin;)Ljava/util/Random; access$300
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	cm ()Z canBreatheUnderwater
	dA ()I getMaxHeadYRot
	dV ()Z gotFish
	dW ()I getMoistnessLevel
	dX ()Z closeToNextPos
	dY ()Lnet/minecraft/server/PathfinderTargetCondition; access$400
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	e (Lnet/minecraft/server/Vec3D;)V travel
	g (Lnet/minecraft/server/BlockPosition;)V setTreasurePos
	h ()V tick
	l ()Lnet/minecraft/server/BlockPosition; getTreasurePos
	m (I)I increaseAirSupply
	n ()V registerGoals
	n (Lnet/minecraft/server/Entity;)Z canRide
	r (Z)V setGotFish
	u_ ()V defineSynchedData
dbc net/minecraft/client/gui/font/providers/GlyphProviderBuilderType
	a BITMAP
	b TTF
	c LEGACY_UNICODE
	d BY_NAME
	e name
	f factory
	g $VALUES
	a (Lcom/google/gson/JsonObject;)Ldbb; create
	a (Ljava/lang/String;)Ldbc; byName
	a (Ljava/util/HashMap;)V lambda$static$0
dbb net/minecraft/client/gui/font/providers/GlyphProviderBuilder
	a (Lnet/minecraft/server/IResourceManager;)Lctw; create
net/minecraft/server/EntityOcelot net/minecraft/world/entity/animal/Ocelot
	bA DATA_TRUSTING
	bB ocelotAvoidPlayersGoal
	bC temptGoal
	bz TEMPT_INGREDIENT
	A ()I getAmbientSoundInterval
	C (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L ()V customServerAiStep
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityOcelot;)Z access$000
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (FF)V causeFallDamage
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityOcelot; getBreedOffspring
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (D)Z removeWhenFarAway
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkOcelotSpawnRules
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	dV ()V reassessTrustingGoals
	dW ()V addKittensDuringSpawn
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	n ()V registerGoals
	s (Z)V spawnTrustingParticles
	u_ ()V defineSynchedData
dbe net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderBuilder
	a LOGGER
	b location
	c size
	d oversample
	e shiftX
	f shiftY
	g skip
	a (Lcom/google/gson/JsonObject;)Ldbb; fromJson
	a (Lnet/minecraft/server/IResourceManager;)Lctw; create
dbd net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider
	a LOGGER
	b resourceManager
	c sizes
	d texturePattern
	e textures
	a ()Lorg/apache/logging/log4j/Logger; access$100
	a (B)I getLeft
	a (C)Lctx; getGlyph
	a (Lnet/minecraft/server/MinecraftKey;)Lcuj; loadTexture
	b (B)I getRight
	b (C)Lnet/minecraft/server/MinecraftKey; getSheetLocation
net/minecraft/server/WorldGenSurface net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilder
	A CONFIG_OCEAN_SAND
	B CONFIG_FULL_SAND
	C CONFIG_BADLANDS
	D CONFIG_MYCELIUM
	E CONFIG_HELL
	F CONFIG_THEEND
	G DEFAULT
	H MOUNTAIN
	I SHATTERED_SAVANNA
	J GRAVELLY_MOUNTAIN
	K GIANT_TREE_TAIGA
	L SWAMP
	M BADLANDS
	N WOODED_BADLANDS
	O ERODED_BADLANDS
	P FROZEN_OCEAN
	Q NETHER
	R NOPE
	a configurationFactory
	f AIR
	g DIRT
	h GRASS_BLOCK
	i PODZOL
	j GRAVEL
	k STONE
	l COARSE_DIRT
	m SAND
	n RED_SAND
	o WHITE_TERRACOTTA
	p MYCELIUM
	q NETHERRACK
	r ENDSTONE
	s CONFIG_EMPTY
	t CONFIG_PODZOL
	u CONFIG_GRAVEL
	v CONFIG_GRASS
	w CONFIG_DIRT
	x CONFIG_STONE
	y CONFIG_COARSE_DIRT
	z CONFIG_DESERT
	a (J)V initNoise
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenSurfaceConfiguration; createSettings
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenSurface;)Lnet/minecraft/server/WorldGenSurface; register
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
dbg net/minecraft/client/gui/package-info
dbf net/minecraft/client/gui/font/providers/package-info
cue$1 com/mojang/blaze3d/platform/InputConstants$1
dbi net/minecraft/client/gui/screens/AlertScreen
	a text
	b okButton
	c callback
	d lines
	e delayTicker
	a (I)V setDelay
	a (Lczi;)V lambda$init$0
dbh net/minecraft/client/gui/screens/AccessibilityOptionsScreen
	a OPTIONS
	b lastScreen
	c options
	d narratorButton
	a ()V updateNarratorButton
	a (Lczi;)V lambda$init$0
dbk net/minecraft/client/gui/screens/ChatOptionsScreen
	a CHAT_OPTIONS
	b lastScreen
	c options
	d narratorButton
	a ()V updateNarratorButton
	a (Lczi;)V lambda$init$0
dbj net/minecraft/client/gui/screens/BackupConfirmScreen
	a listener
	b lastScreen
	c description
	d promptForCacheErase
	e lines
	f eraseCacheText
	g backupButton
	h continueButton
	i cancelButton
	j eraseCache
	a (Lczi;)V lambda$init$2
	b (Lczi;)V lambda$init$1
	c (Lczi;)V lambda$init$0
dbm net/minecraft/client/gui/screens/ConfirmLinkScreen
	d warning
	e copyButton
	f url
	g showWarning
	a ()V copyToClipboard
	a (Lczi;)V lambda$init$2
	b (Lczi;)V lambda$init$1
	c (Lczi;)V lambda$init$0
dbl net/minecraft/client/gui/screens/ChatScreen
	a input
	b commandUsage
	c commandUsagePosition
	d commandUsageWidth
	e WHITESPACE_PATTERN
	f historyBuffer
	g historyPos
	h initial
	i currentParse
	j pendingSuggestions
	k suggestions
	l hasEdits
	m keepSuggestions
	a ()V showSuggestions
	a (I)V moveInHistory
	a (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;I)Ljava/lang/String; formatText
	a (Ldbl;Ldbl$a;)Ldbl$a; access$402
	a (Ldbl;Ljava/lang/String;)V access$300
	a (Ldbl;Z)Z access$202
	a (Ljava/lang/String;)V onEdited
	a (Ljava/lang/String;I)Ljava/lang/String; formatChat
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; access$100
	a (Lnet/minecraft/server/EnumChatFormat;)V fillNodeUsage
	b ()V updateCommandInfo
	b (Ljava/lang/String;)I getLastWordIndex
	b (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; calculateSuggestionSuffix
	c ()V updateUsageInfo
	c (Ljava/lang/String;)V setChatLine
	d ()V lambda$updateCommandInfo$0
dbo net/minecraft/client/gui/screens/ConnectScreen
	a UNIQUE_THREAD_ID
	b LOGGER
	c connection
	d aborted
	e parent
	f status
	g lastNarration
	a ()Lorg/apache/logging/log4j/Logger; access$300
	a (Lczi;)V lambda$init$0
	a (Ldbo;)Z access$000
	a (Ldbo;Lnet/minecraft/server/IChatBaseComponent;)V access$400
	a (Ldbo;Lnet/minecraft/server/NetworkManager;)Lnet/minecraft/server/NetworkManager; access$102
	a (Ljava/lang/String;I)V connect
	a (Lnet/minecraft/server/IChatBaseComponent;)V updateStatus
	b (Ldbo;)Lnet/minecraft/server/NetworkManager; access$100
	c (Ldbo;)Ldcl; access$200
dbn net/minecraft/client/gui/screens/ConfirmScreen
	a yesButton
	b noButton
	c callback
	d title2
	e lines
	f delayTicker
	a (I)V setDelay
	a (Lczi;)V lambda$init$1
	b (Lczi;)V lambda$init$0
net/minecraft/server/HeightMap$Use net/minecraft/world/level/levelgen/Heightmap$Usage
	d $VALUES
net/minecraft/server/CommandTeam net/minecraft/server/commands/TeamCommand
	a ERROR_TEAM_ALREADY_EXISTS
	b ERROR_TEAM_NAME_TOO_LONG
	c ERROR_TEAM_ALREADY_EMPTY
	d ERROR_TEAM_ALREADY_NAME
	e ERROR_TEAM_ALREADY_COLOR
	f ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED
	g ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED
	h ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED
	i ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED
	j ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED
	k ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED
	l ERROR_TEAM_COLLISION_UNCHANGED
	A (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$28
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listTeams
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I createTeam
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/server/IChatBaseComponent;)I createTeam
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I leaveTeam
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;)I emptyTeam
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Ljava/util/Collection;)I joinTeam
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/EnumChatFormat;)I setColor
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/IChatBaseComponent;)I setDisplayName
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility;)I setNametagVisibility
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/ScoreboardTeamBase$EnumTeamPush;)I setCollision
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Z)I setFriendlySight
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$27
	b (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$1
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;)I deleteTeam
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/IChatBaseComponent;)I setPrefix
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility;)I setDeathMessageVisibility
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Z)I setFriendlyFire
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$26
	c (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;)I listMembers
	c (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/IChatBaseComponent;)I setSuffix
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$25
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$24
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$23
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$22
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$21
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	r (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	s (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	t (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	u (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	v (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	w (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	x (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	y (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	z (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
dbq net/minecraft/client/gui/screens/CreateFlatWorldScreen
	a parent
	b generator
	c columnType
	d columnHeight
	e list
	f deleteLayerButton
	a ()Ljava/lang/String; saveLayerString
	a (Lczi;)V lambda$init$3
	a (Ldbq;)Lnet/minecraft/server/GeneratorSettingsFlat; access$000
	a (Ljava/lang/String;)V loadLayers
	a (Lnet/minecraft/server/NBTTagCompound;)V loadLayers
	b ()Lnet/minecraft/server/NBTTagCompound; saveLayers
	b (Lczi;)V lambda$init$2
	b (Ldbq;)I access$300
	c ()V updateButtonValidity
	c (Lczi;)V lambda$init$1
	d ()Z hasValidSelection
	d (Lczi;)V lambda$init$0
dbp net/minecraft/client/gui/screens/CreateBuffetWorldScreen
	a GENERATORS
	b parent
	c optionsTag
	d list
	e generatorIndex
	f doneButton
	a ()V updateButtonValidity
	a (Lczi;)V lambda$init$3
	a (Lnet/minecraft/server/MinecraftKey;)Z lambda$static$0
	a (Lnet/minecraft/server/MinecraftKey;Ldbp$a$a;)Z lambda$loadOptions$4
	b ()V loadOptions
	b (Lczi;)V lambda$init$2
	c ()Lnet/minecraft/server/NBTTagCompound; saveOptions
	c (Lczi;)V lambda$init$1
net/minecraft/server/EntityRabbit$PathfinderGoalRabbitAvoidTarget net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal
	i rabbit
	a ()Z canUse
dbs net/minecraft/client/gui/screens/DemoIntroScreen
	a DEMO_BACKGROUND_LOCATION
	a (Lczi;)V lambda$init$1
	b (Lczi;)V lambda$init$0
net/minecraft/server/AbstractDragonController net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance
	a dragon
	a ()Z isSitting
	a (Lnet/minecraft/server/DamageSource;F)F onHurt
	a (Lnet/minecraft/server/EntityEnderCrystal;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DamageSource;Lnet/minecraft/server/EntityHuman;)V onCrystalDestroyed
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	e ()V end
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	h ()F getTurnSpeed
dbr net/minecraft/client/gui/screens/DeathScreen
	a delayTicker
	b causeOfDeath
	c hardcore
	a (I)Lnet/minecraft/server/IChatBaseComponent; getClickedComponentAt
	a (Lczi;)V lambda$init$1
	a (Z)V confirmResult
	b (Lczi;)V lambda$init$0
net/minecraft/server/EnchantmentFlameArrows net/minecraft/world/item/enchantment/ArrowFireEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
dbu net/minecraft/client/gui/screens/DisconnectedScreen
	a reason
	b lines
	c parent
	d textHeight
	a (Lczi;)V lambda$init$0
dbt net/minecraft/client/gui/screens/DirectJoinServerScreen
	a selectButton
	b serverData
	c ipEdit
	d callback
	a ()V onSelect
	a (Lczi;)V lambda$init$1
	a (Ljava/lang/String;)V lambda$init$2
	b ()V updateSelectButtonStatus
	b (Lczi;)V lambda$init$0
dbw net/minecraft/client/gui/screens/ErrorScreen
	a message
	a (Lczi;)V lambda$init$0
cis$3 net/minecraft/world/level/levelgen/structure/StrongholdPieces$3
	a $SwitchMap$net$minecraft$world$level$levelgen$structure$StrongholdPieces$StrongholdPiece$SmallDoorType
	b $SwitchMap$net$minecraft$core$Direction
dbv net/minecraft/client/gui/screens/EditServerScreen
	a addButton
	b callback
	c serverData
	d ipEdit
	e nameEdit
	f serverPackButton
	g addressFilter
	a ()V onAdd
	a (Lczi;)V lambda$init$3
	a (Ljava/lang/String;)V onEdited
	b (Lczi;)V lambda$init$2
	b (Ljava/lang/String;)Z lambda$new$0
	c (Lczi;)V lambda$init$1
dby net/minecraft/client/gui/screens/InBedChatScreen
	a (Lczi;)V lambda$init$0
	b ()V sendWakeUp
dbx net/minecraft/client/gui/screens/GenericDirtMessageScreen
net/minecraft/server/RecipeFireworksStar net/minecraft/world/item/crafting/FireworkStarRecipe
	a SHAPE_INGREDIENT
	b TRAIL_INGREDIENT
	c FLICKER_INGREDIENT
	d SHAPE_BY_ITEM
	e GUNPOWDER_INGREDIENT
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	c ()Lnet/minecraft/server/ItemStack; getResultItem
net/minecraft/server/BehaviorGate net/minecraft/world/entity/ai/behavior/GateBehavior
	a exitErasedMemories
	b orderPolicy
	c runningPolicy
	d behaviors
	a (J)Z timedOut
	a (Lcom/mojang/datafixers/util/Pair;)V lambda$new$0
	a (Lnet/minecraft/server/Behavior;)Z lambda$toString$7
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;JLnet/minecraft/server/Behavior;)V lambda$stop$6
	b (Lnet/minecraft/server/Behavior;)Z lambda$stop$5
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;JLnet/minecraft/server/Behavior;)V lambda$tick$4
	c (Lnet/minecraft/server/Behavior;)Z lambda$tick$3
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;JLnet/minecraft/server/Behavior;)Z lambda$canStillUse$2
	d (Lnet/minecraft/server/Behavior;)Z lambda$canStillUse$1
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
dbz net/minecraft/client/gui/screens/LanguageSelectScreen
	a lastScreen
	b packSelectionList
	c options
	d languageManager
	e forceUnicodeButton
	f doneButton
	a (Lczi;)V lambda$init$1
	a (Ldbz;)Ldxz; access$000
	b (Lczi;)V lambda$init$0
cis$1 net/minecraft/world/level/levelgen/structure/StrongholdPieces$1
	a (I)Z doPlace
cis$2 net/minecraft/world/level/levelgen/structure/StrongholdPieces$2
	a (I)Z doPlace
aui$a net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt
	a enderman
	a ()Z canUse
	c ()V start
dcb net/minecraft/client/gui/screens/LoadingOverlay
	a MOJANG_LOGO_LOCATION
	b minecraft
	c reload
	d onFinish
	e fadeIn
	f currentProgress
	g fadeOutStart
	h fadeInStart
	a ()Z isPauseScreen
	a (IIIIFF)V drawProgressBar
	a (Lcyc;)V registerTextures
	b ()Lnet/minecraft/server/MinecraftKey; access$000
net/minecraft/server/BlockWaterLily net/minecraft/world/level/block/WaterlilyBlock
	a AABB
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
dca net/minecraft/client/gui/screens/LevelLoadingScreen
	a progressListener
	b lastNarration
	c COLORS
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$0
	a (Lvx;IIII)V renderChunks
net/minecraft/server/IDynamicTexture net/minecraft/world/item/ItemPropertyFunction
net/minecraft/server/DefaultUncaughtExceptionHandler net/minecraft/DefaultUncaughtExceptionHandler
	a logger
dcd net/minecraft/client/gui/screens/MouseSettingsScreen
	a lastScreen
	b list
	c OPTIONS
	a (I)[Lcyf; lambda$init$0
	a (Lczi;)V lambda$init$1
net/minecraft/server/BehaviorPositionValidate net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi
	a memoryType
	b poiPredicate
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z poiDoesntExist
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z bedIsOccupied
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
dcc net/minecraft/client/gui/screens/MenuScreens
	a LOGGER
	b SCREENS
	a ()Z selfTest
	a (Lnet/minecraft/server/Containers;)Ldcc$a; getConstructor
	a (Lnet/minecraft/server/Containers;Lcyc;ILnet/minecraft/server/IChatBaseComponent;)V create
	a (Lnet/minecraft/server/Containers;Ldcc$a;)V register
dcf net/minecraft/client/gui/screens/OutOfMemoryScreen
	a (Lczi;)V lambda$init$1
	b (Lczi;)V lambda$init$0
dce net/minecraft/client/gui/screens/OptionsScreen
	a OPTION_SCREEN_OPTIONS
	b lastScreen
	c options
	d difficultyButton
	e lockButton
	f currentDifficulty
	a (Lczi;)V lambda$init$11
	a (Lnet/minecraft/server/EnumDifficulty;)Ljava/lang/String; getDifficultyText
	a (Z)V lockCallback
	b (Lczi;)V lambda$init$10
	c (Lczi;)V lambda$init$9
	d (Lczi;)V lambda$init$8
	e (Lczi;)V lambda$init$7
	f (Lczi;)V lambda$init$6
	g (Lczi;)V lambda$init$5
	h (Lczi;)V lambda$init$4
	i (Lczi;)V lambda$init$3
	j (Lczi;)V lambda$init$2
	k (Lczi;)V lambda$init$1
	l (Lczi;)V lambda$init$0
dch net/minecraft/client/gui/screens/PauseScreen
	a showPauseMenu
	a ()V createPauseMenu
	a (Lczi;)V lambda$createPauseMenu$9
	a (Ljava/lang/String;Lczi;)V lambda$createPauseMenu$4
	a (Ljava/lang/String;Z)V lambda$null$3
	a (Z)V lambda$null$5
	b (Lczi;)V lambda$createPauseMenu$8
	c (Lczi;)V lambda$createPauseMenu$7
	d (Lczi;)V lambda$createPauseMenu$6
	e (Lczi;)V lambda$createPauseMenu$2
	f (Lczi;)V lambda$createPauseMenu$1
	g (Lczi;)V lambda$createPauseMenu$0
dcg net/minecraft/client/gui/screens/Overlay
	a ()Z isPauseScreen
net/minecraft/server/CriterionConditionValue$IntegerRange net/minecraft/advancements/critereon/MinMaxBounds$Ints
	e ANY
	f minSq
	g maxSq
	a (I)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; exactly
	a (II)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; between
	a (J)Z matchesSqr
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; create
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; fromReader
	a (Ljava/lang/Integer;)Ljava/lang/Long; squareOpt
	b (I)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; atLeast
	b (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$fromReader$0
	c (I)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; atMost
	d (I)Z matches
dql$a net/minecraft/client/renderer/debug/ChunkDebugRenderer$ChunkData
	a this$0
	b clientData
	c serverData
	a (Ldql$a;)Ljava/util/concurrent/CompletableFuture; access$100
	a (Lnet/minecraft/server/WorldServer;II)Ljava/util/Map; lambda$new$0
	b (Ldql$a;)Ljava/util/Map; access$200
dcj net/minecraft/client/gui/screens/ProgressScreen
	a title
	b stage
	c progress
	d stop
	a ()V stop
	a (I)V progressStagePercentage
	a (Lnet/minecraft/server/IChatBaseComponent;)V progressStartNoAbort
	b (Lnet/minecraft/server/IChatBaseComponent;)V progressStart
	c (Lnet/minecraft/server/IChatBaseComponent;)V progressStage
dci net/minecraft/client/gui/screens/PresetFlatWorldScreen
	a PRESETS
	b parent
	c shareText
	d listText
	e list
	f selectButton
	g export
	a ()Ljava/util/List; access$000
	a (Lczi;)V lambda$init$1
	a (Ldci;)Lczo; access$200
	a (Ljava/lang/String;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/BiomeBase;Ljava/util/List;[Lnet/minecraft/server/WorldGenFlatLayerInfo;)V preset
	a (Z)V updateButtonValidity
	b (Lczi;)V lambda$init$0
	b (Ldci;)I access$400
net/minecraft/server/BlockSand net/minecraft/world/level/block/SandBlock
	a dustColor
	q (Lnet/minecraft/server/IBlockData;)I getDustColor
dcl net/minecraft/client/gui/screens/Screen
dck net/minecraft/client/gui/screens/ReceivingLevelScreen
dcn net/minecraft/client/gui/screens/SkinCustomizationScreen
	a lastScreen
	a (Lawh;)Ljava/lang/String; getMessage
	a (Lawh;Lczi;)V lambda$init$0
	a (Lczi;)V lambda$init$2
	b (Lczi;)V lambda$init$1
net/minecraft/server/WorldGenSurfaceSavannaMutated net/minecraft/world/level/levelgen/surfacebuilders/ShatteredSavanaSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
dcm net/minecraft/client/gui/screens/ShareToLanScreen
	a lastScreen
	b commandsButton
	c modeButton
	d gameModeName
	e commands
	a ()V updateSelectionStrings
	a (Lczi;)V lambda$init$3
	b (Lczi;)V lambda$init$2
	c (Lczi;)V lambda$init$1
	d (Lczi;)V lambda$init$0
net/minecraft/server/EntityMinecartRideable net/minecraft/world/entity/vehicle/Minecart
	a (IIIZ)V activateMinecart
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
dcp net/minecraft/client/gui/screens/TitleScreen
	a CUBE_MAP
	b PANORAMA_OVERLAY
	c ACCESSIBILITY_TEXTURE
	d minceraftEasterEgg
	e splash
	f resetDemoButton
	g warningMessage
	h MINECRAFT_LOGO
	i MINECRAFT_EDITION
	j realmsNotificationsInitialized
	k realmsNotificationsScreen
	l copyrightWidth
	m copyrightX
	n panorama
	o fading
	p fadeInStart
	a ()Z realmsNotificationsEnabled
	a (II)V createNormalMenuOptions
	a (Lczi;)V lambda$createDemoMenuOptions$8
	a (Ldxc;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preloadResources
	a (Z)V confirmDemo
	b ()V realmsButtonClicked
	b (II)V createDemoMenuOptions
	b (Lczi;)V lambda$createDemoMenuOptions$7
	c (Lczi;)V lambda$createNormalMenuOptions$6
	d (Lczi;)V lambda$createNormalMenuOptions$5
	e (Lczi;)V lambda$createNormalMenuOptions$4
	f (Lczi;)V lambda$init$3
	g (Lczi;)V lambda$init$2
	h (Lczi;)V lambda$init$1
	i (Lczi;)V lambda$init$0
dco net/minecraft/client/gui/screens/SoundOptionsScreen
	a lastScreen
	b options
	a (Lczi;)V lambda$init$1
	b (Lczi;)V lambda$init$0
dcr net/minecraft/client/gui/screens/WinScreen
	a LOGGER
	b LOGO_LOCATION
	c EDITION_LOCATION
	d VIGNETTE_LOCATION
	e poem
	f onFinished
	g time
	h lines
	i totalScrollLength
	j scrollSpeed
	a ()V respawn
	a (IIF)V renderBg
dcq net/minecraft/client/gui/screens/VideoSettingsScreen
	a lastScreen
	b options
	c list
	d OPTIONS
	e oldMipmaps
	a (Lczi;)V lambda$init$0
net/minecraft/server/ParticleParamBlock net/minecraft/core/particles/BlockParticleOption
	a DESERIALIZER
	b type
	c state
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/server/Particle; getType
	c ()Lnet/minecraft/server/IBlockData; getState
dct net/minecraft/client/gui/screens/achievement/StatsUpdateListener
	b LOADING_SYMBOLS
	c ()V onStatsUpdated
net/minecraft/server/IRegistryWritable net/minecraft/core/WritableRegistry
	a (ILnet/minecraft/server/MinecraftKey;Ljava/lang/Object;)Ljava/lang/Object; registerMapping
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/Object;)Ljava/lang/Object; register
	c ()Z isEmpty
net/minecraft/server/EnchantmentProtection$DamageType net/minecraft/world/item/enchantment/ProtectionEnchantment$Type
	f name
	g minCost
	h levelCost
	i $VALUES
	a ()Ljava/lang/String; getName
	b ()I getMinCost
	c ()I getLevelCost
dcs net/minecraft/client/gui/screens/achievement/StatsScreen
	a lastScreen
	c statsList
	d itemStatsList
	e mobsStatsList
	f stats
	g activeList
	h isLoading
	a ()V initLists
	a (I)I getColumnX
	a (IIII)V blitSlotIcon
	a (IILnet/minecraft/server/Item;)V blitSlot
	a (Lczi;)V lambda$initButtons$3
	a (Lczs;)V setActiveList
	a (Ldcs;)Lcyu; access$100
	a (Ldcs;I)I access$700
	a (Ldcs;IIII)V access$800
	a (Ldcs;IILnet/minecraft/server/Item;)V access$1200
	b ()V initButtons
	b (Lczi;)V lambda$initButtons$2
	b (Ldcs;)Lnet/minecraft/server/StatisticManager; access$200
	c ()V onStatsUpdated
	c (Lczi;)V lambda$initButtons$1
	c (Ldcs;)Lcyu; access$300
	d ()Lczs; getActiveList
	d (Lczi;)V lambda$initButtons$0
	d (Ldcs;)Lcyu; access$400
	e (Ldcs;)Lcyu; access$900
	f (Ldcs;)Lcyu; access$1000
	g (Ldcs;)Ldcs$b; access$1100
	h (Ldcs;)Lcyu; access$1300
	i (Ldcs;)Lcyu; access$1400
	j (Ldcs;)Lcyu; access$1500
	k (Ldcs;)Lcyu; access$1600
	l (Ldcs;)Lcyu; access$1700
	m (Ldcs;)Lcyu; access$1800
	n (Ldcs;)Lcyu; access$1900
	o (Ldcs;)Lcyu; access$2000
dfl$a net/minecraft/client/gui/screens/resourcepacks/lists/ResourcePackList$ResourcePackEntry
	a minecraft
	b screen
	c parent
	d resourcePack
	a ()V bindToIcon
	a (Ldfl$a;Ldfl;)Ldfl; access$002
	a (Ldfm;)V addToList
	a (Z)V lambda$mouseClicked$0
	b ()Lnet/minecraft/server/EnumResourcePackVersion; getCompatibility
	c ()Ljava/lang/String; getDescription
	d ()Ljava/lang/String; getName
	e ()Ldxw; getResourcePack
	f ()Z showHoverOverlay
	g ()Z canMoveRight
	h ()Z canMoveLeft
	i ()Z canMoveUp
	j ()Z canMoveDown
	k ()Ldfi; getScreen
dcv net/minecraft/client/gui/screens/advancements/AdvancementTab
	a minecraft
	b screen
	c type
	d index
	e advancement
	f display
	g icon
	h title
	i root
	j widgets
	k scrollX
	l scrollY
	m minX
	n minY
	o maxX
	p maxY
	q fade
	r centered
	a ()Ldcw; getType
	a (DD)V scroll
	a (IIDD)Z isMouseOver
	a (IIII)V drawTooltips
	a (IILdsv;)V drawIcon
	a (IIZ)V drawTab
	a (Lcyc;Ldcz;ILnet/minecraft/server/Advancement;)Ldcv; create
	a (Ldcx;Lnet/minecraft/server/Advancement;)V addWidget
	a (Lnet/minecraft/server/Advancement;)V addAdvancement
	b ()I getIndex
	b (Lnet/minecraft/server/Advancement;)Ldcx; getWidget
	c ()Lnet/minecraft/server/Advancement; getAdvancement
	d ()Ljava/lang/String; getTitle
	e ()Lnet/minecraft/server/AdvancementDisplay; getDisplay
	f ()V drawContents
	g ()Ldcz; getScreen
dwe$a net/minecraft/client/renderer/entity/layers/SpinAttackEffectLayer$SpinAttackModel
	a box
	a (FFFFFF)V render
dcu net/minecraft/client/gui/screens/achievement/package-info
net/minecraft/server/BlockMushroom net/minecraft/world/level/block/MushroomBlock
	a SHAPE
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z growMushroom
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	g (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z hasPostProcess
dcx net/minecraft/client/gui/screens/advancements/AdvancementWidget
	a WIDGETS_LOCATION
	b LAST_WORD
	c tab
	d advancement
	e display
	f title
	g width
	h description
	i minecraft
	j parent
	k children
	l progress
	m x
	n y
	a ()I getWidth
	a (II)V draw
	a (IIFII)V drawHover
	a (IIII)Z isMouseOver
	a (IIIIIIII)V renderRepeating
	a (IIIIIIIII)V render9Sprite
	a (IIZ)V drawConnectivity
	a (Ldcx;)V addChild
	a (Ljava/lang/String;I)Ljava/util/List; findOptimalLines
	a (Lnet/minecraft/server/Advancement;)Ldcx; getFirstVisibleParent
	a (Lnet/minecraft/server/AdvancementProgress;)V setProgress
	b ()V attachToParent
	c ()I getY
	d ()I getX
dcw net/minecraft/client/gui/screens/advancements/AdvancementTabType
	a ABOVE
	b BELOW
	c LEFT
	d RIGHT
	e textureX
	f textureY
	g width
	h height
	i max
	j $VALUES
	a ()I getMax
	a (I)I getX
	a (IIIDD)Z isMouseOver
	a (IIILdsv;Lnet/minecraft/server/ItemStack;)V drawIcon
	a (Lcyw;IIZI)V draw
	b (I)I getY
net/minecraft/server/SoundEffect net/minecraft/sounds/SoundEvent
	a location
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
dcz net/minecraft/client/gui/screens/advancements/AdvancementsScreen
	a WINDOW_LOCATION
	b TABS_LOCATION
	c advancements
	d tabs
	e selectedTab
	f isScrolling
	a ()V onAdvancementsCleared
	a (II)V renderWindow
	a (IIII)V renderInside
	a (Lnet/minecraft/server/Advancement;)V onAddAdvancementRoot
	a (Lnet/minecraft/server/Advancement;Lnet/minecraft/server/AdvancementProgress;)V onUpdateAdvancementProgress
	b (IIII)V renderTooltips
	b (Lnet/minecraft/server/Advancement;)V onRemoveAdvancementRoot
	c (Lnet/minecraft/server/Advancement;)V onAddAdvancementTask
	d (Lnet/minecraft/server/Advancement;)V onRemoveAdvancementTask
	e (Lnet/minecraft/server/Advancement;)V onSelectedTabChanged
	f (Lnet/minecraft/server/Advancement;)Ldcx; getAdvancementWidget
	g (Lnet/minecraft/server/Advancement;)Ldcv; getTab
net/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure net/minecraft/world/level/levelgen/feature/structures/StructurePoolElement
	a projection
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure; setProjection
	b (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	c ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching; getProjection
	d ()I getGroundLevelDelta
net/minecraft/server/LootContextParameterSets net/minecraft/world/level/storage/loot/parameters/LootContextParamSets
	GENERIC ALL_PARAMS
	i REGISTRY
	a (Lcqx$a;)V lambda$static$7
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/server/LootContextParameterSet; register
	a (Lnet/minecraft/server/LootContextParameterSet;)Lnet/minecraft/server/MinecraftKey; getKey
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootContextParameterSet; get
	b (Lcqx$a;)V lambda$static$6
	c (Lcqx$a;)V lambda$static$5
	d (Lcqx$a;)V lambda$static$4
	e (Lcqx$a;)V lambda$static$3
	f (Lcqx$a;)V lambda$static$2
	g (Lcqx$a;)V lambda$static$1
	h (Lcqx$a;)V lambda$static$0
dcy net/minecraft/client/gui/screens/advancements/AdvancementWidgetType
	a OBTAINED
	b UNOBTAINED
	c y
	d $VALUES
	a ()I getIndex
net/minecraft/server/IHopper net/minecraft/world/level/block/entity/Hopper
	a INSIDE
	b ABOVE
	c SUCK
	A ()D getLevelY
	B ()D getLevelZ
	N_ ()Lnet/minecraft/server/VoxelShape; getSuckShape
	getWorld ()Lnet/minecraft/server/World; getLevel
	z ()D getLevelX
net/minecraft/server/WorldGenSurfaceNether net/minecraft/world/level/levelgen/surfacebuilders/NetherSurfaceBuilder
	S SOUL_SAND
	a seed
	b decorationNoise
	c AIR
	d NETHERRACK
	e GRAVEL
	a (J)V initNoise
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/BlockPropertyPistonType net/minecraft/world/level/block/state/properties/PistonType
	c name
	d $VALUES
	m ()Ljava/lang/String; getSerializedName
dda net/minecraft/client/gui/screens/advancements/package-info
ddc net/minecraft/client/gui/screens/controls/ControlsScreen
	a selectedKey
	b lastKeySelection
	c OPTIONS
	d lastScreen
	e options
	f controlList
	g resetButton
	a (Lczi;)V lambda$init$2
	b (Lczi;)V lambda$init$1
	c (Lczi;)V lambda$init$0
net/minecraft/server/BlockDeadBush net/minecraft/world/level/block/DeadBushBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
ddb net/minecraft/client/gui/screens/controls/ControlList
	a controlsScreen
	b maxNameWidth
	a (Lddb;)Lcyc; access$100
	b (Lddb;)Lcyc; access$200
	c (Lddb;)Lcyc; access$300
	d (Lddb;)Lcyc; access$400
	e (Lddb;)Lddc; access$600
	f (Lddb;)I access$700
	g (Lddb;)Lcyc; access$800
	h (Lddb;)Lcyc; access$900
	i (Lddb;)Lcyc; access$1000
	j (Lddb;)Lcyc; access$1100
dde net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen
	a commandEdit
	b previousEdit
	c doneButton
	d cancelButton
	e outputButton
	f trackOutput
	g commandUsage
	h commandUsagePosition
	i commandUsageWidth
	j currentParse
	k pendingSuggestions
	l suggestions
	m keepSuggestions
	a ()Lnet/minecraft/server/CommandBlockListenerAbstract; getCommandBlock
	a (Lczi;)V lambda$init$2
	a (Ldde;)Lcyu; access$100
	a (Ldde;Z)Z access$902
	a (Ljava/lang/String;)V setChatLine
	a (Ljava/lang/String;I)Ljava/lang/String; formatChat
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; access$800
	a (Lnet/minecraft/server/CommandBlockListenerAbstract;)V populateAndSendPacket
	a (Lnet/minecraft/server/EnumChatFormat;)V fillNodeUsage
	b ()I getPreviousY
	b (Lczi;)V lambda$init$1
	b (Ldde;)Lcyc; access$200
	b (Ljava/lang/String;)V onEdited
	b (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; calculateSuggestionSuffix
	c ()V updateCommandOutput
	c (Lczi;)V lambda$init$0
	c (Ldde;)Lcyc; access$300
	d ()V onDone
	d (Ldde;)Lcyc; access$400
	e ()V updateCommandInfo
	e (Ldde;)Lcyc; access$500
	f ()V showSuggestions
	f (Ldde;)Lcyc; access$600
	g ()V updateUsageInfo
	g (Ldde;)Lcyc; access$700
	h ()V lambda$updateCommandInfo$3
ddd net/minecraft/client/gui/screens/controls/package-info
net/minecraft/server/BlockPropertyChestType net/minecraft/world/level/block/state/properties/ChestType
	d BY_ID
	e name
	f opposite
	g $VALUES
	a ()Lnet/minecraft/server/BlockPropertyChestType; getOpposite
	m ()Ljava/lang/String; getSerializedName
ddg net/minecraft/client/gui/screens/inventory/AbstractFurnaceScreen
	k recipeBookComponent
	l RECIPE_BUTTON_LOCATION
	m widthTooNarrow
	n texture
	Y_ ()V recipesUpdated
	a (DDIII)Z hasClickedOutside
	a (FII)V renderBg
	a (Lczi;)V lambda$init$0
	a (Lnet/minecraft/server/Slot;IILnet/minecraft/server/InventoryClickType;)V slotClicked
	b (II)V renderLabels
	c ()Ldey; getRecipeBookComponent
ddf net/minecraft/client/gui/screens/inventory/AbstractContainerScreen
	A lastClickButton
	B doubleclick
	C lastQuickMoved
	a INVENTORY_LOCATION
	b imageWidth
	c imageHeight
	d menu
	e inventory
	f leftPos
	g topPos
	h hoveredSlot
	i quickCraftSlots
	j isQuickCrafting
	k clickedSlot
	l isSplittingStack
	m draggingItem
	n snapbackStartX
	o snapbackStartY
	p snapbackEnd
	q snapbackTime
	r snapbackItem
	s quickdropSlot
	t quickdropTime
	u quickCraftingType
	v quickCraftingButton
	w skipNextRelease
	x quickCraftingRemainder
	y lastClickTime
	z lastClickSlot
	a ()Lnet/minecraft/server/Container; getMenu
	a (DDIII)Z hasClickedOutside
	a (FII)V renderBg
	a (II)V renderTooltip
	a (IIIIDD)Z isHovering
	a (Lnet/minecraft/server/ItemStack;IILjava/lang/String;)V renderFloatingItem
	a (Lnet/minecraft/server/Slot;)V renderSlot
	a (Lnet/minecraft/server/Slot;DD)Z isHovering
	a (Lnet/minecraft/server/Slot;IILnet/minecraft/server/InventoryClickType;)V slotClicked
	b (II)V renderLabels
	c (DD)Lnet/minecraft/server/Slot; findSlot
	c (II)Z checkNumkeyPressed
	d ()V recalculateQuickCraftRemaining
dle$b net/minecraft/client/particle/HeartParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
ddi net/minecraft/client/gui/screens/inventory/BeaconScreen
	k BEACON_LOCATION
	l confirmButton
	m initPowerButtons
	n primary
	o secondary
	a (FII)V renderBg
	a (Lddi;)Ljava/util/List; access$400
	a (Lddi;Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/MobEffectList; access$002
	a (Lddi;Z)Z access$202
	b ()Lnet/minecraft/server/MinecraftKey; access$300
	b (II)V renderLabels
	b (Lddi;)Ljava/util/List; access$500
	b (Lddi;Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/MobEffectList; access$102
	c (Lddi;)Lnet/minecraft/server/MobEffectList; access$000
	d (Lddi;)Lnet/minecraft/server/MobEffectList; access$100
	e (Lddi;)Lcyc; access$600
	f (Lddi;)Lcyc; access$700
	g (Lddi;)Lcyc; access$800
	h (Lddi;)Lcyc; access$900
	i (Lddi;)Lcyc; access$1000
	j (Lddi;)Lcyc; access$1100
	k (Lddi;)Lcyc; access$1200
net/minecraft/server/SlotFurnaceResult net/minecraft/world/inventory/FurnaceResultSlot
	a player
	b removeCount
	a (I)Lnet/minecraft/server/ItemStack; remove
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/ItemStack;I)V onQuickCraft
	c (Lnet/minecraft/server/ItemStack;)V checkTakeAchievements
net/minecraft/server/BiomeBeach net/minecraft/world/level/biome/BeachBiome
dle$a net/minecraft/client/particle/HeartParticle$AngryVillagerProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
ddh net/minecraft/client/gui/screens/inventory/AnvilScreen
	k ANVIL_LOCATION
	l name
	a (FII)V renderBg
	a (Ljava/lang/String;)V onNameChanged
	a (Lnet/minecraft/server/Container;II)V setContainerData
	a (Lnet/minecraft/server/Container;ILnet/minecraft/server/ItemStack;)V slotChanged
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/NonNullList;)V refreshContainer
	b (II)V renderLabels
dks$1 net/minecraft/client/particle/BubblePopParticle$1
ddk net/minecraft/client/gui/screens/inventory/BookEditScreen
	a owner
	b book
	c isModified
	d isSigning
	e frameTick
	f currentPage
	g pages
	h title
	i cursorPos
	j selectionPos
	k lastClickTime
	l lastIndex
	m forwardButton
	n backButton
	o doneButton
	p signButton
	q finalizeButton
	r cancelButton
	s hand
	a ()I getNumPages
	a (Lczi;)V lambda$init$5
	a (Lddk$a;)V handleBidi
	a (Lddk$a;Lddk$a;)V renderHighlight
	a (Ljava/lang/String;)Ljava/lang/String; filterText
	a (Ljava/lang/String;I)I getWidthAt
	a (Ljava/lang/String;Lddk$a;)I getIndexAtPosition
	a (Z)V saveChanges
	b ()V pageBack
	b (III)Z bookKeyPressed
	b (Lczi;)V lambda$init$4
	b (Lddk$a;)V convertScreenToLocal
	b (Ljava/lang/String;)V keyBackspace
	b (Ljava/lang/String;I)I strIndexAtWidth
	c ()V pageForward
	c (III)Z titleKeyPressed
	c (Lczi;)V lambda$init$3
	c (Lddk$a;)V convertLocalToScreen
	c (Ljava/lang/String;)V keyDelete
	c (Ljava/lang/String;I)Lddk$a; getPositionAtIndex
	d ()V updateButtonVisibility
	d (Lczi;)V lambda$init$2
	d (Ljava/lang/String;)V keyLeft
	d (Ljava/lang/String;I)I indexInLine
	e ()V eraseEmptyTrailingPages
	e (Lczi;)V lambda$init$1
	e (Ljava/lang/String;)V keyRight
	f ()V appendPageToBook
	f (Lczi;)V lambda$init$0
	f (Ljava/lang/String;)V keyUp
	g ()V deleteSelection
	g (Ljava/lang/String;)V keyDown
	h ()Ljava/lang/String; getCurrentPageText
	h (Ljava/lang/String;)V keyHome
	i ()Ljava/lang/String; getSelected
	i (Ljava/lang/String;)V keyEnd
	j (Ljava/lang/String;)V setCurrentPageText
	k (Ljava/lang/String;)V insertText
	l (Ljava/lang/String;)I strWidth
	m (Ljava/lang/String;)V renderSelection
net/minecraft/server/WorldGenDecoratorHeight net/minecraft/world/level/levelgen/placement/CountHeightmapDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
ddj net/minecraft/client/gui/screens/inventory/BlastFurnaceScreen
	l TEXTURE
ddm net/minecraft/client/gui/screens/inventory/BrewingStandScreen
	k BREWING_STAND_LOCATION
	l BUBBLELENGTHS
	a (FII)V renderBg
	b (II)V renderLabels
net/minecraft/server/GlobalPos net/minecraft/core/GlobalPos
	blockPosition pos
	dimensionManager dimension
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/GlobalPos; of
	a (Lcom/mojang/datafixers/Dynamic;Lnet/minecraft/server/DimensionManager;)Ljava/util/Optional; lambda$of$1
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	b (Lnet/minecraft/server/DimensionManager;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/GlobalPos; lambda$null$0
	c ()Ljava/lang/IllegalArgumentException; lambda$of$2
	create (Lnet/minecraft/server/DimensionManager;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/GlobalPos; of
	getBlockPosition ()Lnet/minecraft/server/BlockPosition; pos
	getDimensionManager ()Lnet/minecraft/server/DimensionManager; dimension
ddl net/minecraft/client/gui/screens/inventory/BookViewScreen
	a EMPTY_ACCESS
	b BOOK_LOCATION
	c bookAccess
	d currentPage
	e cachedPageComponents
	f cachedPage
	g forwardButton
	h backButton
	i playTurnSound
	a ()I getNumPages
	a (I)Z setPage
	a (Lczi;)V lambda$createPageControlButtons$2
	a (Lddl$a;)V setBookAccess
	a (Ljava/lang/String;)I strWidth
	a (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/List; convertPages
	b ()V createMenuControls
	b (I)Z forcePage
	b (Lczi;)V lambda$createPageControlButtons$1
	c ()V createPageControlButtons
	c (DD)Lnet/minecraft/server/IChatBaseComponent; getClickedComponentAt
	c (Lczi;)V lambda$createMenuControls$0
	d ()V pageBack
	e ()V pageForward
	f ()V updateButtonVisibility
net/minecraft/server/EnumResourcePackVersion net/minecraft/server/packs/repository/PackCompatibility
	d description
	e confirmation
	f $VALUES
	a ()Z isCompatible
	a (I)Lnet/minecraft/server/EnumResourcePackVersion; forFormat
	b ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	c ()Lnet/minecraft/server/IChatBaseComponent; getConfirmation
ddo net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen
	m autoCommandBlock
	n modeButton
	o conditionalButton
	p autoexecButton
	q mode
	r conditional
	s autoexec
	a ()Lnet/minecraft/server/CommandBlockListenerAbstract; getCommandBlock
	a (Lczi;)V lambda$init$2
	a (Lnet/minecraft/server/CommandBlockListenerAbstract;)V populateAndSendPacket
	b ()I getPreviousY
	b (Lczi;)V lambda$init$1
	c (Lczi;)V lambda$init$0
	g ()V updateGui
	h ()V updateMode
	i ()V nextMode
	j ()V updateConditional
	k ()V updateAutoexec
net/minecraft/server/WorldGenFeatureDecoratorConfiguration net/minecraft/world/level/levelgen/feature/DecoratorConfiguration
	e NONE
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
ddn net/minecraft/client/gui/screens/inventory/CartographyScreen
	k BG_LOCATION
	a (FII)V renderBg
	a (Lnet/minecraft/server/WorldMap;IIF)V renderMap
	a (Lnet/minecraft/server/WorldMap;ZZZZ)V renderResultingMap
	b (II)V renderLabels
ddq net/minecraft/client/gui/screens/inventory/CraftingScreen
	k CRAFTING_TABLE_LOCATION
	l RECIPE_BUTTON_LOCATION
	m recipeBookComponent
	n widthTooNarrow
	Y_ ()V recipesUpdated
	a (DDIII)Z hasClickedOutside
	a (FII)V renderBg
	a (IIIIDD)Z isHovering
	a (Lczi;)V lambda$init$0
	a (Lnet/minecraft/server/Slot;IILnet/minecraft/server/InventoryClickType;)V slotClicked
	b (II)V renderLabels
	c ()Ldey; getRecipeBookComponent
net/minecraft/server/CustomFunctionCallbackTimer net/minecraft/world/level/timers/TimerCallback
	a (Ljava/lang/Object;Lnet/minecraft/server/CustomFunctionCallbackTimerQueue;J)V handle
ddp net/minecraft/client/gui/screens/inventory/ContainerScreen
	k CONTAINER_BACKGROUND
	l containerRows
	a (FII)V renderBg
	b (II)V renderLabels
dds net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen
	l CREATIVE_TABS_LOCATION
	m CONTAINER
	n selectedTab
	o scrollOffs
	p scrolling
	q searchBox
	r originalSlots
	s destroyItemSlot
	t listener
	u ignoreTextInput
	v hasClickedOutside
	w visibleTags
	a (DDIII)Z hasClickedOutside
	a (FII)V renderBg
	a (III)Z keyReleased
	a (Lcyc;IZZ)V handleHotbarLoadOrSave
	a (Ljava/lang/String;)V updateVisibleTags
	a (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/MinecraftKey;)Z lambda$updateVisibleTags$1
	a (Ljava/lang/String;Lnet/minecraft/server/MinecraftKey;)Z lambda$updateVisibleTags$0
	a (Lnet/minecraft/server/CreativeModeTab;)V renderTabButton
	a (Lnet/minecraft/server/CreativeModeTab;DD)Z checkTabClicked
	a (Lnet/minecraft/server/CreativeModeTab;II)Z checkTabHovering
	a (Lnet/minecraft/server/Item;Ljava/util/List;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/Tag;)V lambda$renderTooltip$3
	a (Lnet/minecraft/server/Slot;)Z isCreativeSlot
	a (Lnet/minecraft/server/Slot;IILnet/minecraft/server/InventoryClickType;)V slotClicked
	a (Lnet/minecraft/server/Tags;Lnet/minecraft/server/MinecraftKey;)V lambda$updateVisibleTags$2
	b ()V checkEffectRendering
	b (II)V renderLabels
	b (Lnet/minecraft/server/CreativeModeTab;)V selectTab
	c ()I getSelectedTab
	c (DD)Z insideScrollbar
	d ()Lnet/minecraft/server/InventorySubcontainer; access$000
	e ()V refreshSearchResults
	f ()Z canScroll
ddr net/minecraft/client/gui/screens/inventory/CreativeInventoryListener
	a minecraft
	a (Lnet/minecraft/server/Container;II)V setContainerData
	a (Lnet/minecraft/server/Container;ILnet/minecraft/server/ItemStack;)V slotChanged
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/NonNullList;)V refreshContainer
net/minecraft/server/WorldGenFossils net/minecraft/world/level/levelgen/feature/FossilFeature
	a SPINE_1
	aS SPINE_2
	aT SPINE_3
	aU SPINE_4
	aV SPINE_1_COAL
	aW SPINE_2_COAL
	aX SPINE_3_COAL
	aY SPINE_4_COAL
	aZ SKULL_1
	ba SKULL_2
	bb SKULL_3
	bc SKULL_4
	bd SKULL_1_COAL
	be SKULL_2_COAL
	bf SKULL_3_COAL
	bg SKULL_4_COAL
	bh fossils
	bi fossilsCoal
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
ddu net/minecraft/client/gui/screens/inventory/EffectRenderingInventoryScreen
	k doRenderEffects
	a (IILjava/lang/Iterable;)V renderBackgrounds
	b ()V checkEffectRendering
	b (IILjava/lang/Iterable;)V renderIcons
	c ()V renderEffects
	c (IILjava/lang/Iterable;)V renderLabels
ddt net/minecraft/client/gui/screens/inventory/DispenserScreen
	k CONTAINER_LOCATION
	a (FII)V renderBg
	b (II)V renderLabels
ddw net/minecraft/client/gui/screens/inventory/EnchantmentScreen
	k time
	l flip
	m oFlip
	n flipT
	o flipA
	p open
	q oOpen
	r ENCHANTING_TABLE_LOCATION
	s ENCHANTING_BOOK_LOCATION
	t BOOK_MODEL
	u random
	v last
	a (FII)V renderBg
	b ()V tickBook
	b (II)V renderLabels
cts$a com/mojang/blaze3d/audio/OggAudioStream$OutputConcat
	a buffers
	b bufferSize
	c byteCount
	d currentBuffer
	a ()Ljava/nio/ByteBuffer; get
	a (F)V put
	a (Lcts$a;)I access$000
	b ()V createNewBuffer
ddv net/minecraft/client/gui/screens/inventory/EnchantmentNames
	a INSTANCE
	b random
	c words
	a ()Lddv; getInstance
	a (J)V initSeed
	a (Lcyu;I)Ljava/lang/String; getRandomName
net/minecraft/server/WorldGenFeatureStructurePieceType net/minecraft/world/level/levelgen/feature/StructurePieceType
	A STRONGHOLD_PORTAL_ROOM
	B STRONGHOLD_PRISON_HALL
	C STRONGHOLD_RIGHT_TURN
	D STRONGHOLD_ROOM_CROSSING
	E STRONGHOLD_STAIRS_DOWN
	F STRONGHOLD_START
	G STRONGHOLD_STRAIGHT
	H STRONGHOLD_STRAIGHT_STAIRS_DOWN
	I JUNGLE_PYRAMID_PIECE
	J OCEAN_RUIN
	K IGLOO
	L SWAMPLAND_HUT
	M DESERT_PYRAMID_PIECE
	N OCEAN_MONUMENT_BUILDING
	O OCEAN_MONUMENT_CORE_ROOM
	P OCEAN_MONUMENT_DOUBLE_X_ROOM
	Q OCEAN_MONUMENT_DOUBLE_XY_ROOM
	R OCEAN_MONUMENT_DOUBLE_Y_ROOM
	S OCEAN_MONUMENT_DOUBLE_YZ_ROOM
	T OCEAN_MONUMENT_DOUBLE_Z_ROOM
	U OCEAN_MONUMENT_ENTRY_ROOM
	V OCEAN_MONUMENT_PENTHOUSE
	W OCEAN_MONUMENT_SIMPLE_ROOM
	X OCEAN_MONUMENT_SIMPLE_TOP_ROOM
	Y OCEAN_MONUMENT_WING_ROOM
	Z END_CITY_PIECE
	a MINE_SHAFT_CORRIDOR
	aa WOODLAND_MANSION_PIECE
	ab BURIED_TREASURE_PIECE
	ac SHIPWRECK_PIECE
	b MINE_SHAFT_CROSSING
	c MINE_SHAFT_ROOM
	d MINE_SHAFT_STAIRS
	e PILLAGER_OUTPOST
	f VILLAGE
	g NETHER_FORTRESS_BRIDGE_CROSSING
	h NETHER_FORTRESS_BRIDGE_END_FILLER
	i NETHER_FORTRESS_BRIDGE_STRAIGHT
	j NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS
	k NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY
	l NETHER_FORTRESS_CASTLE_ENTRANCE
	m NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING
	n NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN
	o NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR
	p NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN
	q NETHER_FORTRESS_CASTLE_STALK_ROOM
	r NETHER_FORTRESS_MONSTER_THRONE
	s NETHER_FORTRESS_ROOM_CROSSING
	t NETHER_FORTRESS_STAIRS_ROOM
	u NETHER_FORTRESS_START
	v STRONGHOLD_CHEST_CORRIDOR
	w STRONGHOLD_FILLER_CORRIDOR
	x STRONGHOLD_FIVE_CROSSING
	y STRONGHOLD_LEFT_TURN
	z STRONGHOLD_LIBRARY
	a (Lnet/minecraft/server/WorldGenFeatureStructurePieceType;Ljava/lang/String;)Lnet/minecraft/server/WorldGenFeatureStructurePieceType; setPieceId
ddy net/minecraft/client/gui/screens/inventory/GrindstoneScreen
	k GRINDSTONE_LOCATION
	a (FII)V renderBg
	b (II)V renderLabels
net/minecraft/realms/RepeatedNarrator$a net/minecraft/realms/RepeatedNarrator$Params
	a narration
	b rateLimiter
ddx net/minecraft/client/gui/screens/inventory/FurnaceScreen
	l TEXTURE
dz$c net/minecraft/commands/arguments/item/ItemPredicateArgument$TagPredicate
	a tag
	b nbt
	a (Lnet/minecraft/server/ItemStack;)Z test
dql$1 net/minecraft/client/renderer/debug/ChunkDebugRenderer$1
net/minecraft/server/LootContextParameterSet net/minecraft/world/level/storage/loot/parameters/LootContextParamSet
	a required
	b all
	a ()Ljava/util/Set; getRequired
	a (Lnet/minecraft/server/LootCollector;Lnet/minecraft/server/LootItemUser;)V validateUser
	a (Lnet/minecraft/server/LootContextParameter;)Z isAllowed
	b ()Ljava/util/Set; getAllowed
	b (Lnet/minecraft/server/LootContextParameter;)Ljava/lang/String; lambda$toString$0
	c ()Lcqx$a; builder
dz$b net/minecraft/commands/arguments/item/ItemPredicateArgument$Result
ddz net/minecraft/client/gui/screens/inventory/HopperScreen
	k HOPPER_LOCATION
	a (FII)V renderBg
	b (II)V renderLabels
dz$a net/minecraft/commands/arguments/item/ItemPredicateArgument$ItemPredicate
	a item
	b nbt
	a (Lnet/minecraft/server/ItemStack;)Z test
cis$q net/minecraft/world/level/levelgen/structure/StrongholdPieces$Turn
net/minecraft/server/PortalTravelAgent$ChunkCoordinatesPortal net/minecraft/world/level/PortalForcer$PortalPosition
	a pos
	b lastUsed
net/minecraft/server/ChunkStatus net/minecraft/world/level/chunk/ChunkStatus
	n PRE_FEATURES
	o POST_FEATURES
	p PASSTHROUGH_LOAD_TASK
	q STATUS_BY_RANGE
	r RANGE_BY_STATUS
	s name
	t index
	u parent
	v generationTask
	w loadingTask
	x range
	y chunkType
	z heightmapsAfter
	a ()Ljava/util/List; getStatusList
	a (I)Lnet/minecraft/server/ChunkStatus; getStatus
	a (Lit/unimi/dsi/fastutil/ints/IntArrayList;)V lambda$static$16
	a (Ljava/lang/String;)Lnet/minecraft/server/ChunkStatus; byName
	a (Ljava/lang/String;Lnet/minecraft/server/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/server/ChunkStatus$Type;Lbxm$b;)Lnet/minecraft/server/ChunkStatus; register
	a (Ljava/lang/String;Lnet/minecraft/server/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/server/ChunkStatus$Type;Lbxm$b;Lbxm$c;)Lnet/minecraft/server/ChunkStatus; register
	a (Ljava/lang/String;Lnet/minecraft/server/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/server/ChunkStatus$Type;Lbxm$d;)Lnet/minecraft/server/ChunkStatus; registerSimple
	a (Lnet/minecraft/server/ChunkStatus;)I getDistance
	a (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/IChunkAccess;)Z isLighted
	a (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/LightEngineThreaded;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lightChunk
	a (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$14
	a (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$15
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$13
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; generate
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; load
	b ()I maxDistance
	b (Lnet/minecraft/server/ChunkStatus;)Z isOrAfter
	b (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$10
	b (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$11
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$12
	c ()I getIndex
	c (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$9
	c (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$8
	d ()Ljava/lang/String; getName
	d (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$2
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$7
	e ()Lnet/minecraft/server/ChunkStatus; getParent
	e (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$6
	f ()I getRange
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$5
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$4
	getType ()Lnet/minecraft/server/ChunkStatus$Type; getChunkType
	h ()Ljava/util/EnumSet; heightmapsAfter
	h (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$3
	i (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$1
net/minecraft/server/EnumProtocol net/minecraft/network/ConnectionProtocol
	e LOOKUP
	f PROTOCOL_BY_PACKET
	g id
	h packets
	i $VALUES
	a ()I getId
	a (I)Lnet/minecraft/server/EnumProtocol; getById
	a (Lnet/minecraft/server/EnumProtocolDirection;I)Lnet/minecraft/server/Packet; createPacket
	a (Lnet/minecraft/server/EnumProtocolDirection;Ljava/lang/Class;)Lnet/minecraft/server/EnumProtocol; addPacket
	a (Lnet/minecraft/server/EnumProtocolDirection;Lnet/minecraft/server/Packet;)Ljava/lang/Integer; getPacketId
	a (Lnet/minecraft/server/Packet;)Lnet/minecraft/server/EnumProtocol; getProtocolForPacket
deb net/minecraft/client/gui/screens/inventory/InventoryScreen
	l RECIPE_BUTTON_LOCATION
	m xMouse
	n yMouse
	o recipeBookComponent
	p recipeBookComponentInitialized
	q widthTooNarrow
	r buttonClicked
	Y_ ()V recipesUpdated
	a (DDIII)Z hasClickedOutside
	a (FII)V renderBg
	a (IIIFFLnet/minecraft/server/EntityLiving;)V renderPlayerModel
	a (IIIIDD)Z isHovering
	a (Lczi;)V lambda$init$0
	a (Lnet/minecraft/server/Slot;IILnet/minecraft/server/InventoryClickType;)V slotClicked
	b (II)V renderLabels
	c ()Ldey; getRecipeBookComponent
net/minecraft/server/PersistentRaid net/minecraft/world/entity/raid/Raids
	a raidMap
	b level
	c nextAvailableID
	d tick
	a ()V tick
	a (I)Lnet/minecraft/server/Raid; get
	a (Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/Raid; getNearbyRaid
	a (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/Raid; createOrExtendRaid
	a (Lnet/minecraft/server/EntityRaider;Lnet/minecraft/server/Raid;)Z canJoinRaid
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/WorldProvider;)Ljava/lang/String; getFileId
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Raid; getOrCreateRaid
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	e ()I getUniqueId
net/minecraft/server/EntityPanda$Gene net/minecraft/world/entity/animal/Panda$Gene
	h BY_ID
	i id
	j name
	k isRecessive
	l $VALUES
	a ()I getId
	a (I)Lnet/minecraft/server/EntityPanda$Gene; byId
	a (Ljava/lang/String;)Lnet/minecraft/server/EntityPanda$Gene; byName
	a (Ljava/util/Random;)Lnet/minecraft/server/EntityPanda$Gene; getRandom
	a (Lnet/minecraft/server/EntityPanda$Gene;Lnet/minecraft/server/EntityPanda$Gene;)Lnet/minecraft/server/EntityPanda$Gene; access$000
	b ()Ljava/lang/String; getName
	b (I)[Lnet/minecraft/server/EntityPanda$Gene; lambda$static$0
	b (Lnet/minecraft/server/EntityPanda$Gene;Lnet/minecraft/server/EntityPanda$Gene;)Lnet/minecraft/server/EntityPanda$Gene; getVariantFromGenes
dea net/minecraft/client/gui/screens/inventory/HorseInventoryScreen
	k HORSE_INVENTORY_LOCATION
	l horse
	m xMouse
	n yMouse
	a (FII)V renderBg
	b (II)V renderLabels
ded net/minecraft/client/gui/screens/inventory/LecternScreen
	c menu
	d listener
	a ()Lnet/minecraft/server/Container; getMenu
	a (Lczi;)V lambda$createMenuControls$1
	a (Lded;)V access$000
	b ()V createMenuControls
	b (I)Z forcePage
	b (Lczi;)V lambda$createMenuControls$0
	b (Lded;)V access$100
	c (I)V sendButtonClick
	d ()V pageBack
	e ()V pageForward
	f ()Lnet/minecraft/server/ContainerLectern; getMenu
	g ()V bookChanged
	h ()V pageChanged
dec net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen
	a jigsawEntity
	b attachementTypeEdit
	c targetPoolEdit
	d finalStateEdit
	e doneButton
	a ()V updateValidity
	a (Lczi;)V lambda$init$1
	a (Ljava/lang/String;)V lambda$init$3
	b ()V onDone
	b (Lczi;)V lambda$init$0
	b (Ljava/lang/String;)V lambda$init$2
	c ()V onCancel
	d ()V sendToServer
net/minecraft/server/WorldGenFeatureRandom net/minecraft/world/level/levelgen/feature/RandomRandomFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRandomConfiguration;)Z place
def net/minecraft/client/gui/screens/inventory/MenuAccess
	a ()Lnet/minecraft/server/Container; getMenu
dee net/minecraft/client/gui/screens/inventory/LoomScreen
	A loadNextTextureIndex
	k BG_LOCATION
	l TOTAL_PATTERN_ROWS
	m PATTERN_BASE_COLOR
	n PATTERN_OVERLAY_COLOR
	o PATTERN_COLORS
	p resultBannerTexture
	q bannerStack
	r dyeStack
	s patternStack
	t patternTextures
	u displayPatterns
	v displaySpecialPattern
	w hasMaxPatterns
	x scrollOffs
	y scrolling
	z startIndex
	a (DDIII)Z hasClickedOutside
	a (FII)V renderBg
	b ()V containerChanged
	b (II)V renderLabels
dbz$a$a net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList$Entry
	a this$1
	b language
	a ()V select
	a (Ldbz$a$a;)Ldxy; access$100
net/minecraft/server/ArgumentDimension net/minecraft/commands/arguments/DimensionTypeArgument
	a ERROR_INVALID_VALUE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentDimension; dimension
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/DimensionManager; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/DimensionManager; getDimension
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lnet/minecraft/server/DimensionManager;)Ljava/lang/String; lambda$static$0
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$parse$2
deh net/minecraft/client/gui/screens/inventory/MinecartCommandBlockEditScreen
	m commandBlock
	a ()Lnet/minecraft/server/CommandBlockListenerAbstract; getCommandBlock
	a (Lnet/minecraft/server/CommandBlockListenerAbstract;)V populateAndSendPacket
	b ()I getPreviousY
deg net/minecraft/client/gui/screens/inventory/MerchantScreen
	k VILLAGER_LOCATION
	l shopItem
	m tradeOfferButtons
	n scrollOff
	o isDragging
	a (FII)V renderBg
	a (I)Z canScroll
	a (IILnet/minecraft/server/MerchantRecipe;)V renderProgressBar
	a (IILnet/minecraft/server/MerchantRecipeList;)V renderScroller
	a (Lczi;)V lambda$init$0
	a (Ldeg;)I access$000
	a (Ldeg;Lnet/minecraft/server/ItemStack;II)V access$100
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;II)V renderAndDecorateCostA
	a (Lnet/minecraft/server/MerchantRecipe;II)V renderButtonArrows
	b ()V postButtonClick
	b (II)V renderLabels
	b (Ldeg;Lnet/minecraft/server/ItemStack;II)V access$200
	c (Ldeg;Lnet/minecraft/server/ItemStack;II)V access$300
dej net/minecraft/client/gui/screens/inventory/ShulkerBoxScreen
	k CONTAINER_TEXTURE
	a (FII)V renderBg
	b (II)V renderLabels
dei net/minecraft/client/gui/screens/inventory/PageButton
	a isForward
	b playTurnSound
del net/minecraft/client/gui/screens/inventory/SmokerScreen
	l TEXTURE
net/minecraft/server/EntityLlama net/minecraft/world/entity/animal/horse/Llama
	bI DATA_STRENGTH_ID
	bJ DATA_SWAG_ID
	bK DATA_VARIANT_ID
	bL didSpit
	bM caravanHead
	bN caravanTail
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/EntityLlama;)V joinCaravan
	a (Lnet/minecraft/server/EntityLlama;Z)V access$200
	a (Lnet/minecraft/server/EnumColor;)V setSwag
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/IInventory;)V containerChanged
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aP ()D getRideHeight
	b (FF)V causeFallDamage
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityLlama; getBreedOffspring
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Z handleEating
	b (Lnet/minecraft/server/EntityLlama;)Z access$100
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cW ()Z isImmobile
	cl ()V registerAttributes
	dD ()Z canBeControlledByRider
	dU ()D followLeashSpeed
	dW ()I getInventorySize
	dX ()Lnet/minecraft/server/SoundEffect; getAngrySound
	dY ()V playChestEquipsSound
	dZ ()I getInventoryColumns
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eA ()Z wearsArmor
	eB ()Z isTraderLlama
	eE ()Lnet/minecraft/server/EnumColor; getSwag
	eF ()Lnet/minecraft/server/EntityLlama; makeBabyLlama
	eG ()V leaveCaravan
	eH ()Z hasCaravanTail
	eI ()Z inCaravan
	eJ ()Lnet/minecraft/server/EntityLlama; getCaravanHead
	eK ()V setRandomStrength
	en ()V updateEquipment
	ep ()Z canBeSaddled
	er ()I getMaxTemper
	es ()V followMommy
	et ()Z canEatGrass
	eu ()V makeMad
	h (Lnet/minecraft/server/EntityLiving;)V spit
	j (Lnet/minecraft/server/ItemStack;)Z isArmor
	k (Lnet/minecraft/server/Entity;)V positionRider
	k (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumColor; getDyeColor
	n ()V registerGoals
	u_ ()V defineSynchedData
	z (Z)V setDidSpit
dek net/minecraft/client/gui/screens/inventory/SignEditScreen
	a sign
	b frame
	c line
	d signField
	a ()V onDone
	a (Lczi;)V lambda$init$0
	a (Ljava/lang/String;)V lambda$init$2
	b ()Ljava/lang/String; lambda$init$1
den net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen
	A detectButton
	B entitiesButton
	C mirrorButton
	D toggleAirButton
	E toggleBoundingBox
	F decimalFormat
	a structure
	b initialMirror
	c initialRotation
	d initialMode
	e initialEntityIgnoring
	f initialShowAir
	g initialShowBoundingBox
	h nameEdit
	i posXEdit
	j posYEdit
	k posZEdit
	l sizeXEdit
	m sizeYEdit
	n sizeZEdit
	o integrityEdit
	p seedEdit
	q dataEdit
	r doneButton
	s cancelButton
	t saveButton
	u loadButton
	v rot0Button
	w rot90Button
	x rot180Button
	y rot270Button
	z modeButton
	a ()V onDone
	a (Lczi;)V lambda$init$13
	a (Lden;Ljava/lang/String;CI)Z access$000
	a (Ljava/lang/String;)J parseSeed
	a (Lnet/minecraft/server/TileEntityStructure$UpdateType;)Z sendToServer
	b ()V onCancel
	b (Lczi;)V lambda$init$12
	b (Ljava/lang/String;)F parseIntegrity
	c ()V updateEntitiesButton
	c (Lczi;)V lambda$init$11
	c (Ljava/lang/String;)I parseCoordinate
	d ()V updateToggleAirButton
	d (Lczi;)V lambda$init$10
	e ()V updateToggleBoundingBox
	e (Lczi;)V lambda$init$9
	f ()V updateMirrorButton
	f (Lczi;)V lambda$init$8
	g ()V updateDirectionButtons
	g (Lczi;)V lambda$init$7
	h ()V updateMode
	h (Lczi;)V lambda$init$6
	i (Lczi;)V lambda$init$5
	j (Lczi;)V lambda$init$4
	k (Lczi;)V lambda$init$3
	l (Lczi;)V lambda$init$2
	m (Lczi;)V lambda$init$1
	n (Lczi;)V lambda$init$0
dem net/minecraft/client/gui/screens/inventory/StonecutterScreen
	k BG_LOCATION
	l scrollOffs
	m scrolling
	n startIndex
	o displayRecipes
	a (FII)V renderBg
	a (IIIII)V renderButtons
	b ()I getOffscreenRows
	b (II)V renderLabels
	b (III)V renderRecipes
	c ()Z isScrollBarActive
	d ()V containerChanged
dep net/minecraft/client/gui/screens/mco/package-info
deo net/minecraft/client/gui/screens/inventory/package-info
der net/minecraft/client/gui/screens/multiplayer/ServerSelectionList
	a LOGGER
	b THREAD_POOL
	c ICON_MISSING
	d ICON_OVERLAY_LOCATION
	e screen
	f onlineServers
	g lanHeader
	h networkServers
	a ()Ljava/util/concurrent/ThreadPoolExecutor; access$100
	a (Lder$a;)V setSelected
	a (Lder;)I access$500
	a (Lder;I)I access$600
	a (Ldkj;)V updateOnlineServers
	a (Ljava/util/List;)V updateNetworkServers
	b ()Lnet/minecraft/server/MinecraftKey; access$200
	c ()Lnet/minecraft/server/MinecraftKey; access$300
	d ()Lorg/apache/logging/log4j/Logger; access$400
	e ()V refreshEntries
deq net/minecraft/client/gui/screens/multiplayer/JoinMultiplayerScreen
	a serverSelectionList
	b LOGGER
	c pinger
	d lastScreen
	e servers
	f editButton
	g selectButton
	h deleteButton
	i toolTip
	j editingServer
	k lanServerList
	l lanServerDetector
	m initedOnce
	a ()V joinSelectedServer
	a (Lczi;)V lambda$init$6
	a (Lder$a;)V setSelected
	a (Ldki;)V join
	a (Ljava/lang/String;)V setToolTip
	a (Z)V deleteCallback
	b ()V onSelectedChange
	b (Lczi;)V lambda$init$5
	b (Z)V editServerCallback
	c ()Ldkk; getPinger
	c (Lczi;)V lambda$init$4
	c (Z)V addServerCallback
	d ()Ldkj; getServers
	d (Lczi;)V lambda$init$3
	d (Z)V directJoinCallback
	e ()V refreshServerList
	e (Lczi;)V lambda$init$2
	f (Lczi;)V lambda$init$1
	g (Lczi;)V lambda$init$0
det net/minecraft/client/gui/screens/package-info
des net/minecraft/client/gui/screens/multiplayer/package-info
dev net/minecraft/client/gui/screens/recipebook/BlastingRecipeBookComponent
	a (Z)V setFilteringCraftable
	b ()Z getFilteringCraftable
	c (Z)V setGuiOpen
	d ()Z isGuiOpen
	g ()Ljava/lang/String; getRecipeFilterName
	h ()Ljava/util/Set; getFuelItems
zi$a net/minecraft/tags/TagManager$Preparations
	a blocks
	b items
	c fluids
	d entityTypes
net/minecraft/server/PacketPlayInEntityNBTQuery net/minecraft/network/protocol/game/ServerboundEntityTagQuery
	a transactionId
	b entityId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getTransactionId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getEntityId
deu net/minecraft/client/gui/screens/recipebook/AbstractFurnaceRecipeBookComponent
	i iterator
	j fuels
	k fuelSlot
	l fuel
	m time
	a ()Z updateFiltering
	a (IIZF)V renderGhostRecipe
	a (Lnet/minecraft/server/IRecipe;Ljava/util/List;)V setupGhostRecipe
	a (Lnet/minecraft/server/Slot;)V slotClicked
	a (Z)V setFilteringCraftable
	b ()Z getFilteringCraftable
	b (Z)V setVisible
	c ()Z isVisible
	c (Z)V setGuiOpen
	d ()Z isGuiOpen
	e ()V initFilterButtonTextures
	f ()Ljava/lang/String; getFilterButtonTooltip
	g ()Ljava/lang/String; getRecipeFilterName
	h ()Ljava/util/Set; getFuelItems
	n ()Lnet/minecraft/server/Item; getFuel
net/minecraft/server/TextureType net/minecraft/world/level/BlockLayer
	e name
	f $VALUES
dex net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent
	a RECIPE_BOOK_LOCATION
	b recipeButtons
	c isVisible
	d x
	e y
	f minecraft
	g collection
	h lastRecipeClicked
	i time
	j isFurnaceMenu
	a ()Ldfc; getRecipeCollection
	a (IIIIII)V nineInchSprite
	a (Lcyc;Ldfc;IIIIF)V init
	a (Ldex;)Lcyc; access$200
	a (Z)V setVisible
	b ()Lnet/minecraft/server/IRecipe; getLastRecipeClicked
	b (Ldex;)Z access$300
	c ()Z isVisible
	c (Ldex;)F access$400
	d ()Lnet/minecraft/server/MinecraftKey; access$100
net/minecraft/server/WorldGenFeatureConfigurationChance net/minecraft/world/level/levelgen/feature/ProbabilityFeatureConfiguration
	b probability
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureConfigurationChance; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
dew net/minecraft/client/gui/screens/recipebook/GhostRecipe
	a recipe
	b ingredients
	c time
	a ()V clear
	a (I)Ldew$a; get
	a (Lcyc;IIZF)V render
	a (Ldew;)F access$000
	a (Lnet/minecraft/server/IRecipe;)V setRecipe
	a (Lnet/minecraft/server/RecipeItemStack;II)V addIngredient
	b ()I size
	c ()Lnet/minecraft/server/IRecipe; getRecipe
net/minecraft/server/EntityHorse net/minecraft/world/entity/animal/horse/Horse
	bI ARMOR_MODIFIER_UUID
	bJ DATA_ID_TYPE_VARIANT
	bK VARIANT_TEXTURES
	bL VARIANT_HASHES
	bM MARKING_TEXTURES
	bN MARKING_HASHES
	bO layerTextureHashName
	bP layerTextureLayers
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/IInventory;)V containerChanged
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/SoundEffectType;)V playGallopSound
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	dV ()Lnet/minecraft/server/ItemStack; getArmor
	dX ()Lnet/minecraft/server/SoundEffect; getAngrySound
	dZ ()Ljava/lang/String; getLayeredTextureHashName
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eA ()Z wearsArmor
	eB ()[Ljava/lang/String; getLayeredTextureLayers
	eC ()V clearLayeredTextureInfo
	eD ()V rebuildLayeredTextureInfo
	en ()V updateEquipment
	h ()V tick
	j (Lnet/minecraft/server/ItemStack;)Z isArmor
	k (Lnet/minecraft/server/ItemStack;)V setArmor
	l (Lnet/minecraft/server/ItemStack;)V setArmorEquipment
	u_ ()V defineSynchedData
dez net/minecraft/client/gui/screens/recipebook/RecipeBookPage
	a buttons
	b hoveredButton
	c overlay
	d minecraft
	e showListeners
	f recipeCollections
	g forwardButton
	h backButton
	i totalPages
	j currentPage
	k recipeBook
	l lastClickedRecipe
	m lastClickedRecipeCollection
	a ()Lnet/minecraft/server/IRecipe; getLastClickedRecipe
	a (DDIIIII)Z mouseClicked
	a (II)V renderTooltip
	a (IIIIF)V render
	a (Lcyc;II)V init
	a (Ldey;)V addListener
	a (Ljava/util/List;)V recipesShown
	a (Ljava/util/List;Z)V updateCollections
	b ()Ldfc; getLastClickedRecipeCollection
	c ()V setInvisible
	d ()Lcyc; getMinecraft
	e ()Lnet/minecraft/server/RecipeBook; getRecipeBook
	f ()V updateButtonsForPage
	g ()V updateArrowButtons
net/minecraft/server/PacketPlayInChat net/minecraft/network/protocol/game/ServerboundChatPacket
	a message
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Ljava/lang/String; getMessage
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
dey net/minecraft/client/gui/screens/recipebook/RecipeBookComponent
	a RECIPE_BOOK_LOCATION
	b ghostRecipe
	c filterButton
	d menu
	e minecraft
	f book
	g recipeBookPage
	h stackedContents
	i xOffset
	j width
	k height
	l tabButtons
	m selectedTab
	n searchBox
	o lastSearch
	p timesInventoryChanged
	q ignoreTextInput
	a ()Z updateFiltering
	a (DDIIIII)Z hasClickedOutside
	a (III)Z keyReleased
	a (IIII)V renderTooltip
	a (IILcyc;ZLnet/minecraft/server/ContainerRecipeBook;)V init
	a (IIZF)V renderGhostRecipe
	a (Ldfa;)Z lambda$initVisuals$0
	a (Ldfc;)Z lambda$updateCollections$5
	a (Lit/unimi/dsi/fastutil/objects/ObjectSet;Ldfc;)Z lambda$updateCollections$4
	a (Ljava/lang/String;)V pirateSpeechForThePeople
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	a (Ljava/util/List;)V recipesShown
	a (Lnet/minecraft/server/IRecipe;Ljava/util/List;)V setupGhostRecipe
	a (Lnet/minecraft/server/Slot;)V slotClicked
	a (Z)V updateCollections
	a (ZII)I updateScreenPosition
	b ()V updateTabs
	b (IIII)V renderGhostRecipeTooltip
	b (Ldfc;)Z lambda$updateCollections$3
	b (Z)V setVisible
	c ()Z isVisible
	c (Ldfc;)Z lambda$updateCollections$2
	d ()V updateStackedContents
	d (Ldfc;)V lambda$updateCollections$1
	d (Z)V initVisuals
	e ()V initFilterButtonTextures
	f ()Ljava/lang/String; getFilterButtonTooltip
	g ()V checkSearchStringUpdate
	h ()Z isOffsetNextToMainGUI
	i ()V removed
	j ()V toggleVisibility
	k ()V tick
	l ()V recipesUpdated
	m ()V sendUpdateSettings
net/minecraft/server/PlayerChunkMap net/minecraft/server/level/ChunkMap
	A unloadQueue
	GOLDEN_TICKET MAX_CHUNK_DISTANCE
	chunkDistanceManager distanceManager
	chunkGenerator generator
	d LOGGER
	definedStructureManager structureManager
	executor mainThreadExecutor
	loadedChunks entitiesInLevel
	m overworldDataStorage
	mailboxMain mainThreadMailbox
	mailboxWorldGen worldgenMailbox
	n poiManager
	pendingUnload pendingUnloads
	q queueSorter
	trackedEntities entityMap
	unloadQueue toDrop
	updatingChunks updatingChunkMap
	updatingChunksModified modified
	v tickingGenerated
	visibleChunks visibleChunkMap
	world level
	worldLoadListener progressListener
	x storageFolder
	a ()Lnet/minecraft/server/LightEngineThreaded; getLightEngine
	a (IIILjava/util/List;)Lcom/mojang/datafixers/util/Either; lambda$getChunkRangeFuture$1
	a (JILnet/minecraft/server/PlayerChunk;I)Lnet/minecraft/server/PlayerChunk; updateChunkScheduling
	a (JLnet/minecraft/server/PlayerChunk;)V scheduleUnload
	a (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$unpackTicks$36
	a (Ljava/io/Writer;)V dumpChunks
	a (Ljava/util/List;)Lcom/mojang/datafixers/util/Either; lambda$null$28
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String; printFuture
	a (Lnet/minecraft/server/Chunk;)Ljava/util/concurrent/CompletableFuture; packTicks
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/lang/String; getChunkDebugData
	a (Lnet/minecraft/server/ChunkCoordIntPair;II)I checkerboardDistance
	a (Lnet/minecraft/server/ChunkCoordIntPair;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture; getChunkRangeFuture
	a (Lnet/minecraft/server/ChunkCoordIntPair;I[Lnet/minecraft/server/Packet;Lnet/minecraft/server/EntityPlayer;)V lambda$setViewDistance$38
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lcom/mojang/datafixers/util/Either;)V lambda$postProcess$33
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/Chunk;)Lcom/mojang/datafixers/util/Either; lambda$null$32
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/Entity;)D euclideanDistanceSquared
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/EntityPlayer;)Z lambda$noPlayersCloseForSpawning$44
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/EntityPlayer;Z)I access$700
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/PlayerChunk$Failure;)Ljava/util/concurrent/CompletableFuture; lambda$null$18
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/PlayerChunk;Lnet/minecraft/server/ChunkStatus;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletionStage; lambda$scheduleChunkGeneration$19
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/PlayerChunk;Lnet/minecraft/server/ChunkStatus;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; lambda$null$17
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)Ljava/util/stream/Stream; getPlayers
	a (Lnet/minecraft/server/ChunkCoordIntPair;ZLnet/minecraft/server/EntityPlayer;)Z lambda$getPlayers$45
	a (Lnet/minecraft/server/ChunkStatus;I)Lnet/minecraft/server/ChunkStatus; getDependencyStatus
	a (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/PlayerChunk;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletionStage; lambda$schedule$13
	a (Lnet/minecraft/server/EntityPlayer;Z)V updatePlayerStatus
	a (Lnet/minecraft/server/EntityPlayer;[Lnet/minecraft/server/Packet;Lnet/minecraft/server/Chunk;)V playerLoadedChunk
	a (Lnet/minecraft/server/PlayerChunk$Failure;)Ljava/lang/String; lambda$printFuture$43
	a (Lnet/minecraft/server/PlayerChunk;)Ljava/util/concurrent/CompletableFuture; postProcess
	a (Lnet/minecraft/server/PlayerChunk;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$protoChunkToFullChunk$25
	a (Lnet/minecraft/server/PlayerChunk;Ljava/lang/Runnable;)V lambda$unpackTicks$37
	a (Lnet/minecraft/server/PlayerChunk;Ljava/lang/Void;Ljava/lang/Throwable;)V lambda$scheduleUnload$11
	a (Lnet/minecraft/server/PlayerChunk;Ljava/util/concurrent/CompletableFuture;JLnet/minecraft/server/IChunkAccess;)V lambda$scheduleUnload$10
	a (Lnet/minecraft/server/PlayerChunk;Lnet/minecraft/server/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; schedule
	a (Lnet/minecraft/server/PlayerChunk;Lnet/minecraft/server/IChunkAccess;)Lnet/minecraft/server/IChunkAccess; lambda$null$24
	a (Lnet/minecraft/server/PlayerChunkMap;)Lit/unimi/dsi/fastutil/longs/LongSet; access$300
	a (Lnet/minecraft/server/PlayerChunkMap;JILnet/minecraft/server/PlayerChunk;I)Lnet/minecraft/server/PlayerChunk; access$400
	a (Lorg/apache/commons/lang3/mutable/MutableBoolean;Lnet/minecraft/server/IChunkAccess;)V lambda$saveAllChunks$7
	a ([Lnet/minecraft/server/Packet;Lnet/minecraft/server/Chunk;Lnet/minecraft/server/EntityPlayer;)V lambda$null$31
	b ()Z promoteChunkMap
	b (I)Lnet/minecraft/server/ChunkStatus; lambda$postProcess$27
	b (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$postProcess$29
	b (Ljava/util/List;)Lnet/minecraft/server/Chunk; lambda$null$3
	b (Ljava/util/function/BooleanSupplier;)V processUnloads
	b (Lnet/minecraft/server/Chunk;)V lambda$packTicks$46
	b (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; getEntityTickingRangeFuture
	b (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/Entity;)I checkerboardDistance
	b (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/EntityPlayer;Z)I checkerboardDistance
	b (Lnet/minecraft/server/ChunkStatus;I)Lnet/minecraft/server/ChunkStatus; lambda$scheduleChunkGeneration$15
	b (Lnet/minecraft/server/EntityPlayer;)Z skipPlayer
	b (Lnet/minecraft/server/IChunkAccess;)Ljava/util/Optional; lambda$dumpChunks$39
	b (Lnet/minecraft/server/PlayerChunk;)Ljava/util/concurrent/CompletableFuture; unpackTicks
	b (Lnet/minecraft/server/PlayerChunk;Ljava/lang/Runnable;)V lambda$postProcess$34
	b (Lnet/minecraft/server/PlayerChunk;Lnet/minecraft/server/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; scheduleChunkGeneration
	b (Lnet/minecraft/server/PlayerChunk;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$null$16
	b (Lnet/minecraft/server/PlayerChunkMap;)Lnet/minecraft/server/WorldServer; access$500
	broadcastIncludingSelf (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Packet;)V broadcastAndSend
	c ()I getTickingGenerated
	c (I)Lnet/minecraft/server/ChunkStatus; lambda$getEntityTickingRangeFuture$2
	c (J)Ljava/util/function/IntSupplier; getChunkQueueLevel
	c (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$getEntityTickingRangeFuture$4
	c (Lnet/minecraft/server/Chunk;)Ljava/lang/String; lambda$printFuture$42
	c (Lnet/minecraft/server/ChunkCoordIntPair;)V releaseLightTicket
	c (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/SectionPosition; updatePlayerPos
	c (Lnet/minecraft/server/IChunkAccess;)Lnet/minecraft/server/Chunk; lambda$null$35
	c (Lnet/minecraft/server/PlayerChunk;)Ljava/util/concurrent/CompletableFuture; protoChunkToFullChunk
	c (Lnet/minecraft/server/PlayerChunk;Ljava/lang/Runnable;)V lambda$postProcess$30
	c (Lnet/minecraft/server/PlayerChunk;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$null$12
	c (Lnet/minecraft/server/PlayerChunkMap;)I access$600
	d ()I size
	d (J)I lambda$getChunkQueueLevel$0
	d (Lnet/minecraft/server/Chunk;)Ljava/lang/Integer; lambda$dumpChunks$41
	d (Lnet/minecraft/server/IChunkAccess;)Z lambda$saveAllChunks$6
	d (Lnet/minecraft/server/PlayerChunk;)Lnet/minecraft/server/PlayerChunk$State; lambda$null$23
	d (Lnet/minecraft/server/PlayerChunk;Ljava/lang/Runnable;)V lambda$protoChunkToFullChunk$26
	e ()Luw$a; getDistanceManager
	e (Lnet/minecraft/server/Chunk;)Ljava/lang/Integer; lambda$dumpChunks$40
	e (Lnet/minecraft/server/PlayerChunk;)V lambda$saveAllChunks$9
	e (Lnet/minecraft/server/PlayerChunk;Ljava/lang/Runnable;)V lambda$scheduleChunkGeneration$20
	f ()Ljava/lang/Iterable; getChunks
	f (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; scheduleChunkLoad
	f (Lnet/minecraft/server/PlayerChunk;)Lnet/minecraft/server/IChunkAccess; lambda$saveAllChunks$5
	g ()V tick
	getUpdatingChunk (J)Lnet/minecraft/server/PlayerChunk; getUpdatingChunkIfPresent
	getVisibleChunk (J)Lnet/minecraft/server/PlayerChunk; getVisibleChunkIfPresent
	h ()Lnet/minecraft/server/VillagePlace; getPoiManager
	h (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/lang/String; lambda$releaseLightTicket$22
	i ()Z lambda$saveAllChunks$8
	i (Lnet/minecraft/server/ChunkCoordIntPair;)V lambda$releaseLightTicket$21
	isOutsideOfRange (Lnet/minecraft/server/ChunkCoordIntPair;)Z noPlayersCloseForSpawning
	j (Lnet/minecraft/server/ChunkCoordIntPair;)Lcom/mojang/datafixers/util/Either; lambda$scheduleChunkLoad$14
	movePlayer (Lnet/minecraft/server/EntityPlayer;)V move
	readChunkData (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/NBTTagCompound; readChunk
	save (Z)V saveAllChunks
	saveChunk (Lnet/minecraft/server/IChunkAccess;)Z save
	sendChunk (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ChunkCoordIntPair;[Lnet/minecraft/server/Packet;ZZ)V updateChunkTracking
	unloadChunks (Ljava/util/function/BooleanSupplier;)V tick
dfa net/minecraft/client/gui/screens/recipebook/RecipeBookTabButton
	g category
	h animationTime
	a (Lcxr;)Z updateVisibility
	a (Lcyc;)V startAnimation
	a (Ldsv;)V renderIcon
	b ()Lcyj; getCategory
net/minecraft/server/PathfinderGoalPerch net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal
	a entity
	b owner
	c isSittingOnShoulder
	C_ ()Z isInterruptable
	a ()Z canUse
	c ()V start
	e ()V tick
net/minecraft/server/RegionFile$ChunkBuffer net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer
	a this$0
	b pos
dfc net/minecraft/client/gui/screens/recipebook/RecipeCollection
	a recipes
	b craftable
	c fitsDimensions
	d known
	e singleResultItem
	a ()Z hasKnownRecipes
	a (Lnet/minecraft/server/AutoRecipeStackManager;IILnet/minecraft/server/RecipeBook;)V canCraft
	a (Lnet/minecraft/server/IRecipe;)Z isCraftable
	a (Lnet/minecraft/server/RecipeBook;)V updateKnownRecipes
	a (Z)Ljava/util/List; getRecipes
	b ()Z hasCraftable
	b (Lnet/minecraft/server/IRecipe;)V add
	b (Z)Ljava/util/List; getDisplayRecipes
	c ()Z hasFitting
	d ()Ljava/util/List; getRecipes
	e ()Z hasSingleResultItem
dfb net/minecraft/client/gui/screens/recipebook/RecipeButton
	a RECIPE_BOOK_LOCATION
	b menu
	c book
	d collection
	e time
	f animationTime
	g currentIndex
	a ()Ldfc; getCollection
	a (II)V setPosition
	a (Ldcl;)Ljava/util/List; getTooltipText
	a (Ldfc;Ldez;)V init
	b ()Z isOnlyOption
	c ()Lnet/minecraft/server/IRecipe; getRecipe
	d ()Ljava/util/List; getOrderedRecipes
dfe net/minecraft/client/gui/screens/recipebook/RecipeUpdateListener
	Y_ ()V recipesUpdated
	c ()Ldey; getRecipeBookComponent
dfd net/minecraft/client/gui/screens/recipebook/RecipeShownListener
	a (Ljava/util/List;)V recipesShown
dfg net/minecraft/client/gui/screens/recipebook/SmokingRecipeBookComponent
	a (Z)V setFilteringCraftable
	b ()Z getFilteringCraftable
	c (Z)V setGuiOpen
	d ()Z isGuiOpen
	g ()Ljava/lang/String; getRecipeFilterName
	h ()Ljava/util/Set; getFuelItems
dff net/minecraft/client/gui/screens/recipebook/SmeltingRecipeBookComponent
	a (Z)V setFilteringCraftable
	b ()Z getFilteringCraftable
	c (Z)V setGuiOpen
	d ()Z isGuiOpen
	g ()Ljava/lang/String; getRecipeFilterName
	h ()Ljava/util/Set; getFuelItems
dfi net/minecraft/client/gui/screens/resourcepacks/ResourcePackSelectScreen
	a parentScreen
	b availableResourcePackList
	c selectedResourcePackList
	d changed
	a ()V setChanged
	a (Lczi;)V lambda$init$1
	a (Ldfl$a;)V select
	b (Lczi;)V lambda$init$0
	b (Ldfl$a;)V deselect
	c (Ldfl$a;)Z isSelected
dfh net/minecraft/client/gui/screens/recipebook/package-info
dfk net/minecraft/client/gui/screens/resourcepacks/lists/AvailableResourcePackList
dfj net/minecraft/client/gui/screens/resourcepacks/entries/package-info
cwj$1 com/mojang/realmsclient/gui/screens/RealmsCreateTrialScreen$1
	a this$0
dfm net/minecraft/client/gui/screens/resourcepacks/lists/SelectedResourcePackList
bhu$1 net/minecraft/world/level/LevelReader$1
	a checkedBorder
	b val$source
	c val$cursor
	d val$pos
	e val$context
	f val$testArea
	g this$0
net/minecraft/server/WorldGenFeatureMelonPile net/minecraft/world/level/levelgen/feature/MelonBlockPileFeature
	a (Lnet/minecraft/server/GeneratorAccess;)Lnet/minecraft/server/IBlockData; getBlockState
dfl net/minecraft/client/gui/screens/resourcepacks/lists/ResourcePackList
	a minecraft
	b ICON_OVERLAY_LOCATION
	c INCOMPATIBLE_TITLE
	d INCOMPATIBLE_CONFIRM_TITLE
	e title
	a ()Lnet/minecraft/server/MinecraftKey; access$100
	a (Ldfl$a;)V addResourcePackEntry
	a (Ldfl;)I access$300
	a (Ldfl;I)I access$400
	b ()Lnet/minecraft/server/IChatBaseComponent; access$200
	c ()Lnet/minecraft/server/IChatBaseComponent; access$500
dfo net/minecraft/client/gui/screens/resourcepacks/package-info
net/minecraft/server/DedicatedPlayerList net/minecraft/server/dedicated/DedicatedPlayerList
	f LOGGER
	A ()V loadOps
	B ()V saveOps
	C ()V loadWhiteList
	D ()V saveWhiteList
	a ()V reloadWhiteList
	a (Lcom/mojang/authlib/GameProfile;)V op
	a (Z)V setUsingWhiteList
	b (Lcom/mojang/authlib/GameProfile;)V deop
	c ()Lnet/minecraft/server/MinecraftServer; getServer
	c (Lcom/mojang/authlib/GameProfile;)V blackList
	d (Lcom/mojang/authlib/GameProfile;)V whiteList
	e (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	f (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	w ()V saveIpBanList
	x ()V saveUserBanList
	y ()V loadIpBanList
	z ()V loadUserBanList
dfn net/minecraft/client/gui/screens/resourcepacks/lists/package-info
dzm$a net/minecraft/client/resources/sounds/Sound$Type
	a FILE
	b SOUND_EVENT
	c name
	d $VALUES
	a (Ljava/lang/String;)Ldzm$a; getByName
dfq net/minecraft/client/gui/screens/worldselection/CreateWorldScreen
	A levelTypeIndex
	a levelTypeOptions
	b lastScreen
	c nameEdit
	d seedEdit
	e resultFolder
	f gameModeName
	g oldGameModeName
	h features
	i commands
	j commandsChanged
	k bonusItems
	l hardCore
	m done
	n displayOptions
	o createButton
	p modeButton
	q moreOptionsButton
	r featuresButton
	s bonusItemsButton
	t typeButton
	u commandsButton
	v customizeTypeButton
	w gameModeHelp1
	x gameModeHelp2
	y initSeed
	z initName
	a ()V updateResultFolder
	a (Lczi;)V lambda$init$10
	a (Ljava/lang/String;)V lambda$init$2
	a (Lnet/minecraft/server/WorldData;)V copyFromWorld
	a (Z)V setDisplayOptions
	b ()V updateSelectionStrings
	b (Lczi;)V lambda$init$9
	b (Ljava/lang/String;)V lambda$init$0
	c ()V onCreate
	c (Lczi;)V lambda$init$8
	d ()Z isValidLevelType
	d (Lczi;)V lambda$init$7
	e ()V toggleDisplayOptions
	e (Lczi;)V lambda$init$6
	f (Lczi;)V lambda$init$5
	g (Lczi;)V lambda$init$4
	h (Lczi;)V lambda$init$3
	i (Lczi;)V lambda$init$1
cwj$2 com/mojang/realmsclient/gui/screens/RealmsCreateTrialScreen$2
	a this$0
dfp net/minecraft/client/gui/screens/stream/package-info
dfs net/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen
	a DIMENSION_COLORS
	b callback
	c upgrader
	a (Lczi;)V lambda$init$1
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenCustomHashMap;)V lambda$static$0
dfr net/minecraft/client/gui/screens/worldselection/EditWorldScreen
	a renameButton
	b callback
	c nameEdit
	d levelId
	a ()V onRename
	a (Lczi;)V lambda$init$7
	a (Ljava/lang/String;)V lambda$init$8
	a (Lnet/minecraft/server/Convertable;Ljava/lang/String;)V makeBackupAndShowToast
	a (ZZ)V lambda$null$4
	b (Lczi;)V lambda$init$6
	c (Lczi;)V lambda$init$5
	d (Lczi;)V lambda$init$3
	e (Lczi;)V lambda$init$2
	f (Lczi;)V lambda$init$1
	g (Lczi;)V lambda$init$0
dfu net/minecraft/client/gui/screens/worldselection/WorldSelectionList
	a LOGGER
	b DATE_FORMAT
	c ICON_MISSING
	d ICON_OVERLAY_LOCATION
	e screen
	f cachedList
	a ()Ljava/util/Optional; getSelectedOpt
	a (Ldfu$a;)V setSelected
	a (Ldfu;)I access$400
	a (Ljava/util/function/Supplier;Z)V refreshList
	b ()Ldft; getScreen
	c ()Ljava/text/DateFormat; access$100
	d ()Lnet/minecraft/server/MinecraftKey; access$200
	e ()Lnet/minecraft/server/MinecraftKey; access$300
	f ()Lorg/apache/logging/log4j/Logger; access$500
dft net/minecraft/client/gui/screens/worldselection/SelectWorldScreen
	a lastScreen
	b searchBox
	c toolTip
	d deleteButton
	e selectButton
	f renameButton
	g copyButton
	h list
	a ()Ljava/lang/String; lambda$init$2
	a (Lczi;)V lambda$init$8
	a (Ljava/lang/String;)V setToolTip
	a (Z)V updateButtonStatus
	b (Lczi;)V lambda$init$7
	b (Ljava/lang/String;)V lambda$init$1
	c (Lczi;)V lambda$init$6
	c (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
	d (Lczi;)V lambda$init$5
	e (Lczi;)V lambda$init$4
	f (Lczi;)V lambda$init$3
dfw net/minecraft/client/gui/spectator/PlayerMenuItem
	a profile
	b location
	Z_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	a (FI)V renderIcon
	a (Ldfy;)V selectItem
	aa_ ()Z isEnabled
dom$b net/minecraft/client/renderer/block/model/ItemTransforms$TransformType
	a NONE
	b THIRD_PERSON_LEFT_HAND
	c THIRD_PERSON_RIGHT_HAND
	d FIRST_PERSON_LEFT_HAND
	e FIRST_PERSON_RIGHT_HAND
	f HEAD
	g GUI
	h GROUND
	i FIXED
	j $VALUES
dfv net/minecraft/client/gui/screens/worldselection/package-info
dfy net/minecraft/client/gui/spectator/SpectatorMenu
	a EMPTY_SLOT
	b CLOSE_ITEM
	c SCROLL_LEFT
	d SCROLL_RIGHT_ENABLED
	e SCROLL_RIGHT_DISABLED
	f listener
	g previousCategories
	h category
	i selectedSlot
	j page
	a ()Ljava/util/List; getItems
	a (I)Ldga; getItem
	a (Ldfy;)I access$100
	a (Ldfy;I)I access$102
	a (Ldfz;)V selectCategory
	b ()Ldga; getSelectedItem
	b (I)V selectSlot
	c ()Ldfz; getSelectedCategory
	d ()V exit
	e ()I getSelectedSlot
	f ()Ldgc; getCurrentPage
	g ()Ljava/util/List; getAllPages
dfx net/minecraft/client/gui/spectator/RootSpectatorMenuCategory
	a items
	a ()Ljava/util/List; getItems
	b ()Lnet/minecraft/server/IChatBaseComponent; getPrompt
bnn$1 net/minecraft/world/level/block/CocoaBlock$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/NBTTagByte net/minecraft/nbt/ByteTag
	a ()B getId
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)V load
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTBase; copy
	c ()Lnet/minecraft/server/NBTTagByte; copy
	d ()J getAsLong
	e ()I getAsInt
	f ()S getAsShort
	g ()B getAsByte
	h ()D getAsDouble
	i ()F getAsFloat
	j ()Ljava/lang/Number; getAsNumber
cqq$1 net/minecraft/world/level/storage/loot/functions/SetNameFunction$1
btx$a net/minecraft/world/level/block/entity/BlockEntityType$Builder
	a factory
	b validBlocks
	a (Lbtx$a;)Ljava/util/Set; access$000
	a (Lcom/mojang/datafixers/types/Type;)Lnet/minecraft/server/TileEntityTypes; build
	a (Ljava/util/function/Supplier;[Lnet/minecraft/server/Block;)Lbtx$a; of
dfz net/minecraft/client/gui/spectator/SpectatorMenuCategory
	a ()Ljava/util/List; getItems
	b ()Lnet/minecraft/server/IChatBaseComponent; getPrompt
crc$a net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionTableBonus; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionTableBonus;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonParseException; lambda$deserialize$0
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
net/minecraft/server/BiomeColdTaiga net/minecraft/world/level/biome/SnowyTaigaBiome
net/minecraft/server/ContainerEnchantTable net/minecraft/world/inventory/EnchantmentMenu
	containerAccess access
	enchantments enchantClue
	h random
	i enchantmentSeed
	levels levelClue
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;I)Z clickMenuButton
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$removed$2
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/ItemStack;II)Ljava/util/List; getEnchantmentList
	a (Lnet/minecraft/server/ItemStack;ILnet/minecraft/server/EntityHuman;ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$clickMenuButton$1
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$slotsChanged$0
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()I getGoldCount
	f ()I getEnchantmentSeed
net/minecraft/server/BlockPropertySlabType net/minecraft/world/level/block/state/properties/SlabType
	d name
	e $VALUES
	m ()Ljava/lang/String; getSerializedName
dgb net/minecraft/client/gui/spectator/SpectatorMenuListener
	a (Ldfy;)V onSpectatorMenuClosed
dga net/minecraft/client/gui/spectator/SpectatorMenuItem
	Z_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	a (FI)V renderIcon
	a (Ldfy;)V selectItem
	aa_ ()Z isEnabled
dgd net/minecraft/client/gui/spectator/categories/TeleportToPlayerMenuCategory
	a PROFILE_ORDER
	b items
	Z_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	a ()Ljava/util/List; getItems
	a (FI)V renderIcon
	a (Ldfy;)V selectItem
	a (Ldkg;Ldkg;)I lambda$static$0
	aa_ ()Z isEnabled
	b ()Lnet/minecraft/server/IChatBaseComponent; getPrompt
dgc net/minecraft/client/gui/spectator/categories/SpectatorPage
	a category
	b items
	c selection
	a ()Ldfz; getCategory
	a (I)Ldga; getItem
	b ()I getSelectedSlot
dgf net/minecraft/client/gui/spectator/categories/package-info
dge net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory
	a items
	Z_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	a ()Ljava/util/List; getItems
	a (FI)V renderIcon
	a (Ldfy;)V selectItem
	aa_ ()Z isEnabled
	b ()Lnet/minecraft/server/IChatBaseComponent; getPrompt
dgh net/minecraft/client/main/GameConfig
	a user
	b display
	c location
	d game
	e server
net/minecraft/server/PacketPlayOutBlockAction net/minecraft/network/protocol/game/ClientboundBlockEventPacket
	a pos
	b b0
	c b1
	d block
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getB0
	d ()I getB1
	e ()Lnet/minecraft/server/Block; getBlock
net/minecraft/server/GeneratorSettingsDebug net/minecraft/world/level/levelgen/DebugGeneratorSettings
net/minecraft/server/BlockCoralPlant net/minecraft/world/level/block/CoralPlantBlock
	a SHAPE
	c deadBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
dgg net/minecraft/client/gui/spectator/package-info
dgj net/minecraft/client/map/BiomeMapToolChunkCache
	a toDrop
	b emptyChunk
	c generator
	d loadedChunks
	e level
	f lightEngine
	a ()Lnet/minecraft/server/World; getLevel
	a (II)Lnet/minecraft/server/Chunk; getChunkNow
	a (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	a (Ljava/util/function/BooleanSupplier;)V tick
	b ()Lnet/minecraft/server/ChunkGenerator; getSource
	b (II)Z hasChunk
	b (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/Chunk; getChunk
	d (II)V drop
	e ()Ljava/lang/String; gatherStats
	g ()Lnet/minecraft/server/ChunkGenerator; getGenerator
	h ()I getLoadedChunksCount
	k ()Lnet/minecraft/server/LightEngine; getLightEngine
	l ()Lnet/minecraft/server/IBlockAccess; getLevel
dgi net/minecraft/client/main/package-info
net/minecraft/server/ResourcePackFile net/minecraft/server/packs/FileResourcePack
	b SPLITTER
	c zipFile
	a (Ljava/lang/String;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	b ()Ljava/util/zip/ZipFile; getOrCreateZipFile
	c (Ljava/lang/String;)Z hasResource
dgl net/minecraft/client/map/package-info
net/minecraft/server/BlockState net/minecraft/world/level/block/state/properties/AbstractProperty
	a clazz
	b name
	c hashCode
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/Class; getValueClass
	c ()I generateHashCode
dgk net/minecraft/client/map/Map
	a xCam
	b yCam
	c COLOR
	d ODD_COLOR
	e LOGGER
	f image
	g pixels
	h w
	i h
	j scale
	k xMouse
	l yMouse
	m redraw
	n layer
	o lastUpdate
	p hovered
	q teleportCommand
	a ()I lambda$buildMapImage$1
	a (IIII)V buildMapImage
	a (Ldgk;)Ljava/lang/String; access$000
	a (Ldgk;I)I access$102
	a (Ldgk;Ljava/lang/String;)Ljava/lang/String; access$802
	a (Ldgk;Z)Z access$402
	a (Lnet/minecraft/server/BiomeBase;)I getColor
	a (Lnet/minecraft/server/BiomeBase;I)V setColor
	a (Lnet/minecraft/server/BiomeBase;II)V setColor
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/WorldProvider;)Lnet/minecraft/server/IChunkProvider; lambda$buildMapImage$0
	a ([Ljava/lang/String;)V main
	b (Ldgk;)I access$200
	b (Ldgk;I)I access$302
	b (Ldgk;Ljava/lang/String;)Ljava/lang/String; access$002
	b (Lnet/minecraft/server/BiomeBase;)I getOddColor
	c (Ldgk;)I access$100
	d (Ldgk;)I access$300
	e (Ldgk;)Lnet/minecraft/server/GenLayer; access$500
	f (Ldgk;)I access$600
	g (Ldgk;)I access$700
cpn$1 net/minecraft/world/level/storage/loot/entries/LootItem$1
dgn net/minecraft/client/model/ArmorStandArmorModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityArmorStand;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFFF)V setupAnim
dgm net/minecraft/client/model/AbstractZombieModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityMonster;)Z isAggressive
	a (Lnet/minecraft/server/EntityMonster;FFFFFF)V setupAnim
dgp net/minecraft/client/model/BannerModel
	a flag
	b pole
	c bar
	a ()V render
	b ()Ldjv; getPole
	c ()Ldjv; getFlag
net/minecraft/server/ArgumentScoreboardCriteria net/minecraft/commands/arguments/ObjectiveCriteriaArgument
	a ERROR_INVALID_VALUE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentScoreboardCriteria; criteria
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IScoreboardCriteria; parse
	a (Lcom/mojang/brigadier/StringReader;ILjava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$parse$1
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IScoreboardCriteria; getCriteria
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/StatisticWrapper;Ljava/lang/Object;)Ljava/lang/String; getName
dgo net/minecraft/client/model/ArmorStandModel
	a bodyStick1
	b bodyStick2
	t shoulderStick
	u basePlate
	a (FLnet/minecraft/server/EnumMainHand;)V translateToHand
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityArmorStand;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityArmorStand;FFFFFF)V render
	b (Lnet/minecraft/server/EntityLiving;FFFFFF)V render
dgr net/minecraft/client/model/BedModel
	a headPiece
	b footPiece
	c legs
	a ()V render
	a (Z)V preparePiece
cf$a net/minecraft/commands/SharedSuggestionProvider$TextCoordinates
	a DEFAULT_LOCAL
	b DEFAULT_GLOBAL
	c x
	d y
	e z
dgq net/minecraft/client/model/BatModel
	a head
	b body
	f rightWing
	g leftWing
	h rightWingTip
	i leftWingTip
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityBat;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityBat;FFFFFF)V setupAnim
dgt net/minecraft/client/model/BlazeModel
	a upperBodyParts
	b head
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
dgs net/minecraft/client/model/BellModel
	a bellBody
	b bellBase
	a (FFF)V render
dgv net/minecraft/client/model/BookModel
	a leftLid
	b rightLid
	c leftPages
	d rightPages
	e flipPage1
	f flipPage2
	g seam
	a (FFFFFF)V render
	b (FFFFFF)V setupAnim
net/minecraft/server/PathfinderGoalPanic net/minecraft/world/entity/ai/goal/PanicGoal
	a mob
	b speedModifier
	c posX
	d posY
	e posZ
	a ()Z canUse
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/Entity;II)Lnet/minecraft/server/BlockPosition; lookForWater
	b ()Z canContinueToUse
	c ()V start
	g ()Z findRandomPosition
net/minecraft/server/BiomeVoid net/minecraft/world/level/biome/TheVoidBiome
dgu net/minecraft/client/model/BoatModel
	a cubes
	b paddles
	f waterPatch
	a (Lnet/minecraft/server/EntityBoat;FFFFFF)V render
	a (Lnet/minecraft/server/EntityBoat;IFF)V animatePaddle
	a (Z)Ldjv; makePaddle
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	c (Lnet/minecraft/server/Entity;FFFFFF)V renderSecondPass
dgx net/minecraft/client/model/ChestModel
	a lid
	b bottom
	c lock
	a ()V render
	b ()Ldjv; getLid
dgw net/minecraft/client/model/CatModel
	m lieDownAmount
	n lieDownAmountTail
	o relaxStateOneAmount
	a (FFF)F rotlerpRad
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityCat;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityCat;FFFFFF)V setupAnim
net/minecraft/server/DataConverterIglooMetadataRemoval net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$removeIglooPieces$2
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; removeIglooPieces
	b (Ljava/util/stream/Stream;)Ljava/lang/Boolean; lambda$fixTag$0
	c (Lcom/mojang/datafixers/Dynamic;)Z isIglooPiece
	d (Lcom/mojang/datafixers/Dynamic;)Z lambda$null$1
dgz net/minecraft/client/model/ChickenModel
	a head
	b body
	f leg0
	g leg1
	h wing0
	i wing1
	j beak
	k redThing
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
net/minecraft/server/CommandDatapack net/minecraft/server/commands/DataPackCommand
	a ERROR_UNKNOWN_PACK
	b ERROR_PACK_ALREADY_ENABLED
	c ERROR_PACK_ALREADY_DISABLED
	d SELECTED_PACKS
	e AVAILABLE_PACKS
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$4
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lnet/minecraft/server/ResourcePackLoader; getPack
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lnet/minecraft/server/ResourcePackLoader;)V lambda$null$11
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	a (Ljava/util/List;Lnet/minecraft/server/ResourcePackLoader;)V lambda$null$14
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listPacks
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ResourcePackLoader;)I disablePack
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ResourcePackLoader;Lrv$a;)I enablePack
	a (Lnet/minecraft/server/ResourcePackLoader;)Lnet/minecraft/server/IChatBaseComponent; lambda$listEnabledPacks$23
	a (Lnet/minecraft/server/WorldData;Lnet/minecraft/server/ResourcePackLoader;)V lambda$disablePack$21
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$3
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lnet/minecraft/server/ResourcePackLoader;)V lambda$null$9
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/util/List;Lnet/minecraft/server/ResourcePackLoader;)V lambda$null$7
	b (Lnet/minecraft/server/CommandListenerWrapper;)I listAvailablePacks
	b (Lnet/minecraft/server/ResourcePackLoader;)Lnet/minecraft/server/IChatBaseComponent; lambda$listAvailablePacks$22
	b (Lnet/minecraft/server/WorldData;Lnet/minecraft/server/ResourcePackLoader;)V lambda$enablePack$20
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	c (Lnet/minecraft/server/CommandListenerWrapper;)I listEnabledPacks
	c (Lnet/minecraft/server/ResourcePackLoader;)Lnet/minecraft/server/ResourcePackLoader; lambda$null$6
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	d (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$5
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
dgy net/minecraft/client/model/ChestedHorseModel
	f boxL
	g boxR
	a (Ldjv;)V addEarModels
	a (Lnet/minecraft/server/EntityHorseAbstract;FFFFFF)V render
	a (Lnet/minecraft/server/EntityHorseChestedAbstract;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
net/minecraft/server/AdvancementFrameType net/minecraft/advancements/FrameType
	d name
	e texture
	f chatColor
	g $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/AdvancementFrameType; byName
	b ()I getTexture
	c ()Lnet/minecraft/server/EnumChatFormat; getChatColor
net/minecraft/server/EntityGhast$PathfinderGoalGhastMoveTowardsTarget net/minecraft/world/entity/monster/Ghast$GhastLookGoal
	a ghast
	a ()Z canUse
	e ()V tick
dha net/minecraft/client/model/CodModel
	a body
	b topFin
	f head
	g nose
	h sideFin0
	i sideFin1
	j tailFin
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
dhc net/minecraft/client/model/CreeperModel
	a head
	b hair
	f body
	g leg0
	h leg1
	i leg2
	j leg3
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
dhb net/minecraft/client/model/CowModel
	a ()Ldjv; getHead
dhe net/minecraft/client/model/ElytraModel
	a rightWing
	b leftWing
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityLiving;FFFFFF)V setupAnim
dhd net/minecraft/client/model/DrownedModel
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityLiving;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityMonster;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityZombie;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityZombie;FFFFFF)V setupAnim
hm$1 net/minecraft/data/recipes/SpecialRecipeBuilder$1
	a val$id
	b this$0
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
dhg net/minecraft/client/model/EndermiteModel
	a BODY_SIZES
	b BODY_TEXS
	f BODY_COUNT
	g bodyParts
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
net/minecraft/server/LightEngineBlock net/minecraft/world/level/lighting/BlockLightEngine
	e DIRECTIONS
	f pos
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	b (JJI)I computeLevelFromNeighbor
	d (J)I getLightEmission
dhf net/minecraft/client/model/EndermanModel
	a carrying
	b creepy
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFFF)V setupAnim
net/minecraft/server/ResourcePackAbstract net/minecraft/server/packs/AbstractResourcePack
	a file
	b LOGGER
	a ()Ljava/lang/String; getName
	a (Ljava/io/File;Ljava/io/File;)Ljava/lang/String; getRelativePath
	a (Ljava/lang/String;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	a (Lnet/minecraft/server/ResourcePackMetaParser;Ljava/io/InputStream;)Ljava/lang/Object; getMetadataFromStream
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	b (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Ljava/lang/String;)Z hasResource
	c (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/lang/String; getPathFromLocation
	d (Ljava/lang/String;)V logWarning
dhi net/minecraft/client/model/EvokerFangsModel
	a base
	b upperJaw
	f lowerJaw
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
dhh net/minecraft/client/model/EntityModel
	c attackTime
	d riding
	e young
	a (Ldhh;)V copyPropertiesTo
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
dhk net/minecraft/client/model/GhastModel
	a body
	b tentacles
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
net/minecraft/server/BlockStatePredicate net/minecraft/world/level/block/state/predicate/BlockStatePredicate
	a ANY
	b definition
	c properties
	a (Lnet/minecraft/server/Block;)Lnet/minecraft/server/BlockStatePredicate; forBlock
	a (Lnet/minecraft/server/BlockStateList;)Lnet/minecraft/server/BlockStatePredicate; forDefinition
	a (Lnet/minecraft/server/IBlockData;)Z test
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;Ljava/util/function/Predicate;)Z applies
	a (Lnet/minecraft/server/IBlockState;Ljava/util/function/Predicate;)Lnet/minecraft/server/BlockStatePredicate; where
	b (Lnet/minecraft/server/IBlockData;)Z lambda$static$0
dhj net/minecraft/client/model/FoxModel
	a head
	b earL
	f earR
	g nose
	h body
	i leg0
	j leg1
	k leg2
	l leg3
	m tail
	n legMotionPos
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityFox;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityFox;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityFox;FFFFFF)V setupAnim
net/minecraft/server/PacketPlayOutEntityVelocity net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket
	a id
	b xa
	c ya
	d za
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getXa
	d ()I getYa
	e ()I getZa
dhm net/minecraft/client/model/GuardianModel
	a SPIKE_X_ROT
	b SPIKE_Y_ROT
	f SPIKE_Z_ROT
	g SPIKE_X
	h SPIKE_Y
	i SPIKE_Z
	j head
	k eye
	l spikeParts
	m tailParts
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityGuardian;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityGuardian;FFFFFF)V setupAnim
cqq$a net/minecraft/world/level/storage/loot/functions/SetNameFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetName; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetName;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
dhl net/minecraft/client/model/GiantZombieModel
	a (Lnet/minecraft/server/EntityGiantZombie;)Z isAggressive
	a (Lnet/minecraft/server/EntityMonster;)Z isAggressive
dho net/minecraft/client/model/HumanoidHeadModel
	b hat
	a (FFFFFF)V render
dhn net/minecraft/client/model/HorseModel
	a body
	b headParts
	f leg1A
	g leg2A
	h leg3A
	i leg4A
	j tail
	k saddleParts
	l ridingParts
	a (FFF)F rotlerp
	a (Ldjv;)V addEarModels
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityHorseAbstract;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityHorseAbstract;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
dhq net/minecraft/client/model/IllagerModel
	a head
	b body
	f arms
	g leftLeg
	h rightLeg
	i rightArm
	j leftArm
	k hat
	l nose
	m itemUseTicks
	a ()Ldjv; getHead
	a (FLnet/minecraft/server/EnumMainHand;)V translateToHand
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityIllagerAbstract;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityIllagerAbstract;FFFFFF)V render
	a (Lnet/minecraft/server/EnumMainHand;)Ldjv; getArm
	b ()Ldjv; getHat
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityIllagerAbstract;FFFFFF)V setupAnim
dhp net/minecraft/client/model/HumanoidModel
	a itemUseTicks
	f head
	g hat
	h body
	i rightArm
	j leftArm
	k rightLeg
	l leftLeg
	m leftArmPose
	n rightArmPose
	o sneaking
	p swimAmount
	a ()Ldjv; getHead
	a (F)F quadraticArmUpdate
	a (FFF)F rotlerpRad
	a (FLnet/minecraft/server/EnumMainHand;)V translateToHand
	a (Ldhp;)V copyPropertiesTo
	a (Ldhp;F)V render
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EnumMainHand; getAttackArm
	a (Lnet/minecraft/server/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityLiving;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EnumMainHand;)Ldjv; getArm
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityLiving;FFFFFF)V render
	b_ (Z)V setAllVisible
dhs net/minecraft/client/model/LargeChestModel
net/minecraft/server/WorldGenFeatureRandom2 net/minecraft/world/level/levelgen/feature/SimpleRandomFeatureConfig
	a features
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureRandom2; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/WorldGenFeatureConfigured;)Ljava/lang/Object; lambda$serialize$1
	a (Lnet/minecraft/server/WorldGenerator;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredFeature
	a ([Lnet/minecraft/server/WorldGenerator;[Lnet/minecraft/server/WorldGenFeatureConfiguration;I)Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$new$0
net/minecraft/server/ResourceKeyInvalidException net/minecraft/ResourceLocationException
dhr net/minecraft/client/model/IronGolemModel
	a arm0
	b head
	f body
	g arm1
	h leg0
	i leg1
	a ()Ldjv; getFlowerHoldingArm
	a (FF)F triangleWave
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityIronGolem;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityIronGolem;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityIronGolem;FFFFFF)V setupAnim
dhu net/minecraft/client/model/LeashKnotModel
	a knot
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
dht net/minecraft/client/model/LavaSlimeModel
	a bodyCubes
	b insideCube
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntitySlime;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntitySlime;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
dhw net/minecraft/client/model/LlamaSpitModel
	a main
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
dhv net/minecraft/client/model/LlamaModel
	l chest1
	m chest2
	a (Lnet/minecraft/server/EntityHorseChestedAbstract;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
dhy net/minecraft/client/model/Model
	q cubes
	r texWidth
	s texHeight
	a (Ljava/util/Random;)Ldjv; getRandomModelPart
dhx net/minecraft/client/model/MinecartModel
	a cubes
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
net/minecraft/server/TileEntityLightDetector net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity
	T_ ()V tick
dhz net/minecraft/client/model/OcelotModel
	a backLegL
	b backLegR
	f frontLegL
	g frontLegR
	h tail1
	i tail2
	j head
	k body
	l state
	a (Ldhz;F)V render
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
net/minecraft/server/LootContextParameters net/minecraft/world/level/storage/loot/parameters/LootContextParams
	POSITION BLOCK_POS
	a (Ljava/lang/String;)Lnet/minecraft/server/LootContextParameter; create
net/minecraft/server/CommandSetWorldSpawn net/minecraft/server/commands/SetWorldSpawnCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;)I setSpawn
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/ItemBucket net/minecraft/world/item/BucketItem
	fluidType content
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playEmptySound
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/MovingObjectPositionBlock;)Z emptyBucket
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ItemStack; getEmptySuccessItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Item;)Lnet/minecraft/server/ItemStack; createResultItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)V checkExtraContent
net/minecraft/server/BlockActionData net/minecraft/world/level/BlockEventData
	a pos
	b block
	c paramA
	d paramB
	a ()Lnet/minecraft/server/BlockPosition; getPos
	b ()Lnet/minecraft/server/Block; getBlock
	c ()I getParamA
	d ()I getParamB
dib net/minecraft/client/model/ParrotModel
	a body
	b tail
	f wingLeft
	g wingRight
	h head
	i head2
	j beak1
	k beak2
	l feather
	m legLeft
	n legRight
	a (F)V render
	a (FFFFFI)V renderOnShoulder
	a (Ldib$a;)V prepare
	a (Ldib$a;IFFFFF)V setupAnim
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityParrot;)Ldib$a; getState
	a (Lnet/minecraft/server/EntityParrot;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityParrot;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityParrot;FFFFFF)V setupAnim
dia net/minecraft/client/model/PandaModel
	l sitAmount
	m lieOnBackAmount
	n rollAmount
	a (FFF)F rotlerpRad
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityPanda;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityPanda;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityPanda;FFFFFF)V render
net/minecraft/server/EntityTropicalFish net/minecraft/world/entity/animal/TropicalFish
	b COMMON_VARIANTS
	bA PATTERN_B_TEXTURE_LOCATIONS
	bB isSchool
	bz PATTERN_A_TEXTURE_LOCATIONS
	c DATA_ID_TYPE_VARIANT
	d BASE_TEXTURE_LOCATIONS
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityTropicalFish$Variant;Lnet/minecraft/server/EnumColor;Lnet/minecraft/server/EnumColor;)I calculateVariant
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (I)Ljava/lang/String; getPredefinedName
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (I)Z isMaxGroupSizeReached
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dW ()Lnet/minecraft/server/SoundEffect; getFlopSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	ef ()[F getBaseColor
	eg ()[F getPatternColor
	eh ()I getBaseVariant
	ei ()Lnet/minecraft/server/MinecraftKey; getPatternTextureLocation
	ej ()Lnet/minecraft/server/MinecraftKey; getBaseTextureLocation
	i (Lnet/minecraft/server/ItemStack;)V saveToBucketTag
	l ()Lnet/minecraft/server/ItemStack; getBucketItemStack
	r (I)Lnet/minecraft/server/EnumColor; getBaseColor
	s (I)Lnet/minecraft/server/EnumColor; getPatternColor
	t (I)Ljava/lang/String; getFishTypeName
	u_ ()V defineSynchedData
	v (I)I getBaseVariant
	w (I)I getBaseColorIdx
	x (I)I getPatternColorIdx
	y (I)I getPatternVariant
did net/minecraft/client/model/PigModel
bhd$1 net/minecraft/world/level/ChunkPos$1
	a val$from
	b val$to
	c val$zDiff
	d val$xDiff
	e pos
dic net/minecraft/client/model/PhantomModel
	a body
	b leftWingBase
	f leftWingTip
	g rightWingBase
	h rightWingTip
	i head
	j tailBase
	k tailTip
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
dif net/minecraft/client/model/PlayerModel
	a leftSleeve
	b rightSleeve
	t leftPants
	u rightPants
	v jacket
	w cloak
	x ear
	y slim
	a (F)V renderEars
	a (FLnet/minecraft/server/EnumMainHand;)V translateToHand
	a (Ldhp;F)V render
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFFF)V setupAnim
	b (F)V renderCloak
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityLiving;FFFFFF)V render
	b_ (Z)V setAllVisible
die net/minecraft/client/model/PillagerModel
	a (Lnet/minecraft/server/EntityIllagerAbstract;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
net/minecraft/server/TickList net/minecraft/world/level/TickList
	a ()I size
	a (Ljava/util/stream/Stream;)V addAll
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;I)V scheduleTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
dih net/minecraft/client/model/Polygon
	a vertices
	b vertexCount
	c flipNormal
	a ()V mirror
	a (Lcuw;F)V render
	b ()Ldih; flipNormal
dig net/minecraft/client/model/PolarBearModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityPolarBear;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityPolarBear;FFFFFF)V setupAnim
dij net/minecraft/client/model/PufferfishMidModel
	a cube
	b finBlue0
	f finBlue1
	g finTop0
	h finTop1
	i finSide0
	j finSide1
	k finSide2
	l finSide3
	m finBottom0
	n finBottom1
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
dii net/minecraft/client/model/PufferfishBigModel
	a cube
	b blueFin0
	f blueFin1
	g topFrontFin
	h topMidFin
	i topBackFin
	j sideFrontFin0
	k sideFrontFin1
	l bottomFrontFin
	m bottomBackFin
	n bottomMidFin
	o sideBackFin0
	p sideBackFin1
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
net/minecraft/server/EntityMinecartContainer net/minecraft/world/entity/vehicle/AbstractMinecartContainer
	c dropEquipment
	items itemStacks
	L_ ()V clearContent
	Y ()V remove
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/DamageSource;)V destroy
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/Entity; changeDimension
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Z)V setDropContainerContent
	c ()Z isEmpty
	d (Lnet/minecraft/server/EntityHuman;)V unpackLootTable
	e ()V setChanged
	k ()V applyNaturalSlowdown
dil net/minecraft/client/model/QuadrupedModel
	a head
	b body
	f leg0
	g leg1
	h leg2
	i leg3
	j yHeadOffs
	k zHeadOffs
	a (Ldil;F)V render
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
net/minecraft/server/CriterionTriggerUsedTotem net/minecraft/advancements/critereon/UsedTotemTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbv$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
dik net/minecraft/client/model/PufferfishSmallModel
	a cube
	b eye0
	f eye1
	g fin0
	h fin1
	i finBack
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
din net/minecraft/client/model/RavagerModel
	a head
	b mouth
	f body
	g leg0
	h leg1
	i leg2
	j leg3
	k neck
	a (FF)F triangleWave
	a (Ldin;F)V render
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityRavager;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityRavager;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityRavager;FFFFFF)V setupAnim
dim net/minecraft/client/model/RabbitModel
	a rearFootLeft
	b rearFootRight
	f haunchLeft
	g haunchRight
	h body
	i frontLegLeft
	j frontLegRight
	k head
	l earRight
	m earLeft
	n tail
	o nose
	p jumpRotation
	a (Ldjv;FFF)V setRotation
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityRabbit;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityRabbit;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityRabbit;FFFFFF)V setupAnim
dip net/minecraft/client/model/SheepFurModel
	l headXRot
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntitySheep;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntitySheep;FFFFFF)V setupAnim
net/minecraft/server/DefinedStructureStructureProcessorType net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType
	b BLOCK_IGNORE
	c BLOCK_ROT
	d GRAVITY
	e JIGSAW_REPLACEMENT
	f RULE
	g NOP
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/DefinedStructureProcessor; lambda$static$1
	a (Ljava/lang/String;Lnet/minecraft/server/DefinedStructureStructureProcessorType;)Lnet/minecraft/server/DefinedStructureStructureProcessorType; register
	b (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/DefinedStructureProcessor; lambda$static$0
dio net/minecraft/client/model/SalmonModel
	a bodyFront
	b bodyBack
	f head
	g topFin0
	h topFin1
	i backFin
	j sideFin0
	k sideFin1
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
dir net/minecraft/client/model/ShieldModel
	a plate
	b handle
	a ()V render
diq net/minecraft/client/model/SheepModel
	l headXRot
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntitySheep;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntitySheep;FFFFFF)V setupAnim
net/minecraft/server/WorldGenEndGatewayConfiguration net/minecraft/world/level/levelgen/feature/EndGatewayConfiguration
	a exit
	b exact
	a ()Lnet/minecraft/server/WorldGenEndGatewayConfiguration; delayedExitSearch
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenEndGatewayConfiguration; deserialize
	a (Lcom/mojang/datafixers/Dynamic;Ljava/lang/Number;)Ljava/util/Optional; lambda$deserialize$3
	a (Lcom/mojang/datafixers/Dynamic;Ljava/lang/Number;Ljava/lang/Number;)Ljava/util/Optional; lambda$null$2
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/BlockPosition;)Ljava/lang/Object; lambda$serialize$0
	a (Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)Lnet/minecraft/server/BlockPosition; lambda$null$1
	a (Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/WorldGenEndGatewayConfiguration; knownExit
	b ()Ljava/util/Optional; getExit
	c ()Z isExitExact
dit net/minecraft/client/model/ShulkerModel
	a base
	b lid
	f head
	a ()Ldjv; getBase
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityShulker;FFFFFF)V setupAnim
	b ()Ldjv; getLid
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityShulker;FFFFFF)V render
	c ()Ldjv; getHead
dis net/minecraft/client/model/ShulkerBulletModel
	a main
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
net/minecraft/server/AttributeInstance net/minecraft/world/entity/ai/attributes/AttributeInstance
	a (Ljava/lang/String;)Ljava/util/Collection; getModifiers
	a (Ljava/util/Collection;)V addModifiers
	a (Ljava/util/UUID;)Lnet/minecraft/server/AttributeModifier; getModifier
	a (Lnet/minecraft/server/AttributeModifier$Operation;)Ljava/util/Collection; getModifiers
	a (Lnet/minecraft/server/AttributeModifier;)Z hasModifier
	b (Ljava/lang/String;)V removeModifiers
	b (Ljava/util/UUID;)V removeModifier
	d ()V removeModifiers
	setValue (D)V setBaseValue
mc$1 net/minecraft/network/protocol/game/ClientboundPlayerCombatPacket$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundPlayerCombatPacket$Event
div net/minecraft/client/model/SilverfishModel
	a bodyParts
	b bodyLayers
	f zPlacement
	g BODY_SIZES
	h BODY_TEXS
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
bc$a net/minecraft/advancements/critereon/ItemPredicate$Builder
	a enchantments
	b item
	c tag
	d count
	e durability
	f potion
	g nbt
	a ()Lbc$a; item
	a (Lnet/minecraft/server/CriterionConditionEnchantments;)Lbc$a; hasEnchantment
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lbc$a; withCount
	a (Lnet/minecraft/server/IMaterial;)Lbc$a; of
	a (Lnet/minecraft/server/NBTTagCompound;)Lbc$a; hasNbt
	a (Lnet/minecraft/server/PotionRegistry;)Lbc$a; isPotion
	a (Lnet/minecraft/server/Tag;)Lbc$a; of
	b ()Lnet/minecraft/server/CriterionConditionItem; build
	b (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lbc$a; hasDurability
net/minecraft/server/ICommandListener net/minecraft/commands/CommandSource
	DUMMY NULL
	shouldBroadcastCommands ()Z shouldInformAdmins
	shouldSendFailure ()Z acceptsFailure
	shouldSendSuccess ()Z acceptsSuccess
diu net/minecraft/client/model/SignModel
	a sign
	b stick
	a ()V render
	b ()Ldjv; getStick
dix net/minecraft/client/model/SkullModel
	a head
	a (FFFFFF)V render
diw net/minecraft/client/model/SkeletonModel
	a (FLnet/minecraft/server/EnumMainHand;)V translateToHand
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityInsentient;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityInsentient;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityLiving;FFFFFF)V setupAnim
diz net/minecraft/client/model/SnowGolemModel
	a piece1
	b piece2
	f head
	g arm1
	h arm2
	a ()Ldjv; getHead
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
diy net/minecraft/client/model/SlimeModel
	a cube
	b eye0
	f eye1
	g mouth
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
net/minecraft/server/LootItemConditionEntityProperty net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition
	a predicate
	b entityTarget
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lav$a;Lnet/minecraft/server/LootTableInfo$EntityTarget;)Lnet/minecraft/server/LootItemCondition; lambda$hasProperties$0
	a (Lnet/minecraft/server/LootItemConditionEntityProperty;)Lnet/minecraft/server/CriterionConditionEntity; access$000
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;)Lcrk$a; entityPresent
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;Lav$a;)Lcrk$a; hasProperties
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b (Lnet/minecraft/server/LootItemConditionEntityProperty;)Lnet/minecraft/server/LootTableInfo$EntityTarget; access$100
dja net/minecraft/client/model/SpiderModel
	a head
	b body0
	f body1
	g leg0
	h leg1
	i leg2
	j leg3
	k leg4
	l leg5
	m leg6
	n leg7
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
net/minecraft/server/MemoryStatus net/minecraft/world/entity/ai/memory/MemoryStatus
	d $VALUES
djc net/minecraft/client/model/TridentModel
	a TEXTURE
	b pole
	a ()V render
net/minecraft/server/VoxelShapeDiscreteSlice net/minecraft/world/phys/shapes/SubShape
	d parent
	e startX
	f startY
	g startZ
	h endX
	i endY
	j endZ
	a (IIIZZ)V setFull
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)I firstFull
	b (III)Z isFull
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)I lastFull
net/minecraft/server/ScoreboardTeam net/minecraft/world/scores/PlayerTeam
	a scoreboard
	b name
	c players
	d displayName
	e playerPrefix
	f playerSuffix
	g allowFriendlyFire
	h seeFriendlyInvisibles
	i nameTagVisibility
	j deathMessageVisibility
	k color
	l collisionRule
	a ()Lnet/minecraft/server/Scoreboard; getScoreboard
	a (I)V unpackOptions
	a (Lnet/minecraft/server/ChatModifier;)V lambda$getFormattedDisplayName$0
	a (Lnet/minecraft/server/ScoreboardTeamBase;Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; formatNameForTeam
	b ()Ljava/lang/String; getName
	d ()Lnet/minecraft/server/IChatBaseComponent; getFormattedDisplayName
	d (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; getFormattedName
	g ()Ljava/util/Collection; getPlayers
	getPrefix ()Lnet/minecraft/server/IChatBaseComponent; getPlayerPrefix
	getSuffix ()Lnet/minecraft/server/IChatBaseComponent; getPlayerSuffix
	h ()Z isAllowFriendlyFire
	k ()Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility; getDeathMessageVisibility
	l ()Lnet/minecraft/server/ScoreboardTeamBase$EnumTeamPush; getCollisionRule
	n ()Lnet/minecraft/server/EnumChatFormat; getColor
	packOptionData ()I packOptions
	setCanSeeFriendlyInvisibles (Z)V setSeeFriendlyInvisibles
	setPrefix (Lnet/minecraft/server/IChatBaseComponent;)V setPlayerPrefix
	setSuffix (Lnet/minecraft/server/IChatBaseComponent;)V setPlayerSuffix
net/minecraft/server/PacketPlayOutTitle net/minecraft/network/protocol/game/ClientboundSetTitlesPacket
	a type
	b text
	c fadeInTime
	d stayTime
	e fadeOutTime
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/PacketPlayOutTitle$EnumTitleAction; getType
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/IChatBaseComponent; getText
	d ()I getFadeInTime
	e ()I getStayTime
	f ()I getFadeOutTime
djb net/minecraft/client/model/SquidModel
	a body
	b tentacles
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
net/minecraft/server/MovingObjectPosition$EnumMovingObjectType net/minecraft/world/phys/HitResult$Type
	d $VALUES
dje net/minecraft/client/model/TropicalFishModelB
	a body
	b tail
	f leftFin
	g rightFin
	h topFin
	i bottomFin
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
net/minecraft/server/WorldGenFeatureChanceDecoratorRangeConfiguration net/minecraft/world/level/levelgen/feature/DecoratorChanceRange
	a chance
	b bottomOffset
	c topOffset
	d top
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureChanceDecoratorRangeConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
djd net/minecraft/client/model/TropicalFishModelA
	a body
	b tail
	f leftFin
	g rightFin
	h topFin
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
djg net/minecraft/client/model/TwoPassModel
	c (Lnet/minecraft/server/Entity;FFFFFF)V renderSecondPass
net/minecraft/server/ScoreboardServer$Action net/minecraft/server/ServerScoreboard$Method
	c $VALUES
djf net/minecraft/client/model/TurtleModel
	l eggBelly
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityTurtle;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityTurtle;FFFFFF)V setupAnim
bt$a net/minecraft/advancements/critereon/TradeTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityVillagerAbstract;Lnet/minecraft/server/ItemStack;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
dji net/minecraft/client/model/VexModel
	a leftWing
	b rightWing
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityVex;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityLiving;FFFFFF)V render
	b (Lnet/minecraft/server/EntityVex;FFFFFF)V setupAnim
djh net/minecraft/client/model/Vertex
	a pos
	b u
	c v
	a (FF)Ldjh; remap
djk net/minecraft/client/model/WitchModel
	m holdingItem
	n mole
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b ()Ldjv; getNose
	b (Z)V setHoldingItem
net/minecraft/server/LightEngineSky net/minecraft/world/level/lighting/SkyLightEngine
	e DIRECTIONS
	f HORIZONTALS
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (J)Ljava/lang/String; getDebugData
	b (JJI)I computeLevelFromNeighbor
	f (J)V checkNode
djj net/minecraft/client/model/VillagerModel
	a head
	b hat
	f hatRim
	g body
	h jacket
	i arms
	j leg0
	k leg1
	l nose
	a ()Ldjv; getHead
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Z)V hatVisible
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
djm net/minecraft/client/model/WolfModel
	a head
	b body
	f leg0
	g leg1
	h leg2
	i leg3
	j tail
	k upperBody
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityWolf;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityWolf;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityWolf;FFFFFF)V setupAnim
djl net/minecraft/client/model/WitherBossModel
	a upperBodyParts
	b heads
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityWither;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityWither;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
	b (Lnet/minecraft/server/EntityWither;FFFFFF)V setupAnim
djo net/minecraft/client/model/ZombieVillagerModel
	a hatRim
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityZombie;FFFFFF)V setupAnim
	a (Z)V hatVisible
net/minecraft/server/CriterionConditionValue$FloatRange net/minecraft/advancements/critereon/MinMaxBounds$Floats
	e ANY
	f minSq
	g maxSq
	a (D)Z matchesSqr
	a (F)Lnet/minecraft/server/CriterionConditionValue$FloatRange; exactly
	a (FF)Lnet/minecraft/server/CriterionConditionValue$FloatRange; between
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/Float;Ljava/lang/Float;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; create
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; fromReader
	a (Ljava/lang/Float;)Ljava/lang/Double; squareOpt
	b (F)Lnet/minecraft/server/CriterionConditionValue$FloatRange; atLeast
	b (Ljava/lang/Float;)Ljava/lang/Float; lambda$fromReader$0
	c (F)Lnet/minecraft/server/CriterionConditionValue$FloatRange; atMost
	d (F)Z matches
djn net/minecraft/client/model/ZombieModel
	a (Lnet/minecraft/server/EntityMonster;)Z isAggressive
	a (Lnet/minecraft/server/EntityZombie;)Z isAggressive
djq net/minecraft/client/model/dragon/DragonModel
	a head
	b neck
	f jaw
	g body
	h rearLeg
	i frontLeg
	j rearLegTip
	k frontLegTip
	l rearFoot
	m frontFoot
	n wing
	o wingTip
	p a
	a (D)F rotWrap
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityEnderDragon;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityEnderDragon;FFFFFF)V render
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
djp net/minecraft/client/model/dragon/DragonHeadModel
	b head
	c jaw
	a (FFFFFF)V render
djs net/minecraft/client/model/dragon/package-info
djr net/minecraft/client/model/dragon/EndCrystalModel
	a cube
	b glass
	f base
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
dju net/minecraft/client/model/geom/ImageGenerator
	a occupiedRegions
	a (Ldjt;Ldjt;)I lambda$generateImage$0
	a (Ldju$a;II)Z isFree
	a (Ldju;)Ljava/util/List; access$100
	a (Ldju;Ldju$a;II)Z access$000
	a (Ldjv;Ljava/util/List;)V getCubes
	a (Ljava/util/List;)V generateImage
	a ([Ljava/lang/String;)V main
djt net/minecraft/client/model/geom/Cube
	a minX
	b minY
	c minZ
	d maxX
	e maxY
	f maxZ
	g id
	h vertices
	i polygons
	a (Lcuw;F)V compile
	a (Ljava/lang/String;)Ldjt; setId
net/minecraft/server/ItemSpade net/minecraft/world/item/ShovelItem
	a FLATTENABLES
	e DIGGABLES
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemActionContext;Lnet/minecraft/server/EntityHuman;)V lambda$useOn$0
	b (Lnet/minecraft/server/IBlockData;)Z canDestroySpecial
djw net/minecraft/client/model/geom/TexOffs
	a x
	b y
djv net/minecraft/client/model/geom/ModelPart
	a xTexSize
	b yTexSize
	c x
	d y
	e z
	f xRot
	g yRot
	h zRot
	i mirror
	j visible
	k neverRender
	l cubes
	m children
	n id
	o translateX
	p translateY
	q translateZ
	r xTexOffs
	s yTexOffs
	t compiled
	u list
	a ()Ldjv; mirror
	a (F)V render
	a (FFF)V setPos
	a (FFFIII)Ldjv; addBox
	a (FFFIIIF)V addBox
	a (FFFIIIFZ)V addBox
	a (FFFIIIZ)Ldjv; addBox
	a (II)Ldjv; texOffs
	a (Ldjv;)V copyFrom
	a (Ljava/lang/String;FFFIIIFII)Ldjv; addBox
	b (F)V renderRollable
	b (II)Ldjv; setTexSize
	b (Ldjv;)V addChild
	c (F)V translateTo
	c (Ldjv;)V removeChild
	d (F)V compile
net/minecraft/server/WorldGenFeatureReplaceBlock net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureReplaceBlockConfiguration;)Z place
djy net/minecraft/client/model/package-info
djx net/minecraft/client/model/geom/package-info
djz net/minecraft/client/multiplayer/ClientAdvancements
	a LOGGER
	b minecraft
	c advancements
	d progress
	e listener
	f selectedTab
	a ()Lnet/minecraft/server/Advancements; getAdvancements
	a (Ldjz$a;)V setListener
	a (Lnet/minecraft/server/Advancement;Z)V setSelectedTab
	a (Lnet/minecraft/server/PacketPlayOutAdvancements;)V update
	b ()Ljava/util/Map; getProgress
net/minecraft/server/IWorldReader net/minecraft/world/level/LevelReader
	O ()Lnet/minecraft/server/ChunkStatus; statusForCollisions
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/Set;)Ljava/util/stream/Stream; getEntityCollisions
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/VoxelShape;)Z isUnobstructed
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Z isUnobstructed
	areChunksLoadedBetween (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Z hasChunksAt
	b (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/stream/Stream; getBlockCollisions
	b (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/Set;)Z noCollision
	c ()I getSkyDarken
	c (Lnet/minecraft/server/AxisAlignedBB;)Z noCollision
	c (Lnet/minecraft/server/BlockPosition;I)F getBrightness
	c (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	c (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/Set;)Ljava/util/stream/Stream; getCollisions
	containsLiquid (Lnet/minecraft/server/AxisAlignedBB;)Z containsAnyLiquid
	d (Lnet/minecraft/server/BlockPosition;I)I getMaxLocalRawBrightness
	e ()Z isClientSide
	getChunkAt (II)Lnet/minecraft/server/IChunkAccess; getChunk
	getChunkAt (IILnet/minecraft/server/ChunkStatus;)Lnet/minecraft/server/IChunkAccess; getChunk
	getChunkAt (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	getCubes (Lnet/minecraft/server/Entity;)Z noCollision
	getCubes (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;)Z noCollision
	getHighestBlockYAt (Lnet/minecraft/server/HeightMap$Type;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; getHeightmapPos
	getLightLevel (Lnet/minecraft/server/BlockPosition;)I getMaxLocalRawBrightness
	getLightLevel (Lnet/minecraft/server/BlockPosition;I)I getRawBrightness
	getWorldProvider ()Lnet/minecraft/server/WorldProvider; getDimension
	i (Lnet/minecraft/server/Entity;)Z isUnobstructed
	isAreaLoaded (IIIIII)Z hasChunksAt
	isChunkLoaded (II)Z hasChunk
	isEmpty (Lnet/minecraft/server/BlockPosition;)Z isEmptyBlock
	isLoaded (Lnet/minecraft/server/BlockPosition;)Z hasChunkAt
	u (Lnet/minecraft/server/BlockPosition;)Z canSeeSkyFromBelowWater
	v (Lnet/minecraft/server/BlockPosition;)F getBrightness
	w (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IChunkAccess; getChunk
	x (Lnet/minecraft/server/BlockPosition;)Z isWaterAt
arx$1 net/minecraft/world/entity/animal/Turtle$1
dkb net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl
	a LOGGER
	b minecraft
	c parent
	d updateStatus
	e connection
	f localGameProfile
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; authenticateServer
	a (Ljava/lang/String;Lnet/minecraft/server/PacketLoginInEncryptionBegin;Ljavax/crypto/SecretKey;)V lambda$handleHello$1
	a (Ljavax/crypto/SecretKey;Lio/netty/util/concurrent/Future;)V lambda$null$0
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/PacketLoginOutCustomPayload;)V handleCustomQuery
	a (Lnet/minecraft/server/PacketLoginOutDisconnect;)V handleDisconnect
	a (Lnet/minecraft/server/PacketLoginOutEncryptionBegin;)V handleHello
	a (Lnet/minecraft/server/PacketLoginOutSetCompression;)V handleCompression
	a (Lnet/minecraft/server/PacketLoginOutSuccess;)V handleGameProfile
	b ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
net/minecraft/server/EntityEnderDragon net/minecraft/world/entity/boss/enderdragon/EnderDragon
	PHASE DATA_PHASE
	bA head
	bB neck
	bC body
	bD tail1
	bE tail2
	bF tail3
	bG wing1
	bH wing2
	bI oFlapTime
	bJ flapTime
	bK inWall
	bL dragonDeathTime
	bN LOGGER
	bO CRYSTAL_DESTROY_TARGETING
	bP dragonFight
	bQ phaseManager
	bR growlTime
	bS sittingDamageReceived
	bT nodes
	bU nodeAdjacency
	bV openSet
	c positions
	children subEntities
	currentEnderCrystal nearestCrystal
	d posPointer
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	J ()V checkDespawn
	V ()V kill
	a (I)V dropExperience
	a (IF)[D getLatencyPos
	a (IILnet/minecraft/server/PathPoint;)Lnet/minecraft/server/PathEntity; findPath
	a (I[D[D)F getHeadPartYOffset
	a (Ljava/util/List;)V knockBack
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityComplexPart;Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityEnderCrystal;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DamageSource;)V onCrystalDestroyed
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)Lnet/minecraft/server/PathEntity; reconstructPath
	aH ()Z isPickable
	b (Ljava/util/List;)V hurt
	b (Lnet/minecraft/server/AxisAlignedBB;)Z checkWalls
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bu ()Z canChangeDimensions
	c (Lnet/minecraft/server/MobEffect;)Z addEffect
	cU ()F getSoundVolume
	cc ()Lnet/minecraft/server/SoundCategory; getSoundSource
	cl ()V registerAttributes
	co ()V tickDeath
	d (D)F rotWrap
	dT ()[Lnet/minecraft/server/EntityComplexPart; getSubEntities
	dW ()V checkCrystals
	dealDamage (Lnet/minecraft/server/DamageSource;F)Z reallyHurt
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	getDragonControllerManager ()Lnet/minecraft/server/DragonControllerManager; getPhaseManager
	getEnderDragonBattle ()Lnet/minecraft/server/EnderDragonBattle; getDragonFight
	k ()V aiStep
	l ()I findClosestNode
	l (DDD)I findClosestNode
	n (Lnet/minecraft/server/Entity;)Z canRide
	u (F)Lnet/minecraft/server/Vec3D; getHeadLookVector
	u_ ()V defineSynchedData
	v (F)F getHeadYOffset
dka net/minecraft/client/multiplayer/ClientChunkCache
	a LOGGER
	b emptyChunk
	c lightEngine
	d storage
	e level
	a ()Lorg/apache/logging/log4j/Logger; access$1000
	a (I)V updateViewRadius
	a (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	a (Ldka;)Ldkf; access$800
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/server/BlockPosition;)Z isTickingChunk
	a (Lnet/minecraft/server/Chunk;II)Z isValidChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Z isEntityTickingChunk
	a (Lnet/minecraft/server/Entity;)Z isEntityTickingChunk
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;)V onLightUpdate
	a (Lnet/minecraft/server/World;IILnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/NBTTagCompound;IZ)Lnet/minecraft/server/Chunk; replaceWithPacketData
	b (I)I calculateStorageRange
	b (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/Chunk; getChunk
	b (Ldka;)Ldka$a; access$900
	d (II)V drop
	e ()Ljava/lang/String; gatherStats
	e (II)V updateViewCenter
	g ()Lnet/minecraft/server/ChunkGenerator; getGenerator
	h ()I getLoadedChunksCount
	k ()Lnet/minecraft/server/LightEngine; getLightEngine
	l ()Lnet/minecraft/server/IBlockAccess; getLevel
dkd net/minecraft/client/multiplayer/ClientSuggestionProvider
	a connection
	b minecraft
	c pendingSuggestionsId
	d pendingSuggestionsFuture
	a (D)Ljava/lang/String; prettyPrint
	a (I)Ljava/lang/String; prettyPrint
	a (ILcom/mojang/brigadier/suggestion/Suggestions;)V completeCustomSuggestions
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	c (I)Z hasPermission
	l ()Ljava/util/Collection; getOnlinePlayerNames
	m ()Ljava/util/Collection; getAllTeams
	n ()Ljava/util/Collection; getAvailableSoundEvents
	o ()Ljava/util/stream/Stream; getRecipeNames
	p ()Ljava/util/Collection; getSelectedEntities
	q ()Ljava/util/Collection; getRelevantCoordinates
	r ()Ljava/util/Collection; getAbsoluteCoordinates
dkc net/minecraft/client/multiplayer/ClientPacketListener
	a LOGGER
	b connection
	c localGameProfile
	d callbackScreen
	e minecraft
	f level
	g started
	h playerInfoMap
	i advancements
	j suggestionsProvider
	k tags
	l debugQueryHandler
	m serverChunkRadius
	n random
	o commands
	p recipeManager
	q id
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (IILnet/minecraft/server/LightEngine;Lnet/minecraft/server/EnumSkyBlock;IILjava/util/Iterator;)V readSectionList
	a (Lcxr;Ldfc;)V lambda$handleAddOrRemoveRecipes$2
	a (Lcxr;Lnet/minecraft/server/IRecipe;)V lambda$handleAddOrRemoveRecipes$1
	a (Ljava/lang/String;)Ldkg; getPlayerInfo
	a (Ljava/lang/String;Ljava/lang/String;)V lambda$handleResourcePack$4
	a (Ljava/lang/String;Ljava/lang/String;Z)V lambda$null$3
	a (Ljava/lang/Throwable;)Ljava/lang/Void; lambda$downloadCallback$6
	a (Ljava/util/UUID;)Ldkg; getPlayerInfo
	a (Ljava/util/concurrent/CompletableFuture;)V downloadCallback
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/IRecipe;)V lambda$handlePlaceRecipe$7
	a (Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ItemStack; findTotem
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/Packet;)V send
	a (Lnet/minecraft/server/PacketPlayInResourcePackStatus$EnumResourcePackStatus;)V send
	a (Lnet/minecraft/server/PacketPlayOutAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/server/PacketPlayOutAdvancements;)V handleUpdateAdvancementsPacket
	a (Lnet/minecraft/server/PacketPlayOutAnimation;)V handleAnimate
	a (Lnet/minecraft/server/PacketPlayOutAttachEntity;)V handleEntityLinkPacket
	a (Lnet/minecraft/server/PacketPlayOutAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/server/PacketPlayOutBlockAction;)V handleBlockEvent
	a (Lnet/minecraft/server/PacketPlayOutBlockBreak;)V handleBlockBreakAck
	a (Lnet/minecraft/server/PacketPlayOutBlockBreakAnimation;)V handleBlockDestruction
	a (Lnet/minecraft/server/PacketPlayOutBlockChange;)V handleBlockUpdate
	a (Lnet/minecraft/server/PacketPlayOutBoss;)V handleBossUpdate
	a (Lnet/minecraft/server/PacketPlayOutCamera;)V handleSetCamera
	a (Lnet/minecraft/server/PacketPlayOutChat;)V handleChat
	a (Lnet/minecraft/server/PacketPlayOutCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/server/PacketPlayOutCollect;)V handleTakeItemEntity
	a (Lnet/minecraft/server/PacketPlayOutCombatEvent;)V handlePlayerCombat
	a (Lnet/minecraft/server/PacketPlayOutCommands;)V handleCommands
	a (Lnet/minecraft/server/PacketPlayOutCustomPayload;)V handleCustomPayload
	a (Lnet/minecraft/server/PacketPlayOutCustomSoundEffect;)V handleCustomSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutEntity;)V handleMoveEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityDestroy;)V handleRemoveEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityEffect;)V handleUpdateMobEffect
	a (Lnet/minecraft/server/PacketPlayOutEntityEquipment;)V handleSetEquippedItem
	a (Lnet/minecraft/server/PacketPlayOutEntityHeadRotation;)V handleRotateMob
	a (Lnet/minecraft/server/PacketPlayOutEntityMetadata;)V handleSetEntityData
	a (Lnet/minecraft/server/PacketPlayOutEntitySound;)V handleSoundEntityEvent
	a (Lnet/minecraft/server/PacketPlayOutEntityStatus;)V handleEntityEvent
	a (Lnet/minecraft/server/PacketPlayOutEntityTeleport;)V handleTeleportEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityVelocity;)V handleSetEntityMotion
	a (Lnet/minecraft/server/PacketPlayOutExperience;)V handleSetExperience
	a (Lnet/minecraft/server/PacketPlayOutExplosion;)V handleExplosion
	a (Lnet/minecraft/server/PacketPlayOutGameStateChange;)V handleGameEvent
	a (Lnet/minecraft/server/PacketPlayOutHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/server/PacketPlayOutKeepAlive;)V handleKeepAlive
	a (Lnet/minecraft/server/PacketPlayOutKickDisconnect;)V handleDisconnect
	a (Lnet/minecraft/server/PacketPlayOutLightUpdate;)V handleLightUpdatePacked
	a (Lnet/minecraft/server/PacketPlayOutLogin;)V handleLogin
	a (Lnet/minecraft/server/PacketPlayOutLookAt;)V handleLookAt
	a (Lnet/minecraft/server/PacketPlayOutMap;)V handleMapItemData
	a (Lnet/minecraft/server/PacketPlayOutMapChunk;)V handleLevelChunk
	a (Lnet/minecraft/server/PacketPlayOutMount;)V handleSetEntityPassengersPacket
	a (Lnet/minecraft/server/PacketPlayOutMultiBlockChange;)V handleChunkBlocksUpdate
	a (Lnet/minecraft/server/PacketPlayOutNBTQuery;)V handleTagQueryPacket
	a (Lnet/minecraft/server/PacketPlayOutNamedEntitySpawn;)V handleAddPlayer
	a (Lnet/minecraft/server/PacketPlayOutNamedSoundEffect;)V handleSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutOpenBook;)V handleOpenBook
	a (Lnet/minecraft/server/PacketPlayOutOpenSignEditor;)V handleOpenSignEditor
	a (Lnet/minecraft/server/PacketPlayOutOpenWindow;)V handleOpenScreen
	a (Lnet/minecraft/server/PacketPlayOutOpenWindowHorse;)V handleHorseScreenOpen
	a (Lnet/minecraft/server/PacketPlayOutOpenWindowMerchant;)V handleMerchantOffers
	a (Lnet/minecraft/server/PacketPlayOutPlayerInfo;)V handlePlayerInfo
	a (Lnet/minecraft/server/PacketPlayOutPlayerListHeaderFooter;)V handleTabListCustomisation
	a (Lnet/minecraft/server/PacketPlayOutPosition;)V handleMovePlayer
	a (Lnet/minecraft/server/PacketPlayOutRecipeUpdate;)V handleUpdateRecipes
	a (Lnet/minecraft/server/PacketPlayOutRecipes;)V handleAddOrRemoveRecipes
	a (Lnet/minecraft/server/PacketPlayOutRemoveEntityEffect;)V handleRemoveMobEffect
	a (Lnet/minecraft/server/PacketPlayOutResourcePackSend;)V handleResourcePack
	a (Lnet/minecraft/server/PacketPlayOutRespawn;)V handleRespawn
	a (Lnet/minecraft/server/PacketPlayOutScoreboardDisplayObjective;)V handleSetDisplayObjective
	a (Lnet/minecraft/server/PacketPlayOutScoreboardObjective;)V handleAddObjective
	a (Lnet/minecraft/server/PacketPlayOutScoreboardScore;)V handleSetScore
	a (Lnet/minecraft/server/PacketPlayOutScoreboardTeam;)V handleSetPlayerTeamPacket
	a (Lnet/minecraft/server/PacketPlayOutSelectAdvancementTab;)V handleSelectAdvancementsTab
	a (Lnet/minecraft/server/PacketPlayOutServerDifficulty;)V handleChangeDifficulty
	a (Lnet/minecraft/server/PacketPlayOutSetCooldown;)V handleItemCooldown
	a (Lnet/minecraft/server/PacketPlayOutSetSlot;)V handleContainerSetSlot
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntity;)V handleAddEntity
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityExperienceOrb;)V handleAddExperienceOrb
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityLiving;)V handleAddMob
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityPainting;)V handleAddPainting
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityWeather;)V handleAddGlobalEntity
	a (Lnet/minecraft/server/PacketPlayOutSpawnPosition;)V handleSetSpawn
	a (Lnet/minecraft/server/PacketPlayOutStatistic;)V handleAwardStats
	a (Lnet/minecraft/server/PacketPlayOutStopSound;)V handleStopSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutTabComplete;)V handleCommandSuggestions
	a (Lnet/minecraft/server/PacketPlayOutTags;)V handleUpdateTags
	a (Lnet/minecraft/server/PacketPlayOutTileEntityData;)V handleBlockEntityData
	a (Lnet/minecraft/server/PacketPlayOutTitle;)V handleSetTitles
	a (Lnet/minecraft/server/PacketPlayOutTransaction;)V handleContainerAck
	a (Lnet/minecraft/server/PacketPlayOutUnloadChunk;)V handleForgetLevelChunk
	a (Lnet/minecraft/server/PacketPlayOutUpdateAttributes;)V handleUpdateAttributes
	a (Lnet/minecraft/server/PacketPlayOutUpdateHealth;)V handleSetHealth
	a (Lnet/minecraft/server/PacketPlayOutUpdateTime;)V handleSetTime
	a (Lnet/minecraft/server/PacketPlayOutVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/server/PacketPlayOutViewCentre;)V handleSetChunkCacheCenter
	a (Lnet/minecraft/server/PacketPlayOutViewDistance;)V handleSetChunkCacheRadius
	a (Lnet/minecraft/server/PacketPlayOutWindowData;)V handleContainerSetData
	a (Lnet/minecraft/server/PacketPlayOutWindowItems;)V handleContainerContent
	a (Lnet/minecraft/server/PacketPlayOutWorldBorder;)V handleSetBorder
	a (Lnet/minecraft/server/PacketPlayOutWorldEvent;)V handleLevelEvent
	a (Lnet/minecraft/server/PacketPlayOutWorldParticles;)V handleParticleEvent
	b ()Ldkd; getSuggestionsProvider
	b (Ljava/lang/String;)Z validateResourcePackUrl
	c ()V cleanup
	d ()Lnet/minecraft/server/CraftingManager; getRecipeManager
	e ()Ljava/util/Collection; getOnlinePlayers
	f ()Lcom/mojang/authlib/GameProfile; getLocalGameProfile
	g ()Ldjz; getAdvancements
	h ()Lcom/mojang/brigadier/CommandDispatcher; getCommands
	i ()Ldkf; getLevel
	j ()Lnet/minecraft/server/TagRegistry; getTags
	k ()Lcxu; getDebugQueryHandler
	l ()Ljava/util/UUID; getId
	m ()V lambda$downloadCallback$5
	n ()V lambda$handleGameEvent$0
dkf net/minecraft/client/multiplayer/MultiPlayerLevel
	a globalEntities
	b entitiesById
	c connection
	u levelRenderer
	v minecraft
	w players
	x delayUntilNextMoodSound
	y scoreboard
	z mapData
	A ()Ljava/util/List; players
	D ()Lnet/minecraft/server/Scoreboard; getScoreboard
	E ()Lnet/minecraft/server/IChunkProvider; getChunkSource
	F ()Lnet/minecraft/server/TickList; getLiquidTicks
	G ()Lnet/minecraft/server/TickList; getBlockTicks
	Q ()V disconnect
	a (DDDDDDLnet/minecraft/server/NBTTagCompound;)V createFireworks
	a (DDDDDLnet/minecraft/server/ParticleParam;)V spawnFluidParticle
	a (DDDLnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FFZ)V playLocalSound
	a (I)Lnet/minecraft/server/Entity; getEntity
	a (III)V animateTick
	a (IIIILjava/util/Random;ZLnet/minecraft/server/BlockPosition$MutableBlockPosition;)V doAnimateTick
	a (ILdmm;)V addPlayer
	a (ILnet/minecraft/server/BlockPosition;I)V destroyBlockProgress
	a (ILnet/minecraft/server/Entity;)V putNonPlayerEntity
	a (ILnet/minecraft/server/World;Lnet/minecraft/server/WorldProvider;)Lnet/minecraft/server/IChunkProvider; lambda$new$0
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldMap; getMapData
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;I)V sendBlockUpdated
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/ParticleParam;Z)V trySpawnDripParticles
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/VoxelShape;D)V spawnParticle
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FFZ)V playLocalSound
	a (Lnet/minecraft/server/Chunk;)V unload
	a (Lnet/minecraft/server/CrashReport;)Lnet/minecraft/server/CrashReportSystemDetails; fillReportDetails
	a (Lnet/minecraft/server/Entity;)V tickNonPassenger
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)V tickPassenger
	a (Lnet/minecraft/server/EntityHuman;DDDLnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EntityHuman;ILnet/minecraft/server/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EntityLightning;)V addLightning
	a (Lnet/minecraft/server/Packet;)V sendPacketToServer
	a (Lnet/minecraft/server/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/server/ParticleParam;ZDDDDDD)V addParticle
	a (Lnet/minecraft/server/Scoreboard;)V setScoreboard
	a (Lnet/minecraft/server/WorldMap;)V setMapData
	b ()Ljava/lang/Iterable; entitiesForRendering
	b (II)Z hasChunk
	b (III)V setSectionDirtyWithNeighbors
	b (ILnet/minecraft/server/BlockPosition;I)V globalLevelEvent
	b (ILnet/minecraft/server/Entity;)V addEntity
	b (J)V setDayTime
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V setKnownState
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V setBlocksDirty
	b (Lnet/minecraft/server/Chunk;)V reAddEntitiesToChunk
	b (Lnet/minecraft/server/Entity;)V updateChunkPos
	b (Lnet/minecraft/server/ParticleParam;DDDDDD)V addAlwaysVisibleParticle
	b (Lnet/minecraft/server/ParticleParam;ZDDDDDD)V addAlwaysVisibleParticle
	d ()V tickEntities
	d (I)V removeEntity
	d (Lnet/minecraft/server/Entity;)V onEntityRemoved
	e (Lnet/minecraft/server/Entity;)Ljava/lang/String; lambda$tickNonPassenger$2
	f ()I getEntityCount
	f (Lnet/minecraft/server/Entity;)V lambda$tickEntities$1
	g ()V removeAllPendingEntityRemovals
	h ()Ldka; getChunkSource
	j ()V playMoodSounds
	l ()Ljava/lang/String; lambda$fillReportDetails$4
	m ()Ljava/lang/String; lambda$fillReportDetails$3
	s ()Lnet/minecraft/server/CraftingManager; getRecipeManager
	t ()Lnet/minecraft/server/TagRegistry; getTagManager
	v ()V checkSession
	y ()I getFreeMapId
bt$b net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance
	a villager
	b item
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityVillagerAbstract;Lnet/minecraft/server/ItemStack;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lbt$b; tradedWithVillager
net/minecraft/server/NBTTagLongArray net/minecraft/nbt/LongArrayTag
	f data
	a ()B getId
	a (I)Lnet/minecraft/server/NBTTagLong; get
	a (ILnet/minecraft/server/NBTBase;)Z setTag
	a (ILnet/minecraft/server/NBTTagLong;)Lnet/minecraft/server/NBTTagLong; set
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)V load
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (Ljava/util/List;)[J toArray
	a_ ()I getElementType
	b ()Lnet/minecraft/server/NBTBase; copy
	b (I)Lnet/minecraft/server/NBTTagLong; remove
	b (ILnet/minecraft/server/NBTBase;)Z addTag
	b (ILnet/minecraft/server/NBTTagLong;)V add
	c ()Lnet/minecraft/server/NBTTagLongArray; copy
	c (I)Lnet/minecraft/server/NBTBase; remove
	c (ILnet/minecraft/server/NBTBase;)V add
	d (ILnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; set
	getLongs ()[J getAsLongArray
dke net/minecraft/client/multiplayer/MultiPlayerGameMode
	a LOGGER
	b minecraft
	c connection
	d destroyBlockPos
	e destroyingItem
	f destroyProgress
	g destroyTicks
	h destroyDelay
	i isDestroying
	j localPlayerMode
	k unAckedActions
	l carriedIndex
	a ()Z canHurtPlayer
	a (I)V handlePickItem
	a (II)V handleInventoryButtonClick
	a (IIILnet/minecraft/server/InventoryClickType;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ItemStack; handleInventoryMouseClick
	a (ILnet/minecraft/server/IRecipe;Z)V handlePlaceRecipe
	a (Lcyc;Ldke;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V creativeDestroyBlock
	a (Ldkf;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType;Z)V handleBlockBreakAck
	a (Ldkf;Lnet/minecraft/server/StatisticManager;Lcxr;)Ldmp; createPlayer
	a (Ldmp;Ldkf;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; useItemOn
	a (Lnet/minecraft/server/BlockPosition;)Z destroyBlock
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z startDestroyBlock
	a (Lnet/minecraft/server/EntityHuman;)V adjustPlayer
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;)V attack
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interact
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;Lnet/minecraft/server/MovingObjectPositionEntity;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interactAt
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; useItem
	a (Lnet/minecraft/server/EnumGamemode;)V setLocalMode
	a (Lnet/minecraft/server/ItemStack;)V handleCreativeModeItemDrop
	a (Lnet/minecraft/server/ItemStack;I)V handleCreativeModeItemAdd
	a (Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V sendBlockAction
	b ()V stopDestroyBlock
	b (Lnet/minecraft/server/BlockPosition;)Z sameDestroyTarget
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z continueDestroyBlock
	b (Lnet/minecraft/server/EntityHuman;)V releaseUsingItem
	c ()F getPickRange
	d ()V tick
	e ()Z hasExperience
	f ()Z hasMissTime
	g ()Z hasInfiniteItems
	h ()Z hasFarPickRange
	i ()Z isServerControlledInventory
	j ()Z isAlwaysFlying
	k ()Lnet/minecraft/server/EnumGamemode; getPlayerMode
	l ()Z isDestroying
	m ()V ensureHasSentCarriedItem
dkh net/minecraft/client/multiplayer/ServerAddress
	a host
	b port
	a ()Ljava/lang/String; getHost
	a (Ljava/lang/String;)Ldkh; parseString
	a (Ljava/lang/String;I)I parseInt
	b ()I getPort
	b (Ljava/lang/String;)[Ljava/lang/String; lookupSrv
net/minecraft/server/ItemSnowball net/minecraft/world/item/SnowballItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
dkg net/minecraft/client/multiplayer/PlayerInfo
	a profile
	b textureLocations
	c gameMode
	d latency
	e pendingTextures
	f skinModel
	g tabListDisplayName
	h lastHealth
	i displayHealth
	j lastHealthTime
	k healthBlinkTime
	l renderVisibilityId
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	a (I)V setLatency
	a (J)V setLastHealthTime
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lnet/minecraft/server/MinecraftKey;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)V lambda$registerTextures$0
	a (Lnet/minecraft/server/EnumGamemode;)V setGameMode
	a (Lnet/minecraft/server/IChatBaseComponent;)V setTabListDisplayName
	b ()Lnet/minecraft/server/EnumGamemode; getGameMode
	b (I)V setLastHealth
	b (J)V setHealthBlinkTime
	c ()I getLatency
	c (I)V setDisplayHealth
	c (J)V setRenderVisibilityId
	d ()Z isCapeLoaded
	e ()Z isSkinLoaded
	f ()Ljava/lang/String; getModelName
	g ()Lnet/minecraft/server/MinecraftKey; getSkinLocation
	h ()Lnet/minecraft/server/MinecraftKey; getCapeLocation
	i ()Lnet/minecraft/server/MinecraftKey; getElytraLocation
	j ()Lnet/minecraft/server/ScoreboardTeam; getTeam
	k ()V registerTextures
	l ()Lnet/minecraft/server/IChatBaseComponent; getTabListDisplayName
	m ()I getLastHealth
	n ()I getDisplayHealth
	o ()J getLastHealthTime
	p ()J getHealthBlinkTime
	q ()J getRenderVisibilityId
dkj net/minecraft/client/multiplayer/ServerList
	a LOGGER
	b minecraft
	c serverList
	a ()V load
	a (I)Ldki; get
	a (II)V swap
	a (ILdki;)V replace
	a (Ldki;)V remove
	b ()V save
	b (Ldki;)V add
	c ()I size
	c (Ldki;)V saveSingleServer
dki net/minecraft/client/multiplayer/ServerData
	a name
	b ip
	c status
	d motd
	e ping
	f protocol
	g version
	h pinged
	i playerList
	j packStatus
	k iconB64
	l lan
	a ()Lnet/minecraft/server/NBTTagCompound; write
	a (Ldki$a;)V setResourcePackStatus
	a (Ldki;)V copyFrom
	a (Ljava/lang/String;)V setIconB64
	a (Lnet/minecraft/server/NBTTagCompound;)Ldki; read
	b ()Ldki$a; getResourcePackStatus
	c ()Ljava/lang/String; getIconB64
	d ()Z isLan
dkl net/minecraft/client/multiplayer/package-info
net/minecraft/server/WorldGenFeatureCircleConfiguration net/minecraft/world/level/levelgen/feature/DiskConfiguration
	a state
	b radius
	c ySize
	d targets
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureCircleConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/IBlockData;)Ljava/lang/Object; lambda$serialize$0
net/minecraft/server/ArgumentAnchor net/minecraft/commands/arguments/EntityAnchorArgument
	a EXAMPLES
	b ERROR_INVALID
	a ()Lnet/minecraft/server/ArgumentAnchor; anchor
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ArgumentAnchor$Anchor; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ArgumentAnchor$Anchor; getAnchor
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
dkk net/minecraft/client/multiplayer/ServerStatusPinger
	a SPLITTER
	b LOGGER
	c connections
	a ()V tick
	a (Ldki;)V pingServer
	a (Ldkk;Ldki;)V access$100
	b ()V removeAll
	b (Ldki;)V pingLegacyServer
	c ()Lorg/apache/logging/log4j/Logger; access$000
	d ()Lcom/google/common/base/Splitter; access$200
dkn net/minecraft/client/particle/AttackSweepParticle
	C sprites
	a ()V tick
	a (F)I getLightColor
	b ()Ldlr; getRenderType
net/minecraft/server/DragonControllerLanding net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase
	b targetLocation
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	h ()F getTurnSpeed
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
dkm net/minecraft/client/package-info
dkp net/minecraft/client/particle/BreakingItemParticle
	C uo
	F vo
	b ()Ldlr; getRenderType
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
dko net/minecraft/client/particle/BarrierParticle
	b ()Ldlr; getRenderType
	b (F)F getQuadSize
crc$1 net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$1
net/minecraft/server/CommandFunction net/minecraft/server/commands/FunctionCommand
	a SUGGEST_FUNCTION
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I runFunction
dom$a net/minecraft/client/renderer/block/model/ItemTransforms$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ldol; getTransform
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldom; deserialize
dkr net/minecraft/client/particle/BubbleParticle
	a ()V tick
	b ()Ldlr; getRenderType
dkq net/minecraft/client/particle/BubbleColumnUpParticle
	a ()V tick
	b ()Ldlr; getRenderType
net/minecraft/server/PacketPlayOutEntity net/minecraft/network/protocol/game/ClientboundMoveEntityPacket
	a entityId
	b xa
	c ya
	d za
	e yRot
	f xRot
	g onGround
	h hasRot
	a (D)J entityToPacket
	a (JJJ)Lnet/minecraft/server/Vec3D; packetToEntity
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getEntity
	b ()S getXa
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()S getYa
	d ()S getZa
	e ()B getyRot
	f ()B getxRot
	g ()Z hasRotation
	h ()Z isOnGround
net/minecraft/server/LootItemFunctionCopyNBT net/minecraft/world/level/storage/loot/functions/CopyNbtFunction
	a source
	c operations
	d ENTITY_GETTER
	e BLOCK_ENTITY_GETTER
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ljava/lang/String;)Lcr$h; access$000
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/NBTBase;Lcpz$b;)V lambda$run$0
	a (Lnet/minecraft/server/LootItemFunctionCopyNBT$Source;)Lcpz$a; copyData
	a (Lnet/minecraft/server/LootItemFunctionCopyNBT;)Lnet/minecraft/server/LootItemFunctionCopyNBT$Source; access$800
	a (Lnet/minecraft/server/TileEntity;)Lnet/minecraft/server/NBTBase; lambda$static$1
	b ()Ljava/util/function/Function; access$600
	b (Ljava/lang/String;)Lcr$h; compileNbtPath
	b (Lnet/minecraft/server/LootItemFunctionCopyNBT;)Ljava/util/List; access$900
	c ()Ljava/util/function/Function; access$700
dkt net/minecraft/client/particle/CampfireSmokeParticle
	a ()V tick
	b ()Ldlr; getRenderType
net/minecraft/server/BlockCoral net/minecraft/world/level/block/CoralBlock
	a deadBlock
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z scanForWater
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
dks net/minecraft/client/particle/BubblePopParticle
	C sprites
	a ()V tick
	b ()Ldlr; getRenderType
dkv net/minecraft/client/particle/DragonBreathParticle
	C hasHitGround
	F sprites
	a ()V tick
	b ()Ldlr; getRenderType
	b (F)F getQuadSize
net/minecraft/server/BiomeExtremeHillsWithTreesMutated net/minecraft/world/level/biome/ModifiedGravellyMountainsBiome
dku net/minecraft/client/particle/CritParticle
	a ()V tick
	b ()Ldlr; getRenderType
	b (F)F getQuadSize
xc$a net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream
	a wrapped
	b message
	c closed
fx$2 net/minecraft/core/dispenser/DispenseItemBehavior$10
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
dkx net/minecraft/client/particle/DustParticle
	C sprites
	a ()V tick
	b ()Ldlr; getRenderType
	b (F)F getQuadSize
net/minecraft/server/ItemItemFrame net/minecraft/world/item/ItemFrameItem
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)Z mayPlace
fx$3 net/minecraft/core/dispenser/DispenseItemBehavior$11
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntitySmallFireball;)V lambda$execute$0
dkw net/minecraft/client/particle/DripParticle
	C type
	a ()V tick
	a (F)I getLightColor
	b ()Ldlr; getRenderType
	c (F)F getBrightness
	g ()V preMoveUpdate
	h ()V postMoveUpdate
fx$4 net/minecraft/core/dispenser/DispenseItemBehavior$12
	b defaultDispenseItemBehavior
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
dkz net/minecraft/client/particle/EndRodParticle
	a (DDD)V move
net/minecraft/server/CommandRecipe net/minecraft/server/commands/RecipeCommand
	a ERROR_GIVE_FAILED
	b ERROR_TAKE_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Ljava/util/Collection;)I giveRecipes
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Ljava/util/Collection;)I takeRecipes
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
fx$5 net/minecraft/core/dispenser/DispenseItemBehavior$13
	b defaultDispenseItemBehavior
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
dky net/minecraft/client/particle/EnchantmentTableParticle
	C xStart
	F yStart
	G zStart
	a ()V tick
	a (DDD)V move
	a (F)I getLightColor
	b ()Ldlr; getRenderType
	c (F)F getBrightness
fx$6 net/minecraft/core/dispenser/DispenseItemBehavior$14
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
fx$7 net/minecraft/core/dispenser/DispenseItemBehavior$15
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
fx$8 net/minecraft/core/dispenser/DispenseItemBehavior$16
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
fx$9 net/minecraft/core/dispenser/DispenseItemBehavior$17
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
dla net/minecraft/client/particle/ExplodeParticle
	C sprites
	a ()V tick
	b ()Ldlr; getRenderType
dlc net/minecraft/client/particle/FireworkParticles
dlb net/minecraft/client/particle/FallingDustParticle
	C rotSpeed
	F sprites
	a ()V tick
	b ()Ldlr; getRenderType
	b (F)F getQuadSize
net/minecraft/server/WeightedRandom net/minecraft/util/WeighedRandom
	a (Ljava/util/List;)I getTotalWeight
	a (Ljava/util/List;I)Lnet/minecraft/server/WeightedRandom$WeightedRandomChoice; getWeightedItem
	a (Ljava/util/Random;Ljava/util/List;)Lnet/minecraft/server/WeightedRandom$WeightedRandomChoice; getRandomItem
	a (Ljava/util/Random;Ljava/util/List;I)Lnet/minecraft/server/WeightedRandom$WeightedRandomChoice; getRandomItem
dle net/minecraft/client/particle/HeartParticle
	a ()V tick
	b ()Ldlr; getRenderType
	b (F)F getQuadSize
net/minecraft/server/Containers net/minecraft/world/inventory/MenuType
	GENERIC_3X3 GENERIC_3x3
	GENERIC_9X1 GENERIC_9x1
	GENERIC_9X2 GENERIC_9x2
	GENERIC_9X3 GENERIC_9x3
	GENERIC_9X4 GENERIC_9x4
	GENERIC_9X5 GENERIC_9x5
	GENERIC_9X6 GENERIC_9x6
	x constructor
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; create
	a (Ljava/lang/String;Lnet/minecraft/server/Containers$Supplier;)Lnet/minecraft/server/Containers; register
	b (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerLectern; lambda$static$0
dld net/minecraft/client/particle/FlameParticle
	a ()V tick
	a (DDD)V move
	a (F)I getLightColor
	b ()Ldlr; getRenderType
	b (F)F getQuadSize
	c (F)F getBrightness
dlg net/minecraft/client/particle/HugeExplosionSeedParticle
	C life
	D lifeTime
	a ()V tick
dlf net/minecraft/client/particle/HugeExplosionParticle
	C sprites
	a ()V tick
	a (F)I getLightColor
	b ()Ldlr; getRenderType
dli net/minecraft/client/particle/LargeSmokeParticle
arx$i net/minecraft/world/entity/animal/Turtle$TurtleTemptGoal
	a TEMPT_TARGETING
	b turtle
	c speedModifier
	d player
	e calmDown
	f items
	a ()Z canUse
	a (Lnet/minecraft/server/ItemStack;)Z shouldFollowItem
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
dlh net/minecraft/client/particle/ItemPickupParticle
	C itemEntity
	D target
	E life
	F lifeTime
	G yOffs
	H entityRenderDispatcher
	a ()V tick
	a (Lcuw;Lcxq;FFFFFF)V render
	b ()Ldlr; getRenderType
arx$j net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal
	a turtle
	b speedModifier
	c stuck
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
dlk net/minecraft/client/particle/MobAppearanceParticle
	C displayEntity
	a ()V tick
	a (Lcuw;Lcxq;FFFFFF)V render
	b ()Ldlr; getRenderType
dlj net/minecraft/client/particle/LavaParticle
	a ()V tick
	a (F)I getLightColor
	b ()Ldlr; getRenderType
	b (F)F getQuadSize
	c (F)F getBrightness
dlm net/minecraft/client/particle/NoteParticle
	a ()V tick
	b ()Ldlr; getRenderType
	b (F)F getQuadSize
arx$e net/minecraft/world/entity/animal/Turtle$TurtleMoveControl
	i turtle
	a ()V tick
	g ()V updateSpeed
dll net/minecraft/client/particle/NoRenderParticle
	a (Lcuw;Lcxq;FFFFFF)V render
	b ()Ldlr; getRenderType
arx$f net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal
	a ()Z canUse
dlo net/minecraft/client/particle/ParticleDescription
	a textures
	a ()Ljava/util/List; getTextures
	a (Lcom/google/gson/JsonElement;)Ljava/lang/String; lambda$fromJson$0
	a (Lcom/google/gson/JsonObject;)Ldlo; fromJson
arx$g net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
	a (Lnet/minecraft/server/BlockPosition;)Z isStableDestination
dln net/minecraft/client/particle/Particle
	A yOff
	B zOff
	C INITIAL_AABB
	D bb
	a level
	b xo
	c yo
	d zo
	e x
	f y
	g z
	h xd
	i yd
	j zd
	k onGround
	l hasPhysics
	m removed
	n bbWidth
	o bbHeight
	p random
	q age
	r lifetime
	s gravity
	t rCol
	u gCol
	v bCol
	w alpha
	x roll
	y oRoll
	z xOff
	a ()V tick
	a (DDD)V move
	a (F)I getLightColor
	a (FF)V setSize
	a (FFF)V setColor
	a (I)V setLifetime
	a (Lcuw;Lcxq;FFFFFF)V render
	a (Lnet/minecraft/server/AxisAlignedBB;)V setBoundingBox
	b ()Ldlr; getRenderType
	b (DDD)V setPos
	c (F)F getBrightness
	d (F)Ldln; setPower
	e (F)Ldln; scale
	f (F)V setAlpha
	i ()I getLifetime
	j ()V remove
	k ()V setLocationFromBoundingbox
	l ()Z isAlive
	m ()Lnet/minecraft/server/AxisAlignedBB; getBoundingBox
arx$h net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal
	h turtle
	a ()Z canUse
dlq net/minecraft/client/particle/ParticleProvider
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
arx$a net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal
	d turtle
	a ()Z canUse
	g ()V breed
net/minecraft/server/BlockVine net/minecraft/world/level/block/VineBlock
	f PROPERTY_BY_DIRECTION
	g UP_AABB
	h EAST_AABB
	i WEST_AABB
	j SOUTH_AABB
	k NORTH_AABB
	a (Lbvu$a;)V createBlockStateDefinition
	a (Ljava/util/Map$Entry;)Z lambda$static$0
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z canSpread
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isAcceptableNeighbour
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Lnet/minecraft/server/IBlockData; copyRandomFaces
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z canSupportAtFace
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	canSpread (Lnet/minecraft/server/IBlockData;)Z hasHorizontalConnection
	getDirection (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockStateBoolean; getPropertyForFace
	j (Lnet/minecraft/server/IBlockData;)Z hasFaces
	m (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getUpdatedState
	q (Lnet/minecraft/server/IBlockData;)I countFaces
dlp net/minecraft/client/particle/ParticleEngine
	a level
	b RENDER_ORDER
	c particles
	d trackingEmitters
	e textureManager
	f random
	g providers
	h particlesToAdd
	i spriteSets
	j textureAtlas
	a ()V close
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$reload$2
	a (Lcxq;F)V render
	a (Ldln;)V add
	a (Ldlr;)Ljava/util/Queue; lambda$tick$7
	a (Ldlr;Ljava/util/Queue;)V lambda$tick$6
	a (Ldxb;Lnet/minecraft/server/MinecraftKey;Ljava/util/List;)V lambda$null$4
	a (Ljava/util/Collection;)V tickParticleList
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V crack
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V destroy
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;DDDDDD)V lambda$destroy$8
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/ParticleParam;)V createTrackingEmitter
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/ParticleParam;I)V createTrackingEmitter
	a (Lnet/minecraft/server/GameProfilerFiller;Ljava/util/Map;Ldxa$a;)V lambda$reload$5
	a (Lnet/minecraft/server/GameProfilerFiller;Ljava/util/Map;Lnet/minecraft/server/IResourceManager;Ljava/lang/Void;)Ldxa$a; lambda$reload$3
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/Map;Ljava/util/concurrent/Executor;Lnet/minecraft/server/MinecraftKey;)Ljava/util/concurrent/CompletableFuture; lambda$reload$1
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;Ljava/util/Map;)V loadParticleDescription
	a (Lnet/minecraft/server/Particle;Ldlp$b;)V register
	a (Lnet/minecraft/server/Particle;Ldlq;)V register
	a (Lnet/minecraft/server/ParticleParam;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/World;)V setLevel
	a (Lxd$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	b ()V tick
	b (Ldln;)V tickParticle
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;Ljava/util/Map;)V lambda$null$0
	b (Lnet/minecraft/server/ParticleParam;DDDDDD)Ldln; makeParticle
	c ()Ljava/lang/String; countParticles
	d ()V registerProviders
arx$b net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal
	a turtle
	b speedModifier
	c stuck
	d closeToHomeTryTicks
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
dls net/minecraft/client/particle/PlayerCloudParticle
	C sprites
	a ()V tick
	b ()Ldlr; getRenderType
	b (F)F getQuadSize
arx$c net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal
	g turtle
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	j ()Z shouldRecalculatePath
dlr net/minecraft/client/particle/ParticleRenderType
	a TERRAIN_SHEET
	b PARTICLE_SHEET_OPAQUE
	c PARTICLE_SHEET_TRANSLUCENT
	d PARTICLE_SHEET_LIT
	e CUSTOM
	f NO_RENDER
	a (Lcuw;Ldxc;)V begin
	a (Lcuz;)V end
arx$d net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal
	g turtle
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	e ()V tick
dlu net/minecraft/client/particle/SimpleAnimatedParticle
	C sprites
	F baseGravity
	G baseAirFriction
	H fadeR
	I fadeG
	J fadeB
	K hasFade
	a ()V tick
	a (F)I getLightColor
	b ()Ldlr; getRenderType
	b (I)V setColor
	c (F)F getBrightness
	c (I)V setFadeColor
	g (F)V setBaseAirFriction
dlt net/minecraft/client/particle/PortalParticle
	C xStart
	F yStart
	G zStart
	a ()V tick
	a (DDD)V move
	a (F)I getLightColor
	b ()Ldlr; getRenderType
	b (F)F getQuadSize
	c (F)F getBrightness
dlw net/minecraft/client/particle/SmokeParticle
	C sprites
	a ()V tick
	b ()Ldlr; getRenderType
	b (F)F getQuadSize
net/minecraft/server/WorldGenSurfaceTaigaMega net/minecraft/world/level/levelgen/surfacebuilders/GiantTreeTaigaSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
fx$1 net/minecraft/core/dispenser/DispenseItemBehavior$1
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
dlv net/minecraft/client/particle/SingleQuadParticle
	D quadSize
	a (Lcuw;Lcxq;FFFFFF)V render
	b (F)F getQuadSize
	c ()F getU0
	d ()F getU1
	e ()F getV0
	e (F)Ldln; scale
	f ()F getV1
dly net/minecraft/client/particle/SpitParticle
	a ()V tick
dlx net/minecraft/client/particle/SpellParticle
	C RANDOM
	F sprites
	a ()V tick
	b ()Ldlr; getRenderType
net/minecraft/server/PacketPlayInFlying$PacketPlayInLook net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/MethodProfilerResultsFilled net/minecraft/util/profiling/FilledProfileResults
	a LOGGER
	b times
	c counts
	d startTimeNano
	e startTimeTicks
	f endTimeNano
	g endTimeTicks
	h tickDuration
	a ()J getStartTimeNano
	a (ILjava/lang/String;Ljava/lang/StringBuilder;)V appendProfilerResults
	a (JI)Ljava/lang/String; getProfilerResults
	a (Ljava/io/File;)Z saveResults
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	b ()I getStartTimeTicks
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	e ()Ljava/lang/String; getProfilerResults
	f ()I getTickDuration
	h ()Ljava/lang/String; getComment
dlz net/minecraft/client/particle/SplashParticle
net/minecraft/server/Slot net/minecraft/world/inventory/Slot
	e x
	f y
	index slot
	inventory container
	rawSlotIndex index
	a (I)Lnet/minecraft/server/ItemStack; remove
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/IInventory;I)Z isAt
	a (Lnet/minecraft/server/ItemStack;I)V onQuickCraft
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)V onQuickCraft
	a (Lnet/minecraft/server/Slot;)V swap
	b ()Z isActive
	b (I)V onSwapCraft
	c ()Ljava/lang/String; getNoItemIcon
	c (Lnet/minecraft/server/ItemStack;)V checkTakeAchievements
	d ()V setChanged
	isAllowed (Lnet/minecraft/server/EntityHuman;)Z mayPickup
	isAllowed (Lnet/minecraft/server/ItemStack;)Z mayPlace
dmb net/minecraft/client/particle/SquidInkParticle
	a ()V tick
dma net/minecraft/client/particle/SpriteSet
	a (II)Ldxb; get
	a (Ljava/util/Random;)Ldxb; get
net/minecraft/server/DataConverterHorse net/minecraft/util/datafix/fixes/EntityHorseSplitFix
	a ()Ljava/lang/IllegalStateException; lambda$fix$0
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
net/minecraft/server/BlockFletchingTable net/minecraft/world/level/block/FletchingTableBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
dom$1 net/minecraft/client/renderer/block/model/ItemTransforms$1
	a $SwitchMap$net$minecraft$client$renderer$block$model$ItemTransforms$TransformType
dmd net/minecraft/client/particle/SuspendedTownParticle
	a ()V tick
	a (DDD)V move
	b ()Ldlr; getRenderType
dmc net/minecraft/client/particle/SuspendedParticle
	a ()V tick
	b ()Ldlr; getRenderType
net/minecraft/server/WorldGenDecoratorFrequencyExtraChanceConfiguration net/minecraft/world/level/levelgen/placement/DecoratorFrequencyWithExtraChance
	a count
	b extraChance
	c extraCount
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorFrequencyExtraChanceConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
dmf net/minecraft/client/particle/TextureSheetParticle
	E sprite
	a (Ldma;)V pickSprite
	a (Ldxb;)V setSprite
	b (Ldma;)V setSpriteFromAge
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
dme net/minecraft/client/particle/TerrainParticle
	C blockState
	F pos
	G uo
	H vo
	a (F)I getLightColor
	a (Lnet/minecraft/server/BlockPosition;)Ldme; init
	b ()Ldlr; getRenderType
	b (Lnet/minecraft/server/BlockPosition;)V multiplyColor
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
	g ()Ldme; init
net/minecraft/server/CommandClone$Mode net/minecraft/server/commands/CloneCommands$Mode
	d canOverlap
	e $VALUES
	a ()Z canOverlap
dmh net/minecraft/client/particle/TrackingEmitter
	C entity
	D life
	E lifeTime
	F particleType
	a ()V tick
net/minecraft/server/BlockFurnace net/minecraft/world/level/block/AbstractFurnaceBlock
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;)I getLightEmission
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V openContainer
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
dmg net/minecraft/client/particle/TotemParticle
net/minecraft/server/BlockCake net/minecraft/world/level/block/CakeBlock
	b SHAPE_BY_BITE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)Z eat
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
dmj net/minecraft/client/particle/WaterCurrentDownParticle
	C angle
	a ()V tick
	b ()Ldlr; getRenderType
net/minecraft/server/PacketLoginOutDisconnect net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket
	a reason
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginOutListener;)V handle
	b ()Lnet/minecraft/server/IChatBaseComponent; getReason
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
dmi net/minecraft/client/particle/WakeParticle
	C sprites
	a ()V tick
	b ()Ldlr; getRenderType
dml net/minecraft/client/particle/package-info
dmk net/minecraft/client/particle/WaterDropParticle
	a ()V tick
	b ()Ldlr; getRenderType
dmn net/minecraft/client/player/Input
	a leftImpulse
	b forwardImpulse
	c up
	d down
	e left
	f right
	g jumping
	h sneakKeyDown
	a ()Lnet/minecraft/server/Vec2F; getMoveVector
	a (ZZ)V tick
	b ()Z hasForwardImpulse
dmm net/minecraft/client/player/AbstractClientPlayer
	a elytraRotX
	b elytraRotY
	c elytraRotZ
	d clientLevel
	e playerInfo
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/String;)Ldws; registerSkinTexture
	c ()Z isCapeLoaded
	d (Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; getSkinLocation
	e (Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; getSkullPath
	i ()Ldkg; getPlayerInfo
	l ()Z isSkinLoaded
	m ()Lnet/minecraft/server/MinecraftKey; getSkinTextureLocation
	n ()Lnet/minecraft/server/MinecraftKey; getCloakTextureLocation
	o ()Z isElytraLoaded
	p ()Lnet/minecraft/server/MinecraftKey; getElytraTextureLocation
	s ()Ljava/lang/String; getModelName
	t ()Z isSpectator
	u ()Z isCreative
	v ()F getFieldOfViewModifier
dmp net/minecraft/client/player/LocalPlayer
	bU sprintTriggerTime
	bV sprintTime
	bW yBob
	bX xBob
	bY yBobO
	bZ xBobO
	ca portalTime
	cb oPortalTime
	cc stats
	cd recipeBook
	ce ambientSoundHandlers
	cf permissionLevel
	cg xLast
	ch yLast1
	ci zLast
	cj yRotLast
	ck xRotLast
	cl lastOnGround
	cm wasTryingToSneak
	cn wasSprinting
	co positionReminder
	cp flashOnSetHealth
	cq serverBrand
	cr jumpRidingTicks
	cs jumpRidingScale
	ct startedUsingItem
	cu usingItemHand
	cv handsBusy
	cw autoJumpEnabled
	cx autoJumpTime
	cy wasFallFlying
	cz waterVisionTime
	e connection
	f input
	g minecraft
	A ()Ljava/lang/String; getServerBrand
	B ()Lnet/minecraft/server/StatisticManager; getStats
	D ()Lcxr; getRecipeBook
	F ()Z isRidingJumpable
	G ()F getJumpRidingScale
	H ()Z isTryingToSneak
	I ()Z isControlledCamera
	J ()Z isHandsBusy
	K ()Z isAutoJumpEnabled
	L ()F getWaterVision
	M ()V sendPosition
	a (B)V handleEntityEvent
	a (FII)V setExperienceValues
	a (I)V setPermissionLevel
	a (Lnet/minecraft/server/CommandBlockListenerAbstract;)V openMinecartCommandBlock
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;)V crit
	a (Lnet/minecraft/server/Entity;Z)Z startRiding
	a (Lnet/minecraft/server/EnumHand;)V swing
	a (Lnet/minecraft/server/EnumMoveType;Lnet/minecraft/server/Vec3D;)V move
	a (Lnet/minecraft/server/IChatBaseComponent;)V sendMessage
	a (Lnet/minecraft/server/IChatBaseComponent;Z)V displayClientMessage
	a (Lnet/minecraft/server/IRecipe;)V removeRecipeHighlight
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)V openItemGui
	a (Lnet/minecraft/server/SoundEffect;FF)V playSound
	a (Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playNotifySound
	a (Lnet/minecraft/server/TileEntityCommand;)V openCommandBlock
	a (Lnet/minecraft/server/TileEntityJigsaw;)V openJigsawBlock
	a (Lnet/minecraft/server/TileEntitySign;)V openTextEdit
	a (Lnet/minecraft/server/TileEntityStructure;)V openStructureBlock
	a (Lnet/minecraft/server/VoxelShape;)Ljava/util/stream/Stream; lambda$updateAutoJump$0
	aN ()V rideTick
	aw ()Z isUnderWater
	b (F)V heal
	b (Lnet/minecraft/server/Entity;)V magicCrit
	bg ()Z isSneaking
	bh ()Z isVisuallySneaking
	c (Lnet/minecraft/server/EnumHand;)V startUsingItem
	c (Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/MobEffect; removeEffectNoUpdate
	d (Lnet/minecraft/server/DamageSource;F)V actuallyHurt
	dA ()Z updateIsUnderwater
	dF ()V respawn
	dG ()Z isLocalPlayer
	dc ()V serverAiStep
	df ()Z isEffectiveAi
	dj ()Z isUsingItem
	dk ()Lnet/minecraft/server/EnumHand; getUsedItemHand
	dp ()V stopUsingItem
	ed ()V handleNetherPortalClient
	ee ()Z hasEnoughImpulseToStartSprinting
	f (FF)V updateAutoJump
	f (Ljava/lang/String;)V chat
	f (Z)V setSprinting
	g (F)F getViewXRot
	g (Ljava/lang/String;)V setServerBrand
	g (Lnet/minecraft/server/BlockPosition;)Z blocked
	h ()V tick
	h (F)F getViewYRot
	i (DDD)V checkInBlock
	j ()V stopRiding
	k ()V aiStep
	n (Z)Lnet/minecraft/server/EntityItem; drop
	r ()V onUpdateAbilities
	t (F)V hurtTo
	t_ ()V closeContainer
	w ()V clientSideCloseContainer
	x ()V sendRidingJump
	y ()I getPermissionLevel
	z ()V sendOpenInventory
net/minecraft/server/ArgumentParticle net/minecraft/commands/arguments/ParticleArgument
	a ERROR_UNKNOWN_PARTICLE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentParticle; particle
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParam; parse
	a (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/server/Particle;)Lnet/minecraft/server/ParticleParam; readParticle
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ParticleParam; getParticle
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$readParticle$1
	b (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParam; readParticle
dmo net/minecraft/client/player/KeyboardInput
	i options
	a (ZZ)V tick
dmr net/minecraft/client/player/inventory/Hotbar
	a items
	a ()Lnet/minecraft/server/NBTTagList; createTag
	a (Lnet/minecraft/server/NBTTagList;)V fromTag
dmq net/minecraft/client/player/RemotePlayer
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/IChatBaseComponent;)V sendMessage
	dB ()V updatePlayerPose
	h ()V tick
	k ()V aiStep
net/minecraft/server/ContainerCartography net/minecraft/world/inventory/CartographyMenu
	containerAccess access
	e quickMoved
	inventory container
	resultInventory resultContainer
	a (Lnet/minecraft/server/ContainerCartography;)Z access$000
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$removed$2
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)V setupResultSlot
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$setupResultSlot$0
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ItemStack; lambda$quickMoveStack$1
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
dmt net/minecraft/client/player/package-info
dms net/minecraft/client/player/inventory/package-info
dmv net/minecraft/client/renderer/ChunkBufferBuilderPack
	a builders
	a (I)Lcuw; builder
	a (Lnet/minecraft/server/TextureType;)Lcuw; builder
dmu net/minecraft/client/renderer/BiomeColors
	a GRASS_COLOR_RESOLVER
	b FOLIAGE_COLOR_RESOLVER
	c WATER_COLOR_RESOLVER
	d WATER_FOG_COLOR_RESOLVER
	a (Lnet/minecraft/server/BiomeBase;Lnet/minecraft/server/BlockPosition;)I lambda$static$1
	a (Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;)I getAverageGrassColor
	a (Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;Ldmu$a;)I getAverageColor
	b (Lnet/minecraft/server/BiomeBase;Lnet/minecraft/server/BlockPosition;)I lambda$static$0
	b (Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;)I getAverageFoliageColor
	c (Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;)I getAverageWaterColor
	d (Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;)I getAverageWaterFogColor
dmx net/minecraft/client/renderer/CubeMap
	a images
	a (Lcyc;FFF)V render
	a (Ldxc;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preload
dmw net/minecraft/client/renderer/ChunkRenderList
	a chunks
	b ready
	c xOff
	d yOff
	e zOff
	a (DDD)V setCameraLocation
	a (Ldpy;)V translateToRelativeChunkPosition
	a (Ldpy;Lnet/minecraft/server/TextureType;)V add
	a (Lnet/minecraft/server/TextureType;)V render
bqw$1 net/minecraft/world/level/block/RailBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$Mirror
net/minecraft/server/EntityFish net/minecraft/world/entity/animal/AbstractFish
	I ()Z requiresCustomPersistence
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	ai ()Lnet/minecraft/server/SoundEffect; getSwimSound
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkFishSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	c (D)Z removeWhenFarAway
	cl ()V registerAttributes
	dC ()I getMaxSpawnClusterSize
	dV ()Z canRandomSwim
	e (Lnet/minecraft/server/Vec3D;)V travel
	getSoundFlop ()Lnet/minecraft/server/SoundEffect; getFlopSound
	i (Lnet/minecraft/server/ItemStack;)V saveToBucketTag
	isFromBucket ()Z fromBucket
	k ()V aiStep
	l ()Lnet/minecraft/server/ItemStack; getBucketItemStack
	n ()V registerGoals
	u_ ()V defineSynchedData
net/minecraft/server/CommandSaveOff net/minecraft/server/commands/SaveOffCommand
	a ERROR_ALREADY_OFF
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
dmz net/minecraft/client/renderer/EntityBlockRenderer
	a instance
	b SHULKER_BOXES
	c DEFAULT_SHULKER_BOX
	d chest
	e trappedChest
	f enderChest
	g banner
	h bed
	i skull
	j conduit
	k shieldModel
	l tridentModel
	a (I)[Lnet/minecraft/server/TileEntityShulkerBox; lambda$static$0
	a (Ljava/lang/Runnable;)V renderFoil
	a (Lnet/minecraft/server/ItemStack;)V renderByItem
dmy net/minecraft/client/renderer/EffectInstance
	a LOGGER
	b DUMMY_UNIFORM
	c lastAppliedEffect
	d lastProgramId
	e samplerMap
	f samplerNames
	g samplerLocations
	h uniforms
	i uniformLocations
	j uniformMap
	k programId
	l name
	m cull
	n dirty
	o blend
	p attributes
	q attributeNames
	r vertexProgram
	s fragmentProgram
	a ()I getId
	a (Lcom/google/gson/JsonElement;)V parseSamplerNode
	a (Lcom/google/gson/JsonObject;)Lcur; parseBlendNode
	a (Ljava/lang/String;)Lcuv; getUniform
	a (Ljava/lang/String;Ljava/lang/Object;)V setSampler
	a (Lnet/minecraft/server/IResourceManager;Lcut$a;Ljava/lang/String;)Lcut; getOrCreate
	b ()V markDirty
	b (Lcom/google/gson/JsonElement;)V parseUniformNode
	b (Ljava/lang/String;)Lcuq; safeGetUniform
	c ()Lcut; getVertexProgram
	d ()Lcut; getFragmentProgram
	e ()V clear
	f ()V apply
	g ()Ljava/lang/String; getName
	h ()V updateLocations
net/minecraft/server/PacketPlayOutTransaction net/minecraft/network/protocol/game/ClientboundContainerAckPacket
	a containerId
	b uid
	c accepted
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()S getUid
	d ()Z isAccepted
dkz$1 net/minecraft/client/particle/EndRodParticle$1
net/minecraft/server/PacketPlayOutAnimation net/minecraft/network/protocol/game/ClientboundAnimatePacket
	a id
	b action
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getAction
dna net/minecraft/client/renderer/FaceInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g BY_FACING
	h infos
	i $VALUES
	a (I)Ldna$b; getVertexInfo
	a (Lnet/minecraft/server/EnumDirection;)Ldna; fromFacing
	a ([Ldna;)V lambda$static$0
net/minecraft/server/PacketPlayOutPlayerInfo$EnumPlayerInfoAction net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action
	f $VALUES
dnc net/minecraft/client/renderer/GameRenderer
	A zoom_x
	B zoom_y
	C itemActivationItem
	D itemActivationTicks
	E itemActivationOffX
	F itemActivationOffY
	G postEffect
	H EFFECTS
	I effectIndex
	J effectActive
	K frameId
	L mainCamera
	a itemInHandRenderer
	b EFFECT_NONE
	c LOGGER
	d RAIN_LOCATION
	e SNOW_LOCATION
	f minecraft
	g resourceManager
	h random
	i renderDistance
	j mapRenderer
	k tick
	l fov
	m oldFov
	n darkenWorldAmount
	o darkenWorldAmountO
	p renderHand
	q renderBlockOutline
	r lastScreenshotAttempt
	s lastActiveTime
	t lightTexture
	u rainSoundTime
	v rainSizeX
	w rainSizeZ
	x fog
	y panoramicMode
	z zoom
	a ()Z postEffectActive
	a (DDD)V zoomRegion
	a (F)V pick
	a (FJ)V renderLevel
	a (FJZ)V render
	a (II)V resize
	a (IIF)V renderItemActivationAnimation
	a (Lcuj;)V lambda$takeAutoScreenshot$5
	a (Lcxq;F)V renderItemInHand
	a (Lcxq;FZ)D getFov
	a (Lcxq;Ldng;FDDD)V prepareAndRenderClouds
	a (Lcyu;Ljava/lang/String;FFFIFFZ)V renderNameTagInWorld
	a (Lnet/minecraft/server/Entity;)V checkEntityPostEffect
	a (Lnet/minecraft/server/EntityLiving;F)F getNightVisionScale
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/server/ItemStack;)V displayItemActivation
	a (Lnet/minecraft/server/MinecraftKey;)V loadEffect
	a (Z)V setRenderHand
	b ()V shutdownEffect
	b (F)V renderSnowAndRain
	b (FJ)V render
	b (II)Ljava/lang/String; lambda$render$3
	b (Lnet/minecraft/server/Entity;)Z lambda$pick$0
	b (Z)V setRenderBlockOutline
	c ()V togglePostEffect
	c (F)F getDarkenWorldAmount
	c (Z)V setPanoramicMode
	d ()V cycleEffect
	d (F)V bobHurt
	d (Z)V resetFogColor
	e ()V tick
	e (F)V bobView
	f ()Ldnl; currentEffect
	f (F)V setupCamera
	g ()V unZoomRegion
	h ()V turnOffLightLayer
	i ()V turnOnLightLayer
	j ()V resetData
	k ()Lcyx; getMapRenderer
	l ()Lcyc; getMinecraft
	m ()F getRenderDistance
	n ()Lcxq; getMainCamera
	o ()V tickFov
	p ()V takeAutoScreenshot
	q ()Z shouldRenderBlockOutline
	r ()V tickRain
	s ()Ljava/lang/String; lambda$render$4
	t ()Ljava/lang/String; lambda$render$2
	u ()Ljava/lang/String; lambda$render$1
dnb net/minecraft/client/renderer/FogRenderer
	a blackBuffer
	b colorBuffer
	c fogRed
	d fogGreen
	e fogBlue
	f oldRed
	g oldGreen
	h oldBlue
	i targetBiomeFog
	j previousBiomeFog
	k biomeChangedTime
	l renderer
	m minecraft
	a ()Ljava/nio/FloatBuffer; updateColorBuffer
	a (Lcxq;F)V setupClearColor
	a (Lcxq;I)V setupFog
	a (Lcxq;Lnet/minecraft/server/IWorldReader;)V setWaterFogColor
	a (Lcxq;Lnet/minecraft/server/World;F)V setLandFogColor
	a (Z)V resetFogColor
dne net/minecraft/client/renderer/ItemInHandRenderer
	a MAP_BACKGROUND_LOCATION
	b UNDERWATER_LOCATION
	c minecraft
	d mainHandItem
	e offHandItem
	f mainHandHeight
	g oMainHandHeight
	h offHandHeight
	i oOffHandHeight
	j entityRenderDispatcher
	k itemRenderer
	a ()V tick
	a (F)V render
	a (FF)V enableLight
	a (FFF)V renderTwoHandedMap
	a (FFLnet/minecraft/server/EnumMainHand;)V renderPlayerArm
	a (FLnet/minecraft/server/EnumMainHand;FLnet/minecraft/server/ItemStack;)V renderOneHandedMap
	a (FLnet/minecraft/server/EnumMainHand;Lnet/minecraft/server/ItemStack;)V applyEatTransform
	a (Ldmm;FFLnet/minecraft/server/EnumHand;FLnet/minecraft/server/ItemStack;F)V renderArmWithItem
	a (Ldxb;)V renderTex
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Ldom$b;)V renderItem
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Ldom$b;Z)V renderItem
	a (Lnet/minecraft/server/EnumHand;)V itemUsed
	a (Lnet/minecraft/server/EnumMainHand;)V renderMapHand
	a (Lnet/minecraft/server/EnumMainHand;F)V applyItemArmAttackTransform
	a (Lnet/minecraft/server/ItemStack;)V renderMap
	b ()V setLightValue
	b (F)V renderScreenEffect
	b (Lnet/minecraft/server/EnumMainHand;F)V applyItemArmTransform
	c ()V renderMapHands
	c (F)V setPlayerBob
	d ()V renderFire
	d (F)F calculateMapTilt
	e (F)V renderWater
dnd net/minecraft/client/renderer/HttpTextureProcessor
	a ()V onTextureDownloaded
	a (Lcuj;)Lcuj; process
net/minecraft/server/EntitySelector net/minecraft/commands/arguments/selector/EntitySelector
	a maxResults
	b includesEntities
	c worldLimited
	checkPermissions usesSelector
	d predicate
	e range
	f position
	g aabb
	h order
	i currentEntity
	j playerName
	k entityUUID
	l type
	a ()I getMaxResults
	a (Ljava/util/List;)Lnet/minecraft/server/IChatBaseComponent; joinNames
	a (Ljava/util/List;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Vec3D;Ljava/util/function/Predicate;)V addEntities
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/Entity;)Z lambda$getPredicate$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Entity; findSingleEntity
	a (Lnet/minecraft/server/Vec3D;)Ljava/util/function/Predicate; getPredicate
	a (Lnet/minecraft/server/Vec3D;Ljava/util/List;)Ljava/util/List; sortAndLimit
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;)Z lambda$getPredicate$1
	b ()Z includesEntities
	c ()Z isSelfSelector
	c (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/EntityPlayer; findSinglePlayer
	d ()Z isWorldLimited
	d (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/List; findPlayers
	e ()Z usesSelector
	e (Lnet/minecraft/server/CommandListenerWrapper;)V checkPermissions
	getEntities (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/List; findEntities
net/minecraft/server/CombatTracker net/minecraft/world/damagesource/CombatTracker
	a entries
	b mob
	c lastDamageTime
	d combatStartTime
	e combatEndTime
	f inCombat
	g takingDamage
	h nextLocation
	a ()V prepareForDamage
	a (Lnet/minecraft/server/CombatEntry;)Ljava/lang/String; getFallLocation
	c ()Lnet/minecraft/server/EntityLiving; getKiller
	d ()Z isTakingDamage
	e ()Z isInCombat
	f ()I getCombatDuration
	g ()V recheckStatus
	h ()Lnet/minecraft/server/EntityLiving; getMob
	i ()Lnet/minecraft/server/CombatEntry; getLastEntry
	j ()Lnet/minecraft/server/CombatEntry; getMostSignificantFall
	k ()V resetPreparedStatus
	trackDamage (Lnet/minecraft/server/DamageSource;FF)V recordDamage
dng net/minecraft/client/renderer/LevelRenderer
	A ticks
	B destroyingBlocks
	C playingRecords
	D breakingTextures
	E entityTarget
	F entityEffect
	G lastCameraX
	H lastCameraY
	I lastCameraZ
	J lastCameraChunkX
	K lastCameraChunkY
	L lastCameraChunkZ
	M prevCamX
	N prevCamY
	O prevCamZ
	P prevCamRotX
	Q prevCamRotY
	R prevCloudX
	S prevCloudY
	T prevCloudZ
	U prevCloudColor
	V prevCloudsType
	W chunkRenderDispatcher
	X renderList
	Y lastViewDistance
	Z noEntityRenderFrames
	a DIRECTIONS
	aa renderedEntities
	ab culledEntities
	ac captureFrustum
	ad capturedFrustum
	ae frustumPoints
	af frustumPos
	ag usingVbo
	ah renderChunkFactory
	ai xTransparentOld
	aj yTransparentOld
	ak zTransparentOld
	al needsUpdate
	am hadRenderedEntityOutlines
	b LOGGER
	c MOON_LOCATION
	d SUN_LOCATION
	e CLOUDS_LOCATION
	f END_SKY_LOCATION
	g FORCEFIELD_LOCATION
	h minecraft
	i textureManager
	j entityRenderDispatcher
	k level
	l chunksToCompile
	m renderChunks
	n globalBlockEntities
	o viewArea
	p starList
	q skyList
	r darkList
	s skyFormat
	t starBuffer
	u skyBuffer
	v darkBuffer
	w CLOUD_VERTEX_SIZE
	x generateClouds
	y cloudList
	z cloudBuffer
	a ()V initOutline
	a (DDD)V captureFrustum
	a (DDDDDDFFFF)V renderLineBox
	a (F)V renderSky
	a (FDDD)V renderClouds
	a (II)V resize
	a (III)V setSectionDirtyWithNeighbors
	a (IIIIII)V setBlocksDirty
	a (IIIZ)V setSectionDirty
	a (ILnet/minecraft/server/BlockPosition;I)V globalLevelEvent
	a (J)V compileChunksUntil
	a (Lcuw;)V drawStars
	a (Lcuw;DDDDDDFFFF)V addChainedLineBoxVertices
	a (Lcuw;DDDFFFFDDDDDD)V lambda$renderShape$1
	a (Lcuw;DDDLnet/minecraft/server/Vec3D;)V buildClouds
	a (Lcuw;FZ)V drawSkyHemisphere
	a (Lcuz;Lcuw;Lcxq;)V renderDestroyAnimation
	a (Lcxq;)V prepare
	a (Lcxq;F)V renderWorldBounds
	a (Lcxq;Ldqe;F)V renderEntities
	a (Lcxq;Ldqe;IZ)V setupRender
	a (Lcxq;Lnet/minecraft/server/MovingObjectPosition;I)V renderHitOutline
	a (Ldkf;)V setLevel
	a (Ljava/util/Collection;Ljava/util/Collection;)V updateGlobalBlockEntities
	a (Ljava/util/Iterator;)V updateBlockDestruction
	a (Lnet/minecraft/server/AxisAlignedBB;FFFF)V renderLineBox
	a (Lnet/minecraft/server/BlockPosition;)Ljava/util/Set; getVisibleDirections
	a (Lnet/minecraft/server/BlockPosition;Ldpy;)Z isAdjacentChunk
	a (Lnet/minecraft/server/BlockPosition;Ldpy;Lnet/minecraft/server/EnumDirection;)Ldpy; getRelativeFrom
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V setBlockDirty
	a (Lnet/minecraft/server/BlockPosition;Z)V setBlockDirty
	a (Lnet/minecraft/server/Entity;D)Lnet/minecraft/server/Vector3fa; getViewVector
	a (Lnet/minecraft/server/EntityHuman;ILnet/minecraft/server/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Z canSee
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/Vector3fa;)Z canSee
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;I)V blockChanged
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/server/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/server/ParticleParam;ZDDDDDD)V addParticle
	a (Lnet/minecraft/server/ParticleParam;ZZDDDDDD)V addParticle
	a (Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/BlockPosition;)V playStreamingMusic
	a (Lnet/minecraft/server/TextureType;)V renderSameAsLast
	a (Lnet/minecraft/server/TextureType;Lcxq;)I render
	a (Lnet/minecraft/server/VoxelShape;DDDFFFF)V renderVoxelShape
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)V notifyNearbyEntities
	a (Z)Lcyh; calculateParticleLevel
	b ()V doEntityOutline
	b (DDD)Ljava/lang/String; lambda$addParticle$2
	b (III)V setSectionDirty
	b (ILnet/minecraft/server/BlockPosition;I)V destroyBlockProgress
	b (Lcuw;DDDDDDFFFF)V addChainedFilledBoxVertices
	b (Lcxq;)V renderDebug
	b (Lnet/minecraft/server/ParticleParam;ZDDDDDD)Ldln; addParticleInternal
	b (Lnet/minecraft/server/ParticleParam;ZZDDDDDD)Ldln; addParticleInternal
	b (Lnet/minecraft/server/TextureType;)Ljava/lang/String; lambda$render$0
	b (Lnet/minecraft/server/VoxelShape;DDDFFFF)V renderShape
	c ()Z shouldShowEntityOutlines
	d ()V allChanged
	e ()V resetChunksToCompile
	f ()Ljava/lang/String; getChunkStatistics
	g ()I countRenderedChunks
	h ()Ljava/lang/String; getEntityStatistics
	i ()V captureFrustum
	j ()V killFrustum
	k ()V tick
	l ()V clear
	m ()Z hasRenderedAllChunks
	n ()V needsUpdate
	o ()V setupBreakingTextureSprites
	p ()V createDarkSky
	q ()V createLightSky
	r ()V createStars
	s ()V renderEndSky
	t ()V setupDestroyState
	u ()V restoreDestroyState
dnf net/minecraft/client/renderer/ItemModelShaper
	a shapes
	b shapesCache
	c modelManager
	a ()Ldyt; getModelManager
	a (Lnet/minecraft/server/IMaterial;)Ldxb; getParticleIcon
	a (Lnet/minecraft/server/Item;)Ldyp; getItemModel
	a (Lnet/minecraft/server/Item;Ldyu;)V register
	a (Lnet/minecraft/server/ItemStack;)Ldxb; getParticleIcon
	b ()V rebuildCache
	b (Lnet/minecraft/server/Item;)I getIndex
	b (Lnet/minecraft/server/ItemStack;)Ldyp; getItemModel
net/minecraft/server/InventoryEnderChest net/minecraft/world/inventory/PlayerEnderChestContainer
	a activeChest
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/NBTTagList;)V fromTag
	a (Lnet/minecraft/server/TileEntityEnderChest;)V setActiveChest
	a_ (Lnet/minecraft/server/EntityHuman;)V startOpen
	b_ (Lnet/minecraft/server/EntityHuman;)V stopOpen
	f ()Lnet/minecraft/server/NBTTagList; createTag
dni net/minecraft/client/renderer/MobSkinTextureProcessor
	a ()V onTextureDownloaded
	a (Lcuj;)Lcuj; process
	a (Lcuj;IIII)V doLegacyTransparencyHack
	b (Lcuj;IIII)V setNoAlpha
dnh net/minecraft/client/renderer/LightTexture
	a lightTexture
	b lightPixels
	c lightTextureLocation
	d updateLightTexture
	e blockLightRed
	f blockLightRedTotal
	g renderer
	h minecraft
	a ()V tick
	a (F)V updateLightTexture
	b ()V turnOffLightLayer
	c ()V turnOnLightLayer
dnk net/minecraft/client/renderer/PanoramaRenderer
	a minecraft
	b cubeMap
	c time
	a (FF)V render
dnj net/minecraft/client/renderer/OffsettedRenderList
	a (Lnet/minecraft/server/TextureType;)V render
dnm net/minecraft/client/renderer/PostPass
	a inTarget
	b outTarget
	c effect
	d auxAssets
	e auxNames
	f auxWidths
	g auxHeights
	h shaderOrthoMatrix
	a ()Ljava/lang/String; getName
	a (F)V process
	a (Lcve;)V setOrthoMatrix
	a (Ljava/lang/String;Ljava/lang/Object;II)V addAuxAsset
	b ()Ldmy; getEffect
	c ()V prepareState
dal$a net/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds
	a TUTORIAL_HINT
	b NARRATOR_TOGGLE
	c WORLD_BACKUP
	d $VALUES
dnl net/minecraft/client/renderer/PostChain
	a screenTarget
	b resourceManager
	c name
	d passes
	e customRenderTargets
	f fullSizedTargets
	g shaderOrthoMatrix
	h screenWidth
	i screenHeight
	j time
	k lastStamp
	a ()Ljava/lang/String; getName
	a (F)V process
	a (II)V resize
	a (Lcom/google/gson/JsonElement;)V parseTargetNode
	a (Ldxc;Lcom/google/gson/JsonElement;)V parsePassNode
	a (Ldxc;Lnet/minecraft/server/MinecraftKey;)V load
	a (Ljava/lang/String;)Lctz; getTempTarget
	a (Ljava/lang/String;II)V addTempTarget
	a (Ljava/lang/String;Lctz;Lctz;)Ldnm; addPass
	b ()V updateOrthoMatrix
	b (Lcom/google/gson/JsonElement;)V parseUniformNode
	b (Ljava/lang/String;)Lctz; getRenderTarget
net/minecraft/server/PathfinderGoalRestrictSun net/minecraft/world/entity/ai/goal/RestrictSunGoal
	a mob
	a ()Z canUse
	c ()V start
	d ()V stop
dno net/minecraft/client/renderer/RenderList
	a (DDD)V setCameraLocation
	a (Ldpy;)V translateToRelativeChunkPosition
	a (Ldpy;Lnet/minecraft/server/TextureType;)V add
	a (Lnet/minecraft/server/TextureType;)V render
dnn net/minecraft/client/renderer/Rect2i
	a xPos
	b yPos
	c width
	d height
	a ()I getX
	a (I)V setX
	a (II)V setPosition
	a (Ldnn;)Ldnn; intersect
	b ()I getY
	b (I)V setY
	b (II)Z contains
	c ()I getWidth
	c (I)V setWidth
	d ()I getHeight
	d (I)V setHeight
dnq net/minecraft/client/renderer/ViewArea
	a levelRenderer
	b level
	c chunkGridSizeY
	d chunkGridSizeX
	e chunkGridSizeZ
	f chunks
	a ()V releaseAllBuffers
	a (DD)V repositionCamera
	a (I)V setViewDistance
	a (III)I getChunkIndex
	a (IIIZ)V setDirty
	a (Ldpz;)V createChunks
	a (Lnet/minecraft/server/BlockPosition;)Ldpy; getRenderChunkAt
	b (III)I getCoordinate
dnp net/minecraft/client/renderer/VboRenderList
	a ()V applyVertexDeclaration
	a (Lnet/minecraft/server/TextureType;)V render
dns net/minecraft/client/renderer/banner/BannerTextures
	a BANNER_CACHE
	b SHIELD_CACHE
	c NO_PATTERN_SHIELD
	d DEFAULT_PATTERN_BANNER
net/minecraft/server/ParticleParamRedstone net/minecraft/core/particles/DustParticleOptions
	a REDSTONE
	b DESERIALIZER
	c r
	d g
	e b
	f scale
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/server/Particle; getType
	c ()F getR
	d ()F getG
	e ()F getB
	f ()F getScale
dnr net/minecraft/client/renderer/VirtualScreen
	a minecraft
	b screenManager
	a (Lcuc;Ljava/lang/String;Ljava/lang/String;)Lcuo; newWindow
dnu net/minecraft/client/renderer/block/AnimatedEntityBlockRenderer
	a (Lnet/minecraft/server/Block;F)V renderSingleBlock
atm$1 net/minecraft/world/entity/decoration/HangingEntity$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
dnt net/minecraft/client/renderer/banner/package-info
dnw net/minecraft/client/renderer/block/BlockRenderDispatcher
	a blockModelShaper
	b modelRenderer
	c entityBlockRenderer
	d liquidBlockRenderer
	e random
	a ()Ldnv; getBlockModelShaper
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IIBlockAccess;Lcuw;Lnet/minecraft/server/Fluid;)Z renderLiquid
	a (Lnet/minecraft/server/IBlockData;)Ldyp; getBlockModel
	a (Lnet/minecraft/server/IBlockData;F)V renderSingleBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Ldxb;Lnet/minecraft/server/IIBlockAccess;)V renderBreakingTexture
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IIBlockAccess;Lcuw;Ljava/util/Random;)Z renderBatched
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	b ()Ldny; getModelRenderer
dnv net/minecraft/client/renderer/block/BlockModelShaper
	a modelByStateCache
	b modelManager
	a ()Ldyt; getModelManager
	a (Ljava/util/Map;)Ljava/lang/String; statePropertiesToString
	a (Lnet/minecraft/server/IBlockData;)Ldxb; getParticleIcon
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/lang/String; getValue
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IBlockData;)Ldyu; stateToModelLocation
	b ()V rebuildCache
	b (Lnet/minecraft/server/IBlockData;)Ldyp; getBlockModel
	c (Lnet/minecraft/server/IBlockData;)Ldyu; stateToModelLocation
	d (Lnet/minecraft/server/IBlockData;)V lambda$rebuildCache$0
dny net/minecraft/client/renderer/block/ModelBlockRenderer
	a blockColors
	b CACHE
	a ()V enableCaching
	a (FFFFLjava/util/List;)V renderQuadList
	a (Ldyp;FFFF)V renderModel
	a (Ldyp;Lnet/minecraft/server/IBlockData;FZ)V renderSingleBlock
	a (Lnet/minecraft/server/IBlockData;Ldyp;FFFF)V renderModel
	a (Lnet/minecraft/server/IIBlockAccess;Ldyp;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lcuw;ZLjava/util/Random;J)Z tesselateBlock
	a (Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;IZLcuw;Ljava/util/List;Ljava/util/BitSet;)V renderModelFaceFlat
	a (Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lcuw;Ljava/util/List;[FLjava/util/BitSet;Ldny$b;)V renderModelFaceAO
	a (Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;[ILnet/minecraft/server/EnumDirection;[FLjava/util/BitSet;)V calculateShape
	b ()V clearCache
	b (Lnet/minecraft/server/IIBlockAccess;Ldyp;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lcuw;ZLjava/util/Random;J)Z tesselateWithAO
	c ()Ljava/lang/ThreadLocal; access$200
	c (Lnet/minecraft/server/IIBlockAccess;Ldyp;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lcuw;ZLjava/util/Random;J)Z tesselateWithoutAO
	d ()Ldny$d; lambda$static$0
net/minecraft/server/DefinedStructureTestRandomBlock net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest
	a block
	b probability
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
dnx net/minecraft/client/renderer/block/LiquidBlockRenderer
	a lavaIcons
	b waterIcons
	c waterOverlay
	a ()V setupSprites
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;F)Z isFaceOccluded
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/Fluid;)Z isNeighborSameFluid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;)F getWaterHeight
	a (Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;)I getLightColor
	a (Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;Lcuw;Lnet/minecraft/server/Fluid;)Z tesselate
net/minecraft/server/PathfinderGoalHorseTrap net/minecraft/world/entity/animal/horse/SkeletonTrapGoal
	a horse
	a ()Z canUse
	a (Lnet/minecraft/server/DifficultyDamageScaler;)Lnet/minecraft/server/EntityHorseAbstract; createHorse
	a (Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EntityHorseAbstract;)Lnet/minecraft/server/EntitySkeleton; createSkeleton
	e ()V tick
ciz$d net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionPiecePlacer
	a structureManager
	b random
	c startX
	d startY
	a (Ljava/util/List;Lciz$e;)V entrance
	a (Ljava/util/List;Lciz$e;Lciz$g;Lnet/minecraft/server/EnumDirection;IIII)V traverseOuterWalls
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lciz$b;)V addRoom2x2Secret
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lciz$g;Lciz$g;)V createRoof
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/EnumDirection;Lciz$b;)V addRoom1x1
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;Lciz$b;)V addRoom2x2
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;Lciz$b;Z)V addRoom1x2
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Lciz$c;)V createMansion
	b (Ljava/util/List;Lciz$e;)V traverseWallPiece
	c (Ljava/util/List;Lciz$e;)V traverseTurn
	d (Ljava/util/List;Lciz$e;)V traverseInnerTurn
dnz net/minecraft/client/renderer/block/model/BakedQuad
	a vertices
	b tintIndex
	c direction
	d sprite
	a ()Ldxb; getSprite
	b ()[I getVertices
	c ()Z isTinted
	d ()I getTintIndex
	e ()Lnet/minecraft/server/EnumDirection; getDirection
ciz$e net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData
	a rotation
	b position
	c wallType
ciz$f net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SecondFloorRoomCollection
	a (Ljava/util/Random;)Ljava/lang/String; get1x1
	a (Ljava/util/Random;Z)Ljava/lang/String; get1x2SideEntrance
	b (Ljava/util/Random;)Ljava/lang/String; get1x1Secret
	b (Ljava/util/Random;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Ljava/util/Random;)Ljava/lang/String; get1x2Secret
	d (Ljava/util/Random;)Ljava/lang/String; get2x2
	e (Ljava/util/Random;)Ljava/lang/String; get2x2Secret
ciz$g net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid
	a grid
	b width
	c height
	d valueIfOutside
	a (II)I get
	a (III)V set
	a (IIII)V setif
	a (IIIII)V set
	a (Lciz$g;)I access$500
	b (III)Z edgesTo
	b (Lciz$g;)I access$600
czs$a net/minecraft/client/gui/components/ObjectSelectionList$Entry
ciz$a net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FirstFloorRoomCollection
	a (Ljava/util/Random;)Ljava/lang/String; get1x1
	a (Ljava/util/Random;Z)Ljava/lang/String; get1x2SideEntrance
	b (Ljava/util/Random;)Ljava/lang/String; get1x1Secret
	b (Ljava/util/Random;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Ljava/util/Random;)Ljava/lang/String; get1x2Secret
	d (Ljava/util/Random;)Ljava/lang/String; get2x2
	e (Ljava/util/Random;)Ljava/lang/String; get2x2Secret
dob net/minecraft/client/renderer/block/model/BlockElementFace
	a cullForDirection
	b tintIndex
	c texture
	d uv
ciz$b net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection
	a (Ljava/util/Random;)Ljava/lang/String; get1x1
	a (Ljava/util/Random;Z)Ljava/lang/String; get1x2SideEntrance
	b (Ljava/util/Random;)Ljava/lang/String; get1x1Secret
	b (Ljava/util/Random;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Ljava/util/Random;)Ljava/lang/String; get1x2Secret
	d (Ljava/util/Random;)Ljava/lang/String; get2x2
	e (Ljava/util/Random;)Ljava/lang/String; get2x2Secret
net/minecraft/server/BlockFalling net/minecraft/world/level/block/FallingBlock
	a (Lnet/minecraft/server/EntityFallingBlock;)V falling
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V onBroken
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V onLand
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V checkSlide
	canFallThrough (Lnet/minecraft/server/IBlockData;)Z isFree
	q (Lnet/minecraft/server/IBlockData;)I getDustColor
doa net/minecraft/client/renderer/block/model/BlockElement
	a from
	b to
	c faces
	d rotation
	e shade
	a ()V fillUvs
	a (Lnet/minecraft/server/EnumDirection;)[F uvsByFace
ciz$c net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionGrid
	a random
	b baseGrid
	c thirdFloorGrid
	d floorRooms
	e entranceX
	f entranceY
	a ()V print
	a (Lciz$c;)Lciz$g; access$100
	a (Lciz$g;)Z cleanEdges
	a (Lciz$g;II)Z isHouse
	a (Lciz$g;IIII)Z isRoomId
	a (Lciz$g;IILnet/minecraft/server/EnumDirection;I)V recursiveCorridor
	a (Lciz$g;Lciz$g;)V identifyRooms
	b ()V setupThirdFloor
	b (Lciz$c;)Lciz$g; access$200
	b (Lciz$g;IIII)Lnet/minecraft/server/EnumDirection; get1x2RoomDirection
	c (Lciz$c;)I access$300
	d (Lciz$c;)I access$400
	e (Lciz$c;)[Lciz$g; access$1000
dod net/minecraft/client/renderer/block/model/BlockFaceUV
	a uvs
	b rotation
	a (I)F getU
	a ([F)V setMissingUv
	b (I)F getV
	c (I)I getReverseIndex
	d (I)I getShiftedIndex
doc net/minecraft/client/renderer/block/model/BlockElementRotation
	a origin
	b axis
	c angle
	d rescale
dof net/minecraft/client/renderer/block/model/BlockModelDefinition
	a variants
	b multiPart
	a ()Ljava/util/Map; getVariants
	a (Ldof$a;Ljava/io/Reader;)Ldof; fromStream
	a (Ljava/lang/String;)Z hasVariant
	b ()Ljava/util/Set; getMultiVariants
	b (Ljava/lang/String;)Ldon; getVariant
	c ()Z isMultiPart
	d ()Ldos; getMultiPart
doe net/minecraft/client/renderer/block/model/BlockModel
	a GSON
	b name
	c textureMap
	d parent
	e parentLocation
	f LOGGER
	g FACE_BAKERY
	h elements
	i isGui3d
	j hasAmbientOcclusion
	k transforms
	l overrides
	a ()Ljava/util/List; getElements
	a (Ldoa;Ldob;Ldxb;Lnet/minecraft/server/EnumDirection;Ldyv;)Ldnz; bakeFace
	a (Ldom$b;)Ldol; getTransform
	a (Ldys;Ldoe;)Ldok; getItemOverrides
	a (Ldys;Ldoe;Ljava/util/function/Function;Ldyv;)Ldyp; bake
	a (Ldys;Ljava/util/function/Function;Ldyv;)Ldyp; bake
	a (Ljava/io/Reader;)Ldoe; fromStream
	a (Ljava/lang/String;)Ldoe; fromString
	a (Ljava/lang/String;Ldoe$a;)Ljava/lang/String; getTexture
	a (Ljava/util/Set;Ljava/lang/String;)V lambda$getTextures$1
	a (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; getTextures
	a (Ljava/util/function/Function;Ljava/util/Set;Ljava/util/Set;Ldoj;)V lambda$getTextures$0
	b ()Z hasAmbientOcclusion
	b (Ljava/lang/String;)Z hasTexture
	c ()Z isGui3d
	c (Ljava/lang/String;)Ljava/lang/String; getTexture
	d ()Z isResolved
	d (Ljava/lang/String;)Z isTextureReference
	e ()Ljava/util/List; getOverrides
	f ()Ljava/util/Collection; getDependencies
	g ()Ldoe; getRootModel
	h ()Ldom; getTransforms
doh net/minecraft/client/renderer/block/model/FaceBakery
	a RESCALE_22_5
	b RESCALE_45
	c BY_INDEX
	d ROT_0
	e ROT_90
	f ROT_180
	g ROT_270
	a (Ldod;Ldxb;Lnet/minecraft/server/EnumDirection;[FLdyq;Ldoc;Z)[I makeVertices
	a (Ldod;Lnet/minecraft/server/EnumDirection;Ldyq;)Ldod; recomputeUVs
	a (Ldyq;Lnet/minecraft/server/EnumDirection;)I getIndex
	a (Ldyq;Lnet/minecraft/server/EnumDirection;Ldoh$a;)V register
	a (Lnet/minecraft/server/EnumDirection;)I getShadeValue
	a (Lnet/minecraft/server/Vector3fa;Ldoc;)V applyElementRotation
	a (Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/EnumDirection;ILdyq;)I applyModelRotation
	a (Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Vector3fa;)[F setupShape
	a (Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Vector3fa;Ldob;Ldxb;Lnet/minecraft/server/EnumDirection;Ldyv;Ldoc;Z)Ldnz; bakeQuad
	a (Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Quaternion;Lnet/minecraft/server/Vector3fa;)V rotateVertexBy
	a ([I)Lnet/minecraft/server/EnumDirection; calculateFacing
	a ([IIILnet/minecraft/server/Vector3fa;ILdxb;Ldod;)V fillVertex
	a ([IILnet/minecraft/server/EnumDirection;Ldod;[FLdxb;Ldyq;Ldoc;Z)V bakeVertex
	a ([ILnet/minecraft/server/EnumDirection;)V recalculateWinding
	b (Lnet/minecraft/server/EnumDirection;)F getShade
ciz$h net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$ThirdFloorRoomCollection
net/minecraft/server/EntityPigZombie$PathfinderGoalAngerOther net/minecraft/world/entity/monster/PigZombie$PigZombieHurtByOtherGoal
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V alertOther
dog net/minecraft/client/renderer/block/model/BreakingQuad
	e breakingIcon
	f ()V calculateBreakingUVs
ciz$i net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$WoodlandMansionPiece
	d templateName
	e rotation
	f mirror
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/DefinedStructureManager;)V loadTemplate
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
doj net/minecraft/client/renderer/block/model/ItemOverride
	a model
	b predicates
	a ()Lnet/minecraft/server/MinecraftKey; getModel
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Z test
doi net/minecraft/client/renderer/block/model/ItemModelGenerator
	a LAYERS
	a (ILjava/lang/String;Ldxb;)Ljava/util/List; processFrames
	a (Ldoi$b;Ljava/util/List;Ldxb;IIIIIZ)V checkTransition
	a (Ldxb;)Ljava/util/List; getSpans
	a (Ldxb;IIIII)Z isTransparent
	a (Ldxb;Ljava/lang/String;I)Ljava/util/List; createSideElements
	a (Ljava/util/List;Ldoi$b;II)V createOrExpandSpan
	a (Ljava/util/function/Function;Ldoe;)Ldoe; generateBlockModel
net/minecraft/server/LootItemConditionInverted net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition
	a term
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcrk$a;)Lcrk$a; invert
	a (Lnet/minecraft/server/LootCollector;Ljava/util/function/Function;Ljava/util/Set;Lnet/minecraft/server/LootContextParameterSet;)V validate
	a (Lnet/minecraft/server/LootItemConditionInverted;)Lnet/minecraft/server/LootItemCondition; access$000
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b (Lnet/minecraft/server/LootItemConditionInverted;)Lnet/minecraft/server/LootItemCondition; lambda$invert$0
net/minecraft/server/BehaviorVictory net/minecraft/world/entity/ai/behavior/VictoryStroll
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
dol net/minecraft/client/renderer/block/model/ItemTransform
	a NO_TRANSFORM
	b rotation
	c translation
	d scale
dok net/minecraft/client/renderer/block/model/ItemOverrides
	a EMPTY
	b overrides
	c overrideModels
	a (Ldyp;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Ldyp; resolve
	a (Ljava/util/function/Function;Ldoe;Ldys;Ldoj;)Ldyp; lambda$new$0
net/minecraft/server/WorldGenWaterLily net/minecraft/world/level/levelgen/feature/WaterlilyFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
don net/minecraft/client/renderer/block/model/MultiVariant
	a variants
	a ()Ljava/util/List; getVariants
	a (Ldys;Ljava/util/function/Function;Ldyv;)Ldyp; bake
	a (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; getTextures
	a (Ljava/util/function/Function;Ljava/util/Set;Lnet/minecraft/server/MinecraftKey;)Ljava/util/stream/Stream; lambda$getTextures$0
	f ()Ljava/util/Collection; getDependencies
dom net/minecraft/client/renderer/block/model/ItemTransforms
	a NO_TRANSFORMS
	b transX
	c transY
	d transZ
	e rotX
	f rotY
	g rotZ
	h scaleX
	i scaleY
	j scaleZ
	k thirdPersonLeftHand
	l thirdPersonRightHand
	m firstPersonLeftHand
	n firstPersonRightHand
	o head
	p gui
	q ground
	r fixed
	a (Ldol;Z)V apply
	a (Ldom$b;)V apply
	b (Ldom$b;)Ldol; getTransform
	c (Ldom$b;)Z hasTransform
net/minecraft/server/WorldGenDecoratorDungeonConfiguration net/minecraft/world/level/levelgen/placement/MonsterRoomPlacementConfiguration
	a chance
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorDungeonConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
dpp$1 net/minecraft/client/renderer/blockentity/StructureBlockRenderer$1
	a $SwitchMap$net$minecraft$world$level$block$Mirror
	b $SwitchMap$net$minecraft$world$level$block$Rotation
dop net/minecraft/client/renderer/block/model/multipart/AndCondition
	c conditions
	a (Ljava/util/List;Lnet/minecraft/server/IBlockData;)Z lambda$getPredicate$2
	a (Lnet/minecraft/server/BlockStateList;Ldoq;)Ljava/util/function/Predicate; lambda$getPredicate$0
	a (Lnet/minecraft/server/IBlockData;Ljava/util/function/Predicate;)Z lambda$null$1
doo net/minecraft/client/renderer/block/model/Variant
	a modelLocation
	b rotation
	c uvLock
	d weight
	a ()Lnet/minecraft/server/MinecraftKey; getModelLocation
	b ()Ldyq; getRotation
	c ()Z isUvLocked
	d ()I getWeight
net/minecraft/server/PacketPlayOutScoreboardScore net/minecraft/network/protocol/game/ClientboundSetScorePacket
	a owner
	b objectiveName
	c score
	d method
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/lang/String; getOwner
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/lang/String; getObjectiveName
	d ()I getScore
	e ()Lnet/minecraft/server/ScoreboardServer$Action; getMethod
dor net/minecraft/client/renderer/block/model/multipart/KeyValueCondition
	c PIPE_SPLITTER
	d key
	e value
	a (Ljava/util/List;Lnet/minecraft/server/IBlockData;)Z lambda$getPredicate$2
	a (Lnet/minecraft/server/BlockStateList;Lnet/minecraft/server/IBlockState;Ljava/lang/String;)Ljava/util/function/Predicate; getBlockStatePredicate
	a (Lnet/minecraft/server/IBlockData;Ljava/util/function/Predicate;)Z lambda$null$1
	a (Lnet/minecraft/server/IBlockState;Ljava/util/Optional;Lnet/minecraft/server/IBlockData;)Z lambda$getBlockStatePredicate$3
	b (Lnet/minecraft/server/BlockStateList;Lnet/minecraft/server/IBlockState;Ljava/lang/String;)Ljava/util/function/Predicate; lambda$getPredicate$0
doq net/minecraft/client/renderer/block/model/multipart/Condition
	a TRUE
	b FALSE
	a (Lnet/minecraft/server/BlockStateList;)Ljava/util/function/Predicate; lambda$static$3
	a (Lnet/minecraft/server/IBlockData;)Z lambda$null$2
	b (Lnet/minecraft/server/BlockStateList;)Ljava/util/function/Predicate; lambda$static$1
	b (Lnet/minecraft/server/IBlockData;)Z lambda$null$0
dot net/minecraft/client/renderer/block/model/multipart/OrCondition
	c conditions
	a (Ljava/util/List;Lnet/minecraft/server/IBlockData;)Z lambda$getPredicate$2
	a (Lnet/minecraft/server/BlockStateList;Ldoq;)Ljava/util/function/Predicate; lambda$getPredicate$0
	a (Lnet/minecraft/server/IBlockData;Ljava/util/function/Predicate;)Z lambda$null$1
dos net/minecraft/client/renderer/block/model/multipart/MultiPart
	a definition
	b selectors
	a ()Ljava/util/List; getSelectors
	a (Ldou;)Ljava/util/stream/Stream; lambda$getDependencies$0
	a (Ldys;Ljava/util/function/Function;Ldyv;)Ldyp; bake
	a (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; getTextures
	a (Ljava/util/function/Function;Ljava/util/Set;Ldou;)Ljava/util/stream/Stream; lambda$getTextures$1
	b ()Ljava/util/Set; getMultiVariants
	f ()Ljava/util/Collection; getDependencies
dov net/minecraft/client/renderer/block/model/multipart/package-info
net/minecraft/server/AdvancementDataWorld net/minecraft/server/ServerAdvancementManager
	DESERIALIZER GSON
	REGISTRY advancements
	a LOGGER
	a ()Ljava/util/Collection; getAllAdvancements
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/Advancement$SerializedAdvancement; lambda$static$0
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/util/Map;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/util/Map;Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)V lambda$apply$1
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Advancement; getAdvancement
dou net/minecraft/client/renderer/block/model/multipart/Selector
	a condition
	b variant
	a ()Ldon; getVariant
	a (Lnet/minecraft/server/BlockStateList;)Ljava/util/function/Predicate; getPredicate
dox net/minecraft/client/renderer/block/package-info
dki$a net/minecraft/client/multiplayer/ServerData$ServerPackStatus
	a ENABLED
	b DISABLED
	c PROMPT
	d name
	e $VALUES
	a ()Lnet/minecraft/server/IChatBaseComponent; getName
net/minecraft/server/WorldGenDecoratorHeightBiased2 net/minecraft/world/level/levelgen/placement/CountVeryBiasedRangeDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureChanceDecoratorCountConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureChanceDecoratorCountConfiguration;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$place$0
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
dow net/minecraft/client/renderer/block/model/package-info
doz net/minecraft/client/renderer/blockentity/BannerRenderer
	c bannerModel
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntityBanner;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/TileEntityBanner;DDDFI)V render
doy net/minecraft/client/renderer/block/statemap/package-info
net/minecraft/server/BehaviorPlay net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids
	a (Ljava/util/Map$Entry;)Z lambda$findSomeoneBeingChased$1
	a (Ljava/util/Map;Lnet/minecraft/server/EntityLiving;)V lambda$checkHowManyChasersEachFriendHas$3
	a (Lnet/minecraft/server/EntityCreature;)Ljava/util/Optional; findSomeoneToChase
	a (Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/EntityLiving;)V chaseKid
	a (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityLiving; whoAreYouChasing
	a (Lnet/minecraft/server/EntityLiving;Ljava/lang/Integer;)Ljava/lang/Integer; lambda$null$2
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z isFriendChasingMe
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/EntityLiving;)V fleeFromChaser
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityCreature;)Ljava/util/Optional; findSomeoneBeingChased
	b (Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/EntityLiving;)V lambda$start$0
	b (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityLiving; seeIfSomeoneIsChasingMe
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$isFriendChasingMe$5
	c (Lnet/minecraft/server/EntityCreature;)Ljava/util/Map; checkHowManyChasersEachFriendHas
	c (Lnet/minecraft/server/EntityLiving;)Z isChasingSomeone
	c (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$seeIfSomeoneIsChasingMe$4
	d (Lnet/minecraft/server/EntityCreature;)Ljava/util/List; getFriendsNearby
	e (Lnet/minecraft/server/EntityCreature;)Z hasFriendsNearby
net/minecraft/server/ChatHoverable$EnumHoverAction net/minecraft/network/chat/HoverEvent$Action
	d LOOKUP
	e allowFromServer
	f name
	g $VALUES
	a ()Z isAllowedFromServer
	a (Ljava/lang/String;)Lnet/minecraft/server/ChatHoverable$EnumHoverAction; getByName
	a (Lnet/minecraft/server/ChatHoverable$EnumHoverAction;)Lnet/minecraft/server/ChatHoverable$EnumHoverAction; lambda$static$0
	b ()Ljava/lang/String; getName
net/minecraft/server/WorldGenFeatureRandomChoiceConfigurationWeight net/minecraft/world/level/levelgen/feature/WeightedConfiguredFeature
	a feature
	b config
	c chance
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureRandomChoiceConfigurationWeight; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Z place
net/minecraft/server/BehaviorStrollPosition net/minecraft/world/entity/ai/behavior/StrollAroundPoi
	a memoryType
	b nextOkStartTime
	c maxDistanceFromPoi
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/MemoryTarget; lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
dpa net/minecraft/client/renderer/blockentity/BeaconRenderer
	c BEAM_LOCATION
	a (DDDDDJII[FDD)V renderBeaconBeam
	a (DDDDJII[F)V renderBeaconBeam
	a (DDDDLjava/util/List;J)V renderBeaconBeam
	a (Lnet/minecraft/server/TileEntity;)Z shouldRenderOffScreen
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntityBeacon;)Z shouldRenderOffScreen
	a (Lnet/minecraft/server/TileEntityBeacon;DDDFI)V render
dpc net/minecraft/client/renderer/blockentity/BellRenderer
	c BELL_RESOURCE_LOCATION
	d bellModel
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntityBell;DDDFI)V render
dpb net/minecraft/client/renderer/blockentity/BedRenderer
	c TEXTURES
	d bedModel
	a (I)[Lnet/minecraft/server/MinecraftKey; lambda$static$1
	a (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/MinecraftKey; lambda$static$0
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntityBed;DDDFI)V render
	a (ZDDDLnet/minecraft/server/EnumDirection;)V renderPiece
dpe net/minecraft/client/renderer/blockentity/BlockEntityRenderer
	a BREAKING_LOCATIONS
	b blockEntityRenderDispatcher
	a ()Lnet/minecraft/server/World; getLevel
	a (Ldpd;)V init
	a (Lnet/minecraft/server/MinecraftKey;)V bindTexture
	a (Lnet/minecraft/server/TileEntity;)Z shouldRenderOffScreen
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntity;Ljava/lang/String;DDDI)V renderNameTag
	a (Z)V setOverlayRenderState
	b ()Lcyu; getFont
net/minecraft/server/EnumMonsterType net/minecraft/world/entity/MobType
	e WATER
dpd net/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher
	a instance
	b xOff
	c yOff
	d zOff
	e textureManager
	f level
	g camera
	h cameraHitResult
	i renderers
	j font
	a ()Lcyu; getFont
	a (Ljava/lang/Class;)Ldpe; getRenderer
	a (Lnet/minecraft/server/TileEntity;)Ldpe; getRenderer
	a (Lnet/minecraft/server/TileEntity;DDDF)V render
	a (Lnet/minecraft/server/TileEntity;DDDFIZ)V render
	a (Lnet/minecraft/server/TileEntity;F)V render
	a (Lnet/minecraft/server/TileEntity;FI)V render
	a (Lnet/minecraft/server/World;)V setLevel
	a (Lnet/minecraft/server/World;Ldxc;Lcyu;Lcxq;Lnet/minecraft/server/MovingObjectPosition;)V prepare
	b (Lnet/minecraft/server/TileEntity;)V renderItem
net/minecraft/server/WorldGenFeatureJungleGrass net/minecraft/world/level/levelgen/feature/JungleGrassFeature
	a (Ljava/util/Random;)Lnet/minecraft/server/IBlockData; getState
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
dpg net/minecraft/client/renderer/blockentity/ChestRenderer
	c CHEST_LARGE_TRAP_LOCATION
	d CHEST_LARGE_XMAS_LOCATION
	e CHEST_LARGE_LOCATION
	f CHEST_TRAP_LOCATION
	g CHEST_XMAS_LOCATION
	h CHEST_LOCATION
	i ENDER_CHEST_LOCATION
	j chestModel
	k largeChestModel
	l xmasTextures
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntity;FLdgx;)V rotateLid
	a (Lnet/minecraft/server/TileEntity;IZ)Ldgx; getChestModelAndBindTexture
dpf net/minecraft/client/renderer/blockentity/CampfireRenderer
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntityCampfire;DDDFI)V render
dpi net/minecraft/client/renderer/blockentity/EnchantTableRenderer
	c BOOK_LOCATION
	d bookModel
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntityEnchantTable;DDDFI)V render
net/minecraft/server/WorldBorder net/minecraft/world/level/border/WorldBorder
	a listeners
	b damagePerBlock
	c damageSafeZone
	d warningTime
	e warningBlocks
	f centerX
	g centerZ
	h absoluteMaxSize
	i extent
	a ()Lnet/minecraft/server/VoxelShape; getCollisionShape
	a (DD)Z isWithinBounds
	a (I)V setAbsoluteMaxSize
	a (Lnet/minecraft/server/AxisAlignedBB;)Z isWithinBounds
	a (Lnet/minecraft/server/BlockPosition;)Z isWithinBounds
	a (Lnet/minecraft/server/Entity;)D getDistanceToBorder
	a (Lnet/minecraft/server/IWorldBorderListener;)V addListener
	a (Lnet/minecraft/server/WorldBorder;)I access$000
	a (Lnet/minecraft/server/WorldData;)V saveWorldBorderData
	b ()Lbxe; getStatus
	b (DD)D getDistanceToBorder
	b (Lnet/minecraft/server/IWorldBorderListener;)V removeListener
	b (Lnet/minecraft/server/WorldData;)V readBorderData
	c ()D getMinX
	d ()D getMinZ
	e ()D getMaxX
	f ()D getMaxZ
	getDamageAmount ()D getDamagePerBlock
	getDamageBuffer ()D getDamageSafeZone
	getWarningDistance ()I getWarningBlocks
	isInBounds (Lnet/minecraft/server/ChunkCoordIntPair;)Z isWithinBounds
	j ()J getLerpRemainingTime
	k ()D getLerpTarget
	l ()Ljava/util/List; getListeners
	m ()I getAbsoluteMaxSize
	p ()D getLerpSpeed
	s ()V tick
	setDamageAmount (D)V setDamagePerBlock
	setDamageBuffer (D)V setDamageSafeZone
	setWarningDistance (I)V setWarningBlocks
	transitionSizeBetween (DDJ)V lerpSizeBetween
dph net/minecraft/client/renderer/blockentity/ConduitRenderer
	c SHELL_TEXTURE
	d ACTIVE_SHELL_TEXTURE
	e WIND_TEXTURE
	f VERTICAL_WIND_TEXTURE
	g OPEN_EYE_TEXTURE
	h CLOSED_EYE_TEXTURE
	i shellModel
	j cageModel
	k windModel
	l eyeModel
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntityConduit;DDDFI)V render
net/minecraft/server/BlockDropper net/minecraft/world/level/block/DropperBlock
	c DISPENSE_BEHAVIOUR
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IDispenseBehavior; getDispenseMethod
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V dispenseFrom
net/minecraft/server/BlockCoralFan net/minecraft/world/level/block/CoralFanBlock
	a deadBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
dpk net/minecraft/client/renderer/blockentity/PistonHeadRenderer
	c blockRenderer
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lcuw;Lnet/minecraft/server/World;Z)Z renderBlock
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntityPiston;DDDFI)V render
dpj net/minecraft/client/renderer/blockentity/LecternRenderer
	c BOOK_LOCATION
	d bookModel
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntityLectern;DDDFI)V render
dpm net/minecraft/client/renderer/blockentity/SignRenderer
	c OAK_TEXTURE
	d SPRUCE_TEXTURE
	e BIRCH_TEXTURE
	f ACACIA_TEXTURE
	g JUNGLE_TEXTURE
	h DARK_OAK_TEXTURE
	i signModel
	a (IIII)V renderHighlight
	a (Lcyu;Lnet/minecraft/server/IChatBaseComponent;)Ljava/lang/String; lambda$render$0
	a (Lnet/minecraft/server/Block;)Lnet/minecraft/server/MinecraftKey; getTexture
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntitySign;DDDFI)V render
net/minecraft/server/CommandListenerWrapper net/minecraft/commands/CommandSourceStack
	a ERROR_NOT_PLAYER
	b ERROR_NOT_ENTITY
	base source
	d worldPosition
	e level
	f permissionLevel
	g textName
	h displayName
	i server
	j silent
	k entity
	l consumer
	m anchor
	n rotation
	a ()Lnet/minecraft/server/CommandListenerWrapper; withSuppressedOutput
	a (I)Lnet/minecraft/server/CommandListenerWrapper; withPermission
	a (Lcom/mojang/brigadier/ResultConsumer;)Lnet/minecraft/server/CommandListenerWrapper; withCallback
	a (Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Lnet/minecraft/server/CommandListenerWrapper; withCallback
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	a (Lcom/mojang/brigadier/context/CommandContext;ZI)V onCommandComplete
	a (Lnet/minecraft/server/ArgumentAnchor$Anchor;)Lnet/minecraft/server/CommandListenerWrapper; withAnchor
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/CommandListenerWrapper; withEntity
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/ArgumentAnchor$Anchor;)Lnet/minecraft/server/CommandListenerWrapper; facing
	a (Lnet/minecraft/server/Vec2F;)Lnet/minecraft/server/CommandListenerWrapper; withRotation
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/CommandListenerWrapper; withPosition
	a (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/CommandListenerWrapper; withLevel
	b (I)Lnet/minecraft/server/CommandListenerWrapper; withMaximumPermission
	b (Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$new$0
	b (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/CommandListenerWrapper; facing
	c (I)Z hasPermission
	g ()Lnet/minecraft/server/Entity; getEntityOrException
	getName ()Ljava/lang/String; getTextName
	getScoreboardDisplayName ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	getWorld ()Lnet/minecraft/server/WorldServer; getLevel
	h ()Lnet/minecraft/server/EntityPlayer; getPlayerOrException
	i ()Lnet/minecraft/server/Vec2F; getRotation
	k ()Lnet/minecraft/server/ArgumentAnchor$Anchor; getAnchor
	l ()Ljava/util/Collection; getOnlinePlayerNames
	m ()Ljava/util/Collection; getAllTeams
	n ()Ljava/util/Collection; getAvailableSoundEvents
	o ()Ljava/util/stream/Stream; getRecipeNames
	sendAdminMessage (Lnet/minecraft/server/IChatBaseComponent;)V broadcastToAdmins
	sendFailureMessage (Lnet/minecraft/server/IChatBaseComponent;)V sendFailure
	sendMessage (Lnet/minecraft/server/IChatBaseComponent;Z)V sendSuccess
net/minecraft/server/ArgumentVectorPosition net/minecraft/commands/arguments/coordinates/LocalCoordinates
	a left
	b up
	c forwards
	a ()Z isXRelative
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ArgumentVectorPosition; parse
	a (Lcom/mojang/brigadier/StringReader;I)D readDouble
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec3D; getPosition
	b ()Z isYRelative
	b (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec2F; getRotation
	c ()Z isZRelative
dpl net/minecraft/client/renderer/blockentity/ShulkerBoxRenderer
	c model
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntityShulkerBox;DDDFI)V render
dpo net/minecraft/client/renderer/blockentity/SpawnerRenderer
	a (Lnet/minecraft/server/MobSpawnerAbstract;DDDF)V render
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntityMobSpawner;DDDFI)V render
dpn net/minecraft/client/renderer/blockentity/SkullBlockRenderer
	c instance
	d MODEL_BY_TYPE
	e SKIN_BY_TYPE
	a (FFFLnet/minecraft/server/EnumDirection;FLbrq$a;Lcom/mojang/authlib/GameProfile;IF)V renderSkull
	a (Lbrq$a;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/MinecraftKey; getLocation
	a (Ldpd;)V init
	a (Ljava/util/HashMap;)V lambda$static$1
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntitySkull;DDDFI)V render
	b (Ljava/util/HashMap;)V lambda$static$0
dkz$a net/minecraft/client/particle/EndRodParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dpq net/minecraft/client/renderer/blockentity/TheEndGatewayRenderer
	c BEAM_LOCATION
	a (D)I getPasses
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntityEnderPortal;DDDFI)V render
	c ()F getOffset
dpp net/minecraft/client/renderer/blockentity/StructureBlockRenderer
	a (Lcuz;Lcuw;DDDDDDIII)V renderBox
	a (Lnet/minecraft/server/TileEntity;)Z shouldRenderOffScreen
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntityStructure;)Z shouldRenderOffScreen
	a (Lnet/minecraft/server/TileEntityStructure;DDDFI)V render
	a (Lnet/minecraft/server/TileEntityStructure;DDDLnet/minecraft/server/BlockPosition;Lcuz;Lcuw;Z)V renderInvisibleBlocks
dps net/minecraft/client/renderer/blockentity/package-info
dpr net/minecraft/client/renderer/blockentity/TheEndPortalRenderer
	c END_SKY_LOCATION
	d END_PORTAL_LOCATION
	e RANDOM
	f MODELVIEW
	g PROJECTION
	h buffer
	a (D)I getPasses
	a (FFFF)Ljava/nio/FloatBuffer; getBuffer
	a (Lnet/minecraft/server/TileEntity;DDDFI)V render
	a (Lnet/minecraft/server/TileEntityEnderPortal;DDDFI)V render
	c ()F getOffset
net/minecraft/server/WorldGenFeatureRandomConfiguration net/minecraft/world/level/levelgen/feature/RandomRandomFeatureConfig
	a features
	b count
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureRandomConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/WorldGenFeatureConfigured;)Ljava/lang/Object; lambda$serialize$1
	a (Lnet/minecraft/server/WorldGenerator;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredFeature
	a ([Lnet/minecraft/server/WorldGenerator;[Lnet/minecraft/server/WorldGenFeatureConfiguration;I)Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$new$0
net/minecraft/server/IChunkLoader net/minecraft/world/level/chunk/storage/ChunkStorage
	a legacyStructureHandler
	b fixerUpper
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/NBTTagCompound;)V write
	a (Lnet/minecraft/server/NBTTagCompound;)I getVersion
	getChunkData (Lnet/minecraft/server/DimensionManager;Ljava/util/function/Supplier;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; upgradeChunkTag
dpu net/minecraft/client/renderer/chunk/ChunkRenderDispatcher
	a LOGGER
	b THREAD_FACTORY
	c bufferCount
	d threads
	e workers
	f chunksToBatch
	g availableChunkBuffers
	h uploader
	i vboUploader
	j pendingUploads
	k localWorker
	l camera
	a ()Ljava/lang/String; getStats
	a (J)Z uploadAllPendingUploadsUntil
	a (Lcuw;I)V compileChunkLayerIntoGlList
	a (Lcuw;Lcva;)V uploadChunkLayer
	a (Ldmv;)V releaseChunkBufferBuilder
	a (Ldpt;)V lambda$resortChunkTransparencyAsync$1
	a (Ldpy;)Z rebuildChunkAsync
	a (Lnet/minecraft/server/TextureType;Lcuw;Ldpy;Ldpw;D)Lcom/google/common/util/concurrent/ListenableFuture; uploadChunkLayer
	a (Lnet/minecraft/server/Vec3D;)V setCamera
	b ()Lnet/minecraft/server/Vec3D; getCameraPosition
	b (Ldpt;)V lambda$rebuildChunkAsync$0
	b (Ldpy;)Z rebuildChunkSync
	b (Lnet/minecraft/server/TextureType;Lcuw;Ldpy;Ldpw;D)V lambda$uploadChunkLayer$2
	c ()V blockUntilClear
	c (Ldpy;)Z resortChunkTransparencyAsync
	d ()Ldmv; takeChunkBufferBuilder
	d (Ldpy;)Z resortChunkTransparencySync
	e ()Ldpt; takeChunk
	f ()V clearBatchQueue
	g ()Z isQueueEmpty
	h ()V dispose
dpt net/minecraft/client/renderer/chunk/ChunkCompileTask
	a chunk
	b lock
	c cancelListeners
	d type
	e distAtCreation
	f region
	g builders
	h compiledChunk
	i status
	j isCancelled
	a ()Ldpt$a; getStatus
	a (Ldmv;)V setBuilders
	a (Ldpt$a;)V setStatus
	a (Ldpt;)I compareTo
	a (Ldpw;)V setCompiledChunk
	a (Ljava/lang/Runnable;)V addCancelListener
	b ()Ldpy; getChunk
	c ()Ldqa; takeRegion
	d ()Ldpw; getCompiledChunk
	e ()Ldmv; getBuilders
	f ()V cancel
	g ()Ljava/util/concurrent/locks/ReentrantLock; getStatusLock
	h ()Ldpt$b; getType
	i ()Z wasCancelled
	j ()D getDistAtCreation
dpw net/minecraft/client/renderer/chunk/CompiledChunk
	a UNCOMPILED
	b hasBlocks
	c hasLayer
	d isCompletelyEmpty
	e renderableBlockEntities
	f visibilitySet
	g transparencyState
	a ()Z hasNoRenderableLayers
	a (Lcuw$a;)V setTransparencyState
	a (Ldqc;)V setVisibilitySet
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)Z facesCanSeeEachother
	a (Lnet/minecraft/server/TextureType;)V setChanged
	a (Lnet/minecraft/server/TileEntity;)V addRenderableBlockEntity
	b ()Ljava/util/List; getRenderableBlockEntities
	b (Lnet/minecraft/server/TextureType;)Z isEmpty
	c ()Lcuw$a; getTransparencyState
	c (Lnet/minecraft/server/TextureType;)V layerIsPresent
	d (Lnet/minecraft/server/TextureType;)Z hasLayer
net/minecraft/server/BlockWitherRose net/minecraft/world/level/block/WitherRoseBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
dpv net/minecraft/client/renderer/chunk/ChunkRenderWorker
	a LOGGER
	b dispatcher
	c fixedBuffers
	d running
	a ()V stop
	a (Lcom/google/common/util/concurrent/ListenableFuture;)V lambda$doTask$0
	a (Ldmv;)V releaseBuffers
	a (Ldpt;)V doTask
	a (Ldpt;Ldpt$a;)Z access$100
	a (Ldpv;Ldmv;)V access$000
	b ()Ldmv; takeBuffers
	b (Ldpt;Ldpt$a;)Z checkState
dpy net/minecraft/client/renderer/chunk/RenderChunk
	a updateCounter
	b compiled
	c bb
	d level
	e renderer
	f taskLock
	g compileLock
	h pendingTask
	i globalBlockEntities
	j buffers
	k lastFrame
	l dirty
	m origin
	n relativeOrigins
	o playerChanged
	a ()V releaseBuffers
	a (FFFLdpt;)V rebuildTransparent
	a (I)Z setFrame
	a (III)V setOrigin
	a (Lcuw;Lnet/minecraft/server/BlockPosition;)V beginLayer
	a (Ldpw;)V setCompiledChunk
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/World;)Z doesChunkExistAt
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPosition; getRelativeOrigin
	a (Lnet/minecraft/server/TextureType;FFFLcuw;Ldpw;)V preEndLayer
	a (Z)V setDirty
	a ([Lnet/minecraft/server/BlockPosition$MutableBlockPosition;)V lambda$new$0
	b ()Z hasAllNeighbors
	b (FFFLdpt;)V compile
	b (I)Lcva; getBuffer
	c ()V cancelCompile
	d ()Ljava/util/concurrent/locks/ReentrantLock; getTaskLock
	e ()Ldpt; createCompileTask
	f ()Ldpt; createTransparencySortTask
	g ()D getDistToPlayerSqr
	h ()Ldpw; getCompiledChunk
	i ()V reset
	j ()Z isCompletelyEmpty
	k ()Lnet/minecraft/server/BlockPosition; getOrigin
	l ()V setNotDirty
	m ()Z isDirty
	n ()Z isDirtyFromPlayer
	o ()Lnet/minecraft/server/World; getLevel
net/minecraft/server/InventoryMerchant net/minecraft/world/inventory/MerchantContainer
	e futureXp
	itemsInSlots itemStacks
	recipe activeOffer
	selectedIndex selectionHint
	L_ ()V clearContent
	M_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	c ()Z isEmpty
	c (I)V setSelectionHint
	d (I)Z isPaymentSlot
	e ()V setChanged
	f ()V updateSellItem
	getRecipe ()Lnet/minecraft/server/MerchantRecipe; getActiveOffer
	h ()I getFutureXp
dpx net/minecraft/client/renderer/chunk/ListedRenderChunk
	d listId
	a ()V releaseBuffers
	a (Lnet/minecraft/server/TextureType;Ldpw;)I getGlListId
dpz net/minecraft/client/renderer/chunk/RenderChunkFactory
net/minecraft/server/WorldGenerator net/minecraft/world/level/levelgen/feature/Feature
	SPRING_FEATURE SPRING
	a configurationFactory
	aN FILL_LAYER
	aP STRUCTURES_REGISTRY
	aQ NOISE_AFFECTING_FEATURES
	aR doUpdate
	a (Lcom/google/common/collect/HashBiMap;)V lambda$static$0
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureConfiguration; createSettings
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenerator;)Lnet/minecraft/server/WorldGenerator; register
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/lang/String;Lnet/minecraft/server/BlockPosition;)Z isInsideStructure
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lcom/mojang/datafixers/Dynamic;)Z place
	a (Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V setBlock
	e ()Ljava/util/List; getSpecialEnemies
	f ()Ljava/util/List; getSpecialAnimals
	generate (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/BlockReed net/minecraft/world/level/block/SugarCaneBlock
	b SHAPE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
dqb$1 net/minecraft/client/renderer/chunk/VisGraph$1
	a $SwitchMap$net$minecraft$core$Direction
dqb net/minecraft/client/renderer/chunk/VisGraph
	a DX
	b DZ
	c DY
	d DIRECTIONS
	e bitSet
	f INDEX_OF_EDGES
	g empty
	a ()Ldqc; resolve
	a (I)Ljava/util/Set; floodFill
	a (III)I getIndex
	a (ILjava/util/Set;)V addEdges
	a (ILnet/minecraft/server/EnumDirection;)I getNeighborIndexAtFace
	a (Lnet/minecraft/server/BlockPosition;)V setOpaque
	a ([I)V lambda$static$0
	b (Lnet/minecraft/server/BlockPosition;)Ljava/util/Set; floodFill
	c (Lnet/minecraft/server/BlockPosition;)I getIndex
dqa net/minecraft/client/renderer/chunk/RenderChunkRegion
	a centerX
	b centerZ
	c start
	d xLength
	e yLength
	f zLength
	g chunks
	h blockStates
	i fluidStates
	j level
	a (III)I index
	a (Lnet/minecraft/server/BlockPosition;)I index
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Chunk$EnumTileEntityState;)Lnet/minecraft/server/TileEntity; getBlockEntity
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/BlockPosition;)I getBrightness
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;I)Ldqa; createIfNotEmpty
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BiomeBase; getBiome
	d (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	e_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
dqd net/minecraft/client/renderer/chunk/package-info
net/minecraft/server/EntityTropicalFish$Variant net/minecraft/world/entity/animal/TropicalFish$Pattern
	m base
	n index
	o VALUES
	p $VALUES
	a ()I getBase
	a (II)Ljava/lang/String; getPatternName
	b ()I getIndex
	c ()Ljava/lang/String; getName
dqc net/minecraft/client/renderer/chunk/VisibilitySet
	a FACINGS
	b data
	a (Ljava/util/Set;)V add
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)Z visibilityBetween
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;Z)V set
	a (Z)V setAll
ayc$1 net/minecraft/world/entity/vehicle/MinecartSpawner$1
	a this$0
	a ()Lnet/minecraft/server/World; getLevel
	a (I)V broadcastEvent
	b ()Lnet/minecraft/server/BlockPosition; getPos
net/minecraft/server/PacketPlayInClientCommand$EnumClientCommand net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action
	c $VALUES
dqf net/minecraft/client/renderer/culling/Frustum
	e FRUSTUM
	f _proj
	g _modl
	h _clip
	a ()Ldqh; getFrustum
	a ([F)V normalizePlane
	b ()V calculateFrustum
dqe net/minecraft/client/renderer/culling/Culler
	a (DDD)V prepare
	a (DDDDDD)Z cubeInFrustum
	a (Lnet/minecraft/server/AxisAlignedBB;)Z isVisible
	b (DDDDDD)Z cubeFullyInFrustum
dqh net/minecraft/client/renderer/culling/FrustumData
	a frustumData
	b projectionMatrix
	c modelViewMatrix
	d clip
	a (DDDDDD)Z cubeFullyInFrustum
	a (FFF)Z pointInFrustum
	a (FFFF)Z sphereInFrustum
	a (Lnet/minecraft/server/AxisAlignedBB;)Z isVisible
	a ([FDDD)D discriminant
	b (DDDDDD)Z cubeInFrustum
net/minecraft/server/RecipeMapClone net/minecraft/world/item/crafting/MapCloningRecipe
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
dqg net/minecraft/client/renderer/culling/FrustumCuller
	a frustum
	b xOff
	c yOff
	d zOff
	a (DDD)V prepare
	a (DDDDDD)Z cubeInFrustum
	a (Lnet/minecraft/server/AxisAlignedBB;)Z isVisible
	b (DDDDDD)Z cubeFullyInFrustum
dqj net/minecraft/client/renderer/debug/CaveDebugRenderer
	a minecraft
	b tunnelsList
	c thicknessMap
	d startPoses
	a (J)V render
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/List;)V addTunnel
net/minecraft/server/WorldGenBuriedTreasure net/minecraft/world/level/levelgen/feature/BuriedTreasureFeature
	a ()Lceu$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;II)Z isFeatureChunk
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
net/minecraft/server/InventoryClickType net/minecraft/world/inventory/ClickType
	h $VALUES
dqi net/minecraft/client/renderer/culling/package-info
net/minecraft/server/BiomeMesaPlateauMutated net/minecraft/world/level/biome/ModifiedWoodedBadlandsPlateauBiome
	a (Lnet/minecraft/server/BlockPosition;)I getFoliageColor
	b (Lnet/minecraft/server/BlockPosition;)I getGrassColor
dql net/minecraft/client/renderer/debug/ChunkDebugRenderer
	a minecraft
	b lastUpdateTime
	c radius
	d data
	a (J)V render
	a (Ldql;)Lcyc; access$300
net/minecraft/server/PacketPlayInRecipeDisplayed$Status net/minecraft/network/protocol/game/ServerboundRecipeBookUpdatePacket$Purpose
	c $VALUES
dqk net/minecraft/client/renderer/debug/ChunkBorderRenderer
	a minecraft
	a (J)V render
net/minecraft/server/DataConverterVillagerLevelXp net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix
	a LEVEL_XP_THRESHOLDS
	a (I)I getMinXpPerLevel
	a (ILcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$addXpFromLevel$6
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/lang/Integer; lambda$null$1
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; addLevel
	b (ILcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$addLevel$5
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$null$0
	b (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; addXpFromLevel
	c (ILcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$4
dqn net/minecraft/client/renderer/debug/DebugRenderer
	a pathfindingRenderer
	b waterDebugRenderer
	c chunkBorderRenderer
	d heightMapRenderer
	e collisionBoxRenderer
	f neighborsUpdateRenderer
	g caveRenderer
	h structureRenderer
	i lightDebugRenderer
	j worldGenAttemptRenderer
	k solidFaceRenderer
	l chunkRenderer
	m villageDebugRenderer
	n raidDebugRenderer
	o goalSelectorRenderer
	p renderChunkborder
	a ()V clear
	a (DDDDDDFFFF)V renderFilledBox
	a (J)V render
	a (Ljava/lang/String;DDDI)V renderFloatingText
	a (Ljava/lang/String;DDDIF)V renderFloatingText
	a (Ljava/lang/String;DDDIFZFZ)V renderFloatingText
	a (Ljava/lang/String;IIII)V renderFloatingText
	a (Lnet/minecraft/server/AxisAlignedBB;FFFF)V renderFilledBox
	a (Lnet/minecraft/server/BlockPosition;FFFFF)V renderFilledBox
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;FFFF)V renderFilledBox
	a (Lnet/minecraft/server/Entity;)Z lambda$getTargetedEntity$0
	a (Lnet/minecraft/server/Entity;I)Ljava/util/Optional; getTargetedEntity
	b ()Z shouldRender
	c ()Z switchRenderChunkborder
dqm net/minecraft/client/renderer/debug/CollisionBoxRenderer
	a minecraft
	b lastUpdateTime
	c shapes
	a (J)V render
net/minecraft/server/TileEntityEnderChest net/minecraft/world/level/block/entity/EnderChestBlockEntity
	a openness
	b oOpenness
	c openCount
	g tickInterval
	T_ ()V tick
	V_ ()V setRemoved
	a (F)F getOpenNess
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a_ (II)Z triggerEvent
	d ()V startOpen
	f ()V stopOpen
net/minecraft/server/PacketPlayOutTileEntityData net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket
	a pos
	b type
	c tag
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getType
	d ()Lnet/minecraft/server/NBTTagCompound; getTag
dqp net/minecraft/client/renderer/debug/HeightMapRenderer
	a minecraft
	a (J)V render
dqo net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer
	a minecraft
	b goalSelectors
	a ()V clear
	a (I)V removeGoalSelector
	a (ILjava/util/List;)V addGoalSelector
	a (J)V render
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Integer;Ljava/util/List;)V lambda$render$0
dqr net/minecraft/client/renderer/debug/NeighborsUpdateRenderer
	a minecraft
	b lastUpdate
	a (J)V render
	a (JLnet/minecraft/server/BlockPosition;)V addUpdate
dqq net/minecraft/client/renderer/debug/LightDebugRenderer
	a minecraft
	a (J)V render
dqt net/minecraft/client/renderer/debug/RaidDebugRenderer
	a minecraft
	b raidCenters
	a (J)V render
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;I)V renderTextOverBlock
	a (Ljava/util/Collection;)V setRaidCenters
	a (Lnet/minecraft/server/BlockPosition;)V highlightRaidCenter
	b ()V doRender
	c ()Lcxq; getCamera
dqs net/minecraft/client/renderer/debug/PathfindingRenderer
	a minecraft
	b pathMap
	c pathMaxDist
	d creationMap
	a (ILnet/minecraft/server/PathEntity;F)V addPath
	a (J)V render
	a (Lcxq;Lnet/minecraft/server/BlockPosition;)F distanceToCamera
	a (Lcxq;Lnet/minecraft/server/PathEntity;)V renderPathLine
	a (Lcxq;Lnet/minecraft/server/PathEntity;FZZ)V renderPath
	b ()Lcxq; getCamera
	b (Lcxq;Lnet/minecraft/server/PathEntity;FZZ)V doRenderPath
dqv net/minecraft/client/renderer/debug/StructureRenderer
	a minecraft
	b postMainBoxes
	c postPiecesBoxes
	d startPiecesMap
	a ()V clear
	a (J)V render
	a (Lnet/minecraft/server/StructureBoundingBox;Ljava/util/List;Ljava/util/List;Lnet/minecraft/server/DimensionManager;)V addBoundingBox
net/minecraft/server/CriterionTriggerEntityHurtPlayer net/minecraft/advancements/critereon/EntityHurtPlayerTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DamageSource;FFZ)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lau$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
dqu net/minecraft/client/renderer/debug/SolidFaceRenderer
	a minecraft
	a (J)V render
dqx net/minecraft/client/renderer/debug/WaterDebugRenderer
	a minecraft
	a (J)V render
dqw net/minecraft/client/renderer/debug/VillageDebugRenderer
	a LOGGER
	b minecraft
	c pois
	d villageSections
	e brainDumpsPerEntity
	f lastLookedAtUuid
	a ()V clear
	a (I)V removeBrainDump
	a (ILdqw$a;)Z lambda$removeBrainDump$0
	a (J)V render
	a (Ldqw$a;)V addOrUpdateBrainDump
	a (Ldqw$b;)V addPoi
	a (Ljava/lang/String;Ldqw$b;II)V renderTextOverPoi
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;II)V renderTextOverPos
	a (Lnet/minecraft/server/BlockPosition;)V removePoi
	a (Lnet/minecraft/server/BlockPosition;I)V setFreeTicketCount
	a (Lnet/minecraft/server/BlockPosition;Ldqw$a;)Z lambda$getTicketHolders$5
	a (Lnet/minecraft/server/BlockPosition;Ldqw$b;)V lambda$doRender$3
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/List;)V renderGhostPoi
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Ljava/util/List;)V lambda$doRender$4
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/SectionPosition;)V lambda$doRender$1
	a (Lnet/minecraft/server/Entity;)V lambda$updateLastLookedAtUuid$6
	a (Lnet/minecraft/server/IPosition;ILjava/lang/String;IF)V renderTextOverMob
	a (Lnet/minecraft/server/SectionPosition;)V setVillageSection
	b ()V doRender
	b (Ldqw$a;)V renderPath
	b (Ldqw$b;)V renderPoiInfo
	b (Lnet/minecraft/server/BlockPosition;)V highlightPoi
	b (Lnet/minecraft/server/SectionPosition;)V setNotVillageSection
	c ()Lcxq; getCamera
	c (Ldqw$a;)V renderVillagerInfo
	c (Ldqw$b;)Ljava/util/Set; getTicketHolderNames
	c (Lnet/minecraft/server/BlockPosition;)Ljava/util/Collection; getTicketHolders
	c (Lnet/minecraft/server/SectionPosition;)V highlightVillageSection
	d ()Ljava/util/Map; getGhostPois
	d (Ldqw$a;)Z isVillagerSelected
	e ()V updateLastLookedAtUuid
	e (Ldqw$a;)Z isPlayerCloseEnoughToMob
	f (Ldqw$a;)V lambda$doRender$2
dqz net/minecraft/client/renderer/debug/package-info
net/minecraft/server/BlockStonecutter net/minecraft/world/level/block/StonecutterBlock
	a FACING
	b SHAPE
	c CONTAINER_TITLE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$getMenuProvider$0
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	f (Lnet/minecraft/server/IBlockData;)Z canOcclude
	n (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
dqy net/minecraft/client/renderer/debug/WorldGenAttemptRenderer
	a minecraft
	b toRender
	c scales
	d alphas
	e reds
	f greens
	g blues
	a (J)V render
	a (Lnet/minecraft/server/BlockPosition;FFFFF)V addPos
net/minecraft/server/WorldGenFlatLayerInfo net/minecraft/world/level/levelgen/flat/FlatLayerInfo
	a blockState
	b height
	c start
	a ()I getHeight
	a (I)V setStart
	b ()Lnet/minecraft/server/IBlockData; getBlockState
	c ()I getStart
uk$2 net/minecraft/server/dedicated/DedicatedServer$2
	a this$0
dra net/minecraft/client/renderer/entity/AbstractHorseRenderer
	a scale
	a (Lnet/minecraft/server/EntityHorseAbstract;F)V scale
	a (Lnet/minecraft/server/EntityLiving;F)V scale
drc net/minecraft/client/renderer/entity/AreaEffectCloudRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityAreaEffectCloud;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
avb$1 net/minecraft/world/entity/monster/Shulker$1
uk$1 net/minecraft/server/dedicated/DedicatedServer$1
	a this$0
drb net/minecraft/client/renderer/entity/AbstractZombieRenderer
	a ZOMBIE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityZombie;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityZombie;FFF)V setupRotations
net/minecraft/server/PersistentIdCounts net/minecraft/world/level/saveddata/maps/MapIndex
	a usedAuxIds
	a ()I getFreeAuxValueForMap
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
net/minecraft/server/LootItemFunctions net/minecraft/world/level/storage/loot/functions/LootItemFunctions
	a IDENTITY
	b FUNCTIONS_BY_NAME
	c FUNCTIONS_BY_CLASS
	a (Lcqh$b;)V register
	a (Ljava/util/function/BiFunction;Ljava/util/function/BiFunction;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; lambda$compose$1
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; lambda$static$0
	a (Lnet/minecraft/server/LootItemFunction;)Lcqh$b; getSerializer
	a (Lnet/minecraft/server/MinecraftKey;)Lcqh$b; getSerializer
	a ([Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; compose
	a ([Ljava/util/function/BiFunction;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; lambda$compose$2
dre net/minecraft/client/renderer/entity/ArmorStandRenderer
	a DEFAULT_SKIN_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityArmorStand;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityArmorStand;DDDFF)V render
	a (Lnet/minecraft/server/EntityArmorStand;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;)Z shouldShowName
	a (Lnet/minecraft/server/EntityLiving;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
	b (Lnet/minecraft/server/Entity;)Z shouldShowName
	b (Lnet/minecraft/server/EntityArmorStand;)Z shouldShowName
net/minecraft/server/ArgumentParserItemStack net/minecraft/commands/arguments/item/ItemParser
	a ERROR_NO_TAGS_ALLOWED
	b ERROR_UNKNOWN_ITEM
	c SUGGEST_NOTHING
	d reader
	e forTesting
	f properties
	g item
	h nbt
	i tag
	j tagCursor
	k suggestions
	a ()Ljava/util/Map; getProperties
	a (ILnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$readItem$1
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	b ()Lnet/minecraft/server/Item; getItem
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenNbt
	c ()Lnet/minecraft/server/NBTTagCompound; getNbt
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTag
	d ()Lnet/minecraft/server/MinecraftKey; getTag
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestItemIdOrTag
	e ()V readItem
	f ()V readTag
	g ()V readNbt
	h ()Lnet/minecraft/server/ArgumentParserItemStack; parse
drd net/minecraft/client/renderer/entity/ArmedModel
	a (FLnet/minecraft/server/EnumMainHand;)V translateToHand
drg net/minecraft/client/renderer/entity/BatRenderer
	a BAT_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityBat;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityBat;F)V scale
	a (Lnet/minecraft/server/EntityBat;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
drf net/minecraft/client/renderer/entity/ArrowRenderer
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityArrow;DDDFF)V render
net/minecraft/server/WorldGenEndCityPieces net/minecraft/world/level/levelgen/structure/EndCityPieces
	a OVERWRITE
	b INSERT
	c HOUSE_TOWER_GENERATOR
	d TOWER_BRIDGES
	e TOWER_GENERATOR
	f TOWER_BRIDGE_GENERATOR
	g FAT_TOWER_BRIDGES
	h FAT_TOWER_GENERATOR
	a ()Lnet/minecraft/server/DefinedStructureInfo; access$000
	a (Ljava/util/List;Lnet/minecraft/server/WorldGenEndCityPieces$Piece;)Lnet/minecraft/server/WorldGenEndCityPieces$Piece; access$300
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;)V startHouseTower
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/lang/String;Lnet/minecraft/server/EnumBlockRotation;Z)Lnet/minecraft/server/WorldGenEndCityPieces$Piece; access$200
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/WorldGenEndCityPieces$PieceGenerator;ILnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)Z access$500
	b ()Lnet/minecraft/server/DefinedStructureInfo; access$100
	b (Ljava/util/List;Lnet/minecraft/server/WorldGenEndCityPieces$Piece;)Lnet/minecraft/server/WorldGenEndCityPieces$Piece; addHelper
	b (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/lang/String;Lnet/minecraft/server/EnumBlockRotation;Z)Lnet/minecraft/server/WorldGenEndCityPieces$Piece; addPiece
	b (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/WorldGenEndCityPieces$PieceGenerator;ILnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)Z recursiveChildren
	c ()Lnet/minecraft/server/WorldGenEndCityPieces$PieceGenerator; access$400
	d ()Ljava/util/List; access$600
	e ()Lnet/minecraft/server/WorldGenEndCityPieces$PieceGenerator; access$700
	f ()Lnet/minecraft/server/WorldGenEndCityPieces$PieceGenerator; access$800
	g ()Lnet/minecraft/server/WorldGenEndCityPieces$PieceGenerator; access$900
	h ()Ljava/util/List; access$1000
dri net/minecraft/client/renderer/entity/BoatRenderer
	a model
	f BOAT_TEXTURE_LOCATIONS
	a ()Z hasSecondPass
	a (DDD)V setupTranslation
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityBoat;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityBoat;DDDFF)V render
	a (Lnet/minecraft/server/EntityBoat;FF)V setupRotation
	b (Lnet/minecraft/server/Entity;DDDFF)V renderSecondPass
	b (Lnet/minecraft/server/EntityBoat;DDDFF)V renderSecondPass
net/minecraft/server/BlockPosition$PooledBlockPosition net/minecraft/core/BlockPos$PooledMutableBlockPos
	f free
	g POOL
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	b (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; acquire
	c (DDD)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	c (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; set
	c (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	c (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	d (DDD)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; acquire
	d (III)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	d (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; move
	d (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; move
	e (DDD)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; set
	e (III)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	f (III)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; acquire
	g (III)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; set
	g (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	h (III)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; move
	h (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	i (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; acquire
	j (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; set
	k (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; move
	r ()Lnet/minecraft/server/BlockPosition$PooledBlockPosition; acquire
drh net/minecraft/client/renderer/entity/BlazeRenderer
	a BLAZE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityBlaze;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
drk net/minecraft/client/renderer/entity/CaveSpiderRenderer
	a CAVE_SPIDER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCaveSpider;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCaveSpider;F)V scale
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntitySpider;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
drj net/minecraft/client/renderer/entity/CatRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCat;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCat;F)V scale
	a (Lnet/minecraft/server/EntityCat;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
drm net/minecraft/client/renderer/entity/ChickenRenderer
	a CHICKEN_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityChicken;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityChicken;F)F getBob
	b (Lnet/minecraft/server/EntityLiving;F)F getBob
drl net/minecraft/client/renderer/entity/ChestedHorseRenderer
	a MAP
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityHorseChestedAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dro net/minecraft/client/renderer/entity/CowRenderer
	a COW_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCow;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dna$a net/minecraft/client/renderer/FaceInfo$Constants
	a MAX_Z
	b MAX_Y
	c MAX_X
	d MIN_Z
	e MIN_Y
	f MIN_X
net/minecraft/server/LootItemFunctionFillPlayerHead net/minecraft/world/level/storage/loot/functions/FillPlayerHead
	a entityTarget
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionFillPlayerHead;)Lnet/minecraft/server/LootTableInfo$EntityTarget; access$000
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;)Lcqg$a; fillPlayerHead
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$fillPlayerHead$0
drn net/minecraft/client/renderer/entity/CodRenderer
	a COD_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCod;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCod;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
dna$b net/minecraft/client/renderer/FaceInfo$VertexInfo
	a xFace
	b yFace
	c zFace
drq net/minecraft/client/renderer/entity/DefaultRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
drp net/minecraft/client/renderer/entity/CreeperRenderer
	a CREEPER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCreeper;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCreeper;F)V scale
	a (Lnet/minecraft/server/EntityCreeper;FF)I getOverlayColor
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntityLiving;FF)I getOverlayColor
drs net/minecraft/client/renderer/entity/DolphinRenderer
	a DOLPHIN_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityDolphin;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityDolphin;F)V scale
	a (Lnet/minecraft/server/EntityDolphin;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
drr net/minecraft/client/renderer/entity/DolphinModel
	a head
	b body
	f tail
	g tailFin
	a (Lnet/minecraft/server/Entity;FFFFFF)V setupAnim
	b (Lnet/minecraft/server/Entity;FFFFFF)V render
dru net/minecraft/client/renderer/entity/DrownedRenderer
	a DROWNED_LOCATION
	a (Lnet/minecraft/server/EntityDrowned;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityZombie;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityZombie;FFF)V setupRotations
drt net/minecraft/client/renderer/entity/DragonFireballRenderer
	a TEXTURE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityDragonFireball;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityDragonFireball;DDDFF)V render
drw net/minecraft/client/renderer/entity/EndCrystalRenderer
	a END_CRYSTAL_LOCATION
	f model
	g modelWithoutBottom
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/Entity;Ldqe;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityEnderCrystal;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityEnderCrystal;DDDFF)V render
	a (Lnet/minecraft/server/EntityEnderCrystal;Ldqe;DDD)Z shouldRender
net/minecraft/server/EntitySpider net/minecraft/world/entity/monster/Spider
	b DATA_FLAGS_ID
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Vec3D;)V makeStuckInBlock
	aP ()D getRideHeight
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cQ ()Lnet/minecraft/server/EnumMonsterType; getMobType
	cl ()V registerAttributes
	d (Lnet/minecraft/server/MobEffect;)Z canBeAffected
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h ()V tick
	l ()Z isClimbing
	n ()V registerGoals
	r (Z)V setClimbing
	u_ ()V defineSynchedData
	w_ ()Z onLadder
drv net/minecraft/client/renderer/entity/ElderGuardianRenderer
	a GUARDIAN_ELDER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGuardian;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGuardian;F)V scale
	a (Lnet/minecraft/server/EntityLiving;F)V scale
dry net/minecraft/client/renderer/entity/EndermanRenderer
	a ENDERMAN_LOCATION
	j random
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityEnderman;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityEnderman;DDDFF)V render
	a (Lnet/minecraft/server/EntityInsentient;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;DDDFF)V render
net/minecraft/server/BlockPressurePlateBinary net/minecraft/world/level/block/PressurePlateBlock
	e sensitivity
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOnSound
	a (Lnet/minecraft/server/IBlockData;I)Lnet/minecraft/server/IBlockData; setSignalForState
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOffSound
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getSignalStrength
	j (Lnet/minecraft/server/IBlockData;)I getSignalForState
drx net/minecraft/client/renderer/entity/EnderDragonRenderer
	a CRYSTAL_BEAM_LOCATION
	j DRAGON_EXPLODING_LOCATION
	k DRAGON_LOCATION
	a (DDDFDDDIDDD)V renderCrystalBeams
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityEnderDragon;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityEnderDragon;DDDFF)V render
	a (Lnet/minecraft/server/EntityEnderDragon;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityEnderDragon;FFFFFF)V renderModel
	a (Lnet/minecraft/server/EntityInsentient;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;FFFFFF)V renderModel
drz net/minecraft/client/renderer/entity/EndermiteRenderer
	a ENDERMITE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityEndermite;)F getFlipDegrees
	b (Lnet/minecraft/server/EntityEndermite;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	b (Lnet/minecraft/server/EntityLiving;)F getFlipDegrees
dsb net/minecraft/client/renderer/entity/EntityRenderer
	a SHADOW_LOCATION
	b entityRenderDispatcher
	c shadowRadius
	d shadowStrength
	e solidRender
	a ()Z hasSecondPass
	a (Lnet/minecraft/server/AxisAlignedBB;DDD)V render
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDD)V renderName
	a (Lnet/minecraft/server/Entity;DDDF)V renderFlame
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/Entity;DDDLjava/lang/String;D)V renderNameTags
	a (Lnet/minecraft/server/Entity;Ldqe;DDD)Z shouldRender
	a (Lnet/minecraft/server/Entity;Ljava/lang/String;DDDI)V renderNameTag
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;DDDLnet/minecraft/server/BlockPosition;FFDDD)V renderBlockShadow
	a (Lnet/minecraft/server/MinecraftKey;)V bindTexture
	a (Z)V setSolidRender
	b ()Lcyu; getFont
	b (Lnet/minecraft/server/Entity;)Z shouldShowName
	b (Lnet/minecraft/server/Entity;DDDFF)V renderSecondPass
	c ()Ldsa; getDispatcher
	c (Lnet/minecraft/server/Entity;)I getTeamColor
	c (Lnet/minecraft/server/Entity;DDDFF)V postRender
	d (Lnet/minecraft/server/Entity;)Z bindTexture
	d (Lnet/minecraft/server/Entity;DDDFF)V renderShadow
	e ()Lnet/minecraft/server/IWorldReader; getLevel
	e (Lnet/minecraft/server/Entity;)V setLightColor
dsa net/minecraft/client/renderer/entity/EntityRenderDispatcher
	a textureManager
	b level
	c camera
	d crosshairPickEntity
	e playerRotY
	f playerRotX
	g options
	h renderers
	i playerRenderers
	j defaultPlayerRenderer
	k font
	l xOff
	m yOff
	n zOff
	o solidRender
	p shouldRenderShadow
	q renderHitBoxes
	a ()Z shouldRenderShadow
	a (DDD)V setPosition
	a (F)V setPlayerRotY
	a (Ljava/lang/Class;)Ldsb; getRenderer
	a (Ljava/lang/Class;Ldsb;)V register
	a (Lnet/minecraft/server/Entity;)Ldsb; getRenderer
	a (Lnet/minecraft/server/Entity;DDDFF)V renderHitbox
	a (Lnet/minecraft/server/Entity;DDDFFZ)V render
	a (Lnet/minecraft/server/Entity;F)V renderSecondPass
	a (Lnet/minecraft/server/Entity;FZ)V render
	a (Lnet/minecraft/server/Entity;Ldqe;DDD)Z shouldRender
	a (Lnet/minecraft/server/World;)V setLevel
	a (Lnet/minecraft/server/World;Lcyu;Lcxq;Lnet/minecraft/server/Entity;Lcyg;)V prepare
	a (Z)V setRenderShadow
	b ()Z shouldRenderHitBoxes
	b (DDD)D distanceToSqr
	b (Lnet/minecraft/server/Entity;)Z hasSecondPass
	b (Z)V setRenderHitBoxes
	c ()Lcyu; getFont
	c (Z)V setSolidRendering
dsd net/minecraft/client/renderer/entity/EvokerRenderer
	a EVOKER_ILLAGER
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityIllagerWizard;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dsc net/minecraft/client/renderer/entity/EvokerFangsRenderer
	a TEXTURE_LOCATION
	f model
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityEvokerFangs;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityEvokerFangs;DDDFF)V render
dsf net/minecraft/client/renderer/entity/FallingBlockRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityFallingBlock;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityFallingBlock;DDDFF)V render
dse net/minecraft/client/renderer/entity/ExperienceOrbRenderer
	a EXPERIENCE_ORB_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityExperienceOrb;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityExperienceOrb;DDDFF)V render
dsh net/minecraft/client/renderer/entity/FishingHookRenderer
	a TEXTURE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityFishingHook;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityFishingHook;DDDFF)V render
dsg net/minecraft/client/renderer/entity/FireworkEntityRenderer
	a itemRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityFireworks;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityFireworks;DDDFF)V render
dsj net/minecraft/client/renderer/entity/GhastRenderer
	a GHAST_LOCATION
	j GHAST_SHOOTING_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGhast;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGhast;F)V scale
	a (Lnet/minecraft/server/EntityLiving;F)V scale
net/minecraft/server/BlockLantern net/minecraft/world/level/block/Lantern
	a HANGING
	b AABB
	c HANGING_AABB
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	i (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	j (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumDirection; getConnectedDirection
dsi net/minecraft/client/renderer/entity/FoxRenderer
	a RED_FOX_TEXTURE
	j RED_FOX_SLEEP_TEXTURE
	k SNOW_FOX_TEXTURE
	l SNOW_FOX_SLEEP_TEXTURE
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityFox;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityFox;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
dsl net/minecraft/client/renderer/entity/GuardianRenderer
	a GUARDIAN_LOCATION
	j GUARDIAN_BEAM_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/Entity;Ldqe;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityGuardian;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGuardian;DDDFF)V render
	a (Lnet/minecraft/server/EntityGuardian;Ldqe;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityInsentient;DDDFF)V render
	a (Lnet/minecraft/server/EntityInsentient;Ldqe;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityLiving;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;DF)Lnet/minecraft/server/Vec3D; getPosition
dsk net/minecraft/client/renderer/entity/GiantMobRenderer
	a ZOMBIE_LOCATION
	j scale
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGiantZombie;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGiantZombie;F)V scale
	a (Lnet/minecraft/server/EntityLiving;F)V scale
net/minecraft/server/RemoteStatusListener net/minecraft/server/rcon/thread/QueryThreadGs4
	h lastChallengeCheck
	i port
	j serverPort
	k maxPlayers
	l serverName
	m worldName
	n socket
	o buffer
	p request
	q idents
	r hostIp
	s serverIp
	t validChallenges
	u lastChallengeClean
	v rulesResponse
	w lastRulesResponse
	a ()V start
	a (Ljava/lang/Exception;)V recoverSocketError
	a (Ljava/net/DatagramPacket;)Z processPacket
	a (Ljava/net/SocketAddress;)[B getIdentBytes
	a ([BLjava/net/DatagramPacket;)V sendTo
	b (Ljava/net/DatagramPacket;)[B buildRuleResponse
	c (Ljava/net/DatagramPacket;)Ljava/lang/Boolean; validChallenge
	d (Ljava/net/DatagramPacket;)V sendChallenge
	f ()V pruneChallenges
	g ()Z initSocket
dsn net/minecraft/client/renderer/entity/HorseRenderer
	a LAYERED_LOCATION_CACHE
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityHorse;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dsm net/minecraft/client/renderer/entity/HeadedModel
	a ()Ldjv; getHead
	c (F)V translateToHead
net/minecraft/server/DispenserRegistry net/minecraft/server/Bootstrap
	a STDOUT
	b isBootstrapped
	c LOGGER
	a (Ljava/lang/String;)V realStdoutPrintln
	a (Ljava/util/function/Function;Lnet/minecraft/server/LocaleLanguage;Ljava/util/Set;Ljava/lang/Object;)V lambda$checkTranslations$0
	a (Lnet/minecraft/server/IRegistry;Ljava/util/function/Function;Ljava/util/Set;)V checkTranslations
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/String; lambda$getMissingTranslations$1
	b ()Ljava/util/Set; getMissingTranslations
	b (Ljava/lang/String;)V lambda$validate$2
	c ()V validate
	d ()V wrapStreams
	init ()V bootStrap
net/minecraft/server/BehaviorPositionEntity net/minecraft/world/entity/ai/behavior/EntityPosWrapper
	a entity
	a ()Lnet/minecraft/server/BlockPosition; getPos
	a (Lnet/minecraft/server/EntityLiving;)Z isVisible
	b ()Lnet/minecraft/server/Vec3D; getLookAtPos
	c ()Lnet/minecraft/server/Entity; getEntity
dsp net/minecraft/client/renderer/entity/HuskRenderer
	a HUSK_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntityZombie;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityZombie;F)V scale
avb$e net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal
	a this$0
	b peekTime
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
dso net/minecraft/client/renderer/entity/HumanoidMobRenderer
	a DEFAULT_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dsr net/minecraft/client/renderer/entity/IllusionerRenderer
	a ILLUSIONER
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityIllagerIllusioner;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityIllagerIllusioner;DDDFF)V render
	a (Lnet/minecraft/server/EntityInsentient;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;DDDFF)V render
	b (Lnet/minecraft/server/EntityIllagerIllusioner;)Z isVisible
	c (Lnet/minecraft/server/EntityLiving;)Z isVisible
avb$c net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal
	a ()Z canUse
	a (D)Lnet/minecraft/server/AxisAlignedBB; getTargetSearchArea
	a (Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
dsq net/minecraft/client/renderer/entity/IllagerRenderer
	a (Lnet/minecraft/server/EntityIllagerAbstract;F)V scale
	a (Lnet/minecraft/server/EntityLiving;F)V scale
avb$d net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal
	i this$0
	a ()Z canUse
	a (D)Lnet/minecraft/server/AxisAlignedBB; getTargetSearchArea
dst net/minecraft/client/renderer/entity/ItemEntityRenderer
	a itemRenderer
	f random
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityItem;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityItem;DDDFF)V render
	a (Lnet/minecraft/server/EntityItem;DDDFLdyp;)I setupBobbingItem
	a (Lnet/minecraft/server/ItemStack;)I getRenderAmount
avb$a net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal
	a this$0
	b attackTime
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
dss net/minecraft/client/renderer/entity/IronGolemRenderer
	a GOLEM_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityIronGolem;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityIronGolem;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
ciz$1 net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$1
avb$b net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl
	a this$0
	a ()V clientTick
dsv net/minecraft/client/renderer/entity/ItemRenderer
	a ENCHANT_GLINT_LOCATION
	b blitOffset
	c IGNORED
	d itemModelShaper
	e textureManager
	f itemColors
	a ()Ldnf; getItemModelShaper
	a (IIZ)V setupGuiItem
	a (Lcuw;IIIIIIII)V fillRect
	a (Lcuw;Ldnz;)V applyNormal
	a (Lcuw;Ldnz;I)V putQuadData
	a (Lcuw;Ljava/util/List;ILnet/minecraft/server/ItemStack;)V renderQuadList
	a (Lcyu;Lnet/minecraft/server/ItemStack;II)V renderGuiItemDecorations
	a (Lcyu;Lnet/minecraft/server/ItemStack;IILjava/lang/String;)V renderGuiItemDecorations
	a (Ldol;)Z needsFlip
	a (Ldxc;Ljava/lang/Runnable;I)V renderFoilLayer
	a (Ldyp;)V lambda$render$0
	a (Ldyp;I)V renderModelLists
	a (Ldyp;ILnet/minecraft/server/ItemStack;)V renderModelLists
	a (Ldyp;Lnet/minecraft/server/ItemStack;)V renderModelLists
	a (Ldyp;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Ldyp; resolveOverrides
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;II)V renderAndDecorateItem
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/server/ItemStack;)Z isGui3d
	a (Lnet/minecraft/server/ItemStack;II)V renderGuiItem
	a (Lnet/minecraft/server/ItemStack;IILdyp;)V renderGuiItem
	a (Lnet/minecraft/server/ItemStack;Ldom$b;)V renderStatic
	a (Lnet/minecraft/server/ItemStack;Ldyp;)V render
	a (Lnet/minecraft/server/ItemStack;Ldyp;Ldom$b;Z)V renderStatic
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;Ldom$b;Z)V renderWithMobState
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Ldyp; getModel
	b (Lnet/minecraft/server/ItemStack;)Ldyp; getModel
	b (Lnet/minecraft/server/ItemStack;II)V renderAndDecorateItem
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Ldyp; getInHandModel
	c (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; lambda$renderAndDecorateItem$4
	d (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; lambda$renderAndDecorateItem$3
	e (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; lambda$renderAndDecorateItem$2
	f (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; lambda$renderAndDecorateItem$1
net/minecraft/server/WorldProvider net/minecraft/world/level/dimension/Dimension
	a MOON_BRIGHTNESS_PER_PHASE
	b level
	c ultraWarm
	d hasCeiling
	e brightnessRamp
	f type
	g sunriseCol
	a ()V updateLightRamp
	a (FF)[F getSunriseColor
	a (II)Z isFoggyAt
	a (IIZ)Lnet/minecraft/server/BlockPosition; getValidSpawnPosition
	a (J)I getMoonPhase
	a (JF)F getTimeOfDay
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)Lnet/minecraft/server/BlockPosition; getSpawnPosInChunk
	b ()F getCloudHeight
	b (FF)Lnet/minecraft/server/Vec3D; getFogColor
	c ()Z hasGround
	canRespawn ()Z mayRespawn
	d ()Lnet/minecraft/server/BlockPosition; getDimensionSpecificSpawn
	e ()D getClearColorScale
	g ()Z isHasSkyLight
	getChunkGenerator ()Lnet/minecraft/server/ChunkGenerator; createRandomLevelGenerator
	getDimensionManager ()Lnet/minecraft/server/DimensionManager; getType
	getWorldBorder ()Lnet/minecraft/server/WorldBorder; createWorldBorder
	h ()Z isHasCeiling
	i ()[F getBrightnessRamp
	isNether ()Z isUltraWarm
	isOverworld ()Z isNaturalDimension
	k ()V saveData
	l ()V tick
dsu net/minecraft/client/renderer/entity/ItemFrameRenderer
	a MAP_BACKGROUND_LOCATION
	f FRAME_LOCATION
	g MAP_FRAME_LOCATION
	h minecraft
	i itemRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDD)V renderName
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityItemFrame;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityItemFrame;DDD)V renderName
	a (Lnet/minecraft/server/EntityItemFrame;DDDFF)V render
	b (Lnet/minecraft/server/EntityItemFrame;)V drawItem
dsx net/minecraft/client/renderer/entity/LeashKnotRenderer
	a KNOT_LOCATION
	f model
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityLeash;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLeash;DDDFF)V render
dsw net/minecraft/client/renderer/entity/LavaSlimeRenderer
	a MAGMACUBE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntityMagmaCube;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityMagmaCube;F)V scale
net/minecraft/server/PacketPlayOutVehicleMove net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket
	a x
	b y
	c z
	d yRot
	e xRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()D getX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()D getY
	d ()D getZ
	e ()F getYRot
	f ()F getXRot
dsz net/minecraft/client/renderer/entity/LivingEntityRenderer
	a LOGGER
	f model
	g tintBuffer
	h layers
	i onlySolidLayers
	j WHITE_TEXTURE
	a (Ldvy;)Z addLayer
	a (Ldwr;)V lambda$static$0
	a (Lnet/minecraft/server/Entity;DDD)V renderName
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;)Z shouldShowName
	a (Lnet/minecraft/server/EntityLiving;DDD)V setupPosition
	a (Lnet/minecraft/server/EntityLiving;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntityLiving;FF)I getOverlayColor
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;FFFFFF)V renderModel
	a (Lnet/minecraft/server/EntityLiving;FFFFFFF)V renderLayers
	a (Lnet/minecraft/server/EntityLiving;FZ)Z setupOverlayColor
	a (Lnet/minecraft/server/EnumDirection;)F sleepDirectionToRotation
	b (Ldvy;)Z removeLayer
	b (Lnet/minecraft/server/Entity;)Z shouldShowName
	b (Lnet/minecraft/server/EntityLiving;)F getFlipDegrees
	b (Lnet/minecraft/server/EntityLiving;DDD)V renderName
	b (Lnet/minecraft/server/EntityLiving;F)F getBob
	c (Lnet/minecraft/server/EntityLiving;)Z isVisible
	c (Lnet/minecraft/server/EntityLiving;F)F setupScale
	d ()Ldhh; getModel
	d (Lnet/minecraft/server/EntityLiving;)Z setupSolidState
	d (Lnet/minecraft/server/EntityLiving;F)Z setupOverlayColor
	e ()V tearDownSolidState
	e (Lnet/minecraft/server/EntityLiving;F)F getAttackAnim
	f ()V teardownOverlayColor
dsy net/minecraft/client/renderer/entity/LightningBoltRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityLightning;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLightning;DDDFF)V render
net/minecraft/server/BehaviorGateSingle net/minecraft/world/entity/ai/behavior/RunOne
net/minecraft/server/ContainerRecipeBook net/minecraft/world/inventory/RecipeBookMenu
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/server/IRecipe;)Z recipeMatches
	a (ZLnet/minecraft/server/IRecipe;Lnet/minecraft/server/EntityPlayer;)V handlePlacement
	e ()V clearCraftingContent
	f ()I getResultSlotIndex
	g ()I getGridWidth
	h ()I getGridHeight
	i ()I getSize
dge$a net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory$TeamSelectionItem
	a this$0
	b team
	c location
	d players
	Z_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	a (FI)V renderIcon
	a (Ldfy;)V selectItem
	aa_ ()Z isEnabled
dta net/minecraft/client/renderer/entity/LlamaRenderer
	a LLAMA_LOCATIONS
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLlama;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
net/minecraft/server/EnumDirection net/minecraft/core/Direction
	g data3d
	h oppositeIndex
	i data2d
	j name
	k axis
	l axisDirection
	m normal
	n VALUES
	o BY_NAME
	p BY_3D_DATA
	q BY_2D_DATA
	r BY_NORMAL
	s $VALUES
	a ()I get3DDataValue
	a (DDD)Lnet/minecraft/server/EnumDirection; getNearest
	a (FF)Lnet/minecraft/server/EnumDirection; getNearest
	a (FFF)Lnet/minecraft/server/EnumDirection; getNearest
	a (III)Lnet/minecraft/server/EnumDirection; fromNormal
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumDirection; byName
	a (Ljava/util/Random;)Lnet/minecraft/server/EnumDirection; getRandomFace
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EnumDirection; fromNormal
	a (Lnet/minecraft/server/Entity;)[Lnet/minecraft/server/EnumDirection; orderedByNearest
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection; getClockWise
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/EnumDirection$EnumAxisDirection;)Lnet/minecraft/server/EnumDirection; fromAxisAndDirection
	a (Lnet/minecraft/server/EnumDirection$EnumAxisDirection;Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection; get
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; lambda$static$7
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; lambda$static$8
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)[Lnet/minecraft/server/EnumDirection; makeDirectionArray
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection; getCounterClockWise
	b (Lnet/minecraft/server/EnumDirection;)Ljava/lang/Long; lambda$static$6
	c ()Lnet/minecraft/server/EnumDirection$EnumAxisDirection; getAxisDirection
	c (I)[Lnet/minecraft/server/EnumDirection; lambda$static$5
	c (Lnet/minecraft/server/EnumDirection;)I lambda$static$4
	d (I)[Lnet/minecraft/server/EnumDirection; lambda$static$2
	d (Lnet/minecraft/server/EnumDirection;)Z lambda$static$3
	e ()Lnet/minecraft/server/EnumDirection; getClockWise
	e (Lnet/minecraft/server/EnumDirection;)I lambda$static$1
	f ()Lnet/minecraft/server/EnumDirection; getCounterClockWise
	f (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; lambda$static$0
	fromAngle (D)Lnet/minecraft/server/EnumDirection; fromYRot
	fromType1 (I)Lnet/minecraft/server/EnumDirection; from3DDataValue
	fromType2 (I)Lnet/minecraft/server/EnumDirection; from2DDataValue
	get2DRotationValue ()I get2DDataValue
	getAdjacentX ()I getStepX
	getAdjacentY ()I getStepY
	getAdjacentZ ()I getStepZ
	j ()Ljava/lang/String; getName
	k ()Lnet/minecraft/server/EnumDirection$EnumAxis; getAxis
	l ()F toYRot
	m ()Ljava/lang/String; getSerializedName
	n ()Lnet/minecraft/server/BaseBlockPosition; getNormal
	o ()Lnet/minecraft/server/EnumDirection; getClockWiseX
	opposite ()Lnet/minecraft/server/EnumDirection; getOpposite
	p ()Lnet/minecraft/server/EnumDirection; getCounterClockWiseX
	q ()Lnet/minecraft/server/EnumDirection; getClockWiseZ
	r ()Lnet/minecraft/server/EnumDirection; getCounterClockWiseZ
dtc net/minecraft/client/renderer/entity/MinecartRenderer
	a model
	f MINECART_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityMinecartAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityMinecartAbstract;DDDFF)V render
	a (Lnet/minecraft/server/EntityMinecartAbstract;FLnet/minecraft/server/IBlockData;)V renderMinecartContents
net/minecraft/server/BlockHugeMushroom net/minecraft/world/level/block/HugeMushroomBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e UP
	f DOWN
	g PROPERTY_BY_DIRECTION
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
dtb net/minecraft/client/renderer/entity/LlamaSpitRenderer
	a LLAMA_SPIT_LOCATION
	f model
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityLlamaSpit;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLlamaSpit;DDDFF)V render
net/minecraft/server/PacketPlayInSetCommandMinecart net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket
	a entity
	b command
	c trackOutput
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/CommandBlockListenerAbstract; getCommandBlock
	b ()Ljava/lang/String; getCommand
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z isTrackOutput
net/minecraft/server/ItemBannerPattern net/minecraft/world/item/BannerPatternItem
	a bannerPattern
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbdr;)V appendHoverText
	b ()Lnet/minecraft/server/EnumBannerPatternType; getBannerPattern
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
dte net/minecraft/client/renderer/entity/MushroomCowRenderer
	a TEXTURES
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityMushroomCow;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
net/minecraft/server/LootItemConditionDamageSourceProperties net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition
	a predicate
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lam$a;)Lcrk$a; hasDamageSource
	a (Lnet/minecraft/server/LootItemConditionDamageSourceProperties;)Lnet/minecraft/server/CriterionConditionDamageSource; access$000
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b (Lam$a;)Lnet/minecraft/server/LootItemCondition; lambda$hasDamageSource$0
dtd net/minecraft/client/renderer/entity/MobRenderer
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/Entity;Ldqe;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityInsentient;DDDFF)V render
	a (Lnet/minecraft/server/EntityInsentient;Ldqe;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityLiving;)Z shouldShowName
	a (Lnet/minecraft/server/EntityLiving;DDDFF)V render
	b (Lnet/minecraft/server/Entity;)Z shouldShowName
	b (Lnet/minecraft/server/EntityInsentient;)Z shouldShowName
	b (Lnet/minecraft/server/EntityInsentient;DDDFF)V renderLeash
dtg net/minecraft/client/renderer/entity/PaintingRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityPainting;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPainting;DDDFF)V render
	a (Lnet/minecraft/server/EntityPainting;FF)V setBrightness
	a (Lnet/minecraft/server/EntityPainting;IILdxb;Ldxb;)V renderPainting
dtf net/minecraft/client/renderer/entity/OcelotRenderer
	a CAT_OCELOT_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityOcelot;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dti net/minecraft/client/renderer/entity/ParrotRenderer
	a PARROT_LOCATIONS
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityParrot;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityParrot;F)F getBob
	b (Lnet/minecraft/server/EntityLiving;F)F getBob
dth net/minecraft/client/renderer/entity/PandaRenderer
	a TEXTURES
	a (FFIFF)F getAngle
	a (Ljava/util/EnumMap;)V lambda$static$0
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityPanda;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPanda;FFF)V setupRotations
dtk net/minecraft/client/renderer/entity/PigRenderer
	a PIG_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPig;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
net/minecraft/server/BehaviorBellAlert net/minecraft/world/entity/ai/behavior/ReactToBell
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
dtj net/minecraft/client/renderer/entity/PhantomRenderer
	a PHANTOM_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityPhantom;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPhantom;F)V scale
	a (Lnet/minecraft/server/EntityPhantom;FFF)V setupRotations
dtm net/minecraft/client/renderer/entity/PillagerRenderer
	a PILLAGER
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPillager;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dtl net/minecraft/client/renderer/entity/PigZombieRenderer
	a ZOMBIE_PIGMAN_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPigZombie;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dto net/minecraft/client/renderer/entity/PufferfishRenderer
	a PUFFER_LOCATION
	j puffStateO
	k small
	l mid
	m big
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityInsentient;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityPufferFish;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPufferFish;DDDFF)V render
	a (Lnet/minecraft/server/EntityPufferFish;FFF)V setupRotations
dtn net/minecraft/client/renderer/entity/PolarBearRenderer
	a BEAR_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntityPolarBear;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPolarBear;F)V scale
dtq net/minecraft/client/renderer/entity/RavagerRenderer
	a TEXTURE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityRavager;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dtp net/minecraft/client/renderer/entity/RabbitRenderer
	a RABBIT_BROWN_LOCATION
	j RABBIT_WHITE_LOCATION
	k RABBIT_BLACK_LOCATION
	l RABBIT_GOLD_LOCATION
	m RABBIT_SALT_LOCATION
	n RABBIT_WHITE_SPLOTCHED_LOCATION
	o RABBIT_TOAST_LOCATION
	p RABBIT_EVIL_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityRabbit;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dts net/minecraft/client/renderer/entity/SalmonRenderer
	a SALMON_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
	a (Lnet/minecraft/server/EntitySalmon;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySalmon;FFF)V setupRotations
net/minecraft/server/DataConverterEntityTippedArrow net/minecraft/util/datafix/fixes/EntityTippedArrowFix
	a (Ljava/lang/String;)Ljava/lang/String; rename
dtr net/minecraft/client/renderer/entity/RenderLayerParent
	a (Lnet/minecraft/server/MinecraftKey;)V bindTexture
	d ()Ldhh; getModel
	e (Lnet/minecraft/server/Entity;)V setLightColor
dtu net/minecraft/client/renderer/entity/ShulkerBulletRenderer
	a TEXTURE_LOCATION
	f model
	a (FFF)F rotlerp
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityShulkerBullet;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityShulkerBullet;DDDFF)V render
dtt net/minecraft/client/renderer/entity/SheepRenderer
	a SHEEP_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySheep;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
net/minecraft/server/TileEntityCommand$Type net/minecraft/world/level/block/entity/CommandBlockEntity$Mode
	d $VALUES
dtw net/minecraft/client/renderer/entity/SilverfishRenderer
	a SILVERFISH_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySilverfish;)F getFlipDegrees
	b (Lnet/minecraft/server/EntityLiving;)F getFlipDegrees
	b (Lnet/minecraft/server/EntitySilverfish;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dtv net/minecraft/client/renderer/entity/ShulkerRenderer
	a DEFAULT_TEXTURE_LOCATION
	j TEXTURE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/Entity;Ldqe;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityInsentient;DDDFF)V render
	a (Lnet/minecraft/server/EntityInsentient;Ldqe;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityLiving;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityShulker;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityShulker;DDDFF)V render
	a (Lnet/minecraft/server/EntityShulker;F)V scale
	a (Lnet/minecraft/server/EntityShulker;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityShulker;Ldqe;DDD)Z shouldRender
dty net/minecraft/client/renderer/entity/SlimeRenderer
	a SLIME_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityInsentient;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntitySlime;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySlime;DDDFF)V render
	a (Lnet/minecraft/server/EntitySlime;F)V scale
net/minecraft/server/ServerCommand net/minecraft/server/ConsoleInput
	command msg
net/minecraft/server/AdvancementTree net/minecraft/advancements/TreeNodePosition
	a advancement
	b parent
	c previousSibling
	d childIndex
	e children
	f ancestor
	g thread
	h x
	i y
	j mod
	k change
	l shift
	a ()V firstWalk
	a (F)V thirdWalk
	a (FIF)F secondWalk
	a (Lnet/minecraft/server/Advancement;)V run
	a (Lnet/minecraft/server/Advancement;Lnet/minecraft/server/AdvancementTree;)Lnet/minecraft/server/AdvancementTree; addChild
	a (Lnet/minecraft/server/AdvancementTree;)Lnet/minecraft/server/AdvancementTree; apportion
	a (Lnet/minecraft/server/AdvancementTree;F)V moveSubtree
	a (Lnet/minecraft/server/AdvancementTree;Lnet/minecraft/server/AdvancementTree;)Lnet/minecraft/server/AdvancementTree; getAncestor
	b ()V executeShifts
	c ()Lnet/minecraft/server/AdvancementTree; previousOrThread
	d ()Lnet/minecraft/server/AdvancementTree; nextOrThread
	e ()V finalizePosition
dtx net/minecraft/client/renderer/entity/SkeletonRenderer
	a SKELETON_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySkeletonAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
net/minecraft/server/DataPalette net/minecraft/world/level/chunk/Palette
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (Ljava/lang/Object;)I idFor
	a (Lnet/minecraft/server/NBTTagList;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()I getSize
	b (Ljava/lang/Object;)Z maybeHas
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
dtz net/minecraft/client/renderer/entity/SnowGolemRenderer
	a SNOW_GOLEM_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySnowman;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dub net/minecraft/client/renderer/entity/SpiderRenderer
	a SPIDER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySpider;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	b (Lnet/minecraft/server/EntityLiving;)F getFlipDegrees
	b (Lnet/minecraft/server/EntitySpider;)F getFlipDegrees
dua net/minecraft/client/renderer/entity/SpectralArrowRenderer
	a SPECTRAL_ARROW_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySpectralArrow;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
net/minecraft/server/WorldGenFlowers net/minecraft/world/level/levelgen/feature/FlowerFeature
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getRandomFlower
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
dud net/minecraft/client/renderer/entity/StrayRenderer
	a STRAY_SKELETON_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySkeletonAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
duc net/minecraft/client/renderer/entity/SquidRenderer
	a SQUID_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
	a (Lnet/minecraft/server/EntitySquid;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySquid;F)F getBob
	a (Lnet/minecraft/server/EntitySquid;FFF)V setupRotations
	b (Lnet/minecraft/server/EntityLiving;F)F getBob
duf net/minecraft/client/renderer/entity/ThrownTridentRenderer
	a TRIDENT_LOCATION
	f model
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityThrownTrident;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityThrownTrident;DDDFF)V render
	b (Lnet/minecraft/server/EntityThrownTrident;DDDFF)V renderLeash
net/minecraft/server/BiomeDesertMutated net/minecraft/world/level/biome/DesertLakesBiome
due net/minecraft/client/renderer/entity/ThrownItemRenderer
	a itemRenderer
	f scale
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
duh net/minecraft/client/renderer/entity/TntMinecartRenderer
	a (Lnet/minecraft/server/EntityMinecartAbstract;FLnet/minecraft/server/IBlockData;)V renderMinecartContents
	a (Lnet/minecraft/server/EntityMinecartTNT;FLnet/minecraft/server/IBlockData;)V renderMinecartContents
dug net/minecraft/client/renderer/entity/TippableArrowRenderer
	a NORMAL_ARROW_LOCATION
	f TIPPED_ARROW_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityTippedArrow;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
duj net/minecraft/client/renderer/entity/TropicalFishRenderer
	a modelA
	j modelB
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityInsentient;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityTropicalFish;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityTropicalFish;DDDFF)V render
	a (Lnet/minecraft/server/EntityTropicalFish;FFF)V setupRotations
dui net/minecraft/client/renderer/entity/TntRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityTNTPrimed;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityTNTPrimed;DDDFF)V render
net/minecraft/server/RegionFileCache net/minecraft/world/level/chunk/storage/RegionFileStorage
	a folder
	cache regionCache
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/RegionFile; getRegionFile
dul net/minecraft/client/renderer/entity/UndeadHorseRenderer
	a MAP
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityHorseAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
duk net/minecraft/client/renderer/entity/TurtleRenderer
	a TURTLE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityInsentient;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;DDDFF)V render
	a (Lnet/minecraft/server/EntityTurtle;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityTurtle;DDDFF)V render
net/minecraft/server/MobSpawnerTrader net/minecraft/world/entity/npc/WanderingTraderSpawner
	a random
	b level
	c tickDelay
	d spawnDelay
	e spawnChance
	a ()V tick
	a (Lnet/minecraft/server/BlockPosition;)Z lambda$spawn$0
	a (Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; findSpawnPositionNear
	a (Lnet/minecraft/server/EntityVillagerTrader;I)V tryToSpawnLlamaFor
	b ()Z spawn
dun net/minecraft/client/renderer/entity/VillagerHeadModel
	a (Z)V hatVisible
net/minecraft/server/BlockLeaves net/minecraft/world/level/block/LeavesBlock
	c renderCutout
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateDistance
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Z)V setFancy
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isViewBlocking
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	f (Lnet/minecraft/server/IBlockData;)Z canOcclude
	j (Lnet/minecraft/server/IBlockData;)I getDistanceAt
	k (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getLightBlock
	m (Lnet/minecraft/server/IBlockData;)Z isRandomlyTicking
dum net/minecraft/client/renderer/entity/VexRenderer
	a VEX_LOCATION
	j VEX_CHARGING_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntityVex;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityVex;F)V scale
dup net/minecraft/client/renderer/entity/VillagerRenderer
	a VILLAGER_BASE_SKIN
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntityVillager;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityVillager;F)V scale
duo net/minecraft/client/renderer/entity/VillagerProfessionLayer
	a LEVEL_LOCATIONS
	b typeHatCache
	c professionHatCache
	d resourceManager
	e path
	a ()Z colorsOnDamage
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;Ljava/lang/String;Lnet/minecraft/server/RegistryBlocks;Ljava/lang/Object;)Ldyf$a; getHatData
	a (Ljava/lang/String;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; getResourceLocation
	a (Ljava/lang/String;Lnet/minecraft/server/RegistryBlocks;Ljava/lang/Object;Ljava/lang/Object;)Ldyf$a; lambda$getHatData$1
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFFFFFF)V render
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
dur net/minecraft/client/renderer/entity/WanderingTraderRenderer
	a VILLAGER_BASE_SKIN
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntityVillagerTrader;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityVillagerTrader;F)V scale
btp$a net/minecraft/world/level/block/entity/BannerPattern$Builder
	a patterns
	a ()Lnet/minecraft/server/NBTTagList; toListTag
	a (Lnet/minecraft/server/EnumBannerPatternType;Lnet/minecraft/server/EnumColor;)Lbtp$a; addPattern
net/minecraft/server/CommandTeleport net/minecraft/server/commands/TeleportCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$9
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/Entity;)I teleportToEntity
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/IVectorPosition;Lnet/minecraft/server/IVectorPosition;Ltv$a;)I teleportToPos
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;Lnet/minecraft/server/WorldServer;DDDLjava/util/Set;FFLtv$a;)V performTeleport
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	b (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
duq net/minecraft/client/renderer/entity/VindicatorRenderer
	a VINDICATOR
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityVindicator;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
bcf$1 net/minecraft/world/item/ItemCooldowns$1
aqm$1 net/minecraft/world/entity/ai/village/ReputationEventType$1
	f val$name
dys$a net/minecraft/client/resources/model/ModelBakery$BlockStateDefinitionException
dut net/minecraft/client/renderer/entity/WitherBossRenderer
	a WITHER_INVULNERABLE_LOCATION
	j WITHER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntityWither;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityWither;F)V scale
dus net/minecraft/client/renderer/entity/WitchRenderer
	a WITCH_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityInsentient;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntityWitch;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityWitch;DDDFF)V render
	a (Lnet/minecraft/server/EntityWitch;F)V scale
duv net/minecraft/client/renderer/entity/WitherSkullRenderer
	a WITHER_INVULNERABLE_LOCATION
	f WITHER_LOCATION
	g model
	a (FFF)F rotlerp
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityWitherSkull;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityWitherSkull;DDDFF)V render
dys$b net/minecraft/client/resources/model/ModelBakery$ModelGroupKey
	a models
	b coloringValues
	a (Lnet/minecraft/server/BlockStateList;Lnet/minecraft/server/IBlockData;Ldou;)Z lambda$create$0
	a (Lnet/minecraft/server/IBlockData;Ldos;Ljava/util/Collection;)Ldys$b; create
	a (Lnet/minecraft/server/IBlockData;Ldyy;Ljava/util/Collection;)Ldys$b; create
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Collection;)Ljava/util/List; getColoringValues
duu net/minecraft/client/renderer/entity/WitherSkeletonRenderer
	a WITHER_SKELETON_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntitySkeletonAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySkeletonAbstract;F)V scale
net/minecraft/server/BlockFlowerPot net/minecraft/world/level/block/FlowerPotBlock
	a SHAPE
	b POTTED_BY_CONTENT
	c content
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	d ()Lnet/minecraft/server/Block; getContent
dux net/minecraft/client/renderer/entity/ZombieRenderer
duw net/minecraft/client/renderer/entity/WolfRenderer
	a WOLF_LOCATION
	j WOLF_TAME_LOCATION
	k WOLF_ANGRY_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/EntityInsentient;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;DDDFF)V render
	a (Lnet/minecraft/server/EntityWolf;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityWolf;DDDFF)V render
	a (Lnet/minecraft/server/EntityWolf;F)F getBob
	b (Lnet/minecraft/server/EntityLiving;F)F getBob
duz net/minecraft/client/renderer/entity/layers/AbstractArmorLayer
	a ENCHANT_GLINT_LOCATION
	b innerModel
	c outerModel
	d alpha
	e red
	f green
	g blue
	h colorized
	i ARMOR_LOCATION_CACHE
	a ()Z colorsOnDamage
	a (FFFF)V setColor
	a (Ldhp;)V hideAllArmor
	a (Ldhp;Lnet/minecraft/server/EnumItemSlot;)V setPartVisibility
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/Entity;Ldhh;FFFFFFF)V renderFoil
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFFFFFFLnet/minecraft/server/EnumItemSlot;)V renderArmorPiece
	a (Lnet/minecraft/server/EnumItemSlot;)Ldhp; getArmorModel
	a (Lnet/minecraft/server/ItemArmor;Z)Lnet/minecraft/server/MinecraftKey; getArmorLocation
	a (Lnet/minecraft/server/ItemArmor;ZLjava/lang/String;)Lnet/minecraft/server/MinecraftKey; getArmorLocation
	b ()V resetColor
	b (Lnet/minecraft/server/EnumItemSlot;)Z usesInnerModel
byd$b$1 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$1
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
duy net/minecraft/client/renderer/entity/ZombieVillagerRenderer
	a ZOMBIE_VILLAGER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityZombieVillager;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityZombieVillager;FFF)V setupRotations
byd$b$2 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$2
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
net/minecraft/server/WorldGenVines net/minecraft/world/level/levelgen/feature/VinesFeature
	a DIRECTIONS
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/EntityParrot net/minecraft/world/entity/animal/Parrot
	bC flap
	bD flapSpeed
	bE oFlapSpeed
	bF oFlap
	bG flapping
	bH DATA_VARIANT_ID
	bI NOT_PARROT_PREDICATE
	bJ POISONOUS_FOOD
	bK TAME_FOOD
	bL MOB_SOUND_MAP
	bM partyParrot
	bN jukebox
	C (Lnet/minecraft/server/Entity;)Z doHurtTarget
	D (Lnet/minecraft/server/Entity;)V doPush
	E_ ()Z isFlying
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Ljava/util/Random;)Lnet/minecraft/server/SoundEffect; getAmbient
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/BlockPosition;Z)V setRecordPlayingNearby
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;)V playAmbientSound
	aI ()Z isPushable
	am ()Z makeFlySound
	b (FF)V causeFallDamage
	b (Ljava/util/Random;)F getPitch
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/SoundEffect; getImitatedSound
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;)Z imitateNearbyMobs
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkParrotSpawnRules
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cV ()F getVoicePitch
	cc ()Lnet/minecraft/server/SoundCategory; getSoundSource
	cl ()V registerAttributes
	e (F)F playFlySound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	ee ()Z isPartyParrot
	eg ()Ljava/util/Map; access$000
	ei ()V calculateFlapping
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	k ()V aiStep
	n ()V registerGoals
	u_ ()V defineSynchedData
byd$b$3 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$3
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
byd$b$4 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$4
	g queue
	a ()Ljava/util/List; lambda$$0
	a (Lnet/minecraft/server/GeneratorAccess;)V processChunk
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
byd$b$5 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$5
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
dva net/minecraft/client/renderer/entity/layers/ArrowLayer
	a dispatcher
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFFFFFF)V render
dvc net/minecraft/client/renderer/entity/layers/CarriedBlockLayer
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityEnderman;FFFFFFF)V render
dbp$1 net/minecraft/client/gui/screens/CreateBuffetWorldScreen$1
cqi$a net/minecraft/world/level/storage/loot/functions/LootItemFunctions$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemFunction; deserialize
	a (Lnet/minecraft/server/LootItemFunction;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
cpw$1 net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$1
dvb net/minecraft/client/renderer/entity/layers/CapeLayer
	a ()Z colorsOnDamage
	a (Ldmm;FFFFFFF)V render
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
dve net/minecraft/client/renderer/entity/layers/CreeperPowerLayer
	a POWER_LOCATION
	b model
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityCreeper;FFFFFFF)V render
dns$a net/minecraft/client/renderer/banner/BannerTextures$TextureCache
	a cache
	b baseResource
	c resourceNameBase
	d hashPrefix
	a ()Z freeCacheSlot
	a (Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
net/minecraft/server/PathMode net/minecraft/world/level/pathfinder/PathComputationType
	d $VALUES
dvd net/minecraft/client/renderer/entity/layers/CatCollarLayer
	a CAT_COLLAR_LOCATION
	b catModel
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityCat;FFFFFFF)V render
dns$b net/minecraft/client/renderer/banner/BannerTextures$TimestampedBannerTexture
	a lastUseMilliseconds
	b textureLocation
dvg net/minecraft/client/renderer/entity/layers/Deadmau5EarsLayer
	a ()Z colorsOnDamage
	a (Ldmm;FFFFFFF)V render
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
dvf net/minecraft/client/renderer/entity/layers/CustomHeadLayer
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFFFFFF)V render
dvi net/minecraft/client/renderer/entity/layers/DrownedOuterLayer
	a DROWNED_OUTER_LAYER_LOCATION
	b model
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityZombie;FFFFFFF)V render
dvh net/minecraft/client/renderer/entity/layers/DolphinCarryingItemLayer
	a itemRenderer
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityDolphin;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V renderItemOnNose
dvk net/minecraft/client/renderer/entity/layers/EnderDragonDeathLayer
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityEnderDragon;FFFFFFF)V render
dvj net/minecraft/client/renderer/entity/layers/ElytraLayer
	a WINGS_LOCATION
	b elytraModel
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFFFFFF)V render
dvm net/minecraft/client/renderer/entity/layers/EnderEyesLayer
	a ENDERMAN_EYES_LOCATION
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFFFFFF)V render
dvl net/minecraft/client/renderer/entity/layers/EnderDragonEyesLayer
	a DRAGON_EYES_LOCATION
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityEnderDragon;FFFFFFF)V render
dvo net/minecraft/client/renderer/entity/layers/HorseArmorLayer
	a model
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityHorse;FFFFFFF)V render
net/minecraft/server/WorldGenFeatureCoralClaw net/minecraft/world/level/levelgen/feature/CoralClawFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z placeFeature
dvn net/minecraft/client/renderer/entity/layers/FoxHeldItemLayer
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityFox;FFFFFFF)V render
dvq net/minecraft/client/renderer/entity/layers/IronGolemFlowerLayer
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityIronGolem;FFFFFFF)V render
dvp net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer
	a (Ldhp;)V hideAllArmor
	a (Ldhp;Lnet/minecraft/server/EnumItemSlot;)V setPartVisibility
dvs net/minecraft/client/renderer/entity/layers/LlamaDecorLayer
	a TEXTURE_LOCATION
	b TRADER_LLAMA
	c model
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityLlama;FFFFFFF)V render
dvr net/minecraft/client/renderer/entity/layers/ItemInHandLayer
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Ldom$b;Lnet/minecraft/server/EnumMainHand;)V renderArmWithItem
	a (Lnet/minecraft/server/EnumMainHand;)V translateToHand
net/minecraft/server/ChunkGeneratorFactory net/minecraft/world/level/chunk/ChunkGeneratorFactory
dvu net/minecraft/client/renderer/entity/layers/PandaHoldsItemLayer
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityPanda;FFFFFFF)V render
dvt net/minecraft/client/renderer/entity/layers/MushroomCowMushroomLayer
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityMushroomCow;FFFFFFF)V render
dvw net/minecraft/client/renderer/entity/layers/PhantomEyesLayer
	a PHANTOM_EYES_LOCATION
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
dvv net/minecraft/client/renderer/entity/layers/ParrotOnShoulderLayer
	a model
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityHuman;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityHuman;FFFFFFZ)V render
	a (Lnet/minecraft/server/EntityTypes;)Z lambda$render$0
	a (ZLnet/minecraft/server/EntityHuman;Lnet/minecraft/server/NBTTagCompound;FFFFFLnet/minecraft/server/EntityTypes;)V lambda$render$1
dkk$2$1 net/minecraft/client/multiplayer/ServerStatusPinger$2$1
	a this$1
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V channelRead0
net/minecraft/server/ResourcePackFolder net/minecraft/server/packs/FolderResourcePack
	b LOGGER
	c ON_WINDOWS
	d BACKSLASH_MATCHER
	a (Ljava/io/File;ILjava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/util/function/Predicate;)V listResources
	a (Ljava/io/File;Ljava/lang/String;)Z validatePath
	a (Ljava/lang/String;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	c (Ljava/lang/String;)Z hasResource
	e (Ljava/lang/String;)Ljava/io/File; getFile
dvy net/minecraft/client/renderer/entity/layers/RenderLayer
	a renderer
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;)V setLightColor
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/MinecraftKey;)V bindTexture
	c ()Ldhh; getParentModel
dvx net/minecraft/client/renderer/entity/layers/PigSaddleLayer
	a SADDLE_LOCATION
	b model
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityPig;FFFFFFF)V render
dvz net/minecraft/client/renderer/entity/layers/SheepFurLayer
	a SHEEP_FUR_LOCATION
	b model
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntitySheep;FFFFFFF)V render
net/minecraft/server/ContainerSmoker net/minecraft/world/inventory/SmokerMenu
net/minecraft/server/CommandMe net/minecraft/server/commands/EmoteCommands
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
net/minecraft/server/ActivityFrame net/minecraft/world/entity/schedule/Keyframe
	a timeStamp
	b value
	a ()I getTimeStamp
	b ()F getValue
net/minecraft/server/NBTTagCompound net/minecraft/nbt/CompoundTag
	f LOGGER
	g SIMPLE_VALUE
	map tags
	a ()B getId
	a (BLjava/lang/String;Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; readNamedTagData
	a (I)Ljava/lang/String; lambda$createReport$1
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)V load
	a (Ljava/io/DataInput;Lnet/minecraft/server/NBTReadLimiter;)B readNamedTagType
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;)Ljava/util/UUID; getUUID
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (Ljava/lang/String;ILjava/lang/ClassCastException;)Lnet/minecraft/server/CrashReport; createReport
	a (Ljava/lang/String;Ljava/util/List;)V putByteArray
	a (Ljava/lang/String;Ljava/util/UUID;)V putUUID
	a (Ljava/lang/String;Lnet/minecraft/server/NBTBase;Ljava/io/DataOutput;)V writeNamedTag
	a (Ljava/lang/String;[J)V putLongArray
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; merge
	b ()Lnet/minecraft/server/NBTBase; copy
	b (Ljava/io/DataInput;Lnet/minecraft/server/NBTReadLimiter;)Ljava/lang/String; readNamedTagName
	b (Ljava/lang/String;)Z hasUUID
	b (Ljava/lang/String;Ljava/util/List;)V putIntArray
	b_ ()V stripEmptyChildren
	c (Ljava/lang/String;Ljava/util/List;)V putLongArray
	clone ()Lnet/minecraft/server/NBTTagCompound; copy
	d ()I size
	d (Ljava/lang/String;)B getTagType
	getKeys ()Ljava/util/Set; getAllKeys
	hasKey (Ljava/lang/String;)Z contains
	hasKeyOfType (Ljava/lang/String;I)Z contains
	s (Ljava/lang/String;)Ljava/lang/String; handleEscape
	set (Ljava/lang/String;Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; put
	setBoolean (Ljava/lang/String;Z)V putBoolean
	setByte (Ljava/lang/String;B)V putByte
	setByteArray (Ljava/lang/String;[B)V putByteArray
	setDouble (Ljava/lang/String;D)V putDouble
	setFloat (Ljava/lang/String;F)V putFloat
	setInt (Ljava/lang/String;I)V putInt
	setIntArray (Ljava/lang/String;[I)V putIntArray
	setLong (Ljava/lang/String;J)V putLong
	setShort (Ljava/lang/String;S)V putShort
	setString (Ljava/lang/String;Ljava/lang/String;)V putString
	t (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; handleEscapePretty
	u (Ljava/lang/String;)Ljava/lang/String; lambda$createReport$0
dwb net/minecraft/client/renderer/entity/layers/SlimeOuterLayer
	a model
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
net/minecraft/server/SystemUtils$IdentityHashingStrategy net/minecraft/Util$IdentityStrategy
	b $VALUES
dwa net/minecraft/client/renderer/entity/layers/ShulkerHeadLayer
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityShulker;FFFFFFF)V render
dsz$1 net/minecraft/client/renderer/entity/LivingEntityRenderer$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$scores$Team$Visibility
dwd net/minecraft/client/renderer/entity/layers/SpiderEyesLayer
	a SPIDER_EYES_LOCATION
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
dwc net/minecraft/client/renderer/entity/layers/SnowGolemHeadLayer
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntitySnowman;FFFFFFF)V render
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdLeftTurn net/minecraft/world/level/levelgen/structure/StrongholdPieces$LeftTurn
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdLeftTurn; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
dwf net/minecraft/client/renderer/entity/layers/StrayClothingLayer
	a STRAY_CLOTHES_LOCATION
	b layerModel
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityInsentient;FFFFFFF)V render
dwe net/minecraft/client/renderer/entity/layers/SpinAttackEffectLayer
	a TEXTURE
	b model
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFFFFFF)V render
dwh net/minecraft/client/renderer/entity/layers/VillagerTradeItemLayer
	a itemRenderer
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFFFFFF)V render
dwg net/minecraft/client/renderer/entity/layers/TropicalFishPatternLayer
	a modelA
	b modelB
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityTropicalFish;FFFFFFF)V render
net/minecraft/server/MobSpawnerData net/minecraft/world/level/SpawnData
	entity tag
	a ()Lnet/minecraft/server/NBTTagCompound; save
	getEntity ()Lnet/minecraft/server/NBTTagCompound; getTag
dwj net/minecraft/client/renderer/entity/layers/WitherArmorLayer
	a WITHER_ARMOR_LOCATION
	b model
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityWither;FFFFFFF)V render
dwi net/minecraft/client/renderer/entity/layers/WitchItemLayer
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFFFFFF)V render
dwl net/minecraft/client/renderer/entity/layers/package-info
dwk net/minecraft/client/renderer/entity/layers/WolfCollarLayer
	a WOLF_COLLAR_LOCATION
	a ()Z colorsOnDamage
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityWolf;FFFFFFF)V render
dwn net/minecraft/client/renderer/entity/player/PlayerRenderer
	a (Ldmm;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Ldmm;DDDFF)V render
	a (Ldmm;DDDLjava/lang/String;D)V renderNameTags
	a (Ldmm;F)V scale
	a (Ldmm;FFF)V setupRotations
	a (Ldmm;Lnet/minecraft/server/ItemStack;)Ldhp$a; getArmPose
	a (Ldmm;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)Ldhp$a; getArmPose
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;DDDFF)V render
	a (Lnet/minecraft/server/Entity;DDDLjava/lang/String;D)V renderNameTags
	a (Lnet/minecraft/server/EntityLiving;DDDFF)V render
	a (Lnet/minecraft/server/EntityLiving;F)V scale
	a (Lnet/minecraft/server/EntityLiving;FFF)V setupRotations
	b (Ldmm;)V renderRightHand
	c (Ldmm;)V renderLeftHand
	d (Ldmm;)V setModelProperties
dwm net/minecraft/client/renderer/entity/package-info
dwp net/minecraft/client/renderer/package-info
dcs$c net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList
	a this$0
dwo net/minecraft/client/renderer/entity/player/package-info
dcs$b net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList
	a blockColumns
	b itemColumns
	c headerPressed
	d statItemList
	e itemStatSorter
	f sortColumn
	g sortOrder
	h this$0
	i iconOffsets
	a (I)Lnet/minecraft/server/StatisticWrapper; getColumn
	a (Lnet/minecraft/server/IChatBaseComponent;II)V renderMousehoverTooltip
	a (Lnet/minecraft/server/Item;)Lnet/minecraft/server/IChatBaseComponent; getString
	a (Lnet/minecraft/server/StatisticWrapper;)V sortByColumn
	b (Lnet/minecraft/server/StatisticWrapper;)I getColumnIndex
dwr net/minecraft/client/renderer/texture/DynamicTexture
	f pixels
	a ()V upload
	a (Lcuj;)V setPixels
	a (Lnet/minecraft/server/IResourceManager;)V load
	e ()Lcuj; getPixels
dcs$a net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList
	a this$0
dwq net/minecraft/client/renderer/texture/AbstractTexture
	a id
	b blur
	c mipmap
	d oldBlur
	e oldMipmap
	a (ZZ)V setFilter
	b ()V popFilter
	b (ZZ)V pushFilter
	c ()I getId
	d ()V releaseId
dwt net/minecraft/client/renderer/texture/LayeredColorMaskTexture
	f LOGGER
	g baseLayerResource
	h layerMaskPaths
	i layerColors
	a (Lnet/minecraft/server/IResourceManager;)V load
dbp$a net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList
	a this$0
	a (Ldbp$a$a;)V setSelected
	a (Lnet/minecraft/server/MinecraftKey;)V lambda$new$1
	b (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/String; lambda$new$0
cpw$a net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount
	a TYPE
	b extraRounds
	c probability
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcpw$b; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Ljava/util/Random;II)I calculateNewCount
net/minecraft/server/WorldGenDecoratorDungeon net/minecraft/world/level/levelgen/placement/MonsterRoomPlacementDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorDungeonConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
dws net/minecraft/client/renderer/texture/HttpTexture
	g LOGGER
	h UNIQUE_THREAD_ID
	i file
	j urlString
	k processor
	l thread
	m uploaded
	a ()V startDownloadThread
	a (Lcuj;)V loadCallback
	a (Ldws;)Ljava/lang/String; access$000
	a (Lnet/minecraft/server/IResourceManager;)V load
	b (Lcuj;)V uploadImage
	b (Ldws;)Ljava/io/File; access$100
	c (Ldws;)Ldnd; access$300
	e ()Lorg/apache/logging/log4j/Logger; access$200
dwv net/minecraft/client/renderer/texture/MissingTextureAtlasSprite
	k MISSING_TEXTURE_LOCATION
	l missingTexture
	m MISSING_IMAGE_DATA
	a ()Ldwv; newInstance
	b ()Lnet/minecraft/server/MinecraftKey; getLocation
	c ()V wipeFrameData
	d ()Ldwr; getTexture
	r ()Lcuj; lambda$static$0
dwu net/minecraft/client/renderer/texture/LayeredTexture
	f layerPaths
	g LOGGER
	a (Lnet/minecraft/server/IResourceManager;)V load
net/minecraft/server/BehaviorFindPosition net/minecraft/world/entity/ai/behavior/AcquirePoi
	a poiType
	b memoryType
	c onlyIfAdult
	d lastUpdate
	e batchCache
	f triedCount
	a (Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z lambda$start$3
	a (Lnet/minecraft/server/BlockPosition;)Z lambda$start$0
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Z lambda$null$1
	a (Lnet/minecraft/server/VillagePlace;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/VillagePlaceType;)V lambda$start$2
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
dwx net/minecraft/client/renderer/texture/SimpleTexture
	f location
	g LOGGER
	a (Lnet/minecraft/server/IResourceManager;)V load
	b (Lnet/minecraft/server/IResourceManager;)Ldwx$a; getTextureImage
	f ()Lorg/apache/logging/log4j/Logger; access$000
dww net/minecraft/client/renderer/texture/PreloadedTexture
	g future
	a ()Ljava/util/concurrent/CompletableFuture; getFuture
	a (Ldwx$a;)Ljava/lang/Void; lambda$getFuture$1
	a (Ldxc;)V lambda$reset$3
	a (Ldxc;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;Ljava/util/concurrent/Executor;)V reset
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;)Ldwx$a; lambda$new$0
	b (Lnet/minecraft/server/IResourceManager;)Ldwx$a; getTextureImage
	c (Lnet/minecraft/server/IResourceManager;)Ldwx$a; lambda$reset$2
dwz net/minecraft/client/renderer/texture/StitcherException
	a allSprites
	a ()Ljava/util/Collection; getAllSprites
dwy net/minecraft/client/renderer/texture/Stitcher
	a HOLDER_COMPARATOR
	b mipLevel
	c texturesToBeStitched
	d storage
	e storageX
	f storageY
	g maxWidth
	h maxHeight
	a ()I getWidth
	a (II)I access$000
	a (Ldwy$a;)Z addToStorage
	a (Ldxb;)V registerSprite
	a (Ljava/util/List;Ldwy$b;)V lambda$gatherSprites$4
	b ()I getHeight
	b (II)I smallestFittingMinTexel
	b (Ldwy$a;)Z expand
	c ()V stitch
	c (Ldwy$a;)Ldxb; lambda$stitch$3
	d ()Ljava/util/List; gatherSprites
	d (Ldwy$a;)Lnet/minecraft/server/MinecraftKey; lambda$static$2
	e (Ldwy$a;)Ljava/lang/Integer; lambda$static$1
	f (Ldwy$a;)Ljava/lang/Integer; lambda$static$0
net/minecraft/server/ChunkProviderDebug net/minecraft/world/level/levelgen/DebugLevelSource
	e AIR
	f BARRIER
	g ALL_BLOCKS
	h GRID_WIDTH
	i GRID_HEIGHT
	a (II)Lnet/minecraft/server/IBlockData; getBlockStateFor
	a (IILnet/minecraft/server/HeightMap$Type;)I getBaseHeight
	a (Lnet/minecraft/server/Block;)Ljava/util/stream/Stream; lambda$static$0
	a (Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/WorldGenStage$Features;)V applyCarvers
	a (Lnet/minecraft/server/RegionLimitedWorldAccess;)V applyBiomeDecoration
	b ()I getSpawnHeight
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/IChunkAccess;)V fillFromNoise
	c (Lnet/minecraft/server/IChunkAccess;)V buildSurfaceAndBedrock
cpw$f net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount
	a TYPE
	b bonusMultiplier
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcpw$b; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Ljava/util/Random;II)I calculateNewCount
dxa net/minecraft/client/renderer/texture/TextureAtlas
	f LOCATION_BLOCKS
	g LOCATION_PARTICLES
	h LOCATION_PAINTINGS
	i LOCATION_MOB_EFFECTS
	j LOGGER
	k animatedTextures
	l sprites
	m texturesByName
	n path
	o maxSupportedTextureSize
	p maxMipLevel
	q missingTextureSprite
	a ()V cycleAnimationFrames
	a (I)V setMaxMipLevel
	a (Ldxa$a;)V reload
	a (Ldxb;)Ljava/lang/String; lambda$load$6
	a (Ljava/lang/String;)Ldxb; getTexture
	a (Ljava/util/Set;Lnet/minecraft/server/MinecraftKey;)V register
	a (Lnet/minecraft/server/IResourceManager;)V load
	a (Lnet/minecraft/server/IResourceManager;Ldwy;)Ljava/util/List; getLoadedSprites
	a (Lnet/minecraft/server/IResourceManager;Ldxb;)Z load
	a (Lnet/minecraft/server/IResourceManager;Ldxb;Ljava/util/concurrent/ConcurrentLinkedQueue;)V lambda$getLoadedSprites$3
	a (Lnet/minecraft/server/IResourceManager;Ljava/lang/Iterable;Lnet/minecraft/server/GameProfilerFiller;)Ldxa$a; prepareToStitch
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/Set;)Ljava/util/Collection; getBasicSpriteInfos
	a (Lnet/minecraft/server/MinecraftKey;)Ldxb; getSprite
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IResourceManager;Ljava/util/concurrent/ConcurrentLinkedQueue;)V lambda$getBasicSpriteInfos$2
	b (Ldxb;)Ljava/lang/String; lambda$load$5
	b (Ljava/util/Set;Lnet/minecraft/server/MinecraftKey;)V lambda$prepareToStitch$0
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; getResourceLocation
	c (Ldxb;)Ljava/lang/String; lambda$load$4
	d (Ldxb;)Ljava/lang/String; lambda$prepareToStitch$1
	e ()V tick
	f ()V wipeStaticSpriteData
	g ()V clearTextureData
cpw$e net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionApplyBonus; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionApplyBonus;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonParseException; lambda$deserialize$0
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
cpw$d net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops
	a TYPE
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcpw$b; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Ljava/util/Random;II)I calculateNewCount
net/minecraft/server/LootEntries net/minecraft/world/level/storage/loot/entries/LootPoolEntries
	a ID_TO_SERIALIZER
	b CLASS_TO_SERIALIZER
	a ()Ljava/util/Map; access$000
	a (Lcpq$b;)V register
	b ()Ljava/util/Map; access$100
dxc net/minecraft/client/renderer/texture/TextureManager
	a INTENTIONAL_MISSING_TEXTURE
	b LOGGER
	c byPath
	d tickableTextures
	e prefixRegister
	f resourceManager
	a (Ldxd;)Ljava/lang/String; lambda$register$0
	a (Ljava/lang/String;Ldwr;)Lnet/minecraft/server/MinecraftKey; register
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/concurrent/Executor;Ljava/lang/Void;)V lambda$reload$2
	a (Lnet/minecraft/server/MinecraftKey;)V bind
	a (Lnet/minecraft/server/MinecraftKey;Ldww;)V lambda$preload$1
	a (Lnet/minecraft/server/MinecraftKey;Ldxd;)Z register
	a (Lnet/minecraft/server/MinecraftKey;Ldxf;)Z register
	a (Lnet/minecraft/server/MinecraftKey;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preload
	a (Lxd$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	b (Lnet/minecraft/server/MinecraftKey;)Ldxd; getTexture
	c (Lnet/minecraft/server/MinecraftKey;)V release
	e ()V tick
cpw$c net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaDeserializer
bmt$1 net/minecraft/world/level/block/BellBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$BellAttachType
net/minecraft/server/EnumDirection8 net/minecraft/core/Direction8
	i NORTH_WEST_MASK
	j WEST_MASK
	k SOUTH_WEST_MASK
	l SOUTH_MASK
	m SOUTH_EAST_MASK
	n EAST_MASK
	o NORTH_EAST_MASK
	p NORTH_MASK
	q directions
	r $VALUES
	a ()Ljava/util/Set; getDirections
	a (ZZZZ)I getSideMask
dxb net/minecraft/client/renderer/texture/TextureAtlasSprite
	a width
	b height
	c mainImage
	d framesX
	e framesY
	f activeFrame
	g x
	h y
	i frame
	j subFrame
	k name
	l metadata
	m u0
	n u1
	o v0
	p v1
	q POW22
	a ()V uploadInterpolatedFrame
	a (D)F getU
	a (DII)I mix
	a (F)F getUOffset
	a (I)V applyMipmapping
	a (II)Z isDivisionInteger
	a (III)Z isTransparent
	a (IIII)V init
	a (IIIII)I gammaBlend
	a (IIIIZ)I alphaBlend
	a (II[Lcuj;)V upload
	a (Lnet/minecraft/server/IResource;I)V loadData
	a ([F)V lambda$static$0
	a ([[I)V fixupMipTransparency
	b ()Ljava/lang/String; lambda$applyMipmapping$1
	b (D)F getV
	b (F)F getVOffset
	b (I)V generateMipLevels
	b (IIII)Lcom/mojang/datafixers/util/Pair; getFrameSize
	c ()V wipeFrameData
	c (I)F getPow22
	c (IIII)I getPixel
	d (I)V upload
	e ()I getX
	f ()I getY
	g ()I getWidth
	h ()I getHeight
	i ()F getU0
	j ()F getU1
	k ()F getV0
	l ()F getV1
	m ()Lnet/minecraft/server/MinecraftKey; getName
	n ()V cycleFrames
	o ()I getFrameCount
	p ()Z isAnimation
	q ()V uploadFirstFrame
cpw$b net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Ljava/util/Random;II)I calculateNewCount
dxe net/minecraft/client/renderer/texture/Tickable
	e ()V tick
net/minecraft/server/TileEntityConduit net/minecraft/world/level/block/entity/ConduitBlockEntity
	a tickCount
	b VALID_BLOCKS
	c activeRotation
	g isActive
	h isHunting
	i effectBlocks
	k destroyTargetUUID
	l nextAmbientSoundActivation
	target destroyTarget
	T_ ()V tick
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (F)F getActiveRotation
	a (Lnet/minecraft/server/EntityLiving;)Z lambda$findDestroyTarget$1
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/SoundEffect;)V playSound
	a (Z)V setActive
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/EntityLiving;)Z lambda$updateDestroyTarget$0
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b (Z)V setHunting
	d ()Z isActive
	f ()Z isHunting
	h ()Z updateShape
	s ()V applyEffects
	t ()V updateDestroyTarget
	u ()V updateClientTarget
	v ()Lnet/minecraft/server/AxisAlignedBB; getDestroyRangeAABB
	x ()Lnet/minecraft/server/EntityLiving; findDestroyTarget
	y ()V animationTick
dxd net/minecraft/client/renderer/texture/TextureObject
	a (Ldxc;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;Ljava/util/concurrent/Executor;)V reset
	a (Lnet/minecraft/server/IResourceManager;)V load
	a (ZZ)V setFilter
	b ()V popFilter
	b (ZZ)V pushFilter
	c ()I getId
	d ()V releaseId
	h ()V bind
dxg net/minecraft/client/renderer/texture/custom/package-info
dxf net/minecraft/client/renderer/texture/TickableTextureObject
dxi net/minecraft/client/resources/AssetIndex
	a LOGGER
	b mapping
	a (Ljava/lang/String;)Ljava/io/File; getFile
	a (Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getFiles
	a (Ljava/lang/String;Ljava/lang/String;)Z lambda$getFiles$1
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/io/File; getFile
	b (Ljava/lang/String;)Z lambda$getFiles$0
dxh net/minecraft/client/renderer/texture/package-info
dxk net/minecraft/client/resources/DefaultClientResourcePack
	d assetIndex
	a (Ljava/lang/String;)Ljava/io/InputStream; getResourceAsStream
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	b (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResourceAsStream
net/minecraft/server/CommandStop net/minecraft/server/commands/StopCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
dxj net/minecraft/client/resources/ClientPackSource
	a LOGGER
	b SHA1
	c vanillaPack
	d serverPackDir
	e downloadLock
	f assetIndex
	g currentDownload
	h serverPack
	a ()Lnet/minecraft/server/ResourcePackVanilla; getVanillaPack
	a (Lcyc;Ldcj;)V lambda$downloadAndSelectResourcePack$2
	a (Ljava/io/File;)Ljava/util/concurrent/CompletableFuture; setServerPack
	a (Ljava/io/File;Ljava/lang/Void;Ljava/lang/Throwable;)V lambda$downloadAndSelectResourcePack$4
	a (Ljava/lang/String;Ljava/io/File;)Z checkHash
	a (Ljava/lang/String;Ljava/io/File;Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage; lambda$downloadAndSelectResourcePack$3
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; downloadAndSelectResourcePack
	a (Ljava/util/Map;Lxa$b;)V loadPacks
	b ()Ljava/util/Map; getDownloadHeaders
	b (Ljava/io/File;)V deleteQuietly
	c ()V clearServerPack
	c (Ljava/io/File;)Lnet/minecraft/server/IResourcePack; lambda$setServerPack$5
	d ()V clearOldDownloads
	d (Ljava/io/File;)Lnet/minecraft/server/IResourcePack; lambda$loadPacks$1
	e ()Lnet/minecraft/server/IResourcePack; lambda$loadPacks$0
dxm net/minecraft/client/resources/DirectAssetIndex
	b assetsDirectory
	a (Ljava/lang/String;)Ljava/io/File; getFile
	a (Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getFiles
	a (Ljava/nio/file/Path;)Z lambda$getFiles$1
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/io/File; getFile
	b (Ljava/lang/String;)Ljava/lang/String; lambda$getFiles$2
	b (Ljava/nio/file/Path;)Z lambda$getFiles$0
dxl net/minecraft/client/resources/DefaultPlayerSkin
	a STEVE_SKIN_LOCATION
	b ALEX_SKIN_LOCATION
	a ()Lnet/minecraft/server/MinecraftKey; getDefaultSkin
	a (Ljava/util/UUID;)Lnet/minecraft/server/MinecraftKey; getDefaultSkin
	b (Ljava/util/UUID;)Ljava/lang/String; getSkinModelName
	c (Ljava/util/UUID;)Z isAlexDefault
net/minecraft/server/PacketEncryptionHandler net/minecraft/network/CipherBase
	a cipher
	b heapIn
	c heapOut
	a (Lio/netty/buffer/ByteBuf;)[B bufToByte
	a (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encipher
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; decipher
dxo net/minecraft/client/resources/GrassColorReloadListener
	a LOCATION
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)[I prepare
	a ([ILnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
dxn net/minecraft/client/resources/FoliageColorReloadListener
	a LOCATION
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)[I prepare
	a ([ILnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
dxq net/minecraft/client/resources/LegacyStuffWrapper
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;)[I getPixels
dxp net/minecraft/client/resources/LegacyResourcePackAdapter
	a V3
	b source
	c patches
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	a (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; toMetaLocation
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	b ()Lcom/google/common/collect/ImmutableMap; lambda$static$0
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	b (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Z hasResource
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; map
dxs net/minecraft/client/resources/PaintingTextureManager
	a BACK_SPRITE_LOCATION
	a ()Ljava/lang/Iterable; getResourcesToLoad
	a (Lnet/minecraft/server/Paintings;)Ldxb; get
	b ()Ldxb; getBackSprite
dxr net/minecraft/client/resources/MobEffectTextureManager
	a ()Ljava/lang/Iterable; getResourcesToLoad
	a (Lnet/minecraft/server/MobEffectList;)Ldxb; get
dxu net/minecraft/client/resources/SplashManager
	a SPLASHES_LOCATION
	b RANDOM
	c splashes
	d user
	a ()Ljava/lang/String; getSplash
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/lang/String;)Z lambda$prepare$0
	a (Ljava/util/List;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/util/List; prepare
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
dmp$1 net/minecraft/client/player/LocalPlayer$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/DataConverterLeaves net/minecraft/util/datafix/fixes/LeavesFix
	a DIRECTIONS
	b LEAVES
	c LOGS
	a ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; access$000
	a (I)I getX
	a (III)I getIndex
	a (Ladg$a;)Ladg$a; lambda$null$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$7
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$6
	a (Lcom/mojang/datafixers/OpticFinder;[ILcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$4
	a (Lcom/mojang/datafixers/Typed;)Ladg$a; lambda$null$1
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$3
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$0
	a (ZZZZ)I getSideMask
	a ([ILcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$5
	b ()Ljava/util/Set; access$100
	b (I)I getY
	c (I)I getZ
dxt net/minecraft/client/resources/SkinManager
	a EXECUTOR_SERVICE
	b textureManager
	c skinsDirectory
	d sessionService
	e insecureSkinCache
	a (Lcom/mojang/authlib/GameProfile;)Ljava/util/Map; getInsecureSkinInformation
	a (Lcom/mojang/authlib/GameProfile;Ldxt$a;Z)V registerSkins
	a (Lcom/mojang/authlib/GameProfile;ZLdxt$a;)V lambda$registerSkins$1
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)Lnet/minecraft/server/MinecraftKey; registerTexture
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Ldxt$a;)Lnet/minecraft/server/MinecraftKey; registerTexture
	a (Ljava/util/Map;Ldxt$a;)V lambda$null$0
net/minecraft/server/IEntitySelector$EntitySelectorEquipable net/minecraft/world/entity/EntitySelector$MobCanWearArmourEntitySelector
	a itemStack
	a (Lnet/minecraft/server/Entity;)Z test
net/minecraft/server/BlockBeacon net/minecraft/world/level/block/BeaconBlock
	a ()Lnet/minecraft/server/EnumColor; getColor
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
dxw net/minecraft/client/resources/UnopenedResourcePack
	a icon
	b iconLocation
	a (Ldxc;)V bindIcon
	i ()Lcuj; getIcon
dxv net/minecraft/client/resources/TextureAtlasHolder
	a textureAtlas
	a ()Ljava/lang/Iterable; getResourcesToLoad
	a (Ldxa$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ldxa$a; prepare
	a (Lnet/minecraft/server/MinecraftKey;)Ldxb; getSprite
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
dxy net/minecraft/client/resources/language/Language
	a code
	b region
	c name
	d bidirectional
	a ()Z isBidirectional
	a (Ldxy;)I compareTo
dxx net/minecraft/client/resources/language/I18n
	a locale
	a (Ldya;)V setLocale
	a (Ljava/lang/String;)Z exists
	a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; get
net/minecraft/server/PacketListenerPlayOut net/minecraft/network/protocol/game/ClientGamePacketListener
	a (Lnet/minecraft/server/PacketPlayOutAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/server/PacketPlayOutAdvancements;)V handleUpdateAdvancementsPacket
	a (Lnet/minecraft/server/PacketPlayOutAnimation;)V handleAnimate
	a (Lnet/minecraft/server/PacketPlayOutAttachEntity;)V handleEntityLinkPacket
	a (Lnet/minecraft/server/PacketPlayOutAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/server/PacketPlayOutBlockAction;)V handleBlockEvent
	a (Lnet/minecraft/server/PacketPlayOutBlockBreak;)V handleBlockBreakAck
	a (Lnet/minecraft/server/PacketPlayOutBlockBreakAnimation;)V handleBlockDestruction
	a (Lnet/minecraft/server/PacketPlayOutBlockChange;)V handleBlockUpdate
	a (Lnet/minecraft/server/PacketPlayOutBoss;)V handleBossUpdate
	a (Lnet/minecraft/server/PacketPlayOutCamera;)V handleSetCamera
	a (Lnet/minecraft/server/PacketPlayOutChat;)V handleChat
	a (Lnet/minecraft/server/PacketPlayOutCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/server/PacketPlayOutCollect;)V handleTakeItemEntity
	a (Lnet/minecraft/server/PacketPlayOutCombatEvent;)V handlePlayerCombat
	a (Lnet/minecraft/server/PacketPlayOutCommands;)V handleCommands
	a (Lnet/minecraft/server/PacketPlayOutCustomPayload;)V handleCustomPayload
	a (Lnet/minecraft/server/PacketPlayOutCustomSoundEffect;)V handleCustomSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutEntity;)V handleMoveEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityDestroy;)V handleRemoveEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityEffect;)V handleUpdateMobEffect
	a (Lnet/minecraft/server/PacketPlayOutEntityEquipment;)V handleSetEquippedItem
	a (Lnet/minecraft/server/PacketPlayOutEntityHeadRotation;)V handleRotateMob
	a (Lnet/minecraft/server/PacketPlayOutEntityMetadata;)V handleSetEntityData
	a (Lnet/minecraft/server/PacketPlayOutEntitySound;)V handleSoundEntityEvent
	a (Lnet/minecraft/server/PacketPlayOutEntityStatus;)V handleEntityEvent
	a (Lnet/minecraft/server/PacketPlayOutEntityTeleport;)V handleTeleportEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityVelocity;)V handleSetEntityMotion
	a (Lnet/minecraft/server/PacketPlayOutExperience;)V handleSetExperience
	a (Lnet/minecraft/server/PacketPlayOutExplosion;)V handleExplosion
	a (Lnet/minecraft/server/PacketPlayOutGameStateChange;)V handleGameEvent
	a (Lnet/minecraft/server/PacketPlayOutHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/server/PacketPlayOutKeepAlive;)V handleKeepAlive
	a (Lnet/minecraft/server/PacketPlayOutKickDisconnect;)V handleDisconnect
	a (Lnet/minecraft/server/PacketPlayOutLightUpdate;)V handleLightUpdatePacked
	a (Lnet/minecraft/server/PacketPlayOutLogin;)V handleLogin
	a (Lnet/minecraft/server/PacketPlayOutLookAt;)V handleLookAt
	a (Lnet/minecraft/server/PacketPlayOutMap;)V handleMapItemData
	a (Lnet/minecraft/server/PacketPlayOutMapChunk;)V handleLevelChunk
	a (Lnet/minecraft/server/PacketPlayOutMount;)V handleSetEntityPassengersPacket
	a (Lnet/minecraft/server/PacketPlayOutMultiBlockChange;)V handleChunkBlocksUpdate
	a (Lnet/minecraft/server/PacketPlayOutNBTQuery;)V handleTagQueryPacket
	a (Lnet/minecraft/server/PacketPlayOutNamedEntitySpawn;)V handleAddPlayer
	a (Lnet/minecraft/server/PacketPlayOutNamedSoundEffect;)V handleSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutOpenBook;)V handleOpenBook
	a (Lnet/minecraft/server/PacketPlayOutOpenSignEditor;)V handleOpenSignEditor
	a (Lnet/minecraft/server/PacketPlayOutOpenWindow;)V handleOpenScreen
	a (Lnet/minecraft/server/PacketPlayOutOpenWindowHorse;)V handleHorseScreenOpen
	a (Lnet/minecraft/server/PacketPlayOutOpenWindowMerchant;)V handleMerchantOffers
	a (Lnet/minecraft/server/PacketPlayOutPlayerInfo;)V handlePlayerInfo
	a (Lnet/minecraft/server/PacketPlayOutPlayerListHeaderFooter;)V handleTabListCustomisation
	a (Lnet/minecraft/server/PacketPlayOutPosition;)V handleMovePlayer
	a (Lnet/minecraft/server/PacketPlayOutRecipeUpdate;)V handleUpdateRecipes
	a (Lnet/minecraft/server/PacketPlayOutRecipes;)V handleAddOrRemoveRecipes
	a (Lnet/minecraft/server/PacketPlayOutRemoveEntityEffect;)V handleRemoveMobEffect
	a (Lnet/minecraft/server/PacketPlayOutResourcePackSend;)V handleResourcePack
	a (Lnet/minecraft/server/PacketPlayOutRespawn;)V handleRespawn
	a (Lnet/minecraft/server/PacketPlayOutScoreboardDisplayObjective;)V handleSetDisplayObjective
	a (Lnet/minecraft/server/PacketPlayOutScoreboardObjective;)V handleAddObjective
	a (Lnet/minecraft/server/PacketPlayOutScoreboardScore;)V handleSetScore
	a (Lnet/minecraft/server/PacketPlayOutScoreboardTeam;)V handleSetPlayerTeamPacket
	a (Lnet/minecraft/server/PacketPlayOutSelectAdvancementTab;)V handleSelectAdvancementsTab
	a (Lnet/minecraft/server/PacketPlayOutServerDifficulty;)V handleChangeDifficulty
	a (Lnet/minecraft/server/PacketPlayOutSetCooldown;)V handleItemCooldown
	a (Lnet/minecraft/server/PacketPlayOutSetSlot;)V handleContainerSetSlot
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntity;)V handleAddEntity
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityExperienceOrb;)V handleAddExperienceOrb
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityLiving;)V handleAddMob
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityPainting;)V handleAddPainting
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityWeather;)V handleAddGlobalEntity
	a (Lnet/minecraft/server/PacketPlayOutSpawnPosition;)V handleSetSpawn
	a (Lnet/minecraft/server/PacketPlayOutStatistic;)V handleAwardStats
	a (Lnet/minecraft/server/PacketPlayOutStopSound;)V handleStopSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutTabComplete;)V handleCommandSuggestions
	a (Lnet/minecraft/server/PacketPlayOutTags;)V handleUpdateTags
	a (Lnet/minecraft/server/PacketPlayOutTileEntityData;)V handleBlockEntityData
	a (Lnet/minecraft/server/PacketPlayOutTitle;)V handleSetTitles
	a (Lnet/minecraft/server/PacketPlayOutTransaction;)V handleContainerAck
	a (Lnet/minecraft/server/PacketPlayOutUnloadChunk;)V handleForgetLevelChunk
	a (Lnet/minecraft/server/PacketPlayOutUpdateAttributes;)V handleUpdateAttributes
	a (Lnet/minecraft/server/PacketPlayOutUpdateHealth;)V handleSetHealth
	a (Lnet/minecraft/server/PacketPlayOutUpdateTime;)V handleSetTime
	a (Lnet/minecraft/server/PacketPlayOutVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/server/PacketPlayOutViewCentre;)V handleSetChunkCacheCenter
	a (Lnet/minecraft/server/PacketPlayOutViewDistance;)V handleSetChunkCacheRadius
	a (Lnet/minecraft/server/PacketPlayOutWindowData;)V handleContainerSetData
	a (Lnet/minecraft/server/PacketPlayOutWindowItems;)V handleContainerContent
	a (Lnet/minecraft/server/PacketPlayOutWorldBorder;)V handleSetBorder
	a (Lnet/minecraft/server/PacketPlayOutWorldEvent;)V handleLevelEvent
	a (Lnet/minecraft/server/PacketPlayOutWorldParticles;)V handleParticleEvent
net/minecraft/server/CriterionConditionValue net/minecraft/advancements/critereon/MinMaxBounds
	a ERROR_EMPTY
	b ERROR_SWAPPED
	c min
	d max
	a ()Ljava/lang/Number; getMin
	a (Lcom/google/gson/JsonElement;Lnet/minecraft/server/CriterionConditionValue;Ljava/util/function/BiFunction;Lbi$a;)Lnet/minecraft/server/CriterionConditionValue; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Z isAllowedInputChat
	a (Lcom/mojang/brigadier/StringReader;Lbi$b;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lnet/minecraft/server/CriterionConditionValue; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Number; readNumber
	a (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; optionallyFormat
	b ()Ljava/lang/Number; getMax
	c ()Z isAny
	d ()Lcom/google/gson/JsonElement; serializeToJson
dxz net/minecraft/client/resources/language/LanguageManager
	a LOCALE
	b LOGGER
	c currentCode
	d languages
	a ()Z isBidirectional
	a (Ldxy;)V setSelected
	a (Ljava/lang/String;)Ldxy; getLanguage
	a (Ljava/util/List;)V reload
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	b ()Ldxy; getSelected
	c ()Ljava/util/SortedSet; getLanguages
dyb net/minecraft/client/resources/language/package-info
dya net/minecraft/client/resources/language/Locale
	a storage
	b GSON
	c LOGGER
	d UNSUPPORTED_FORMAT_PATTERN
	a (Ljava/io/InputStream;)V appendFrom
	a (Ljava/lang/String;)Z has
	a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; get
	a (Ljava/util/List;)V appendFrom
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/List;)V loadFrom
	b (Ljava/lang/String;)Ljava/lang/String; getOrDefault
net/minecraft/server/DataConverterObjectiveRenderType net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$2
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Ljava/lang/String;)Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay; getRenderType
dyd net/minecraft/client/resources/metadata/animation/AnimationMetadataSection
	a SERIALIZER
	b frames
	c frameWidth
	d frameHeight
	e defaultFrameTime
	f interpolatedFrames
	a ()I getFrameHeight
	a (I)I getFrameTime
	b ()I getFrameWidth
	b (I)Z hasCustomFrameTime
	c ()I getFrameCount
	c (I)I getFrameIndex
	d ()I getDefaultFrameTime
	d (I)Ldyc; getFrame
	e ()Z isInterpolatedFrames
	f ()Ljava/util/Set; getUniqueFrameIndices
dyc net/minecraft/client/resources/metadata/animation/AnimationFrame
	a index
	b time
	a ()Z isTimeUnknown
	b ()I getTime
	c ()I getIndex
dcb$a net/minecraft/client/gui/screens/LoadingOverlay$LogoTexture
	b (Lnet/minecraft/server/IResourceManager;)Ldwx$a; getTextureImage
dyf net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection
	a SERIALIZER
	b hat
	a ()Ldyf$a; getHat
cvp$a com/mojang/realmsclient/client/Request$Delete
	e ()Lcvp; doConnect
	f ()Lcvp$a; doConnect
dye net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (ILcom/google/gson/JsonElement;)Ldyc; getFrame
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Ldyd; fromJson
cvp$b com/mojang/realmsclient/client/Request$Get
	e ()Lcvp; doConnect
	f ()Lcvp$b; doConnect
dyh net/minecraft/client/resources/metadata/animation/package-info
dyg net/minecraft/client/resources/metadata/animation/VillagerMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Ldyf; fromJson
net/minecraft/server/CommandOp net/minecraft/server/commands/OpCommand
	a ERROR_ALREADY_OP
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$3
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I opPlayers
	a (Lnet/minecraft/server/EntityPlayer;)Ljava/lang/String; lambda$null$2
	a (Lnet/minecraft/server/PlayerList;Lnet/minecraft/server/EntityPlayer;)Z lambda$null$1
dyj net/minecraft/client/resources/metadata/language/LanguageMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Ldyi; fromJson
dyi net/minecraft/client/resources/metadata/language/LanguageMetadataSection
	a SERIALIZER
	b languages
	a ()Ljava/util/Collection; getLanguages
net/minecraft/server/DataConverterChunkStructuresTemplateRename net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix
	a RENAMES
	a (Lcom/mojang/datafixers/Dynamic;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
dyl net/minecraft/client/resources/metadata/package-info
cvp$c com/mojang/realmsclient/client/Request$Post
	c content
	e ()Lcvp; doConnect
	f ()Lcvp$c; doConnect
dyk net/minecraft/client/resources/metadata/language/package-info
cvp$d com/mojang/realmsclient/client/Request$Put
	c content
	e ()Lcvp; doConnect
	f ()Lcvp$d; doConnect
dyn net/minecraft/client/resources/metadata/texture/TextureMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Ldym; fromJson
net/minecraft/server/PotionUtil net/minecraft/world/item/alchemy/PotionUtils
	a (Ljava/util/Collection;)I getColor
	a (Lnet/minecraft/server/ItemStack;Ljava/util/Collection;)Lnet/minecraft/server/ItemStack; setCustomEffects
	a (Lnet/minecraft/server/ItemStack;Ljava/util/List;F)V addPotionTooltip
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/PotionRegistry;)Lnet/minecraft/server/ItemStack; setPotion
	a (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/List; getAllEffects
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/util/List;)V getCustomEffects
	a (Lnet/minecraft/server/PotionRegistry;)I getColor
	a (Lnet/minecraft/server/PotionRegistry;Ljava/util/Collection;)Ljava/util/List; getAllEffects
	b (Lnet/minecraft/server/ItemStack;)Ljava/util/List; getCustomEffects
	b (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/List; getCustomEffects
	c (Lnet/minecraft/server/ItemStack;)I getColor
	c (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/PotionRegistry; getPotion
	d (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/PotionRegistry; getPotion
	getEffects (Lnet/minecraft/server/ItemStack;)Ljava/util/List; getMobEffects
net/minecraft/server/EntityIllagerWizard net/minecraft/world/entity/monster/SpellcasterIllager
	b spellCastingTickCount
	bA currentSpell
	bz DATA_SPELL_CASTING_ID
	L ()V customServerAiStep
	a (Lnet/minecraft/server/EntityIllagerWizard;)Lnet/minecraft/server/NavigationAbstract; access$200
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	ef ()Z isCastingSpell
	eh ()I getSpellCastingTime
	getSoundCastSpell ()Lnet/minecraft/server/SoundEffect; getCastingSoundEvent
	getSpell ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getCurrentSpell
	h ()V tick
	l ()Laua$a; getArmPose
	setSpell (Lnet/minecraft/server/EntityIllagerWizard$Spell;)V setIsCastingSpell
	u_ ()V defineSynchedData
dym net/minecraft/client/resources/metadata/texture/TextureMetadataSection
	a SERIALIZER
	b blur
	c clamp
	a ()Z isBlur
	b ()Z isClamp
dyp net/minecraft/client/resources/model/BakedModel
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Ljava/util/Random;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z isCustomRenderer
	d ()Ldxb; getParticleIcon
	e ()Ldom; getTransforms
	f ()Ldok; getOverrides
net/minecraft/server/GenLayers net/minecraft/world/level/newbiome/layer/Layers
	a WARM_OCEAN
	b LUKEWARM_OCEAN
	c OCEAN
	d COLD_OCEAN
	e FROZEN_OCEAN
	f DEEP_WARM_OCEAN
	g DEEP_LUKEWARM_OCEAN
	h DEEP_OCEAN
	i DEEP_COLD_OCEAN
	j DEEP_FROZEN_OCEAN
	a (I)Z isOcean
	a (II)Z isSame
	a (JJ)Lnet/minecraft/server/WorldGenContextArea; lambda$getDefaultLayers$0
	a (JLnet/minecraft/server/AreaTransformer2;Lnet/minecraft/server/AreaFactory;ILjava/util/function/LongFunction;)Lnet/minecraft/server/AreaFactory; zoom
	a (JLnet/minecraft/server/WorldType;Lnet/minecraft/server/GeneratorSettingsOverworld;)[Lnet/minecraft/server/GenLayer; getDefaultLayers
	a (Lnet/minecraft/server/WorldType;Lnet/minecraft/server/GeneratorSettingsOverworld;Ljava/util/function/LongFunction;)Lcom/google/common/collect/ImmutableList; getDefaultLayers
	b (I)Z isShallowOcean
dyo net/minecraft/client/resources/metadata/texture/package-info
dyr net/minecraft/client/resources/model/BuiltInModel
	a itemTransforms
	b overrides
	c particleTexture
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Ljava/util/Random;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z isCustomRenderer
	d ()Ldxb; getParticleIcon
	e ()Ldom; getTransforms
	f ()Ldok; getOverrides
dyq net/minecraft/client/resources/model/BlockModelRotation
	a X0_Y0
	b X0_Y90
	c X0_Y180
	d X0_Y270
	e X90_Y0
	f X90_Y90
	g X90_Y180
	h X90_Y270
	i X180_Y0
	j X180_Y90
	k X180_Y180
	l X180_Y270
	m X270_Y0
	n X270_Y90
	o X270_Y180
	p X270_Y270
	q BY_INDEX
	r index
	s rotation
	t xSteps
	u ySteps
	v $VALUES
	a ()Lnet/minecraft/server/Quaternion; getRotationQuaternion
	a (II)Ldyq; by
	a (Ldyq;)Ldyq; lambda$static$2
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; rotate
	a (Lnet/minecraft/server/EnumDirection;I)I rotateVertexIndex
	b ()Ldyq; getRotation
	b (II)I getIndex
	b (Ldyq;)Ljava/lang/Integer; lambda$static$1
	c (Ldyq;)I lambda$static$0
net/minecraft/server/PlayerChunk$Failure net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure
	b UNLOADED
dyt net/minecraft/client/resources/model/ModelManager
	a bakedRegistry
	b terrainAtlas
	c blockModelShaper
	d blockColors
	e missingModel
	f modelGroups
	a ()Ldyp; getMissingModel
	a (Ldys;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ldyu;)Ldyp; getModel
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)Z requiresRender
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ldys; prepare
	b ()Ldnv; getBlockModelShaper
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
dys net/minecraft/client/resources/model/ModelBakery
	A STATIC_DEFINITIONS
	B resourceManager
	C blockAtlas
	D blockColors
	E loadingStack
	F context
	G unbakedCache
	H bakedCache
	I topLevelModels
	J bakedTopLevelModels
	K atlasPreparations
	L nextModelGroup
	M modelGroups
	a FIRE_0
	b FIRE_1
	c LAVA_FLOW
	d WATER_FLOW
	e WATER_OVERLAY
	f DESTROY_STAGE_0
	g DESTROY_STAGE_1
	h DESTROY_STAGE_2
	i DESTROY_STAGE_3
	j DESTROY_STAGE_4
	k DESTROY_STAGE_5
	l DESTROY_STAGE_6
	m DESTROY_STAGE_7
	n DESTROY_STAGE_8
	o DESTROY_STAGE_9
	p MISSING_MODEL_LOCATION
	q MISSING_MODEL_MESH
	r GENERATION_MARKER
	s BLOCK_ENTITY_MARKER
	t UNREFERENCED_TEXTURES
	u LOGGER
	v BUILTIN_MODELS
	w COMMA_SPLITTER
	x EQUAL_SPLITTER
	y ITEM_FRAME_FAKE_DEFINITION
	z ITEM_MODEL_GENERATOR
	a ()Ljava/util/Map; getBakedTopLevelModels
	a (ILnet/minecraft/server/IBlockData;)V lambda$registerModelGroup$23
	a (Lcom/google/common/collect/ImmutableList;Lnet/minecraft/server/BlockStateList;Ljava/util/Map;Ljava/util/List;Ldos;Lcom/mojang/datafixers/util/Pair;Ldof;Lnet/minecraft/server/MinecraftKey;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;Ldon;)V lambda$loadModel$19
	a (Lcom/mojang/datafixers/util/Pair;Ljava/util/Map$Entry;)Z lambda$null$17
	a (Ldoe;)V lambda$static$1
	a (Ldys$b;)Ljava/util/Set; lambda$null$20
	a (Ldys$b;Ljava/util/Set;)V lambda$loadModel$22
	a (Ldyu;)V loadTopLevel
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$new$2
	a (Ljava/lang/Iterable;)V registerModelGroup
	a (Ljava/lang/String;)V lambda$new$7
	a (Ljava/util/Map;Ldon;Ljava/util/List;Ldos;Lcom/mojang/datafixers/util/Pair;Ldof;Lnet/minecraft/server/IBlockData;)V lambda$null$18
	a (Ljava/util/Map;Ldos;Ljava/util/List;Lnet/minecraft/server/IBlockData;)V lambda$loadModel$15
	a (Ljava/util/Map;Lnet/minecraft/server/MinecraftKey;Lcom/mojang/datafixers/util/Pair;Ljava/util/Map;Ldyu;Lnet/minecraft/server/IBlockData;)V lambda$loadModel$21
	a (Ljava/util/Map;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IBlockData;)V lambda$loadModel$11
	a (Ljava/util/Set;Ldyy;)Ljava/util/stream/Stream; lambda$new$6
	a (Lnet/minecraft/server/Block;Ljava/util/Map;Lnet/minecraft/server/IBlockData;)Z lambda$predicate$9
	a (Lnet/minecraft/server/BlockStateList;Ljava/lang/String;)Ljava/util/function/Predicate; predicate
	a (Lnet/minecraft/server/GameProfilerFiller;)V uploadTextures
	a (Lnet/minecraft/server/IBlockData;)V lambda$new$5
	a (Lnet/minecraft/server/IBlockData;Ldon;Ljava/util/List;)Ldys$b; lambda$null$16
	a (Lnet/minecraft/server/IBlockData;Ldos;Ljava/util/List;)Ldys$b; lambda$null$14
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/String;)Ljava/lang/Comparable; getValueHelper
	a (Lnet/minecraft/server/IResource;)Lcom/mojang/datafixers/util/Pair; lambda$loadModel$13
	a (Lnet/minecraft/server/MinecraftKey;)Ldyy; getModel
	a (Lnet/minecraft/server/MinecraftKey;Ldyv;)Ldyp; bake
	a (Lnet/minecraft/server/MinecraftKey;Ldyy;)V cacheAndQueueDependencies
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/BlockStateList;)V lambda$new$4
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IBlockData;)V lambda$null$3
	b ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; getModelGroups
	b (Ldoe;)V lambda$static$0
	b (Ldys$b;)Ldys$b; lambda$loadModel$12
	b (Lnet/minecraft/server/MinecraftKey;)V loadModel
	c (Lnet/minecraft/server/MinecraftKey;)Ldoe; loadBlockModel
	d (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/BlockStateList; lambda$loadModel$10
	e (Lnet/minecraft/server/MinecraftKey;)V lambda$uploadTextures$8
net/minecraft/server/GeneratorSettingsFlat net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings
	A SWAMPHUT_COMPOSITE_FEATURE
	B DESERT_PYRAMID_COMPOSITE_FEATURE
	C JUNGLE_PYRAMID_COMPOSITE_FEATURE
	D IGLOO_COMPOSITE_FEATURE
	E SHIPWRECK_COMPOSITE_FEATURE
	F OCEAN_MONUMENT_COMPOSITE_FEATURE
	G WATER_LAKE_COMPOSITE_FEATURE
	H LAVA_LAKE_COMPOSITE_FEATURE
	I ENDCITY_COMPOSITE_FEATURE
	J WOOLAND_MANSION_COMPOSITE_FEATURE
	K FORTRESS_COMPOSITE_FEATURE
	L OCEAN_RUIN_COMPOSITE_FEATURE
	M PILLAGER_OUTPOST_COMPOSITE_FEATURE
	N layersInfo
	O structuresOptions
	P biome
	Q layers
	R voidGen
	S seaLevel
	t STRUCTURE_FEATURES_STEP
	u STRUCTURE_FEATURES
	v STRUCTURE_FEATURES_DEFAULT
	w LOGGER
	x MINESHAFT_COMPOSITE_FEATURE
	y VILLAGE_COMPOSITE_FEATURE
	z STRONGHOLD_COMPOSITE_FEATURE
	A ()Z isVoidGen
	B ()I getSeaLevel
	C ()[Lnet/minecraft/server/IBlockData; getLayers
	a (I)V deleteLayer
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/GeneratorSettingsFlat; fromObject
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; toObject
	a (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$toObject$5
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/WorldGenFlatLayerInfo;)Ljava/lang/Object; lambda$toObject$3
	a (Lcom/mojang/datafixers/util/Pair;)Lnet/minecraft/server/WorldGenFlatLayerInfo; lambda$fromObject$8
	a (Ljava/lang/String;)Lnet/minecraft/server/Block; byString
	a (Ljava/lang/String;I)Lnet/minecraft/server/WorldGenFlatLayerInfo; getLayerInfoFromString
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V addStructureOption
	a (Ljava/util/HashMap;)V lambda$static$2
	a (Lnet/minecraft/server/BiomeBase;)V setBiome
	a (Lnet/minecraft/server/GeneratorSettingsFlat;Lcom/mojang/datafixers/Dynamic;)V lambda$null$10
	a (Lnet/minecraft/server/GeneratorSettingsFlat;Ljava/lang/String;)Ljava/util/Map; lambda$null$9
	a (Lnet/minecraft/server/GeneratorSettingsFlat;Ljava/util/Map;)V lambda$fromObject$11
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/util/Pair; lambda$fromObject$6
	b (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$null$4
	b (Lcom/mojang/datafixers/util/Pair;)Z lambda$fromObject$7
	b (Ljava/lang/String;)Lnet/minecraft/server/GeneratorSettingsFlat; fromString
	b (Ljava/util/HashMap;)V lambda$static$1
	c (Ljava/lang/String;)Ljava/util/List; getLayersInfoFromString
	c (Ljava/util/HashMap;)V lambda$static$0
	d (Ljava/lang/String;)V addStructure
	v ()Lnet/minecraft/server/BiomeBase; getBiome
	w ()Ljava/util/Map; getStructuresOptions
	x ()Ljava/util/List; getLayersInfo
	y ()V updateLayers
	z ()Lnet/minecraft/server/GeneratorSettingsFlat; getDefault
dyv net/minecraft/client/resources/model/ModelState
	b ()Ldyq; getRotation
	c ()Z isUvLocked
net/minecraft/server/BiomeBirchForestMutated net/minecraft/world/level/biome/TallBirchForestBiome
dyu net/minecraft/client/resources/model/ModelResourceLocation
	c variant
	c ()Ljava/lang/String; getVariant
	c (Ljava/lang/String;)[Ljava/lang/String; decompose
dyx net/minecraft/client/resources/model/SimpleBakedModel
	a unculledFaces
	b culledFaces
	c hasAmbientOcclusion
	d isGui3d
	e particleIcon
	f transforms
	g overrides
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Ljava/util/Random;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z isCustomRenderer
	d ()Ldxb; getParticleIcon
	e ()Ldom; getTransforms
	f ()Ldok; getOverrides
dde$1 net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen$1
net/minecraft/server/HandshakeListener net/minecraft/server/network/ServerHandshakePacketListenerImpl
	a server
	b connection
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/PacketHandshakingInSetProtocol;)V handleIntention
dyw net/minecraft/client/resources/model/MultiPartBakedModel
	a hasAmbientOcclusion
	b isGui3d
	c particleIcon
	d transforms
	e overrides
	f selectors
	g selectorCache
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Ljava/util/Random;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z isCustomRenderer
	d ()Ldxb; getParticleIcon
	e ()Ldom; getTransforms
	f ()Ldok; getOverrides
dyz net/minecraft/client/resources/model/WeightedBakedModel
	a totalWeight
	b list
	c wrapped
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Ljava/util/Random;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z isCustomRenderer
	d ()Ldxb; getParticleIcon
	e ()Ldom; getTransforms
	f ()Ldok; getOverrides
net/minecraft/server/RecipeCooking net/minecraft/world/item/crafting/AbstractCookingRecipe
	a type
	key id
	a ()Lnet/minecraft/server/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	b ()F getExperience
	c ()Lnet/minecraft/server/ItemStack; getResultItem
	d ()Ljava/lang/String; getGroup
	e ()I getCookingTime
	f ()Lnet/minecraft/server/MinecraftKey; getId
	g ()Lnet/minecraft/server/Recipes; getType
dyy net/minecraft/client/resources/model/UnbakedModel
	a (Ldys;Ljava/util/function/Function;Ldyv;)Ldyp; bake
	a (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; getTextures
	f ()Ljava/util/Collection; getDependencies
net/minecraft/server/CommandForceload net/minecraft/server/commands/ForceLoadCommand
	a ERROR_TOO_MANY_CHUNKS
	b ERROR_NOT_TICKING
	c ERROR_ALL_ADDED
	d ERROR_NONE_REMOVED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listForceLoad
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition2D;)I queryForceLoad
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition2D;Lnet/minecraft/server/BlockPosition2D;Z)I changeForceLoad
	a (Lnet/minecraft/server/WorldServer;J)V lambda$removeAll$10
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	b (Lnet/minecraft/server/CommandListenerWrapper;)I removeAll
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	c (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$2
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
net/minecraft/server/BlockSign net/minecraft/world/level/block/SignBlock
	a WATERLOGGED
	b SHAPE
	S_ ()Z isPossibleToRespawnInThis
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	d (Lnet/minecraft/server/IBlockData;)Z hasCustomBreakingProgress
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/BiomeTheEndBarrenIsland net/minecraft/world/level/biome/EndBarrensBiome
	a (F)I getSkyColor
dza net/minecraft/client/resources/model/package-info
cpz$d$1 net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$1
	a (Lnet/minecraft/server/NBTBase;Lcr$h;Ljava/util/List;)V merge
net/minecraft/server/ContainerProperties net/minecraft/world/inventory/SimpleContainerData
	a ints
	a ()I getCount
	a (I)I get
	a (II)V set
cpz$d$2 net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$2
	a (Ljava/util/List;Lnet/minecraft/server/NBTBase;)V lambda$merge$1
	a (Lnet/minecraft/server/NBTBase;Lcr$h;Ljava/util/List;)V merge
	a (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;)V lambda$null$0
dzc net/minecraft/client/resources/sounds/AbstractSoundInstance
	a sound
	b source
	c location
	d volume
	e pitch
	f x
	g y
	h z
	i looping
	j delay
	k attenuation
	l priority
	m relative
	n soundEvent
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Leap;)Leaq; resolve
	b ()Ldzm; getSound
	c ()Lnet/minecraft/server/SoundCategory; getSource
	d ()Z isLooping
	e ()I getDelay
	f ()F getVolume
	g ()F getPitch
	h ()F getX
	i ()F getY
	j ()F getZ
	k ()Ldzp$a; getAttenuation
	l ()Z hasPriority
	m ()Z isRelative
cpz$d$3 net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$3
	a (Ljava/util/List;Lnet/minecraft/server/NBTBase;)V lambda$merge$1
	a (Lnet/minecraft/server/NBTBase;Lcr$h;Ljava/util/List;)V merge
	a (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;)V lambda$null$0
dzb net/minecraft/client/resources/package-info
dze net/minecraft/client/resources/sounds/AmbientSoundHandler
	a ()V tick
dzd net/minecraft/client/resources/sounds/AbstractTickableSoundInstance
	n stopped
	n ()Z isStopped
dzg net/minecraft/client/resources/sounds/ElytraOnPlayerSoundInstance
	o player
	p time
	o ()V tick
net/minecraft/server/EntityPigZombie net/minecraft/world/entity/monster/PigZombie
	angerLevel angerTime
	b SPEED_MODIFIER_ATTACKING_UUID
	c SPEED_MODIFIER_ATTACKING
	hurtBy lastHurtByUUID
	soundDelay playAngrySoundIn
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L ()V customServerAiStep
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/Entity;)Z makeAngry
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityLiving;)V setLastHurtByMob
	a (Lnet/minecraft/server/EntityPigZombie;)Z access$100
	a (Lnet/minecraft/server/EntityPigZombie;Lnet/minecraft/server/Entity;)Z access$000
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkPigZombieSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	dX ()Lnet/minecraft/server/ItemStack; getSkull
	dY ()Z convertsInWater
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityHuman;)Z isPreventingPlayerRest
	ee ()I getAngerTime
	ef ()Z isAngry
	l ()V addBehaviourGoals
dzf net/minecraft/client/resources/sounds/BubbleColumnAmbientSoundHandler
	a player
	b wasInBubbleColumn
	c firstTick
	a ()V tick
dzi net/minecraft/client/resources/sounds/GuardianAttackSoundInstance
	o guardian
	o ()V tick
net/minecraft/server/ChatComponentSelector net/minecraft/network/chat/SelectorComponent
	b LOGGER
	c pattern
	d selector
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatBaseComponent; resolve
	d ()Ljava/lang/String; getContents
	g ()Lnet/minecraft/server/IChatBaseComponent; copy
	i ()Ljava/lang/String; getPattern
	j ()Lnet/minecraft/server/EntitySelector; getSelector
	k ()Lnet/minecraft/server/ChatComponentSelector; copy
net/minecraft/server/AttributeRanged net/minecraft/world/entity/ai/attributes/RangedAttribute
	a minValue
	c importLegacyName
	maximum maxValue
	a (D)D sanitizeValue
	a (Ljava/lang/String;)Lnet/minecraft/server/AttributeRanged; importLegacyName
	e ()D getMinValue
	f ()D getMaxValue
	g ()Ljava/lang/String; getImportLegacyName
dzh net/minecraft/client/resources/sounds/EntityBoundSoundInstance
	o entity
	o ()V tick
dzk net/minecraft/client/resources/sounds/RidingMinecartSoundInstance
	o player
	p minecart
	o ()V tick
	p ()Z canStartSilent
dzj net/minecraft/client/resources/sounds/MinecartSoundInstance
	o minecart
	p pitch
	o ()V tick
	p ()Z canStartSilent
dzm net/minecraft/client/resources/sounds/Sound
	a location
	b volume
	c pitch
	d weight
	e type
	f stream
	g preload
	h attenuationDistance
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Leam;)V preloadIfRequired
	b ()Lnet/minecraft/server/MinecraftKey; getPath
	c ()F getVolume
	d ()F getPitch
	e ()I getWeight
	f ()Ldzm; getSound
	g ()Ldzm$a; getType
	h ()Z shouldStream
	i ()Z shouldPreload
	j ()I getAttenuationDistance
	k ()Ljava/lang/Object; getSound
dzl net/minecraft/client/resources/sounds/SimpleSoundInstance
	a (Lnet/minecraft/server/SoundEffect;)Ldzl; forMusic
	a (Lnet/minecraft/server/SoundEffect;F)Ldzl; forUI
	a (Lnet/minecraft/server/SoundEffect;FF)Ldzl; forUI
	a (Lnet/minecraft/server/SoundEffect;FFF)Ldzl; forRecord
dzo net/minecraft/client/resources/sounds/SoundEventRegistrationSerializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldzn; deserialize
	a (Lcom/google/gson/JsonObject;)Ljava/util/List; getSounds
	a (Lcom/google/gson/JsonObject;Ldzm$a;)Ldzm$a; getType
	b (Lcom/google/gson/JsonObject;)Ldzm; getSound
dzn net/minecraft/client/resources/sounds/SoundEventRegistration
	a sounds
	b replace
	c subtitle
	a ()Ljava/util/List; getSounds
	b ()Z isReplace
	c ()Ljava/lang/String; getSubtitle
net/minecraft/server/LootItemConditionBlockStateProperty net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition
	a block
	b properties
	c composedPredicate
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ljava/lang/Object;Lnet/minecraft/server/IBlockState;Lnet/minecraft/server/IBlockData;)Z lambda$bakePredicate$3
	a (Lnet/minecraft/server/Block;)Lcrj$a; hasBlockStateProperties
	a (Lnet/minecraft/server/Block;Ljava/lang/Object;Lnet/minecraft/server/IBlockState;Lnet/minecraft/server/IBlockData;)Z lambda$bakePredicate$1
	a (Lnet/minecraft/server/Block;Ljava/util/Map;)Ljava/util/function/Predicate; bakePredicate
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/IBlockData;)Z lambda$bakePredicate$2
	a (Lnet/minecraft/server/LootItemConditionBlockStateProperty;)Lnet/minecraft/server/Block; access$100
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/IBlockData;)Z lambda$bakePredicate$0
	b (Lnet/minecraft/server/LootItemConditionBlockStateProperty;)Ljava/util/Map; access$200
dzq net/minecraft/client/resources/sounds/TickableSoundInstance
	n ()Z isStopped
	o ()V tick
dzp net/minecraft/client/resources/sounds/SoundInstance
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Leap;)Leaq; resolve
	b ()Ldzm; getSound
	c ()Lnet/minecraft/server/SoundCategory; getSource
	d ()Z isLooping
	e ()I getDelay
	f ()F getVolume
	g ()F getPitch
	h ()F getX
	i ()F getY
	j ()F getZ
	k ()Ldzp$a; getAttenuation
	l ()Z hasPriority
	m ()Z isRelative
	p ()Z canStartSilent
az$a net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance
dzs net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances
dzr net/minecraft/client/resources/sounds/UnderwaterAmbientSoundHandler
	a player
	b soundManager
	c tick_delay
	a ()V tick
dzu net/minecraft/client/searchtree/MutableSearchTree
	a ()V clear
	a (Ljava/lang/Object;)V add
	b ()V refresh
net/minecraft/server/BiomeSavannaPlateau net/minecraft/world/level/biome/SavannaPlateauBiome
dzt net/minecraft/client/resources/sounds/package-info
dzw net/minecraft/client/searchtree/ReloadableSearchTree
	c tree
	d filler
	a (Ljava/lang/Object;Ljava/lang/String;)V lambda$index$0
	a (Ljava/lang/String;)Ljava/util/List; search
	b ()V refresh
	b (Ljava/lang/Object;)V index
net/minecraft/server/EntityIllagerIllusioner net/minecraft/world/entity/monster/Illusioner
	bA clientSideIllusionOffsets
	bz clientSideIllusionTicks
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	bM ()Lnet/minecraft/server/AxisAlignedBB; getBoundingBoxForCulling
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	dV ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	dW ()Lnet/minecraft/server/SoundEffect; getCastingSoundEvent
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	k ()V aiStep
	l ()Laua$a; getArmPose
	n ()V registerGoals
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
	u_ ()V defineSynchedData
	v (F)[Lnet/minecraft/server/Vec3D; getIllusionOffsets
dzv net/minecraft/client/searchtree/ReloadableIdSearchTree
	a namespaceTree
	b pathTree
	c idGetter
	d contents
	e orderT
	a ()V clear
	a (Ljava/lang/Object;)V add
	a (Ljava/lang/Object;Ljava/lang/Object;)I comparePosition
	a (Ljava/lang/Object;Lnet/minecraft/server/MinecraftKey;)V lambda$index$0
	a (Ljava/lang/String;)Ljava/util/List; search
	b ()V refresh
	b (Ljava/lang/Object;)V index
dzy net/minecraft/client/searchtree/SearchTree
	a (Ljava/lang/String;)Ljava/util/List; search
dzx net/minecraft/client/searchtree/SearchRegistry
	a CREATIVE_NAMES
	b CREATIVE_TAGS
	c RECIPE_COLLECTIONS
	d searchTrees
	a (Ldzx$a;)Ldzu; getTree
	a (Ldzx$a;Ldzu;)V register
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
net/minecraft/server/PathfinderGoalWrapped net/minecraft/world/entity/ai/goal/WrappedGoal
	a goal
	b priority
	c isRunning
	C_ ()Z isInterruptable
	a ()Z canUse
	a (Ljava/util/EnumSet;)V setFlags
	a (Lnet/minecraft/server/PathfinderGoalWrapped;)Z canBeReplacedBy
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z isRunning
	h ()I getPriority
	i ()Ljava/util/EnumSet; getFlags
	j ()Lnet/minecraft/server/PathfinderGoal; getGoal
se$b net/minecraft/server/commands/ExecuteCommand$CommandPredicate
net/minecraft/server/EntityMinecartCommandBlock net/minecraft/world/entity/vehicle/MinecartCommandBlock
	COMMAND DATA_ID_COMMAND_NAME
	c DATA_ID_LAST_OUTPUT
	d commandBlock
	e lastActivated
	a (IIIZ)V activateMinecart
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bT ()Z onlyOpCanSetNbt
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	u_ ()V defineSynchedData
	w ()Lnet/minecraft/server/DataWatcherObject; access$000
	z ()Lnet/minecraft/server/DataWatcherObject; access$100
dzz net/minecraft/client/searchtree/SuffixArray
	a list
	b DEBUG_COMPARISONS
	c DEBUG_ARRAY
	d LOGGER
	e chars
	f wordStarts
	g suffixToT
	h offsets
	i maxStringLength
	a ()V generate
	a (I)Ljava/lang/String; getString
	a (Ljava/lang/Object;Ljava/lang/String;)V add
	a (Ljava/lang/String;)Ljava/util/List; search
	a (Ljava/lang/String;I)I compare
	a ([I[I[III)V lambda$generate$0
	b ()V print
net/minecraft/server/DragonControllerLandedSearch net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase
	b CHARGE_TARGETING
	c scanTargeting
	d scanningTime
	a (Lnet/minecraft/server/EntityEnderDragon;Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
	c ()V doServerTick
	d ()V begin
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
bl$b net/minecraft/advancements/critereon/NetherTravelTrigger$TriggerInstance
	a entered
	b exited
	c distance
	a (Lnet/minecraft/server/CriterionConditionDistance;)Lbl$b; travelledThroughNether
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Vec3D;DDD)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
bub$1 net/minecraft/world/level/block/entity/CommandBlockEntity$1
	b this$0
	a (Lio/netty/buffer/ByteBuf;)V writeCoordinates
	a (Ljava/lang/String;)V setCommand
	d ()Lnet/minecraft/server/WorldServer; getLevel
	e ()V onUpdated
	f ()Lnet/minecraft/server/Vec3D; getPosition
	h ()Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
net/minecraft/server/WorldMap net/minecraft/world/level/saveddata/maps/MapItemSavedData
	centerX x
	centerZ z
	humans carriedByPlayers
	i carriedBy
	l bannerMarkers
	m frameMarkers
	map dimension
	track trackingPosition
	a ()Ljava/util/Collection; getBanners
	a (DDI)V setOrigin
	a (IIIZZLnet/minecraft/server/DimensionManager;)V setProperties
	a (Lnet/minecraft/server/BlockPosition;I)V removedFromFrame
	a (Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/WorldMap$WorldMapHumanTracker; getHoldingPlayer
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)V tickCarriedBy
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V toggleBanner
	a (Lnet/minecraft/server/IBlockAccess;II)V checkBanners
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Packet; getUpdatePacket
	a (Lnet/minecraft/server/MapIcon$Type;Lnet/minecraft/server/GeneratorAccess;Ljava/lang/String;DDDLnet/minecraft/server/IChatBaseComponent;)V addDecoration
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/WorldMap;)V lockData
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	decorateMap (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;Ljava/lang/String;Lnet/minecraft/server/MapIcon$Type;)V addTargetDecoration
	flagDirty (II)V setDirty
dph$d net/minecraft/client/renderer/blockentity/ConduitRenderer$WindModel
	a box
	b activeAnim
	a (FFFFFF)V render
	a (I)V setActiveAnim
bl$a net/minecraft/advancements/critereon/NetherTravelTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Vec3D;DDD)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
dph$a net/minecraft/client/renderer/blockentity/ConduitRenderer$CageModel
	a box
	a (FFFFFF)V render
dph$c net/minecraft/client/renderer/blockentity/ConduitRenderer$ShellModel
	a box
	a (FFFFFF)V render
dph$b net/minecraft/client/renderer/blockentity/ConduitRenderer$EyeModel
	a eye
	a (FFFFFF)V render
axz$a net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase
	b this$0
	a (Lio/netty/buffer/ByteBuf;)V writeCoordinates
	d ()Lnet/minecraft/server/WorldServer; getLevel
	e ()V onUpdated
	f ()Lnet/minecraft/server/Vec3D; getPosition
	g ()Lnet/minecraft/server/EntityMinecartCommandBlock; getMinecart
	h ()Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
net/minecraft/server/WorldGenFeatureFlower net/minecraft/world/level/levelgen/feature/DefaultFlowerFeature
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getRandomFlower
net/minecraft/server/EntityPlayer net/minecraft/server/level/ServerPlayer
	advancementDataPlayer advancements
	bU LOGGER
	ck chatVisibility
	cl canChatColor
	cm lastActionTime
	cp seenCredits
	cr levitationStartPos
	cs levitationStartTime
	ct disconnected
	cu enteredNetherPosition
	cv lastSectionPos
	e ignoreSlotUpdateHack
	invulnerableTicks spawnInvulnerableTime
	lastAirScored lastRecordedAirLevel
	lastArmorScored lastRecordedArmor
	lastExpLevelScored lastRecordedLevel
	lastExpTotalScored lastRecordedExperience
	lastFoodScored lastRecordedFoodLevel
	lastFoodSent lastSentFood
	lastHealthScored lastRecordedHealthAndAbsorption
	lastHealthSent lastSentHealth
	lastSentSaturationZero lastFoodSaturationZero
	locale language
	ping latency
	playerConnection connection
	playerInteractManager gameMode
	removeQueue entitiesToRemove
	serverStatisticManager stats
	spectatedEntity camera
	viewingCredits wonGame
	worldChangeInvuln isChangingDimension
	B ()Lnet/minecraft/server/RecipeBookServer; getRecipeBook
	C ()V updateInvisibilityStatus
	E ()V processDimensionDelay
	F ()J getLastActionTime
	H ()Z isChangingDimension
	I ()V hasChangedDimension
	J ()V startFallFlying
	K ()V stopFallFlying
	M ()Lnet/minecraft/server/SectionPosition; getLastSectionPos
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (DDD)V teleportTo
	a (DZ)V doCheckFallDamage
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (FFZZ)V setPlayerInput
	a (I)V setExperiencePoints
	a (ILnet/minecraft/server/MerchantRecipeList;IIZZ)V sendMerchantOffers
	a (ILnet/minecraft/server/ScoreboardScore;)V lambda$awardStat$4
	a (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/server/IScoreboardCriteria;)V handleTeamKill
	a (Ljava/util/Collection;)I awardRecipes
	a (Lnet/minecraft/server/ArgumentAnchor$Anchor;Lnet/minecraft/server/Entity;Lnet/minecraft/server/ArgumentAnchor$Anchor;)V lookAt
	a (Lnet/minecraft/server/ArgumentAnchor$Anchor;Lnet/minecraft/server/Vec3D;)V lookAt
	a (Lnet/minecraft/server/BlockPosition;)Lcom/mojang/datafixers/util/Either; startSleepInBed
	a (Lnet/minecraft/server/ChatMessageType;Lnet/minecraft/server/IChatBaseComponent;Lio/netty/util/concurrent/Future;)V lambda$sendMessage$5
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V untrackChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/Packet;Lnet/minecraft/server/Packet;)V trackChunk
	a (Lnet/minecraft/server/Container;II)V setContainerData
	a (Lnet/minecraft/server/Container;ILnet/minecraft/server/ItemStack;)V slotChanged
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/NonNullList;)V refreshContainer
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/Entity; changeDimension
	a (Lnet/minecraft/server/Entity;)V crit
	a (Lnet/minecraft/server/Entity;I)V take
	a (Lnet/minecraft/server/Entity;ILnet/minecraft/server/DamageSource;)V awardKillScore
	a (Lnet/minecraft/server/Entity;Z)Z startRiding
	a (Lnet/minecraft/server/EntityHorseAbstract;Lnet/minecraft/server/IInventory;)V openHorseInventory
	a (Lnet/minecraft/server/EntityHuman;)Z canHarmPlayer
	a (Lnet/minecraft/server/EntityPlayer;)Z broadcastToPlayer
	a (Lnet/minecraft/server/EnumGamemode;)V setGameMode
	a (Lnet/minecraft/server/EnumHand;)V swing
	a (Lnet/minecraft/server/IBlockData;)V onInsideBlock
	a (Lnet/minecraft/server/IChatBaseComponent;)V sendMessage
	a (Lnet/minecraft/server/IChatBaseComponent;Lio/netty/util/concurrent/Future;)V lambda$die$2
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/ChatMessageType;)V sendMessage
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/ChatModifier;)V lambda$null$1
	a (Lnet/minecraft/server/IChatBaseComponent;Z)V displayClientMessage
	a (Lnet/minecraft/server/IScoreboardCriteria;I)V updateScoreForCriteria
	a (Lnet/minecraft/server/ITileInventory;)Ljava/util/OptionalInt; openMenu
	a (Lnet/minecraft/server/ItemStack;I)V onEnchantmentPerformed
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)V openItemGui
	a (Lnet/minecraft/server/ItemStack;ZZ)Lnet/minecraft/server/EntityItem; drop
	a (Lnet/minecraft/server/MobEffect;)V onEffectAdded
	a (Lnet/minecraft/server/MobEffect;Z)V onEffectUpdated
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/PacketPlayInSettings;)V updateOptions
	a (Lnet/minecraft/server/SectionPosition;)V setLastSectionPos
	a (Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playNotifySound
	a (Lnet/minecraft/server/Statistic;)V resetStat
	a (Lnet/minecraft/server/Statistic;I)V awardStat
	a (Lnet/minecraft/server/TileEntity;)V broadcast
	a (Lnet/minecraft/server/TileEntityCommand;)V openCommandBlock
	a (Lnet/minecraft/server/TileEntitySign;)V openTextEdit
	a (Lnet/minecraft/server/Unit;)V lambda$startSleepInBed$3
	a (Lnet/minecraft/server/WorldServer;)V fudgeSpawnLocation
	a (Lnet/minecraft/server/WorldServer;DDDFF)V teleportTo
	a (ZZZ)V stopSleepInBed
	a ([Lnet/minecraft/server/MinecraftKey;)V awardRecipesByKey
	b (I)V setExperienceLevels
	b (ILnet/minecraft/server/ScoreboardScore;)V lambda$updateScoreForCriteria$0
	b (Ljava/util/Collection;)I resetRecipes
	b (Lnet/minecraft/server/BlockPosition;)V onChangedBlock
	b (Lnet/minecraft/server/DamageSource;)Z isInvulnerableTo
	b (Lnet/minecraft/server/Entity;)V magicCrit
	b (Lnet/minecraft/server/MobEffect;)V onEffectRemoved
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/WorldServer;)V triggerDimensionChangeTriggers
	c (I)V giveExperienceLevels
	c (Lnet/minecraft/server/Entity;)V sendRemoveEntity
	canPvP ()Z isPvpAllowed
	copyFrom (Lnet/minecraft/server/EntityPlayer;Z)V restoreFrom
	d (I)V giveExperiencePoints
	d (Lnet/minecraft/server/Entity;)V cancelRemoveEntity
	e ()V onEnterCombat
	f ()V onLeaveCombat
	f (Lnet/minecraft/server/Entity;)V attack
	g ()Lnet/minecraft/server/ItemCooldown; createItemCooldowns
	getAdvancementData ()Lnet/minecraft/server/AdvancementDataPlayer; getAdvancements
	getChatFlags ()Lnet/minecraft/server/EnumChatVisibility; getChatVisibility
	getPlayerListName ()Lnet/minecraft/server/IChatBaseComponent; getTabListDisplayName
	getSpecatorTarget ()Lnet/minecraft/server/Entity; getCamera
	getStatisticManager ()Lnet/minecraft/server/ServerStatisticManager; getStats
	getWorldServer ()Lnet/minecraft/server/WorldServer; getLevel
	h ()V tick
	j ()V stopRiding
	m ()V doCloseContainer
	n ()V disconnect
	o ()Z hasDisconnected
	playerTick ()V doTick
	q ()V completeUsingItem
	r ()V onUpdateAbilities
	resetIdleTimer ()V resetLastActionTime
	setResourcePack (Ljava/lang/String;Ljava/lang/String;)V sendTexturePack
	setSpectatorTarget (Lnet/minecraft/server/Entity;)V setCamera
	syncInventory ()V initMenu
	t ()Z isSpectator
	t (I)I getCoprime
	t_ ()V closeContainer
	triggerHealthUpdate ()V resetSentInfo
	u ()Z isCreative
	updateInventory (Lnet/minecraft/server/Container;)V refreshContainer
	v ()Ljava/lang/String; getIpAddress
	w ()Z canChatInColor
	y ()I getPermissionLevel
net/minecraft/server/EnumBannerPatternType net/minecraft/world/level/block/entity/BannerPattern
	O COUNT
	P AVAILABLE_PATTERNS
	Q filename
	R hashname
	S patterns
	T patternItem
	U $VALUES
	a ()Ljava/lang/String; getFilename
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumBannerPatternType; byHash
	a (Lnet/minecraft/server/EnumBannerPatternType;)Ljava/lang/String; access$000
	b ()Ljava/lang/String; getHashname
	c ()[Ljava/lang/String; getPatterns
	d ()Z hasPattern
	e ()Z hasPatternItem
	f ()Lnet/minecraft/server/ItemStack; getPatternItem
net/minecraft/server/DefinedStructure net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate
	a palettes
	b entityInfoList
	c size
	d author
	a ()Lnet/minecraft/server/BlockPosition; getSize
	a (IIILnet/minecraft/server/GeneratorAccess;ILnet/minecraft/server/EnumDirection;III)V lambda$updateShapeAtEdge$1
	a (Ljava/lang/String;)V setAuthor
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/Block;)Ljava/util/List; filterBlocks
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/Block;Z)Ljava/util/List; filterBlocks
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockMirror;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getZeroPositionWithTransform
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockMirror;Lnet/minecraft/server/EnumBlockRotation;II)Lnet/minecraft/server/BlockPosition; getZeroPositionWithTransform
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockMirror;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; transform
	a (Lnet/minecraft/server/DefinedStructure$BlockInfo;)I lambda$loadPalette$3
	a (Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; calculateRelativePosition
	a (Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; calculateConnectedPosition
	a (Lnet/minecraft/server/Entity;)Z lambda$fillEntityList$0
	a (Lnet/minecraft/server/EnumBlockMirror;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/Entity;)V lambda$placeEntities$2
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/EnumBlockRotation;IILnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)V mirrorAABB
	a (Lnet/minecraft/server/GeneratorAccess;ILnet/minecraft/server/VoxelShapeDiscrete;III)V updateShapeAtEdge
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;)V placeInWorldChunk
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;I)Z placeInWorld
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;Ljava/util/List;)Ljava/util/List; processBlockInfos
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockMirror;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;)V placeEntities
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/NBTTagCompound;)Ljava/util/Optional; createEntityIgnoreException
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/NBTTagList;Lnet/minecraft/server/NBTTagList;)V loadPalette
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumBlockMirror;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Vec3D; transform
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)V fillEntityList
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/Block;)V fillFromWorld
	a ([D)Lnet/minecraft/server/NBTTagList; newDoubleList
	a ([I)Lnet/minecraft/server/NBTTagList; newIntegerList
	b ()Ljava/lang/String; getAuthor
	b (Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;)V placeInWorld
	b (Lnet/minecraft/server/NBTTagCompound;)V load
net/minecraft/server/EntityTNTPrimed net/minecraft/world/entity/item/PrimedTnt
	FUSE_TICKS DATA_FUSE_ID
	fuseTicks life
	source owner
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aH ()Z isPickable
	ap ()Z makeStepSound
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	getFuseTicks ()I getLife
	getSource ()Lnet/minecraft/server/EntityLiving; getOwner
	h ()V tick
	i ()I getFuse
	setFuseTicks (I)V setFuse
	u_ ()V defineSynchedData
se$a net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate
net/minecraft/server/RecipeCrafting net/minecraft/world/item/crafting/CraftingRecipe
	g ()Lnet/minecraft/server/Recipes; getType
net/minecraft/server/BlockPropertyHalf net/minecraft/world/level/block/state/properties/Half
	c name
	d $VALUES
	m ()Ljava/lang/String; getSerializedName
net/minecraft/server/EntityPerchable net/minecraft/world/entity/animal/ShoulderRidingEntity
	bC rideCooldownCounter
	d (Lnet/minecraft/server/EntityPlayer;)Z setEntityOnShoulder
	eh ()Z canSitOnShoulder
	h ()V tick
net/minecraft/server/DataConverterKeybind net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix
	a MAP
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$3
	a (Lcom/mojang/datafixers/Dynamic;Ljava/util/Map;)Lcom/mojang/datafixers/Dynamic; lambda$null$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	a (Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
net/minecraft/server/BehaviorLookTarget net/minecraft/world/entity/ai/behavior/SetEntityLookTarget
	a predicate
	b maxDistSqr
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/EntityLiving;)V lambda$null$4
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BehaviorController;Ljava/util/List;)V lambda$start$5
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$null$3
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/EntityLiving;)Z lambda$new$2
	a (Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/EntityLiving;)Z lambda$new$1
	a (Lnet/minecraft/server/Tag;Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/PathfinderGoalCrossbowAttack$State net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState
	e $VALUES
doe$a net/minecraft/client/renderer/block/model/BlockModel$Bookkeep
	a root
	b maxDepth
dns$1 net/minecraft/client/renderer/banner/BannerTextures$1
net/minecraft/server/AutoRecipeFurnace net/minecraft/recipebook/ServerPlaceSmeltingRecipe
	e recipeMatchesPlaced
	a ()V clearGrid
	a (ILit/unimi/dsi/fastutil/ints/IntList;)V placeRecipe
	a (Lnet/minecraft/server/IRecipe;Z)V handleRecipeClicked
net/minecraft/server/TileEntityContainer net/minecraft/world/level/block/entity/BaseContainerBlockEntity
	chestLock lockKey
	customName name
	O ()Lnet/minecraft/server/IChatBaseComponent; getName
	Q ()Lnet/minecraft/server/IChatBaseComponent; getCustomName
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ChestLock;Lnet/minecraft/server/IChatBaseComponent;)Z canUnlock
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	createContainer (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	e (Lnet/minecraft/server/EntityHuman;)Z canOpen
	getContainerName ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
net/minecraft/server/NameReferencingFileConverter net/minecraft/server/players/OldUsersConverter
	a OLD_IPBANLIST
	b OLD_USERBANLIST
	c OLD_OPLIST
	d OLD_WHITELIST
	e LOGGER
	a ()Lorg/apache/logging/log4j/Logger; access$000
	a (I)[Ljava/lang/String; lambda$lookupPlayers$1
	a (Ljava/io/File;)V access$400
	a (Ljava/io/File;Ljava/util/Map;)Ljava/util/List; readOldListFormat
	a (Ljava/lang/String;)Z lambda$lookupPlayers$0
	a (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; access$200
	a (Lnet/minecraft/server/DedicatedServer;)Z convertPlayers
	a (Lnet/minecraft/server/MinecraftServer;)Z convertUserBanlist
	a (Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/lang/String; convertMobOwnerIfNecessary
	a (Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V lookupPlayers
	b ()Z areOldUserlistsRemoved
	b (Ljava/io/File;)V ensureDirectoryExists
	b (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; parseDate
	b (Lnet/minecraft/server/MinecraftServer;)Z convertIpBanlist
	c (Ljava/io/File;)V renameOldFile
	c (Lnet/minecraft/server/MinecraftServer;)Z convertOpsList
	d (Lnet/minecraft/server/MinecraftServer;)Z convertWhiteList
	e (Lnet/minecraft/server/MinecraftServer;)Z serverReadyAfterUserconversion
	f (Lnet/minecraft/server/MinecraftServer;)Z areOldPlayersConverted
	getPlayersFolder (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; getWorldPlayersDirectory
net/minecraft/server/BiomeBase$Precipitation net/minecraft/world/level/biome/Biome$Precipitation
	d BY_NAME
	e name
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/BiomeBase$Precipitation; byName
	a (Lnet/minecraft/server/BiomeBase$Precipitation;)Lnet/minecraft/server/BiomeBase$Precipitation; lambda$static$0
ai$a net/minecraft/advancements/critereon/ConstructBeaconTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/TileEntityBeacon;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
ai$b net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance
	a level
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lai$b; constructedBeacon
	a (Lnet/minecraft/server/TileEntityBeacon;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lai$b; constructedBeacon
net/minecraft/server/SensorNearestBed net/minecraft/world/entity/ai/sensing/NearestBedSensor
	a batchCache
	b triedCount
	c lastUpdate
	a ()Ljava/util/Set; requires
	a (Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z lambda$doTick$1
	a (Lnet/minecraft/server/BlockPosition;)Z lambda$doTick$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)V doTick
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
doe$c net/minecraft/client/renderer/block/model/BlockModel$LoopException
doe$b net/minecraft/client/renderer/block/model/BlockModel$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; getOverrides
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldoe; deserialize
	a (Lcom/google/gson/JsonObject;)Z getAmbientOcclusion
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; getElements
	b (Lcom/google/gson/JsonObject;)Ljava/util/Map; getTextureMap
	c (Lcom/google/gson/JsonObject;)Ljava/lang/String; getParentName
net/minecraft/server/LightEngineLayerEventListener$Void net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener
	b $VALUES
	a ()Z hasLightWork
	a (IZZ)I runUpdates
	a (Lnet/minecraft/server/BlockPosition;)V checkBlock
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/server/SectionPosition;)Lnet/minecraft/server/NibbleArray; getDataLayerData
	a (Lnet/minecraft/server/SectionPosition;Z)V updateSectionStatus
	b (Lnet/minecraft/server/BlockPosition;)I getLightValue
dcs$1 net/minecraft/client/gui/screens/achievement/StatsScreen$1
arp$a net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal
	a fish
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
dde$a net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen$SuggestionsList
	a this$0
	b rect
	c suggestions
	d originalContents
	e offset
	f current
	g lastMouse
	h tabCycles
	a ()V useSuggestion
	a (D)Z mouseScrolled
	a (I)V cycle
	a (II)V render
	a (III)Z mouseClicked
	b ()V hide
	b (I)V select
	b (III)Z keyPressed
net/minecraft/server/SensorGolemLastSeen net/minecraft/world/entity/ai/sensing/GolemSensor
	a ()Ljava/util/Set; requires
	a (JLnet/minecraft/server/EntityLiving;)V checkForNearbyGolem
	a (Lnet/minecraft/server/EntityLiving;)Z lambda$checkForNearbyGolem$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
cws$a com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionList
	a this$0
	a (I)V selectInviteListItem
	a (Lcom/mojang/realmsclient/dto/PlayerInfo;)V addEntry
net/minecraft/server/WorldGenFeatureFill net/minecraft/world/level/levelgen/feature/FillLayerFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureFillConfiguration;)Z place
cws$b com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionListEntry
	a mPlayerInfo
	b this$0
	a (I)V lambda$renderInvitedItem$0
	a (Lcom/mojang/realmsclient/dto/PlayerInfo;IIII)V renderInvitedItem
net/minecraft/server/EntitySlime$PathfinderGoalSlimeRandomDirection net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal
	a slime
	b chosenDegrees
	c nextRandomizeTime
	a ()Z canUse
	e ()V tick
net/minecraft/server/DataPaletteGlobal net/minecraft/world/level/chunk/GlobalPalette
	a registry
	b defaultValue
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (Ljava/lang/Object;)I idFor
	a (Lnet/minecraft/server/NBTTagList;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()I getSize
	b (Ljava/lang/Object;)Z maybeHas
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/AdvancementDisplay net/minecraft/advancements/DisplayInfo
	a title
	b description
	c icon
	d background
	e frame
	f showToast
	g announceChat
	h hidden
	i x
	j y
	a ()Lnet/minecraft/server/IChatBaseComponent; getTitle
	a (FF)V setLocation
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ItemStack; getIcon
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/AdvancementDisplay; fromJson
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/AdvancementDisplay; fromNetwork
	c ()Lnet/minecraft/server/ItemStack; getIcon
	d ()Lnet/minecraft/server/MinecraftKey; getBackground
	e ()Lnet/minecraft/server/AdvancementFrameType; getFrame
	f ()F getX
	g ()F getY
	h ()Z shouldShowToast
	i ()Z shouldAnnounceChat
	j ()Z isHidden
	k ()Lcom/google/gson/JsonElement; serializeToJson
	l ()Lcom/google/gson/JsonObject; serializeIcon
net/minecraft/server/EntitySalmon net/minecraft/world/entity/animal/Salmon
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dW ()Lnet/minecraft/server/SoundEffect; getFlopSound
	dX ()I getMaxSchoolSize
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	l ()Lnet/minecraft/server/ItemStack; getBucketItemStack
net/minecraft/server/GenLayerPlains net/minecraft/world/level/newbiome/layer/RareBiomeSpotLayer
	b PLAINS
	c SUNFLOWER_PLAINS
	d $VALUES
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
net/minecraft/server/ChunkCache net/minecraft/world/level/PathNavigationRegion
	a centerX
	b centerZ
	c chunks
	d allEmpty
	e level
	a (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/VoxelShape;)Z isUnobstructed
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/BlockPosition;)I getBrightness
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/HeightMap$Type;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; getHeightmapPos
	a_ (Lnet/minecraft/server/BlockPosition;I)I getRawBrightness
	b (II)Z hasChunk
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	c ()I getSkyDarken
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BiomeBase; getBiome
	d (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	e ()Z isClientSide
	e_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	i ()I getSeaLevel
	q_ ()Lnet/minecraft/server/WorldBorder; getWorldBorder
	r_ ()Lnet/minecraft/server/WorldProvider; getDimension
cws$3 com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$3
	a this$0
cws$4 com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$4
	a this$0
cxe$a com/mojang/realmsclient/gui/screens/UploadResult$Builder
	a statusCode
	b errorMessage
	a ()Lcxe; build
	a (I)Lcxe$a; withStatusCode
	a (Ljava/lang/String;)Lcxe$a; withErrorMessage
cws$1 com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$1
	a this$0
net/minecraft/server/VoxelShapeDiscrete net/minecraft/world/phys/shapes/DiscreteVoxelShape
	a xSize
	b ySize
	c zSize
	d AXIS_VALUES
	a ()Z isEmpty
	a (IIII)Z isZStripFull
	a (IIIII)Z isXZRectangleFull
	a (IIIIZ)V setZStrip
	a (IIIZZ)V setFull
	a (Lcsr$a;)V forAllFaces
	a (Lcsr$a;Lnet/minecraft/server/EnumAxisCycle;)V forAllAxisFaces
	a (Lcsr$b;Lnet/minecraft/server/EnumAxisCycle;Z)V forAllAxisEdges
	a (Lcsr$b;Z)V forAllEdges
	a (Lnet/minecraft/server/EnumAxisCycle;III)Z isFullWide
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)I firstFull
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;II)I firstFull
	b ()I getXSize
	b (III)Z isFull
	b (Lcsr$b;Z)V forAllBoxes
	b (Lnet/minecraft/server/EnumAxisCycle;III)Z isFull
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)I lastFull
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;II)I lastFull
	c ()I getYSize
	c (III)Z isFullWide
	c (Lnet/minecraft/server/EnumDirection$EnumAxis;)I getSize
	d ()I getZSize
fp$1 net/minecraft/core/SectionPos$1
	a cursor
	b val$minX
	c val$minY
	d val$minZ
	e val$maxX
	f val$maxY
	g val$maxZ
dzv$a net/minecraft/client/searchtree/ReloadableIdSearchTree$IntersectionIterator
	a firstIterator
	b secondIterator
	c orderT
cws$2 com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$2
	a this$0
net/minecraft/server/WorldGenFeatureConfigured net/minecraft/world/level/levelgen/feature/ConfiguredFeature
	a feature
	b config
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureConfigured; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Z place
net/minecraft/server/ItemEnderEye net/minecraft/world/item/EnderEyeItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
doe$1 net/minecraft/client/renderer/block/model/BlockModel$1
crl$a net/minecraft/world/level/storage/loot/predicates/LootItemConditions$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
	a (Lnet/minecraft/server/LootItemCondition;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/PlayerAbilities net/minecraft/world/entity/player/Abilities
	canFly mayfly
	canInstantlyBuild instabuild
	flySpeed flyingSpeed
	isFlying flying
	isInvulnerable invulnerable
	walkSpeed walkingSpeed
	a ()F getFlyingSpeed
	a (F)V setFlyingSpeed
	a (Lnet/minecraft/server/NBTTagCompound;)V addSaveData
	b ()F getWalkingSpeed
	b (F)V setWalkingSpeed
	b (Lnet/minecraft/server/NBTTagCompound;)V loadSaveData
net/minecraft/server/PacketPlayInUseEntity net/minecraft/network/protocol/game/ServerboundInteractPacket
	a entityId
	c location
	d hand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getTarget
	b ()Lnet/minecraft/server/PacketPlayInUseEntity$EnumEntityUseAction; getAction
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/EnumHand; getHand
	d ()Lnet/minecraft/server/Vec3D; getLocation
net/minecraft/server/WorldGenWoodlandMansionPieces net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;)V generateMansion
	a ([Ljava/lang/String;)V main
net/minecraft/server/ItemWrittenBook net/minecraft/world/item/WrittenBookItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EntityHuman;)Z resolveBookComponents
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbdr;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	b (Lnet/minecraft/server/NBTTagCompound;)Z makeSureTagIsValid
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
	e (Lnet/minecraft/server/ItemStack;)I getGeneration
	g (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IChatBaseComponent; getName
	j (Lnet/minecraft/server/ItemStack;)I getPageCount
net/minecraft/server/PathfinderNormal net/minecraft/world/level/pathfinder/WalkNodeEvaluator
	j oldWaterCost
	a ()V done
	a (DDD)Lnet/minecraft/server/PathDestination; getGoal
	a (IIIIDLnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/PathPoint; getLandNode
	a (Lnet/minecraft/server/EntityInsentient;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;IIIIIIZZLjava/util/EnumSet;Lnet/minecraft/server/PathType;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/PathType; getBlockPathTypes
	a (Lnet/minecraft/server/IBlockAccess;IIILnet/minecraft/server/EntityInsentient;IIIZZ)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;IIILnet/minecraft/server/PathType;)Lnet/minecraft/server/PathType; checkNeighbourBlocks
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)D getFloorLevel
	a (Lnet/minecraft/server/IBlockAccess;ZZLnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathType;)Lnet/minecraft/server/PathType; evaluateBlockPathType
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/EntityInsentient;)V prepare
	a (Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)Z isDiagonalValid
	a ([Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)I getNeighbors
	b ()Lnet/minecraft/server/PathPoint; getStart
	b (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathTypeRaw
net/minecraft/server/WorldChunkManagerHell net/minecraft/world/level/biome/FixedBiomeSource
	c biome
	a (II)Lnet/minecraft/server/BiomeBase; getBiome
	a (III)Ljava/util/Set; getBiomesWithin
	a (IIIIZ)[Lnet/minecraft/server/BiomeBase; getBiomeBlock
	a (IIILjava/util/List;)Z containsOnly
	a (IIILjava/util/List;Ljava/util/Random;)Lnet/minecraft/server/BlockPosition; findBiome
	a (Lnet/minecraft/server/StructureGenerator;)Z canGenerateStructure
	b ()Ljava/util/Set; getSurfaceBlocks
net/minecraft/server/CommandLoot net/minecraft/server/commands/LootCommand
	a SUGGEST_LOOT_TABLE
	b ERROR_NO_HELD_ITEMS
	c ERROR_NO_LOOT_TABLE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lsr$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$14
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lsr$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder; addTargets
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lsr$a;)I lambda$addTargets$21
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;Lsr$b;)I dropBlockLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/Entity;Lsr$b;)I dropKillLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;Lsr$b;)I dropFishingLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/LootTableInfo;Lsr$b;)I drop
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;Lsr$b;)I dropChestLoot
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	a (Ljava/util/Collection;IILjava/util/List;Lsr$a;)I entityReplace
	a (Ljava/util/Collection;Ljava/util/List;Lsr$a;)I playerGive
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$3
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/List;)V callback
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/List;Lnet/minecraft/server/MinecraftKey;)V callback
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IInventory; getContainer
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;IILjava/util/List;Lsr$a;)I blockReplace
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Lsr$a;)I blockDistribute
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EnumItemSlot;)Lnet/minecraft/server/ItemStack; getSourceHandItem
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/IBlockData;Ljava/util/List;)V lambda$dropBlockLoot$23
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/MinecraftKey;Ljava/util/List;)V lambda$dropKillLoot$24
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Vec3D;Ljava/util/List;Lsr$a;)I dropInWorld
	a (Lnet/minecraft/server/Entity;Ljava/util/List;IILjava/util/List;)V setSlots
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/ItemStack;)Z distributeToContainer
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z canMergeItems
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/ItemStack;)V lambda$dropInWorld$22
	a (Lsr$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$13
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lsr$a;)I lambda$addTargets$20
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/List;)V lambda$drop$25
	b (Lsr$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$12
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lsr$a;)I lambda$addTargets$19
	c (Lsr$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$11
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lsr$a;)I lambda$addTargets$18
	d (Lsr$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$10
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lsr$a;)I lambda$addTargets$17
	e (Lsr$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$9
	f (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lsr$a;)I lambda$addTargets$16
	f (Lsr$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$8
	g (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lsr$a;)I lambda$addTargets$15
	g (Lsr$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$7
	h (Lsr$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$6
	i (Lsr$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$5
	j (Lsr$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$4
net/minecraft/server/LootSelector net/minecraft/world/level/storage/loot/LootPool
	a entries
	b conditions
	c compositeCondition
	d functions
	e compositeFunction
	f rolls
	g bonusRolls
	a ()Lcpa$a; lootPool
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V addRandomItems
	a (Lnet/minecraft/server/LootCollector;Ljava/util/function/Function;Ljava/util/Set;Lnet/minecraft/server/LootContextParameterSet;)V validate
	a (Lnet/minecraft/server/LootSelector;)Lnet/minecraft/server/LootValue; access$100
	a (Lnet/minecraft/server/LootTableInfo;Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableInt;Lnet/minecraft/server/LootEntry;)V lambda$addRandomItem$0
	b (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V addRandomItem
	b (Lnet/minecraft/server/LootSelector;)[Lnet/minecraft/server/LootEntryAbstract; access$200
	c (Lnet/minecraft/server/LootSelector;)Lnet/minecraft/server/LootValueBounds; access$300
	d (Lnet/minecraft/server/LootSelector;)[Lnet/minecraft/server/LootItemCondition; access$400
	e (Lnet/minecraft/server/LootSelector;)[Lnet/minecraft/server/LootItemFunction; access$500
net/minecraft/server/ContainerLectern net/minecraft/world/inventory/LecternMenu
	containerProperties lecternData
	inventory lectern
	a (II)V setData
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;I)Z clickMenuButton
	e ()Lnet/minecraft/server/ItemStack; getBook
	f ()I getPage
net/minecraft/server/ChunkCoordIntPair net/minecraft/world/level/ChunkPos
	a INVALID_CHUNK_POS
	a (I)Lnet/minecraft/server/BlockPosition; getMiddleBlockPosition
	a (III)Lnet/minecraft/server/BlockPosition; getBlockAt
	a (Lnet/minecraft/server/ChunkCoordIntPair;I)Ljava/util/stream/Stream; rangeClosed
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/util/stream/Stream; rangeClosed
	b ()I getMiddleBlockX
	c ()I getMiddleBlockZ
	d ()I getMinBlockX
	e ()I getMinBlockZ
	f ()I getMaxBlockX
	g ()I getMaxBlockZ
	j ()I getRegionLocalX
	k ()I getRegionLocalZ
	l ()Lnet/minecraft/server/BlockPosition; getWorldPosition
	pair ()J toLong
	pair (II)J asLong
net/minecraft/server/ItemNameTag net/minecraft/world/item/NameTagItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;)Z interactEnemy
net/minecraft/server/PathfinderGoalNearestVillage net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal
	a mob
	b interval
	c wantedPos
	a ()Z canUse
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)D lambda$canUse$0
	b ()Z canContinueToUse
	e ()V tick
	g ()V moveRandomly
net/minecraft/server/GameRules$GameRuleKey net/minecraft/world/level/GameRules$Key
	a id
	a ()Ljava/lang/String; getId
	a (Lnet/minecraft/server/GameRules$GameRuleKey;)Ljava/lang/String; access$600
net/minecraft/server/BehaviorStrollPlace net/minecraft/world/entity/ai/behavior/StrollToPoi
	a memoryType
	b closeEnoughDist
	c maxDistanceFromPoi
	d nextOkStartTime
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/GlobalPos;)V lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/ControllerJump net/minecraft/world/entity/ai/control/JumpControl
	a jump
	b mob
	b ()V tick
net/minecraft/server/LegacyPingHandler net/minecraft/server/network/LegacyQueryHandler
	a LOGGER
	b serverConnectionListener
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V sendFlushAndClose
	a (Ljava/lang/String;)Lio/netty/buffer/ByteBuf; createReply
net/minecraft/server/CommandTrigger net/minecraft/server/commands/TriggerCommand
	a ERROR_NOT_PRIMED
	b ERROR_INVALID_OBJECTIVE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestObjectives
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardScore;)I simpleTrigger
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardScore;I)I addValue
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ScoreboardObjective;)Lnet/minecraft/server/ScoreboardScore; getScore
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardScore;I)I setValue
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
dld$a net/minecraft/client/particle/FlameParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/ICrossbow net/minecraft/world/entity/monster/CrossbowAttackMob
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IProjectile;F)V shootProjectile
	a (Z)V setChargingCrossbow
	getGoalTarget ()Lnet/minecraft/server/EntityLiving; getTarget
dkr$1 net/minecraft/client/particle/BubbleParticle$1
cir$a net/minecraft/world/level/levelgen/structure/ShipwreckPieces$ShipwreckPiece
	d rotation
	e templateLocation
	f isBeached
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/DefinedStructureManager;)V loadTemplate
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/GenLayerOceanEdge net/minecraft/world/level/newbiome/layer/OceanLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;II)I applyPixel
net/minecraft/server/BiomeLayoutConfiguration net/minecraft/world/level/biome/BiomeSourceSettings
net/minecraft/server/GenLayerZoom net/minecraft/world/level/newbiome/layer/ZoomLayer
	c $VALUES
	a (I)I getParentX
	a (Lnet/minecraft/server/AreaContextTransformed;IIII)I modeOrRandom
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	b (I)I getParentY
x$a net/minecraft/advancements/CriterionTrigger$Listener
	a trigger
	b advancement
	c criterion
	a ()Lnet/minecraft/server/CriterionInstance; getTriggerInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V run
ccy$a net/minecraft/world/level/levelgen/feature/MineshaftFeature$MineShaftStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
net/minecraft/server/Raid net/minecraft/world/entity/raid/Raid
	a RAID_NAME_COMPONENT
	b VICTORY
	c DEFEAT
	d RAID_BAR_VICTORY_COMPONENT
	e RAID_BAR_DEFEAT_COMPONENT
	f groupToLeaderMap
	g groupRaiderMap
	h heroesOfTheVillage
	i ticksActive
	j center
	k level
	l started
	m id
	n totalHealth
	o badOmenLevel
	p active
	q groupsSpawned
	r raidEvent
	s postRaidTicks
	t raidCooldownTicks
	u random
	v numGroups
	w status
	x celebrationTicks
	y waveSpawnPos
	A ()Z hasMoreWaves
	B ()Z isFinalWave
	C ()Z hasBonusWave
	D ()Z hasSpawnedBonusWave
	E ()Z shouldSpawnBonusGroup
	F ()V updateRaiders
	G ()Z shouldSpawnGroup
	H ()V setDirty
	a ()Z isOver
	a (I)V setBadOmenLevel
	a (II)Lnet/minecraft/server/BlockPosition; findRandomSpawnPos
	a (ILnet/minecraft/server/EntityRaider;)V setLeader
	a (ILnet/minecraft/server/EntityRaider;Lnet/minecraft/server/BlockPosition;Z)V joinRaid
	a (ILnet/minecraft/server/EntityRaider;Z)Z addWaveMob
	a (Ljava/lang/Integer;)Ljava/util/Set; lambda$addWaveMob$2
	a (Lnet/minecraft/server/BlockPosition;)V playSound
	a (Lnet/minecraft/server/Entity;)V addHeroOfTheVillage
	a (Lnet/minecraft/server/EntityHuman;)V absorbBadOmen
	a (Lnet/minecraft/server/EntityPlayer;)Z lambda$validPlayer$0
	a (Lnet/minecraft/server/EntityRaider;Z)V removeFromRaid
	a (Lnet/minecraft/server/EnumDifficulty;)I getNumGroups
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/Raid$Wave;IZ)I getDefaultNumSpawns
	a (Lnet/minecraft/server/Raid$Wave;Ljava/util/Random;ILnet/minecraft/server/DifficultyDamageScaler;Z)I getPotentialBonusSpawns
	b ()Z isBetweenWaves
	b (I)Lnet/minecraft/server/EntityRaider; getLeader
	b (ILnet/minecraft/server/EntityRaider;)Z addWaveMob
	b (Lnet/minecraft/server/BlockPosition;)V spawnGroup
	c ()Z hasFirstWaveSpawned
	c (I)V removeLeader
	c (Lnet/minecraft/server/BlockPosition;)V setCenter
	d ()Z isStopped
	d (I)Ljava/util/Optional; getValidSpawnPos
	d (Lnet/minecraft/server/BlockPosition;)D lambda$moveRaidCenterToNearbyVillageSection$1
	e ()Z isVictory
	f ()Z isLoss
	g ()F getTotalHealth
	h ()Ljava/util/Set; getAllRaiders
	i ()Lnet/minecraft/server/World; getLevel
	j ()Z isStarted
	k ()I getGroupsSpawned
	l ()I getMaxBadOmenLevel
	m ()I getBadOmenLevel
	n ()V stop
	o ()V tick
	p ()V updateBossbar
	q ()F getHealthOfLivingRaiders
	r ()I getTotalRaidersAlive
	s ()Lnet/minecraft/server/ItemStack; getLeaderBannerInstance
	t ()Lnet/minecraft/server/BlockPosition; getCenter
	u ()I getId
	v ()Z isActive
	w ()F getEnchantOdds
	x ()Ljava/util/function/Predicate; validPlayer
	y ()V updatePlayers
	z ()V moveRaidCenterToNearbyVillageSection
net/minecraft/server/WorldGenEndGateway net/minecraft/world/level/levelgen/feature/EndGatewayFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenEndGatewayConfiguration;Lnet/minecraft/server/BlockPosition;)V lambda$place$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenEndGatewayConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
eaa net/minecraft/client/searchtree/package-info
dka$a net/minecraft/client/multiplayer/ClientChunkCache$Storage
	a this$0
	b chunks
	c chunkRadius
	d viewRange
	e viewCenterX
	f viewCenterZ
	g chunkCount
	a (I)Lnet/minecraft/server/Chunk; getChunk
	a (II)I getIndex
	a (ILnet/minecraft/server/Chunk;)V replace
	a (ILnet/minecraft/server/Chunk;Lnet/minecraft/server/Chunk;)Lnet/minecraft/server/Chunk; replace
	a (Ldka$a;)Ljava/util/concurrent/atomic/AtomicReferenceArray; access$300
	a (Ldka$a;I)I access$402
	a (Ldka$a;II)Z access$100
	a (Ljava/lang/String;)V dumpChunks
	b (II)Z inRange
	b (Ldka$a;)I access$600
	b (Ldka$a;I)I access$502
	b (Ldka$a;II)I access$200
	c (Ldka$a;)I access$400
	d (Ldka$a;)I access$500
	e (Ldka$a;)I access$700
eac net/minecraft/client/server/IntegratedServer
	a LOGGER
	h minecraft
	i settings
	j paused
	k publishedPort
	l lanPinger
	m uuid
	H ()I getPort
	H_ ()Z shouldInformAdmins
	R ()Z isSnooperEnabled
	S ()Z isDedicatedServer
	X ()Z isEpollEnabled
	a (Ljava/lang/String;Ljava/lang/String;JLnet/minecraft/server/WorldType;Lcom/google/gson/JsonElement;)V loadLevel
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	a (Lnet/minecraft/server/CrashReport;)V onServerCrash
	a (Lnet/minecraft/server/EnumGamemode;)V setDefaultGameMode
	a (Lnet/minecraft/server/EnumGamemode;ZI)Z publishServer
	a (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooper
	a (Z)V halt
	aa ()Z isCommandBlockEnabled
	af ()Z isPublished
	b (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	b (Ljava/util/UUID;)V setUUID
	b (Lnet/minecraft/server/CrashReport;)Lnet/minecraft/server/CrashReport; fillReport
	c ()V lambda$halt$1
	d ()Z initServer
	e ()Ljava/lang/String; lambda$fillReport$0
	f ()Z canGenerateStructures
	g ()Lnet/minecraft/server/EnumGamemode; getDefaultGameType
	h ()Lnet/minecraft/server/EnumDifficulty; getDefaultDifficulty
	i ()Z isHardcore
	j ()I getOperatorUserPermissionLevel
	k ()I getFunctionCompilationLevel
	l ()Z shouldRconBroadcast
	m ()V stopServer
	t ()Ljava/io/File; getServerDirectory
eab net/minecraft/client/server/IntegratedPlayerList
	f playerData
	a (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/IChatBaseComponent; canPlayerLogin
	b ()Leac; getServer
	b (Lnet/minecraft/server/EntityPlayer;)V save
	c ()Lnet/minecraft/server/MinecraftServer; getServer
	r ()Lnet/minecraft/server/NBTTagCompound; getSingleplayerData
net/minecraft/server/WorldGenTreeProviderOak net/minecraft/world/level/block/grower/OakTreeGrower
	b (Ljava/util/Random;)Lnet/minecraft/server/WorldGenTreeAbstract; getFeature
eae net/minecraft/client/server/LanServerDetection
	a UNIQUE_THREAD_ID
	b LOGGER
	a ()Ljava/util/concurrent/atomic/AtomicInteger; access$000
	b ()Lorg/apache/logging/log4j/Logger; access$100
ead net/minecraft/client/server/LanServer
	a motd
	b address
	c pingTime
	a ()Ljava/lang/String; getMotd
	b ()Ljava/lang/String; getAddress
	c ()V updatePingTime
	d ()Z isUpToDate
em$a net/minecraft/commands/synchronization/SuggestionProviders$Wrapper
	a delegate
	b name
	a (Lem$a;)Lnet/minecraft/server/MinecraftKey; access$000
eag net/minecraft/client/server/package-info
eaf net/minecraft/client/server/LanServerPinger
	a UNIQUE_THREAD_ID
	b LOGGER
	c motd
	d socket
	e isRunning
	f serverAddress
	a (Ljava/lang/String;)Ljava/lang/String; parseMotd
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; createPingString
	b (Ljava/lang/String;)Ljava/lang/String; parseAddress
eai net/minecraft/client/sounds/AudioStream
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
	b ()Ljava/nio/ByteBuffer; readAll
net/minecraft/server/ShapeDetector$ShapeDetectorCollection net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch
	a frontTopLeft
	b forwards
	c up
	d cache
	e width
	f height
	g depth
	a ()Lnet/minecraft/server/BlockPosition; getFrontTopLeft
	a (III)Lnet/minecraft/server/ShapeDetectorBlock; getBlock
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;DLnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/ShapeDetector$Shape; getPortalOutput
	c ()Lnet/minecraft/server/EnumDirection; getUp
	d ()I getWidth
	e ()I getHeight
	f ()I getDepth
	getFacing ()Lnet/minecraft/server/EnumDirection; getForwards
eah net/minecraft/client/skins/package-info
eak net/minecraft/client/sounds/MusicManager
	a random
	b minecraft
	c currentMusic
	d nextSongDelay
	a ()V tick
	a (Leak$a;)V startPlaying
	b ()V stopPlaying
	b (Leak$a;)Z isPlayingMusic
eaj net/minecraft/client/sounds/ChannelAccess
	a channels
	b library
	c executor
	a ()V scheduleTick
	a (Lctq$c;)Leaj$a; createHandle
	a (Lctq$c;Leaj$a;)V lambda$createHandle$0
	a (Leaj$a;)Lctp; lambda$null$1
	a (Leaj;)Ljava/util/concurrent/Executor; access$000
	a (Ljava/util/function/Consumer;)V executeOnChannels
	b ()V clear
	b (Leaj;)Lctq; access$100
	b (Ljava/util/function/Consumer;)V lambda$executeOnChannels$2
	c ()V lambda$scheduleTick$3
eam net/minecraft/client/sounds/SoundEngine
	a MARKER
	b LOGGER
	c ONLY_WARN_ONCE
	d soundManager
	e options
	f loaded
	g library
	h listener
	i soundBuffers
	j executor
	k channelAccess
	l tickCount
	m instanceToChannel
	n instanceBySource
	o tickingSounds
	p queuedSounds
	q soundDeleteTime
	r listeners
	s preloadQueue
	a ()V reload
	a (FFLdzp$a;FZLnet/minecraft/server/Vec3D;ZLctp;)V lambda$play$4
	a (FFLnet/minecraft/server/Vec3D;Lctp;)V lambda$tickNonPaused$3
	a (FLctp;)V lambda$null$0
	a (Lctu;Lctp;)V lambda$null$5
	a (Lcxq;)V updateSource
	a (Ldzm;)V requestPreload
	a (Ldzp;)V stop
	a (Ldzp;I)V playDelayed
	a (Ldzp;Leaj$a;)V lambda$updateCategoryVolume$1
	a (Leai;Lctp;)V lambda$null$7
	a (Leaj$a;)V lambda$stopAll$2
	a (Leaj$a;Lctu;)V lambda$play$6
	a (Leaj$a;Leai;)V lambda$play$8
	a (Leao;)V addEventListener
	a (Ljava/util/stream/Stream;)V lambda$resume$10
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/SoundCategory;)V stop
	a (Lnet/minecraft/server/SoundCategory;)F getVolume
	a (Lnet/minecraft/server/SoundCategory;F)V updateCategoryVolume
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;)V lambda$updateSource$11
	a (Z)V tick
	b ()V destroy
	b (Ldzp;)Z isActive
	b (Leao;)V removeEventListener
	b (Ljava/util/stream/Stream;)V lambda$pause$9
	c ()V stopAll
	c (Ldzp;)V play
	d ()V pause
	d (Ldzp;)F calculatePitch
	e ()V resume
	e (Ldzp;)F calculateVolume
	f ()Ljava/lang/String; getDebugString
	g ()V loadLibrary
	h ()V tickNonPaused
eal net/minecraft/client/sounds/SoundBufferLibrary
	a resourceManager
	b cache
	a ()V clear
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$preload$5
	a (Ldzm;)Ljava/util/concurrent/CompletableFuture; lambda$preload$4
	a (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; preload
	a (Ljava/util/concurrent/CompletableFuture;)V lambda$clear$3
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/util/concurrent/CompletableFuture; getCompleteBuffer
	b (Lnet/minecraft/server/MinecraftKey;)Ljava/util/concurrent/CompletableFuture; getStream
	c (Lnet/minecraft/server/MinecraftKey;)Leai; lambda$getStream$2
	d (Lnet/minecraft/server/MinecraftKey;)Ljava/util/concurrent/CompletableFuture; lambda$getCompleteBuffer$1
	e (Lnet/minecraft/server/MinecraftKey;)Lctu; lambda$null$0
eao net/minecraft/client/sounds/SoundEventListener
	a (Ldzp;Leaq;)V onPlaySound
net/minecraft/server/BlockMonsterEggs net/minecraft/world/level/block/InfestedBlock
	a hostBlock
	b BLOCK_BY_HOST_BLOCK
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
	d ()Lnet/minecraft/server/Block; getHostBlock
	e (Lnet/minecraft/server/Block;)Lnet/minecraft/server/IBlockData; stateByHostBlock
	j (Lnet/minecraft/server/IBlockData;)Z isCompatibleHostBlock
net/minecraft/server/AbstractDragonControllerLanded net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase
	a ()Z isSitting
	a (Lnet/minecraft/server/DamageSource;F)F onHurt
ean net/minecraft/client/sounds/SoundEngineExecutor
	a thread
	b shutdown
	a ()V flush
	ay ()Ljava/lang/Thread; getRunningThread
	b ()Ljava/lang/Thread; createThread
	bi ()V waitForTasks
	c ()V run
	c (Ljava/lang/Runnable;)Z shouldRun
	d ()Z lambda$run$0
	d (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
net/minecraft/server/LootValueGenerators net/minecraft/world/level/storage/loot/RandomIntGenerators
	a GENERATORS
	a (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootValue; deserialize
	a (Lnet/minecraft/server/LootValue;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
eaq net/minecraft/client/sounds/WeighedSoundEvents
	a list
	b random
	c location
	d subtitle
	a ()Ldzm; getSound
	a (Leam;)V preloadIfRequired
	a (Lear;)V addSound
	b ()Lnet/minecraft/server/MinecraftKey; getResourceLocation
	c ()Lnet/minecraft/server/IChatBaseComponent; getSubtitle
	e ()I getWeight
	k ()Ljava/lang/Object; getSound
eap net/minecraft/client/sounds/SoundManager
	a EMPTY_SOUND
	b LOGGER
	c GSON
	d SOUND_EVENT_REGISTRATION_TYPE
	e registry
	f soundEngine
	a ()Ljava/util/Collection; getAvailableSounds
	a (Lcxq;)V updateSource
	a (Ldzm;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IResourceManager;)Z access$200
	a (Ldzp;)V play
	a (Ldzp;I)V playDelayed
	a (Leao;)V addListener
	a (Leap$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/io/InputStream;)Ljava/util/Map; getEventFromJson
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Leap$a; prepare
	a (Lnet/minecraft/server/MinecraftKey;)Leaq; getSoundEvent
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/SoundCategory;)V stop
	a (Lnet/minecraft/server/SoundCategory;F)V updateSourceVolume
	a (Z)V tick
	b ()V pause
	b (Ldzm;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IResourceManager;)Z validateSoundResource
	b (Ldzp;)V stop
	b (Leao;)V removeListener
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
	c ()V stop
	c (Ldzp;)Z isActive
	d ()V destroy
	e ()V resume
	f ()Ljava/lang/String; getDebugString
	g ()Lorg/apache/logging/log4j/Logger; access$100
eas net/minecraft/client/sounds/package-info
ear net/minecraft/client/sounds/Weighted
	a (Leam;)V preloadIfRequired
	e ()I getWeight
	k ()Ljava/lang/Object; getSound
eau net/minecraft/client/tutorial/CraftPlanksTutorialStep
	a CRAFT_TITLE
	b CRAFT_DESCRIPTION
	c tutorial
	d toast
	e timeWaiting
	a ()V tick
	a (Ldmp;Lnet/minecraft/server/Tag;)Z hasCraftedPlanksPreviously
	a (Lnet/minecraft/server/ItemStack;)V onGetItem
	b ()V clear
eat net/minecraft/client/tutorial/CompletedTutorialStepInstance
	a tutorial
eaw net/minecraft/client/tutorial/MovementTutorialStepInstance
	a MOVE_TITLE
	b MOVE_DESCRIPTION
	c LOOK_TITLE
	d LOOK_DESCRIPTION
	e tutorial
	f moveToast
	g lookToast
	h timeWaiting
	i timeMoved
	j timeLooked
	k moved
	l turned
	m moveCompleted
	n lookCompleted
	a ()V tick
	a (DD)V onMouse
	a (Ldmn;)V onInput
	b ()V clear
net/minecraft/server/Pathfinder net/minecraft/world/level/pathfinder/PathFinder
	a openSet
	b closedSet
	c neighbors
	d maxVisitedNodes
	e nodeEvaluator
	a (Ljava/util/Map;Lnet/minecraft/server/PathDestination;)Lnet/minecraft/server/PathEntity; lambda$findPath$3
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/PathDestination; lambda$findPath$0
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/EntityInsentient;Ljava/util/Set;FI)Lnet/minecraft/server/PathEntity; findPath
	a (Lnet/minecraft/server/PathPoint;ILnet/minecraft/server/PathDestination;)Z lambda$findPath$1
	a (Lnet/minecraft/server/PathPoint;Ljava/util/Map;FI)Lnet/minecraft/server/PathEntity; findPath
	a (Lnet/minecraft/server/PathPoint;Ljava/util/Set;)F getBestH
	a (Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/PathEntity; reconstructPath
	a (Lnet/minecraft/server/PathfinderAbstract;)V setNodeEvaluator
	b (Ljava/util/Map;Lnet/minecraft/server/PathDestination;)Lnet/minecraft/server/PathEntity; lambda$findPath$2
eav net/minecraft/client/tutorial/FindTreeTutorialStepInstance
	a TREE_BLOCKS
	b TITLE
	c DESCRIPTION
	d tutorial
	e toast
	f timeWaiting
	a ()V tick
	a (Ldkf;Lnet/minecraft/server/MovingObjectPosition;)V onLookAt
	a (Ldmp;)Z hasPunchedTreesPreviously
	a (Lnet/minecraft/server/ItemStack;)V onGetItem
	b ()V clear
eay net/minecraft/client/tutorial/PunchTreeTutorialStepInstance
	a TITLE
	b DESCRIPTION
	c tutorial
	d toast
	e timeWaiting
	f resetCount
	a ()V tick
	a (Ldkf;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;F)V onDestroyBlock
	a (Lnet/minecraft/server/ItemStack;)V onGetItem
	b ()V clear
eax net/minecraft/client/tutorial/OpenInventoryTutorialStep
	a TITLE
	b DESCRIPTION
	c tutorial
	d toast
	e timeWaiting
	a ()V tick
	b ()V clear
	c ()V onOpenInventory
net/minecraft/server/PathfinderGoalLeapAtTarget net/minecraft/world/entity/ai/goal/LeapAtTargetGoal
	a mob
	b target
	c yd
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/server/MathHelper net/minecraft/util/Mth
	a SQRT_OF_TWO
	b SIN
	c RANDOM
	d MULTIPLY_DE_BRUIJN_BIT_POSITION
	e FRAC_BIAS
	f ASIN_TAB
	g COS_TAB
	a ()Ljava/util/UUID; createInsecureUUID
	a (BBB)B clamp
	a (DD)D absMax
	a (DDD)D clamp
	a (DDDDDD)D lerp2
	a (DDDDDDDDDDD)D lerp3
	a (DDDDDDII)[D binBiModalNormalDistribution
	a (DDDII)[D binNormalDistribution
	a (DDII)[D binLogDistribution
	a (FF)Z equal
	a (FFF)F clamp
	a (I)I abs
	a (IFFF)I colorMultiply
	a (II)I intFloorDiv
	a (IILjava/util/function/IntPredicate;)I binarySearch
	a (J)J murmurHash3Mixer
	a (JJJ)J clamp
	a (Ljava/lang/String;D)D getDouble
	a (Ljava/lang/String;DD)D getDouble
	a (Ljava/lang/String;I)I getInt
	a (Ljava/lang/String;II)I getInt
	a (Ljava/util/Random;)Ljava/util/UUID; createInsecureUUID
	a (Ljava/util/Random;DD)D nextDouble
	a (Ljava/util/Random;FF)F nextFloat
	a (Ljava/util/Random;[D)I getRandomForDistributionIntegral
	a (Lnet/minecraft/server/BaseBlockPosition;)J getSeed
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;)Z rayIntersectsAABB
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/Vec3D; catmullRomSplinePos
	a ([D)[D cumulativeSum
	a ([F)V lambda$static$0
	a ([J)D average
	b (D)I fastFloor
	b (DD)Z equal
	b (DDD)D clampedLerp
	b (FF)F positiveModulo
	b (FFF)F rotateIfNecessary
	b (I)I wrapDegrees
	b (II)I positiveModulo
	b (III)I color
	c (DD)D positiveModulo
	c (DDD)D pct
	c (F)F sqrt
	c (FF)F degreesDifference
	c (FFF)F approach
	c (I)I smallestEncompassingPowerOfTwo
	c (II)I roundUp
	c (III)J getSeed
	d (D)J lfloor
	d (DD)D atan2
	d (DDD)D lerp
	d (F)I floor
	d (FF)F degreesDifferenceAbs
	d (FFF)F approachDegrees
	d (I)I ceillog2
	d (II)I colorMultiply
	e (D)I absFloor
	e (F)F abs
	e (FFF)I color
	e (I)I log2
	f (D)I ceil
	f (F)I ceil
	f (FFF)I hsvToRgb
	f (I)I murmurHash3Mixer
	g (D)D wrapDegrees
	g (F)F wrapDegrees
	g (FFF)F lerp
	g (I)Z isPowerOfTwo
	h (D)D frac
	h (F)F frac
	h (FFF)F rotLerp
	i (D)D fastInvSqrt
	j (D)D smoothstep
	k (D)I sign
net/minecraft/server/DataConverterEntityRavagerRename net/minecraft/util/datafix/fixes/EntityRavagerRenameFix
	a RENAMED_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
eaz net/minecraft/client/tutorial/Tutorial
	a minecraft
	b instance
	a ()V onOpenInventory
	a (DD)V onMouse
	a (Ldkf;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;F)V onDestroyBlock
	a (Ldkf;Lnet/minecraft/server/MovingObjectPosition;)V onLookAt
	a (Ldmn;)V onInput
	a (Lebb;)V setStep
	a (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; key
	a (Lnet/minecraft/server/ItemStack;)V onGetItem
	b ()V stop
	c ()V start
	d ()V tick
	e ()Lcyc; getMinecraft
	f ()Lnet/minecraft/server/EnumGamemode; getGameMode
net/minecraft/server/PathfinderGoalBoat net/minecraft/world/entity/ai/goal/BoatGoals
	c $VALUES
ebb net/minecraft/client/tutorial/TutorialSteps
	a MOVEMENT
	b FIND_TREE
	c PUNCH_TREE
	d OPEN_INVENTORY
	e CRAFT_PLANKS
	f NONE
	g name
	h constructor
	i $VALUES
	a ()Ljava/lang/String; getName
	a (Leaz;)Leba; create
	a (Ljava/lang/String;)Lebb; getByName
eba net/minecraft/client/tutorial/TutorialStepInstance
	a ()V tick
	a (DD)V onMouse
	a (Ldkf;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;F)V onDestroyBlock
	a (Ldkf;Lnet/minecraft/server/MovingObjectPosition;)V onLookAt
	a (Ldmn;)V onInput
	a (Lnet/minecraft/server/ItemStack;)V onGetItem
	b ()V clear
	c ()V onOpenInventory
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiecePenthouse net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPenthouse
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
ebd net/minecraft/realms/package-info
ebc net/minecraft/client/tutorial/package-info
net/minecraft/server/CommandPlaySound net/minecraft/server/commands/PlaySoundCommand
	a ERROR_TOO_FAR
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/SoundCategory;Lnet/minecraft/server/Vec3D;FFF)I playSound
	a (Lnet/minecraft/server/SoundCategory;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; source
	a (Lnet/minecraft/server/SoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$5
	b (Lnet/minecraft/server/SoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$4
	c (Lnet/minecraft/server/SoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$3
	d (Lnet/minecraft/server/SoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$2
	e (Lnet/minecraft/server/SoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$1
net/minecraft/server/ChunkConverterPalette$Direction net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction
	g axis
	h axisDirection
	i $VALUES
	a ()Lnet/minecraft/server/ChunkConverterPalette$Direction$AxisDirection; getAxisDirection
	b ()Lnet/minecraft/server/ChunkConverterPalette$Direction$Axis; getAxis
net/minecraft/server/WorldGenContextArea net/minecraft/world/level/newbiome/context/LazyAreaContext
	a seedMixup
	b biomeNoise
	c cache
	d maxCache
	e seed
	f rval
	a ()Lnet/minecraft/server/NoiseGeneratorPerlin; getBiomeNoise
	a (I)I nextRandom
	a (J)V init
	a (JJ)V initRandom
	a (Lnet/minecraft/server/AreaTransformer8;)Lnet/minecraft/server/Area; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/Area;)Lnet/minecraft/server/Area; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;)Lnet/minecraft/server/Area; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/AreaLazy;)Lnet/minecraft/server/AreaLazy; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/AreaLazy;Lnet/minecraft/server/AreaLazy;)Lnet/minecraft/server/AreaLazy; createResult
	b (Lnet/minecraft/server/AreaTransformer8;)Lnet/minecraft/server/AreaLazy; createResult
net/minecraft/server/CommandWhitelist net/minecraft/server/commands/WhitelistCommand
	a ERROR_ALREADY_ENABLED
	b ERROR_ALREADY_DISABLED
	c ERROR_ALREADY_WHITELISTED
	d ERROR_NOT_WHITELISTED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$8
	a (Lnet/minecraft/server/CommandListenerWrapper;)I reload
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I addPlayers
	a (Lnet/minecraft/server/EntityPlayer;)Ljava/lang/String; lambda$null$5
	a (Lnet/minecraft/server/PlayerList;Lnet/minecraft/server/EntityPlayer;)Z lambda$null$4
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$6
	b (Lnet/minecraft/server/CommandListenerWrapper;)I enableWhitelist
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I removePlayers
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	c (Lnet/minecraft/server/CommandListenerWrapper;)I disableWhitelist
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	d (Lnet/minecraft/server/CommandListenerWrapper;)I showList
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	e (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/DataConverterItemFrame net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix
	a (B)B direction2dTo3d
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
dka$1 net/minecraft/client/multiplayer/ClientChunkCache$1
net/minecraft/server/BlockSkull$Type net/minecraft/world/level/block/SkullBlock$Types
	g $VALUES
net/minecraft/server/TileEntityLectern net/minecraft/world/level/block/entity/LecternBlockEntity
	containerProperties dataAccess
	inventory bookAccess
	maxPage pageCount
	L_ ()V clearContent
	a (Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;)V setBook
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/TileEntityLectern;)Lnet/minecraft/server/ItemStack; access$000
	a (Lnet/minecraft/server/TileEntityLectern;I)V access$300
	a (Lnet/minecraft/server/TileEntityLectern;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; access$002
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ItemStack; resolveBook
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b (Lnet/minecraft/server/TileEntityLectern;)V access$100
	c (Lnet/minecraft/server/TileEntityLectern;)I access$200
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	p ()Z onlyOpCanSetNbt
	s ()I getRedstoneSignal
	t ()V onBookItemRemove
net/minecraft/server/PathfinderTargetCondition net/minecraft/world/entity/ai/targeting/TargetingConditions
	a DEFAULT
	b range
	c allowInvulnerable
	d allowSameTeam
	e allowUnseeable
	f allowNonAttackable
	g testInvisible
	h selector
	a ()Lnet/minecraft/server/PathfinderTargetCondition; allowInvulnerable
	a (D)Lnet/minecraft/server/PathfinderTargetCondition; range
	a (Ljava/util/function/Predicate;)Lnet/minecraft/server/PathfinderTargetCondition; selector
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z test
	b ()Lnet/minecraft/server/PathfinderTargetCondition; allowSameTeam
	c ()Lnet/minecraft/server/PathfinderTargetCondition; allowUnseeable
	d ()Lnet/minecraft/server/PathfinderTargetCondition; allowNonAttackable
	e ()Lnet/minecraft/server/PathfinderTargetCondition; ignoreInvisibilityTesting
dkr$a net/minecraft/client/particle/BubbleParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/PathfinderGoal net/minecraft/world/entity/ai/goal/Goal
	a flags
	C_ ()Z isInterruptable
	a ()Z canUse
	a (Ljava/util/EnumSet;)V setFlags
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	i ()Ljava/util/EnumSet; getFlags
net/minecraft/server/EntityZombieHusk net/minecraft/world/entity/monster/Husk
	C (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	I_ ()Z isSunSensitive
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkHuskSpawnRules
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dW ()Lnet/minecraft/server/SoundEffect; getStepSound
	dX ()Lnet/minecraft/server/ItemStack; getSkull
	dY ()Z convertsInWater
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	ea ()V doUnderWaterConversion
net/minecraft/server/EntityLlamaTrader net/minecraft/world/entity/animal/horse/TraderLlama
	bI despawnDelay
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	eB ()Z isTraderLlama
	eF ()Lnet/minecraft/server/EntityLlama; makeBabyLlama
	eK ()V maybeDespawn
	eL ()Z canDespawn
	eM ()Z isLeashedToWanderingTrader
	eN ()Z isLeashedToSomethingOtherThanTheWanderingTrader
	g (Lnet/minecraft/server/EntityHuman;)V doPlayerRide
	k ()V aiStep
	n ()V registerGoals
	w (I)V setDespawnDelay
net/minecraft/server/TileEntitySign net/minecraft/world/level/block/entity/SignBlockEntity
	b showCursor
	c selectedLine
	g cursorPos
	h selectionPos
	j playerWhoMayEdit
	k renderMessages
	lines messages
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (I)Lnet/minecraft/server/IChatBaseComponent; getMessage
	a (IIIZ)V setCursorInfo
	a (ILjava/util/function/Function;)Ljava/lang/String; getRenderMessage
	a (ILnet/minecraft/server/IChatBaseComponent;)V setMessage
	a (Lnet/minecraft/server/EntityHuman;)V setAllowedPlayerEditor
	a (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Z)V setEditable
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/EntityHuman;)Z executeClickCommands
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	d ()Z isEditable
	f ()Lnet/minecraft/server/EntityHuman; getPlayerWhoMayEdit
	h ()V resetCursorInfo
	p ()Z onlyOpCanSetNbt
	s ()Z isShowCursor
	t ()I getSelectedLine
	u ()I getCursorPos
	v ()I getSelectionPos
net/minecraft/server/EntityCaveSpider net/minecraft/world/entity/monster/CaveSpider
	C (Lnet/minecraft/server/Entity;)Z doHurtTarget
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	cl ()V registerAttributes
net/minecraft/server/CommandXp net/minecraft/server/commands/ExperienceCommand
	a ERROR_SET_POINTS_INVALID
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$9
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;ILnet/minecraft/server/CommandXp$Unit;)I addExperience
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/CommandXp$Unit;)I queryExperience
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	b (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;ILnet/minecraft/server/CommandXp$Unit;)I setExperience
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/StatusChallengeUtils net/minecraft/server/rcon/PktUtils
	a HEX_CHAR
	a (B)Ljava/lang/String; toHexString
	a ([BI)I intFromByteArray
	a ([BII)Ljava/lang/String; stringFromByteArray
	b ([BII)I intFromByteArray
	c ([BII)I intFromNetworkByteArray
net/minecraft/server/InteractionResultWrapper net/minecraft/world/InteractionResultHolder
	a result
	b object
	a ()Lnet/minecraft/server/EnumInteractionResult; getResult
	b ()Ljava/lang/Object; getObject
dmg$a net/minecraft/client/particle/TotemParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/ItemHanging net/minecraft/world/item/HangingEntityItem
	a type
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)Z mayPlace
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
net/minecraft/server/PacketPlayInAutoRecipe net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket
	a containerId
	b recipe
	c shiftDown
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/MinecraftKey; getRecipe
	d ()Z isShiftDown
net/minecraft/server/EntityPig net/minecraft/world/entity/animal/Pig
	bA DATA_BOOST_TIME
	bB FOOD_ITEMS
	bC boosting
	bD boostTime
	bE boostTimeTotal
	bz DATA_SADDLE_ID
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityPig; getBreedOffspring
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bV ()Lnet/minecraft/server/Entity; getControllingPassenger
	cF ()V dropEquipment
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	dD ()Z canBeControlledByRider
	dW ()Z boost
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/Vec3D;)V travel
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	n ()V registerGoals
	u_ ()V defineSynchedData
net/minecraft/server/ArgumentSerializerDouble net/minecraft/commands/synchronization/brigadier/DoubleArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/DoubleArgumentType; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
net/minecraft/server/DataConverterMinecart net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix
	a MINECART_BY_ID
	a ()Ljava/lang/IllegalStateException; lambda$null$0
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$2
net/minecraft/server/ItemFlintAndSteel net/minecraft/world/item/FlintAndSteelItem
	a (Lnet/minecraft/server/IBlockData;)Z canLightCampFire
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z canUse
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemActionContext;Lnet/minecraft/server/EntityHuman;)V lambda$useOn$1
	b (Lnet/minecraft/server/ItemActionContext;Lnet/minecraft/server/EntityHuman;)V lambda$useOn$0
net/minecraft/server/EntityDragonFireball net/minecraft/world/entity/projectile/DragonFireball
	K_ ()Z shouldBurn
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	aH ()Z isPickable
	i ()Lnet/minecraft/server/ParticleParam; getTrailParticle
net/minecraft/server/WorldGenFeatureChanceDecorator net/minecraft/world/level/levelgen/placement/CountChanceHeightmapDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$1
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyChanceConfiguration;I)Z lambda$getPositions$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyChanceConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenSurfaceMesa net/minecraft/world/level/levelgen/surfacebuilders/BadlandsSurfaceBuilder
	S WHITE_TERRACOTTA
	T ORANGE_TERRACOTTA
	U TERRACOTTA
	V YELLOW_TERRACOTTA
	W BROWN_TERRACOTTA
	X RED_TERRACOTTA
	Y LIGHT_GRAY_TERRACOTTA
	a clayBands
	b seed
	c pillarNoise
	d pillarRoofNoise
	e clayBandsOffsetNoise
	a (III)Lnet/minecraft/server/IBlockData; getBand
	a (J)V initNoise
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
	b (J)V generateBands
net/minecraft/server/CriterionTriggerKilledByCrossbow net/minecraft/advancements/critereon/KilledByCrossbowTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Ljava/util/Collection;I)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbd$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/EnumDirection$EnumAxisDirection net/minecraft/core/Direction$AxisDirection
	c step
	d name
	e $VALUES
	a ()I getStep
	b ()Ljava/lang/String; getName
net/minecraft/server/PacketStatusOutPong net/minecraft/network/protocol/status/ClientboundPongResponsePacket
	a time
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketStatusOutListener;)V handle
	b ()J getTime
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketLoginOutCustomPayload net/minecraft/network/protocol/login/ClientboundCustomQueryPacket
	a transactionId
	b identifier
	c data
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginOutListener;)V handle
	b ()I getTransactionId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/MinecraftKey; getIdentifier
	d ()Lnet/minecraft/server/PacketDataSerializer; getData
brr$1 net/minecraft/world/level/block/SlabBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$SlabType
	b $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
bay$1 net/minecraft/world/item/CompassItem$1
	a this$0
	b rotation
	c rota
	d lastUpdateTick
	a (Lnet/minecraft/server/EntityItemFrame;)D getFrameRotation
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/Entity;)D getSpawnToAngle
	a (Lnet/minecraft/server/World;D)D wobble
jt$a net/minecraft/network/chat/NbtComponent$BlockNbtComponent
	e posPattern
	f compiledPos
	a (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/stream/Stream; getData
	b (Ljava/lang/String;)Lnet/minecraft/server/IVectorPosition; compilePos
	g ()Lnet/minecraft/server/IChatBaseComponent; copy
	k ()Ljava/lang/String; getPos
jc$2 net/minecraft/network/Connection$2
	a val$connection
net/minecraft/server/CommandParticle net/minecraft/server/commands/ParticleCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;FIZLjava/util/Collection;)I sendParticles
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
jc$1 net/minecraft/network/Connection$1
	a val$connection
net/minecraft/server/ItemSign net/minecraft/world/item/SignItem
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)Z updateCustomBlockEntityTag
jt$b net/minecraft/network/chat/NbtComponent$EntityNbtComponent
	e selectorPattern
	f compiledSelector
	a (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/stream/Stream; getData
	b (Ljava/lang/String;)Lnet/minecraft/server/EntitySelector; compileSelector
	g ()Lnet/minecraft/server/IChatBaseComponent; copy
	k ()Ljava/lang/String; getSelector
cpn$a net/minecraft/world/level/storage/loot/entries/LootItem$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootItem; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItem;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
net/minecraft/server/EnchantmentWaterWorker net/minecraft/world/item/enchantment/WaterWorkerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/PacketHandshakingInSetProtocol net/minecraft/network/protocol/handshake/ClientIntentionPacket
	a protocolVersion
	d intention
	hostname hostName
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketHandshakingInListener;)V handle
	a (Lnet/minecraft/server/PacketListener;)V handle
	b ()Lnet/minecraft/server/EnumProtocol; getIntention
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getProtocolVersion
	d ()Ljava/lang/String; getHostName
	e ()I getPort
net/minecraft/server/EnchantmentDepthStrider net/minecraft/world/item/enchantment/WaterWalkerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/WorldGenDecoratorHeightDouble net/minecraft/world/level/levelgen/placement/CountHeighmapDoubleDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
dmg$1 net/minecraft/client/particle/TotemParticle$1
net/minecraft/server/CommandGamemodeDefault net/minecraft/server/commands/DefaultGameModeCommands
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EnumGamemode;)I setMode
	a (Lnet/minecraft/server/EnumGamemode;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/PathfinderGoalInteract net/minecraft/world/entity/ai/goal/InteractGoal
net/minecraft/server/EntityEnderCrystal net/minecraft/world/entity/boss/enderdragon/EndCrystal
	b time
	c DATA_BEAM_TARGET
	d DATA_SHOW_BOTTOM
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	V ()V kill
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;)V onDestroyedBy
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aH ()Z isPickable
	ap ()Z makeStepSound
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	h ()V tick
	isShowingBottom ()Z showsBottom
	setShowingBottom (Z)V setShowBottom
	u_ ()V defineSynchedData
net/minecraft/server/BiomeMegaTaiga net/minecraft/world/level/biome/GiantTreeTaigaBiome
net/minecraft/server/BiomeIcePlains net/minecraft/world/level/biome/SnowyTundraBiome
	d ()F getCreatureProbability
net/minecraft/server/GroupDataEntity net/minecraft/world/entity/SpawnGroupData
net/minecraft/server/BlockActionContextDirectional net/minecraft/world/item/DirectionalPlaceContext
	g direction
	a ()Lnet/minecraft/server/BlockPosition; getClickedPos
	b ()Z canPlace
	c ()Z replacingClickedOnBlock
	d ()Lnet/minecraft/server/EnumDirection; getNearestLookingDirection
	e ()[Lnet/minecraft/server/EnumDirection; getNearestLookingDirections
	f ()Lnet/minecraft/server/EnumDirection; getHorizontalDirection
	g ()Z isSneaking
	h ()F getRotation
dld$1 net/minecraft/client/particle/FlameParticle$1
cx$c net/minecraft/commands/arguments/RangeArgument$Serializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/ArgumentCriterionValue;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lnet/minecraft/server/ArgumentCriterionValue;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
cx$a net/minecraft/commands/arguments/RangeArgument$Floats
	a EXAMPLES
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; getRange
net/minecraft/server/BlockHalfTransparent net/minecraft/world/level/block/HalfTransparentBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z skipRendering
cx$b net/minecraft/commands/arguments/RangeArgument$Ints
	a EXAMPLES
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; getRange
net/minecraft/server/PacketPlayOutEntity$PacketPlayOutRelEntityMove net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/BlockTNT net/minecraft/world/level/block/TntBlock
	a UNSTABLE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$use$0
	a (Lnet/minecraft/server/Explosion;)Z dropFromExplosion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V explode
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)V explode
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Explosion;)V wasExploded
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/Entity;)V onProjectileHit
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
net/minecraft/server/WorldGenDecoratorLakeLava net/minecraft/world/level/levelgen/placement/LakeLavaPlacementDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorLakeChanceConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorEndIsland net/minecraft/world/level/levelgen/placement/EndIslandPlacementDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorEmptyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/BlockChest net/minecraft/world/level/block/ChestBlock
	b TYPE
	c WATERLOGGED
	d NORTH_AABB
	e SOUTH_AABB
	f WEST_AABB
	g EAST_AABB
	h AABB
	i CHEST_COMBINER
	j MENU_PROVIDER_COMBINER
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; candidatePartnerFacing
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z isChestBlockedAt
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isBlockedChestByBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z isCatSittingOnChest
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	d ()Lnet/minecraft/server/Statistic; getOpenChestStat
	d (Lnet/minecraft/server/IBlockData;)Z hasCustomBreakingProgress
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	getInventory (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/BlockChest$ChestFinder;)Ljava/lang/Object; combineWithNeigbour
	getInventory (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/IInventory; getContainer
	j (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumDirection; getConnectedDirection
net/minecraft/server/PacketStatusOutServerInfo net/minecraft/network/protocol/status/ClientboundStatusResponsePacket
	a GSON
	b status
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketStatusOutListener;)V handle
	b ()Lnet/minecraft/server/ServerPing; getStatus
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/CriterionTriggerBrewedPotion net/minecraft/advancements/critereon/BrewedPotionTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/PotionRegistry;)V trigger
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$createInstance$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Laf$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/BiomeColdTaigaMutated net/minecraft/world/level/biome/SnowyTaigaMountainsBiome
net/minecraft/server/BlockSkullAbstract net/minecraft/world/level/block/AbstractSkullBlock
	a type
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	b ()Lbrq$a; getType
	d (Lnet/minecraft/server/IBlockData;)Z hasCustomBreakingProgress
net/minecraft/server/ContainerPlayer net/minecraft/world/inventory/InventoryMenu
	c active
	craftInventory craftSlots
	d TEXTURE_EMPTY_SLOTS
	e SLOT_IDS
	resultInventory resultSlots
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/IRecipe;)Z recipeMatches
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()V clearCraftingContent
	f ()I getResultSlotIndex
	g ()I getGridWidth
	h ()I getGridHeight
	i ()I getSize
	j ()[Ljava/lang/String; access$000
net/minecraft/server/PathfinderGoalFollowBoat net/minecraft/world/entity/ai/goal/FollowBoatGoal
	a timeToRecalcPath
	b mob
	c following
	d currentGoal
	C_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PacketPlayOutPosition net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket
	a x
	b y
	c z
	d yRot
	e xRot
	f relativeArguments
	g id
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()D getX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()D getY
	d ()D getZ
	e ()F getYRot
	f ()F getXRot
	g ()I getId
	h ()Ljava/util/Set; getRelativeArguments
dlx$d net/minecraft/client/particle/SpellParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dlx$e net/minecraft/client/particle/SpellParticle$WitchProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
czn$1 net/minecraft/client/gui/components/DebugScreenOverlay$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/WorldGenMonument net/minecraft/world/level/levelgen/feature/OceanMonumentFeature
	a MONUMENT_ENEMIES
	a ()Lceu$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;II)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IIII)Lnet/minecraft/server/ChunkCoordIntPair; getPotentialFeatureChunkFromLocationWithOffset
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	e ()Ljava/util/List; getSpecialEnemies
net/minecraft/server/WorldGenDecoratorChanceHeight net/minecraft/world/level/levelgen/placement/ChanceHeightmapDoubleDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorChanceConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/EntityAmbient net/minecraft/world/entity/ambient/AmbientCreature
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
net/minecraft/server/ItemToolMaterial net/minecraft/world/item/TieredItem
	a tier
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isValidRepairItem
	c ()I getEnchantmentValue
	e ()Lnet/minecraft/server/ToolMaterial; getTier
net/minecraft/server/VillagerDataHolder net/minecraft/world/entity/npc/VillagerDataHolder
	a (Lnet/minecraft/server/VillagerData;)V setVillagerData
net/minecraft/server/CSVWriter net/minecraft/util/CsvOutput
	a output
	b columnCount
	a ()Lzp$a; builder
	a (Ljava/lang/Object;)Ljava/lang/String; getStringValue
	a (Ljava/util/stream/Stream;)V writeLine
	a ([Ljava/lang/Object;)V writeRow
net/minecraft/server/BlockStateInteger net/minecraft/world/level/block/state/properties/IntegerProperty
	a values
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Ljava/lang/Integer;)Ljava/lang/String; getName
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	c ()I generateHashCode
	d ()Ljava/util/Collection; getPossibleValues
	of (Ljava/lang/String;II)Lnet/minecraft/server/BlockStateInteger; create
net/minecraft/server/BlockProperties net/minecraft/world/level/block/state/properties/BlockStateProperties
	A TRIGGERED
	B UNSTABLE
	C WATERLOGGED
	D HORIZONTAL_AXIS
	E AXIS
	F UP
	G DOWN
	H NORTH
	I EAST
	J SOUTH
	K WEST
	L FACING
	M FACING_HOPPER
	N HORIZONTAL_FACING
	O ATTACH_FACE
	P BELL_ATTACHMENT
	Q EAST_REDSTONE
	R NORTH_REDSTONE
	S SOUTH_REDSTONE
	T WEST_REDSTONE
	U DOUBLE_BLOCK_HALF
	V HALF
	W RAIL_SHAPE
	X RAIL_SHAPE_STRAIGHT
	Y AGE_1
	Z AGE_2
	a ATTACHED
	aA NOTEBLOCK_INSTRUMENT
	aB PISTON_TYPE
	aC SLAB_TYPE
	aD STAIRS_SHAPE
	aE STRUCTUREBLOCK_MODE
	aF BAMBOO_LEAVES
	aa AGE_3
	ab AGE_5
	ac AGE_7
	ad AGE_15
	ae AGE_25
	af BITES
	ag DELAY
	ah DISTANCE
	ai EGGS
	aj HATCH
	ak LAYERS
	al LEVEL_CAULDRON
	am LEVEL_COMPOSTER
	an LEVEL_FLOWING
	ao LEVEL
	ap MOISTURE
	aq NOTE
	ar PICKLES
	as POWER
	at STAGE
	au STABILITY_DISTANCE
	av ROTATION_16
	aw BED_PART
	ax CHEST_TYPE
	ay MODE_COMPARATOR
	az DOOR_HINGE
	b BOTTOM
	c CONDITIONAL
	d DISARMED
	e DRAG
	f ENABLED
	g EXTENDED
	h EYE
	i FALLING
	j HANGING
	k HAS_BOTTLE_0
	l HAS_BOTTLE_1
	m HAS_BOTTLE_2
	n HAS_RECORD
	o HAS_BOOK
	p INVERTED
	q IN_WALL
	r LIT
	s LOCKED
	t OCCUPIED
	u OPEN
	v PERSISTENT
	w POWERED
	x SHORT
	y SIGNAL_FIRE
	z SNOWY
	a (Lnet/minecraft/server/BlockPropertyTrackPosition;)Z lambda$static$1
	a (Lnet/minecraft/server/EnumDirection;)Z lambda$static$0
aiy$1 net/minecraft/world/entity/Mob$1
	a $SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	b $SwitchMap$net$minecraft$world$entity$EquipmentSlot
ajk$a net/minecraft/world/entity/SpawnPlacements$Data
	a heightMap
	b placement
	c predicate
	a (Lajk$a;)Lnet/minecraft/server/EntityPositionTypes$Surface; access$000
	b (Lajk$a;)Lnet/minecraft/server/HeightMap$Type; access$100
	c (Lajk$a;)Lajk$b; access$200
net/minecraft/server/PacketPlayInResourcePackStatus$EnumResourcePackStatus net/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action
	e $VALUES
net/minecraft/server/GenLayerBiome net/minecraft/world/level/newbiome/layer/BiomeInitLayer
	a BIRCH_FOREST
	b DESERT
	c MOUNTAINS
	d FOREST
	e SNOWY_TUNDRA
	f JUNGLE
	g BADLANDS_PLATEAU
	h WOODED_BADLANDS_PLATEAU
	i MUSHROOM_FIELDS
	j PLAINS
	k GIANT_TREE_TAIGA
	l DARK_FOREST
	m SAVANNA
	n SWAMP
	o TAIGA
	p SNOWY_TAIGA
	q LEGACY_WARM_BIOMES
	r WARM_BIOMES
	s MEDIUM_BIOMES
	t COLD_BIOMES
	u ICE_BIOMES
	v settings
	w warmBiomes
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
dlx$a net/minecraft/client/particle/SpellParticle$AmbientMobProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dlx$b net/minecraft/client/particle/SpellParticle$InstantProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dlx$c net/minecraft/client/particle/SpellParticle$MobProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/LootItemFunctionCopyName$Source net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource
	e name
	f param
	g $VALUES
	a (Ljava/lang/String;)Lnet/minecraft/server/LootItemFunctionCopyName$Source; getByName
net/minecraft/server/RecipeArmorDye net/minecraft/world/item/crafting/ArmorDyeRecipe
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
dlg$1 net/minecraft/client/particle/HugeExplosionSeedParticle$1
ajk$b net/minecraft/world/entity/SpawnPlacements$SpawnPredicate
net/minecraft/server/DataConverterEntityRenameAbstract net/minecraft/util/datafix/fixes/SimplestEntityRenameFix
	a name
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$4
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$2
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;)Ljava/lang/String; lambda$null$0
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$3
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/server/DataConverterMap net/minecraft/util/datafix/fixes/ItemStackMapIdFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
net/minecraft/server/WorldGenFeatureCompositeConfiguration net/minecraft/world/level/levelgen/feature/DecoratedFeatureConfiguration
	a feature
	b decorator
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureCompositeConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/PathfinderGoalSelector net/minecraft/world/entity/ai/goal/GoalSelector
	a LOGGER
	b NO_GOAL
	c lockedFlags
	d availableGoals
	e profiler
	f disabledFlags
	g newGoalRate
	a (I)V setNewGoalRate
	a (ILnet/minecraft/server/PathfinderGoal;)V addGoal
	a (Lnet/minecraft/server/PathfinderGoal$Type;)V disableControlFlag
	a (Lnet/minecraft/server/PathfinderGoal$Type;Lnet/minecraft/server/PathfinderGoalWrapped;)V lambda$tick$3
	a (Lnet/minecraft/server/PathfinderGoal$Type;Z)V setControlFlag
	a (Lnet/minecraft/server/PathfinderGoal;)V removeGoal
	a (Lnet/minecraft/server/PathfinderGoal;Lnet/minecraft/server/PathfinderGoalWrapped;)Z lambda$removeGoal$1
	a (Lnet/minecraft/server/PathfinderGoalWrapped;)V lambda$tick$9
	a (Lnet/minecraft/server/PathfinderGoalWrapped;Lnet/minecraft/server/PathfinderGoal$Type;)V lambda$null$8
	b ()Ljava/util/Set; getAvailableGoals
	b (Lnet/minecraft/server/PathfinderGoal$Type;)V enableControlFlag
	b (Lnet/minecraft/server/PathfinderGoal;Lnet/minecraft/server/PathfinderGoalWrapped;)Z lambda$removeGoal$0
	b (Lnet/minecraft/server/PathfinderGoalWrapped;)Z lambda$tick$7
	b (Lnet/minecraft/server/PathfinderGoalWrapped;Lnet/minecraft/server/PathfinderGoal$Type;)Z lambda$null$6
	c ()Ljava/util/stream/Stream; getRunningGoals
	c (Lnet/minecraft/server/PathfinderGoalWrapped;)Z lambda$tick$5
	d (Lnet/minecraft/server/PathfinderGoalWrapped;)Z lambda$tick$4
	doTick ()V tick
	e (Lnet/minecraft/server/PathfinderGoalWrapped;)Z lambda$tick$2
net/minecraft/server/EntityCreature net/minecraft/world/entity/PathfinderMob
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;)Z checkSpawnRules
	dM ()V tickLeash
	dT ()Z isPathFinding
	dU ()D followLeashSpeed
	f (Lnet/minecraft/server/BlockPosition;)F getWalkTargetValue
	u (F)V onLeashDistance
net/minecraft/server/EnchantmentPiercing net/minecraft/world/item/enchantment/ArrowPiercingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/ChunkMap net/minecraft/server/level/ChunkTracker
	a (J)Z isSource
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (J)I getLevelFromSource
	b (JIZ)V update
	b (JJI)I computeLevelFromNeighbor
net/minecraft/server/ResourcePackInfoDeserializer net/minecraft/server/packs/metadata/pack/PackMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ResourcePackInfo; fromJson
net/minecraft/server/EnumArmorMaterial net/minecraft/world/item/ArmorMaterials
	g HEALTH_PER_SLOT
	h name
	i durabilityMultiplier
	j slotProtections
	k enchantmentValue
	l sound
	m toughness
	n repairIngredient
	o $VALUES
	a ()I getEnchantmentValue
	a (Lnet/minecraft/server/EnumItemSlot;)I getDurabilityForSlot
	b ()Lnet/minecraft/server/SoundEffect; getEquipSound
	b (Lnet/minecraft/server/EnumItemSlot;)I getDefenseForSlot
	c ()Lnet/minecraft/server/RecipeItemStack; getRepairIngredient
	d ()Ljava/lang/String; getName
	e ()F getToughness
	f ()Lnet/minecraft/server/RecipeItemStack; lambda$static$5
	g ()Lnet/minecraft/server/RecipeItemStack; lambda$static$4
	h ()Lnet/minecraft/server/RecipeItemStack; lambda$static$3
	i ()Lnet/minecraft/server/RecipeItemStack; lambda$static$2
	j ()Lnet/minecraft/server/RecipeItemStack; lambda$static$1
	k ()Lnet/minecraft/server/RecipeItemStack; lambda$static$0
net/minecraft/server/DataConverterTeamDisplayName net/minecraft/util/datafix/fixes/TeamDisplayNameFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$2
	a (Lcom/mojang/datafixers/Dynamic;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$1
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$4
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$3
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
dqn$a net/minecraft/client/renderer/debug/DebugRenderer$SimpleDebugRenderer
	a ()V clear
	a (J)V render
net/minecraft/server/VillagePlaceType net/minecraft/world/entity/ai/village/poi/PoiType
	A validRange
	a ALL
	b UNEMPLOYED
	c ARMORER
	d BUTCHER
	e CARTOGRAPHER
	f CLERIC
	g FARMER
	h FISHERMAN
	i FLETCHER
	j LEATHERWORKER
	k LIBRARIAN
	l MASON
	m NITWIT
	n SHEPHERD
	o TOOLSMITH
	p WEAPONSMITH
	q HOME
	r MEETING
	s ALL_JOBS
	t BEDS
	u TYPE_BY_STATE
	v name
	w matchingStates
	x maxTickets
	y soundEvent
	z predicate
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;Ljava/util/Set;ILnet/minecraft/server/SoundEffect;I)Lnet/minecraft/server/VillagePlaceType; register
	a (Ljava/lang/String;Ljava/util/Set;ILnet/minecraft/server/SoundEffect;Ljava/util/function/Predicate;I)Lnet/minecraft/server/VillagePlaceType; register
	a (Lnet/minecraft/server/Block;)Ljava/util/Set; getBlockStates
	a (Lnet/minecraft/server/IBlockData;)Z is
	a (Lnet/minecraft/server/VillagePlaceType;)Lnet/minecraft/server/VillagePlaceType; registerBlockStates
	a (Lnet/minecraft/server/VillagePlaceType;Lnet/minecraft/server/IBlockData;)V lambda$registerBlockStates$5
	b ()I getMaxTickets
	b (Lnet/minecraft/server/Block;)Ljava/util/stream/Stream; lambda$static$2
	b (Lnet/minecraft/server/IBlockData;)Ljava/util/Optional; forState
	b (Lnet/minecraft/server/VillagePlaceType;)Z lambda$new$4
	c ()Ljava/util/function/Predicate; getPredicate
	c (Lnet/minecraft/server/IBlockData;)Z lambda$static$3
	c (Lnet/minecraft/server/VillagePlaceType;)Z lambda$static$1
	d ()I getValidRange
	d (Lnet/minecraft/server/VillagePlaceType;)Z lambda$static$0
	e ()Lnet/minecraft/server/SoundEffect; getUseSound
	f ()Ljava/util/stream/Stream; allPoiStates
net/minecraft/server/CraftingManager net/minecraft/world/item/crafting/RecipeManager
	a GSON
	b LOGGER
	d hasErrors
	a ()Z hadErrorsLoading
	a (Ljava/lang/Iterable;)V replaceRecipes
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$8
	a (Ljava/util/Map$Entry;)Ljava/util/Map; lambda$apply$1
	a (Ljava/util/Map;)Ljava/util/stream/Stream; lambda$getRecipeIds$7
	a (Ljava/util/Map;Lnet/minecraft/server/IRecipe;)V lambda$replaceRecipes$10
	a (Ljava/util/Map;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IRecipe;)Ljava/lang/String; lambda$getRecipesFor$4
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; byKey
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Ljava/util/Map;)Lnet/minecraft/server/IRecipe; lambda$byKey$5
	a (Lnet/minecraft/server/Recipes;)Ljava/util/Map; byType
	a (Lnet/minecraft/server/Recipes;Lnet/minecraft/server/World;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/IRecipe;)Ljava/util/stream/Stream; lambda$getRecipesFor$3
	b ()Ljava/util/Collection; getRecipes
	b (Ljava/util/Map;)Ljava/util/stream/Stream; lambda$getRecipes$6
	b (Lnet/minecraft/server/Recipes;)Ljava/util/Map; lambda$null$9
	b (Lnet/minecraft/server/Recipes;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Ljava/util/List; getRecipesFor
	b (Lnet/minecraft/server/Recipes;Lnet/minecraft/server/World;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/IRecipe;)Ljava/util/stream/Stream; lambda$getRecipeFor$2
	c ()Ljava/util/stream/Stream; getRecipeIds
	c (Lnet/minecraft/server/Recipes;)Lcom/google/common/collect/ImmutableMap$Builder; lambda$apply$0
	c (Lnet/minecraft/server/Recipes;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Lnet/minecraft/server/NonNullList; getRemainingItemsFor
	craft (Lnet/minecraft/server/Recipes;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Ljava/util/Optional; getRecipeFor
bd$a net/minecraft/advancements/critereon/KilledByCrossbowTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/EntityPlayer;Ljava/util/Collection;I)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
net/minecraft/server/TileEntityShulkerBox$AnimationPhase net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus
	e $VALUES
md$1 net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundPlayerInfoPacket$Action
aza$3 net/minecraft/world/inventory/EnchantmentMenu$3
	a this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
aza$2 net/minecraft/world/inventory/EnchantmentMenu$2
	a this$0
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
net/minecraft/server/WorldGenDecoratorLakeChanceConfiguration net/minecraft/world/level/levelgen/placement/LakeChanceDecoratorConfig
	a chance
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorLakeChanceConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
aza$1 net/minecraft/world/inventory/EnchantmentMenu$1
	a this$0
	e ()V setChanged
net/minecraft/server/EntityEnderman$PathfinderGoalEndermanPlaceBlock net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal
	a enderman
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)Z canPlaceBlock
	e ()V tick
cid$a net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces$BuriedTreasurePiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/IBlockData;)Z isLiquid
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
dku$1 net/minecraft/client/particle/CritParticle$1
net/minecraft/server/DataConverterGuardian net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix
	a (Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
dlg$a net/minecraft/client/particle/HugeExplosionSeedParticle$Provider
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
xu$1 net/minecraft/server/players/OldUsersConverter$1
	a val$server
	b val$userMap
	c val$bans
xu$2 net/minecraft/server/players/OldUsersConverter$2
	a val$server
	b val$opsList
xu$3 net/minecraft/server/players/OldUsersConverter$3
	a val$server
	b val$whitelist
xu$4 net/minecraft/server/players/OldUsersConverter$4
	a val$server
	b val$profiles
xu$5 net/minecraft/server/players/OldUsersConverter$5
	a val$server
	b val$worldNewPlayerDirectory
	c val$unknownPlayerDirectory
	d val$worldPlayerDirectory
	e val$names
	a (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getFileNameForProfile
	a (Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V movePlayerFile
net/minecraft/server/LightEngineGraph net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint
	a levelCount
	b queues
	c computedLevels
	d firstQueuedLevel
	e hasWork
	a (I)V checkFirstQueuedLevel
	a (II)I getKey
	a (J)Z isSource
	a (JI)V setLevel
	a (JII)V enqueue
	a (JIIZ)V dequeue
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	a (JJIIIZ)V checkEdge
	a (JJIZ)V checkEdge
	b ()Z hasWork
	b (I)I runUpdates
	b (JJI)I computeLevelFromNeighbor
	b (JJIZ)V checkNeighbor
	c (J)I getLevel
	e (J)V removeFromQueue
	f (J)V checkNode
dwx$a net/minecraft/client/renderer/texture/SimpleTexture$TextureImage
	a metadata
	b image
	c exception
	a ()Ldym; getTextureMetadata
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;)Ldwx$a; load
	b ()Lcuj; getImage
	c ()V throwIfError
net/minecraft/server/PistonExtendsChecker net/minecraft/world/level/block/piston/PistonStructureResolver
	a level
	b pistonPos
	c extending
	d startPos
	e pushDirection
	f toPush
	g toDestroy
	h pistonDirection
	a ()Z resolve
	a (II)V reorderListAtCollision
	a (Lnet/minecraft/server/BlockPosition;)Z addBranchingBlocks
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z addBlockLine
	b ()Lnet/minecraft/server/EnumDirection; getPushDirection
	getBrokenBlocks ()Ljava/util/List; getToDestroy
	getMovedBlocks ()Ljava/util/List; getToPush
bu$a net/minecraft/advancements/critereon/UsedEnderEyeTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (D)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
bu$b net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance
	a level
	a (D)Z matches
qy$1 net/minecraft/server/ChainedJsonException$1
net/minecraft/server/WorldGenFeatureOceanRuin net/minecraft/world/level/levelgen/structure/OceanRuinFeature
	a ()Lceu$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;)I getSpacing
	b ()Ljava/lang/String; getFeatureName
	b (Lnet/minecraft/server/ChunkGenerator;)I getSeparation
	c ()I getLookupRange
	d ()I getRandomSalt
net/minecraft/server/DataConverterNewVillage net/minecraft/util/datafix/fixes/NewVillageFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$12
	a (Lcom/mojang/datafixers/Dynamic;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$5
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$10
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$9
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$8
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$4
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$13
	a (Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$1
	a (Ljava/util/List;)Ljava/util/List; lambda$null$3
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$11
	b (Lcom/mojang/datafixers/util/Pair;)Z lambda$null$0
	c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$7
	d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$6
net/minecraft/server/BlockCartographyTable net/minecraft/world/level/block/CartographyTableBlock
	a CONTAINER_TITLE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$getMenuProvider$0
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
ar$b net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance
	a block
	b state
	a (Lnet/minecraft/server/Block;)Lar$b; entersBlock
	a (Lnet/minecraft/server/IBlockData;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/server/WorldGenSurfaceExtremeHillMutated net/minecraft/world/level/levelgen/surfacebuilders/GravellyMountainSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/BlockTallSeaGrass net/minecraft/world/level/block/TallSeagrass
	c HALF
	d SHAPE
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
ar$a net/minecraft/advancements/critereon/EnterBlockTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/IBlockData;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
net/minecraft/server/WorldGenDecoratorFeatureSimple net/minecraft/world/level/levelgen/placement/SimpleFeatureDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
aqx$a net/minecraft/world/entity/animal/AbstractFish$FishMoveControl
	i fish
	a ()V tick
net/minecraft/server/ArgumentScoreboardObjective net/minecraft/commands/arguments/ObjectiveArgument
	a ERROR_OBJECTIVE_NAME_TOO_LONG
	b EXAMPLES
	c ERROR_OBJECTIVE_NOT_FOUND
	d ERROR_OBJECTIVE_READ_ONLY
	a ()Lnet/minecraft/server/ArgumentScoreboardObjective; objective
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ScoreboardObjective; getObjective
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ScoreboardObjective; getWritableObjective
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
aqx$b net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal
	h fish
	a ()Z canUse
net/minecraft/server/WorldGenFeatureOreConfiguration net/minecraft/world/level/levelgen/feature/OreConfiguration
	a target
	b size
	c state
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureOreConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/Raid$Wave net/minecraft/world/entity/raid/Raid$RaiderType
	f VALUES
	g entityType
	h spawnsPerWaveBeforeBonus
	i $VALUES
	a ()[Lnet/minecraft/server/Raid$Wave; access$100
	a (Lnet/minecraft/server/Raid$Wave;)Lnet/minecraft/server/EntityTypes; access$200
	b (Lnet/minecraft/server/Raid$Wave;)[I access$300
net/minecraft/server/Containers$Supplier net/minecraft/world/inventory/MenuType$MenuSupplier
cvj$1 com/mojang/realmsclient/client/FileDownload$1
	a val$worldDownload
	b val$downloadStatus
	c val$worldName
	d val$levelStorageSource
	e this$0
xd$a net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier
	a (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; wait
net/minecraft/server/ResourcePackLoader net/minecraft/server/packs/repository/UnopenedPack
	a LOGGER
	b BROKEN_ASSETS_FALLBACK
	c id
	d supplier
	e title
	f description
	g compatibility
	h defaultPosition
	i required
	j fixedPosition
	a ()Lnet/minecraft/server/IChatBaseComponent; getTitle
	a (Ljava/lang/String;ZLjava/util/function/Supplier;Lxa$b;Lnet/minecraft/server/ResourcePackLoader$Position;)Lnet/minecraft/server/ResourcePackLoader; create
	a (Z)Lnet/minecraft/server/IChatBaseComponent; getChatLink
	a (ZLnet/minecraft/server/ChatModifier;)V lambda$getChatLink$0
	b ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	c ()Lnet/minecraft/server/EnumResourcePackVersion; getCompatibility
	d ()Lnet/minecraft/server/IResourcePack; open
	e ()Ljava/lang/String; getId
	f ()Z isRequired
	g ()Z isFixedPosition
	h ()Lnet/minecraft/server/ResourcePackLoader$Position; getDefaultPosition
net/minecraft/server/EnumGamemode net/minecraft/world/level/GameType
	f id
	g name
	h $VALUES
	a (ILnet/minecraft/server/EnumGamemode;)Lnet/minecraft/server/EnumGamemode; byId
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumGamemode; byName
	a (Ljava/lang/String;Lnet/minecraft/server/EnumGamemode;)Lnet/minecraft/server/EnumGamemode; byName
	a (Lnet/minecraft/server/PlayerAbilities;)V updatePlayerAbilities
	b ()Ljava/lang/String; getName
	c ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	d ()Z isBlockPlacingRestricted
	f ()Z isSurvival
	getById (I)Lnet/minecraft/server/EnumGamemode; byId
net/minecraft/server/Particles net/minecraft/core/particles/ParticleTypes
	a (Ljava/lang/String;Lgf$a;)Lnet/minecraft/server/Particle; register
	a (Ljava/lang/String;Z)Lnet/minecraft/server/ParticleType; register
cqc$b net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionExplorationMap; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionExplorationMap;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
byq$3 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$3
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EnderDragonBattle;Ljava/util/List;ILnet/minecraft/server/BlockPosition;)V tick
cqc$a net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder
	a destination
	b mapDecoration
	c zoom
	d searchRadius
	e skipKnownStructures
	a ()Lcqc$a; getThis
	a (B)Lcqc$a; setZoom
	a (I)Lcqc$a; setSearchRadius
	a (Ljava/lang/String;)Lcqc$a; setDestination
	a (Lnet/minecraft/server/MapIcon$Type;)Lcqc$a; setMapDecoration
	a (Z)Lcqc$a; setSkipKnownStructures
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcqg$a; getThis
byq$2 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$2
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EnderDragonBattle;Ljava/util/List;ILnet/minecraft/server/BlockPosition;)V tick
byq$5 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$5
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EnderDragonBattle;Ljava/util/List;ILnet/minecraft/server/BlockPosition;)V tick
byq$4 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$4
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EnderDragonBattle;Ljava/util/List;ILnet/minecraft/server/BlockPosition;)V tick
byq$1 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$1
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EnderDragonBattle;Ljava/util/List;ILnet/minecraft/server/BlockPosition;)V tick
net/minecraft/server/VillagePlace net/minecraft/world/entity/ai/village/poi/PoiManager
	a distanceTracker
	a (J)V setDirty
	a (Ljava/util/function/BiConsumer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;)V lambda$null$16
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Ljava/util/function/Predicate;JLnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getInSection
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;I)Ljava/util/Optional; take
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/stream/Stream; findAll
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/server/VillagePlace$Occupancy;Lnet/minecraft/server/BlockPosition;ILjava/util/Random;)Ljava/util/Optional; getRandom
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)J getCountInRange
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getInChunk
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/VillagePlace$Occupancy;Ljava/lang/Integer;)Ljava/util/stream/Stream; lambda$getInChunk$2
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/VillagePlace$Occupancy;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/ChunkCoordIntPair;)Ljava/util/stream/Stream; lambda$getInRange$1
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/VillagePlace$Occupancy;Lnet/minecraft/server/VillagePlaceSection;)Ljava/util/stream/Stream; lambda$getInSection$3
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/VillagePlaceRecord;)Z lambda$getRandom$10
	a (Lnet/minecraft/server/BlockPosition;)V remove
	a (Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlaceRecord;)Z lambda$null$0
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z exists
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;Lnet/minecraft/server/VillagePlaceSection;)Ljava/lang/Boolean; lambda$exists$11
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)D lambda$findClosest$4
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceRecord;)D lambda$takeClosest$7
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;)V add
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkSection;)V checkConsistencyWithBlocks
	a (Lnet/minecraft/server/ChunkSection;)Z mayHavePoi
	a (Lnet/minecraft/server/ChunkSection;Ljava/util/function/BiConsumer;Lnet/minecraft/server/BlockPosition;)V lambda$updateFromSection$17
	a (Lnet/minecraft/server/ChunkSection;Lnet/minecraft/server/SectionPosition;)V lambda$checkConsistencyWithBlocks$15
	a (Lnet/minecraft/server/ChunkSection;Lnet/minecraft/server/SectionPosition;Ljava/util/function/BiConsumer;)V updateFromSection
	a (Lnet/minecraft/server/ChunkSection;Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/VillagePlaceSection;)V lambda$checkConsistencyWithBlocks$14
	a (Lnet/minecraft/server/SectionPosition;)I sectionsToVillage
	a (Lnet/minecraft/server/VillagePlace;J)Z access$000
	a (Lnet/minecraft/server/VillagePlaceRecord;)Lnet/minecraft/server/BlockPosition; lambda$takeClosest$9
	a (Lnet/minecraft/server/VillagePlaceSection;)Ljava/lang/Boolean; lambda$isVillageCenter$12
	b (J)V onSectionLoad
	b (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;I)Ljava/util/Optional; takeClosest
	b (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/Optional; find
	b (Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getInRange
	b (Ljava/util/function/Predicate;Lnet/minecraft/server/VillagePlaceRecord;)Z lambda$takeClosest$8
	b (Lnet/minecraft/server/BlockPosition;)Z release
	b (Lnet/minecraft/server/ChunkSection;Lnet/minecraft/server/SectionPosition;Ljava/util/function/BiConsumer;)V lambda$null$13
	b (Lnet/minecraft/server/VillagePlaceRecord;)Lnet/minecraft/server/BlockPosition; lambda$take$6
	c (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/Optional; findClosest
	c (Ljava/util/function/Predicate;Lnet/minecraft/server/VillagePlaceRecord;)Z lambda$take$5
	c (Lnet/minecraft/server/BlockPosition;)Ljava/util/Optional; getType
	d (Lnet/minecraft/server/BlockPosition;)I getFreeTickets
	f (J)Z isVillageCenter
net/minecraft/server/TileEntityJukeBox net/minecraft/world/level/block/entity/JukeboxBlockEntity
	a record
	L_ ()V clearContent
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
net/minecraft/server/PacketPlayInBoatMove net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket
	a left
	b right
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Z getLeft
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z getRight
net/minecraft/server/LootEntryGroup net/minecraft/world/level/storage/loot/entries/EntryGroup
	a (Lnet/minecraft/server/LootEntryChildren;Lnet/minecraft/server/LootEntryChildren;Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z lambda$compose$0
	a ([Lcpq$a;)Lcpm$a; list
	a ([Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; compose
	a ([Lnet/minecraft/server/LootEntryChildren;Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z lambda$compose$1
net/minecraft/server/TileEntitySkull net/minecraft/world/level/block/entity/SkullBlockEntity
	b mouthTickCount
	c isMovingMouth
	gameProfile owner
	userCache profileCache
	T_ ()V tick
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (F)F getMouthAnimation
	a (Lcom/mojang/authlib/minecraft/MinecraftSessionService;)V setSessionService
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/UserCache;)V setProfileCache
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; updateGameprofile
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	d ()Lcom/mojang/authlib/GameProfile; getOwnerProfile
	f ()V updateOwnerProfile
	setGameProfile (Lcom/mojang/authlib/GameProfile;)V setOwner
cqc$1 net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$1
net/minecraft/server/PacketPlayOutBoss net/minecraft/network/protocol/game/ClientboundBossEventPacket
	a id
	b operation
	c name
	d pct
	e color
	f overlay
	g darkenScreen
	h playMusic
	i createWorldFog
	a (I)V decodeProperties
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/UUID; getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketPlayOutBoss$Action; getOperation
	d ()Lnet/minecraft/server/IChatBaseComponent; getName
	e ()F getPercent
	f ()Lnet/minecraft/server/BossBattle$BarColor; getColor
	g ()Lnet/minecraft/server/BossBattle$BarStyle; getOverlay
	h ()Z shouldDarkenScreen
	i ()Z shouldPlayMusic
	j ()Z shouldCreateWorldFog
	k ()I encodeProperties
net/minecraft/server/PacketLoginInCustomPayload net/minecraft/network/protocol/login/ServerboundCustomQueryPacket
	a transactionId
	b data
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginInListener;)V handle
	b ()I getTransactionId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketDataSerializer; getData
net/minecraft/server/PacketPlayInHeldItemSlot net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket
	itemInHandIndex slot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getSlot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/BlockBed net/minecraft/world/level/block/BedBlock
	c BASE
	d LEG_NORTH_WEST
	e LEG_SOUTH_WEST
	f LEG_NORTH_EAST
	g LEG_SOUTH_EAST
	h NORTH_SHAPE
	i SOUTH_SHAPE
	j WEST_SHAPE
	k EAST_SHAPE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/BlockPropertyBedPart;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; getNeighbourDirection
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityHuman$EnumBedResult;)V lambda$use$0
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Ljava/util/Optional; getStandingLocationAtOrBelow
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;I)Ljava/util/Optional; findStandUpPosition
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EnumDirection; getBedOrientation
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/Entity;)V updateEntityAfterFallOn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)J getSeed
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;F)V fallOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	d ()Lnet/minecraft/server/EnumColor; getColor
	d (Lnet/minecraft/server/IBlockData;)Z hasCustomBreakingProgress
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MaterialMapColor; getMapColor
	i (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
cqt$a net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSmelt; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/ItemHoe net/minecraft/world/item/HoeItem
	a TILLABLES
	b attackSpeed
	a (Lnet/minecraft/server/EntityLiving;)V lambda$hurtEnemy$1
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemActionContext;Lnet/minecraft/server/EntityHuman;)V lambda$useOn$0
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z hurtEnemy
net/minecraft/server/CrashReport net/minecraft/CrashReport
	a LOGGER
	b title
	c exception
	d systemDetails
	e details
	f saveFile
	g trackingStackTrace
	h uncategorizedStackTrace
	a ()Ljava/lang/String; getTitle
	a (Ljava/io/File;)Z saveToFile
	a (Ljava/lang/String;)Lnet/minecraft/server/CrashReportSystemDetails; addCategory
	a (Ljava/lang/String;I)Lnet/minecraft/server/CrashReportSystemDetails; addCategory
	a (Ljava/lang/StringBuilder;)V getDetails
	a (Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/server/CrashReport; forThrowable
	b ()Ljava/lang/Throwable; getException
	c ()Ljava/lang/String; getDetails
	d ()Ljava/lang/String; getExceptionMessage
	e ()Ljava/lang/String; getFriendlyReport
	f ()Ljava/io/File; getSaveFile
	g ()Lnet/minecraft/server/CrashReportSystemDetails; getSystemDetails
	h ()V initDetails
	i ()Ljava/lang/String; getErrorComment
	j ()Ljava/lang/String; lambda$initDetails$6
	k ()Ljava/lang/String; lambda$initDetails$5
	l ()Ljava/lang/String; lambda$initDetails$4
	m ()Ljava/lang/String; lambda$initDetails$3
	n ()Ljava/lang/String; lambda$initDetails$2
	o ()Ljava/lang/String; lambda$initDetails$1
	p ()Ljava/lang/String; lambda$initDetails$0
net/minecraft/server/CombatEntry net/minecraft/world/damagesource/CombatEntry
	a source
	b time
	c damage
	d health
	e location
	f fallDistance
	a ()Lnet/minecraft/server/DamageSource; getSource
	b ()I getTime
	c ()F getDamage
	d ()F getHealthBeforeDamage
	e ()F getHealthAfterDamage
	f ()Z isCombatRelated
	g ()Ljava/lang/String; getLocation
	h ()Lnet/minecraft/server/IChatBaseComponent; getAttackerName
	i ()Lnet/minecraft/server/Entity; getAttacker
	j ()F getFallDistance
bd$b net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance
	a victims
	b uniqueEntityTypes
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lbd$b; crossbowKilled
	a (Lnet/minecraft/server/EntityPlayer;Ljava/util/Collection;I)Z matches
	a ([Lav$a;)Lbd$b; crossbowKilled
	b ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/server/PlayerSelector net/minecraft/commands/arguments/selector/options/EntitySelectorOptions
	a ERROR_UNKNOWN_OPTION
	b ERROR_INAPPLICABLE_OPTION
	c ERROR_RANGE_NEGATIVE
	d ERROR_LEVEL_NEGATIVE
	e ERROR_LIMIT_TOO_SMALL
	f ERROR_SORT_UNKNOWN
	g ERROR_GAME_MODE_INVALID
	h ERROR_ENTITY_TYPE_INVALID
	i OPTIONS
	A (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$19
	B (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$18
	C (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$17
	D (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$16
	E (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$15
	F (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$14
	G (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$13
	H (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$12
	I (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$11
	J (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$10
	K (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$9
	L (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$8
	M (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$7
	N (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$6
	a ()V bootStrap
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$null$30
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	a (Ljava/lang/String;Lee$a;Ljava/util/function/Predicate;Lnet/minecraft/server/IChatBaseComponent;)V register
	a (Ljava/lang/String;ZLnet/minecraft/server/Entity;)Z lambda$null$46
	a (Ljava/util/Map;Lnet/minecraft/server/AdvancementProgress;)Z lambda$null$56
	a (Ljava/util/Map;Lnet/minecraft/server/Entity;)Z lambda$null$58
	a (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$60
	a (Lnet/minecraft/server/ArgumentParserSelector;ILnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$null$42
	a (Lnet/minecraft/server/ArgumentParserSelector;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V suggestNames
	a (Lnet/minecraft/server/ArgumentParserSelector;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$null$40
	a (Lnet/minecraft/server/ArgumentParserSelector;Ljava/lang/String;I)Lee$a; get
	a (Lnet/minecraft/server/EntityTypes;ZLnet/minecraft/server/Entity;)Z lambda$null$43
	a (Lnet/minecraft/server/NBTTagCompound;ZLnet/minecraft/server/Entity;)Z lambda$null$49
	a (Lnet/minecraft/server/Tag;ZLnet/minecraft/server/Entity;)Z lambda$null$41
	a (ZLnet/minecraft/server/AdvancementProgress;)Z lambda$null$57
	a (ZLnet/minecraft/server/CriterionProgress;)Z lambda$null$55
	a (ZLnet/minecraft/server/EnumGamemode;Lnet/minecraft/server/Entity;)Z lambda$null$34
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	b (Ljava/lang/String;ZLnet/minecraft/server/Entity;)Z lambda$null$37
	b (Ljava/util/Map;Lnet/minecraft/server/Entity;)Z lambda$null$52
	b (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$59
	b (Lnet/minecraft/server/ArgumentParserSelector;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$null$33
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	c (Ljava/lang/String;ZLnet/minecraft/server/Entity;)Z lambda$null$5
	c (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$54
	d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	d (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$53
	e (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	e (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$51
	f (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$50
	g (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$48
	h (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$47
	i (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$45
	j (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$44
	k (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$39
	l (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$38
	m (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$36
	n (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$35
	o (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$32
	p (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$31
	q (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$29
	r (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$28
	s (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$27
	t (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$26
	u (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$25
	v (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$24
	w (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$23
	x (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$22
	y (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$21
	z (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$20
net/minecraft/server/DedicatedServerProperties net/minecraft/server/dedicated/DedicatedServerProperties
	forceGamemode forceGameMode
	a (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$new$1
	a (Ljava/util/Properties;)Lnet/minecraft/server/DedicatedServerProperties; reload
	b (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$new$0
	b (Ljava/util/Properties;)Lnet/minecraft/server/PropertyManager; reload
	load (Ljava/nio/file/Path;)Lnet/minecraft/server/DedicatedServerProperties; fromFile
net/minecraft/server/BlockRedstoneTorch net/minecraft/world/level/block/RedstoneTorchBlock
	b RECENT_TOGGLES
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;)Ljava/util/List; lambda$isToggledTooFrequently$0
	a (Lnet/minecraft/server/IBlockData;)I getLightEmission
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;Z)V handleTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z hasNeighborSignal
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)Z isToggledTooFrequently
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	h (Lnet/minecraft/server/IBlockData;)Z isSignalSource
net/minecraft/server/ArgumentInventorySlot net/minecraft/commands/arguments/SlotArgument
	a EXAMPLES
	b ERROR_UNKNOWN_SLOT
	c SLOTS
	a ()Lnet/minecraft/server/ArgumentInventorySlot; slot
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I getSlot
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Ljava/util/HashMap;)V lambda$static$1
net/minecraft/server/PacketPlayOutWindowItems net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket
	a containerId
	b items
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/List; getItems
net/minecraft/server/EntityFallingBlock net/minecraft/world/entity/item/FallingBlockEntity
	block blockState
	e DATA_START_POS
	fallHurtAmount fallDamageAmount
	fallHurtMax fallDamageMax
	g cancelDrop
	ticksLived time
	tileEntityData blockData
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/BlockPosition;)V setStartPos
	a (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Z)V setHurtsEntities
	aH ()Z isPickable
	ap ()Z makeStepSound
	b (FF)V causeFallDamage
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bA ()Z displayFireAnimation
	bT ()Z onlyOpCanSetNbt
	bs ()Z isAttackable
	f ()Lnet/minecraft/server/BlockPosition; getStartPos
	getBlock ()Lnet/minecraft/server/IBlockData; getBlockState
	h ()V tick
	i ()Lnet/minecraft/server/World; getLevel
	u_ ()V defineSynchedData
net/minecraft/server/VoxelShapeCubePoint net/minecraft/world/phys/shapes/CubePointRange
	a parts
net/minecraft/server/PacketPlayOutCollect net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket
	a itemId
	b playerId
	c amount
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getItemId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getPlayerId
	d ()I getAmount
net/minecraft/server/TileEntityBrewingStand net/minecraft/world/level/block/entity/BrewingStandBlockEntity
	a dataAccess
	b SLOTS_FOR_UP
	c SLOTS_FOR_DOWN
	fuelLevel fuel
	g SLOTS_FOR_SIDES
	j lastPotionCount
	k ingredient
	L_ ()V clearContent
	M_ ()I getContainerSize
	T_ ()V tick
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/TileEntityBrewingStand;)I access$000
	a (Lnet/minecraft/server/TileEntityBrewingStand;I)I access$002
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/server/ItemStack;)Z canPlaceItem
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b (Lnet/minecraft/server/TileEntityBrewingStand;)I access$100
	b (Lnet/minecraft/server/TileEntityBrewingStand;I)I access$102
	c ()Z isEmpty
	f ()[Z getPotionBits
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	h ()Z isBrewable
	s ()V doBrew
net/minecraft/server/RegistryMaterials net/minecraft/core/MappedRegistry
	R nextId
	a LOGGER
	b map
	c storage
	d randomCache
	a (I)Ljava/lang/Object; byId
	a (ILnet/minecraft/server/MinecraftKey;Ljava/lang/Object;)Ljava/lang/Object; registerMapping
	a (Ljava/lang/Object;)I getId
	a (Ljava/util/Random;)Ljava/lang/Object; getRandom
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/Object; get
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/Object;)Ljava/lang/Object; register
	b ()Ljava/util/Set; keySet
	b (I)Z containsId
	b (Ljava/lang/Object;)Lnet/minecraft/server/MinecraftKey; getKey
	b (Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; getOptional
	c ()Z isEmpty
	c (Lnet/minecraft/server/MinecraftKey;)Z containsKey
net/minecraft/server/RecipeSerializer net/minecraft/world/item/crafting/RecipeSerializer
	a SHAPED_RECIPE
	b SHAPELESS_RECIPE
	c ARMOR_DYE
	d BOOK_CLONING
	e MAP_CLONING
	f MAP_EXTENDING
	g FIREWORK_ROCKET
	h FIREWORK_STAR
	i FIREWORK_STAR_FADE
	j TIPPED_ARROW
	k BANNER_DUPLICATE
	l SHIELD_DECORATION
	m SHULKER_BOX_COLORING
	n SUSPICIOUS_STEW
	o REPAIR_ITEM
	p SMELTING_RECIPE
	q BLASTING_RECIPE
	r SMOKING_RECIPE
	s CAMPFIRE_COOKING_RECIPE
	t STONECUTTER
	a (Ljava/lang/String;Lnet/minecraft/server/RecipeSerializer;)Lnet/minecraft/server/RecipeSerializer; register
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
net/minecraft/server/ItemFishBucket net/minecraft/world/item/FishBucketItem
	a type
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playEmptySound
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbdr;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)V checkExtraContent
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)V spawn
cpq$b net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer
	a name
	b clazz
	a ()Lnet/minecraft/server/MinecraftKey; getName
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
	b ()Ljava/lang/Class; getContainerClass
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEntryAbstract; deserialize
dbj$a net/minecraft/client/gui/screens/BackupConfirmScreen$Listener
cpq$a net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder
	a conditions
	a (Lcpq$a;)Lcph$a; otherwise
	a (Lcrk$a;)Lcpq$a; when
	b ()Lnet/minecraft/server/LootEntryAbstract; build
	b (Lcpq$a;)Lcpm$a; append
	b (Lcrk$a;)Ljava/lang/Object; when
	c ()Ljava/lang/Object; unwrap
	c (Lcpq$a;)Lcpt$a; then
	d ()Lcpq$a; getThis
	e ()Lcpq$a; unwrap
	f ()[Lnet/minecraft/server/LootItemCondition; getConditions
dlx$1 net/minecraft/client/particle/SpellParticle$1
net/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action
	h $VALUES
dmj$a net/minecraft/client/particle/WaterCurrentDownParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
qy$a net/minecraft/server/ChainedJsonException$Entry
	a filename
	b jsonKeys
	a ()Ljava/lang/String; getFilename
	a (Ljava/lang/String;)V addJsonKey
	a (Lqy$a;Ljava/lang/String;)V access$100
	b ()Ljava/lang/String; getJsonKeys
	b (Lqy$a;Ljava/lang/String;)Ljava/lang/String; access$202
net/minecraft/server/VillageSiege$State net/minecraft/world/entity/ai/village/VillageSiege$State
	d $VALUES
ev$2 net/minecraft/core/AxisCycle$2
	a ()Lnet/minecraft/server/EnumAxisCycle; inverse
	a (DDDLnet/minecraft/server/EnumDirection$EnumAxis;)D cycle
	a (IIILnet/minecraft/server/EnumDirection$EnumAxis;)I cycle
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection$EnumAxis; cycle
ev$1 net/minecraft/core/AxisCycle$1
	a ()Lnet/minecraft/server/EnumAxisCycle; inverse
	a (DDDLnet/minecraft/server/EnumDirection$EnumAxis;)D cycle
	a (IIILnet/minecraft/server/EnumDirection$EnumAxis;)I cycle
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection$EnumAxis; cycle
net/minecraft/server/CrashReportSystemDetails$CrashReportDetail net/minecraft/CrashReportCategory$Entry
	a key
	b value
	a ()Ljava/lang/String; getKey
	b ()Ljava/lang/String; getValue
net/minecraft/server/BiomeExtremeHillsWithTrees net/minecraft/world/level/biome/WoodedMountainBiome
net/minecraft/server/VoxelShape net/minecraft/world/phys/shapes/VoxelShape
	a shape
	b faces
	a (DDD)Lnet/minecraft/server/VoxelShape; move
	a (Lcsz$a;)V forAllEdges
	a (Lcsz$a;IIIIII)V lambda$forAllEdges$1
	a (Lcsz$a;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;IIIIII)V lambda$forAllBoxes$2
	a (Ljava/util/List;DDDDDD)V lambda$toAabbs$3
	a (Lnet/minecraft/server/EnumAxisCycle;Lnet/minecraft/server/AxisAlignedBB;D)D collideX
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;D)I findIndex
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;DD)D min
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;DI)Z lambda$findIndex$4
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;I)D get
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/AxisAlignedBB;D)D collide
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/VoxelShape; getFaceShape
	a ([Lnet/minecraft/server/VoxelShape;DDDDDD)V lambda$optimize$0
	b (DDD)Z isFullWide
	b (Lcsz$a;)V forAllBoxes
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)D min
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;DD)D max
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/VoxelShape; calculateFace
	c ()Lnet/minecraft/server/VoxelShape; optimize
	c (Lnet/minecraft/server/EnumDirection$EnumAxis;)D max
	d ()Ljava/util/List; toAabbs
	getBoundingBox ()Lnet/minecraft/server/AxisAlignedBB; bounds
	rayTrace (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MovingObjectPositionBlock; clip
dxj$1 net/minecraft/client/resources/ClientPackSource$1
	c this$0
	a ()Ljava/lang/String; getName
net/minecraft/server/Tag net/minecraft/tags/Tag
	a id
	b values
	c source
	a ()Ljava/util/Collection; getValues
	a (Ljava/util/Random;)Ljava/lang/Object; getRandomElement
	a (Ljava/util/function/Function;)Lcom/google/gson/JsonObject; serializeToJson
	b ()Ljava/util/Collection; getSource
	c ()Lnet/minecraft/server/MinecraftKey; getId
	isTagged (Ljava/lang/Object;)Z contains
net/minecraft/server/PathfinderGoalMoveTowardsTarget net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal
	a mob
	b target
	c wantedX
	d wantedY
	e wantedZ
	f speedModifier
	g within
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
net/minecraft/server/BlockObserver net/minecraft/world/level/block/ObserverBlock
	b POWERED
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V startSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V updateNeighborsInFront
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	h (Lnet/minecraft/server/IBlockData;)Z isSignalSource
net/minecraft/server/LootItemFunctionSetDamage net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction
	a LOGGER
	c damage
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionSetDamage;)Lnet/minecraft/server/LootValueBounds; access$000
	a (Lnet/minecraft/server/LootValueBounds;)Lcqg$a; setDamage
	a (Lnet/minecraft/server/LootValueBounds;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$setDamage$0
net/minecraft/server/BlockPosition$MutableBlockPosition net/minecraft/core/BlockPos$MutableBlockPos
	b x
	c y
	d z
	a (DDD)Lnet/minecraft/server/BlockPosition; offset
	a (I)Lnet/minecraft/server/BlockPosition; multiply
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	a (Lnet/minecraft/server/EnumAxisCycle;III)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; rotate
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/BlockPosition; relative
	a (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BlockPosition; relative
	b (DDD)Lnet/minecraft/server/BaseBlockPosition; offset
	b (III)Lnet/minecraft/server/BlockPosition; offset
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/BaseBlockPosition; relative
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BaseBlockPosition; relative
	b (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BaseBlockPosition; relative
	c (DDD)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	c (III)Lnet/minecraft/server/BaseBlockPosition; offset
	c (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	c (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	d (III)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	d (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; cross
	e (III)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	e (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; subtract
	f (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; offset
	g (J)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	g (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	h ()Lnet/minecraft/server/BlockPosition; immutable
	h (I)Lnet/minecraft/server/BaseBlockPosition; east
	h (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	i ()Lnet/minecraft/server/BaseBlockPosition; east
	i (I)Lnet/minecraft/server/BaseBlockPosition; west
	j ()Lnet/minecraft/server/BaseBlockPosition; west
	j (I)Lnet/minecraft/server/BaseBlockPosition; south
	k ()Lnet/minecraft/server/BaseBlockPosition; south
	k (I)Lnet/minecraft/server/BaseBlockPosition; north
	l ()Lnet/minecraft/server/BaseBlockPosition; north
	l (I)Lnet/minecraft/server/BaseBlockPosition; below
	m ()Lnet/minecraft/server/BaseBlockPosition; below
	m (I)Lnet/minecraft/server/BaseBlockPosition; above
	n ()Lnet/minecraft/server/BaseBlockPosition; above
	n (I)Lnet/minecraft/server/BaseBlockPosition; multiply
	o ()I getX
	o (I)V setX
	p ()I getY
	p (I)V setY
	q ()I getZ
	q (I)V setZ
net/minecraft/server/LootItemFunctionSmelt net/minecraft/world/level/storage/loot/functions/SmeltItemFunction
	a LOGGER
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	b ()Lcqg$a; smelted
net/minecraft/server/GameRules$GameRuleInt net/minecraft/world/level/GameRules$IntegerValue
	a value
	a ()I get
	a (I)Lnet/minecraft/server/GameRules$GameRuleDefinition; access$100
	a (ILjava/util/function/BiConsumer;)Lnet/minecraft/server/GameRules$GameRuleDefinition; create
	a (ILnet/minecraft/server/GameRules$GameRuleDefinition;)Lnet/minecraft/server/GameRules$GameRuleInt; lambda$create$0
	a (ILnet/minecraft/server/MinecraftServer;)V set
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	a (Ljava/lang/String;)V deserialize
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/GameRules$GameRuleInt;)V lambda$create$1
	b ()Ljava/lang/String; serialize
	b (I)Lnet/minecraft/server/GameRules$GameRuleDefinition; create
	b (Ljava/lang/String;)I safeParse
	c ()I getCommandResult
	d ()Lnet/minecraft/server/GameRules$GameRuleInt; getSelf
	e ()Lnet/minecraft/server/GameRules$GameRuleValue; getSelf
net/minecraft/server/EntityFox net/minecraft/world/entity/animal/Fox
	bA DATA_FLAGS_ID
	bB DATA_TRUSTED_ID_0
	bC DATA_TRUSTED_ID_1
	bD ALLOWED_ITEMS
	bE TRUSTED_TARGET_SELECTOR
	bF STALKABLE_PREY
	bG AVOID_PLAYERS
	bH landTargetGoal
	bI turtleEggTargetGoal
	bJ fishTargetGoal
	bK interestedAngle
	bL interestedAngleO
	bM crouchAmount
	bN crouchAmountO
	bO ticksSinceEaten
	bz DATA_TYPE_ID
	B ()V playAmbientSound
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/Entity;)Z lambda$static$3
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityFox;)Z access$000
	a (Lnet/minecraft/server/EntityFox;F)F access$1702
	a (Lnet/minecraft/server/EntityFox;Ljava/util/UUID;)V access$600
	a (Lnet/minecraft/server/EntityFox;Lnet/minecraft/server/EntityLiving;)Z isPathClear
	a (Lnet/minecraft/server/EntityFox;Z)V access$400
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityAgeable;)V onOffspringSpawnedFromEgg
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)V usePlayerItem
	a (Lnet/minecraft/server/EntityItem;)V pickUpItem
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (FF)V causeFallDamage
	b (Ljava/util/UUID;)V addTrustedUUID
	b (Lnet/minecraft/server/Entity;)Z lambda$static$2
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityFox; getBreedOffspring
	b (Lnet/minecraft/server/EntityFox;)Z access$300
	b (Lnet/minecraft/server/EntityFox;F)F access$1802
	b (Lnet/minecraft/server/EntityFox;Ljava/util/UUID;)Z access$1000
	b (Lnet/minecraft/server/EntityFox;Z)V access$800
	b (Lnet/minecraft/server/EntityItem;)Z lambda$static$0
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Ljava/util/UUID;)Z trusts
	c (Lnet/minecraft/server/Entity;)Z lambda$static$1
	c (Lnet/minecraft/server/EntityFox;)V access$500
	c (Lnet/minecraft/server/EntityFox;Z)V access$1400
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cW ()Z isImmobile
	cl ()V registerAttributes
	d (IZ)V setFlag
	d (Lnet/minecraft/server/DamageSource;)V dropAllDeathLoot
	d (Lnet/minecraft/server/EntityFox;)Ljava/util/List; access$700
	d (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/SoundEffect; getEatingSound
	dX ()Z isFaceplanted
	dY ()Z isPouncing
	dZ ()Z isJumping
	dx ()Z isSleeping
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityFox;)V access$900
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	ee ()Z isFullyCrouched
	eg ()Z isInterested
	eh ()Ljava/util/function/Predicate; access$100
	ei ()Ljava/util/function/Predicate; access$200
	ek ()Ljava/util/List; getTrustedUUIDs
	el ()Z isDefending
	em ()V wakeUp
	en ()V clearStates
	eo ()Z canMove
	f (Lnet/minecraft/server/EntityFox;)Ljava/util/Random; access$1200
	g (Lnet/minecraft/server/EntityFox;)Ljava/util/Random; access$1300
	g (Lnet/minecraft/server/EntityLiving;)V setTarget
	g (Lnet/minecraft/server/ItemStack;)Z canHoldItem
	h ()V tick
	h (Lnet/minecraft/server/EntityFox;)Ljava/util/Random; access$1500
	h (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$8
	i (Lnet/minecraft/server/EntityFox;)Z access$1600
	i (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$7
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	initializePathFinderGoals ()V setTargetGoals
	j (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$6
	j (Lnet/minecraft/server/ItemStack;)Z canEat
	k ()V aiStep
	k (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$5
	k (Lnet/minecraft/server/ItemStack;)V spitOutItem
	l (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$4
	l (Lnet/minecraft/server/ItemStack;)V dropItemStack
	n ()V registerGoals
	s (I)Z getFlag
	s (Z)V setIsPouncing
	setCrouching (Z)V setIsCrouching
	u (Z)V setIsInterested
	u_ ()V defineSynchedData
	v (F)F getHeadRollAngle
	v (Z)V setFaceplanted
	w (F)F getCrouchAmount
	w (Z)V setDefending
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType
	e $VALUES
net/minecraft/server/PacketPlayOutCombatEvent net/minecraft/network/protocol/game/ClientboundPlayerCombatPacket
	a event
	b playerId
	c killerId
	d duration
	e message
	a ()Z isSkippable
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/WorldGenDecoratorRangeConfiguration net/minecraft/world/level/levelgen/placement/DecoratorRange
	a min
	b max
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorRangeConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/ArgumentScoreboardSlot net/minecraft/commands/arguments/ScoreboardSlotArgument
	a ERROR_INVALID_VALUE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentScoreboardSlot; displaySlot
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I getDisplaySlot
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
net/minecraft/server/EnumMobSpawn net/minecraft/world/entity/MobSpawnType
	q $VALUES
cux$1 com/mojang/blaze3d/vertex/BufferUploader$1
	a $SwitchMap$com$mojang$blaze3d$vertex$VertexFormatElement$Usage
net/minecraft/server/WorldGenFeatureVillageTaiga net/minecraft/world/level/levelgen/feature/TaigaVillagePools
	a ()V bootstrap
net/minecraft/server/LootItemFunctionSetContents net/minecraft/world/level/storage/loot/functions/SetContainerContents
	a entries
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootCollector;Ljava/util/function/Function;Ljava/util/Set;Lnet/minecraft/server/LootContextParameterSet;)V validate
	a (Lnet/minecraft/server/LootItemFunctionSetContents;)Ljava/util/List; access$100
	a (Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/NonNullList;Lnet/minecraft/server/LootEntryAbstract;)V lambda$run$1
	a (Lnet/minecraft/server/NonNullList;Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/LootEntry;)V lambda$null$0
	b ()Lcql$a; setContents
dmj$1 net/minecraft/client/particle/WaterCurrentDownParticle$1
net/minecraft/server/RecipeBannerDuplicate net/minecraft/world/item/crafting/BannerDuplicateRecipe
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	b (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/NonNullList; getRemainingItems
	b (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/NonNullList; getRemainingItems
p$1 net/minecraft/Util$1
net/minecraft/server/WorldGenFeatureDefinedStructurePoolEmpty net/minecraft/world/level/levelgen/feature/structures/EmptyPoolElement
	a INSTANCE
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;)Z place
net/minecraft/server/DataConverterMapId net/minecraft/util/datafix/fixes/MapIdFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
net/minecraft/server/BlockPressurePlateBinary$EnumMobType net/minecraft/world/level/block/PressurePlateBlock$Sensitivity
	c $VALUES
cvj$c com/mojang/realmsclient/client/FileDownload$ResourcePackProgressListener
	a this$0
	b tempFile
	c downloadStatus
	d worldDownload
cvj$a com/mojang/realmsclient/client/FileDownload$DownloadCountingOutputStream
	a this$0
	b listener
	a (Ljava/awt/event/ActionListener;)V setListener
cvj$b com/mojang/realmsclient/client/FileDownload$ProgressListener
	a this$0
	b worldName
	c tempFile
	d levelStorageSource
	e downloadStatus
	f worldDownload
net/minecraft/server/DataPaletteLinear net/minecraft/world/level/chunk/LinearPalette
	a registry
	b values
	c resizeHandler
	d reader
	e bits
	f size
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (Ljava/lang/Object;)I idFor
	a (Lnet/minecraft/server/NBTTagList;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()I getSize
	b (Ljava/lang/Object;)Z maybeHas
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/WorldGenFeatureComposite net/minecraft/world/level/levelgen/feature/DecoratedFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureCompositeConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
ee$1 net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$1
net/minecraft/server/PacketPlayOutWindowData net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket
	a containerId
	b id
	c value
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getId
	d ()I getValue
net/minecraft/server/EntityMinecartHopper net/minecraft/world/entity/vehicle/MinecartHopper
	d enabled
	e cooldownTime
	f lastPosition
	A ()D getLevelY
	B ()D getLevelZ
	C ()Z suckInItems
	D ()Z isOnCooldown
	M_ ()I getContainerSize
	a (IIIZ)V activateMinecart
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/DamageSource;)V destroy
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	h ()V tick
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	s ()I getDefaultDisplayOffset
	w ()Lnet/minecraft/server/World; getLevel
	z ()D getLevelX
net/minecraft/server/BlockFire net/minecraft/world/level/block/FireBlock
	UPPER UP
	flameChances flameOdds
	g PROPERTY_BY_DIRECTION
	i burnOdds
	a (Lbvu$a;)V createBlockStateDefinition
	a (Ljava/util/Map$Entry;)Z lambda$static$0
	a (Lnet/minecraft/server/Block;II)V setFlammable
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)I getFireOdds
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z isNearRain
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILjava/util/Random;I)V checkBurnOut
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	canBurn (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isValidFireLocation
	d ()V bootStrap
	j (Lnet/minecraft/server/IBlockData;)Z canBurn
	q (Lnet/minecraft/server/IBlockData;)I getBurnOdd
	r (Lnet/minecraft/server/IBlockData;)I getFlameOdds
net/minecraft/server/IMonster net/minecraft/world/entity/monster/Enemy
net/minecraft/server/ArgumentChat net/minecraft/commands/arguments/MessageArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/ArgumentChat; message
	a (Lcom/mojang/brigadier/StringReader;)Lcp$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; getMessage
crf$1 net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$1
crw$a net/minecraft/world/level/timers/FunctionTagCallback$Serializer
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallbackTag; deserialize
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/CustomFunctionCallbackTag;)V serialize
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/CustomFunctionCallbackTimer;)V serialize
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallbackTimer; deserialize
net/minecraft/server/ContainerDispenser net/minecraft/world/inventory/DispenserMenu
	items dispenser
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
agj$1 net/minecraft/util/profiling/GameProfiler$1
net/minecraft/server/ItemCompass net/minecraft/world/item/CompassItem
net/minecraft/server/BiomeBase$EnumTemperature net/minecraft/world/level/biome/Biome$BiomeTempCategory
	e BY_NAME
	f name
	g $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/BiomeBase$EnumTemperature; byName
	a (Lnet/minecraft/server/BiomeBase$EnumTemperature;)Lnet/minecraft/server/BiomeBase$EnumTemperature; lambda$static$0
net/minecraft/server/DataConverterShulkerBoxBlock net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fix$0
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/PathfinderGoalNearestHealableRaider net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal
	i cooldown
	a ()Z canUse
	c ()V start
	h ()I getCooldown
	j ()V decrementCooldown
net/minecraft/server/ReputationType net/minecraft/world/entity/ai/gossip/GossipType
	f id
	g weight
	h max
	i decayPerDay
	j decayPerTransfer
	k BY_ID
	l $VALUES
	a (Ljava/lang/String;)Lnet/minecraft/server/ReputationType; byId
	a (Lnet/minecraft/server/ReputationType;)Ljava/lang/String; lambda$static$0
net/minecraft/server/ScoreboardServer net/minecraft/server/ServerScoreboard
	a server
	b trackedObjectives
	c dirtyListeners
	a ()Lnet/minecraft/server/MinecraftServer; getServer
	a (ILnet/minecraft/server/ScoreboardObjective;)V setDisplayObjective
	a (Ljava/lang/Runnable;)V addDirtyListener
	a (Ljava/lang/String;)V onPlayerRemoved
	a (Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)V onPlayerScoreRemoved
	a (Ljava/lang/String;Lnet/minecraft/server/ScoreboardTeam;)Z addPlayerToTeam
	a (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveAdded
	a (Lnet/minecraft/server/ScoreboardScore;)V onScoreChanged
	a (Lnet/minecraft/server/ScoreboardTeam;)V onTeamAdded
	b ()V setDirty
	b (Ljava/lang/String;Lnet/minecraft/server/ScoreboardTeam;)V removePlayerFromTeam
	b (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveChanged
	b (Lnet/minecraft/server/ScoreboardTeam;)V onTeamChanged
	c (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveRemoved
	c (Lnet/minecraft/server/ScoreboardTeam;)V onTeamRemoved
	e (Lnet/minecraft/server/ScoreboardObjective;)V startTrackingObjective
	f (Lnet/minecraft/server/ScoreboardObjective;)Ljava/util/List; getStopTrackingPackets
	g (Lnet/minecraft/server/ScoreboardObjective;)V stopTrackingObjective
	getScoreboardScorePacketsForObjective (Lnet/minecraft/server/ScoreboardObjective;)Ljava/util/List; getStartTrackingPackets
	h (Lnet/minecraft/server/ScoreboardObjective;)I getObjectiveDisplaySlotCount
ev$3 net/minecraft/core/AxisCycle$3
	a ()Lnet/minecraft/server/EnumAxisCycle; inverse
	a (DDDLnet/minecraft/server/EnumDirection$EnumAxis;)D cycle
	a (IIILnet/minecraft/server/EnumDirection$EnumAxis;)I cycle
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection$EnumAxis; cycle
net/minecraft/server/VirtualLevelReadable net/minecraft/world/level/LevelSimulatedReader
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	b (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
	getHighestBlockYAt (Lnet/minecraft/server/HeightMap$Type;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; getHeightmapPos
net/minecraft/server/WorldGenFeatureChanceDecoratorCountConfiguration net/minecraft/world/level/levelgen/feature/DecoratorCountRange
	a count
	b bottomOffset
	c topOffset
	d maximum
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureChanceDecoratorCountConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/ItemBlockWallable net/minecraft/world/item/StandingAndWallBlockItem
	a (Ljava/util/Map;Lnet/minecraft/server/Item;)V registerBlocks
	c (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getPlacementState
net/minecraft/server/ItemBlock net/minecraft/world/item/BlockItem
	a block
	a ()Ljava/lang/String; getDescriptionId
	a (Ljava/util/Map;Lnet/minecraft/server/Item;)V registerBlocks
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/EnumInteractionResult; place
	a (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/IBlockData;)Z placeBlock
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)Z updateCustomBlockEntityTag
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; updateBlockStateFromTag
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/SoundEffect; getPlaceSound
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Lnet/minecraft/server/IBlockData; lambda$updateState$0
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;Ljava/lang/String;)Lnet/minecraft/server/IBlockData; updateState
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbdr;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)Z updateCustomBlockEntityTag
	b (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/BlockActionContext; updatePlacementContext
	b (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/IBlockData;)Z canPlace
	c (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getPlacementState
	d ()Z mustSurvive
net/minecraft/server/PacketPlayOutEntitySound net/minecraft/network/protocol/game/ClientboundSoundEntityPacket
	a sound
	b source
	c id
	d volume
	e pitch
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/SoundEffect; getSound
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/SoundCategory; getSource
	d ()I getId
	e ()F getVolume
	f ()F getPitch
net/minecraft/server/WorldMap$WorldMapHumanTracker net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer
	b step
	d dirtyData
	e minDirtyX
	f minDirtyY
	g maxDirtyX
	h maxDirtyY
	i tick
	trackee player
	worldMap this$0
	a (II)V markDirty
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/Packet; nextUpdatePacket
net/minecraft/server/BossBattle net/minecraft/world/BossEvent
	b percent
	e darkenScreen
	f playBossMusic
	g createWorldFog
	h id
	style overlay
	title name
	a (F)V setPercent
	a (Lnet/minecraft/server/BossBattle$BarColor;)V setColor
	a (Lnet/minecraft/server/BossBattle$BarStyle;)V setOverlay
	a (Lnet/minecraft/server/IChatBaseComponent;)V setName
	a (Z)Lnet/minecraft/server/BossBattle; setDarkenScreen
	b (Z)Lnet/minecraft/server/BossBattle; setPlayBossMusic
	c (Z)Lnet/minecraft/server/BossBattle; setCreateWorldFog
	getProgress ()F getPercent
	i ()Ljava/util/UUID; getId
	isCreateFog ()Z shouldCreateWorldFog
	isDarkenSky ()Z shouldDarkenScreen
	isPlayMusic ()Z shouldPlayBossMusic
	j ()Lnet/minecraft/server/IChatBaseComponent; getName
	l ()Lnet/minecraft/server/BossBattle$BarColor; getColor
	m ()Lnet/minecraft/server/BossBattle$BarStyle; getOverlay
agj$b net/minecraft/util/profiling/GameProfiler$ProfilerImpl
	a collector
	b this$0
	a ()Z isEnabled
	b ()Lnet/minecraft/server/MethodProfilerResults; disable
	c ()Lnet/minecraft/server/MethodProfilerResults; getResults
	d ()V enable
net/minecraft/server/BehaviorCelebrate net/minecraft/world/entity/ai/behavior/Celebrate
	a currentRaid
	a (Lnet/minecraft/server/EnumColor;I)Lnet/minecraft/server/ItemStack; getFirework
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
agj$a net/minecraft/util/profiling/GameProfiler$Profiler
	a ()Z isEnabled
	b ()Lnet/minecraft/server/MethodProfilerResults; disable
	c ()Lnet/minecraft/server/MethodProfilerResults; getResults
	d ()V enable
net/minecraft/server/BlockTallPlantShearable net/minecraft/world/level/block/ShearableDoublePlantBlock
	b HALF
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
net/minecraft/server/ArgumentRotation net/minecraft/commands/arguments/coordinates/RotationArgument
	a ERROR_NOT_COMPLETE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentRotation; rotation
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IVectorPosition; getRotation
bcq$1 net/minecraft/world/item/MinecartItem$1
	b defaultDispenseItemBehavior
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
net/minecraft/server/VoxelShapeMergerDisjoint net/minecraft/world/phys/shapes/NonOverlappingMerger
	a lower
	b upper
	c swap
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Lcsu$a;)Z forMergedIndexes
	a (Lcsu$a;III)Z lambda$forMergedIndexes$0
	b (Lcsu$a;)Z forNonSwappedIndexes
boc$1 net/minecraft/world/level/block/DetectorRailBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$Mirror
net/minecraft/server/LootEntryAbstract net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer
	c compositeCondition
	d conditions
	a (Lnet/minecraft/server/LootCollector;Ljava/util/function/Function;Ljava/util/Set;Lnet/minecraft/server/LootContextParameterSet;)V validate
	a (Lnet/minecraft/server/LootTableInfo;)Z canRun
net/minecraft/server/CriterionConditionItem net/minecraft/advancements/critereon/ItemPredicate
	a ANY
	b tag
	c item
	d count
	e durability
	f enchantments
	g potion
	h nbt
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionItem; fromJson
	a (Lnet/minecraft/server/ItemStack;)Z matches
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$1
	b (Lcom/google/gson/JsonElement;)[Lnet/minecraft/server/CriterionConditionItem; fromJsonArray
	b (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
net/minecraft/server/LootItemFunctionSetLore net/minecraft/world/level/storage/loot/functions/SetLoreFunction
	a replace
	c lore
	d resolutionContext
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/ItemStack;Z)Lnet/minecraft/server/NBTTagList; getLoreTag
	a (Lnet/minecraft/server/LootItemFunctionSetLore;)Z access$000
	b ()Lcqp$a; setLore
	b (Lnet/minecraft/server/LootItemFunctionSetLore;)Ljava/util/List; access$100
	c (Lnet/minecraft/server/LootItemFunctionSetLore;)Lnet/minecraft/server/LootTableInfo$EntityTarget; access$200
cwm$1 com/mojang/realmsclient/gui/screens/RealmsInviteScreen$1
	a this$0
dzp$a net/minecraft/client/resources/sounds/SoundInstance$Attenuation
	a NONE
	b LINEAR
	c $VALUES
cwm$2 com/mojang/realmsclient/gui/screens/RealmsInviteScreen$2
	a this$0
net/minecraft/server/GameRules$GameRuleDefinition net/minecraft/world/level/GameRules$Type
	a argument
	b constructor
	c callback
	a (Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; createArgument
	a (Lnet/minecraft/server/GameRules$GameRuleDefinition;)Ljava/util/function/BiConsumer; access$300
	getValue ()Lnet/minecraft/server/GameRules$GameRuleValue; createRule
net/minecraft/server/EnchantmentTridentRiptide net/minecraft/world/item/enchantment/TridentRiptideEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
ee$b net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option
	a modifier
	b predicate
	c description
ee$a net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier
net/minecraft/server/ItemCooldown net/minecraft/world/item/ItemCooldowns
	currentTick tickCount
	a ()V tick
	a (Lnet/minecraft/server/Item;F)F getCooldownPercent
	b (Lnet/minecraft/server/Item;)V removeCooldown
	b (Lnet/minecraft/server/Item;I)V onCooldownStarted
	c (Lnet/minecraft/server/Item;)V onCooldownEnded
	hasCooldown (Lnet/minecraft/server/Item;)Z isOnCooldown
	setCooldown (Lnet/minecraft/server/Item;I)V addCooldown
net/minecraft/server/EntityRaider net/minecraft/world/entity/raid/Raider
	b ALLOWED_ITEMS
	bA canJoinRaid
	bB ticksOutsideRaid
	bz wave
	c IS_CELEBRATING
	d raid
	I ()Z requiresCustomPersistence
	a (I)V setWave
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityItem;)V pickUpItem
	a (Lnet/minecraft/server/EntityRaider;)Ljava/util/Random; access$100
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/Raid;)V setCurrentRaid
	b (I)V setTicksOutsideRaid
	b (Lnet/minecraft/server/EntityItem;)Z lambda$static$0
	b (Lnet/minecraft/server/EntityRaider;)F access$200
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (D)Z removeWhenFarAway
	c (Lnet/minecraft/server/EntityRaider;)F access$300
	d (Lnet/minecraft/server/EntityRaider;)Ljava/util/Random; access$400
	dV ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	e (Lnet/minecraft/server/EntityRaider;)Z access$500
	eb ()V updateNoActionTime
	ec ()Z canJoinPatrol
	ei ()Z canJoinRaid
	ej ()Lnet/minecraft/server/Raid; getCurrentRaid
	ek ()Z hasActiveRaid
	el ()I getWave
	em ()Z isCelebrating
	en ()I getTicksOutsideRaid
	eo ()Ljava/util/function/Predicate; access$000
	f (Lnet/minecraft/server/EntityRaider;)Ljava/util/Random; access$600
	g (Lnet/minecraft/server/EntityRaider;)Ljava/util/Random; access$700
	k ()V aiStep
	n ()V registerGoals
	t (Z)V setCanJoinRaid
	u (Z)V setCelebrating
	u_ ()V defineSynchedData
net/minecraft/server/BehaviorWork net/minecraft/world/entity/ai/behavior/WorkAtPoi
	a lastCheck
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/GlobalPos;)V lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
net/minecraft/server/GenLayerIsland net/minecraft/world/level/newbiome/layer/AddIslandLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/PairedQueue net/minecraft/util/thread/StrictQueue
	a ()Ljava/lang/Object; pop
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
cqt$1 net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$1
crf$a net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder
	a scores
	b entityTarget
	a (Ljava/lang/String;Lnet/minecraft/server/LootValueBounds;)Lcrf$a; withScore
crf$b net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionEntityScore; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionEntityScore;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
net/minecraft/server/PathfinderGoalJumpOnBlock net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal
	g cat
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PacketPlayOutSpawnEntityLiving net/minecraft/network/protocol/game/ClientboundAddMobPacket
	a id
	b uuid
	c type
	d x
	e y
	f z
	g xd
	h yd
	i zd
	j yRot
	k xRot
	l yHeadRot
	m entityData
	n unpack
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/List; getUnpackedData
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getId
	d ()Ljava/util/UUID; getUUID
	e ()I getType
	f ()D getX
	g ()D getY
	h ()D getZ
	i ()I getXd
	j ()I getYd
	k ()I getZd
	l ()B getyRot
	m ()B getxRot
	n ()B getyHeadRot
net/minecraft/server/EntitySpider$GroupDataSpider net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData
	a effect
	a (Ljava/util/Random;)V setRandomEffect
net/minecraft/server/ArgumentTime net/minecraft/commands/arguments/TimeArgument
	a EXAMPLES
	b ERROR_INVALID_UNIT
	c ERROR_INVALID_TICK_COUNT
	d UNITS
	a ()Lnet/minecraft/server/ArgumentTime; time
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
net/minecraft/server/LootTableInfo$EntityTarget net/minecraft/world/level/storage/loot/LootContext$EntityTarget
	e name
	f param
	g $VALUES
	a ()Lnet/minecraft/server/LootContextParameter; getParam
	a (Ljava/lang/String;)Lnet/minecraft/server/LootTableInfo$EntityTarget; getByName
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;)Ljava/lang/String; access$100
net/minecraft/server/GeneratorSettingsOverworld net/minecraft/world/level/levelgen/OverworldGeneratorSettings
	t biomeSize
	u riverSize
	v fixedBiome
	w seaLevel
	u ()I getBedrockFloorPosition
	v ()I getBiomeSize
	w ()I getRiverSize
	x ()I getFixedBiome
	y ()I getSeaLevel
net/minecraft/server/Block$EnumRandomOffset net/minecraft/world/level/block/Block$OffsetType
	d $VALUES
cze$b net/minecraft/client/gui/components/AbstractSelectionList$TrackedList
	a this$0
	b delegate
	a (I)Lcze$a; get
	a (ILcze$a;)Lcze$a; set
	b (I)Lcze$a; remove
	b (ILcze$a;)V add
net/minecraft/server/PathfinderGoalTempt net/minecraft/world/entity/ai/goal/TemptGoal
	a mob
	c TEMP_TARGETING
	d speedModifier
	e px
	f py
	g pz
	h pRotX
	i pRotY
	j calmDown
	k isRunning
	l items
	m canScare
	target player
	a ()Z canUse
	a (Lnet/minecraft/server/ItemStack;)Z shouldFollowItem
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z canScare
	h ()Z isRunning
net/minecraft/server/DataConverterZombieType net/minecraft/util/datafix/fixes/EntityZombieSplitFix
	a (Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
cze$a net/minecraft/client/gui/components/AbstractSelectionList$Entry
net/minecraft/server/RegistryBlockID net/minecraft/core/IdMapper
	a nextId
	b tToId
	c idToT
	a ()I size
	a (Ljava/lang/Object;I)V addMapping
	b (I)Z contains
	b (Ljava/lang/Object;)V add
	fromId (I)Ljava/lang/Object; byId
net/minecraft/server/BehaviorWalkHome net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget
	a speed
	b batchCache
	c triedCount
	d lastUpdate
	a (Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z lambda$start$2
	a (Lnet/minecraft/server/BlockPosition;)Z lambda$start$1
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/BlockPosition;)Z lambda$checkExtraStartConditions$0
net/minecraft/server/FluidType net/minecraft/world/level/material/Fluid
	a defaultFluidState
	c FLUID_STATE_REGISTRY
	d stateDefinition
	a ()Lnet/minecraft/server/TextureType; getRenderLayer
	a (Lbvu$a;)V createFluidStateDefinition
	a (Lnet/minecraft/server/Fluid;)F getOwnHeight
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getHeight
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/server/FluidType;)Z isSame
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/Vec3D; getFlow
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Ljava/util/Random;)V animateTick
	b ()Lnet/minecraft/server/Item; getBucket
	b (Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/IBlockData; createLegacyBlock
	b (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Ljava/util/Random;)V randomTick
	c ()Z isEmpty
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d ()F getExplosionResistance
	d (Lnet/minecraft/server/Fluid;)I getAmount
	f (Lnet/minecraft/server/Fluid;)V registerDefaultState
	h ()Lnet/minecraft/server/BlockStateList; getStateDefinition
	i ()Lnet/minecraft/server/Fluid; defaultFluidState
	j ()Lnet/minecraft/server/ParticleParam; getDripParticle
	k ()Z isRandomlyTicking
net/minecraft/server/BiomeForest net/minecraft/world/level/biome/ForestBiome
net/minecraft/server/MinecraftVersion net/minecraft/DetectedVersion
	a LOGGER
	b id
	c name
	d stable
	e worldVersion
	f protocolVersion
	g packVersion
	h buildTime
	i releaseTarget
	a ()Lcom/mojang/bridge/game/GameVersion; tryDetectVersion
anf$1 net/minecraft/world/entity/ai/goal/GoalSelector$1
	a ()Z canUse
anf$2 net/minecraft/world/entity/ai/goal/GoalSelector$2
	g ()Z isRunning
net/minecraft/server/BlockComposter net/minecraft/world/level/block/ComposterBlock
	a LEVEL
	b COMPOSTABLES
	c OUTER_SHAPE
	d SHAPES
	a (FLnet/minecraft/server/IMaterial;)V add
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IWorldInventory; getContainer
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)Z access$100
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)V handleFill
	a ([Lnet/minecraft/server/VoxelShape;)V lambda$static$0
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)Z addItem
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V access$000
	d ()V bootStrap
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V empty
	i (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
net/minecraft/server/BlockTripwire net/minecraft/world/level/block/TripWireBlock
	h AABB
	i NOT_ATTACHED_AABB
	j PROPERTY_BY_DIRECTION
	k hook
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z shouldConnectTo
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V checkPressed
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V updateSource
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
net/minecraft/server/PathfinderGoalMeleeAttack net/minecraft/world/entity/ai/goal/MeleeAttackGoal
	a mob
	b attackTime
	c attackInterval
	d speedModifier
	e trackTarget
	f path
	g timeToRecalcPath
	h pathedTargetX
	i pathedTargetY
	j pathedTargetZ
	k lastUpdate
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
	a (Lnet/minecraft/server/EntityLiving;D)V checkAndPerformAttack
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/IProgressUpdate net/minecraft/util/ProgressListener
	a ()V stop
	a (I)V progressStagePercentage
	a (Lnet/minecraft/server/IChatBaseComponent;)V progressStartNoAbort
	b (Lnet/minecraft/server/IChatBaseComponent;)V progressStart
	c (Lnet/minecraft/server/IChatBaseComponent;)V progressStage
bvp$1 net/minecraft/world/level/block/piston/PistonMovingBlockEntity$1
	a ()Lnet/minecraft/server/EnumDirection; initialValue
bvp$2 net/minecraft/world/level/block/piston/PistonMovingBlockEntity$2
	a $SwitchMap$net$minecraft$core$Direction$Axis
	b $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/VillagerTrades net/minecraft/world/entity/npc/VillagerTrades
	a TRADES
	b WANDERING_TRADER_TRADES
	a (Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; toIntMap
	a (Ljava/util/HashMap;)V lambda$static$0
net/minecraft/server/EntityGuardian$EntitySelectorGuardianTargetHumanSquid net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector
	a guardian
	a (Lnet/minecraft/server/EntityLiving;)Z test
net/minecraft/server/AxisAlignedBB net/minecraft/world/phys/AABB
	a ()D getSize
	a (D)Lnet/minecraft/server/AxisAlignedBB; setMinX
	a (DDD)Lnet/minecraft/server/AxisAlignedBB; contract
	a (DDDDDD)Z intersects
	a (Ljava/lang/Iterable;)Lnet/minecraft/server/AxisAlignedBB; minmax
	a (Ljava/lang/Iterable;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MovingObjectPositionBlock; clip
	a (Lnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/AxisAlignedBB; intersect
	a (Lnet/minecraft/server/AxisAlignedBB;D)D clipXCollide
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/Vec3D;[DLnet/minecraft/server/EnumDirection;DDD)Lnet/minecraft/server/EnumDirection; getDirection
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/AxisAlignedBB; move
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)D min
	a (Lnet/minecraft/server/StructureBoundingBox;)Lnet/minecraft/server/AxisAlignedBB; of
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/AxisAlignedBB; expandTowards
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;)Z intersects
	a ([DLnet/minecraft/server/EnumDirection;DDDDDDDDLnet/minecraft/server/EnumDirection;DDD)Lnet/minecraft/server/EnumDirection; clipPoint
	b ()D getXsize
	b (D)Lnet/minecraft/server/AxisAlignedBB; setMinY
	b (DDD)Lnet/minecraft/server/AxisAlignedBB; expandTowards
	b (Lnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/AxisAlignedBB; minmax
	b (Lnet/minecraft/server/AxisAlignedBB;D)D clipYCollide
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)D max
	b (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/AxisAlignedBB; move
	b (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;)Ljava/util/Optional; clip
	c ()D getYsize
	c (D)Lnet/minecraft/server/AxisAlignedBB; setMinZ
	c (Lnet/minecraft/server/AxisAlignedBB;)Z intersects
	c (Lnet/minecraft/server/AxisAlignedBB;D)D clipZCollide
	c (Lnet/minecraft/server/Vec3D;)Z contains
	d ()D getZsize
	d (D)Lnet/minecraft/server/AxisAlignedBB; setMaxX
	d (DDD)Lnet/minecraft/server/AxisAlignedBB; move
	e ()Z hasNaN
	e (D)Lnet/minecraft/server/AxisAlignedBB; setMaxY
	e (DDD)Z contains
	f ()Lnet/minecraft/server/Vec3D; getCenter
	f (D)Lnet/minecraft/server/AxisAlignedBB; setMaxZ
	f (DDD)Lnet/minecraft/server/AxisAlignedBB; deflate
	g (D)Lnet/minecraft/server/AxisAlignedBB; inflate
	grow (DDD)Lnet/minecraft/server/AxisAlignedBB; inflate
	shrink (D)Lnet/minecraft/server/AxisAlignedBB; deflate
djz$a net/minecraft/client/multiplayer/ClientAdvancements$Listener
	a (Lnet/minecraft/server/Advancement;Lnet/minecraft/server/AdvancementProgress;)V onUpdateAdvancementProgress
	e (Lnet/minecraft/server/Advancement;)V onSelectedTabChanged
net/minecraft/server/BehaviorLook net/minecraft/world/entity/ai/behavior/LookAtTargetSink
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BehaviorPosition;)V lambda$tick$1
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)Z canStillUse
	b (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BehaviorPosition;)Z lambda$canStillUse$0
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
cp$a net/minecraft/commands/arguments/MessageArgument$Message
	a text
	b parts
	a ()Ljava/lang/String; getText
	a (Lcom/mojang/brigadier/StringReader;Z)Lcp$a; parseText
	a (Lnet/minecraft/server/CommandListenerWrapper;Z)Lnet/minecraft/server/IChatBaseComponent; toComponent
	b ()[Lcp$b; getParts
cp$b net/minecraft/commands/arguments/MessageArgument$Part
	a start
	b end
	c selector
	a ()I getStart
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/IChatBaseComponent; toComponent
	b ()I getEnd
	c ()Lnet/minecraft/server/EntitySelector; getSelector
bew$a net/minecraft/world/item/crafting/ShapedRecipe$Serializer
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/ShapedRecipes;)V toNetwork
	b (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ShapedRecipes; fromJson
	b (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ShapedRecipes; fromNetwork
net/minecraft/server/WorldGenFeatureHayPile net/minecraft/world/level/levelgen/feature/HayBlockPileFeature
	a (Lnet/minecraft/server/GeneratorAccess;)Lnet/minecraft/server/IBlockData; getBlockState
net/minecraft/server/PathfinderGoalFleeSun net/minecraft/world/entity/ai/goal/FleeSunGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f level
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	g ()Z setWantedPos
	h ()Lnet/minecraft/server/Vec3D; getHidePos
net/minecraft/server/EntityMushroomCow$Type net/minecraft/world/entity/animal/MushroomCow$MushroomType
	c type
	d blockState
	e $VALUES
	a ()Lnet/minecraft/server/IBlockData; getBlockState
	a (Ljava/lang/String;)Lnet/minecraft/server/EntityMushroomCow$Type; access$200
	a (Lnet/minecraft/server/EntityMushroomCow$Type;)Ljava/lang/String; access$000
	b (Ljava/lang/String;)Lnet/minecraft/server/EntityMushroomCow$Type; byType
	b (Lnet/minecraft/server/EntityMushroomCow$Type;)Lnet/minecraft/server/IBlockData; access$100
net/minecraft/server/EntityDamageSource net/minecraft/world/damagesource/EntityDamageSource
	x entity
	y isThorns
	s ()Z scalesWithDifficulty
	w ()Lnet/minecraft/server/Vec3D; getSourcePosition
	x ()Lnet/minecraft/server/EntityDamageSource; setThorns
	y ()Z isThorns
net/minecraft/server/CommandBossBar net/minecraft/server/commands/BossBarCommands
	a SUGGEST_BOSS_BAR
	b ERROR_ALREADY_EXISTS
	c ERROR_DOESNT_EXIST
	d ERROR_NO_PLAYER_CHANGE
	e ERROR_NO_NAME_CHANGE
	f ERROR_NO_COLOR_CHANGE
	g ERROR_NO_STYLE_CHANGE
	h ERROR_NO_VALUE_CHANGE
	i ERROR_NO_MAX_CHANGE
	j ERROR_ALREADY_HIDDEN
	k ERROR_ALREADY_VISIBLE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/BossBattleCustom; getBossBar
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$2
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listBars
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;)I getValue
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;I)I setValue
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;Ljava/util/Collection;)I setPlayers
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;Lnet/minecraft/server/BossBattle$BarColor;)I setColor
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;Lnet/minecraft/server/BossBattle$BarStyle;)I setStyle
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;Lnet/minecraft/server/IChatBaseComponent;)I setName
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;Z)I setVisible
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IChatBaseComponent;)I createBar
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$28
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	b (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$3
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;)I getMax
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;I)I setMax
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$27
	c (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;)I getVisible
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$26
	d (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;)I getPlayers
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$25
	e (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;)I removeBar
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$24
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$23
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$22
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$21
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	r (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	s (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	t (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	u (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	v (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	w (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	x (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	y (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	z (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
zb$a net/minecraft/tags/BlockTags$Wrapper
	a check
	b actual
	a ()Ljava/util/Collection; getValues
	a (Ljava/lang/Object;)Z contains
	a (Lnet/minecraft/server/Block;)Z contains
	b ()Ljava/util/Collection; getSource
net/minecraft/server/EnchantmentKnockback net/minecraft/world/item/enchantment/KnockbackEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/WorldGenMonumentPieces net/minecraft/world/level/levelgen/structure/OceanMonumentPieces
net/minecraft/server/EnumPistonReaction net/minecraft/world/level/material/PushReaction
	f $VALUES
net/minecraft/server/VoxelShapeArray net/minecraft/world/phys/shapes/ArrayVoxelShape
	b xs
	c ys
	d zs
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
net/minecraft/server/BlockPiston net/minecraft/world/level/block/piston/PistonBaseBlock
	c EAST_AABB
	d WEST_AABB
	e SOUTH_AABB
	f NORTH_AABB
	g UP_AABB
	h DOWN_AABB
	sticky isSticky
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;ZLnet/minecraft/server/EnumDirection;)Z isPushable
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z getNeighborSignal
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Z)Z moveBlocks
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V checkIfExtend
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isViewBlocking
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
	n (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
csz$a net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer
net/minecraft/server/ArgumentTile net/minecraft/commands/arguments/blocks/BlockStateArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/ArgumentTile; block
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ArgumentTileLocation; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ArgumentTileLocation; getBlock
net/minecraft/server/BlockWorkbench net/minecraft/world/level/block/CraftingTableBlock
	a CONTAINER_TITLE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$getMenuProvider$0
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
net/minecraft/server/JsonListEntry net/minecraft/server/players/StoredUserEntry
	a user
	a (Lcom/google/gson/JsonObject;)V serialize
	getKey ()Ljava/lang/Object; getUser
net/minecraft/server/DragonControllerHover net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase
	b targetLocation
	a ()Z isSitting
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
net/minecraft/server/GenLayerMushroomIsland net/minecraft/world/level/newbiome/layer/AddMushroomIslandLayer
	b MUSHROOM_FIELDS
	c $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/BlockFluids net/minecraft/world/level/block/LiquidBlock
	b fluid
	c stateCache
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z shouldSpreadLiquid
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/FluidType; takeLiquid
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
bxf$a net/minecraft/world/level/border/WorldBorder$BorderExtent
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lbxe; getStatus
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Lbxf$a; update
	m ()Lnet/minecraft/server/VoxelShape; getCollisionShape
azj$2 net/minecraft/world/inventory/LoomMenu$2
	a this$0
	e ()V setChanged
azj$1 net/minecraft/world/inventory/LoomMenu$1
	a this$0
	e ()V setChanged
net/minecraft/server/WorldGenFeatureEndSpikeConfiguration net/minecraft/world/level/levelgen/feature/SpikeConfiguration
	a crystalInvulnerable
	b spikes
	c crystalBeamTarget
	a ()Z isCrystalInvulnerable
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureEndSpikeConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/WorldGenEnder$Spike;)Ljava/lang/Object; lambda$serialize$0
	b ()Ljava/util/List; getSpikes
	b (Lcom/mojang/datafixers/Dynamic;)Ljava/lang/Integer; lambda$deserialize$1
	c ()Lnet/minecraft/server/BlockPosition; getCrystalBeamTarget
net/minecraft/server/CommandSchedule net/minecraft/server/commands/ScheduleCommand
	a ERROR_SAME_TICK
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;JILnet/minecraft/server/CustomFunction;)V lambda$schedule$2
	a (Lnet/minecraft/server/CommandListenerWrapper;JILnet/minecraft/server/Tag;)V lambda$schedule$3
	a (Lnet/minecraft/server/CommandListenerWrapper;Lcom/mojang/datafixers/util/Either;I)I schedule
bxf$c net/minecraft/world/level/border/WorldBorder$StaticBorderExtent
	a this$0
	b size
	c minX
	d minZ
	e maxX
	f maxZ
	g shape
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lbxe; getStatus
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Lbxf$a; update
	m ()Lnet/minecraft/server/VoxelShape; getCollisionShape
	n ()V updateBox
bxf$b net/minecraft/world/level/border/WorldBorder$MovingBorderExtent
	a this$0
	b from
	c to
	d lerpEnd
	e lerpBegin
	f lerpDuration
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lbxe; getStatus
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Lbxf$a; update
	m ()Lnet/minecraft/server/VoxelShape; getCollisionShape
net/minecraft/server/ChunkConverterPalette$Direction$Axis net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis
	d $VALUES
dlp$b net/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration
dlp$a net/minecraft/client/particle/ParticleEngine$MutableSpriteSet
	a this$0
	b sprites
	a (II)Ldxb; get
	a (Ljava/util/List;)V rebind
	a (Ljava/util/Random;)Ldxb; get
net/minecraft/server/EntityHuman$EnumBedResult net/minecraft/world/entity/player/Player$BedSleepingProblem
	g message
	h $VALUES
	a ()Lnet/minecraft/server/IChatBaseComponent; getMessage
uv$a$1 net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure$1
net/minecraft/server/BlockGlassAbstract net/minecraft/world/level/block/AbstractGlassBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isViewBlocking
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
acx$1 net/minecraft/util/datafix/fixes/ItemRenameFix$1
	a val$fixItem
	a (Ljava/lang/String;)Ljava/lang/String; fixItem
net/minecraft/server/WorldGenBuriedTreasureConfiguration net/minecraft/world/level/levelgen/feature/BuriedTreasureConfiguration
	a probability
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenBuriedTreasureConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
azj$6 net/minecraft/world/inventory/LoomMenu$6
	a val$access
	b this$0
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$onTake$0
azj$5 net/minecraft/world/inventory/LoomMenu$5
	a this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
azj$4 net/minecraft/world/inventory/LoomMenu$4
	a this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
cow$a net/minecraft/world/level/storage/loot/ConstantIntValue$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootValueConstant; deserialize
	a (Lnet/minecraft/server/LootValueConstant;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
azj$3 net/minecraft/world/inventory/LoomMenu$3
	a this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
net/minecraft/server/DataConverterVBO net/minecraft/util/datafix/fixes/OptionsForceVBOFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
net/minecraft/server/ScoreboardTeamBase$EnumTeamPush net/minecraft/world/scores/Team$CollisionRule
	e name
	f id
	g BY_NAME
	h $VALUES
	a ()[Ljava/lang/String; getAllNames
	a (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeamBase$EnumTeamPush; byName
	a (Lnet/minecraft/server/ScoreboardTeamBase$EnumTeamPush;)Lnet/minecraft/server/ScoreboardTeamBase$EnumTeamPush; lambda$static$1
	b ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	b (Lnet/minecraft/server/ScoreboardTeamBase$EnumTeamPush;)Ljava/lang/String; lambda$static$0
net/minecraft/server/BlockPosition net/minecraft/core/BlockPos
	b LOGGER
	c PACKED_X_LENGTH
	d PACKED_Z_LENGTH
	f PACKED_Y_LENGTH
	g PACKED_X_MASK
	h PACKED_Y_MASK
	i PACKED_Z_MASK
	j Z_OFFSET
	k X_OFFSET
	a (DDD)Lnet/minecraft/server/BlockPosition; offset
	a (I)Lnet/minecraft/server/BlockPosition; multiply
	a (III)J asLong
	a (IIIIII)Ljava/util/stream/Stream; betweenClosedStream
	a (J)Z isOutsideBuildHeight
	a (JIII)J offset
	a (JLnet/minecraft/server/EnumDirection;)J offset
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/BlockPosition; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition; offset
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Ljava/lang/Iterable; betweenClosed
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; rotate
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/BlockPosition; relative
	a ([II)V lambda$deserialize$2
	b (DDD)Lnet/minecraft/server/BaseBlockPosition; offset
	b (III)Lnet/minecraft/server/BlockPosition; offset
	b (IIIIII)Ljava/lang/Iterable; betweenClosed
	b (J)I getX
	b (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition; subtract
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; betweenClosedStream
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/BaseBlockPosition; relative
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BaseBlockPosition; relative
	b (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BaseBlockPosition; relative
	b ([II)V lambda$deserialize$1
	c (III)Lnet/minecraft/server/BaseBlockPosition; offset
	c (IIIIII)Ljava/util/Iterator; lambda$betweenClosed$3
	c (J)I getY
	c (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition; cross
	c ([II)V lambda$deserialize$0
	d (J)I getZ
	d (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; cross
	down ()Lnet/minecraft/server/BlockPosition; below
	down (I)Lnet/minecraft/server/BlockPosition; below
	e (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; subtract
	f (J)J getFlatIndex
	f (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; offset
	fromLong (J)Lnet/minecraft/server/BlockPosition; of
	h (I)Lnet/minecraft/server/BaseBlockPosition; east
	i ()Lnet/minecraft/server/BaseBlockPosition; east
	i (I)Lnet/minecraft/server/BaseBlockPosition; west
	immutableCopy ()Lnet/minecraft/server/BlockPosition; immutable
	j ()Lnet/minecraft/server/BaseBlockPosition; west
	j (I)Lnet/minecraft/server/BaseBlockPosition; south
	k ()Lnet/minecraft/server/BaseBlockPosition; south
	k (I)Lnet/minecraft/server/BaseBlockPosition; north
	l ()Lnet/minecraft/server/BaseBlockPosition; north
	l (I)Lnet/minecraft/server/BaseBlockPosition; below
	m ()Lnet/minecraft/server/BaseBlockPosition; below
	m (I)Lnet/minecraft/server/BaseBlockPosition; above
	n ()Lnet/minecraft/server/BaseBlockPosition; above
	n (I)Lnet/minecraft/server/BaseBlockPosition; multiply
	shift (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPosition; relative
	shift (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BlockPosition; relative
	up ()Lnet/minecraft/server/BlockPosition; above
	up (I)Lnet/minecraft/server/BlockPosition; above
xm$a net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory
cyc$2 net/minecraft/client/Minecraft$2
	a $SwitchMap$net$minecraft$world$phys$HitResult$Type
	b $SwitchMap$net$minecraft$world$entity$vehicle$AbstractMinecart$Type
net/minecraft/server/ResourceManager net/minecraft/server/packs/resources/SimpleReloadableResourceManager
	a LOGGER
	b namespacedPacks
	c listeners
	d recentlyRegistered
	e namespaces
	f type
	g mainThread
	a ()Ljava/util/Set; getNamespaces
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; listResources
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture; reload
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/IReloadable; createQueuedReload
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/IReloadable; createFullReload
	a (Lnet/minecraft/server/IReloadListener;)V registerReloadListener
	a (Lnet/minecraft/server/IResourcePack;)V add
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/IResource; getResource
	b ()V clear
	b (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/IReloadable; createReload
	b (Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Lnet/minecraft/server/MinecraftKey;)Ljava/util/List; getResources
cyc$1 net/minecraft/client/Minecraft$1
	a this$0
bqj$1 net/minecraft/world/level/block/NetherPortalBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	b $SwitchMap$net$minecraft$world$level$block$Rotation
net/minecraft/server/DragonControllerPhase net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase
	HOVER HOVERING
	l phases
	m instanceClass
	n id
	o name
	a ()Ljava/lang/reflect/Constructor; getConstructor
	a (Ljava/lang/Class;Ljava/lang/String;)Lnet/minecraft/server/DragonControllerPhase; create
	a (Lnet/minecraft/server/EntityEnderDragon;)Lnet/minecraft/server/IDragonController; createInstance
	b ()I getId
	c ()I getCount
net/minecraft/server/BlockCampfire net/minecraft/world/level/block/CampfireBlock
	a SHAPE
	b LIT
	c SIGNAL_FIRE
	d WATERLOGGED
	e FACING
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;)I getLightEmission
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ZZ)V makeParticles
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/Entity;)V onProjectileHit
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	j (Lnet/minecraft/server/IBlockData;)Z isSmokeSource
net/minecraft/server/Paintings net/minecraft/world/entity/decoration/Motive
	A width
	B height
	a KEBAB
	b AZTEC
	c ALBAN
	d AZTEC2
	e BOMB
	f PLANT
	g WASTELAND
	h POOL
	i COURBET
	j SEA
	k SUNSET
	l CREEBET
	m WANDERER
	n GRAHAM
	o MATCH
	p BUST
	q STAGE
	r VOID
	s SKULL_AND_ROSES
	t WITHER
	u FIGHTERS
	v POINTER
	w PIGSCENE
	x BURNING_SKULL
	y SKELETON
	z DONKEY_KONG
	a (Ljava/lang/String;II)Lnet/minecraft/server/Paintings; register
net/minecraft/server/ParticleParamItem net/minecraft/core/particles/ItemParticleOption
	a DESERIALIZER
	b type
	c itemStack
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/server/Particle; getType
	c ()Lnet/minecraft/server/ItemStack; getItem
gc$1 net/minecraft/core/particles/BlockParticleOption$1
	a (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParamBlock; fromCommand
	a (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParamBlock; fromNetwork
	b (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParam; fromCommand
	b (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParam; fromNetwork
net/minecraft/server/CriterionConditionEntity net/minecraft/advancements/critereon/EntityPredicate
	a ANY
	b ANY_ARRAY
	c entityType
	d distanceToPlayer
	e location
	f effects
	g nbt
	h flags
	i equipment
	j catType
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionEntity; fromJson
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;)Z matches
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;)Z matches
	a ([Lnet/minecraft/server/CriterionConditionEntity;)Lcom/google/gson/JsonElement; serializeArrayToJson
	b (Lcom/google/gson/JsonElement;)[Lnet/minecraft/server/CriterionConditionEntity; fromJsonArray
net/minecraft/server/CustomFunctionCallback net/minecraft/world/level/timers/FunctionCallback
	a functionId
	a (Ljava/lang/Object;Lnet/minecraft/server/CustomFunctionCallbackTimerQueue;J)V handle
	a (Lnet/minecraft/server/CustomFunctionCallback;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lnet/minecraft/server/CustomFunctionData;Lnet/minecraft/server/CustomFunction;)V lambda$handle$0
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/CustomFunctionCallbackTimerQueue;J)V handle
cim$a net/minecraft/world/level/levelgen/structure/OceanRuinFeature$OceanRuinStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
net/minecraft/server/BehaviorVillageHeroGift net/minecraft/world/entity/ai/behavior/GiveGiftToHero
	a gifts
	b timeUntilNextGift
	c giftGivenDuringThisRun
	d timeSinceStart
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Lnet/minecraft/server/EntityHuman;)Z isHero
	a (Lnet/minecraft/server/EntityVillager;)Ljava/util/List; getItemToThrow
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityHuman;)Z isWithinThrowingDistance
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityLiving;)V throwGift
	a (Lnet/minecraft/server/WorldServer;)I calculateTimeUntilNextGift
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	b (Lnet/minecraft/server/EntityVillager;)Z isHeroVisible
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	c (Lnet/minecraft/server/EntityVillager;)Ljava/util/Optional; getNearestTargetableHero
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
bm$a net/minecraft/advancements/critereon/PlacedBlockTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ItemStack;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
bm$b net/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance
	a block
	b state
	c location
	d item
	a (Lnet/minecraft/server/Block;)Lbm$b; placedBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ItemStack;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/server/NBTReadLimiter net/minecraft/nbt/NbtAccounter
	a UNLIMITED
	b quota
	c usage
	a (J)V accountBits
net/minecraft/server/ItemHorseArmorDyeable net/minecraft/world/item/DyeableHorseArmorItem
net/minecraft/server/EnchantmentMending net/minecraft/world/item/enchantment/MendingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
bpx$1 net/minecraft/world/level/block/LecternBlock$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/PacketPlayInAbilities net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket
	a invulnerable
	b isFlying
	c canFly
	d instabuild
	e flyingSpeed
	f walkingSpeed
	a (F)V setFlyingSpeed
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	a (Z)V setInvulnerable
	b ()Z isInvulnerable
	b (F)V setWalkingSpeed
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	b (Z)V setFlying
	c (Z)V setCanFly
	d ()Z canFly
	d (Z)V setInstabuild
	e ()Z canInstabuild
	f ()F getFlyingSpeed
	g ()F getWalkingSpeed
dqw$a net/minecraft/client/renderer/debug/VillageDebugRenderer$BrainDump
	a uuid
	b id
	c name
	d profession
	e xp
	f pos
	g inventory
	h path
	i wantsGolem
	j activities
	k behaviors
	l memories
	m gossips
	n pois
	a ()Ljava/util/UUID; getUuid
	a (Ldqw$a;Lnet/minecraft/server/BlockPosition;)Z access$000
	a (Lnet/minecraft/server/BlockPosition;)Z hasPoi
net/minecraft/server/SoundCategory net/minecraft/sounds/SoundSource
	k BY_NAME
	l name
	m $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/SoundCategory; byName
	b ()Ljava/util/Set; getNames
net/minecraft/server/BlockStainedGlass net/minecraft/world/level/block/StainedGlassBlock
	a ()Lnet/minecraft/server/EnumColor; getColor
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
net/minecraft/server/PacketPlayOutBlockChange net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket
	a pos
	block blockState
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/IBlockData; getBlockState
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/BlockPosition; getPos
xm$1 net/minecraft/server/packs/resources/SimpleReloadInstance$1
	a val$mainThreadExecutor
	b val$listener
	c val$previousTask
	d this$0
	a (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; wait
	a (Ljava/lang/Object;Lnet/minecraft/server/Unit;Ljava/lang/Object;)Ljava/lang/Object; lambda$wait$1
	a (Lnet/minecraft/server/IReloadListener;)V lambda$wait$0
net/minecraft/server/BlockJukeBox net/minecraft/world/level/block/JukeboxBlock
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/ItemStack;)V setRecord
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	dropRecord (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V dropRecording
net/minecraft/server/CommandClone$CommandCloneStoredTileEntity net/minecraft/server/commands/CloneCommands$CloneBlockInfo
	a pos
	b state
	c tag
net/minecraft/server/Area net/minecraft/world/level/newbiome/area/Area
	a (II)I get
dqw$b net/minecraft/client/renderer/debug/VillageDebugRenderer$PoiInfo
	a pos
	b type
	c freeTicketCount
net/minecraft/server/PacketPlayOutEntityTeleport net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket
	a id
	b x
	c y
	d z
	e yRot
	f xRot
	g onGround
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()B getyRot
	g ()B getxRot
	h ()Z isOnGround
net/minecraft/server/IRangedEntity net/minecraft/world/entity/monster/RangedAttackMob
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
cpz$e net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionCopyNBT; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionCopyNBT;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
aj$b net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance
	a item
	a (Lnet/minecraft/server/CriterionConditionItem;)Laj$b; usedItem
	a (Lnet/minecraft/server/IMaterial;)Laj$b; usedItem
	a (Lnet/minecraft/server/ItemStack;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Laj$b; usedItem
net/minecraft/server/WorldGenFeatureIgloo net/minecraft/world/level/levelgen/feature/IglooFeature
	a ()Lceu$a; getStartFactory
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	d ()I getRandomSalt
aj$a net/minecraft/advancements/critereon/ConsumeItemTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/ItemStack;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
net/minecraft/server/ProjectileHelper net/minecraft/world/entity/projectile/ProjectileUtil
	a (Lnet/minecraft/server/Entity;)Ljava/util/Set; getIgnoredEntities
	a (Lnet/minecraft/server/Entity;F)V rotateTowardsMovement
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;Lnet/minecraft/server/RayTrace$BlockCollisionOption;Z)Lnet/minecraft/server/MovingObjectPosition; getHitResult
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;D)Lnet/minecraft/server/MovingObjectPositionEntity; getEntityHitResult
	a (Lnet/minecraft/server/Entity;ZZLnet/minecraft/server/Entity;Lnet/minecraft/server/RayTrace$BlockCollisionOption;)Lnet/minecraft/server/MovingObjectPosition; forwardsRaycast
	a (Lnet/minecraft/server/Entity;ZZLnet/minecraft/server/Entity;Lnet/minecraft/server/RayTrace$BlockCollisionOption;ZLjava/util/function/Predicate;Lnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/MovingObjectPosition; forwardsRaycast
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Item;)Lnet/minecraft/server/EnumHand; getWeaponHoldingHand
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityArrow; getMobArrow
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Lnet/minecraft/server/MovingObjectPositionEntity; getHitResult
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;D)Lnet/minecraft/server/MovingObjectPositionEntity; getHitResult
	a (ZLnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)Z lambda$forwardsRaycast$0
cpz$b net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation
	a sourcePathText
	b sourcePath
	c targetPathText
	d targetPath
	e op
	a ()Lcom/google/gson/JsonObject; toJson
	a (Lcom/google/gson/JsonObject;)Lcpz$b; fromJson
	a (Ljava/util/function/Supplier;Lnet/minecraft/server/NBTBase;)V apply
cpz$a net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder
	a source
	b ops
	a ()Lcpz$a; getThis
	a (Ljava/lang/String;Ljava/lang/String;)Lcpz$a; copy
	a (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/LootItemFunctionCopyNBT$Action;)Lcpz$a; copy
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcqg$a; getThis
net/minecraft/server/EnderDragonBattle net/minecraft/world/level/dimension/end/EndDragonFight
	a LOGGER
	b VALID_PLAYER
	bossBattle dragonEvent
	d level
	e gateways
	f exitPortalPattern
	g ticksSinceDragonSeen
	h crystalsAlive
	i ticksSinceCrystalsScanned
	j ticksSinceLastPlayerScan
	k dragonKilled
	l previouslyKilled
	m dragonUUID
	n needsStateScanning
	o portalLocation
	p respawnStage
	q respawnTime
	r respawnCrystals
	a ()Lnet/minecraft/server/NBTTagCompound; saveData
	a (Ljava/util/List;)V respawnDragon
	a (Lnet/minecraft/server/BlockPosition;)V spawnNewGateway
	a (Lnet/minecraft/server/EntityEnderCrystal;Lnet/minecraft/server/DamageSource;)V onCrystalDestroyed
	a (Lnet/minecraft/server/EntityEnderDragon;)V setDragonKilled
	a (Lnet/minecraft/server/EnumDragonRespawn;)V setRespawnStage
	a (Z)V spawnExitPortal
	b ()V tick
	b (Lnet/minecraft/server/EntityEnderDragon;)V updateDragon
	c ()I getCrystalsAlive
	d ()Z hasPreviouslyKilledDragon
	e ()V tryRespawn
	f ()V resetSpikeCrystals
	g ()V scanState
	h ()V findOrCreateDragon
	i ()Z hasExitPortal
	j ()Lnet/minecraft/server/ShapeDetector$ShapeDetectorCollection; findExitPortal
	k ()Z isArenaLoaded
	l ()V updatePlayers
	m ()V updateCrystalCount
	n ()V spawnNewGateway
	o ()Lnet/minecraft/server/EntityEnderDragon; createNewDragon
net/minecraft/server/CommandIdleTimeout net/minecraft/server/commands/SetPlayerIdleTimeoutCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I setIdleTimeout
net/minecraft/server/WorldProviderHell net/minecraft/world/level/dimension/NetherDimension
	a ()V updateLightRamp
	a (II)Z isFoggyAt
	a (IIZ)Lnet/minecraft/server/BlockPosition; getValidSpawnPosition
	a (JF)F getTimeOfDay
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)Lnet/minecraft/server/BlockPosition; getSpawnPosInChunk
	b (FF)Lnet/minecraft/server/Vec3D; getFogColor
	j ()Lnet/minecraft/server/WorldBorder; createWorldBorder
	m ()Lnet/minecraft/server/ChunkGenerator; createRandomLevelGenerator
	n ()Z isNaturalDimension
	o ()Z mayRespawn
	p ()Lnet/minecraft/server/DimensionManager; getType
net/minecraft/server/CommandSetBlock$Mode net/minecraft/server/commands/SetBlockCommand$Mode
	c $VALUES
net/minecraft/server/PacketPlayInTrSel net/minecraft/network/protocol/game/ServerboundSelectTradePacket
	a item
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getItem
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/RemoteControlCommandListener net/minecraft/server/rcon/RconConsoleSource
	H_ ()Z shouldInformAdmins
	a ()Z acceptsSuccess
	a (Lnet/minecraft/server/IChatBaseComponent;)V sendMessage
	b ()Z acceptsFailure
	clearMessages ()V prepareForCommand
	getMessages ()Ljava/lang/String; getCommandResponse
	getWrapper ()Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
net/minecraft/server/WorldGenFeatureOceanRuinConfiguration net/minecraft/world/level/levelgen/feature/OceanRuinConfiguration
	a biomeTemp
	b largeProbability
	c clusterProbability
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureOceanRuinConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/ItemBook net/minecraft/world/item/BookItem
	c ()I getEnchantmentValue
	g_ (Lnet/minecraft/server/ItemStack;)Z isEnchantable
net/minecraft/server/ContainerChest net/minecraft/world/inventory/ChestMenu
	d containerRows
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; oneRow
	a (ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ContainerChest; threeRows
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; twoRows
	b (ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ContainerChest; sixRows
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	c (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; threeRows
	d (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; fourRows
	e ()Lnet/minecraft/server/IInventory; getContainer
	e (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; fiveRows
	f ()I getRowCount
	f (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; sixRows
net/minecraft/server/BiomeFrozenDeepOcean net/minecraft/world/level/biome/DeepFrozenOceanBiome
	u FROZEN_TEMPERATURE_NOISE
	c (Lnet/minecraft/server/BlockPosition;)F getTemperatureNoCache
net/minecraft/server/WorldGenFeatureBlockPile net/minecraft/world/level/levelgen/feature/BlockPileFeature
	a (Lnet/minecraft/server/GeneratorAccess;)Lnet/minecraft/server/IBlockData; getBlockState
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z mayPlaceOn
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tryPlaceBlock
net/minecraft/server/BlockMycel net/minecraft/world/level/block/MyceliumBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
net/minecraft/server/BlockPosition2D net/minecraft/server/level/ColumnPos
	a x
	b z
	a ()Lnet/minecraft/server/ChunkCoordIntPair; toChunkPos
	a (II)J asLong
	b ()J toLong
net/minecraft/server/WorldGenTreeAbstract net/minecraft/world/level/levelgen/feature/AbstractTreeFeature
	a (Ljava/util/Set;Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/StructureBoundingBox;)V setBlock
	a (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;)Z doPlace
	a (Lnet/minecraft/server/Fluid;)Z lambda$isFluidWater$2
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/IBlockData;)Z lambda$isReplaceablePlant$8
	a (Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V setBlock
	a (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isFree
	a (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;)V setDirtAt
	a (Lve;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V simulate
	b (Lnet/minecraft/server/IBlockData;)Z lambda$isGrassOrDirtOrFarmland$7
	b (Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V setBlockKnownShape
	b (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isAir
	c (Lnet/minecraft/server/IBlockData;)Z lambda$isGrassOrDirt$6
	c (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isDirt
	d (Lnet/minecraft/server/IBlockData;)Z lambda$isAirOrLeaves$5
	d (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isFluidWater
	e (Lnet/minecraft/server/IBlockData;)Z lambda$isLeaves$4
	e (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isBlockWater
	f (Lnet/minecraft/server/IBlockData;)Z lambda$isBlockWater$3
	f (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isLeaves
	g (Lnet/minecraft/server/IBlockData;)Z lambda$isDirt$1
	g (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isAirOrLeaves
	h (Lnet/minecraft/server/IBlockData;)Z lambda$isFree$0
	h (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isGrassOrDirt
	i (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isGrassOrDirtOrFarmland
	j (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isReplaceablePlant
net/minecraft/server/BlockChest$ChestFinder net/minecraft/world/level/block/ChestBlock$ChestSearchCallback
	b (Lnet/minecraft/server/TileEntityChest;)Ljava/lang/Object; acceptSingle
	b (Lnet/minecraft/server/TileEntityChest;Lnet/minecraft/server/TileEntityChest;)Ljava/lang/Object; acceptDouble
net/minecraft/server/TileEntityBed net/minecraft/world/level/block/entity/BedBlockEntity
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Lnet/minecraft/server/EnumColor;)V setColor
	d ()Lnet/minecraft/server/EnumColor; getColor
net/minecraft/server/WorldGenBuriedTreasurePieces net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPrison net/minecraft/world/level/levelgen/structure/StrongholdPieces$PrisonHall
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPrison; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
bxf$1 net/minecraft/world/level/border/WorldBorder$1
avf$b net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal
	b this$0
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
dmb$a net/minecraft/client/particle/SquidInkParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/BlockPropertyBellAttach net/minecraft/world/level/block/state/properties/BellAttachType
	e name
	f $VALUES
	m ()Ljava/lang/String; getSerializedName
dlp$1 net/minecraft/client/particle/ParticleEngine$1
net/minecraft/server/GenLayerRegionHills net/minecraft/world/level/newbiome/layer/RegionHillsLayer
	A SNOWY_TAIGA_HILLS
	B TAIGA_HILLS
	C $VALUES
	b LOGGER
	c BIRCH_FOREST
	d BIRCH_FOREST_HILLS
	e DESERT
	f DESERT_HILLS
	g MOUNTAINS
	h WOODED_MOUNTAINS
	i FOREST
	j WOODED_HILLS
	k SNOWY_TUNDRA
	l SNOWY_MOUNTAIN
	m JUNGLE
	n JUNGLE_HILLS
	o BAMBOO_JUNGLE
	p BAMBOO_JUNGLE_HILLS
	q BADLANDS
	r WOODED_BADLANDS_PLATEAU
	s PLAINS
	t GIANT_TREE_TAIGA
	u GIANT_TREE_TAIGA_HILLS
	v DARK_FOREST
	w SAVANNA
	x SAVANNA_PLATEAU
	y TAIGA
	z SNOWY_TAIGA
	a (Lnet/minecraft/server/WorldGenContext;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;II)I applyPixel
net/minecraft/server/RecipeBookServer net/minecraft/stats/ServerRecipeBook
	k LOGGER
	l manager
	a (Ljava/util/Collection;Lnet/minecraft/server/EntityPlayer;)I addRecipes
	a (Lnet/minecraft/server/EntityPlayer;)V sendInitialRecipeBook
	a (Lnet/minecraft/server/NBTTagCompound;)V fromNbt
	a (Lnet/minecraft/server/NBTTagList;Ljava/util/function/Consumer;)V loadRecipes
	a (Lnet/minecraft/server/PacketPlayOutRecipes$Action;Lnet/minecraft/server/EntityPlayer;Ljava/util/List;)V sendRecipes
	b (Ljava/util/Collection;Lnet/minecraft/server/EntityPlayer;)I removeRecipes
	save ()Lnet/minecraft/server/NBTTagCompound; toNbt
net/minecraft/server/PacketPrepender net/minecraft/network/Varint21LengthFieldPrepender
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/server/IProjectile net/minecraft/world/entity/projectile/Projectile
	a (Lnet/minecraft/server/Entity;FFFFF)V shootFromRotation
net/minecraft/server/BlockKelpPlant net/minecraft/world/level/block/KelpPlantBlock
	a top
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/CommandSaveAll net/minecraft/server/commands/SaveAllCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Z)I saveAll
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
avf$c net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal
	b attackWarmupDelay
	c nextAttackTickCount
	d this$0
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
	m ()I getCastWarmupTime
net/minecraft/server/PacketPlayInSettings net/minecraft/network/protocol/game/ServerboundClientInformationPacket
	a language
	c chatVisibility
	d chatColors
	e modelCustomisation
	f mainHand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Ljava/lang/String; getLanguage
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getViewDistance
	d ()Lnet/minecraft/server/EnumChatVisibility; getChatVisibility
	e ()Z getChatColors
	f ()I getModelCustomisation
net/minecraft/server/PacketPlayOutCommands net/minecraft/network/protocol/game/ClientboundCommandsPacket
	a root
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;B)Lcom/mojang/brigadier/builder/ArgumentBuilder; createBuilder
	a (Lnet/minecraft/server/PacketDataSerializer;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Map;)V writeNode
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lcom/mojang/brigadier/tree/RootCommandNode; getRoot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c (Lnet/minecraft/server/PacketDataSerializer;)Lky$a; readNode
net/minecraft/server/EntityGhast$PathfinderGoalGhastAttackTarget net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal
	a chargeTime
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/BlockGrass net/minecraft/world/level/block/GrassBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	b (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	f (Lnet/minecraft/server/IBlockData;)Z canOcclude
net/minecraft/server/DataConverterShulker net/minecraft/util/datafix/fixes/EntityShulkerColorFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
aut$a net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal
	a mob
	b speedModifier
	c leaderSpeedModifier
	a ()Z canUse
	a (Lnet/minecraft/server/EntityMonsterPatrolling;)Z lambda$tick$0
	c ()V start
	d ()V stop
	e ()V tick
	g ()V moveRandomly
dmb$1 net/minecraft/client/particle/SquidInkParticle$1
net/minecraft/server/EntityTrackerEntry net/minecraft/server/level/ServerEntity
	a LOGGER
	b level
	d updateInterval
	e trackDelta
	f broadcast
	headYaw yHeadRotp
	m ap
	n tickCount
	o teleportDelay
	p lastPassengers
	q wasRiding
	r wasOnGround
	tracker entity
	xLoc xp
	xRot xRotp
	yLoc yp
	yRot yRotp
	zLoc zp
	a ()V sendChanges
	a (Ljava/util/function/Consumer;)V sendPairingData
	a (Lnet/minecraft/server/EntityPlayer;)V removePairing
	b ()Lnet/minecraft/server/Vec3D; sentPos
	b (Lnet/minecraft/server/EntityPlayer;)V addPairing
	broadcastIncludingSelf (Lnet/minecraft/server/Packet;)V broadcastAndSend
	c ()V sendDirtyEntityData
	d ()V updateSentPos
net/minecraft/server/ServerStatisticManager net/minecraft/stats/ServerStatsCounter
	b LOGGER
	c server
	d file
	e dirty
	f lastStatRequest
	a ()V save
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/NBTTagCompound; fromJson
	a (Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V parseLocal
	a (Ljava/lang/String;)V lambda$parseLocal$3
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Statistic;I)V setValue
	a (Lnet/minecraft/server/EntityPlayer;)V sendStats
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;Lnet/minecraft/server/Statistic;)V lambda$null$0
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;Lnet/minecraft/server/StatisticWrapper;)V lambda$parseLocal$2
	a (Lnet/minecraft/server/StatisticWrapper;)Lcom/google/gson/JsonObject; lambda$toJson$4
	a (Lnet/minecraft/server/StatisticWrapper;Ljava/lang/String;)Ljava/util/Optional; getStat
	b ()Ljava/lang/String; toJson
	b (Ljava/lang/String;)V lambda$null$1
	b (Lnet/minecraft/server/Statistic;)Lnet/minecraft/server/MinecraftKey; getKey
	c ()V markAllDirty
	d ()Ljava/util/Set; getDirty
cle$1 net/minecraft/world/level/lighting/SkyLightSectionStorage$1
	a $SwitchMap$net$minecraft$core$Direction
agb$1 net/minecraft/util/datafix/schemas/V705$1
doh$a net/minecraft/client/renderer/block/model/FaceBakery$Rotation
	a (FFFF)Ldod; apply
	a (Ldod;)Ldod; recompute
cwe$1 com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen$1
	a this$0
net/minecraft/server/CommandDataAccessor net/minecraft/server/commands/data/DataAccessor
	a ()Lnet/minecraft/server/NBTTagCompound; getData
	a (Lcr$h;DI)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/server/NBTTagCompound;)V setData
	b ()Lnet/minecraft/server/IChatBaseComponent; getModifiedSuccess
cwe$2 com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen$2
	a this$0
net/minecraft/server/SlotMerchantResult net/minecraft/world/inventory/MerchantResultSlot
	a slots
	b player
	g removeCount
	h merchant
	a (I)Lnet/minecraft/server/ItemStack; remove
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/ItemStack;I)V onQuickCraft
	c (Lnet/minecraft/server/ItemStack;)V checkTakeAchievements
net/minecraft/server/AreaLazy net/minecraft/world/level/newbiome/area/LazyArea
	a transformer
	b cache
	c maxCache
	a ()I getMaxCache
	a (II)I get
net/minecraft/server/EntityPillager net/minecraft/world/entity/monster/Pillager
	b IS_CHARGING_CROSSBOW
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	I ()Z requiresCustomPersistence
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityItem;)V pickUpItem
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IProjectile;F)V shootProjectile
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/Vec3D;F)Lnet/minecraft/server/Vector3fa; getProjectileShotVector
	a (Z)V setChargingCrossbow
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (Lnet/minecraft/server/Item;)Z wantsItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (D)Z removeWhenFarAway
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	dC ()I getMaxSpawnClusterSize
	dV ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	dW ()Z isChargingCrossbow
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	l ()Laua$a; getArmPose
	n ()V registerGoals
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
	u_ ()V defineSynchedData
axl$d net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal
	a raider
	b speedModifier
	c poiPos
	d visited
	e distanceToPoi
	f stuck
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;)Z hasNotVisited
	a (Lnet/minecraft/server/VillagePlaceType;)Z lambda$hasSuitablePoi$0
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z isValidRaid
	h ()Z hasSuitablePoi
	j ()V updateVisited
axl$c net/minecraft/world/entity/raid/Raider$RaiderCelebration
	a this$0
	b mob
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
axl$b net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal
	a this$0
	b mob
	a ()Z canUse
	e ()V tick
axl$a net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal
	a shoutTargeting
	b this$0
	c mob
	d hostileRadiusSqr
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/ItemFireworks net/minecraft/world/item/FireworkRocketItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbdr;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/PacketPlayInTransaction net/minecraft/network/protocol/game/ServerboundContainerAckPacket
	a containerId
	b uid
	c accepted
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()S getUid
	d ()Z isAccepted
net/minecraft/server/ItemBoat net/minecraft/world/item/BoatItem
	a ENTITY_PREDICATE
	b type
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
bnz$1 net/minecraft/world/level/block/CrossCollisionBlock$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
net/minecraft/server/TickListChunk net/minecraft/world/level/ChunkTickList
	a ticks
	b toId
	a ()I size
	a (J)Lnet/minecraft/server/NBTTagList; save
	a (Ljava/util/stream/Stream;)V addAll
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	a (Lnet/minecraft/server/NBTTagList;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/server/TickListChunk; create
	b ()Ljava/util/stream/Stream; ticks
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
net/minecraft/server/WorldGenStage$Features net/minecraft/world/level/levelgen/GenerationStep$Carving
	c BY_NAME
	d name
	e $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenStage$Features; byName
	a (Lnet/minecraft/server/WorldGenStage$Features;)Lnet/minecraft/server/WorldGenStage$Features; lambda$static$0
net/minecraft/server/MojangStatisticsGenerator net/minecraft/world/Snooper
	a fixedData
	b dynamicData
	c token
	d url
	e populator
	f timer
	g lock
	h startupTime
	i started
	j count
	a ()V start
	a (Ljava/lang/String;Ljava/lang/Object;)V setDynamicData
	a (Lnet/minecraft/server/MojangStatisticsGenerator;)Lnet/minecraft/server/IMojangStatistics; access$000
	a ([ILjava/lang/String;)V lambda$setJvmArgs$0
	b ()V prepare
	b (Ljava/lang/String;Ljava/lang/Object;)V setFixedData
	b (Lnet/minecraft/server/MojangStatisticsGenerator;)Ljava/lang/Object; access$100
	c ()Ljava/util/Map; getValues
	c (Lnet/minecraft/server/MojangStatisticsGenerator;)Ljava/util/Map; access$200
	d ()Z isStarted
	d (Lnet/minecraft/server/MojangStatisticsGenerator;)I access$300
	e ()V interrupt
	e (Lnet/minecraft/server/MojangStatisticsGenerator;)Ljava/util/Map; access$400
	f ()Ljava/lang/String; getToken
	f (Lnet/minecraft/server/MojangStatisticsGenerator;)I access$308
	g ()J getStartupTime
	g (Lnet/minecraft/server/MojangStatisticsGenerator;)Ljava/lang/String; access$500
	h ()V populateFixedData
	h (Lnet/minecraft/server/MojangStatisticsGenerator;)Ljava/net/URL; access$600
	i ()V setJvmArgs
net/minecraft/server/IChatBaseComponent net/minecraft/network/chat/Component
	a (I)Ljava/lang/String; getString
	a (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; append
	a (Ljava/lang/StringBuilder;Lnet/minecraft/server/IChatBaseComponent;)V lambda$getString$0
	a (Ljava/util/function/Consumer;)Lnet/minecraft/server/IChatBaseComponent; withStyle
	a (Lnet/minecraft/server/EnumChatFormat;)Lnet/minecraft/server/IChatBaseComponent; withStyle
	a ([Lnet/minecraft/server/EnumChatFormat;)Lnet/minecraft/server/IChatBaseComponent; withStyle
	addSibling (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; append
	b (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; flattenStyle
	c ()Ljava/util/stream/Stream; stream
	e ()Ljava/lang/String; getColoredString
	f ()Ljava/util/stream/Stream; flatStream
	g ()Lnet/minecraft/server/IChatBaseComponent; copy
	getChatModifier ()Lnet/minecraft/server/ChatModifier; getStyle
	getText ()Ljava/lang/String; getContents
	h ()Lnet/minecraft/server/IChatBaseComponent; deepCopy
	setChatModifier (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/IChatBaseComponent; setStyle
net/minecraft/server/MobEffectAbsorption net/minecraft/world/effect/AbsoptionMobEffect
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AttributeMapBase;I)V removeAttributeModifiers
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AttributeMapBase;I)V addAttributeModifiers
net/minecraft/server/DataConverterStatistic net/minecraft/util/datafix/fixes/StatsCounterFix
	a SKIP
	b CUSTOM_MAP
	c ITEM_KEYS
	d ENTITY_KEYS
	e ENTITIES
	a ()Ljava/lang/IllegalStateException; lambda$null$1
	a (Lcom/mojang/datafixers/Dynamic;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Ljava/lang/String;)Ljava/lang/String; upgradeItem
	b (Ljava/lang/String;)Ljava/lang/String; upgradeBlock
net/minecraft/server/PacketPlayOutEntity$PacketPlayOutEntityLook net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
cxh$k com/mojang/realmsclient/util/RealmsTasks$WorldCreationTask
	b name
	c motd
	d worldId
	e lastScreen
cxh$j com/mojang/realmsclient/util/RealmsTasks$TrialCreationTask
	b name
	c motd
	d lastScreen
cxh$i com/mojang/realmsclient/util/RealmsTasks$SwitchSlotTask
	b worldId
	c slot
	d listener
	e confirmId
cro$a net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionRandomChance; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionRandomChance;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
bts$1 net/minecraft/world/level/block/entity/BeaconBlockEntity$1
	a this$0
	a ()I getCount
	a (I)I get
	a (II)V set
doh$4 net/minecraft/client/renderer/block/model/FaceBakery$4
	a (FFFF)Ldod; apply
cxh$d com/mojang/realmsclient/util/RealmsTasks$RealmsConnectTask
	b realmsConnect
	c a
	b ()V tick
	d ()V abortTask
doh$3 net/minecraft/client/renderer/block/model/FaceBakery$3
	a (FFFF)Ldod; apply
cxh$c com/mojang/realmsclient/util/RealmsTasks$OpenServerTask
	b serverData
	c returnScreen
	d join
	e mainScreen
cxh$b com/mojang/realmsclient/util/RealmsTasks$DownloadTask
	b worldId
	c slot
	d lastScreen
	e downloadName
doh$5 net/minecraft/client/renderer/block/model/FaceBakery$5
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$core$Direction$Axis
cxh$a com/mojang/realmsclient/util/RealmsTasks$CloseServerTask
	b serverData
	c configureScreen
cxh$h com/mojang/realmsclient/util/RealmsTasks$SwitchMinigameTask
	b worldId
	c worldTemplate
	d lastScreen
net/minecraft/server/LootItemConditionWeatherCheck net/minecraft/world/level/storage/loot/predicates/WeatherCheck
	a isRaining
	b isThundering
	a (Lnet/minecraft/server/LootItemConditionWeatherCheck;)Ljava/lang/Boolean; access$100
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lcrr$a; weather
	b (Lnet/minecraft/server/LootItemConditionWeatherCheck;)Ljava/lang/Boolean; access$200
cxh$g com/mojang/realmsclient/util/RealmsTasks$RestoreTask
	b backup
	c worldId
	d lastScreen
doh$2 net/minecraft/client/renderer/block/model/FaceBakery$2
	a (FFFF)Ldod; apply
cxh$f com/mojang/realmsclient/util/RealmsTasks$ResettingWorldTask
	b seed
	c worldTemplate
	d levelType
	e generateStructures
	f serverId
	g lastScreen
	h confirmationId
	i title
	a (I)V setConfirmationId
	c (Ljava/lang/String;)V setResetTitle
doh$1 net/minecraft/client/renderer/block/model/FaceBakery$1
	a (FFFF)Ldod; apply
cxh$e com/mojang/realmsclient/util/RealmsTasks$RealmsGetServerDetailsTask
	b server
	c lastScreen
	d mainScreen
	e connectLock
	a (I)V sleep
arb$a net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal
	i cat
	a ()Z canUse
	b ()Z canContinueToUse
arb$b net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal
	a cat
	b ownerPlayer
	c goalPos
	d onBedTicks
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z spaceIsOccupied
	h ()V giveMorningGift
cwe$a com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen$DownloadButton
	a this$0
cwe$b com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen$PlayButton
	a this$0
net/minecraft/server/ContainerFurnaceFurnace net/minecraft/world/inventory/FurnaceMenu
net/minecraft/server/ChatComponentText net/minecraft/network/chat/TextComponent
	b text
	d ()Ljava/lang/String; getContents
	g ()Lnet/minecraft/server/IChatBaseComponent; copy
	i ()Ljava/lang/String; getText
	j ()Lnet/minecraft/server/ChatComponentText; copy
net/minecraft/server/PacketPlayInDifficultyChange net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket
	a difficulty
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/EnumDifficulty; getDifficulty
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
cql$a net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder
	a entries
	a ()Lcql$a; getThis
	a (Lcpq$a;)Lcql$a; withEntry
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcqg$a; getThis
cql$b net/minecraft/world/level/storage/loot/functions/SetContainerContents$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetContents; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetContents;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/EntitySlime$PathfinderGoalSlimeNearestPlayer net/minecraft/world/entity/monster/Slime$SlimeAttackGoal
	a slime
	b growTiredTimer
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
net/minecraft/server/BaseBlockPosition net/minecraft/core/Vec3i
	a x
	b y
	c z
	a (Lnet/minecraft/server/BaseBlockPosition;D)Z closerThan
	a (Lnet/minecraft/server/BaseBlockPosition;Lnet/minecraft/server/BaseBlockPosition;)Ljava/lang/Iterable; between
	a (Lnet/minecraft/server/IPosition;D)Z closerThan
	a (Lnet/minecraft/server/IPosition;Z)D distSqr
	b (DDD)Lnet/minecraft/server/BaseBlockPosition; offset
	b (Lnet/minecraft/server/BaseBlockPosition;Lnet/minecraft/server/BaseBlockPosition;)Ljava/util/Iterator; lambda$between$0
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/BaseBlockPosition; relative
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BaseBlockPosition; relative
	b (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BaseBlockPosition; relative
	c (III)Lnet/minecraft/server/BaseBlockPosition; offset
	d (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; cross
	distanceSquared (DDDZ)D distSqr
	e (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; subtract
	f (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; offset
	h (I)Lnet/minecraft/server/BaseBlockPosition; east
	i ()Lnet/minecraft/server/BaseBlockPosition; east
	i (I)Lnet/minecraft/server/BaseBlockPosition; west
	j ()Lnet/minecraft/server/BaseBlockPosition; west
	j (I)Lnet/minecraft/server/BaseBlockPosition; south
	k ()Lnet/minecraft/server/BaseBlockPosition; south
	k (I)Lnet/minecraft/server/BaseBlockPosition; north
	l ()Lnet/minecraft/server/BaseBlockPosition; north
	l (I)Lnet/minecraft/server/BaseBlockPosition; below
	l (Lnet/minecraft/server/BaseBlockPosition;)I compareTo
	m ()Lnet/minecraft/server/BaseBlockPosition; below
	m (I)Lnet/minecraft/server/BaseBlockPosition; above
	m (Lnet/minecraft/server/BaseBlockPosition;)D distSqr
	n ()Lnet/minecraft/server/BaseBlockPosition; above
	n (I)Lnet/minecraft/server/BaseBlockPosition; multiply
	n (Lnet/minecraft/server/BaseBlockPosition;)I distManhattan
net/minecraft/server/MinecraftKey net/minecraft/resources/ResourceLocation
	c ERROR_INVALID
	key path
	a (C)Z isAllowedInResourceLocation
	a (I)Z lambda$isValidNamespace$1
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/MinecraftKey; read
	a (Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; tryParse
	a (Ljava/lang/String;C)Lnet/minecraft/server/MinecraftKey; of
	a (Lnet/minecraft/server/MinecraftKey;)I compareTo
	b (I)Z lambda$isValidPath$0
	b (Ljava/lang/String;)Z isValidResourceLocation
	b (Ljava/lang/String;C)[Ljava/lang/String; decompose
	c (Ljava/lang/String;)Z isValidPath
	d (Ljava/lang/String;)Z isValidNamespace
	getKey ()Ljava/lang/String; getPath
dne$1 net/minecraft/client/renderer/ItemInHandRenderer$1
	a $SwitchMap$net$minecraft$world$item$UseAnim
net/minecraft/server/ISourceBlock net/minecraft/core/BlockSource
	a ()D x
	b ()D y
	c ()D z
	f ()Lnet/minecraft/server/Material; getMaterial
	getBlockData ()Lnet/minecraft/server/IBlockData; getBlockState
	getBlockPosition ()Lnet/minecraft/server/BlockPosition; getPos
	getTileEntity ()Lnet/minecraft/server/TileEntity; getEntity
cpz$1 net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$1
net/minecraft/server/WorldGenFeatureFillConfiguration net/minecraft/world/level/levelgen/feature/LayerConfiguration
	a height
	b state
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureFillConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
bib$1 net/minecraft/world/level/NaturalSpawner$1
	a $SwitchMap$net$minecraft$world$entity$SpawnPlacements$Type
cql$1 net/minecraft/world/level/storage/loot/functions/SetContainerContents$1
net/minecraft/server/EnumMoveType net/minecraft/world/entity/MoverType
	f $VALUES
ud$1 net/minecraft/server/commands/data/BlockDataAccessor$1
	a val$argPrefix
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandDataAccessor; access
cwe$3 com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen$3
	a val$worldId
	b this$0
cwe$4 com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen$4
	a this$0
net/minecraft/server/BehaviorTradePlayer net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer
	a playerItemStack
	b displayItems
	c cycleCounter
	d displayIndex
	e lookTime
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityVillager;)V findItemsToDisplay
	a (Lnet/minecraft/server/EntityVillager;)V displayFirstItem
	a (Lnet/minecraft/server/MerchantRecipe;)Z playerItemStackMatchesCostOfOffer
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/EntityVillager;)V updateDisplayItems
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	c (Lnet/minecraft/server/EntityVillager;)Lnet/minecraft/server/EntityLiving; lookAtTarget
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/EntityVillager;)V displayCyclingItems
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/DataConverterBiome net/minecraft/util/datafix/fixes/BiomeFix
	a BIOMES
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$2
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
net/minecraft/server/PathfinderGoalLookAtPlayer net/minecraft/world/entity/ai/goal/LookAtPlayerGoal
	a mob
	b lookAt
	c lookDistance
	d lookAtType
	e lookAtContext
	f lookTime
	g probability
	a ()Z canUse
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
jd$1 net/minecraft/network/ConnectionProtocol$1
aqp$a net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker
	a this$0
	b levels
	a ()V runAllUpdates
	a (JI)V setLevel
	b (J)I getLevelFromSource
	c (J)I getLevel
jd$3 net/minecraft/network/ConnectionProtocol$3
jd$2 net/minecraft/network/ConnectionProtocol$2
jd$4 net/minecraft/network/ConnectionProtocol$4
cle$a net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap
	b currentLowestY
	c topSections
	a ()Lcle$a; copy
	a (Lcle$a;)Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap; access$000
	a (Lcle$a;I)I access$102
	b ()Lnet/minecraft/server/LightEngineStorageArray; copy
	b (Lcle$a;)I access$100
awi$a net/minecraft/world/entity/player/StackedContents$RecipePicker
	a this$0
	b recipe
	c ingredients
	d ingredientCount
	e items
	f itemCount
	g data
	h path
	a ()[I getUniqueAvailableIngredientItems
	a (I)Z dfs
	a (ILit/unimi/dsi/fastutil/ints/IntList;)Z tryPick
	a (ZI)V visit
	a (ZII)Z hasConnection
	b ()I getMinIngredientCount
	b (I)Z isSatisfied
	b (ILit/unimi/dsi/fastutil/ints/IntList;)I tryPickAll
	b (ZI)Z hasVisited
	b (ZII)Z hasResidual
	c (I)V setSatisfied
	c (ZI)I getVisitedIndex
	c (ZII)V toggleResidual
	d (I)I getSatisfiedIndex
	d (ZII)I getIndex
net/minecraft/server/MethodProfiler net/minecraft/util/profiling/ActiveProfiler
	a WARNING_TIME_NANOS
	b LOGGER
	c paths
	d startTimes
	e times
	f counts
	g getTickTime
	h startTimeNano
	i startTimeTicks
	j path
	k started
	a ()V startTick
	a (J)Ljava/lang/Object; lambda$pop$2
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	b ()V endTick
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c ()V pop
	d ()Lnet/minecraft/server/MethodProfilerResults; getResults
	e ()Ljava/lang/Object; lambda$pop$1
	f ()Ljava/lang/Object; lambda$endTick$0
net/minecraft/server/MovingObjectPosition net/minecraft/world/phys/HitResult
	pos location
	a (Lnet/minecraft/server/Entity;)D distanceTo
	getPos ()Lnet/minecraft/server/Vec3D; getLocation
net/minecraft/server/IMaterial net/minecraft/world/level/ItemLike
	getItem ()Lnet/minecraft/server/Item; asItem
beo$1 net/minecraft/world/item/crafting/Ingredient$1
bfa$a net/minecraft/world/item/crafting/SimpleCookingSerializer$CookieBaker
net/minecraft/server/PathfinderGoalGotoTarget net/minecraft/world/entity/ai/goal/MoveToBlockGoal
	a mob
	b speedModifier
	c nextStartTick
	d tryTicks
	e blockPos
	f verticalSearchStart
	g maxStayTicks
	h reachedTarget
	i searchRange
	j verticalSearchRange
	a ()Z canUse
	a (Lnet/minecraft/server/EntityCreature;)I nextStartTick
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	g ()V moveMobToBlock
	h ()D acceptedDistance
	j ()Z shouldRecalculatePath
	k ()Z isReachedTarget
	l ()Z findNearestBlock
net/minecraft/server/IResource net/minecraft/server/packs/resources/Resource
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadata
	b ()Ljava/io/InputStream; getInputStream
	c ()Z hasMetadata
	d ()Ljava/lang/String; getSourceName
csr$a net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer
net/minecraft/server/CommandGive net/minecraft/server/commands/GiveCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ArgumentPredicateItemStack;Ljava/util/Collection;I)I giveItem
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/WorldGenNetherPieces net/minecraft/world/level/levelgen/structure/NetherBridgePieces
	a BRIDGE_PIECE_WEIGHTS
	b CASTLE_PIECE_WEIGHTS
	a ()[Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPieceWeight; access$100
	a (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPieceWeight;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece; access$000
	b ()[Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPieceWeight; access$200
	b (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPieceWeight;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece; findAndCreateBridgePieceFactory
net/minecraft/server/WorldGenSurfaceConfigurationBase net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration
	a topMaterial
	b underMaterial
	c underwaterMaterial
	a ()Lnet/minecraft/server/IBlockData; getTopMaterial
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenSurfaceConfigurationBase; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	b ()Lnet/minecraft/server/IBlockData; getUnderMaterial
	c ()Lnet/minecraft/server/IBlockData; getUnderwaterMaterial
net/minecraft/server/RecipeTippedArrow net/minecraft/world/item/crafting/TippedArrowRecipe
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
net/minecraft/server/LootEntryChildren net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer
	a ALWAYS_FALSE
	b ALWAYS_TRUE
	a (Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; and
	a (Lnet/minecraft/server/LootEntryChildren;Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z lambda$or$3
	a (Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z lambda$static$1
	b (Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; or
	b (Lnet/minecraft/server/LootEntryChildren;Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z lambda$and$2
	b (Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z lambda$static$0
net/minecraft/server/BlockSkullPlayerWall net/minecraft/world/level/block/PlayerWallHeadBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
net/minecraft/server/EntityPhantom$AttackPhase net/minecraft/world/entity/monster/Phantom$AttackPhase
	c $VALUES
net/minecraft/server/DataPaletteExpandable net/minecraft/world/level/chunk/PaletteResize
cck$a net/minecraft/world/level/levelgen/feature/IglooFeature$FeatureStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
net/minecraft/server/BlockShulkerBox net/minecraft/world/level/block/ShulkerBoxBlock
	a FACING
	b CONTENTS
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/Block; getBlockByColor
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockAccess;Ljava/util/List;Lbdr;)V appendHoverText
	a (Lnet/minecraft/server/TileEntityShulkerBox;Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)V lambda$getDrops$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/ItemStack; getColoredItemStack
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	b (Lnet/minecraft/server/Item;)Lnet/minecraft/server/EnumColor; getColorFromItem
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isViewBlocking
	d ()Lnet/minecraft/server/EnumColor; getColor
	d (Lnet/minecraft/server/IBlockData;)Z hasCustomBreakingProgress
	e (Lnet/minecraft/server/Block;)Lnet/minecraft/server/EnumColor; getColorFromBlock
	f (Lnet/minecraft/server/IBlockData;)Z canOcclude
	i (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
net/minecraft/server/ItemGoldenAppleEnchanted net/minecraft/world/item/EnchantedGoldenAppleItem
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
net/minecraft/server/TileEntityEnderPortal net/minecraft/world/level/block/entity/TheEndPortalBlockEntity
	a (Lnet/minecraft/server/EnumDirection;)Z shouldRenderFace
net/minecraft/server/PacketPlayOutCamera net/minecraft/network/protocol/game/ClientboundSetCameraPacket
	a cameraId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getEntity
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/CommandFill$Mode net/minecraft/server/commands/FillCommand$Mode
	e filter
	f $VALUES
	a (Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ArgumentTileLocation;Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/ArgumentTileLocation; lambda$static$3
	b (Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ArgumentTileLocation;Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/ArgumentTileLocation; lambda$static$2
	c (Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ArgumentTileLocation;Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/ArgumentTileLocation; lambda$static$1
	d (Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ArgumentTileLocation;Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/ArgumentTileLocation; lambda$static$0
net/minecraft/server/EntityVillagerTrader net/minecraft/world/entity/npc/WanderingTrader
	bA wanderTarget
	bB despawnDelay
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityVillagerTrader;)Lnet/minecraft/server/NavigationAbstract; access$000
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityVillagerTrader;)Lnet/minecraft/server/BlockPosition; access$100
	b (Lnet/minecraft/server/MerchantRecipe;)V rewardTradeXp
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (D)Z removeWhenFarAway
	c (Lnet/minecraft/server/EntityVillagerTrader;)Lnet/minecraft/server/NavigationAbstract; access$200
	c (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/SoundEffect; getDrinkingSound
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	d (Lnet/minecraft/server/EntityVillagerTrader;)Lnet/minecraft/server/NavigationAbstract; access$300
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityVillagerTrader;)Lnet/minecraft/server/NavigationAbstract; access$400
	ea ()Z showProgressBar
	eb ()Lnet/minecraft/server/SoundEffect; getNotifyTradeSound
	ef ()I getDespawnDelay
	eh ()V updateTrades
	ej ()V maybeDespawn
	ek ()Lnet/minecraft/server/BlockPosition; getWanderTarget
	f (Lnet/minecraft/server/EntityVillagerTrader;)Z lambda$registerGoals$1
	g (Lnet/minecraft/server/BlockPosition;)V setWanderTarget
	g (Lnet/minecraft/server/EntityVillagerTrader;)Z lambda$registerGoals$0
	k ()V aiStep
	n ()V registerGoals
	r (Z)Lnet/minecraft/server/SoundEffect; getTradeUpdatedSound
	t (I)V setDespawnDelay
net/minecraft/server/EnumHand net/minecraft/world/InteractionHand
	c $VALUES
dku$a net/minecraft/client/particle/CritParticle$DamageIndicatorProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/PacketLoginInStart net/minecraft/network/protocol/login/ServerboundHelloPacket
	a gameProfile
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginInListener;)V handle
	b ()Lcom/mojang/authlib/GameProfile; getGameProfile
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/WorldGenFeatureChoiceConfiguration net/minecraft/world/level/levelgen/feature/RandomBooleanFeatureConfig
	a featureTrue
	b featureFalse
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureChoiceConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lnet/minecraft/server/WorldGenerator;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/WorldGenFeatureConfigured; getFeature
dku$c net/minecraft/client/particle/CritParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dku$b net/minecraft/client/particle/CritParticle$MagicProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/WorldGenFeatureIceSnow net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
cro$1 net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$1
net/minecraft/server/PacketPlayOutBlockBreakAnimation net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket
	a id
	b pos
	c progress
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/BlockPosition; getPos
	d ()I getProgress
buv$1 net/minecraft/world/level/block/entity/SpawnerBlockEntity$1
	a this$0
	a ()Lnet/minecraft/server/World; getLevel
	a (I)V broadcastEvent
	a (Lnet/minecraft/server/MobSpawnerData;)V setNextSpawnData
	b ()Lnet/minecraft/server/BlockPosition; getPos
ase$1 net/minecraft/world/entity/animal/horse/Llama$1
net/minecraft/server/WorldGenFeatureDecoratorNoiseConfiguration net/minecraft/world/level/levelgen/feature/DecoratorNoiseDependant
	a noiseLevel
	b belowNoise
	c aboveNoise
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureDecoratorNoiseConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenDecoratorHeightAverage net/minecraft/world/level/levelgen/placement/CountDepthAverageDecorator
	a (Ljava/util/Random;IILnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$place$0
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorHeightAverageConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/Position net/minecraft/core/PositionImpl
	a x
	b y
	c z
	a ()D x
	b ()D y
	c ()D z
net/minecraft/server/PathfinderGoalRandomLookaround net/minecraft/world/entity/ai/goal/RandomLookAroundGoal
	a mob
	b relX
	c relZ
	d lookTime
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
net/minecraft/server/LootEnchantLevel net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction
	a levels
	c treasure
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootEnchantLevel;)Lnet/minecraft/server/LootValue; access$100
	a (Lnet/minecraft/server/LootValue;)Lcqb$a; enchantWithLevels
	b (Lnet/minecraft/server/LootEnchantLevel;)Z access$200
net/minecraft/server/EnumBlockMirror net/minecraft/world/level/block/Mirror
	d $VALUES
	a (II)I mirror
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumBlockRotation; getRotation
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; mirror
net/minecraft/server/EntityZombie$GroupDataZombie net/minecraft/world/entity/monster/Zombie$ZombieGroupData
	a isBaby
	b this$0
net/minecraft/server/ItemFireworks$EffectType net/minecraft/world/item/FireworkRocketItem$Shape
	f BY_ID
	g id
	h name
	i $VALUES
	a ()I getId
	a (I)Lnet/minecraft/server/ItemFireworks$EffectType; byId
	a (Lnet/minecraft/server/ItemFireworks$EffectType;)I lambda$static$0
	b ()Ljava/lang/String; getName
	b (I)[Lnet/minecraft/server/ItemFireworks$EffectType; lambda$static$1
net/minecraft/server/TileEntityCommand net/minecraft/world/level/block/entity/CommandBlockEntity
	a powered
	b auto
	c conditionMet
	g sendToClient
	h commandBlock
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Z)V setPowered
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b (Z)V setAutomatic
	c (Z)V setSendToClient
	f ()Z isPowered
	g ()Z isAutomatic
	h ()Z wasConditionMet
	n ()V clearRemoved
	p ()Z onlyOpCanSetNbt
	s ()Z markConditionMet
	t ()Z isSendToClient
	u ()Lnet/minecraft/server/TileEntityCommand$Type; getMode
	v ()Z isConditional
net/minecraft/server/RecipeMapExtend net/minecraft/world/item/crafting/MapExtendingRecipe
	P_ ()Z isSpecial
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/WorldMap;)Z isExplorationMap
ags$1 net/minecraft/util/thread/ProcessorHandle$1
	a val$name
	b val$tell
	a (Ljava/lang/Object;)V tell
	bf ()Ljava/lang/String; name
beo$b net/minecraft/world/item/crafting/Ingredient$TagValue
	a tag
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
ars$1 net/minecraft/world/entity/animal/Sheep$1
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
aaz$1 net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix$1
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/IChatBaseComponent; deserialize
csr$b net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer
net/minecraft/server/LootItemFunction net/minecraft/world/level/storage/loot/functions/LootItemFunction
	a (Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)Ljava/util/function/Consumer; decorate
	a (Ljava/util/function/Consumer;Ljava/util/function/BiFunction;Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/ItemStack;)V lambda$decorate$0
net/minecraft/server/BlockAir net/minecraft/world/level/block/AirBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	e (Lnet/minecraft/server/IBlockData;)Z isAir
net/minecraft/server/NoiseGenerator3 net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise
	a noiseLevels
	b levels
	a (DD)D getValue
	a (DDD)D getValue
	a (DDDD)D getSurfaceNoiseValue
	a (DDZ)D getValue
net/minecraft/server/EntitySilverfish net/minecraft/world/entity/monster/Silverfish
	b friendsGoal
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	aO ()D getRidingHeight
	ap ()Z makeStepSound
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkSliverfishSpawnRules
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cQ ()Lnet/minecraft/server/EnumMonsterType; getMobType
	cl ()V registerAttributes
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h ()V tick
	l (F)V setYBodyRot
	n ()V registerGoals
net/minecraft/server/ChatTypeAdapterFactory net/minecraft/util/LowerCaseEnumTypeAdapterFactory
	a (Ljava/lang/Object;)Ljava/lang/String; toLowercase
	a (Lnet/minecraft/server/ChatTypeAdapterFactory;Ljava/lang/Object;)Ljava/lang/String; access$000
ase$a net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal
	a (Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
	k ()D getFollowDistance
ars$2 net/minecraft/world/entity/animal/Sheep$2
	a $SwitchMap$net$minecraft$world$item$DyeColor
net/minecraft/server/DefinedStructureProcessorNop net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor
	a INSTANCE
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
ase$b net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData
	a variant
net/minecraft/server/PathfinderGoalUseItem net/minecraft/world/entity/ai/goal/UseItemGoal
	a mob
	b item
	c canUseSelector
	d finishUsingSound
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
net/minecraft/server/MethodProfilerResultsField net/minecraft/util/profiling/ResultField
	a percentage
	b globalPercentage
	c count
	d name
	a ()I getColor
	a (Lnet/minecraft/server/MethodProfilerResultsField;)I compareTo
net/minecraft/server/LootItemConditionSurvivesExplosion net/minecraft/world/level/storage/loot/predicates/ExplosionCondition
	a INSTANCE
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lcrk$a; survivesExplosion
	c ()Lnet/minecraft/server/LootItemConditionSurvivesExplosion; access$000
	d ()Lnet/minecraft/server/LootItemCondition; lambda$survivesExplosion$0
ase$c net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal
	b ()Z canContinueToUse
net/minecraft/server/MinecraftEncryption net/minecraft/util/Crypt
	a LOGGER
	a ()Ljavax/crypto/SecretKey; generateSecretKey
	a (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; setupCipher
	a (ILjava/security/Key;)Ljavax/crypto/Cipher; getCipher
	a (ILjava/security/Key;[B)[B cipherData
	a (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B digestData
	a (Ljava/lang/String;[[B)[B digestData
	a (Ljava/security/Key;[B)[B encryptUsingKey
	a (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; decryptByteToSecretKey
	a ([B)Ljava/security/PublicKey; byteToPublicKey
	b ()Ljava/security/KeyPair; generateKeyPair
	b (Ljava/security/Key;[B)[B decryptUsingKey
xe$1 net/minecraft/server/packs/resources/ProfiledReloadInstance$1
net/minecraft/server/CustomFunction net/minecraft/commands/CommandFunction
	a entries
	b id
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lnet/minecraft/server/CustomFunction;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/CustomFunctionData;Ljava/util/List;)Lnet/minecraft/server/CustomFunction; fromLines
	b ()[Lca$c; getEntries
net/minecraft/server/PacketDecrypter net/minecraft/network/CipherDecoder
	a cipher
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V decode
dmi$a net/minecraft/client/particle/WakeParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
bhf$c net/minecraft/world/level/ClipContext$ShapeGetter
net/minecraft/server/HeightMap$Type net/minecraft/world/level/levelgen/Heightmap$Types
	g serializationKey
	h usage
	i isOpaque
	j REVERSE_LOOKUP
	k $VALUES
	a ()Ljava/lang/String; getSerializationKey
	a (Ljava/lang/String;)Lnet/minecraft/server/HeightMap$Type; getFromKey
	a (Ljava/util/HashMap;)V lambda$static$2
	a (Lnet/minecraft/server/IBlockData;)Z lambda$static$1
	b ()Z sendToClient
	b (Lnet/minecraft/server/IBlockData;)Z lambda$static$0
	c ()Z keepAfterWorldgen
	d ()Ljava/util/function/Predicate; isOpaque
net/minecraft/server/BlockCoralDead net/minecraft/world/level/block/BaseCoralPlantBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
net/minecraft/server/WorldGenBigTree$Position net/minecraft/world/level/levelgen/feature/BigTreeFeature$FoliageCoords
	b branchBase
	r ()I getBranchBase
net/minecraft/server/RecipeBlasting net/minecraft/world/item/crafting/BlastingRecipe
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
net/minecraft/server/StructureAbstract net/minecraft/world/level/levelgen/structure/BeardedStructureStart
	b ()V calculateBoundingBox
net/minecraft/server/LootValue net/minecraft/world/level/storage/loot/RandomIntGenerator
	a CONSTANT
	b UNIFORM
	c BINOMIAL
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (Ljava/util/Random;)I getInt
net/minecraft/server/ArgumentSerializerVoid net/minecraft/commands/synchronization/EmptyArgumentSerializer
	a constructor
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
avm$a net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal
	g this$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playDestroyProgressSound
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V playBreakSound
	h ()D acceptedDistance
net/minecraft/server/PathfinderGoalFollowParent net/minecraft/world/entity/ai/goal/FollowParentGoal
	a animal
	b parent
	c speedModifier
	d timeToRecalcPath
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PacketPlayInClientCommand net/minecraft/network/protocol/game/ServerboundClientCommandPacket
	a action
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/PacketPlayInClientCommand$EnumClientCommand; getAction
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/WorldGenFeatureRadiusConfiguration net/minecraft/world/level/levelgen/feature/FeatureRadius
	a radius
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureRadiusConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
cep$b net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader
	a (Ljava/lang/Long;)Ljava/util/List; load
cvi$f com/mojang/realmsclient/RealmsMainScreen$RealmSelectionListTrialEntry
	a this$0
	a (IIIII)V renderTrialItem
xv$1 net/minecraft/server/players/PlayerList$1
	a this$0
	a (Lnet/minecraft/server/WorldBorder;D)V onBorderSizeSet
	a (Lnet/minecraft/server/WorldBorder;DD)V onBorderCenterSet
	a (Lnet/minecraft/server/WorldBorder;DDJ)V onBorderSizeLerping
	a (Lnet/minecraft/server/WorldBorder;I)V onBorderSetWarningTime
	b (Lnet/minecraft/server/WorldBorder;D)V onBorderSetDamagePerBlock
	b (Lnet/minecraft/server/WorldBorder;I)V onBorderSetWarningBlocks
	c (Lnet/minecraft/server/WorldBorder;D)V onBorderSetDamageSafeZOne
cvi$g com/mojang/realmsclient/RealmsMainScreen$ShowPopupButton
	a this$0
cuw$1 com/mojang/blaze3d/vertex/BufferBuilder$1
	a $SwitchMap$com$mojang$blaze3d$vertex$VertexFormatElement$Type
net/minecraft/server/EntityZombieVillager net/minecraft/world/entity/monster/ZombieVillager
	CONVERTING DATA_CONVERTING_ID
	bB gossips
	bC tradeOffers
	bD villagerXp
	c DATA_VILLAGER_DATA
	conversionPlayer conversionStarter
	conversionTime villagerConversionTime
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (I)V setVillagerXp
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTBase;)V setGossips
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldServer;)V finishConversion
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (D)Z removeWhenFarAway
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cV ()F getVoicePitch
	dW ()Lnet/minecraft/server/SoundEffect; getStepSound
	dX ()Lnet/minecraft/server/ItemStack; getSkull
	dY ()Z convertsInWater
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eg ()I getVillagerXp
	h ()V tick
	setOffers (Lnet/minecraft/server/NBTTagCompound;)V setTradeOffers
	startConversion (Ljava/util/UUID;I)V startConverting
	u_ ()V defineSynchedData
dmi$1 net/minecraft/client/particle/WakeParticle$1
cvi$a com/mojang/realmsclient/RealmsMainScreen$CloseButton
	a this$0
net/minecraft/server/EntityEgg net/minecraft/world/entity/projectile/ThrownEgg
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	i ()Lnet/minecraft/server/Item; getDefaultItem
cvi$d com/mojang/realmsclient/RealmsMainScreen$RealmSelectionList
	a this$0
bv$b net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance
	a item
	a (Lnet/minecraft/server/CriterionConditionItem;)Lbv$b; usedTotem
	a (Lnet/minecraft/server/IMaterial;)Lbv$b; usedTotem
	a (Lnet/minecraft/server/ItemStack;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
cvi$e com/mojang/realmsclient/RealmsMainScreen$RealmSelectionListEntry
	a mServerData
	b this$0
	a (II)V lambda$renderLegacy$0
	a (Lcom/mojang/realmsclient/dto/RealmsServer;IIII)V renderMcoServerItem
	b (Lcom/mojang/realmsclient/dto/RealmsServer;IIII)V renderLegacy
net/minecraft/server/IMojangStatistics net/minecraft/world/SnooperPopulator
	R ()Z isSnooperEnabled
	a (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooper
	b (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooperInitial
cvi$b com/mojang/realmsclient/RealmsMainScreen$NewsButton
	a this$0
net/minecraft/server/DragonControllerFly net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase
	b firstTick
	c currentPath
	d targetLocation
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
cvi$c com/mojang/realmsclient/RealmsMainScreen$PendingInvitesButton
	a this$0
bv$a net/minecraft/advancements/critereon/UsedTotemTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/ItemStack;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
net/minecraft/server/PacketPlayInFlying net/minecraft/network/protocol/game/ServerboundMovePlayerPacket
	f onGround
	hasLook hasRot
	pitch xRot
	yaw yRot
	a (D)D getX
	a (F)F getYRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	a (Z)V setHasPosition
	b ()Z isOnGround
	b (D)D getY
	b (F)F getXRot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z hasPosition
	c (D)D getZ
	d ()Z hasRotation
as$a net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder
	a head
	b chest
	c legs
	d feet
	e mainhand
	f offhand
	a ()Las$a; equipment
	a (Lnet/minecraft/server/CriterionConditionItem;)Las$a; head
	b ()Lnet/minecraft/server/CriterionConditionEntityEquipment; build
	b (Lnet/minecraft/server/CriterionConditionItem;)Las$a; chest
	c (Lnet/minecraft/server/CriterionConditionItem;)Las$a; legs
	d (Lnet/minecraft/server/CriterionConditionItem;)Las$a; feet
	e (Lnet/minecraft/server/CriterionConditionItem;)Las$a; mainhand
	f (Lnet/minecraft/server/CriterionConditionItem;)Las$a; offhand
net/minecraft/server/SensorVillagerHostiles net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor
	a ACCEPTABLE_DISTANCE_FROM_HOSTILES
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/EntityLiving;)Ljava/util/Optional; getNearestHostile
	a (Lnet/minecraft/server/EntityLiving;Ljava/util/List;)Ljava/util/Optional; lambda$getNearestHostile$2
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z isClose
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)I compareMobDistance
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	b (Lnet/minecraft/server/EntityLiving;)Ljava/util/Optional; getVisibleEntities
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$null$0
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)I lambda$null$1
	c (Lnet/minecraft/server/EntityLiving;)Z isHostile
net/minecraft/server/GameRules net/minecraft/world/level/GameRules
	A rules
	ANNOUNCE_ADVANCEMENTS RULE_ANNOUNCE_ADVANCEMENTS
	COMMAND_BLOCK_OUTPUT RULE_COMMANDBLOCKOUTPUT
	DISABLE_ELYTRA_MOVEMENT_CHECK RULE_DISABLE_ELYTRA_MOVEMENT_CHECK
	DO_DAYLIGHT_CYCLE RULE_DAYLIGHT
	DO_ENTITY_DROPS RULE_DOENTITYDROPS
	DO_FIRE_TICK RULE_DOFIRETICK
	DO_LIMITED_CRAFTING RULE_LIMITED_CRAFTING
	DO_MOB_LOOT RULE_DOMOBLOOT
	DO_MOB_SPAWNING RULE_DOMOBSPAWNING
	DO_TILE_DROPS RULE_DOBLOCKDROPS
	DO_WEATHER_CYCLE RULE_WEATHER_CYCLE
	KEEP_INVENTORY RULE_KEEPINVENTORY
	LOG_ADMIN_COMMANDS RULE_LOGADMINCOMMANDS
	MAX_COMMAND_CHAIN_LENGTH RULE_MAX_COMMAND_CHAIN_LENGTH
	MAX_ENTITY_CRAMMING RULE_MAX_ENTITY_CRAMMING
	MOB_GRIEFING RULE_MOBGRIEFING
	NATURAL_REGENERATION RULE_NATURAL_REGENERATION
	RANDOM_TICK_SPEED RULE_RANDOMTICKING
	REDUCED_DEBUG_INFO RULE_REDUCEDDEBUGINFO
	SEND_COMMAND_FEEDBACK RULE_SENDCOMMANDFEEDBACK
	SHOW_DEATH_MESSAGES RULE_SHOWDEATHMESSAGES
	SPAWN_RADIUS RULE_SPAWN_RADIUS
	SPECTATORS_GENERATE_CHUNKS RULE_SPECTATORSGENERATECHUNKS
	x RULE_DISABLE_RAIDS
	y LOGGER
	z GAME_RULE_TYPES
	a ()Lnet/minecraft/server/NBTTagCompound; createTag
	a (Ljava/lang/String;Lnet/minecraft/server/GameRules$GameRuleDefinition;)Lnet/minecraft/server/GameRules$GameRuleKey; register
	a (Ljava/util/Map$Entry;)Lnet/minecraft/server/GameRules$GameRuleValue; lambda$new$2
	a (Lnet/minecraft/server/GameRules$GameRuleVisitor;)V visitGameRuleTypes
	a (Lnet/minecraft/server/GameRules$GameRuleVisitor;Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleDefinition;)V cap
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/GameRules$GameRuleBoolean;)V lambda$static$1
	a (Lnet/minecraft/server/NBTTagCompound;)V loadFromTag
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleValue;)V lambda$loadFromTag$4
	b ()Lorg/apache/logging/log4j/Logger; access$500
	b (Lnet/minecraft/server/GameRules$GameRuleVisitor;Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleDefinition;)V lambda$visitGameRuleTypes$5
	b (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleValue;)V lambda$createTag$3
	d (Lnet/minecraft/server/GameRules$GameRuleKey;)Ljava/lang/String; lambda$static$0
	get (Lnet/minecraft/server/GameRules$GameRuleKey;)Lnet/minecraft/server/GameRules$GameRuleValue; getRule
net/minecraft/server/ParticleParam net/minecraft/core/particles/ParticleOptions
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToNetwork
	getParticle ()Lnet/minecraft/server/Particle; getType
bxm$b net/minecraft/world/level/chunk/ChunkStatus$GenerationTask
bxm$d net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask
bxm$c net/minecraft/world/level/chunk/ChunkStatus$LoadingTask
net/minecraft/server/EntityDrowned net/minecraft/world/entity/monster/Drowned
	b waterNavigation
	bz searchingForLand
	c groundNavigation
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityDrowned;)Z access$100
	a (Lnet/minecraft/server/EntityDrowned;Lnet/minecraft/server/NavigationAbstract;)Lnet/minecraft/server/NavigationAbstract; access$002
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z isDeepEnoughToSpawn
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumItemSlot;)Z canReplaceCurrentItem
	ai ()Lnet/minecraft/server/SoundEffect; getSwimSound
	ax ()V updateSwimming
	b (Lnet/minecraft/server/EntityDrowned;)Z access$200
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkDrownedSpawnRules
	bE ()Z isPushedByWater
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dV ()Z supportsBreakDoorGoal
	dW ()Lnet/minecraft/server/SoundEffect; getStepSound
	dX ()Lnet/minecraft/server/ItemStack; getSkull
	dY ()Z convertsInWater
	dZ ()Z closeToNextPos
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/Vec3D;)V travel
	ee ()Z wantsToSwim
	h (Lnet/minecraft/server/EntityLiving;)Z okTarget
	l ()V addBehaviourGoals
	r (Z)V setSearchingForLand
net/minecraft/server/EntityGhast$PathfinderGoalGhastIdleMove net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal
	a ghast
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
xe$a net/minecraft/server/packs/resources/ProfiledReloadInstance$State
	a name
	b preparationResult
	c reloadResult
	d preparationNanos
	e reloadNanos
	a (Lxe$a;)Lnet/minecraft/server/MethodProfilerResults; access$000
	b (Lxe$a;)Lnet/minecraft/server/MethodProfilerResults; access$100
	c (Lxe$a;)Ljava/util/concurrent/atomic/AtomicLong; access$200
	d (Lxe$a;)Ljava/util/concurrent/atomic/AtomicLong; access$300
	e (Lxe$a;)Ljava/lang/String; access$400
net/minecraft/server/CriterionTriggerConsumeItem net/minecraft/advancements/critereon/ConsumeItemTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Laj$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/PacketPlayInCustomPayload net/minecraft/network/protocol/game/ServerboundCustomPayloadPacket
	a BRAND
	tag identifier
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getIdentifier
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketDataSerializer; getData
aix$1 net/minecraft/world/entity/LivingEntity$1
	a $SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	b $SwitchMap$net$minecraft$world$entity$EquipmentSlot
bx net/minecraft/advancements/critereon/package-info
by net/minecraft/advancements/package-info
dlw$a net/minecraft/client/particle/SmokeParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dlf$1 net/minecraft/client/particle/HugeExplosionParticle$1
net/minecraft/server/BlockPumpkinCarved net/minecraft/world/level/block/CarvedPumpkinBlock
	a FACING
	b snowGolemBase
	c snowGolemFull
	d ironGolemBase
	e ironGolemFull
	f PUMPKINS_PREDICATE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSpawnGolem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V trySpawnGolem
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	d ()Lnet/minecraft/server/ShapeDetector; getOrCreateSnowGolemBase
	f ()Lnet/minecraft/server/ShapeDetector; getOrCreateIronGolemBase
	getIronGolemShape ()Lnet/minecraft/server/ShapeDetector; getOrCreateIronGolemFull
	getSnowmanShape ()Lnet/minecraft/server/ShapeDetector; getOrCreateSnowGolemFull
	j (Lnet/minecraft/server/IBlockData;)Z lambda$static$0
net/minecraft/server/ChatHoverable net/minecraft/network/chat/HoverEvent
	a action
	b value
	a ()Lnet/minecraft/server/ChatHoverable$EnumHoverAction; getAction
	b ()Lnet/minecraft/server/IChatBaseComponent; getValue
net/minecraft/server/IResourceManager net/minecraft/server/packs/resources/ResourceManager
	a ()Ljava/util/Set; getNamespaces
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; listResources
	a (Lnet/minecraft/server/IResourcePack;)V add
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/IResource; getResource
	b (Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Lnet/minecraft/server/MinecraftKey;)Ljava/util/List; getResources
cuw$a com/mojang/blaze3d/vertex/BufferBuilder$State
	a this$0
	b array
	c format
	a ()[I array
	b ()I vertices
	c ()Lcvc; getFormat
net/minecraft/server/PathfinderGoalBreed net/minecraft/world/entity/ai/goal/BreedGoal
	b level
	d PARTNER_TARGETING
	e partnerClass
	f loveTime
	g speedModifier
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
	g ()V breed
	h ()Lnet/minecraft/server/EntityAnimal; getFreePartner
be$a net/minecraft/advancements/critereon/KilledTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
be$b net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance
	a entityPredicate
	b killingBlow
	a (Lav$a;)Lbe$b; playerKilledEntity
	a (Lav$a;Lam$a;)Lbe$b; playerKilledEntity
	a (Lav$a;Lnet/minecraft/server/CriterionConditionDamageSource;)Lbe$b; playerKilledEntity
	a (Lnet/minecraft/server/CriterionConditionEntity;)Lbe$b; playerKilledEntity
	a (Lnet/minecraft/server/CriterionConditionEntity;Lam$a;)Lbe$b; playerKilledEntity
	a (Lnet/minecraft/server/CriterionConditionEntity;Lnet/minecraft/server/CriterionConditionDamageSource;)Lbe$b; playerKilledEntity
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	b (Lav$a;)Lbe$b; entityKilledPlayer
	b (Lav$a;Lam$a;)Lbe$b; entityKilledPlayer
	b (Lav$a;Lnet/minecraft/server/CriterionConditionDamageSource;)Lbe$b; entityKilledPlayer
	b (Lnet/minecraft/server/CriterionConditionEntity;)Lbe$b; entityKilledPlayer
	b (Lnet/minecraft/server/CriterionConditionEntity;Lam$a;)Lbe$b; entityKilledPlayer
	b (Lnet/minecraft/server/CriterionConditionEntity;Lnet/minecraft/server/CriterionConditionDamageSource;)Lbe$b; entityKilledPlayer
	c ()Lbe$b; playerKilledEntity
	d ()Lbe$b; entityKilledPlayer
net/minecraft/server/IBlockAccess net/minecraft/world/level/BlockGetter
	H ()I getMaxLightLevel
	a (Lnet/minecraft/server/RayTrace;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object; traverseBlocks
	a (Lnet/minecraft/server/RayTrace;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MovingObjectPositionBlock; lambda$clip$0
	b (Lnet/minecraft/server/RayTrace;)Lnet/minecraft/server/MovingObjectPositionBlock; lambda$clip$1
	g (Lnet/minecraft/server/BlockPosition;)I getLightBlock
	getBuildHeight ()I getMaxBuildHeight
	getFluid (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	getTileEntity (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	getType (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	h (Lnet/minecraft/server/BlockPosition;)I getLightEmission
	rayTrace (Lnet/minecraft/server/RayTrace;)Lnet/minecraft/server/MovingObjectPositionBlock; clip
	rayTrace (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/MovingObjectPositionBlock; clipWithInteractionOverride
net/minecraft/server/ArgumentChatComponent net/minecraft/commands/arguments/ComponentArgument
	a ERROR_INVALID_JSON
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentChatComponent; textComponent
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IChatBaseComponent; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; getComponent
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
net/minecraft/server/WorldGenFeatureDoublePlantConfiguration net/minecraft/world/level/levelgen/feature/DoublePlantConfiguration
	a state
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureDoublePlantConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/ICompletionProvider net/minecraft/commands/SharedSuggestionProvider
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;Lnet/minecraft/server/MinecraftKey;)V lambda$suggestResource$1
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)V lambda$suggestResource$4
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/MinecraftKey;)V lambda$suggestResource$3
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V filterResources
	a (Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V filterResources
	a (Ljava/lang/String;Ljava/lang/String;)Z lambda$suggest$5
	a (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; suggestCoordinates
	a (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; lambda$suggestResource$2
	a ([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; suggest2DCoordinates
	b (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; lambda$suggestResource$0
	l ()Ljava/util/Collection; getOnlinePlayerNames
	m ()Ljava/util/Collection; getAllTeams
	n ()Ljava/util/Collection; getAvailableSoundEvents
	o ()Ljava/util/stream/Stream; getRecipeNames
	p ()Ljava/util/Collection; getSelectedEntities
	q ()Ljava/util/Collection; getRelevantCoordinates
	r ()Ljava/util/Collection; getAbsoluteCoordinates
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdRoomCrossing net/minecraft/world/level/levelgen/structure/StrongholdPieces$RoomCrossing
	a type
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdRoomCrossing; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/PacketEncrypter net/minecraft/network/CipherEncoder
	a cipher
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/server/CriterionConditionDistance net/minecraft/advancements/critereon/DistancePredicate
	a ANY
	b x
	c y
	d z
	e horizontal
	f absolute
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (DDDDDD)Z matches
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionDistance; fromJson
	a (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lnet/minecraft/server/CriterionConditionDistance; horizontal
	b (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lnet/minecraft/server/CriterionConditionDistance; vertical
di net/minecraft/commands/arguments/blocks/package-info
ew$1 net/minecraft/core/BlockPos$1
	a cursor
	b nextPos
	c val$minX
	d val$minY
	e val$minZ
	f val$maxX
	g val$maxY
	h val$maxZ
du net/minecraft/commands/arguments/coordinates/package-info
net/minecraft/server/Clearable net/minecraft/world/Clearable
	a (Ljava/lang/Object;)V tryClear
	clear ()V clearContent
net/minecraft/server/StatisticList net/minecraft/stats/Stats
	a (Ljava/lang/String;Lnet/minecraft/server/Counter;)Lnet/minecraft/server/MinecraftKey; makeCustomStat
	a (Ljava/lang/String;Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/StatisticWrapper; makeRegistryStatType
ea net/minecraft/commands/arguments/item/package-info
eb net/minecraft/commands/arguments/package-info
net/minecraft/server/ArgumentChatFormat net/minecraft/commands/arguments/ColorArgument
	a ERROR_INVALID_VALUE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentChatFormat; color
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/EnumChatFormat; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/EnumChatFormat; getColor
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
cvz$1 com/mojang/realmsclient/gui/RealmsDataFetcher$1
	a $SwitchMap$com$mojang$realmsclient$gui$RealmsDataFetcher$Task
ef net/minecraft/commands/arguments/selector/options/package-info
eg net/minecraft/commands/arguments/selector/package-info
eh net/minecraft/commands/exceptions/package-info
ei net/minecraft/commands/package-info
net/minecraft/server/TicketType net/minecraft/server/level/TicketType
	i name
	j comparator
	loadPeriod timeout
	a ()Ljava/util/Comparator; getComparator
	a (Ljava/lang/String;Ljava/util/Comparator;)Lnet/minecraft/server/TicketType; create
	a (Ljava/lang/String;Ljava/util/Comparator;I)Lnet/minecraft/server/TicketType; create
	a (Lnet/minecraft/server/Unit;Lnet/minecraft/server/Unit;)I lambda$static$1
	b ()J timeout
	b (Lnet/minecraft/server/Unit;Lnet/minecraft/server/Unit;)I lambda$static$0
net/minecraft/server/EntitySpider$PathfinderGoalSpiderMeleeAttack net/minecraft/world/entity/monster/Spider$SpiderAttackGoal
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
	b ()Z canContinueToUse
wb$2 net/minecraft/server/network/ServerConnectionListener$2
	a this$0
net/minecraft/server/ItemHorseArmor net/minecraft/world/item/HorseArmorItem
	a protection
	b texture
	d ()Lnet/minecraft/server/MinecraftKey; getTexture
	e ()I getProtection
cvi$13 com/mojang/realmsclient/RealmsMainScreen$9
	a this$0
wb$1 net/minecraft/server/network/ServerConnectionListener$1
	a this$0
et net/minecraft/commands/synchronization/brigadier/package-info
cwl$1 com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen$1
	a this$0
eu net/minecraft/commands/synchronization/package-info
cvi$11 com/mojang/realmsclient/RealmsMainScreen$7
	a this$0
cvi$12 com/mojang/realmsclient/RealmsMainScreen$8
	a this$0
net/minecraft/server/BlockStemAttached net/minecraft/world/level/block/AttachedStemBlock
	a FACING
	b fruit
	c AABBS
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	b ()Lnet/minecraft/server/Item; getSeedItem
cvi$10 com/mojang/realmsclient/RealmsMainScreen$6
	a this$0
doo$a net/minecraft/client/renderer/block/model/Variant$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldoo; deserialize
	a (Lcom/google/gson/JsonObject;)Ldyq; getBlockRotation
	b (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/MinecraftKey; getModel
	c (Lcom/google/gson/JsonObject;)I getWeight
	d (Lcom/google/gson/JsonObject;)Z getUvLock
net/minecraft/server/ChatMessageException net/minecraft/network/chat/TranslatableFormatException
cqs$1 net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$1
net/minecraft/server/ItemPotion net/minecraft/world/item/PotionItem
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbdr;)V appendHoverText
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
	e_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	f (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; getDescriptionId
	f_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
	q ()Lnet/minecraft/server/ItemStack; getDefaultInstance
net/minecraft/server/DataConverterEntityNameAbstract net/minecraft/util/datafix/fixes/SimpleEntityRenameFix
	a (Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
cre$a net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionDamageSourceProperties; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionDamageSourceProperties;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
net/minecraft/server/BlockChorusFruit net/minecraft/world/level/block/ChorusPlantBlock
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
q$1 net/minecraft/advancements/Advancement$1
net/minecraft/server/EntitySlime$PathfinderGoalSlimeIdle net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal
	a slime
	a ()Z canUse
	e ()V tick
net/minecraft/server/EULA net/minecraft/server/Eula
	a LOGGER
	b file
	c agreed
	a ()Z hasAgreedToEULA
	b ()Z readFile
	c ()V saveDefaults
net/minecraft/server/CriterionTriggerLevitation net/minecraft/advancements/critereon/LevitationTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Vec3D;I)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbf$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
cvi$8 com/mojang/realmsclient/RealmsMainScreen$4
	a this$0
net/minecraft/server/AdvancementRewards net/minecraft/advancements/AdvancementRewards
	a EMPTY
	b experience
	c loot
	d recipes
	e function
	a ()[Lnet/minecraft/server/MinecraftKey; getRecipes
	a (Lnet/minecraft/server/EntityPlayer;)V grant
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/CustomFunction;)V lambda$grant$0
	b ()Lcom/google/gson/JsonElement; serializeToJson
cvi$9 com/mojang/realmsclient/RealmsMainScreen$5
	a this$0
net/minecraft/server/PacketSplitter net/minecraft/network/Varint21FrameDecoder
cvz$e com/mojang/realmsclient/gui/RealmsDataFetcher$TrialAvailabilityTask
	a this$0
	a ()V getTrialAvailable
cvi$6 com/mojang/realmsclient/RealmsMainScreen$2
	a this$0
cvz$f com/mojang/realmsclient/gui/RealmsDataFetcher$UnreadNewsTask
	a this$0
	a ()V getUnreadNews
cvi$7 com/mojang/realmsclient/RealmsMainScreen$3
	a this$0
net/minecraft/server/PacketPlayOutEntityMetadata net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket
	a id
	b packedItems
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/List; getUnpackedData
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getId
net/minecraft/server/MaterialPredicate net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate
	a AIR
	b material
	a (Lnet/minecraft/server/IBlockData;)Z test
	a (Lnet/minecraft/server/Material;)Lnet/minecraft/server/MaterialPredicate; forMaterial
net/minecraft/server/Schedule net/minecraft/world/entity/schedule/Schedule
	e timelines
	a (I)Lnet/minecraft/server/Activity; getActivityAt
	a (ILjava/util/Map$Entry;)D lambda$getActivityAt$1
	a (Ljava/lang/String;)Lnet/minecraft/server/ScheduleBuilder; register
	a (Lnet/minecraft/server/Activity;)V ensureTimelineExistsFor
	a (Lnet/minecraft/server/Activity;Ljava/util/Map$Entry;)Z lambda$getAllTimelinesExceptFor$0
	b (Lnet/minecraft/server/Activity;)Lnet/minecraft/server/ScheduleActivity; getTimelineFor
	c (Lnet/minecraft/server/Activity;)Ljava/util/List; getAllTimelinesExceptFor
bsw$1 net/minecraft/world/level/block/TripWireHookBlock$1
	a $SwitchMap$net$minecraft$core$Direction
cvi$1 com/mojang/realmsclient/RealmsMainScreen$1
	a this$0
net/minecraft/server/EntitySnowman net/minecraft/world/entity/animal/SnowGolem
	b DATA_PUMPKIN_ID
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$mobInteract$1
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$0
	k ()V aiStep
	n ()V registerGoals
	setHasPumpkin (Z)V setPumpkin
	u_ ()V defineSynchedData
net/minecraft/server/NonNullList net/minecraft/core/NonNullList
	a list
	b defaultValue
	a ()Lnet/minecraft/server/NonNullList; create
	a (ILjava/lang/Object;)Lnet/minecraft/server/NonNullList; withSize
	a (Ljava/lang/Object;[Ljava/lang/Object;)Lnet/minecraft/server/NonNullList; of
net/minecraft/server/ISource net/minecraft/core/Location
	getWorld ()Lnet/minecraft/server/World; getLevel
fr net/minecraft/core/Source
cvz$c com/mojang/realmsclient/gui/RealmsDataFetcher$ServerListUpdateTask
	a this$0
	a ()V updateServersList
cvi$4 com/mojang/realmsclient/RealmsMainScreen$12
	a this$0
cvz$d com/mojang/realmsclient/gui/RealmsDataFetcher$Task
	a SERVER_LIST
	b PENDING_INVITE
	c TRIAL_AVAILABLE
	d LIVE_STATS
	e UNREAD_NEWS
	f $VALUES
cvi$5 com/mojang/realmsclient/RealmsMainScreen$13
	a this$0
cvz$a com/mojang/realmsclient/gui/RealmsDataFetcher$LiveStatsTask
	a this$0
	a ()V getLiveStats
cvi$2 com/mojang/realmsclient/RealmsMainScreen$10
	a this$0
cvz$b com/mojang/realmsclient/gui/RealmsDataFetcher$PendingInviteUpdateTask
	a this$0
	a ()V updatePendingInvites
cvi$3 com/mojang/realmsclient/RealmsMainScreen$11
	a this$0
cqb$b net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEnchantLevel; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEnchantLevel;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/WorldGenFeatureKelpConfiguration net/minecraft/world/level/levelgen/feature/CountFeatureConfiguration
	a count
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureKelpConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
dbz$a net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList
	a this$0
	a (Ldbz$a$a;)V setSelected
	a (Ldbz$a;)I access$200
cqb$a net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder
	a levels
	b treasure
	a ()Lcqb$a; getThis
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcqg$a; getThis
	e ()Lcqb$a; allowTreasure
net/minecraft/server/EntityPositionTypes net/minecraft/world/entity/SpawnPlacements
	a DATA_BY_TYPE
	a (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/EntityPositionTypes$Surface; getPlacementType
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/EntityPositionTypes$Surface;Lnet/minecraft/server/HeightMap$Type;Lajk$b;)V register
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkSpawnRules
	b (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/HeightMap$Type; getHeightmapType
ga net/minecraft/core/dispenser/package-info
gb net/minecraft/core/package-info
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPieceWeight net/minecraft/world/level/levelgen/structure/StrongholdPieces$PieceWeight
	a pieceClass
	b weight
	c placeCount
	d maxPlaceCount
	a ()Z isValid
	a (I)Z doPlace
gj net/minecraft/core/particles/package-info
gk net/minecraft/data/DataGenerator
	a LOGGER
	b inputFolders
	c outputFolder
	d providers
	a ()Ljava/util/Collection; getInputFolders
	a (Lgl;)V addProvider
	b ()Ljava/nio/file/Path; getOutputFolder
	c ()V run
gl net/minecraft/data/DataProvider
	a SHA1
	a ()Ljava/lang/String; getName
	a (Lcom/google/gson/Gson;Lgm;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)V save
	a (Lgm;)V run
gm net/minecraft/data/HashCache
	a LOGGER
	b path
	c cachePath
	d hits
	e oldCache
	f newCache
	g keep
	a ()V purgeStaleAndWrite
	a (Ljava/nio/file/Path;)Ljava/lang/String; getHash
	a (Ljava/nio/file/Path;Ljava/lang/String;)V putNew
	a (Ljava/util/Map$Entry;)Ljava/lang/String; lambda$purgeStaleAndWrite$2
	b ()V removeStale
	b (Ljava/nio/file/Path;)Z had
	b (Ljava/nio/file/Path;Ljava/lang/String;)V lambda$new$1
	c ()Ljava/util/stream/Stream; walkOutputFiles
	c (Ljava/nio/file/Path;)V keep
	d (Ljava/nio/file/Path;)Z lambda$walkOutputFiles$4
	e (Ljava/nio/file/Path;)V lambda$removeStale$3
	f (Ljava/nio/file/Path;)V lambda$new$0
cqb$1 net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$1
net/minecraft/server/EnumDragonRespawn net/minecraft/world/level/dimension/end/DragonRespawnAnimation
	f $VALUES
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EnderDragonBattle;Ljava/util/List;ILnet/minecraft/server/BlockPosition;)V tick
gn net/minecraft/data/advancements/AdvancementProvider
	b LOGGER
	c GSON
	d generator
	e tabs
	a ()Ljava/lang/String; getName
	a (Lgm;)V run
	a (Ljava/nio/file/Path;Lnet/minecraft/server/Advancement;)Ljava/nio/file/Path; createPath
	a (Ljava/util/Set;Ljava/nio/file/Path;Lgm;Lnet/minecraft/server/Advancement;)V lambda$run$0
net/minecraft/server/LootCollector net/minecraft/world/level/storage/loot/LootTableProblemCollector
	a problems
	b context
	c contextCache
	a ()Lcom/google/common/collect/Multimap; getProblems
	a (Ljava/lang/String;)V reportProblem
	b ()Ljava/lang/String; getContext
	b (Ljava/lang/String;)Lnet/minecraft/server/LootCollector; forChild
	c ()Ljava/lang/String; lambda$new$0
	c (Ljava/lang/String;)Ljava/lang/String; lambda$forChild$1
go net/minecraft/data/advancements/AdventureAdvancements
	a EXPLORABLE_BIOMES
	b MOBS_TO_KILL
	a (Ljava/util/function/Consumer;)V accept
	a (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addMobsToKill
	b (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addBiomes
gp net/minecraft/data/advancements/HusbandryAdvancements
	a BREEDABLE_ANIMALS
	b FISH
	c FISH_BUCKETS
	d EDIBLE_ITEMS
	a (Ljava/util/function/Consumer;)V accept
	a (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addFood
	a (Lnet/minecraft/server/Advancement$SerializedAdvancement;Ljava/lang/Integer;Lnet/minecraft/server/MinecraftKey;)V lambda$addCatVariants$0
	b (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addBreedable
	c (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addFishBuckets
	d (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addFish
	e (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addCatVariants
gq net/minecraft/data/advancements/NetherAdvancements
	a (Ljava/util/function/Consumer;)V accept
cqs$a net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder
	a effectDurationMap
	a ()Lcqs$a; getThis
	a (Lnet/minecraft/server/MobEffectList;Lnet/minecraft/server/LootValueBounds;)Lcqs$a; withEffect
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcqg$a; getThis
gr net/minecraft/data/advancements/StoryAdvancements
	a (Ljava/util/function/Consumer;)V accept
cqs$b net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetStewEffect; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetStewEffect;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$deserialize$0
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
avm$1 net/minecraft/world/entity/monster/Zombie$1
gs net/minecraft/data/advancements/TheEndAdvancements
	a (Ljava/util/function/Consumer;)V accept
net/minecraft/server/DataConverterCoral net/minecraft/util/datafix/fixes/RenamedCoralFix
	a RENAMED_IDS
gt net/minecraft/data/advancements/package-info
net/minecraft/server/BossBattleServer net/minecraft/server/level/ServerBossEvent
	h players
	i unmodifiablePlayers
	a (Lnet/minecraft/server/BossBattle$BarColor;)V setColor
	a (Lnet/minecraft/server/BossBattle$BarStyle;)V setOverlay
	a (Lnet/minecraft/server/IChatBaseComponent;)V setName
	b ()V removeAllPlayers
	g ()Z isVisible
	sendUpdate (Lnet/minecraft/server/PacketPlayOutBoss$Action;)V broadcast
	setCreateFog (Z)Lnet/minecraft/server/BossBattle; setCreateWorldFog
	setDarkenSky (Z)Lnet/minecraft/server/BossBattle; setDarkenScreen
	setPlayMusic (Z)Lnet/minecraft/server/BossBattle; setPlayBossMusic
	setProgress (F)V setPercent
gu net/minecraft/data/info/BlockListReport
	b GSON
	c generator
	a ()Ljava/lang/String; getName
	a (Lgm;)V run
ew$3 net/minecraft/core/BlockPos$3
	a $SwitchMap$net$minecraft$world$level$block$Rotation
net/minecraft/server/PacketPlayOutLightUpdate net/minecraft/network/protocol/game/ClientboundLightUpdatePacket
	a x
	b z
	c skyYMask
	d blockYMask
	e emptySkyYMask
	f emptyBlockYMask
	g skyUpdates
	h blockUpdates
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getZ
	d ()I getSkyYMask
	e ()I getEmptySkyYMask
	f ()Ljava/util/List; getSkyUpdates
	g ()I getBlockYMask
	h ()I getEmptyBlockYMask
	i ()Ljava/util/List; getBlockUpdates
gv net/minecraft/data/info/CommandsReport
	b GSON
	c generator
	a ()Ljava/lang/String; getName
	a (Lgm;)V run
ew$2 net/minecraft/core/BlockPos$2
	a cursor
	b nextPos
	c val$minX
	d val$minY
	e val$minZ
	f val$maxX
	g val$maxY
	h val$maxZ
	a ()Lnet/minecraft/server/BlockPosition; computeNext
net/minecraft/server/PacketPlayInSetCreativeSlot net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket
	b itemStack
	slot slotNum
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getSlotNum
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	getItemStack ()Lnet/minecraft/server/ItemStack; getItem
gw net/minecraft/data/info/RegistryDumpReport
	b GSON
	c generator
	a ()Ljava/lang/String; getName
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/MinecraftKey;)V lambda$run$0
	a (Lgm;)V run
	a (Lnet/minecraft/server/IRegistryWritable;)Lcom/google/gson/JsonElement; dumpRegistry
gx net/minecraft/data/info/package-info
gy net/minecraft/data/loot/BlockLoot
	a HAS_SILK_TOUCH
	b HAS_NO_SILK_TOUCH
	c HAS_SHEARS
	d HAS_SHEARS_OR_SILK_TOUCH
	e HAS_NO_SHEARS_OR_SILK_TOUCH
	f EXPLOSION_RESISTANT
	g NORMAL_LEAVES_SAPLING_CHANCES
	h JUNGLE_LEAVES_SAPLING_CHANGES
	i map
	A (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$59
	B (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$58
	C (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$57
	D (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$56
	E (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$55
	F (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$50
	G (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$49
	H (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$48
	I (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$47
	J (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$46
	K (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$45
	L (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$44
	M (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$43
	N (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$42
	O (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$41
	P (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$40
	Q (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$39
	R (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$38
	S (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$37
	T (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$36
	U (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$35
	V (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$34
	W (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$33
	X (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$32
	Y (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$31
	Z (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$30
	a ()Lcpb$a; noDrop
	a (Lcrk$a;Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$54
	a (Ljava/util/function/BiConsumer;)V accept
	a (Lnet/minecraft/server/Block;)V dropPottedContents
	a (Lnet/minecraft/server/Block;Lcpb$a;)V add
	a (Lnet/minecraft/server/Block;Lcpq$a;)Lcpb$a; createSilkTouchDispatchTable
	a (Lnet/minecraft/server/Block;Lcrk$a;Lcpq$a;)Lcpb$a; createSelfDropDispatchTable
	a (Lnet/minecraft/server/Block;Ljava/util/function/Function;)V add
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)V otherWhenSilkTouch
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;[F)Lcpb$a; createLeavesDrops
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Lcpb$a; createSinglePropConditionTable
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/IMaterial;)V dropOther
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/LootValue;)Lcpb$a; createSingleItemTableWithSilkTouch
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Item;)Lcpb$a; createOreDrop
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Item;Lnet/minecraft/server/Item;Lcrk$a;)Lcpb$a; createCropDrops
	a (Lnet/minecraft/server/IMaterial;)Lcpb$a; createSingleItemTable
	a (Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/LootItemConditionUser;)Ljava/lang/Object; applyExplosionCondition
	a (Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/LootItemFunctionUser;)Ljava/lang/Object; applyExplosionDecay
	a (Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/LootValue;)Lcpb$a; createSingleItemTable
	aA (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$3
	aB (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$2
	aC (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$1
	aD (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$0
	aa (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$29
	ab (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$28
	ac (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$27
	ad (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$26
	ae (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$25
	af (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$24
	ag (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$23
	ah (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$22
	ai (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$21
	aj (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$20
	ak (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$19
	al (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$18
	am (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$17
	an (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$16
	ao (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$15
	ap (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$14
	aq (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$13
	ar (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$12
	as (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$11
	at (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$10
	au (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$9
	av (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$8
	aw (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$7
	ax (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$6
	ay (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$5
	az (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$4
	b (Lcrk$a;Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$53
	b (Lnet/minecraft/server/Block;)V dropWhenSilkTouch
	b (Lnet/minecraft/server/Block;Lcpq$a;)Lcpb$a; createShearsDispatchTable
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;[F)Lcpb$a; createOakLeavesDrops
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/IMaterial;)Lcpb$a; createSingleItemTableWithSilkTouch
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/Item;)Lcpb$a; createStemDrops
	b (Lnet/minecraft/server/IMaterial;)Lcpb$a; createSilkTouchOnlyTable
	c (Lcrk$a;Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$52
	c (Lnet/minecraft/server/Block;)V dropSelf
	c (Lnet/minecraft/server/Block;Lcpq$a;)Lcpb$a; createSilkTouchOrShearsDispatchTable
	c (Lnet/minecraft/server/Block;Lnet/minecraft/server/IMaterial;)Lcpb$a; createMushroomBlockDrop
	c (Lnet/minecraft/server/IMaterial;)Lcpb$a; createPotFlowerItemTable
	d (Lcrk$a;Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$51
	d (Lnet/minecraft/server/Block;)Lcpb$a; createSlabItemTable
	d (Lnet/minecraft/server/IMaterial;)Lcpb$a; createShearsOnlyDrop
	e (Lnet/minecraft/server/Block;)Lcpb$a; createNameableBlockEntityTable
	f (Lnet/minecraft/server/Block;)Lcpb$a; createShulkerBoxDrop
	g (Lnet/minecraft/server/Block;)Lcpb$a; createBannerDrop
	h (Lnet/minecraft/server/Block;)Lcpb$a; createGrassDrops
	i (Lnet/minecraft/server/Block;)Lcpb$a; lambda$dropPottedContents$77
	j (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$76
	k (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$75
	l (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$74
	m (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$73
	n (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$72
	o (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$71
	p (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$70
	q (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$69
	r (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$68
	s (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$67
	t (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$66
	u (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$65
	v (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$64
	w (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$63
	x (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$62
	y (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$61
	z (Lnet/minecraft/server/Block;)Lcpb$a; lambda$accept$60
net/minecraft/server/IpBanList net/minecraft/server/players/IpBanList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/JsonListEntry; createEntry
	a (Ljava/lang/String;)Z isBanned
	c (Ljava/net/SocketAddress;)Ljava/lang/String; getIpFromAddress
gz net/minecraft/data/loot/ChestLoot
	a (Ljava/util/function/BiConsumer;)V accept
net/minecraft/server/BlockLever net/minecraft/world/level/block/LeverBlock
	b NORTH_AABB
	c SOUTH_AABB
	d WEST_AABB
	e EAST_AABB
	f UP_AABB_Z
	g UP_AABB_X
	h DOWN_AABB_Z
	i DOWN_AABB_X
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;F)V makeParticle
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V updateNeighbours
	h (Lnet/minecraft/server/IBlockData;)Z isSignalSource
ha net/minecraft/data/loot/EntityLoot
	a ENTITY_ON_FIRE
	b SPECIAL_LOOT_TABLE_TYPES
	c map
	a (Ljava/util/function/BiConsumer;)V accept
	a (Lnet/minecraft/server/EntityTypes;Lcpb$a;)V add
	a (Lnet/minecraft/server/IMaterial;)Lcpb$a; createSheepTable
	a (Lnet/minecraft/server/MinecraftKey;Lcpb$a;)V add
	a (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$0
cep$1 net/minecraft/world/level/levelgen/feature/SpikeFeature$1
net/minecraft/server/LootItemFunctionExplorationMap net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction
	a DEFAULT_DECORATION
	c LOGGER
	d destination
	e mapDecoration
	f zoom
	g searchRadius
	h skipKnownStructures
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionExplorationMap;)Ljava/lang/String; access$100
	b ()Lcqc$a; makeExplorationMap
	b (Lnet/minecraft/server/LootItemFunctionExplorationMap;)Lnet/minecraft/server/MapIcon$Type; access$200
	c ()Lorg/apache/logging/log4j/Logger; access$600
	c (Lnet/minecraft/server/LootItemFunctionExplorationMap;)B access$300
	d (Lnet/minecraft/server/LootItemFunctionExplorationMap;)I access$400
	e (Lnet/minecraft/server/LootItemFunctionExplorationMap;)Z access$500
net/minecraft/server/BlockRepeater net/minecraft/world/level/block/RepeaterBlock
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isLocked
	j (Lnet/minecraft/server/IBlockData;)I getDelay
	q (Lnet/minecraft/server/IBlockData;)Z isAlternateInput
hb net/minecraft/data/loot/FishingLoot
	a IN_JUNGLE
	b IN_JUNGLE_HILLS
	c IN_JUNGLE_EDGE
	d IN_BAMBOO_JUNGLE
	e IN_MODIFIED_JUNGLE
	f IN_MODIFIED_JUNGLE_EDGE
	g IN_BAMBOO_JUNGLE_HILLS
	a (Ljava/util/function/BiConsumer;)V accept
	a (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$0
hc net/minecraft/data/loot/GiftLoot
	a (Ljava/util/function/BiConsumer;)V accept
	a (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$12
	b (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$11
	c (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$10
	d (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$9
	e (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$8
	f (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$7
	g (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$6
	h (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$5
	i (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$4
	j (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$3
	k (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$2
	l (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$1
	m (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$0
net/minecraft/server/ContainerStonecutter net/minecraft/world/inventory/StonecutterMenu
	c validItems
	containerAccess access
	containerProperty selectedRecipeIndex
	d inputSlot
	e resultSlot
	inventory container
	j recipes
	k input
	l lastSoundTime
	m slotUpdateListener
	resultInventory resultContainer
	world level
	a ()Lnet/minecraft/server/Containers; getType
	a (Ljava/lang/Runnable;)V registerUpdateListener
	a (Lnet/minecraft/server/ContainerStonecutter;)Ljava/lang/Runnable; access$000
	a (Lnet/minecraft/server/ContainerStonecutter;J)J access$202
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;I)Z clickMenuButton
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$removed$1
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/ItemStack;)V setupRecipeList
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	b (Lnet/minecraft/server/ContainerStonecutter;)V access$100
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	c (Lnet/minecraft/server/ContainerStonecutter;)J access$200
	e ()I getSelectedRecipeIndex
	f ()Ljava/util/List; getRecipes
	g ()I getNumRecipes
	h ()Z hasInputItem
	i ()V setupResultSlot
	j ()V lambda$new$0
hd net/minecraft/data/loot/LootTableProvider
	b LOGGER
	c GSON
	d generator
	e subProviders
	a ()Ljava/lang/String; getName
	a (Lgm;)V run
	a (Ljava/lang/String;Ljava/lang/String;)V lambda$run$3
	a (Ljava/nio/file/Path;Lgm;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/LootTable;)V lambda$run$4
	a (Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; createPath
	a (Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V lambda$run$1
	a (Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;Lnet/minecraft/server/MinecraftKey;Lcpb$a;)V lambda$null$0
	a (Lnet/minecraft/server/LootCollector;Ljava/util/Map;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/LootTable;)V lambda$run$2
he net/minecraft/data/loot/package-info
hf net/minecraft/data/package-info
wb$a net/minecraft/server/network/ServerConnectionListener$LatencySimulator
	a TIMER
	b delay
	a (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V delayDownstream
	a (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/util/Timeout;)V lambda$delayDownstream$0
hg net/minecraft/data/recipes/FinishedRecipe
	a ()Lcom/google/gson/JsonObject; serializeRecipe
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
hh net/minecraft/data/recipes/RecipeProvider
	b LOGGER
	c GSON
	d generator
	a ()Ljava/lang/String; getName
	a (Lgm;)V run
	a (Lgm;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V saveRecipe
	a (Ljava/util/Set;Lgm;Ljava/nio/file/Path;Lhg;)V lambda$run$0
	a (Ljava/util/function/Consumer;)V buildShapelessRecipes
	a (Ljava/util/function/Consumer;Ljava/lang/String;Lnet/minecraft/server/RecipeSerializerCooking;I)V cookRecipes
	a (Lnet/minecraft/server/Block;)Lar$b; insideOf
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;Lnet/minecraft/server/IMaterial;)Lba$b; has
	a (Lnet/minecraft/server/IMaterial;)Lba$b; has
	a (Lnet/minecraft/server/Tag;)Lba$b; has
	a ([Lnet/minecraft/server/CriterionConditionItem;)Lba$b; inventoryTrigger
	b (Lgm;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V saveAdvancement
hi net/minecraft/data/recipes/ShapedRecipeBuilder
	a LOGGER
	b result
	c count
	d rows
	e key
	f advancement
	g group
	a (Ljava/lang/Character;Lnet/minecraft/server/IMaterial;)Lhi; define
	a (Ljava/lang/Character;Lnet/minecraft/server/RecipeItemStack;)Lhi; define
	a (Ljava/lang/Character;Lnet/minecraft/server/Tag;)Lhi; define
	a (Ljava/lang/String;)Lhi; pattern
	a (Ljava/lang/String;Lnet/minecraft/server/CriterionInstance;)Lhi; unlocks
	a (Ljava/util/function/Consumer;)V save
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/MinecraftKey;)V save
	a (Lnet/minecraft/server/IMaterial;)Lhi; shaped
	a (Lnet/minecraft/server/IMaterial;I)Lhi; shaped
	a (Lnet/minecraft/server/MinecraftKey;)V ensureValid
	b (Ljava/lang/String;)Lhi; group
hj net/minecraft/data/recipes/ShapelessRecipeBuilder
	a LOGGER
	b result
	c count
	d ingredients
	e advancement
	f group
	a (Ljava/lang/String;)Lhj; group
	a (Ljava/lang/String;Lnet/minecraft/server/CriterionInstance;)Lhj; unlocks
	a (Ljava/util/function/Consumer;)V save
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/MinecraftKey;)V save
	a (Lnet/minecraft/server/IMaterial;)Lhj; shapeless
	a (Lnet/minecraft/server/IMaterial;I)Lhj; shapeless
	a (Lnet/minecraft/server/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/server/RecipeItemStack;)Lhj; requires
	a (Lnet/minecraft/server/RecipeItemStack;I)Lhj; requires
	a (Lnet/minecraft/server/Tag;)Lhj; requires
	b (Lnet/minecraft/server/IMaterial;)Lhj; requires
	b (Lnet/minecraft/server/IMaterial;I)Lhj; requires
net/minecraft/server/LootItemFunctionSetTag net/minecraft/world/level/storage/loot/functions/SetNbtFunction
	a tag
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionSetTag;)Lnet/minecraft/server/NBTTagCompound; access$000
	a (Lnet/minecraft/server/NBTTagCompound;)Lcqg$a; setTag
	a (Lnet/minecraft/server/NBTTagCompound;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$setTag$0
net/minecraft/server/EntitySlice net/minecraft/util/ClassInstanceMultiMap
	a byClass
	b baseClass
	c allInstances
	a (Ljava/lang/Class;)Ljava/util/Collection; find
	b (Ljava/lang/Class;)Ljava/util/List; lambda$find$0
hk net/minecraft/data/recipes/SimpleCookingRecipeBuilder
	a result
	b ingredient
	c experience
	d cookingTime
	e advancement
	f group
	g serializer
	a (Ljava/lang/String;)Lhk; group
	a (Ljava/lang/String;Lnet/minecraft/server/CriterionInstance;)Lhk; unlocks
	a (Ljava/util/function/Consumer;)V save
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/MinecraftKey;)V save
	a (Lnet/minecraft/server/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;FI)Lhk; campfireCooking
	a (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;FILnet/minecraft/server/RecipeSerializerCooking;)Lhk; cooking
	b (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;FI)Lhk; blasting
	c (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;FI)Lhk; smelting
	d (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;FI)Lhk; smoking
hl net/minecraft/data/recipes/SingleItemRecipeBuilder
	a result
	b ingredient
	c count
	d advancement
	e group
	f type
	a (Ljava/lang/String;)Lhl; group
	a (Ljava/lang/String;Lnet/minecraft/server/CriterionInstance;)Lhl; unlocks
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/MinecraftKey;)V save
	a (Lnet/minecraft/server/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;)Lhl; stonecutting
	a (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;I)Lhl; stonecutting
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPieceWeight net/minecraft/world/level/levelgen/structure/NetherBridgePieces$PieceWeight
	a pieceClass
	b weight
	c placeCount
	d maxPlaceCount
	e allowInRow
	a ()Z isValid
	a (I)Z doPlace
hm net/minecraft/data/recipes/SpecialRecipeBuilder
	a serializer
	a (Lhm;)Lnet/minecraft/server/RecipeSerializerComplex; access$000
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Lnet/minecraft/server/RecipeSerializerComplex;)Lhm; special
hn net/minecraft/data/recipes/package-info
ho net/minecraft/data/structures/NbtToSnbt
	b LOGGER
	c generator
	a ()Ljava/lang/String; getName
	a (Lgm;)V run
	a (Ljava/nio/file/Path;)Z lambda$run$0
	a (Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)V convertStructure
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V lambda$run$1
hp net/minecraft/data/structures/SnbtToNbt
	b LOGGER
	c generator
	d filters
	a ()Ljava/lang/String; getName
	a (Lgm;)V run
	a (Lgm;Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)V convertStructure
	a (Lgm;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V lambda$run$1
	a (Lhp$a;)Lhp; addFilter
	a (Ljava/lang/String;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; applyFilters
	a (Ljava/nio/file/Path;)Z lambda$run$0
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; getName
hq net/minecraft/data/structures/StructureUpdater
	a (Ljava/lang/String;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; apply
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; patchVersion
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; updateStructure
hr net/minecraft/data/structures/package-info
net/minecraft/server/LootItemFunctionCopyName net/minecraft/world/level/storage/loot/functions/CopyNameFunction
	a source
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionCopyName$Source;)Lcqg$a; copyName
	a (Lnet/minecraft/server/LootItemFunctionCopyName$Source;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$copyName$0
	a (Lnet/minecraft/server/LootItemFunctionCopyName;)Lnet/minecraft/server/LootItemFunctionCopyName$Source; access$000
hs net/minecraft/data/tags/BlockTagsProvider
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; getPath
	a (Lnet/minecraft/server/Tags;)V useTags
	b ()V addTags
ht net/minecraft/data/tags/EntityTypeTagsProvider
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; getPath
	a (Lnet/minecraft/server/Tags;)V useTags
	b ()V addTags
ddo$1 net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen$1
	a $SwitchMap$net$minecraft$world$level$block$entity$CommandBlockEntity$Mode
hu net/minecraft/data/tags/FluidTagsProvider
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; getPath
	a (Lnet/minecraft/server/Tags;)V useTags
	b ()V addTags
hv net/minecraft/data/tags/ItemTagsProvider
	e LOGGER
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; getPath
	a (Lnet/minecraft/server/Tag;Lnet/minecraft/server/Tag;)V copy
	a (Lnet/minecraft/server/Tags;)V useTags
	a (Lzg$b;)Lzg$b; copy
	b ()V addTags
hw net/minecraft/data/tags/TagsProvider
	b generator
	c registry
	d builders
	e LOGGER
	f GSON
	a (Lgm;)V run
	a (Lgm;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/Tag;)V lambda$run$2
	a (Ljava/util/Map$Entry;)Lnet/minecraft/server/MinecraftKey; lambda$run$1
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; getPath
	a (Lnet/minecraft/server/Tag;)Lzg$a; tag
	a (Lnet/minecraft/server/Tags;)V useTags
	b ()V addTags
	b (Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; lambda$run$0
	b (Lnet/minecraft/server/Tag;)Lzg$a; lambda$tag$3
hx net/minecraft/data/tags/package-info
hz net/minecraft/locale/package-info
net/minecraft/server/RecipeCampfire net/minecraft/world/item/crafting/CampfireCookingRecipe
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
net/minecraft/server/DataConverterZombie net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix
	a RANDOM
	a (I)I getVillagerProfession
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/PacketPlayOutEntityDestroy net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket
	a entityIds
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()[I getEntityIds
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/EntityMinecartMobSpawner net/minecraft/world/entity/vehicle/MinecartSpawner
	b spawner
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bT ()Z onlyOpCanSetNbt
	h ()V tick
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	v ()Lnet/minecraft/server/MobSpawnerAbstract; getSpawner
net/minecraft/server/BiomeSunflowerPlains net/minecraft/world/level/biome/SunflowerPlainsBiome
net/minecraft/server/AttributeBase net/minecraft/world/entity/ai/attributes/BaseAttribute
	a parent
	b name
	c defaultValue
	d syncable
	a ()Ljava/lang/String; getName
	a (Z)Lnet/minecraft/server/AttributeBase; setSyncable
	b ()D getDefaultValue
	c ()Z isClientSyncable
	d ()Lnet/minecraft/server/IAttribute; getParentAttribute
net/minecraft/server/BlockPressurePlateAbstract net/minecraft/world/level/block/BasePressurePlateBlock
	a PRESSED_AABB
	b AABB
	c TOUCH_AABB
	S_ ()Z isPossibleToRespawnInThis
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOnSound
	a (Lnet/minecraft/server/IBlockData;I)Lnet/minecraft/server/IBlockData; setSignalForState
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V updateNeighbours
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)V checkPressed
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOffSound
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getSignalStrength
	getPower (Lnet/minecraft/server/IBlockData;)I getSignalForState
	h (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	i (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
net/minecraft/server/BehaviorWalkAwayEntity net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFromEntity
	a memory
	b speed
	a (Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/Entity;F)V moveAwayFromMob
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
der$c net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$NetworkServerEntry
	a minecraft
	b serverData
	c screen
	d lastClickTime
	a ()Lead; getServerData
der$d net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$OnlineServerEntry
	a this$0
	b screen
	c minecraft
	d serverData
	e iconLocation
	f lastIconB64
	g icon
	h lastClickTime
	a ()Ldki; getServerData
	a (IILnet/minecraft/server/MinecraftKey;)V drawIcon
	a (Lder$d;)Ldki; access$000
	b ()Z canJoin
	c ()V loadServerIcon
	d ()V lambda$render$0
net/minecraft/server/ItemSpectralArrow net/minecraft/world/item/SpectralArrowItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityArrow; createArrow
net/minecraft/server/PacketPlayOutWorldBorder$EnumWorldBorderAction net/minecraft/network/protocol/game/ClientboundSetBorderPacket$Type
	g $VALUES
net/minecraft/server/VillagePlaceRecord net/minecraft/world/entity/ai/village/poi/PoiRecord
	a pos
	b poiType
	c freeTickets
	d setDirty
	a ()I getFreeTickets
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	b ()Z acquireTicket
	c ()Z releaseTicket
	d ()Z hasSpace
	e ()Z isOccupied
	f ()Lnet/minecraft/server/BlockPosition; getPos
	g ()Lnet/minecraft/server/VillagePlaceType; getPoiType
abb$1 net/minecraft/util/datafix/fixes/BlockRenameFix$1
	a val$fixBlock
	a (Ljava/lang/String;)Ljava/lang/String; fixBlock
iw net/minecraft/nbt/package-info
net/minecraft/server/LightEngineStorageBlock net/minecraft/world/level/lighting/BlockLightSectionStorage
	d (J)I getLightValue
net/minecraft/server/EntityGiantZombie net/minecraft/world/entity/monster/Giant
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	cl ()V registerAttributes
net/minecraft/server/MobSpawnerPhantom net/minecraft/world/level/levelgen/PhantomSpawner
	a nextTick
	a (Lnet/minecraft/server/WorldServer;ZZ)I tick
net/minecraft/server/LootItem net/minecraft/world/level/storage/loot/entries/LootItem
	c item
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/server/IMaterial;)Lcpr$a; lootTableItem
	a (Lnet/minecraft/server/IMaterial;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; lambda$lootTableItem$0
	a (Lnet/minecraft/server/LootItem;)Lnet/minecraft/server/Item; access$000
net/minecraft/server/PathfinderGoalFollowOwnerParrot net/minecraft/world/entity/ai/goal/FollowOwnerFlyingGoal
	a (Lnet/minecraft/server/BlockPosition;)Z isTeleportFriendlyBlock
der$a net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry
der$b net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$LANHeader
	a minecraft
net/minecraft/server/EntityTameableAnimal net/minecraft/world/entity/TamableAnimal
	bA DATA_OWNERUUID_ID
	bz DATA_FLAGS_ID
	goalSit sitGoal
	B_ ()Lnet/minecraft/server/Entity; getOwner
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z wantsToAttack
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bo ()Lnet/minecraft/server/ScoreboardTeamBase; getTeam
	c (Lnet/minecraft/server/EntityLiving;)Z canAttack
	dW ()V reassessTameGoals
	getGoalSit ()Lnet/minecraft/server/PathfinderGoalSit; getSitGoal
	h (Lnet/minecraft/server/EntityLiving;)Z isOwnedBy
	isTamed ()Z isTame
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
	r (Z)V spawnTamingParticles
	setTamed (Z)V setTame
	u_ ()V defineSynchedData
dtv$1 net/minecraft/client/renderer/entity/ShulkerRenderer$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/WorldGenCanyon net/minecraft/world/level/levelgen/carver/CanyonWorldCarver
	m rs
	a (DDDI)Z skip
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenCarverConfiguration;)Z isStartChunk
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenFeatureConfigurationChance;)Z isStartChunk
	a (Lnet/minecraft/server/IChunkAccess;JIIIDDDFFFIIDLjava/util/BitSet;)V genCanyon
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/server/WorldGenCarverConfiguration;)Z carve
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/server/WorldGenFeatureConfigurationChance;)Z carve
cre$1 net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$1
crv$a net/minecraft/world/level/timers/FunctionCallback$Serializer
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallback; deserialize
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/CustomFunctionCallback;)V serialize
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/CustomFunctionCallbackTimer;)V serialize
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallbackTimer; deserialize
net/minecraft/server/BlockSmoker net/minecraft/world/level/block/SmokerBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V openContainer
net/minecraft/server/DataConverterFlattenData net/minecraft/util/datafix/fixes/BlockStateData
	a LOGGER
	b MAP
	c ID_BY_OLD
	d ID_BY_OLD_NAME
	a (I)Ljava/lang/String; upgradeBlock
	a (ILjava/lang/String;[Ljava/lang/String;)V register
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; upgradeBlockStateTag
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$1
	a (Ljava/lang/String;)Ljava/lang/String; upgradeBlock
	b (I)Lcom/mojang/datafixers/Dynamic; getTag
	b (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$0
	b (Ljava/lang/String;)Lcom/mojang/datafixers/Dynamic; parse
net/minecraft/server/BiomeMegaTaigaHills net/minecraft/world/level/biome/GiantTreeTaigaHillsBiome
ka net/minecraft/network/chat/package-info
kb net/minecraft/network/package-info
net/minecraft/server/BlockPoweredRail net/minecraft/world/level/block/PoweredRailBlock
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V updateState
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;ZI)Z findPoweredRailSignal
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ZILnet/minecraft/server/BlockPropertyTrackPosition;)Z isSameRailWithPower
	e ()Lnet/minecraft/server/IBlockState; getShapeProperty
net/minecraft/server/PathfinderGoalOwnerHurtByTarget net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal
	a tameAnimal
	b ownerLastHurtBy
	c timestamp
	a ()Z canUse
	c ()V start
net/minecraft/server/CriterionTriggerCuredZombieVillager net/minecraft/advancements/critereon/CuredZombieVillagerTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityZombie;Lnet/minecraft/server/EntityVillager;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lak$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/BehaviorPosition net/minecraft/world/entity/ai/behavior/PositionWrapper
	a ()Lnet/minecraft/server/BlockPosition; getPos
	a (Lnet/minecraft/server/EntityLiving;)Z isVisible
	b ()Lnet/minecraft/server/Vec3D; getLookAtPos
net/minecraft/server/VoxelShapeCollision net/minecraft/world/phys/shapes/CollisionContext
	a ()Lnet/minecraft/server/VoxelShapeCollision; empty
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/VoxelShapeCollision; of
	a (Lnet/minecraft/server/Item;)Z isHoldingItem
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/BlockPosition;Z)Z isAbove
	b ()Z isSneaking
net/minecraft/server/PacketPlayInUpdateSign net/minecraft/network/protocol/game/ServerboundSignUpdatePacket
	a pos
	b lines
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()[Ljava/lang/String; getLines
net/minecraft/server/ChunkProviderFlat net/minecraft/world/level/levelgen/FlatLevelSource
	e biomeWrapper
	f phantomSpawner
	g catSpawner
	a (IILnet/minecraft/server/HeightMap$Type;)I getBaseHeight
	a (Lnet/minecraft/server/BiomeBase;Lnet/minecraft/server/StructureGenerator;)Z isBiomeValidStartForStructure
	a (Lnet/minecraft/server/RegionLimitedWorldAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BiomeBase; getDecorationBiome
	a (Lnet/minecraft/server/World;Ljava/lang/String;Lnet/minecraft/server/BlockPosition;IZ)Lnet/minecraft/server/BlockPosition; findNearestMapFeature
	a (Lnet/minecraft/server/WorldServer;ZZ)V tickCustomSpawners
	b ()I getSpawnHeight
	b (Lnet/minecraft/server/BiomeBase;Lnet/minecraft/server/StructureGenerator;)Lnet/minecraft/server/WorldGenFeatureConfiguration; getStructureConfiguration
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/IChunkAccess;)V fillFromNoise
	b (Lnet/minecraft/server/IChunkAccess;)Lnet/minecraft/server/BiomeBase; getCarvingBiome
	c (Lnet/minecraft/server/IChunkAccess;)V buildSurfaceAndBedrock
	g ()Lnet/minecraft/server/BiomeBase; getBiomeFromSettings
net/minecraft/server/ChatComponentContextual net/minecraft/network/chat/ContextAwareComponent
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatBaseComponent; resolve
net/minecraft/server/CriterionTriggerChangedDimension net/minecraft/advancements/critereon/ChangeDimensionTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DimensionManager;Lnet/minecraft/server/DimensionManager;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lag$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
arz$a net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal
	i this$0
	j wolf
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLlama;)Z avoidLlama
	c ()V start
	e ()V tick
net/minecraft/server/WorldGenDecoratorNetherHeight net/minecraft/world/level/levelgen/placement/nether/CountRangeDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureChanceDecoratorCountConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureChanceDecoratorCountConfiguration;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$place$0
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/CriterionConditionEntityEquipment net/minecraft/advancements/critereon/EntityEquipmentPredicate
	a ANY
	b CAPTAIN
	c head
	d chest
	e legs
	f feet
	g mainhand
	h offhand
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionEntityEquipment; fromJson
	a (Lnet/minecraft/server/Entity;)Z matches
net/minecraft/server/EntitySheep net/minecraft/world/entity/animal/Sheep
	bA ITEM_BY_DYE
	bB COLORARRAY_BY_COLOR
	bC eatAnimationTick
	bD eatBlockGoal
	bz DATA_WOOL_ID
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	H ()Lnet/minecraft/server/MinecraftKey; getDefaultLootTable
	L ()V customServerAiStep
	a (B)V handleEntityEvent
	a (Ljava/util/EnumMap;)V lambda$static$0
	a (Ljava/util/Random;)Lnet/minecraft/server/EnumColor; getRandomSheepColor
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityAnimal;Lnet/minecraft/server/EntityAnimal;)Lnet/minecraft/server/EnumColor; getOffspringColor
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EnumColor;)[F getColorArray
	a (Lnet/minecraft/server/EnumColor;Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/InventoryCrafting; makeContainer
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$mobInteract$2
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/RecipeCrafting;)Lnet/minecraft/server/ItemStack; lambda$getOffspringColor$3
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntitySheep; getBreedOffspring
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EnumColor;Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/EnumColor; lambda$getOffspringColor$4
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EnumColor;)[F createSheepColor
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	d (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/EnumColor; lambda$static$1
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	k ()V aiStep
	n ()V registerGoals
	u_ ()V defineSynchedData
	v (F)F getHeadEatPositionScale
	w (F)F getHeadEatAngleScale
	z ()V ate
net/minecraft/server/ProtoChunkTickList net/minecraft/world/level/chunk/ProtoTickList
	a ignore
	b chunkPos
	c toBeTicked
	a ()I size
	a (Ljava/util/stream/Stream;)V addAll
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	a (Lnet/minecraft/server/NextTickListEntry;)V lambda$addAll$0
	a (Lnet/minecraft/server/TickList;Ljava/util/function/Function;)V copyOut
	b ()Lnet/minecraft/server/NBTTagList; save
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
net/minecraft/server/ShapedRecipes net/minecraft/world/item/crafting/ShapedRecipe
	items recipeItems
	key id
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a ()Lnet/minecraft/server/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lcom/google/gson/JsonArray;)[Ljava/lang/String; access$100
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ItemStack; itemFromJson
	a (Ljava/lang/String;)I firstNonSpace
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;IIZ)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/ShapedRecipes;)I access$300
	a ([Ljava/lang/String;)[Ljava/lang/String; shrink
	a ([Ljava/lang/String;Ljava/util/Map;II)Lnet/minecraft/server/NonNullList; access$200
	b (Lcom/google/gson/JsonArray;)[Ljava/lang/String; patternFromJson
	b (Lcom/google/gson/JsonObject;)Ljava/util/Map; access$000
	b (Ljava/lang/String;)I lastNonSpace
	b (Lnet/minecraft/server/ShapedRecipes;)I access$400
	b ([Ljava/lang/String;Ljava/util/Map;II)Lnet/minecraft/server/NonNullList; dissolvePattern
	c ()Lnet/minecraft/server/ItemStack; getResultItem
	c (Lcom/google/gson/JsonObject;)Ljava/util/Map; keyFromJson
	c (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$itemFromJson$0
	c (Lnet/minecraft/server/ShapedRecipes;)Ljava/lang/String; access$500
	d ()Ljava/lang/String; getGroup
	d (Lnet/minecraft/server/ShapedRecipes;)Lnet/minecraft/server/NonNullList; access$600
	e (Lnet/minecraft/server/ShapedRecipes;)Lnet/minecraft/server/ItemStack; access$700
	f ()Lnet/minecraft/server/MinecraftKey; getId
	i ()I getWidth
	j ()I getHeight
net/minecraft/server/CommandWeather net/minecraft/server/commands/WeatherCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I setClear
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	b (Lnet/minecraft/server/CommandListenerWrapper;I)I setRain
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	c (Lnet/minecraft/server/CommandListenerWrapper;I)I setThunder
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/PathfinderGoalRandomFly net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal
	g ()Lnet/minecraft/server/Vec3D; getPosition
	j ()Lnet/minecraft/server/Vec3D; getTreePos
net/minecraft/server/ContainerProperty net/minecraft/world/inventory/DataSlot
	a prevValue
	a ()Lnet/minecraft/server/ContainerProperty; standalone
	a (Lnet/minecraft/server/IContainerProperties;I)Lnet/minecraft/server/ContainerProperty; forContainer
	a ([II)Lnet/minecraft/server/ContainerProperty; shared
	c ()Z checkAndClearUpdateFlag
net/minecraft/server/DataConverterRiding net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix
	a ()Ljava/lang/IllegalStateException; lambda$null$4
	a (Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$cap$6
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$5
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Either; lambda$null$2
	b ()Ljava/lang/IllegalStateException; lambda$null$3
	c ()Ljava/lang/IllegalStateException; lambda$null$1
	d ()Ljava/lang/IllegalStateException; lambda$null$0
dfu$a net/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry
	a this$0
	b minecraft
	c screen
	d summary
	e iconLocation
	f iconFile
	g icon
	h lastClickTime
	a ()V joinWorld
	a (Ldfq;Z)V lambda$recreateWorld$7
	a (Ldfu$a;)Lcor; access$000
	a (Z)V lambda$editWorld$6
	a (ZZ)V lambda$joinWorld$0
	b ()V deleteWorld
	b (Z)V lambda$deleteWorld$4
	c ()V editWorld
	c (Z)V lambda$joinWorld$2
	d ()V recreateWorld
	e ()V loadWorld
	f ()Ldwr; loadServerIcon
	g ()V lambda$recreateWorld$8
	h ()Ljava/lang/String; lambda$null$5
	i ()Ljava/lang/String; lambda$null$3
	j ()V lambda$null$1
baa$2 net/minecraft/world/inventory/StonecutterMenu$2
	a val$access
	b this$0
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$onTake$0
net/minecraft/server/BehaviorSchedule net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/WorldGenDungeons net/minecraft/world/level/levelgen/feature/MonsterRoomFeature
	a LOGGER
	aS MOBS
	aT AIR
	a (Ljava/util/Random;)Lnet/minecraft/server/EntityTypes; randomEntityId
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/DataConverterRegistry net/minecraft/util/datafix/DataFixers
	a SAME
	b SAME_NAMESPACED
	c DATA_FIXER
	a ()Lcom/mojang/datafixers/DataFixer; getDataFixer
	a (Lcom/mojang/datafixers/DataFixerBuilder;)V addFixers
	a (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$23
	b ()Lcom/mojang/datafixers/DataFixer; createFixerUpper
	b (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$22
	c (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$21
	d (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$20
	e (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$19
	f (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$18
	g (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$17
	h (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$16
	i (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$15
	j (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$14
	k (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$13
	l (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$12
	m (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$11
	n (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$10
	o (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$9
	p (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$8
	q (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$7
	r (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$6
	s (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$5
	t (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$4
	u (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$3
	v (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$2
	w (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$1
	x (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$0
net/minecraft/server/LootTables net/minecraft/world/level/storage/loot/BuiltInLootTables
	A JUNGLE_TEMPLE
	B JUNGLE_TEMPLE_DISPENSER
	C IGLOO_CHEST
	D WOODLAND_MANSION
	E UNDERWATER_RUIN_SMALL
	F UNDERWATER_RUIN_BIG
	G BURIED_TREASURE
	H SHIPWRECK_MAP
	I SHIPWRECK_SUPPLY
	J SHIPWRECK_TREASURE
	K PILLAGER_OUTPOST
	L SHEEP_WHITE
	M SHEEP_ORANGE
	N SHEEP_MAGENTA
	O SHEEP_LIGHT_BLUE
	P SHEEP_YELLOW
	Q SHEEP_LIME
	R SHEEP_PINK
	S SHEEP_GRAY
	T SHEEP_LIGHT_GRAY
	U SHEEP_CYAN
	V SHEEP_PURPLE
	W SHEEP_BLUE
	X SHEEP_BROWN
	Y SHEEP_GREEN
	Z SHEEP_RED
	a EMPTY
	aa SHEEP_BLACK
	ab FISHING
	ac FISHING_JUNK
	ad FISHING_TREASURE
	ae FISHING_FISH
	af CAT_MORNING_GIFT
	ag ARMORER_GIFT
	ah BUTCHER_GIFT
	ai CARTOGRAPHER_GIFT
	aj CLERIC_GIFT
	ak FARMER_GIFT
	al FISHERMAN_GIFT
	am FLETCHER_GIFT
	an LEATHERWORKER_GIFT
	ao LIBRARIAN_GIFT
	ap MASON_GIFT
	aq SHEPHERD_GIFT
	ar TOOLSMITH_GIFT
	as WEAPONSMITH_GIFT
	at LOCATIONS
	au IMMUTABLE_LOCATIONS
	b SPAWN_BONUS_CHEST
	c END_CITY_TREASURE
	d SIMPLE_DUNGEON
	e VILLAGE_WEAPONSMITH
	f VILLAGE_TOOLSMITH
	g VILLAGE_ARMORER
	h VILLAGE_CARTOGRAPHER
	i VILLAGE_MASON
	j VILLAGE_SHEPHERD
	k VILLAGE_BUTCHER
	l VILLAGE_FLETCHER
	m VILLAGE_FISHER
	n VILLAGE_TANNERY
	o VILLAGE_TEMPLE
	p VILLAGE_DESERT_HOUSE
	q VILLAGE_PLAINS_HOUSE
	r VILLAGE_TAIGA_HOUSE
	s VILLAGE_SNOWY_HOUSE
	t VILLAGE_SAVANNA_HOUSE
	u ABANDONED_MINESHAFT
	v NETHER_BRIDGE
	w STRONGHOLD_LIBRARY
	x STRONGHOLD_CROSSING
	y STRONGHOLD_CORRIDOR
	z DESERT_PYRAMID
	a ()Ljava/util/Set; all
	a (Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; register
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; register
azh$2 net/minecraft/world/inventory/InventoryMenu$2
	a this$0
	c ()Ljava/lang/String; getNoItemIcon
azh$1 net/minecraft/world/inventory/InventoryMenu$1
	a val$slot
	b this$0
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/EntityHuman;)Z mayPickup
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	c ()Ljava/lang/String; getNoItemIcon
net/minecraft/server/EntityVindicator net/minecraft/world/entity/monster/Vindicator
	b DOOR_BREAKING_PREDICATE
	bz isJohnny
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L ()V customServerAiStep
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityVindicator;)Ljava/util/Random; access$100
	a (Lnet/minecraft/server/EnumDifficulty;)Z lambda$static$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityVindicator;)Z access$200
	b (Lnet/minecraft/server/IChatBaseComponent;)V setCustomName
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	dV ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	dW ()Ljava/util/function/Predicate; access$000
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	l ()Laua$a; getArmPose
	n ()V registerGoals
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
bxd$a net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener
	a worldBorder
	a (Lnet/minecraft/server/WorldBorder;D)V onBorderSizeSet
	a (Lnet/minecraft/server/WorldBorder;DD)V onBorderCenterSet
	a (Lnet/minecraft/server/WorldBorder;DDJ)V onBorderSizeLerping
	a (Lnet/minecraft/server/WorldBorder;I)V onBorderSetWarningTime
	b (Lnet/minecraft/server/WorldBorder;D)V onBorderSetDamagePerBlock
	b (Lnet/minecraft/server/WorldBorder;I)V onBorderSetWarningBlocks
	c (Lnet/minecraft/server/WorldBorder;D)V onBorderSetDamageSafeZOne
net/minecraft/server/CommandDataAccessorTile net/minecraft/server/commands/data/BlockDataAccessor
	a PROVIDER
	b ERROR_NOT_A_BLOCK_ENTITY
	c entity
	d pos
	a ()Lnet/minecraft/server/NBTTagCompound; getData
	a (Lcr$h;DI)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Ljava/lang/String;)Luf$c; lambda$static$0
	a (Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/server/NBTTagCompound;)V setData
	b ()Lnet/minecraft/server/IChatBaseComponent; getModifiedSuccess
	c ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; access$000
net/minecraft/server/WorldGenCaves net/minecraft/world/level/levelgen/carver/CaveWorldCarver
	a ()I getCaveBound
	a (DDDI)Z skip
	a (Ljava/util/Random;)F getThickness
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenCarverConfiguration;)Z isStartChunk
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenFeatureConfigurationChance;)Z isStartChunk
	a (Lnet/minecraft/server/IChunkAccess;JIIIDDDFDLjava/util/BitSet;)V genRoom
	a (Lnet/minecraft/server/IChunkAccess;JIIIDDDFFFIIDLjava/util/BitSet;)V genTunnel
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/server/WorldGenCarverConfiguration;)Z carve
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/server/WorldGenFeatureConfigurationChance;)Z carve
	b ()D getYScale
	b (Ljava/util/Random;)I getCaveY
aio$1 net/minecraft/world/entity/Entity$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
baa$1 net/minecraft/world/inventory/StonecutterMenu$1
	a this$0
	e ()V setChanged
zc$a net/minecraft/tags/EntityTypeTags$Wrapper
	a check
	b actual
	a ()Ljava/util/Collection; getValues
	a (Ljava/lang/Object;)Z contains
	a (Lnet/minecraft/server/EntityTypes;)Z contains
	b ()Ljava/util/Collection; getSource
net/minecraft/server/EntityVex net/minecraft/world/entity/monster/Vex
	b DATA_FLAGS_ID
	bA limitedLifeTicks
	bz hasLimitedLife
	c owner
	d boundOrigin
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (I)V setLimitedLife
	a (IZ)V setVexFlag
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityInsentient;)V setOwner
	a (Lnet/minecraft/server/EntityVex;)Ljava/util/Random; access$000
	a (Lnet/minecraft/server/EnumMoveType;Lnet/minecraft/server/Vec3D;)V move
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aE ()I getLightColor
	aF ()F getBrightness
	b (I)Z getVexFlag
	b (Lnet/minecraft/server/EntityVex;)Lnet/minecraft/server/ControllerMove; access$100
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityVex;)Lnet/minecraft/server/ControllerMove; access$200
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	d (Lnet/minecraft/server/EntityVex;)Ljava/util/Random; access$300
	dV ()Lnet/minecraft/server/BlockPosition; getBoundOrigin
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityVex;)Ljava/util/Random; access$400
	f (Lnet/minecraft/server/EntityVex;)Ljava/util/Random; access$500
	g (Lnet/minecraft/server/BlockPosition;)V setBoundOrigin
	g (Lnet/minecraft/server/EntityVex;)Ljava/util/Random; access$600
	h ()V tick
	h (Lnet/minecraft/server/EntityVex;)Lnet/minecraft/server/ControllerMove; access$700
	i (Lnet/minecraft/server/EntityVex;)Lnet/minecraft/server/EntityInsentient; access$800
	l ()Lnet/minecraft/server/EntityInsentient; getOwner
	n ()V registerGoals
	setCharging (Z)V setIsCharging
	u_ ()V defineSynchedData
net/minecraft/server/ItemAir net/minecraft/world/item/AirItem
	a block
	a ()Ljava/lang/String; getDescriptionId
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbdr;)V appendHoverText
net/minecraft/server/GenLayerSpecial$Special3 net/minecraft/world/level/newbiome/layer/AddEdgeLayer$IntroduceSpecial
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
dan$a net/minecraft/client/gui/components/toasts/ToastComponent$ToastInstance
	a this$0
	b toast
	c animationTime
	d visibleTime
	e visibility
	a ()Ldam; getToast
	a (II)Z render
	a (J)F getVisibility
net/minecraft/server/VillagePlaceSection net/minecraft/world/entity/ai/village/poi/PoiSection
	a LOGGER
	b records
	c byType
	d setDirty
	e isValid
	a ()V clear
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/VillagePlaceRecord;)Ljava/lang/Object; lambda$serialize$6
	a (Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;)V lambda$refresh$8
	a (Ljava/lang/Runnable;Lcom/mojang/datafixers/Dynamic;)V lambda$new$0
	a (Ljava/util/Map$Entry;)Ljava/util/stream/Stream; lambda$getRecords$2
	a (Ljava/util/function/Consumer;)V refresh
	a (Ljava/util/function/Predicate;Ljava/util/Map$Entry;)Z lambda$getRecords$1
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getRecords
	a (Lnet/minecraft/server/BlockPosition;)V remove
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z exists
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;)V add
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;I)Lnet/minecraft/server/VillagePlaceRecord; lambda$null$7
	a (Lnet/minecraft/server/VillagePlaceRecord;)Z add
	a (Lnet/minecraft/server/VillagePlaceType;)Ljava/util/Set; lambda$add$5
	b (Lnet/minecraft/server/BlockPosition;)I getFreeTickets
	b (Lnet/minecraft/server/VillagePlaceType;)Ljava/lang/Object; lambda$add$3
	c (Lnet/minecraft/server/BlockPosition;)Z release
	d (Lnet/minecraft/server/BlockPosition;)Ljava/util/Optional; getType
	e (Lnet/minecraft/server/BlockPosition;)Ljava/lang/Object; lambda$add$4
net/minecraft/server/AttributeModifiable net/minecraft/world/entity/ai/attributes/ModifiableAttributeInstance
	a attributeMap
	b attribute
	c modifiers
	d modifiersByName
	e modifierById
	f baseValue
	g dirty
	h cachedValue
	a ()Lnet/minecraft/server/IAttribute; getAttribute
	a (D)V setBaseValue
	a (Ljava/lang/String;)Ljava/util/Collection; getModifiers
	a (Ljava/util/Collection;)V addModifiers
	a (Ljava/util/UUID;)Lnet/minecraft/server/AttributeModifier; getModifier
	a (Lnet/minecraft/server/AttributeModifier$Operation;)Ljava/util/Collection; getModifiers
	a (Lnet/minecraft/server/AttributeModifier;)Z hasModifier
	b ()D getBaseValue
	b (Ljava/lang/String;)V removeModifiers
	b (Ljava/util/UUID;)V removeModifier
	b (Lnet/minecraft/server/AttributeModifier$Operation;)Ljava/util/Collection; getAppliedModifiers
	b (Lnet/minecraft/server/AttributeModifier;)V addModifier
	c ()Ljava/util/Collection; getModifiers
	c (Ljava/lang/String;)Ljava/util/Set; lambda$addModifier$0
	c (Lnet/minecraft/server/AttributeModifier;)V removeModifier
	d ()V removeModifiers
	e ()D getValue
	f ()V setDirty
	g ()D calculateValue
cou$a net/minecraft/world/level/storage/loot/BinomialDistributionGenerator$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootValueBinomial; deserialize
	a (Lnet/minecraft/server/LootValueBinomial;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/MemoryTarget net/minecraft/world/entity/ai/memory/WalkTarget
	a target
	b speed
	c closeEnoughDist
	a ()Lnet/minecraft/server/BehaviorPosition; getTarget
	b ()F getSpeed
	c ()I getCloseEnoughDist
net/minecraft/server/GenLayerSpecial$Special1 net/minecraft/world/level/newbiome/layer/AddEdgeLayer$CoolWarm
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
cod$1 net/minecraft/world/level/saveddata/maps/MapBanner$1
	a $SwitchMap$net$minecraft$world$item$DyeColor
net/minecraft/server/ItemTippedArrow net/minecraft/world/item/TippedArrowItem
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbdr;)V appendHoverText
	f (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; getDescriptionId
	q ()Lnet/minecraft/server/ItemStack; getDefaultInstance
net/minecraft/server/GenLayerSpecial$Special2 net/minecraft/world/level/newbiome/layer/AddEdgeLayer$HeatIce
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
aua$b net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal
	a this$0
	a ()Z canUse
aua$a net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose
	a CROSSED
	b ATTACKING
	c SPELLCASTING
	d BOW_AND_ARROW
	e CROSSBOW_HOLD
	f CROSSBOW_CHARGE
	g CELEBRATING
	h $VALUES
net/minecraft/server/ILightAccess net/minecraft/world/level/chunk/LightChunkGetter
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;)V onLightUpdate
	c (II)Lnet/minecraft/server/IBlockAccess; getChunkForLighting
	getWorld ()Lnet/minecraft/server/IBlockAccess; getLevel
net/minecraft/server/IIBlockAccess net/minecraft/world/level/BlockAndBiomeGetter
	b (Lnet/minecraft/server/BlockPosition;I)I getLightColor
	f (Lnet/minecraft/server/BlockPosition;)Z canSeeSky
net/minecraft/server/BlockTrapdoor net/minecraft/world/level/block/TrapDoorBlock
	c POWERED
	d WATERLOGGED
	e EAST_OPEN_AABB
	f WEST_OPEN_AABB
	g SOUTH_OPEN_AABB
	h NORTH_OPEN_AABB
	i BOTTOM_AABB
	j TOP_AABB
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)V playSound
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
cik$1 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$1
	a $SwitchMap$net$minecraft$core$Direction
czu$a net/minecraft/client/gui/components/OptionsList$Entry
	a children
	a (IIIFLczg;)V lambda$render$0
	a (Lcyg;ILcyf;)Lczu$a; big
	a (Lcyg;ILcyf;Lcyf;)Lczu$a; small
net/minecraft/server/DataConverterEntityBlockState net/minecraft/util/datafix/fixes/EntityBlockStateFix
	a MAP
	a (Lcom/mojang/datafixers/Dynamic;)Ljava/lang/Integer; lambda$null$8
	a (Lcom/mojang/datafixers/Dynamic;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$updateFallingBlock$10
	a (Lcom/mojang/datafixers/Dynamic;Lcom/mojang/datafixers/util/Unit;)Ljava/lang/Integer; lambda$null$9
	a (Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$updateBlockToBlockState$12
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateFallingBlock
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; updateBlockToBlockState
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateEntity
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Integer; lambda$null$7
	a (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$null$11
	a (Ljava/lang/String;)I getBlockId
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$5
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$4
	b (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$null$6
	c (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	d (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
net/minecraft/server/ChatClickable net/minecraft/network/chat/ClickEvent
	a action
	b value
	a ()Lnet/minecraft/server/ChatClickable$EnumClickAction; getAction
	b ()Ljava/lang/String; getValue
net/minecraft/server/WorldGenDecoratorHeightBiased net/minecraft/world/level/levelgen/placement/CountBiasedRangeDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureChanceDecoratorCountConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureChanceDecoratorCountConfiguration;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$place$0
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/EntityBoat$EnumBoatType net/minecraft/world/entity/vehicle/Boat$Type
	g name
	h planks
	i $VALUES
	a ()Ljava/lang/String; getName
	a (I)Lnet/minecraft/server/EntityBoat$EnumBoatType; byId
	a (Ljava/lang/String;)Lnet/minecraft/server/EntityBoat$EnumBoatType; byName
	b ()Lnet/minecraft/server/Block; getPlanks
net/minecraft/server/LootItemFunctionSetAttribute net/minecraft/world/level/storage/loot/functions/SetAttributesFunction
	a modifiers
	a (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/AttributeModifier$Operation;Lnet/minecraft/server/LootValueBounds;)Lcqk$c; modifier
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionSetAttribute;)Ljava/util/List; access$800
	b ()Lcqk$a; setAttributes
net/minecraft/server/DragonControllerLandedFlame net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase
	b flameTicks
	c flameCount
	d flame
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	e ()V end
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	j ()V resetFlameCount
nt net/minecraft/network/protocol/game/DebugVillagerNameGenerator
	a NAMES_FIRST_PART
	b NAMES_SECOND_PART
	a (Ljava/util/Random;[Ljava/lang/String;)Ljava/lang/String; getRandomString
	a (Ljava/util/UUID;)Ljava/lang/String; getVillagerName
	b (Ljava/util/UUID;)Ljava/util/Random; getRandom
net/minecraft/server/ChunkConverter net/minecraft/world/level/chunk/UpgradeData
	a EMPTY
	b LOGGER
	c DIRECTIONS
	d sides
	e index
	f MAP
	g CHUNKY_FIXERS
	a ()Z isEmpty
	a (Lnet/minecraft/server/Chunk;)V upgrade
	a (Lnet/minecraft/server/Chunk;Lnet/minecraft/server/EnumDirection8;)V upgradeSides
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateState
	a (Lnet/minecraft/server/World;Lbyd$a;)V lambda$upgrade$0
	b ()Lnet/minecraft/server/NBTTagCompound; write
	b (Lnet/minecraft/server/Chunk;)V upgradeInside
	c ()Ljava/util/Map; access$200
	d ()Ljava/util/Set; access$300
net/minecraft/server/ItemMilkBucket net/minecraft/world/item/MilkBucketItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	e_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	f_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
net/minecraft/server/PacketPlayOutSpawnEntityExperienceOrb net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket
	a id
	b x
	c y
	d z
	e value
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()I getValue
net/minecraft/server/BlockFacingHorizontal net/minecraft/world/level/block/HorizontalDirectionalBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
net/minecraft/server/PacketPlayOutNBTQuery net/minecraft/network/protocol/game/ClientboundTagQueryPacket
	a transactionId
	b tag
	a ()Z isSkippable
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getTransactionId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/NBTTagCompound; getTag
net/minecraft/server/ILocationSource net/minecraft/core/LocatableSource
net/minecraft/server/DataConverterBanner net/minecraft/util/datafix/fixes/ItemBannerColorFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
cya$1 net/minecraft/client/KeyboardHandler$1
	a $SwitchMap$net$minecraft$world$phys$HitResult$Type
net/minecraft/server/WorldGenFeatureIceburgConfiguration net/minecraft/world/level/levelgen/feature/IcebergConfiguration
	a state
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureIceburgConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/BiomeForestHills net/minecraft/world/level/biome/WoodedHillsBiome
net/minecraft/server/BlockGrassPath net/minecraft/world/level/block/GrassPathBlock
	a SHAPE
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	n (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
mn$1 net/minecraft/network/protocol/game/ClientboundSetBorderPacket$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundSetBorderPacket$Type
net/minecraft/server/EntitySpectralArrow net/minecraft/world/entity/projectile/SpectralArrow
	a (Lnet/minecraft/server/EntityLiving;)V doPostHurtEffects
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	h ()V tick
	n ()Lnet/minecraft/server/ItemStack; getPickupItem
net/minecraft/server/PathfinderGoalBreath net/minecraft/world/entity/ai/goal/BreathAirGoal
	a mob
	C_ ()Z isInterruptable
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z givesAir
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	g ()V findAirPosition
dkk$2 net/minecraft/client/multiplayer/ServerStatusPinger$2
	a val$address
	b val$data
	c this$0
dkk$1 net/minecraft/client/multiplayer/ServerStatusPinger$1
	a val$connection
	b val$data
	c this$0
	d success
	e receivedPing
	f pingStart
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/PacketStatusOutPong;)V handlePongResponse
	a (Lnet/minecraft/server/PacketStatusOutServerInfo;)V handleStatusResponse
net/minecraft/server/DynamicOpsNBT net/minecraft/nbt/NbtOps
	a INSTANCE
	a ()Lnet/minecraft/server/NBTBase; empty
	a (B)Lnet/minecraft/server/NBTBase; createByte
	a (D)Lnet/minecraft/server/NBTBase; createDouble
	a (F)Lnet/minecraft/server/NBTBase; createFloat
	a (I)Lnet/minecraft/server/NBTBase; createInt
	a (J)Lnet/minecraft/server/NBTBase; createLong
	a (Ljava/lang/Number;)Lnet/minecraft/server/NBTBase; createNumeric
	a (Ljava/lang/String;)Lnet/minecraft/server/NBTBase; createString
	a (Ljava/lang/String;Ljava/lang/String;)Z lambda$remove$8
	a (Ljava/nio/ByteBuffer;)Lnet/minecraft/server/NBTBase; createByteList
	a (Ljava/util/Map;)Lnet/minecraft/server/NBTBase; createMap
	a (Ljava/util/stream/IntStream;)Lnet/minecraft/server/NBTBase; createIntList
	a (Ljava/util/stream/LongStream;)Lnet/minecraft/server/NBTBase; createLongList
	a (Ljava/util/stream/Stream;)Lnet/minecraft/server/NBTBase; createList
	a (Lnet/minecraft/server/NBTBase;)Lcom/mojang/datafixers/types/Type; getType
	a (Lnet/minecraft/server/NBTBase;Ljava/lang/String;)Lnet/minecraft/server/NBTBase; remove
	a (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; mergeInto
	a (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; mergeInto
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; lambda$getMapValues$3
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;)V lambda$remove$9
	a (S)Lnet/minecraft/server/NBTBase; createShort
	b (Lnet/minecraft/server/NBTBase;)Ljava/util/Optional; getNumberValue
	b (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; merge
	b (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;)V lambda$merge$2
	c (Lnet/minecraft/server/NBTBase;)Ljava/util/Optional; getStringValue
	c (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;)V lambda$merge$1
	d (Lnet/minecraft/server/NBTBase;)Ljava/util/Optional; getMapValues
	d (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;)V lambda$mergeInto$0
	e (Lnet/minecraft/server/NBTBase;)Ljava/util/Optional; getStream
	f (Lnet/minecraft/server/NBTBase;)Ljava/util/Optional; getByteBuffer
	g (Lnet/minecraft/server/NBTBase;)Ljava/util/Optional; getIntStream
	h (Lnet/minecraft/server/NBTBase;)Ljava/util/Optional; getLongStream
	i (Lnet/minecraft/server/NBTBase;)Ljava/lang/Long; lambda$createList$7
	j (Lnet/minecraft/server/NBTBase;)Ljava/lang/Integer; lambda$createList$6
	k (Lnet/minecraft/server/NBTBase;)Ljava/lang/Byte; lambda$createList$5
	l (Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; lambda$getStream$4
net/minecraft/server/Vector3fa com/mojang/math/Vector3f
	a values
	a ()F x
	a (F)V mul
	a (FF)V clamp
	a (FFF)V set
	a (Lnet/minecraft/server/Quaternion;)V transform
	a (Lnet/minecraft/server/Vector3fa;)V sub
	b ()F y
	b (FFF)V add
	b (Lnet/minecraft/server/Vector3fa;)F dot
	c ()F z
	c (FFF)F clamp
	c (Lnet/minecraft/server/Vector3fa;)V cross
	d ()V normalize
bvo$1 net/minecraft/world/level/block/piston/PistonHeadBlock$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/JsonList net/minecraft/server/players/StoredUserList
	a LOGGER
	b gson
	c file
	d map
	e enabled
	f USERLIST_ENTRY_TYPE
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/JsonListEntry; createEntry
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	a (Z)V setEnabled
	b (Lnet/minecraft/server/JsonListEntry;)V remove
	c ()Ljava/io/File; getFile
	d (Ljava/lang/Object;)Z contains
	e ()Ljava/util/Collection; getEntries
	getEntries ()[Ljava/lang/String; getUserList
	h ()V removeExpired
net/minecraft/server/BlockSeaPickle net/minecraft/world/level/block/SeaPickleBlock
	a PICKLES
	b WATERLOGGED
	c ONE_AABB
	d TWO_AABB
	e THREE_AABB
	f FOUR_AABB
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;)I getLightEmission
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	b (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	j (Lnet/minecraft/server/IBlockData;)Z isDead
net/minecraft/server/UserCache$UserCacheEntry net/minecraft/server/players/GameProfileCache$GameProfileInfo
	a this$0
	b profile
	c expirationDate
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	a (Lnet/minecraft/server/UserCache$UserCacheEntry;)Ljava/util/Date; access$200
	b ()Ljava/util/Date; getExpirationDate
net/minecraft/server/PacketPlayOutEntityHeadRotation net/minecraft/network/protocol/game/ClientboundRotateHeadPacket
	a entityId
	b yHeadRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getEntity
	b ()B getYHeadRot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/CriterionTriggerTamedAnimal net/minecraft/advancements/critereon/TameAnimalTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityAnimal;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbr$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
pm net/minecraft/network/protocol/game/package-info
net/minecraft/server/PacketPlayOutOpenWindowHorse net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket
	a containerId
	b size
	c entityId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getSize
	d ()I getEntityId
pp net/minecraft/network/protocol/handshake/package-info
net/minecraft/server/PlayerList net/minecraft/server/players/PlayerList
	a USERBANLIST_FILE
	b IPBANLIST_FILE
	c OPLIST_FILE
	d WHITELIST_FILE
	f LOGGER
	g BAN_DATE_FORMAT
	hasWhitelist doWhiteList
	j playersByUUID
	k bans
	l ipBans
	o stats
	operators ops
	p advancements
	playerFileData playerIo
	t overrideGameMode
	u allowCheatsForAllPlayers
	v sendAllPlayerInfoIn
	a (I)V setViewDistance
	a (Ljava/util/UUID;)Lnet/minecraft/server/EntityPlayer; getPlayer
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IChatBaseComponent;)V broadcastToTeam
	a (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/NBTTagCompound; load
	a (Lnet/minecraft/server/EntityPlayer;I)V sendPlayerPermissionLevel
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/GeneratorAccess;)V updatePlayerGameMode
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/WorldServer;)V sendLevelInfo
	a (Lnet/minecraft/server/EnumGamemode;)V setOverrideGameMode
	a (Lnet/minecraft/server/NetworkManager;Lnet/minecraft/server/EntityPlayer;)V placeNewPlayer
	a (Lnet/minecraft/server/Packet;Lnet/minecraft/server/DimensionManager;)V broadcastAll
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Entity; lambda$placeNewPlayer$0
	addOp (Lcom/mojang/authlib/GameProfile;)V op
	attemptLogin (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/IChatBaseComponent; canPlayerLogin
	b (Ljava/lang/String;)Ljava/util/List; getPlayersWithAddress
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IChatBaseComponent;)V broadcastToAllExceptTeam
	b (Z)Ljava/lang/String; getPlayerNames
	c (Lcom/mojang/authlib/GameProfile;)V blackList
	c (Z)V setAllowCheatsForAllPlayers
	d (Lcom/mojang/authlib/GameProfile;)V whiteList
	d (Lnet/minecraft/server/EntityPlayer;)V sendPlayerPermissionLevel
	disconnect (Lnet/minecraft/server/EntityPlayer;)V remove
	e ()[Ljava/lang/String; getPlayerNamesArray
	f ()[Lcom/mojang/authlib/GameProfile; getPlayerGameProfiles
	f (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	f (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/AdvancementDataPlayer; getPlayerAdvancements
	getHasWhitelist ()Z isUsingWhitelist
	getIPBans ()Lnet/minecraft/server/IpBanList; getIpBans
	getOPs ()Lnet/minecraft/server/OpList; getOps
	getPlayer (Ljava/lang/String;)Lnet/minecraft/server/EntityPlayer; getPlayerByName
	getProfileBans ()Lnet/minecraft/server/GameProfileBanList; getBans
	getStatisticManager (Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ServerStatisticManager; getPlayerStats
	getWhitelist ()Lnet/minecraft/server/WhiteList; getWhiteList
	getWhitelisted ()[Ljava/lang/String; getWhiteListNames
	isWhitelisted (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	m ()[Ljava/lang/String; getOpNames
	moveToWorld (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DimensionManager;Z)Lnet/minecraft/server/EntityPlayer; respawn
	processLogin (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/EntityPlayer; getPlayerForLogin
	r ()Lnet/minecraft/server/NBTTagCompound; getSingleplayerData
	reload ()V reloadResources
	reloadWhitelist ()V reloadWhiteList
	removeOp (Lcom/mojang/authlib/GameProfile;)V deop
	savePlayerFile (Lnet/minecraft/server/EntityPlayer;)V save
	savePlayers ()V saveAll
	sendAll (Lnet/minecraft/server/Packet;)V broadcastAll
	sendMessage (Lnet/minecraft/server/IChatBaseComponent;)V broadcastMessage
	sendMessage (Lnet/minecraft/server/IChatBaseComponent;Z)V broadcastMessage
	sendPacketNearby (Lnet/minecraft/server/EntityHuman;DDDDLnet/minecraft/server/DimensionManager;Lnet/minecraft/server/Packet;)V broadcast
	sendScoreboard (Lnet/minecraft/server/ScoreboardServer;Lnet/minecraft/server/EntityPlayer;)V updateEntireScoreboard
	setHasWhitelist (Z)V setUsingWhiteList
	setPlayerFileData (Lnet/minecraft/server/WorldServer;)V setLevel
	shutdown ()V removeAll
	updateClient (Lnet/minecraft/server/EntityPlayer;)V sendAllPlayerInfo
	v ()Z isAllowCheatsForAllPlayers
czv$1 net/minecraft/client/gui/components/PlayerTabOverlay$1
net/minecraft/server/PacketPlayInTeleportAccept net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket
	a id
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/DataConverterSchemaV1800 net/minecraft/util/datafix/schemas/V1800
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/BlockSlime net/minecraft/world/level/block/SlimeBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/Entity;)V updateEntityAfterFallOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V stepOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;F)V fallOn
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
net/minecraft/server/DataConverterSchemaV1801 net/minecraft/util/datafix/schemas/V1801
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/NibbleArray net/minecraft/world/level/chunk/DataLayer
	a data
	a (I)Ljava/lang/String; layerToString
	a (II)V set
	a (III)I get
	a (IIII)V set
	asBytes ()[B getData
	b ()Lnet/minecraft/server/NibbleArray; copy
	b (I)I get
	b (III)I getIndex
	c ()Z isEmpty
	c (I)Z isFirst
	d (I)I getPosition
net/minecraft/server/ContainerUtil net/minecraft/world/ContainerHelper
	a (Ljava/util/List;I)Lnet/minecraft/server/ItemStack; takeItem
	a (Ljava/util/List;II)Lnet/minecraft/server/ItemStack; removeItem
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NonNullList;)Lnet/minecraft/server/NBTTagCompound; saveAllItems
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NonNullList;Z)Lnet/minecraft/server/NBTTagCompound; saveAllItems
	b (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NonNullList;)V loadAllItems
net/minecraft/server/CommandData net/minecraft/server/commands/data/DataCommands
	a ALL_PROVIDERS
	b TARGET_PROVIDERS
	c SOURCE_PROVIDERS
	d ERROR_MERGE_UNCHANGED
	e ERROR_GET_NOT_NUMBER
	f ERROR_GET_NON_EXISTENT
	g ERROR_MULTIPLE_TAGS
	h ERROR_EXPECTED_LIST
	i ERROR_EXPECTED_OBJECT
	j ERROR_INVALID_INDEX
	a (ILnet/minecraft/server/NBTTagCompound;Lcr$h;Ljava/util/List;)I insertAtIndex
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Luf$b;)V lambda$register$21
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/NBTTagCompound;Lcr$h;Ljava/util/List;)I lambda$null$20
	a (Lcom/mojang/brigadier/context/CommandContext;Luf$c;Luf$a;Ljava/util/List;)I manipulateData
	a (Lcr$h;Lnet/minecraft/server/CommandDataAccessor;)Lnet/minecraft/server/NBTBase; getSingleTag
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	a (Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder; decorateModification
	a (Ljava/util/function/BiConsumer;Luf$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$decorateModification$28
	a (Ljava/util/function/Function;)Luf$c; lambda$static$6
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$7
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;)I getData
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;Lcr$h;)I removeData
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;Lcr$h;D)I getNumeric
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;Lnet/minecraft/server/NBTTagCompound;)I mergeData
	a (Luf$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$15
	a (Luf$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$14
	a (Luf$c;Luf$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$null$27
	a (Luf$c;Luf$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$26
	a (Luf$c;Luf$c;Luf$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$null$25
	a (Luf$c;Luf$c;Luf$a;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$null$24
	a (Luf$c;Luf$c;Luf$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$23
	b (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/NBTTagCompound;Lcr$h;Ljava/util/List;)I lambda$null$19
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	b (Ljava/util/function/Function;)Luf$c; lambda$static$5
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;Lcr$h;)I getData
	b (Luf$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$13
	b (Luf$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$12
	b (Luf$c;Luf$c;Luf$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$22
	c (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/NBTTagCompound;Lcr$h;Ljava/util/List;)I lambda$null$18
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	c (Luf$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$9
	c (Luf$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$11
	d (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/NBTTagCompound;Lcr$h;Ljava/util/List;)I lambda$null$17
	d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	d (Luf$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$10
	e (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/NBTTagCompound;Lcr$h;Ljava/util/List;)I lambda$null$16
	e (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	e (Luf$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$8
net/minecraft/server/EntityProjectile net/minecraft/world/entity/projectile/ThrowableProjectile
	as entityToIgnore
	at timeToIgnore
	blockX xBlock
	blockY yBlock
	blockZ zBlock
	shake shakeTime
	shooter owner
	shooterId ownerId
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/Entity;)Z lambda$tick$1
	a (Lnet/minecraft/server/Entity;FFFFF)V shootFromRotation
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/Entity;)Z lambda$tick$0
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (DDDFF)V shoot
	getShooter ()Lnet/minecraft/server/EntityLiving; getOwner
	h ()V tick
	h (DDD)V lerpMotion
	l ()F getGravity
net/minecraft/server/ThreadWatchdog net/minecraft/server/dedicated/ServerWatchdog
	a LOGGER
	b server
	c maxTickTime
	a ()V exit
net/minecraft/server/BossBattle$BarColor net/minecraft/world/BossEvent$BossBarColor
	h name
	i formatting
	j $VALUES
	a ()Lnet/minecraft/server/EnumChatFormat; getFormatting
	a (Ljava/lang/String;)Lnet/minecraft/server/BossBattle$BarColor; byName
	b ()Ljava/lang/String; getName
dba$b net/minecraft/client/gui/font/providers/BitmapProvider$Glyph
	a scale
	b image
	c offsetX
	d offsetY
	e width
	f height
	g advance
	h ascent
	a (II)V upload
	d ()I getPixelWidth
	e ()I getPixelHeight
	f ()Z isColored
	g ()F getOversample
	l ()F getBearingY
dba$a net/minecraft/client/gui/font/providers/BitmapProvider$Builder
	a texture
	b chars
	c height
	d ascent
	a (Lcom/google/gson/JsonObject;)Ldba$a; fromJson
	a (Lcuj;IIII)I getActualGlyphWidth
	a (Lnet/minecraft/server/IResourceManager;)Lctw; create
qa net/minecraft/network/protocol/login/package-info
bmv$a net/minecraft/world/level/block/Block$BlockStatePairKey
	a first
	b second
	c direction
qb net/minecraft/network/protocol/package-info
net/minecraft/server/WorldGenMineshaftPieces$WorldGenMineshaftStairs net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftStairs
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/StructureBoundingBox; findStairs
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
qj net/minecraft/network/protocol/status/package-info
gd$1 net/minecraft/core/particles/DustParticleOptions$1
	a (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParamRedstone; fromCommand
	a (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParamRedstone; fromNetwork
	b (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParam; fromCommand
	b (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParam; fromNetwork
net/minecraft/server/CommandTellRaw net/minecraft/server/commands/TellRawCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
qo net/minecraft/network/syncher/package-info
qp net/minecraft/obfuscate/package-info
net/minecraft/server/EntityIllagerWizard$Spell net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell
	g id
	h spellColor
	i $VALUES
	a (I)Lnet/minecraft/server/EntityIllagerWizard$Spell; byId
	a (Lnet/minecraft/server/EntityIllagerWizard$Spell;)I access$000
	b (Lnet/minecraft/server/EntityIllagerWizard$Spell;)[D access$100
qq net/minecraft/package-info
net/minecraft/server/TickListEmpty net/minecraft/world/level/EmptyTickList
	a INSTANCE
	a ()I size
	a (Ljava/util/stream/Stream;)V addAll
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;I)V scheduleTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	b ()Lnet/minecraft/server/TickListEmpty; empty
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
net/minecraft/server/EnchantmentVanishing net/minecraft/world/item/enchantment/VanishingCurseEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
	c ()Z isCurse
net/minecraft/server/GeneratorSettingsEnd net/minecraft/world/level/levelgen/TheEndGeneratorSettings
	t spawnPosition
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/GeneratorSettingsEnd; setSpawnPosition
	v ()Lnet/minecraft/server/BlockPosition; getSpawnPosition
qu net/minecraft/recipebook/package-info
bn$b net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance
	a damage
	b entity
	a (Lal$a;)Lbn$b; playerHurtEntity
	a (Lal$a;Lnet/minecraft/server/CriterionConditionEntity;)Lbn$b; playerHurtEntity
	a (Lnet/minecraft/server/CriterionConditionDamage;)Lbn$b; playerHurtEntity
	a (Lnet/minecraft/server/CriterionConditionDamage;Lnet/minecraft/server/CriterionConditionEntity;)Lbn$b; playerHurtEntity
	a (Lnet/minecraft/server/CriterionConditionEntity;)Lbn$b; playerHurtEntity
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;FFZ)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lbn$b; playerHurtEntity
qw net/minecraft/resources/package-info
bn$a net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;FFZ)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
qy net/minecraft/server/ChainedJsonException
	a entries
	b message
	a (Ljava/lang/Exception;)Lqy; forException
	a (Ljava/lang/String;)V prependJsonKey
	b (Ljava/lang/String;)V setFilenameAndFlush
net/minecraft/server/BossBattleCustom net/minecraft/server/bossevents/CustomBossEvent
	h id
	i players
	j value
	k max
	a (I)V setValue
	a (Ljava/util/Collection;)Z setPlayers
	a (Ljava/util/UUID;)V addOfflinePlayer
	a (Lnet/minecraft/server/ChatModifier;)V lambda$getDisplayName$0
	a (Lnet/minecraft/server/EntityPlayer;)V addPlayer
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/BossBattleCustom; load
	b ()V removeAllPlayers
	b (I)V setMax
	b (Lnet/minecraft/server/EntityPlayer;)V removePlayer
	c ()I getValue
	c (Lnet/minecraft/server/EntityPlayer;)V onPlayerConnect
	d ()I getMax
	d (Lnet/minecraft/server/EntityPlayer;)V onPlayerDisconnect
	e ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	f ()Lnet/minecraft/server/NBTTagCompound; save
	getKey ()Lnet/minecraft/server/MinecraftKey; getTextId
ra net/minecraft/server/ConsoleInputSource
	a (Ljava/lang/String;)V info
	b (Ljava/lang/String;)V warn
net/minecraft/server/VoxelShapes net/minecraft/world/phys/shapes/Shapes
	a INFINITY
	b BLOCK
	c EMPTY
	a ()Lnet/minecraft/server/VoxelShape; empty
	a (DD)I findBits
	a (DDD)I lastC
	a (II)J lcm
	a (ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Lnet/minecraft/server/VoxelShapeMerger; createIndexMerger
	a (Lnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/VoxelShape; create
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/IWorldReader;DLnet/minecraft/server/VoxelShapeCollision;Lnet/minecraft/server/EnumAxisCycle;Ljava/util/stream/Stream;)D collide
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/stream/Stream;D)D collide
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/IWorldReader;DLnet/minecraft/server/VoxelShapeCollision;Ljava/util/stream/Stream;)D collide
	a (Lnet/minecraft/server/OperatorBoolean;Lnet/minecraft/server/VoxelShapeDiscrete;IILnet/minecraft/server/VoxelShapeDiscrete;IIIII)Z lambda$null$1
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/VoxelShape; getFaceShape
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;)Lnet/minecraft/server/VoxelShape; or
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/EnumDirection;)Z blockOccudes
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/OperatorBoolean;)Lnet/minecraft/server/VoxelShape; join
	a (Lnet/minecraft/server/VoxelShape;[Lnet/minecraft/server/VoxelShape;)Lnet/minecraft/server/VoxelShape; or
	a (Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/OperatorBoolean;Lnet/minecraft/server/VoxelShapeDiscrete;ILnet/minecraft/server/VoxelShapeDiscrete;IIII)Z lambda$null$2
	a (Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/OperatorBoolean;Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/VoxelShapeDiscrete;III)Z lambda$joinIsNotEmpty$3
	a (Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/OperatorBoolean;)Z joinIsNotEmpty
	a ([DLnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/VoxelShape;)V lambda$collide$4
	b ()Lnet/minecraft/server/VoxelShape; block
	b (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;)Z faceShapeOccludes
	b (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/EnumDirection;)Z mergedFaceOccludes
	b (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/OperatorBoolean;)Lnet/minecraft/server/VoxelShape; joinUnoptimized
	c ()Lnet/minecraft/server/VoxelShapeCube; lambda$static$0
	c (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/OperatorBoolean;)Z joinIsNotEmpty
	create (DDDDDD)Lnet/minecraft/server/VoxelShape; box
aub$1 net/minecraft/world/entity/monster/AbstractSkeleton$1
	d this$0
	c ()V start
	d ()V stop
net/minecraft/server/PacketPlayOutPlayerListHeaderFooter net/minecraft/network/protocol/game/ClientboundTabListPacket
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/IChatBaseComponent; getHeader
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/IChatBaseComponent; getFooter
rn net/minecraft/server/bossevents/package-info
net/minecraft/server/PacketStatusOutListener net/minecraft/network/protocol/status/ClientStatusPacketListener
	a (Lnet/minecraft/server/PacketStatusOutPong;)V handlePongResponse
	a (Lnet/minecraft/server/PacketStatusOutServerInfo;)V handleStatusResponse
cph$a net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder
	a entries
	a ()Lcph$a; getThis
	a (Lcpq$a;)Lcph$a; otherwise
	b ()Lnet/minecraft/server/LootEntryAbstract; build
	d ()Lcpq$a; getThis
bqz$1 net/minecraft/world/level/block/RedStoneWireBlock$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
cde$a net/minecraft/world/level/levelgen/feature/OceanMonumentFeature$OceanMonumentStart
	e isCreated
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)V postProcess
	b (II)V generatePieces
ak$b net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance
	a zombie
	b villager
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityZombie;Lnet/minecraft/server/EntityVillager;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lak$b; curedZombieVillager
net/minecraft/server/BehaviorCooldown net/minecraft/world/entity/ai/behavior/VillagerCalmDown
	a (Lnet/minecraft/server/EntityVillager;)Z isCloseToEntityThatHurtMe
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityLiving;)Z lambda$isCloseToEntityThatHurtMe$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
ry net/minecraft/server/commands/DebugPathCommand
	a ERROR_NOT_MOB
	b ERROR_NO_PATH
	c ERROR_NOT_COMPLETE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;)I fillBlocks
ky$1 net/minecraft/network/protocol/game/ClientboundCommandsPacket$1
ak$a net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityZombie;Lnet/minecraft/server/EntityVillager;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
net/minecraft/server/TileEntityStructure$UpdateType net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType
	e $VALUES
net/minecraft/server/PacketPlayOutWorldParticles net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket
	a x
	b y
	c z
	d xDist
	e yDist
	f zDist
	g maxSpeed
	h count
	i overrideLimiter
	j particle
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/Particle;)Lnet/minecraft/server/ParticleParam; readParticle
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Z isOverrideLimiter
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()F getXDist
	g ()F getYDist
	h ()F getZDist
	i ()F getMaxSpeed
	j ()I getCount
	k ()Lnet/minecraft/server/ParticleParam; getParticle
net/minecraft/server/DataConverterKeybind2 net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$2
	a (Lcom/mojang/datafixers/Dynamic;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	a (Lcom/mojang/datafixers/Dynamic;Ljava/util/Map;)Lcom/mojang/datafixers/Dynamic; lambda$null$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
net/minecraft/server/BlockStairs net/minecraft/world/level/block/StairBlock
	A BOTTOM_SHAPES
	B SHAPE_BY_STATE
	C base
	D baseState
	d WATERLOGGED
	e TOP_AABB
	f BOTTOM_AABB
	g OCTET_NNN
	h OCTET_NNP
	i OCTET_NPN
	j OCTET_NPP
	k OCTET_PNN
	w OCTET_PNP
	x OCTET_PPN
	y OCTET_PPP
	z TOP_SHAPES
	a (ILnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;)Lnet/minecraft/server/VoxelShape; makeStairShape
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V destroy
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V attack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;)[Lnet/minecraft/server/VoxelShape; makeShapes
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;I)Lnet/minecraft/server/VoxelShape; lambda$makeShapes$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V stepOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Explosion;)V wasExploded
	b (I)[Lnet/minecraft/server/VoxelShape; lambda$makeShapes$1
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	d (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)V prepareRender
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z canTakeShape
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	j ()F getExplosionResistance
	j (Lnet/minecraft/server/IBlockData;)Z isStairs
	m (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPropertyStairsShape; getStairsShape
	n (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
	q (Lnet/minecraft/server/IBlockData;)I getShapeIndex
azi$1 net/minecraft/world/inventory/LecternMenu$1
	a this$0
	d ()V setChanged
net/minecraft/server/PacketDebug net/minecraft/network/protocol/game/DebugPackets
	a LOGGER
	a (JLnet/minecraft/server/BehaviorController;)Ljava/util/List; getMemoryDescriptions
	a (Ljava/lang/Object;)Ljava/lang/String; getShortDescription
	a (Ljava/util/List;Ljava/lang/String;Lnet/minecraft/server/ReputationType;Ljava/lang/Integer;)V lambda$null$6
	a (Ljava/util/List;Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V lambda$writeBrain$7
	a (Lnet/minecraft/server/EntityLiving;)V sendEntityBrain
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/PacketDataSerializer;)V writeBrain
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureStart;)V sendStructurePacket
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/String;)V lambda$writeBrain$5
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/Activity;)V lambda$writeBrain$4
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/PathfinderGoalWrapped;)V lambda$sendGoalSelector$2
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/Raid;)V lambda$sendRaids$3
	a (Lnet/minecraft/server/VillagePlaceType;)Z lambda$sendPoiPacketsForChunk$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V sendNeighborsUpdatePacket
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/PathEntity;F)V sendPathFindingPacket
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/PathfinderGoalSelector;)V sendGoalSelector
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Collection;)V sendRaids
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V sendPoiAddedPacket
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkCoordIntPair;)V sendPoiPacketsForChunk
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/MinecraftKey;)V sendPacketToAllPlayers
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/VillagePlaceRecord;)V lambda$sendPoiPacketsForChunk$1
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V sendPoiRemovedPacket
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V sendPoiTicketCountPacket
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V sendVillageSectionsPacket
net/minecraft/server/MinecraftSerializable net/minecraft/util/Serializable
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
net/minecraft/server/BlockBell net/minecraft/world/level/block/BellBlock
	a FACING
	b ATTACHMENT
	c NORTH_SOUTH_FLOOR_SHAPE
	d EAST_WEST_FLOOR_SHAPE
	e BELL_TOP_SHAPE
	f BELL_BOTTOM_SHAPE
	g BELL_SHAPE
	h NORTH_SOUTH_BETWEEN
	i EAST_WEST_BETWEEN
	j TO_WEST
	k TO_EAST
	w TO_NORTH
	x TO_SOUTH
	y CEILING_SHAPE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;D)Z isProperHit
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V ring
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/Entity;)V onProjectileHit
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/EntityHuman;Z)Z onHit
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	i (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	j (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/VoxelShape; getVoxelShape
	q (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumDirection; getConnectedDirection
net/minecraft/server/ProtoChunk net/minecraft/world/level/chunk/ProtoChunk
	a LOGGER
	b chunkPos
	c isDirty
	d biomes
	e lightEngine
	f heightmaps
	g status
	h blockEntities
	i blockEntityNbts
	j sections
	k entities
	l lights
	m postProcessing
	n structureStarts
	o structuresRefences
	p upgradeData
	q blockTicks
	r liquidTicks
	s inhabitedTime
	t carvingMasks
	u isLightCorrect
	a (I)Lnet/minecraft/server/ChunkSection; getOrCreateSection
	a (J)V setLastSaveTime
	a (Ljava/lang/String;)Lnet/minecraft/server/StructureStart; getStartForFeature
	a (Ljava/lang/String;J)V addReferenceForFeature
	a (Ljava/lang/String;Lnet/minecraft/server/StructureStart;)V setStartForFeature
	a (Ljava/util/Map;)V setAllStarts
	a (Lnet/minecraft/server/Block;)Z lambda$new$0
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/server/ChunkStatus;)V setStatus
	a (Lnet/minecraft/server/Entity;)V addEntity
	a (Lnet/minecraft/server/FluidType;)Z lambda$new$1
	a (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap; getHeightmap
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/HeightMap$Type;[J)V setHeightmap
	a (Lnet/minecraft/server/LightEngine;)V setLightEngine
	a (Lnet/minecraft/server/NBTTagCompound;)V setBlockEntityNbt
	a (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/BitSet; getCarvingMask
	a (Lnet/minecraft/server/WorldGenStage$Features;Ljava/util/BitSet;)V setCarvingMask
	a (SI)V addPackedPostProcess
	a (SILnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/BlockPosition; unpackOffsetCoordinates
	a (Z)V setUnsaved
	a ([Lnet/minecraft/server/BiomeBase;)V setBiomes
	b (J)V setInhabitedTime
	b (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
	b (Ljava/util/Map;)V setAllReferences
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap; getOrCreateHeightmapUnprimed
	b (Lnet/minecraft/server/NBTTagCompound;)V addEntity
	b (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/BitSet; lambda$getCarvingMask$5
	b (SI)V addLight
	b (Z)V setLightCorrect
	c ()Ljava/util/Set; getBlockEntitiesPos
	c (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; lambda$addReferenceForFeature$4
	c (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/BlockPosition; getHeighestPosition
	d ()[Lnet/minecraft/server/ChunkSection; getSections
	d (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; lambda$getReferencesForFeature$3
	d (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	d (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap; lambda$getOrCreateHeightmapUnprimed$2
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	e (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	e_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	f ()Ljava/util/Collection; getHeightmaps
	f (Lnet/minecraft/server/BlockPosition;)V markPosForPostprocessing
	g ()Lnet/minecraft/server/ChunkCoordIntPair; getPos
	h ()Ljava/util/Map; getAllStarts
	i ()[Lnet/minecraft/server/BiomeBase; getBiomes
	i (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbt
	j ()Z isUnsaved
	j (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbtForSaving
	k ()Lnet/minecraft/server/ChunkStatus; getStatus
	k (Lnet/minecraft/server/BlockPosition;)V addLight
	l ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
	l (Lnet/minecraft/server/BlockPosition;)S packOffsetCoordinates
	m ()Ljava/util/stream/Stream; getLights
	n ()Lnet/minecraft/server/TickList; getBlockTicks
	o ()Lnet/minecraft/server/TickList; getLiquidTicks
	p ()Lnet/minecraft/server/ChunkConverter; getUpgradeData
	q ()J getInhabitedTime
	r ()Z isLightCorrect
	s ()Lnet/minecraft/server/ProtoChunkTickList; getBlockTicks
	t ()Lnet/minecraft/server/ProtoChunkTickList; getLiquidTicks
	v ()Ljava/util/Map; getAllReferences
	w ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPackedLights
	x ()Ljava/util/Map; getBlockEntities
	y ()Ljava/util/List; getEntities
	z ()Ljava/util/Map; getBlockEntityNbts
net/minecraft/server/EntityPositionTypes$Surface net/minecraft/world/entity/SpawnPlacements$Type
	d $VALUES
net/minecraft/server/EnchantmentOxygen net/minecraft/world/item/enchantment/OxygenEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/PathfinderGoalDefendVillage net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal
	a golem
	b potentialTarget
	c attackTargeting
	a ()Z canUse
	c ()V start
dao$a net/minecraft/client/gui/components/toasts/TutorialToast$Icons
	a MOVEMENT_KEYS
	b MOUSE
	c TREE
	d RECIPE_BOOK
	e WOODEN_PLANKS
	f x
	g y
	h $VALUES
	a (Lcyw;II)V render
net/minecraft/server/ThreadedMailbox net/minecraft/util/thread/ProcessorMailbox
	a queue
	b LOGGER
	c status
	d dispatcher
	e name
	a ()Z setAsScheduled
	a (I)Z lambda$run$0
	a (Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I pollUntil
	a (Ljava/lang/Object;)V tell
	a (Ljava/util/concurrent/Executor;Ljava/lang/String;)Lnet/minecraft/server/ThreadedMailbox; create
	b ()V setAsIdle
	bf ()Ljava/lang/String; name
	c ()Z canBeScheduled
	d ()Z shouldProcess
	e ()Z pollTask
	f ()V registerForExecution
net/minecraft/server/StructurePiece$StructurePieceBlockSelector net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector
	a next
	a ()Lnet/minecraft/server/IBlockData; getNext
	a (Ljava/util/Random;IIIZ)V next
bwb$1 net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate$1
	a (Lnet/minecraft/server/IBlockData;)Z test
sz net/minecraft/server/commands/RaidCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	a (Lnet/minecraft/server/CommandListenerWrapper;)I glow
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I setBadOmenLevel
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/IChatBaseComponent;)I playSound
	a (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/Raid; getRaid
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	b (Lnet/minecraft/server/CommandListenerWrapper;)I spawnLeader
	b (Lnet/minecraft/server/CommandListenerWrapper;I)I start
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	c (Lnet/minecraft/server/CommandListenerWrapper;)I stop
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	d (Lnet/minecraft/server/CommandListenerWrapper;)I check
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	e (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/WorldGenMineshaftConfiguration net/minecraft/world/level/levelgen/feature/MineshaftConfiguration
	a probability
	b type
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenMineshaftConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/EntityMinecartTNT net/minecraft/world/entity/vehicle/MinecartTNT
	b fuse
	a (B)V handleEntityEvent
	a (IIIZ)V activateMinecart
	a (Lnet/minecraft/server/DamageSource;)V destroy
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;F)Z shouldBlockExplode
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;F)F getBlockExplosionResistance
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (FF)V causeFallDamage
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (D)V explode
	h ()V tick
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	v ()V primeFuse
	w ()I getFuse
	z ()Z isPrimed
net/minecraft/server/CommandHelp net/minecraft/server/commands/HelpCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	b (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
czv$a net/minecraft/client/gui/components/PlayerTabOverlay$PlayerInfoComparator
	a (Ldkg;Ldkg;)I compare
dgh$b net/minecraft/client/main/GameConfig$GameData
	a demo
	b launchVersion
	c versionType
dxa$a net/minecraft/client/renderer/texture/TextureAtlas$Preparations
	a sprites
	b width
	c height
	d regions
dgh$a net/minecraft/client/main/GameConfig$FolderData
	a gameDirectory
	b resourcePackDirectory
	c assetDirectory
	d assetIndex
	a ()Ldxi; getAssetIndex
dgh$d net/minecraft/client/main/GameConfig$UserData
	a user
	b userProperties
	c profileProperties
	d proxy
net/minecraft/server/WorldGenMegaTreeProviderJungle net/minecraft/world/level/block/grower/JungleTreeGrower
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenTreeAbstract; getMegaFeature
	b (Ljava/util/Random;)Lnet/minecraft/server/WorldGenTreeAbstract; getFeature
dgh$c net/minecraft/client/main/GameConfig$ServerData
	a hostname
	b port
net/minecraft/server/ChatBaseComponent net/minecraft/network/chat/BaseComponent
	b style
	a ()Ljava/util/List; getSiblings
	a (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/IChatBaseComponent; setStyle
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; append
	b ()Lnet/minecraft/server/ChatModifier; getStyle
	c ()Ljava/util/stream/Stream; stream
net/minecraft/server/ArgumentAnchor$Anchor net/minecraft/commands/arguments/EntityAnchorArgument$Anchor
	c BY_NAME
	d name
	e transform
	f $VALUES
	a ()Ljava/util/Map; access$000
	a (Ljava/lang/String;)Lnet/minecraft/server/ArgumentAnchor$Anchor; getByName
	a (Ljava/util/HashMap;)V lambda$static$2
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec3D; apply
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Vec3D; apply
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Vec3D; lambda$static$1
	b (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Vec3D; lambda$static$0
cze$1 net/minecraft/client/gui/components/AbstractSelectionList$1
cil$1 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/TileEntityDropper net/minecraft/world/level/block/entity/DropperBlockEntity
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
net/minecraft/server/PacketPlayOutLogin net/minecraft/network/protocol/game/ClientboundLoginPacket
	a playerId
	b hardcore
	c gameType
	d dimension
	e maxPlayers
	f levelType
	g chunkRadius
	h reducedDebugInfo
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getPlayerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z isHardcore
	d ()Lnet/minecraft/server/EnumGamemode; getGameType
	e ()Lnet/minecraft/server/DimensionManager; getDimension
	f ()I getMaxPlayers
	g ()Lnet/minecraft/server/WorldType; getLevelType
	h ()I getChunkRadius
	i ()Z isReducedDebugInfo
net/minecraft/server/DataConverterMobSpawner net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fix
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fix$0
net/minecraft/server/PacketPlayOutOpenBook net/minecraft/network/protocol/game/ClientboundOpenBookPacket
	a hand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/EnumHand; getHand
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/EntityTurtle net/minecraft/world/entity/animal/Turtle
	bA HOME_POS
	bB HAS_EGG
	bC LAYING_EGG
	bD TRAVEL_POS
	bE GOING_HOME
	bF TRAVELLING
	bG layEggCounter
	bz BABY_ON_LAND_SELECTOR
	A ()I getAmbientSoundInterval
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/EntityTurtle;)Z access$200
	a (Lnet/minecraft/server/EntityTurtle;Lnet/minecraft/server/BlockPosition;)V access$400
	a (Lnet/minecraft/server/EntityTurtle;Z)V access$500
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	ag ()F nextStep
	ai ()Lnet/minecraft/server/SoundEffect; getSwimSound
	b (Lnet/minecraft/server/EntityTurtle;)Ljava/util/Random; access$300
	b (Lnet/minecraft/server/EntityTurtle;Z)V access$800
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	bE ()Z isPushedByWater
	c (Lnet/minecraft/server/EntityTurtle;)Lnet/minecraft/server/BlockPosition; access$600
	c (Lnet/minecraft/server/EntityTurtle;Z)V access$900
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkTurtleSpawnRules
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cQ ()Lnet/minecraft/server/EnumMonsterType; getMobType
	cl ()V registerAttributes
	cm ()Z canBreatheUnderwater
	cn ()F getScale
	d (F)V playSwimSound
	d (Lnet/minecraft/server/EntityTurtle;)Lnet/minecraft/server/BlockPosition; access$700
	d (Lnet/minecraft/server/EntityTurtle;Z)V access$1100
	dV ()Z hasEgg
	dW ()Z isLayingEgg
	dX ()Lnet/minecraft/server/BlockPosition; getHomePos
	dY ()Lnet/minecraft/server/BlockPosition; getTravelPos
	dZ ()Z isGoingHome
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityTurtle;)I access$1000
	e (Lnet/minecraft/server/Vec3D;)V travel
	ea ()Z canFallInLove
	ee ()Z isTravelling
	f (Lnet/minecraft/server/EntityTurtle;)Ljava/util/Random; access$1200
	g (Lnet/minecraft/server/BlockPosition;)V setHomePos
	g (Lnet/minecraft/server/EntityTurtle;)I access$1008
	h (Lnet/minecraft/server/BlockPosition;)V setTravelPos
	h (Lnet/minecraft/server/EntityLiving;)Z lambda$static$0
	h (Lnet/minecraft/server/EntityTurtle;)Z access$1300
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	k ()V aiStep
	l ()V ageBoundaryReached
	n ()V registerGoals
	r (Z)V setHasEgg
	s (Z)V setLayingEgg
	t (Z)V setGoingHome
	u (Z)V setTravelling
	u_ ()V defineSynchedData
net/minecraft/server/NoiseGenerator3Handler net/minecraft/world/level/levelgen/synth/SimplexNoise
	a GRADIENT
	b xo
	c yo
	d zo
	e SQRT_3
	f F2
	g G2
	h p
	a (DD)D getValue
	a (DDD)D getValue
	a (I)I p
	a (IDDDD)D getCornerNoise3D
	a ([IDDD)D dot
net/minecraft/server/EntityPolarBear net/minecraft/world/entity/animal/PolarBear
	bA clientSideStandAnimationO
	bB clientSideStandAnimation
	bC warningSoundTicks
	bz DATA_STANDING_ID
	C (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkPolarBearSpawnRules
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	dV ()V playWarningSound
	dW ()Z isStanding
	da ()F getWaterSlowDown
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h ()V tick
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	n ()V registerGoals
	r (Z)V setStanding
	u_ ()V defineSynchedData
	v (F)F getStandingAnimationScale
net/minecraft/server/BiomeJungleHills net/minecraft/world/level/biome/JungleHillsBiome
cwd$b com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionListEntry
	a mBackup
	b this$0
	a (IIII)V drawRestore
	a (Lcom/mojang/realmsclient/dto/Backup;IIII)V renderBackupItem
	a (Ljava/util/Date;)Ljava/lang/String; getMediumDatePresentation
	b (IIII)V drawInfo
net/minecraft/server/WorldGenDecoratorNetherMagma net/minecraft/world/level/levelgen/placement/nether/MagmaDecorator
	a (Ljava/util/Random;ILnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WeightedRandom$WeightedRandomChoice net/minecraft/util/WeighedRandom$WeighedRandomItem
	a weight
cwd$a com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionList
	a this$0
	a (I)V selectInviteListItem
	a (Lcom/mojang/realmsclient/dto/Backup;)V addEntry
net/minecraft/server/PathfinderGoalWaterJumpAbstract net/minecraft/world/entity/ai/goal/JumpGoal
	a (FFF)F rotlerp
net/minecraft/server/RemoteStatusReply net/minecraft/server/rcon/NetworkDataOutputStream
	a outputStream
	b dataOutputStream
	a ()[B toByteArray
	a (F)V writeFloat
	a (I)V write
	a (Ljava/lang/String;)V writeString
	a (S)V writeShort
	a ([B)V writeBytes
	b ()V reset
	b (I)V writeInt
net/minecraft/server/EnchantmentTridentChanneling net/minecraft/world/item/enchantment/TridentChannelingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/PathfinderGoalDoorOpen net/minecraft/world/entity/ai/goal/OpenDoorGoal
	a closeDoor
	b forgetTime
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/ResourcePackVanilla net/minecraft/server/packs/VanillaPack
	a generatedDir
	b clientObject
	c namespaces
	d LOGGER
	e JAR_FILESYSTEM_BY_TYPE
	a ()Ljava/lang/String; getName
	a (ILjava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; getResources
	a (Ljava/lang/String;)Ljava/io/InputStream; getResourceAsStream
	a (Ljava/lang/String;Ljava/net/URL;)Z isResourceUrlValid
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Lnet/minecraft/server/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	a (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	b (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResourceAsStream
	d (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/lang/String; createPath
cqk$a net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder
	a modifiers
	a ()Lcqk$a; getThis
	a (Lcqk$c;)Lcqk$a; withModifier
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcqg$a; getThis
uh net/minecraft/server/commands/data/package-info
cqk$b net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier
	a name
	b attribute
	c operation
	d amount
	e id
	f slots
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcqk$b; deserialize
	a (Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonObject; serialize
	a (Lcqk$b;)Ljava/util/UUID; access$000
	a (Ljava/lang/String;)Lnet/minecraft/server/AttributeModifier$Operation; operationFromString
	a (Lnet/minecraft/server/AttributeModifier$Operation;)Ljava/lang/String; operationToString
	b (Lcqk$b;)[Lnet/minecraft/server/EnumItemSlot; access$100
	c (Lcqk$b;)Ljava/lang/String; access$200
	d (Lcqk$b;)Ljava/lang/String; access$300
	e (Lcqk$b;)Lnet/minecraft/server/LootValueBounds; access$400
	f (Lcqk$b;)Lnet/minecraft/server/AttributeModifier$Operation; access$500
ui net/minecraft/server/commands/package-info
cqk$c net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder
	a name
	b attribute
	c operation
	d amount
	e id
	f slots
	a ()Lcqk$b; build
	a (Ljava/util/UUID;)Lcqk$c; withUuid
	a (Lnet/minecraft/server/EnumItemSlot;)Lcqk$c; forSlot
cqk$d net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetAttribute; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetAttribute;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/DataConverterSchemaV135 net/minecraft/util/datafix/schemas/V135
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
ky$a net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry
	a builder
	b flags
	c redirect
	d children
	e node
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$build$0
	a (Lky$a;)Lcom/mojang/brigadier/tree/CommandNode; access$000
	a ([Lky$a;)Z build
up net/minecraft/server/dedicated/package-info
cpy$1 net/minecraft/world/level/storage/loot/functions/CopyNameFunction$1
ut net/minecraft/server/gui/package-info
uu net/minecraft/server/level/BlockDestructionProgress
	a id
	b pos
	c progress
	d updatedRenderTick
	a ()I getId
	a (I)V setProgress
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (I)V updateTick
	c ()I getProgress
	d ()I getUpdatedRenderTick
net/minecraft/server/ItemScaffolding net/minecraft/world/item/ScaffoldingBlockItem
	b (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/BlockActionContext; updatePlacementContext
	d ()Z mustSurvive
cqk$1 net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$1
	a $SwitchMap$net$minecraft$world$entity$ai$attributes$AttributeModifier$Operation
byy$a net/minecraft/world/level/levelgen/FlatLevelSource$FlatLevelBiomeWrapper
	u this$0
net/minecraft/server/ScheduleActivity net/minecraft/world/entity/schedule/Timeline
	a keyframes
	b previousIndex
	a ()Lcom/google/common/collect/ImmutableList; getKeyframes
	a (I)F getValueAt
	a (IF)Lnet/minecraft/server/ScheduleActivity; addKeyframe
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectSortedMap;Lnet/minecraft/server/ActivityFrame;)V lambda$sortAndDeduplicateKeyframes$0
	a (Ljava/util/Collection;)Lnet/minecraft/server/ScheduleActivity; addKeyframes
	b ()V sortAndDeduplicateKeyframes
net/minecraft/server/CriterionConditionRange net/minecraft/advancements/critereon/WrappedMinMaxBounds
	a ANY
	b ERROR_INTS_ONLY
	c min
	d max
	a ()Ljava/lang/Float; getMin
	a (D)Z matchesSqr
	a (F)Lnet/minecraft/server/CriterionConditionRange; exactly
	a (FF)Lnet/minecraft/server/CriterionConditionRange; between
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionRange; fromJson
	a (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/server/CriterionConditionRange; fromReader
	a (Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Lnet/minecraft/server/CriterionConditionRange; fromReader
	a (Ljava/lang/Float;)Ljava/lang/Float; lambda$fromReader$0
	a (Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float; optionallyFormat
	b ()Ljava/lang/Float; getMax
	b (F)Lnet/minecraft/server/CriterionConditionRange; atLeast
	b (Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float; readNumber
	c ()Lcom/google/gson/JsonElement; serializeToJson
	c (F)Lnet/minecraft/server/CriterionConditionRange; atMost
	c (Lcom/mojang/brigadier/StringReader;Z)Z isAllowedNumber
	d (F)Z matches
cwu$c com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetWorldInfo
	a seed
	b levelType
	c generateStructures
cwd$4 com/mojang/realmsclient/gui/screens/RealmsBackupScreen$4
	a this$0
cwd$5 com/mojang/realmsclient/gui/screens/RealmsBackupScreen$5
	a this$0
net/minecraft/server/BlockSeaGrass net/minecraft/world/level/block/Seagrass
	a SHAPE
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	b (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
ve net/minecraft/server/level/FeatureSimulator
	a minPos
	b maxPos
	a ()Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)Z setBlock
	a (Lnet/minecraft/server/BlockPosition;Z)Z removeBlock
	a (Lnet/minecraft/server/HeightMap$Type;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; getHeightmapPos
	b (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
	b (Lnet/minecraft/server/BlockPosition;Z)Z destroyBlock
net/minecraft/server/BiomeWarmDeepOcean net/minecraft/world/level/biome/DeepWarmOceanBiome
net/minecraft/server/BlockIce net/minecraft/world/level/block/IceBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	i (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
vs net/minecraft/server/level/package-info
net/minecraft/server/FoodMetaData net/minecraft/world/food/FoodData
	e lastFoodLevel
	foodTickTimer tickTimer
	a (F)V addExhaustion
	a (I)V setFoodLevel
	a (Lnet/minecraft/server/EntityHuman;)V tick
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/ItemStack;)V eat
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b ()I getLastFoodLevel
	b (F)V setSaturation
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c ()Z needsFood
	c (F)V setExhaustion
	d ()F getExhaustionLevel
bmv$1 net/minecraft/world/level/block/Block$1
	a (Lnet/minecraft/server/VoxelShape;)Ljava/lang/Boolean; load
vw net/minecraft/server/level/progress/ProcessorChunkProgressListener
	a delegate
	b mailbox
	a ()V start
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkStatus;)V onStatusChange
	b ()V stop
	b (Lnet/minecraft/server/ChunkCoordIntPair;)V lambda$updateSpawnPos$0
	b (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkStatus;)V lambda$onStatusChange$1
bmv$2 net/minecraft/world/level/block/Block$2
ake$1 net/minecraft/world/entity/ai/behavior/GateBehavior$1
vx net/minecraft/server/level/progress/StoringChunkProgressListener
	a delegate
	b statuses
	c spawnPos
	d fullDiameter
	e radius
	f diameter
	g started
	a ()V start
	a (II)Lnet/minecraft/server/ChunkStatus; getStatus
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkStatus;)V onStatusChange
	b ()V stop
	c ()I getFullDiameter
	d ()I getDiameter
	e ()I getProgress
bmv$3 net/minecraft/world/level/block/Block$3
	a $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
vy net/minecraft/server/level/progress/package-info
net/minecraft/server/PacketPlayOutExperience net/minecraft/network/protocol/game/ClientboundSetExperiencePacket
	a experienceProgress
	b totalExperience
	c experienceLevel
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()F getExperienceProgress
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getTotalExperience
	d ()I getExperienceLevel
net/minecraft/server/AutoRecipe net/minecraft/recipebook/ServerPlaceRecipe
	a LOGGER
	b stackedContents
	c inventory
	d menu
	a ()V clearGrid
	a (I)V moveItemToInventory
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/IRecipe;Z)V recipeClicked
	a (Lnet/minecraft/server/IRecipe;Z)V handleRecipeClicked
	a (Lnet/minecraft/server/Slot;Lnet/minecraft/server/ItemStack;)V moveItemToGrid
	a (ZIZ)I getStackSize
	b ()Z testClearGrid
	c ()I getAmountOfFreeSlotsInInventory
net/minecraft/server/DefinedStructureInfo net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings
	a mirror
	b rotation
	c rotationPivot
	d ignoreEntities
	e chunkPos
	f boundingBox
	g keepLiquids
	h random
	i preferredPalette
	j palette
	k processors
	l knownShape
	a ()Lnet/minecraft/server/DefinedStructureInfo; copy
	a (Ljava/lang/Integer;)V setPreferredPalette
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;)Ljava/util/List; getPalette
	a (Ljava/util/Random;)Lnet/minecraft/server/DefinedStructureInfo; setRandom
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/DefinedStructureInfo; setRotationPivot
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/DefinedStructureInfo; setChunkPos
	a (Lnet/minecraft/server/DefinedStructureProcessor;)Lnet/minecraft/server/DefinedStructureInfo; addProcessor
	a (Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/DefinedStructureInfo; setMirror
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/DefinedStructureInfo; setRotation
	a (Lnet/minecraft/server/StructureBoundingBox;)Lnet/minecraft/server/DefinedStructureInfo; setBoundingBox
	a (Z)Lnet/minecraft/server/DefinedStructureInfo; setIgnoreEntities
	b ()Lnet/minecraft/server/DefinedStructureInfo; clearProcessors
	b (Lnet/minecraft/server/BlockPosition;)Ljava/util/Random; getRandom
	b (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/StructureBoundingBox; calculateBoundingBox
	b (Lnet/minecraft/server/DefinedStructureProcessor;)Lnet/minecraft/server/DefinedStructureInfo; popProcessor
	b (Z)Lnet/minecraft/server/DefinedStructureInfo; setKeepLiquids
	c ()Lnet/minecraft/server/EnumBlockMirror; getMirror
	c (Z)Lnet/minecraft/server/DefinedStructureInfo; setKnownShape
	d ()Lnet/minecraft/server/EnumBlockRotation; getRotation
	e ()Lnet/minecraft/server/BlockPosition; getRotationPivot
	f ()Lnet/minecraft/server/ChunkCoordIntPair; getChunkPos
	g ()Z isIgnoreEntities
	h ()Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	i ()Z getKnownShape
	j ()Ljava/util/List; getProcessors
	k ()V updateBoundingBoxFromChunkPos
	l ()Z shouldKeepLiquids
	m ()Ljava/lang/Integer; getPreferredPalette
wa net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl
	a server
	b connection
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/PacketHandshakingInSetProtocol;)V handleIntention
net/minecraft/server/DataConverterSchemaV106 net/minecraft/util/datafix/schemas/V106
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
net/minecraft/server/DataConverterSchemaV107 net/minecraft/util/datafix/schemas/V107
cpy$b net/minecraft/world/level/storage/loot/functions/CopyNameFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionCopyName; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionCopyName;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
wg net/minecraft/server/network/package-info
wh net/minecraft/server/package-info
net/minecraft/server/Tags net/minecraft/tags/TagCollection
	a LOGGER
	b GSON
	c PATH_SUFFIX_LENGTH
	d tags
	e idToValue
	f directory
	g ordered
	h name
	a ()Ljava/util/Collection; getAvailableTags
	a (Ljava/lang/Object;)Ljava/util/Collection; getMatchingTags
	a (Ljava/lang/String;)Z lambda$null$0
	a (Ljava/util/Map;)V load
	a (Ljava/util/Map;Lnet/minecraft/server/MinecraftKey;Lzg$a;)V lambda$load$5
	a (Lnet/minecraft/server/IResourceManager;)Ljava/util/Map; lambda$prepare$3
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; prepare
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; getTag
	a (Lnet/minecraft/server/MinecraftKey;Lzg$a;)V lambda$load$4
	a (Lzg$a;)V lambda$null$1
	b ()Ljava/util/Map; getAllTags
	b (Ljava/util/Map;)V replace
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; getTagOrEmpty
	c (Lnet/minecraft/server/MinecraftKey;)Z hasTag
	d (Lnet/minecraft/server/MinecraftKey;)Lzg$a; lambda$null$2
uv$1 net/minecraft/server/level/ChunkHolder$1
	a this$0
net/minecraft/server/BlockCobbleWall net/minecraft/world/level/block/WallBlock
	j shapeWithPostByIndex
	k collisionShapeWithPostByIndex
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;ZLnet/minecraft/server/EnumDirection;)Z connectsTo
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
net/minecraft/server/EntitySlime net/minecraft/world/entity/monster/Slime
	b targetSquish
	bA wasOnGround
	bz ID_SIZE
	c squish
	d oSquish
	H ()Lnet/minecraft/server/MinecraftKey; getDefaultLootTable
	M ()I getMaxHeadXRot
	S ()Lnet/minecraft/server/EntityTypes; getType
	Y ()V remove
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityHuman;)V playerTouch
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkSlimeSpawnRules
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cU ()F getSoundVolume
	cY ()V jumpFromGround
	dT ()I getJumpDelay
	dU ()V decreaseSquish
	dV ()Z isDealsDamage
	dW ()I getAttackDamage
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	ea ()Z isTiny
	eb ()Z doPlayJumpSound
	getSoundJump ()Lnet/minecraft/server/SoundEffect; getJumpSound
	getSoundSquish ()Lnet/minecraft/server/SoundEffect; getSquishSound
	h ()V tick
	h (Lnet/minecraft/server/EntityLiving;)V dealDamage
	i (Lnet/minecraft/server/Entity;)V push
	i (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$0
	l ()Lnet/minecraft/server/ParticleParam; getParticleType
	n ()V registerGoals
	u_ ()V defineSynchedData
ws net/minecraft/server/packs/metadata/pack/package-info
wt net/minecraft/server/packs/metadata/package-info
wu net/minecraft/server/packs/package-info
dba$1 net/minecraft/client/gui/font/providers/BitmapProvider$1
bbe$1 net/minecraft/world/item/DirectionalPlaceContext$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/WorldGenFeatureMushroomConfiguration net/minecraft/world/level/levelgen/feature/BushConfiguration
	a state
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/BlockSmithingTable net/minecraft/world/level/block/SmithingTableBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
xb net/minecraft/server/packs/repository/package-info
net/minecraft/server/DataConverterSchemaV100 net/minecraft/util/datafix/schemas/V100
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$4
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
net/minecraft/server/DataConverterSchemaV102 net/minecraft/util/datafix/schemas/V102
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
cey$a net/minecraft/world/level/levelgen/feature/SwamplandHutFeature$FeatureStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
xp net/minecraft/server/packs/resources/package-info
net/minecraft/server/WhiteList net/minecraft/server/players/UserWhiteList
	a ()[Ljava/lang/String; getUserList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/JsonListEntry; createEntry
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; find
	b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
	isWhitelisted (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
net/minecraft/server/BlockWallSign net/minecraft/world/level/block/WallSignBlock
	d AABBS
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	l ()Ljava/lang/String; getDescriptionId
net/minecraft/server/SlotResult net/minecraft/world/inventory/ResultSlot
	a craftSlots
	b player
	g removeCount
	a (I)Lnet/minecraft/server/ItemStack; remove
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/ItemStack;I)V onQuickCraft
	b (I)V onSwapCraft
	c (Lnet/minecraft/server/ItemStack;)V checkTakeAchievements
net/minecraft/server/ITileEntity net/minecraft/world/level/block/EntityBlock
	createTile (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
ye net/minecraft/server/players/package-info
net/minecraft/server/BlockDirtSnowSpreadable net/minecraft/world/level/block/SpreadingSnowyDirtBlock
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canBeGrass
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canPropagate
yi net/minecraft/server/rcon/package-info
net/minecraft/server/LootItemFunctionSetStewEffect net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction
	a effectDurationMap
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionSetStewEffect;)Ljava/util/Map; access$100
	b ()Lcqs$a; stewEffect
net/minecraft/server/PacketPlayOutRecipes net/minecraft/network/protocol/game/ClientboundRecipePacket
	a state
	b recipes
	c toHighlight
	d guiOpen
	e filteringCraftable
	f furnaceGuiOpen
	g furnaceFilteringCraftable
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/List; getRecipes
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/List; getHighlights
	d ()Z isGuiOpen
	e ()Z isFilteringCraftable
	f ()Z isFurnaceGuiOpen
	g ()Z isFurnaceFilteringCraftable
	h ()Lnet/minecraft/server/PacketPlayOutRecipes$Action; getState
yn net/minecraft/server/rcon/thread/package-info
uv$c net/minecraft/server/level/ChunkHolder$LevelChangeListener
	a (Lnet/minecraft/server/ChunkCoordIntPair;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V onLevelChange
net/minecraft/server/WorldSettings net/minecraft/world/level/LevelSettings
	a seed
	b gameType
	c generateMapFeatures
	d hardcore
	e levelType
	f allowCommands
	g startingBonusItems
	h levelTypeOptions
	a ()Lnet/minecraft/server/WorldSettings; enableStartingBonusItems
	b ()Lnet/minecraft/server/WorldSettings; enableSinglePlayerCommands
	c ()Z hasStartingBonusItems
	d ()J getSeed
	e ()Lnet/minecraft/server/EnumGamemode; getGameType
	f ()Z isHardcore
	g ()Z isGenerateMapFeatures
	h ()Lnet/minecraft/server/WorldType; getLevelType
	i ()Z getAllowCommands
	j ()Lcom/google/gson/JsonElement; getLevelTypeOptions
	setGeneratorSettings (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/WorldSettings; setLevelTypeOptions
uv$d net/minecraft/server/level/ChunkHolder$PlayerProvider
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)Ljava/util/stream/Stream; getPlayers
yr net/minecraft/sounds/package-info
net/minecraft/server/BlockFlowers net/minecraft/world/level/block/FlowerBlock
	a SHAPE
	b suspiciousStewEffect
	c effectDuration
	R_ ()Lnet/minecraft/server/Block$EnumRandomOffset; getOffsetType
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	d ()Lnet/minecraft/server/MobEffectList; getSuspiciousStewEffect
	e ()I getEffectDuration
net/minecraft/server/SensorNearestPlayers net/minecraft/world/entity/ai/sensing/PlayerSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityPlayer;)Z lambda$doTick$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
net/minecraft/server/PacketPlayInBEdit net/minecraft/network/protocol/game/ServerboundEditBookPacket
	a book
	b signing
	c hand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/ItemStack; getBook
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z isSigning
	d ()Lnet/minecraft/server/EnumHand; getHand
net/minecraft/server/PathfinderGoalTradeWithPlayer net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal
	a mob
	a ()Z canUse
	c ()V start
	d ()V stop
asd$a net/minecraft/world/entity/animal/horse/Horse$HorseGroupData
	a variant
za net/minecraft/stats/package-info
net/minecraft/server/EntityLightning net/minecraft/world/entity/global/LightningBolt
	b seed
	d flashes
	e visualOnly
	f cause
	lifeTicks life
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (I)V spawnFire
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cc ()Lnet/minecraft/server/SoundCategory; getSoundSource
	d (Lnet/minecraft/server/EntityPlayer;)V setCause
	f ()Lnet/minecraft/server/EntityPlayer; getCause
	h ()V tick
	u_ ()V defineSynchedData
axk$1 net/minecraft/world/entity/raid/Raid$1
	a $SwitchMap$net$minecraft$world$entity$raid$Raid$RaiderType
	b $SwitchMap$net$minecraft$world$Difficulty
zj net/minecraft/tags/package-info
net/minecraft/server/LootItemFunctionCopyNBT$Source net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$DataSource
	e name
	f param
	g getter
	h $VALUES
	a (Ljava/lang/String;)Lnet/minecraft/server/LootItemFunctionCopyNBT$Source; getByName
	a (Lnet/minecraft/server/LootContextParameter;Ljava/util/function/Function;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/NBTBase; lambda$new$0
zm net/minecraft/util/CrashReportFiller
	b (Lnet/minecraft/server/CrashReport;)Lnet/minecraft/server/CrashReport; fillReport
cxg$1 com/mojang/realmsclient/util/RealmsPersistence$1
duq$1 net/minecraft/client/renderer/entity/VindicatorRenderer$1
	a this$0
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityVindicator;FFFFFFF)V render
net/minecraft/server/WorldGenFeatureJungleTree net/minecraft/world/level/levelgen/feature/JungleTreeFeature
	a (Ljava/util/Random;)I getTreeHeight
net/minecraft/server/DataConverterHanging net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix
	a DIRECTIONS
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$3
	a (Lcom/mojang/datafixers/Dynamic;ZZ)Lcom/mojang/datafixers/Dynamic; doFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$5
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$4
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
zw net/minecraft/util/LimitedCapacityList
	a items
	b clazz
	c locks
	d size
	e head
	a ()I getSize
	a (Ljava/lang/Object;)Ljava/lang/Object; add
	b ()I getMaxSize
	c ()[Ljava/lang/Object; getItems
net/minecraft/server/NetworkManager net/minecraft/network/Connection
	a ROOT_MARKER
	b PACKET_MARKER
	c ATTRIBUTE_PROTOCOL
	d NETWORK_WORKER_GROUP
	e NETWORK_EPOLL_WORKER_GROUP
	f LOCAL_WORKER_GROUP
	g LOGGER
	h receiving
	m disconnectedReason
	n encrypted
	o disconnectionHandled
	p receivedPackets
	packetQueue queue
	q sentPackets
	r averageReceivedPackets
	s averageSentPackets
	socketAddress address
	t tickCount
	u handlingFault
	a ()V tick
	a (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/server/Packet;)V channelRead0
	a (Ljava/net/InetAddress;IZ)Lnet/minecraft/server/NetworkManager; connectToServer
	a (Ljava/net/SocketAddress;)Lnet/minecraft/server/NetworkManager; connectToLocalServer
	a (Ljavax/crypto/SecretKey;)V setEncryptionKey
	a (Lnet/minecraft/server/EnumProtocol;Lnet/minecraft/server/EnumProtocol;Lnet/minecraft/server/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V lambda$sendPacket$4
	a (Lnet/minecraft/server/IChatBaseComponent;Lio/netty/util/concurrent/Future;)V lambda$exceptionCaught$3
	a (Lnet/minecraft/server/Packet;Lnet/minecraft/server/PacketListener;)V genericsFtw
	b (Lnet/minecraft/server/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V sendPacket
	close (Lnet/minecraft/server/IChatBaseComponent;)V disconnect
	d ()Lnet/minecraft/server/EnumProtocolDirection; getReceiving
	e ()Lnet/minecraft/server/EnumProtocolDirection; getSending
	f ()Z isEncrypted
	getSocketAddress ()Ljava/net/SocketAddress; getRemoteAddress
	h ()Z isConnecting
	i ()Lnet/minecraft/server/PacketListener; getPacketListener
	isLocal ()Z isMemoryConnection
	j ()Lnet/minecraft/server/IChatBaseComponent; getDisconnectedReason
	m ()F getAverageReceivedPackets
	n ()F getAverageSentPackets
	o ()V flushQueue
	p ()Lio/netty/channel/DefaultEventLoopGroup; lambda$static$2
	q ()Lio/netty/channel/epoll/EpollEventLoopGroup; lambda$static$1
	r ()Lio/netty/channel/nio/NioEventLoopGroup; lambda$static$0
	sendPacket (Lnet/minecraft/server/Packet;)V send
	sendPacket (Lnet/minecraft/server/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V send
	setCompressionLevel (I)V setupCompression
	setPacketListener (Lnet/minecraft/server/PacketListener;)V setListener
	stopReading ()V setReadOnly
net/minecraft/server/WorldGenWoodlandMansion net/minecraft/world/level/levelgen/feature/WoodlandMansionFeature
	a ()Lceu$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;II)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IIII)Lnet/minecraft/server/ChunkCoordIntPair; getPotentialFeatureChunkFromLocationWithOffset
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
fb$a$2 net/minecraft/core/Direction$Axis$2
	a (DDD)D choose
	a (III)I choose
fb$a$1 net/minecraft/core/Direction$Axis$1
	a (DDD)D choose
	a (III)I choose
net/minecraft/server/PathfinderGoalEatTile net/minecraft/world/entity/ai/goal/EatBlockGoal
	a IS_TALL_GRASS
	b mob
	c level
	d eatAnimationTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()I getEatAnimationTick
fb$a$3 net/minecraft/core/Direction$Axis$3
	a (DDD)D choose
	a (III)I choose
net/minecraft/server/ItemBanner net/minecraft/world/item/BannerItem
	a (Lnet/minecraft/server/ItemStack;Ljava/util/List;)V appendHoverTextFromBannerBlockEntityTag
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbdr;)V appendHoverText
	b ()Lnet/minecraft/server/EnumColor; getColor
net/minecraft/server/EntityHuman net/minecraft/world/entity/player/Player
	activeContainer containerMenu
	b POSES
	bC jumpTriggerTime
	bD oBob
	bE bob
	bF takeXpDelay
	bG xCloakO
	bH yCloakO
	bI zCloakO
	bJ xCloak
	bK yCloak
	bL zCloak
	bM wasUnderwater
	bR enchantmentSeed
	bS defaultFlySpeed
	bU respawnForced
	bV lastLevelUpTime
	bW gameProfile
	bX reducedDebugInfo
	bY lastItemInMainHand
	bZ cooldowns
	bs STANDING_DIMENSIONS
	bt DATA_PLAYER_MODE_CUSTOMISATION
	bu DATA_PLAYER_MAIN_HAND
	bv DATA_SHOULDER_LEFT
	bw DATA_SHOULDER_RIGHT
	c DATA_PLAYER_ABSORPTION_ID
	d DATA_SCORE_ID
	defaultContainer inventoryMenu
	e timeEntitySatOnShoulder
	enderChest enderChestInventory
	exp experienceProgress
	expLevel experienceLevel
	expTotal totalExperience
	g respawnPosition
	hookedFish fishing
	sleepTicks sleepCounter
	O ()Lnet/minecraft/server/IChatBaseComponent; getName
	X ()V resetPos
	Y ()V remove
	a (B)V handleEntityEvent
	a (Lawh;)Z isModelPartShown
	a (Lcom/mojang/authlib/GameProfile;)Ljava/util/UUID; createPlayerUUID
	a (Ljava/lang/String;Lnet/minecraft/server/ChatModifier;)V lambda$decorateDisplayNameComponent$6
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z bedInRange
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/ItemStack;)Z mayUseItemAt
	a (Lnet/minecraft/server/CommandBlockListenerAbstract;)V openMinecartCommandBlock
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/Entity;)V crit
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interactOn
	a (Lnet/minecraft/server/EntityHuman;)Z canHarmPlayer
	a (Lnet/minecraft/server/EntityMonster;)Z lambda$startSleepInBed$3
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EnumGamemode;)V setGameMode
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$hurtCurrentlyUsedShield$2
	a (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	a (Lnet/minecraft/server/EnumMainHand;)V setMainArm
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Vec3D;)V makeStuckInBlock
	a (Lnet/minecraft/server/IChatBaseComponent;Z)V displayClientMessage
	a (Lnet/minecraft/server/ItemStack;ZZ)Lnet/minecraft/server/EntityItem; drop
	a (Lnet/minecraft/server/MinecraftKey;)V awardStat
	a (Lnet/minecraft/server/MinecraftKey;I)V awardStat
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/ParticleParam;)V addParticlesAroundSelf
	a (Lnet/minecraft/server/SoundEffect;FF)V playSound
	a (Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playNotifySound
	a (Lnet/minecraft/server/Statistic;)V resetStat
	a (Lnet/minecraft/server/Statistic;I)V awardStat
	a (Lnet/minecraft/server/TileEntityCommand;)V openCommandBlock
	a (Lnet/minecraft/server/TileEntityJigsaw;)V openJigsawBlock
	a (Lnet/minecraft/server/TileEntityStructure;)V openStructureBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumGamemode;)Z blockActionRestricted
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; eat
	a ([Lnet/minecraft/server/MinecraftKey;)V awardRecipesByKey
	aN ()V rideTick
	aO ()D getRidingHeight
	aX ()I getDimensionChangingDelay
	aZ ()Ljava/lang/Iterable; getHandSlots
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	ab ()I getPortalWaitTime
	addScore (I)V increaseScore
	ai ()Lnet/minecraft/server/SoundEffect; getSwimSound
	aj ()Lnet/minecraft/server/SoundEffect; getSwimSplashSound
	ak ()Lnet/minecraft/server/SoundEffect; getSwimHighSpeedSplashSound
	ap ()Z makeStepSound
	applyExhaustion (F)V causeFoodExhaustion
	ax ()V updateSwimming
	az ()V doWaterSplashEffect
	b (FF)V causeFallDamage
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z bedBlocked
	b (Lnet/minecraft/server/Entity;)V magicCrit
	b (Lnet/minecraft/server/EntityLiving;)V killed
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;)V lambda$playShoulderEntityAmbientSound$1
	b (Lnet/minecraft/server/EnumItemSlot;)Lnet/minecraft/server/ItemStack; getItemBySlot
	b (Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/Statistic;)V awardStat
	bD ()Ljava/lang/String; getScoreboardName
	bE ()Z isPushedByWater
	bH ()Z shouldShowName
	ba ()Ljava/lang/Iterable; getArmorSlots
	bj ()Z isSwimming
	c (Lnet/minecraft/server/Entity;)V touch
	c (Lnet/minecraft/server/EntityHuman;)Z isInvisibleTo
	c (Lnet/minecraft/server/EntityTypes;)Z lambda$playShoulderEntityAmbientSound$0
	c (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; decorateDisplayNameComponent
	cF ()V dropEquipment
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cW ()Z isImmobile
	cY ()V jumpFromGround
	cc ()Lnet/minecraft/server/SoundCategory; getSoundSource
	cd ()I getFireImmuneTicks
	checkMovement (DDD)V checkMovementStatistics
	cl ()V registerAttributes
	closeInventory ()V closeContainer
	cq ()Z isAlwaysExperienceDropper
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	d (Lnet/minecraft/server/DamageSource;F)V actuallyHurt
	d (Lnet/minecraft/server/Entity;)V lambda$respawnEntityOnShoulder$5
	d (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	d (Lnet/minecraft/server/EntityLiving;)V blockUsingShield
	dA ()Z updateIsUnderwater
	dB ()V updatePlayerPose
	dE ()V sweepAttack
	dF ()V respawn
	dG ()Z isLocalPlayer
	dJ ()I getSleepTimer
	dM ()I getEnchantmentSeed
	dP ()Z isHurt
	dQ ()Z mayBuild
	dU ()Lnet/minecraft/server/IChatBaseComponent; getDisplayNameWithUuid
	dV ()Z isReducedDebugInfo
	dY ()F getCurrentItemAttackStrengthDelay
	dZ ()V resetAttackStrengthTicker
	db ()F getSpeed
	dc ()V serverAiStep
	dg ()F getAbsorptionAmount
	di ()Lnet/minecraft/server/EnumMainHand; getMainArm
	discoverRecipes (Ljava/util/Collection;)I awardRecipes
	dy ()V stopSleeping
	e (Lnet/minecraft/server/BlockPosition;)V startSleeping
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	e (Lnet/minecraft/server/Vec3D;)V travel
	eb ()F getLuck
	enchantDone (Lnet/minecraft/server/ItemStack;I)V onEnchantmentPerformed
	f (Lnet/minecraft/server/BlockPosition;)Z freeAt
	f (Lnet/minecraft/server/EntityLiving;)V doAutoAttackOnTouch
	f (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; getProjectile
	g ()Lnet/minecraft/server/ItemCooldown; createItemCooldowns
	g (Lnet/minecraft/server/BlockPosition;)V lambda$stopSleepInBed$4
	g (Lnet/minecraft/server/ItemStack;)Z addItem
	g (Lnet/minecraft/server/NBTTagCompound;)Z setEntityOnShoulder
	getBed ()Lnet/minecraft/server/BlockPosition; getRespawnPosition
	getBed (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Z)Ljava/util/Optional; checkBedValidRespawnPosition
	getCooldownTracker ()Lnet/minecraft/server/ItemCooldown; getCooldowns
	getEnderChest ()Lnet/minecraft/server/InventoryEnderChest; getEnderChestInventory
	getExpToLevel ()I getXpNeededForNextLevel
	getOfflineUUID (Ljava/lang/String;)Ljava/util/UUID; createPlayerUUID
	getProfile ()Lcom/mojang/authlib/GameProfile; getGameProfile
	giveExp (I)V giveExperiencePoints
	h ()V tick
	hasBlock (Lnet/minecraft/server/IBlockData;)Z canDestroy
	isCreativeAndOp ()Z canUseGameMasterBlocks
	isDeeplySleeping ()Z isSleepingLongEnough
	j ()V stopRiding
	j (Lnet/minecraft/server/NBTTagCompound;)V playShoulderEntityAmbientSound
	k ()V aiStep
	l ()V turtleHelmetTick
	levelDown (I)V giveExperienceLevels
	m (DDD)V checkRidingStatistiscs
	m (F)V hurtArmor
	n ()V moveCloak
	n (F)V hurtCurrentlyUsedShield
	n (Z)Lnet/minecraft/server/EntityItem; drop
	o (I)Lnet/minecraft/server/SoundEffect; getFallDamageSound
	o (Z)V disableShield
	openBook (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)V openItemGui
	openContainer (Lnet/minecraft/server/ITileInventory;)Ljava/util/OptionalInt; openMenu
	openSign (Lnet/minecraft/server/TileEntitySign;)V openTextEdit
	openTrade (ILnet/minecraft/server/MerchantRecipeList;IIZZ)V sendMerchantOffers
	p (Z)Z canEat
	q (F)V setAbsorptionAmount
	q (Z)V setReducedDebugInfo
	releaseShoulderEntities ()V removeEntitiesOnShoulder
	removeCursedItems ()V destroyVanishingCursedItems
	s (F)F getAttackStrengthScale
	sleep (Lnet/minecraft/server/BlockPosition;)Lcom/mojang/datafixers/util/Either; startSleepInBed
	spawnEntityFromShoulder (Lnet/minecraft/server/NBTTagCompound;)V respawnEntityOnShoulder
	t ()Z isSpectator
	u_ ()V defineSynchedData
	undiscoverRecipes (Ljava/util/Collection;)I resetRecipes
	updateAbilities ()V onUpdateAbilities
	wakeup (ZZZ)V stopSleepInBed
aga$1 net/minecraft/util/datafix/schemas/V704$1
net/minecraft/server/IReloadable net/minecraft/server/packs/resources/ReloadInstance
	a ()Ljava/util/concurrent/CompletableFuture; done
	b ()F getActualProgress
	c ()Z isApplying
	d ()Z isDone
	e ()V checkExceptions
cwu$a com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$FrameButton
	a imageId
	b this$0
	c image
	d resetType
cwd$2 com/mojang/realmsclient/gui/screens/RealmsBackupScreen$2
	a this$0
net/minecraft/server/PacketPlayOutCloseWindow net/minecraft/network/protocol/game/ClientboundContainerClosePacket
	a containerId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
cwu$b com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetType
	a NONE
	b GENERATE
	c UPLOAD
	d ADVENTURE
	e SURVIVAL_SPAWN
	f EXPERIENCE
	g INSPIRATION
	h $VALUES
cwd$3 com/mojang/realmsclient/gui/screens/RealmsBackupScreen$3
	a this$0
net/minecraft/server/BlockStateDirection net/minecraft/world/level/block/state/properties/DirectionProperty
	a (Ljava/lang/String;Ljava/util/Collection;)Lnet/minecraft/server/BlockStateDirection; create
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Lnet/minecraft/server/BlockStateDirection; create
	a (Ljava/lang/String;[Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockStateDirection; create
	of (Ljava/lang/String;)Lnet/minecraft/server/BlockStateDirection; create
cwd$1 com/mojang/realmsclient/gui/screens/RealmsBackupScreen$1
	a this$0
	a (Ljava/util/List;)V lambda$run$0
net/minecraft/server/MinecartTrackLogic net/minecraft/world/level/block/RailState
	a level
	b pos
	c block
	d state
	e isStraight
	f connections
	a ()Ljava/util/List; getConnections
	a (Lnet/minecraft/server/BlockPosition;)Z hasRail
	a (Lnet/minecraft/server/BlockPropertyTrackPosition;)V updateConnections
	a (Lnet/minecraft/server/MinecartTrackLogic;)Z connectsTo
	a (ZZ)Lnet/minecraft/server/MinecartTrackLogic; place
	b ()I countPotentialConnections
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MinecartTrackLogic; getRail
	b (Lnet/minecraft/server/MinecartTrackLogic;)Z canConnectTo
	c ()Lnet/minecraft/server/IBlockData; getState
	c (Lnet/minecraft/server/BlockPosition;)Z hasConnection
	c (Lnet/minecraft/server/MinecartTrackLogic;)V connectTo
	d ()V removeSoftConnections
	d (Lnet/minecraft/server/BlockPosition;)Z hasNeighborRail
cz$c net/minecraft/commands/arguments/ScoreHolderArgument$Serializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/ArgumentScoreholder;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lnet/minecraft/server/ArgumentScoreholder;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ArgumentScoreholder; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
cz$a net/minecraft/commands/arguments/ScoreHolderArgument$Result
cz$b net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult
	a selector
net/minecraft/server/EntityFlying net/minecraft/world/entity/FlyingMob
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	b (FF)V causeFallDamage
	e (Lnet/minecraft/server/Vec3D;)V travel
	w_ ()Z onLadder
cxg$a com/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData
	a newsLink
	b hasUnreadNews
cwu$1 com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$1
	a this$0
dzx$a net/minecraft/client/searchtree/SearchRegistry$Key
cwu$2 com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$2
	a this$0
	a (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;)V lambda$run$0
net/minecraft/server/IDispenseBehavior net/minecraft/core/dispenser/DispenseItemBehavior
	NONE NOOP
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; lambda$static$0
	c ()V bootStrap
net/minecraft/server/ArgumentBlock net/minecraft/commands/arguments/blocks/BlockStateParser
	a ERROR_NO_TAGS_ALLOWED
	b ERROR_UNKNOWN_BLOCK
	c ERROR_UNKNOWN_PROPERTY
	d ERROR_DUPLICATE_PROPERTY
	e ERROR_INVALID_VALUE
	f ERROR_EXPECTED_VALUE
	g ERROR_EXPECTED_END_OF_PROPERTIES
	h SUGGEST_NOTHING
	i reader
	j forTesting
	k properties
	l vagueProperties
	m id
	n definition
	o state
	p nbt
	q tag
	r tagCursor
	s suggestions
	a (I)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$readBlock$5
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyValue
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/IBlockState;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder; addSuggestions
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	a (Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$readVagueProperties$7
	a (Ljava/lang/StringBuilder;Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)V appendProperty
	a (Lnet/minecraft/server/IBlockData;)Ljava/lang/String; serialize
	a (Lnet/minecraft/server/IBlockState;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$readProperties$6
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/String;I)V setValue
	a (Z)Lnet/minecraft/server/ArgumentBlock; parse
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestPropertyNameOrEnd
	b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	c ()Lnet/minecraft/server/NBTTagCompound; getNbt
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyNameOrEnd
	c (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	d ()Lnet/minecraft/server/MinecraftKey; getTag
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestPropertyName
	e ()V readBlock
	e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyName
	f ()V readTag
	f (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenNbt
	g ()V readProperties
	g (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestEquals
	getBlockData ()Lnet/minecraft/server/IBlockData; getState
	getStateMap ()Ljava/util/Map; getProperties
	h ()V readVagueProperties
	h (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestNextPropertyOrEnd
	i ()V readNbt
	i (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenVaguePropertiesOrNbt
	j ()Ljava/util/Map; getVagueProperties
	j (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenPropertiesOrNbt
	k ()Z hasBlockEntity
	k (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTag
	l (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestBlockIdOrTag
net/minecraft/server/BiomeBigHills net/minecraft/world/level/biome/MountainBiome
net/minecraft/server/MapIconBanner net/minecraft/world/level/saveddata/maps/MapBanner
	a pos
	b color
	c name
	a ()Lnet/minecraft/server/BlockPosition; getPos
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MapIconBanner; fromWorld
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/MapIconBanner; load
	b ()Lnet/minecraft/server/EnumColor; getColor
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; lambda$fromWorld$0
	c ()Lnet/minecraft/server/MapIcon$Type; getDecoration
	d ()Lnet/minecraft/server/IChatBaseComponent; getName
	e ()Lnet/minecraft/server/NBTTagCompound; save
	f ()Ljava/lang/String; getId
net/minecraft/server/DataConverterSchemaV143 net/minecraft/util/datafix/schemas/V143
crn$a net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionKilledByPlayer; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionKilledByPlayer;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cwu$5 com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$5
	a this$0
cwu$6 com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$6
	a this$0
net/minecraft/server/SecondaryWorldData net/minecraft/world/level/storage/DerivedLevelData
	b wrapped
	a ()J getSeed
	a (I)V setXSpawn
	a (J)V setGameTime
	a (Ljava/lang/String;)V setLevelName
	a (Lnet/minecraft/server/BlockPosition;)V setSpawn
	a (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/NBTTagCompound; getDimensionData
	a (Lnet/minecraft/server/DimensionManager;Lnet/minecraft/server/NBTTagCompound;)V setDimensionData
	a (Lnet/minecraft/server/EnumDifficulty;)V setDifficulty
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; createTag
	a (Lnet/minecraft/server/WorldType;)V setGenerator
	a (Z)V setThundering
	b ()I getXSpawn
	b (I)V setYSpawn
	b (J)V setDayTime
	b (Z)V setRaining
	c ()I getYSpawn
	c (I)V setZSpawn
	c (Z)V setAllowCommands
	d ()I getZSpawn
	d (I)V setVersion
	d (Z)V setInitialized
	e ()J getGameTime
	e (I)V setThunderTime
	e (Z)V setDifficultyLocked
	f ()J getDayTime
	f (I)V setRainTime
	g ()J getSizeOnDisk
	h ()Lnet/minecraft/server/NBTTagCompound; getLoadedPlayerTag
	i ()Ljava/lang/String; getLevelName
	j ()I getVersion
	k ()J getLastPlayed
	l ()Z isThundering
	m ()I getThunderTime
	n ()Z isRaining
	o ()I getRainTime
	p ()Lnet/minecraft/server/EnumGamemode; getGameType
	q ()Z isGenerateMapFeatures
	r ()Z isHardcore
	s ()Lnet/minecraft/server/WorldType; getGeneratorType
	t ()Z getAllowCommands
	u ()Z isInitialized
	v ()Lnet/minecraft/server/GameRules; getGameRules
	w ()Lnet/minecraft/server/EnumDifficulty; getDifficulty
	x ()Z isDifficultyLocked
	y ()Lnet/minecraft/server/CustomFunctionCallbackTimerQueue; getScheduledEvents
cwu$3 com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$3
	a this$0
cwu$4 com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$4
	a this$0
cwu$9 com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$9
	a $SwitchMap$com$mojang$realmsclient$dto$WorldTemplate$WorldTemplateType
	b $SwitchMap$com$mojang$realmsclient$gui$screens$RealmsResetWorldScreen$ResetType
cwu$7 com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$7
	a this$0
net/minecraft/server/DemoPlayerInteractManager net/minecraft/server/level/DemoMode
	c displayedIntro
	d demoHasEnded
	e demoEndedReminder
	f gameModeTicks
	a ()V tick
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType;Lnet/minecraft/server/EnumDirection;I)V handleBlockBreakAction
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; useItem
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; useItemOn
	e ()V outputDemoReminder
cwu$8 com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$8
	a this$0
net/minecraft/server/EntityMagmaCube net/minecraft/world/entity/monster/MagmaCube
	H ()Lnet/minecraft/server/MinecraftKey; getDefaultLootTable
	a (IZ)V setSize
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	aE ()I getLightColor
	aF ()F getBrightness
	b (FF)V causeFallDamage
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkMagmaCubeSpawnRules
	bc ()Z isOnFire
	c (Lnet/minecraft/server/Tag;)V jumpInLiquid
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cY ()V jumpFromGround
	cl ()V registerAttributes
	dT ()I getJumpDelay
	dU ()V decreaseSquish
	dV ()Z isDealsDamage
	dW ()I getAttackDamage
	dX ()Lnet/minecraft/server/SoundEffect; getSquishSound
	dY ()Lnet/minecraft/server/SoundEffect; getJumpSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	l ()Lnet/minecraft/server/ParticleParam; getParticleType
net/minecraft/server/DataConverterEntityCodSalmon net/minecraft/util/datafix/fixes/EntityCodSalmonFix
	a RENAMED_IDS
	b RENAMED_EGG_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/server/DataConverterFlatten net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix
	a MAP
	b IDS
	c DAMAGE_IDS
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$static$1
	a (Ljava/lang/String;I)Ljava/lang/String; updateItem
	a (Ljava/util/HashMap;)V lambda$static$0
net/minecraft/server/EntitySpider$PathfinderGoalSpiderNearestAttackableTarget net/minecraft/world/entity/monster/Spider$SpiderTargetGoal
	a ()Z canUse
net/minecraft/server/EntityRabbit$PathfinderGoalRabbitPanic net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal
	f rabbit
	e ()V tick
net/minecraft/server/DataConverterBlockName net/minecraft/util/datafix/fixes/BlockNameFlatteningFix
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$3
	a (Lcom/mojang/datafixers/util/Either;)Ljava/lang/String; lambda$null$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
net/minecraft/server/BlockTall net/minecraft/world/level/block/CrossCollisionBlock
	e WATERLOGGED
	f PROPERTY_BY_DIRECTION
	g collisionShapeByIndex
	h shapeByIndex
	i stateToIndex
	a (FFFFF)[Lnet/minecraft/server/VoxelShape; makeShapes
	a (Ljava/util/Map$Entry;)Z lambda$static$0
	a (Lnet/minecraft/server/EnumDirection;)I indexFor
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	j (Lnet/minecraft/server/IBlockData;)I getAABBIndex
	q (Lnet/minecraft/server/IBlockData;)I lambda$getAABBIndex$1
net/minecraft/server/PacketPlayOutUpdateHealth net/minecraft/network/protocol/game/ClientboundSetHealthPacket
	a health
	b food
	c saturation
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()F getHealth
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getFood
	d ()F getSaturation
net/minecraft/server/BehaviorNearestVillage net/minecraft/world/entity/ai/behavior/GoToClosestVillage
	a speed
	b closeEnoughDistance
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)D lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
net/minecraft/server/ReloadableProfiled net/minecraft/server/packs/resources/ProfiledReloadInstance
	d LOGGER
	e total
	a (Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V lambda$null$4
	a (Ljava/util/List;)V finish
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V lambda$null$5
	a (Ljava/util/concurrent/Executor;Lxd$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/IReloadListener;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; lambda$new$7
	a (Lnet/minecraft/server/IReloadListener;Lnet/minecraft/server/MethodProfiler;Lnet/minecraft/server/MethodProfiler;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Void;)Lxe$a; lambda$null$6
	b (Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V lambda$null$2
	b (Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V lambda$null$3
	f ()I lambda$null$1
	g ()I lambda$null$0
dlf$a net/minecraft/client/particle/HugeExplosionParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dkt$1 net/minecraft/client/particle/CampfireSmokeParticle$1
net/minecraft/server/EnumResourcePackType net/minecraft/server/packs/PackType
	c directory
	d $VALUES
	a ()Ljava/lang/String; getDirectory
cic$1 net/minecraft/world/level/levelgen/structure/BoundingBox$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/PropertyManager$EditableProperty net/minecraft/server/dedicated/Settings$MutableValue
	a this$0
	b key
	c value
	d serializer
	set (Ljava/lang/Object;)Lnet/minecraft/server/PropertyManager; update
net/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool
	a EMPTY
	b INVALID
	c name
	d rawTemplates
	e templates
	f fallback
	g projection
	h maxSize
	a ()Lnet/minecraft/server/MinecraftKey; getFallback
	a (I)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure; getTemplate
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate; deserialize
	a (Lcom/mojang/datafixers/Dynamic;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/util/Pair; lambda$deserialize$2
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lcom/mojang/datafixers/types/DynamicOps;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object; lambda$serialize$1
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure; getRandomTemplate
	a (Lnet/minecraft/server/DefinedStructureManager;)I getMaxSize
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure;)I lambda$getMaxSize$0
	b ()Lnet/minecraft/server/MinecraftKey; getName
	b (Ljava/util/Random;)Ljava/util/List; getShuffledTemplates
	c ()I size
net/minecraft/server/WorldChunkManager net/minecraft/world/level/biome/BiomeSource
	a supportedStructures
	b surfaceBlocks
	c PLAYER_SPAWN_BIOMES
	a ()Ljava/util/List; getPlayerSpawnBiomes
	a (III)Ljava/util/Set; getBiomesWithin
	a (IIIIZ)[Lnet/minecraft/server/BiomeBase; getBiomeBlock
	a (IIILjava/util/List;)Z containsOnly
	a (IIILjava/util/List;Ljava/util/Random;)Lnet/minecraft/server/BlockPosition; findBiome
	a (Lnet/minecraft/server/StructureGenerator;)Z canGenerateStructure
	b ()Ljava/util/Set; getSurfaceBlocks
	b (II)Lnet/minecraft/server/BiomeBase; getNoiseBiome
	c (II)F getHeightValue
net/minecraft/server/WorldGenEndCityPieces$Piece net/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece
	d templateName
	e rotation
	f overwrite
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/DefinedStructureManager;)V loadTemplate
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/PacketCompressor net/minecraft/network/CompressionEncoder
	a encodeBuf
	b deflater
	c threshold
	a ()I getThreshold
	a (I)V setThreshold
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
czm$a net/minecraft/client/gui/components/ContainerObjectSelectionList$Entry
	a focused
	b dragging
net/minecraft/server/BlockSoil net/minecraft/world/level/block/FarmBlock
	b SHAPE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isUnderCrops
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isNearWater
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;F)V fallOn
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	fade (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V turnToDirt
	n (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/server/TileEntityHopper net/minecraft/world/level/block/entity/HopperBlockEntity
	j cooldownTime
	k tickedGameTime
	A ()D getLevelY
	B ()D getLevelZ
	M_ ()I getContainerSize
	T_ ()V tick
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Ljava/util/function/Supplier;)Z tryMoveItems
	a (Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IHopper;)Z suckInItems
	a (Lnet/minecraft/server/IHopper;Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/stream/Stream; lambda$getItemsAtAndAbove$4
	a (Lnet/minecraft/server/IHopper;Lnet/minecraft/server/IInventory;ILnet/minecraft/server/EnumDirection;)Z tryTakeInItemFromSlot
	a (Lnet/minecraft/server/IHopper;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/EnumDirection;I)Z lambda$suckInItems$3
	a (Lnet/minecraft/server/IInventory;I)Z lambda$isEmptyContainer$2
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/EntityItem;)Z addItem
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/EnumDirection;)Ljava/util/stream/IntStream; getSlots
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/ItemStack;ILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/ItemStack; tryMoveInItem
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/ItemStack;ILnet/minecraft/server/EnumDirection;)Z canPlaceItemInContainer
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z canMergeItems
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NonNullList;)V setItems
	a (Lnet/minecraft/server/World;DDD)Lnet/minecraft/server/IInventory; getContainerAt
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IInventory; getContainerAt
	b (Lnet/minecraft/server/Entity;)Ljava/lang/Boolean; lambda$entityInside$5
	b (Lnet/minecraft/server/IHopper;)Lnet/minecraft/server/IInventory; getSourceContainer
	b (Lnet/minecraft/server/IInventory;I)Z lambda$isFullContainer$1
	b (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/EnumDirection;)Z isFullContainer
	b (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/ItemStack;ILnet/minecraft/server/EnumDirection;)Z canTakeItemFromContainer
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c ()Z isEmpty
	c (Lnet/minecraft/server/IHopper;)Ljava/util/List; getItemsAtAndAbove
	c (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/EnumDirection;)Z isEmptyContainer
	f ()Lnet/minecraft/server/NonNullList; getItems
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	h ()Z inventoryEmpty
	s ()Z inventoryFull
	t ()Z ejectItems
	u ()Lnet/minecraft/server/IInventory; getAttachedContainer
	v ()Z isOnCooldown
	x ()Z isOnCustomCooldown
	y ()Ljava/lang/Boolean; lambda$tick$0
	z ()D getLevelX
net/minecraft/server/CommandSeed net/minecraft/server/commands/SeedCommand
	a (JLnet/minecraft/server/ChatModifier;)V lambda$null$1
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
net/minecraft/server/DataConverterDye net/minecraft/util/datafix/fixes/DyeItemRenameFix
	a RENAMED_IDS
net/minecraft/server/DataConverterCustomNameEntity net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTagCustomName
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
ayn$1 net/minecraft/world/inventory/BeaconMenu$1
	a this$0
	J_ ()I getMaxStackSize
	b (ILnet/minecraft/server/ItemStack;)Z canPlaceItem
net/minecraft/server/MinecraftSerializableLong net/minecraft/core/SerializableLong
	a value
	a ()J value
	a (J)Lnet/minecraft/server/MinecraftSerializableLong; of
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/MinecraftSerializableLong; of
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
net/minecraft/server/BehaviorWalkAwayBlock net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory
	a memoryType
	b speed
	c closeEnoughDist
	d tooFarDistance
	e tooLongUnreachableDuration
	a (Lnet/minecraft/server/EntityVillager;J)V dropPOI
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z tiredOfTryingToFindTarget
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;JLnet/minecraft/server/BehaviorController;Lnet/minecraft/server/GlobalPos;)V lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/GlobalPos;)Z tooFar
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/GlobalPos;)Z closeEnough
net/minecraft/server/PacketPlayInItemName net/minecraft/network/protocol/game/ServerboundRenameItemPacket
	a name
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Ljava/lang/String; getName
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/WorldGenDecoratorHeightAverageConfiguration net/minecraft/world/level/levelgen/placement/DepthAverageConfigation
	a count
	b baseline
	c spread
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorHeightAverageConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/EntityMushroomCow net/minecraft/world/entity/animal/MushroomCow
	bA effect
	bB effectDuration
	bC lastLightningBoltUUID
	bz DATA_TYPE
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/EntityMushroomCow;)Lnet/minecraft/server/EntityMushroomCow$Type; getOffspringType
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$mobInteract$0
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityCow; getBreedOffspring
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityMushroomCow; getBreedOffspring
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkMushroomSpawnRules
	getVariant ()Lnet/minecraft/server/EntityMushroomCow$Type; getMushroomType
	j (Lnet/minecraft/server/ItemStack;)Lorg/apache/commons/lang3/tuple/Pair; getEffectFromItemStack
	setVariant (Lnet/minecraft/server/EntityMushroomCow$Type;)V setMushroomType
	u_ ()V defineSynchedData
net/minecraft/server/PlayerListBox net/minecraft/server/gui/PlayerListComponent
	a server
	b tickCount
net/minecraft/server/EntityIllagerAbstract net/minecraft/world/entity/monster/AbstractIllager
	cQ ()Lnet/minecraft/server/EnumMonsterType; getMobType
	l ()Laua$a; getArmPose
	n ()V registerGoals
net/minecraft/server/BiomeJungleEdgeMutated net/minecraft/world/level/biome/ModifiedJungleEdgeBiome
net/minecraft/server/EntityVillager net/minecraft/world/entity/npc/Villager
	bA FOOD_POINTS
	bB POI_MEMORIES
	bC DATA_VILLAGER_DATA
	bD WANTED_ITEMS
	bE updateMerchantTimer
	bF increaseProfessionLevelOnUpdate
	bG lastTradedPlayer
	bH chasing
	bI foodLevel
	bJ gossips
	bK lastGossipTime
	bL lastGossipDecayTime
	bM villagerXp
	bN lastRestockGameTime
	bO numberOfRestocksToday
	bP lastRestockCheckDayTime
	bQ MEMORY_TYPES
	bR SENSOR_TYPES
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	K ()V sendDebugPackets
	L ()V customServerAiStep
	a (B)V handleEntityEvent
	a (J)Z wantsToSpawnGolem
	a (JI)V spawnGolemIfNeeded
	a (JLnet/minecraft/server/EntityVillager;)V lambda$spawnGolemIfNeeded$11
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/BehaviorController; makeBrain
	a (Lnet/minecraft/server/BehaviorController;)V registerBrainGoals
	a (Lnet/minecraft/server/ChatModifier;)V lambda$getDisplayName$8
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/Entity;)V tellWitnessesThatIWasMurdered
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityItem;)V pickUpItem
	a (Lnet/minecraft/server/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/EntityLiving;)V setLastHurtByMob
	a (Lnet/minecraft/server/EntityVillager;J)V gossip
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/VillagePlaceType;)Z lambda$static$2
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/InventorySubcontainer;Ljava/util/Map$Entry;)I lambda$countFoodPointsInInventory$9
	a (Lnet/minecraft/server/MemoryModuleType;)V releasePoi
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/MemoryModuleType;Lnet/minecraft/server/GlobalPos;)V lambda$releasePoi$5
	a (Lnet/minecraft/server/NBTBase;)V setGossips
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/ReputationEvent;Lnet/minecraft/server/Entity;)V onReputationEventFrom
	a (Lnet/minecraft/server/ReputationType;)Z lambda$getPlayerReputation$6
	a (Lnet/minecraft/server/WorldServer;)V refreshBrain
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Entity;Lnet/minecraft/server/EntityLiving;)V lambda$tellWitnessesThatIWasMurdered$4
	b (J)V sawGolem
	b (JLnet/minecraft/server/EntityVillager;)Z lambda$spawnGolemIfNeeded$10
	b (Lnet/minecraft/server/ChatModifier;)V lambda$getDisplayName$7
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityVillager; getBreedOffspring
	b (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/VillagePlaceType;)Z lambda$static$1
	b (Lnet/minecraft/server/Item;)Z wantToPickUp
	b (Lnet/minecraft/server/MerchantRecipe;)V rewardTradeXp
	b (Lnet/minecraft/server/MerchantRecipeList;)V setOffers
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (D)Z removeWhenFarAway
	c (J)Z hasSeenGolemRecently
	c (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/VillagePlaceType;)Z lambda$static$0
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	ck ()Lnet/minecraft/server/BehaviorController; getBrain
	cl ()V registerAttributes
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	d (J)Z golemSpawnConditionsMet
	dW ()I getVillagerXp
	e (Lnet/minecraft/server/BlockPosition;)V startSleeping
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityHuman;)V setTradingPlayer
	eA ()V eatUntilFull
	eB ()Z shouldIncreaseLevel
	eD ()I countFoodPointsInInventory
	eE ()V makeBread
	eF ()V maybeDecayGossip
	eG ()Lnet/minecraft/server/EntityIronGolem; trySpawnGolem
	eH ()V resetNumberOfRestocks
	ed ()V stopTrading
	ef ()Lnet/minecraft/server/VillagerData; getVillagerData
	eh ()V updateTrades
	ei ()Z canRestock
	ej ()V restock
	ek ()Z shouldRestock
	el ()V playWorkSound
	em ()Z isChasing
	eo ()V eatAndDigestFood
	ep ()Z hasExcessFood
	eq ()Z wantsMoreFood
	er ()Z hasFarmSeeds
	es ()Lnet/minecraft/server/Reputation; getGossips
	et ()V setUnhappy
	eu ()V resetSpecialPrices
	ev ()Z needsToRestock
	ew ()Z allowedToRestock
	ex ()V catchUpDemand
	ey ()V updateDemand
	ez ()Z hungry
	f (Lnet/minecraft/server/EntityHuman;)I getPlayerReputation
	g (Lnet/minecraft/server/EntityHuman;)V startTrading
	h ()V tick
	h (Lnet/minecraft/server/EntityHuman;)V updateSpecialPrices
	h (Lnet/minecraft/server/EntityLiving;)Z lambda$tellWitnessesThatIWasMurdered$3
	l ()V ageBoundaryReached
	populateTrades ()V increaseMerchantCareer
	s (Z)V setChasing
	setExperience (I)V setVillagerXp
	u (I)V digestFood
	u_ ()V defineSynchedData
net/minecraft/server/PacketPlayOutSetCooldown net/minecraft/network/protocol/game/ClientboundCooldownPacket
	a item
	b duration
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/Item; getItem
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getDuration
net/minecraft/server/GenLayerRiverMix net/minecraft/world/level/newbiome/layer/RiverMixerLayer
	b FROZEN_RIVER
	c SNOWY_TUNDRA
	d MUSHROOM_FIELDS
	e MUSHROOM_FIELD_SHORE
	f RIVER
	g $VALUES
	a (Lnet/minecraft/server/WorldGenContext;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;II)I applyPixel
net/minecraft/server/ItemSoup net/minecraft/world/item/BowlFoodItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
hp$a net/minecraft/data/structures/SnbtToNbt$Filter
	a (Ljava/lang/String;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; apply
net/minecraft/server/PacketPlayOutOpenSignEditor net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket
	a pos
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/IJumpable net/minecraft/world/entity/PlayerRideableJumping
	F_ ()Z canJump
	G_ ()F getJumpRidingScale
	a_ (F)V setJumpRidingScale
	a_ (I)V onPlayerJump
	b (I)V handleStartJump
	c ()V handleStopJump
dkt$b net/minecraft/client/particle/CampfireSmokeParticle$SignalProvider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/WorldLoadListenerFactory net/minecraft/server/level/progress/ChunkProgressListenerFactory
net/minecraft/server/WorldGenMegaTree net/minecraft/world/level/levelgen/feature/MegaPineTreeFeature
	aV TRUNK
	aW LEAF
	aX PODZOL
	aY isSpruce
	a (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;)Z doPlace
	a (Lnet/minecraft/server/VirtualLevelWritable;IIIILjava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Set;)V createCrown
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)V postPlaceTree
	b (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;)V placePodzolCircle
	c (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;)V placePodzolAt
dkt$a net/minecraft/client/particle/CampfireSmokeParticle$CosyProvider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dkc$1 net/minecraft/client/multiplayer/ClientPacketListener$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundRecipePacket$State
	b $SwitchMap$net$minecraft$network$protocol$game$ClientboundSetTitlesPacket$Type
	c $SwitchMap$net$minecraft$network$protocol$game$ClientboundPlayerInfoPacket$Action
	d $SwitchMap$net$minecraft$server$ServerScoreboard$Method
net/minecraft/server/TileEntityTypes net/minecraft/world/level/block/entity/BlockEntityType
	G LOGGER
	H factory
	I validBlocks
	J dataType
	a ()Lnet/minecraft/server/TileEntity; create
	a (Ljava/lang/String;Lbtx$a;)Lnet/minecraft/server/TileEntityTypes; register
	a (Lnet/minecraft/server/Block;)Z isValid
	a (Lnet/minecraft/server/TileEntityTypes;)Lnet/minecraft/server/MinecraftKey; getKey
net/minecraft/server/DataFixTypes net/minecraft/util/datafix/DataFixTypes
	k type
	l $VALUES
	a ()Lcom/mojang/datafixers/DSL$TypeReference; getType
cmx$1 net/minecraft/world/level/newbiome/layer/ZoomLayer$1
	a (Lnet/minecraft/server/AreaContextTransformed;IIII)I modeOrRandom
net/minecraft/server/BlockPistonExtension net/minecraft/world/level/block/piston/PistonHeadBlock
	A SHORT_UP_ARM_AABB
	B SHORT_DOWN_ARM_AABB
	C SHORT_SOUTH_ARM_AABB
	D SHORT_NORTH_ARM_AABB
	E SHORT_EAST_ARM_AABB
	F SHORT_WEST_ARM_AABB
	d EAST_AABB
	e WEST_AABB
	f SOUTH_AABB
	g NORTH_AABB
	h UP_AABB
	i DOWN_AABB
	j UP_ARM_AABB
	k DOWN_ARM_AABB
	w SOUTH_ARM_AABB
	x NORTH_ARM_AABB
	y EAST_ARM_AABB
	z WEST_ARM_AABB
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	j (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/VoxelShape; getBaseShape
	n (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
	q (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/VoxelShape; getArmShape
net/minecraft/server/PathfinderGoalTarget net/minecraft/world/entity/ai/goal/target/TargetGoal
	a mustReach
	b reachCache
	c reachCacheTime
	d unseenTicks
	e mob
	f mustSee
	g targetMob
	h unseenMemoryTicks
	a (I)Lnet/minecraft/server/PathfinderGoalTarget; setUnseenMemoryTicks
	a (Lnet/minecraft/server/EntityLiving;)Z canReach
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/PathfinderTargetCondition;)Z canAttack
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	k ()D getFollowDistance
ayq$5 net/minecraft/world/inventory/CartographyMenu$5
	a val$access
	b this$0
	a (I)Lnet/minecraft/server/ItemStack; remove
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/ItemStack;I)V onQuickCraft
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ItemStack; lambda$remove$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$onTake$1
ayq$4 net/minecraft/world/inventory/CartographyMenu$4
	a this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
ayq$3 net/minecraft/world/inventory/CartographyMenu$3
	a this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
bfc$a net/minecraft/world/item/crafting/SingleItemRecipe$Serializer
	u factory
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/RecipeSingleItem;)V toNetwork
	b (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/RecipeSingleItem; fromJson
	b (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/RecipeSingleItem; fromNetwork
ayq$2 net/minecraft/world/inventory/CartographyMenu$2
	a this$0
	e ()V setChanged
ayq$1 net/minecraft/world/inventory/CartographyMenu$1
	a this$0
	e ()V setChanged
net/minecraft/server/WorldUpgraderIterator net/minecraft/world/level/storage/McRegionUpgrader
	a LOGGER
	a (Ljava/io/File;Ljava/io/File;Lnet/minecraft/server/WorldChunkManager;IILnet/minecraft/server/IProgressUpdate;)V convertRegion
	a (Ljava/io/File;Ljava/lang/Iterable;Lnet/minecraft/server/WorldChunkManager;IILnet/minecraft/server/IProgressUpdate;)V convertRegions
	a (Ljava/io/File;Ljava/lang/String;)Z lambda$addRegionFiles$0
	a (Ljava/io/File;Ljava/util/Collection;)V addRegionFiles
	a (Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;Lnet/minecraft/server/IProgressUpdate;)Z convertLevel
	a (Ljava/nio/file/Path;Ljava/lang/String;)V makeMcrLevelDatBackup
net/minecraft/server/IBeaconBeam net/minecraft/world/level/block/BeaconBeamBlock
	a ()Lnet/minecraft/server/EnumColor; getColor
net/minecraft/server/WorldGenSurfaceMesaBryce net/minecraft/world/level/levelgen/surfacebuilders/ErodedBadlandsSurfaceBuilder
	S WHITE_TERRACOTTA
	T ORANGE_TERRACOTTA
	U TERRACOTTA
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/ArgumentSerializerFloat net/minecraft/commands/synchronization/brigadier/FloatArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lcom/mojang/brigadier/arguments/FloatArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/FloatArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/FloatArgumentType; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
net/minecraft/server/BlockRedstoneLamp net/minecraft/world/level/block/RedstoneLampBlock
	a LIT
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;)I getLightEmission
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
atj$a net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal
	a this$0
	a ()Z canUse
net/minecraft/server/PacketPlayOutTags net/minecraft/network/protocol/game/ClientboundUpdateTagsPacket
	a tags
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/TagRegistry; getTags
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/BlockCrops net/minecraft/world/level/block/CropBlock
	a SHAPE_BY_AGE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getGrowthSpeed
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/World;)I getBonemealAgeIncrease
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V growCrops
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	d ()Lnet/minecraft/server/BlockStateInteger; getAgeProperty
	e ()I getMaxAge
	f ()Lnet/minecraft/server/IMaterial; getBaseSeedId
	isRipe (Lnet/minecraft/server/IBlockData;)Z isMaxAge
	j (Lnet/minecraft/server/IBlockData;)I getAge
	setAge (I)Lnet/minecraft/server/IBlockData; getStateForAge
at$a net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder
	a isOnFire
	b isSneaking
	c isSprinting
	d isSwimming
	e isBaby
	a ()Lat$a; flags
	a (Ljava/lang/Boolean;)Lat$a; setOnFire
	b ()Lnet/minecraft/server/CriterionConditionEntityFlags; build
	b (Ljava/lang/Boolean;)Lat$a; setSneaking
	c (Ljava/lang/Boolean;)Lat$a; setSprinting
	d (Ljava/lang/Boolean;)Lat$a; setSwimming
	e (Ljava/lang/Boolean;)Lat$a; setIsBaby
net/minecraft/server/BlockChestTrapped net/minecraft/world/level/block/TrappedChestBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	d ()Lnet/minecraft/server/Statistic; getOpenChestStat
	h (Lnet/minecraft/server/IBlockData;)Z isSignalSource
dkw$g net/minecraft/client/particle/DripParticle$LavaLandProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dkw$f net/minecraft/client/particle/DripParticle$LavaHangProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dkw$e net/minecraft/client/particle/DripParticle$LavaFallProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dkw$d net/minecraft/client/particle/DripParticle$DripLandParticle
net/minecraft/server/ItemSaddle net/minecraft/world/item/SaddleItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;)Z interactEnemy
dkw$i net/minecraft/client/particle/DripParticle$WaterHangProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dkw$h net/minecraft/client/particle/DripParticle$WaterFallProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
ccm$a net/minecraft/world/level/levelgen/feature/JunglePyramidFeature$FeatureStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
bf$b net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance
	a distance
	b duration
	a (Lnet/minecraft/server/CriterionConditionDistance;)Lbf$b; levitated
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Vec3D;I)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/server/EntityThrownExpBottle net/minecraft/world/entity/projectile/ThrownExperienceBottle
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	i ()Lnet/minecraft/server/Item; getDefaultItem
	l ()F getGravity
bf$a net/minecraft/advancements/critereon/LevitationTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Vec3D;I)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
dkw$c net/minecraft/client/particle/DripParticle$DripHangParticle
	C fallingParticle
	g ()V preMoveUpdate
	h ()V postMoveUpdate
net/minecraft/server/BlockComposter$ContainerEmpty net/minecraft/world/level/block/ComposterBlock$EmptyContainer
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
dkw$b net/minecraft/client/particle/DripParticle$DripFallParticle
	C landParticle
	h ()V postMoveUpdate
dkw$a net/minecraft/client/particle/DripParticle$CoolingDripHangParticle
	g ()V preMoveUpdate
net/minecraft/server/PathfinderGoalCatSitOnBed net/minecraft/world/entity/ai/goal/CatLieOnBedGoal
	g cat
	a ()Z canUse
	a (Lnet/minecraft/server/EntityCreature;)I nextStartTick
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/DefinedStructureTestBlock net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest
	a block
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
cxj$1 com/mojang/realmsclient/util/RealmsUtil$1
	a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; load
net/minecraft/server/ChunkConverterPalette$Direction$AxisDirection net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection
	c step
	d $VALUES
	a ()I getStep
net/minecraft/server/CriterionTriggerChanneledLightning net/minecraft/advancements/critereon/ChanneledLightningTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Ljava/util/Collection;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lah$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/WorldGenDecoratorNetherRandomCount net/minecraft/world/level/levelgen/placement/nether/RandomCountRangeDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureChanceDecoratorCountConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureChanceDecoratorCountConfiguration;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$place$0
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/CommandAdvancement net/minecraft/server/commands/AdvancementCommands
	a SUGGEST_ADVANCEMENTS
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$10
	a (Lnet/minecraft/server/Advancement;Ljava/util/List;)V addChildren
	a (Lnet/minecraft/server/Advancement;Lnet/minecraft/server/CommandAdvancement$Filter;)Ljava/util/List; getAdvancements
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/CommandAdvancement$Action;Ljava/util/Collection;)I perform
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/CommandAdvancement$Action;Lnet/minecraft/server/Advancement;Ljava/lang/String;)I performCriterion
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$3
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	c (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
net/minecraft/server/MobEffect net/minecraft/world/effect/MobEffectInstance
	a LOGGER
	amplification amplifier
	b effect
	g noCounter
	h visible
	i showIcon
	a (Lnet/minecraft/server/MobEffect;)Z update
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Z)V setSplash
	b (Lnet/minecraft/server/EntityLiving;)V applyEffect
	b (Lnet/minecraft/server/MobEffect;)I compareTo
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/MobEffect; load
	b (Z)V setNoCounter
	f ()Z showIcon
	g ()Ljava/lang/String; getDescriptionId
	getMobEffect ()Lnet/minecraft/server/MobEffectList; getEffect
	h ()Z isNoCounter
	i ()I tickDownDuration
	isShowParticles ()Z isVisible
net/minecraft/server/AttributeModifier$Operation net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation
	d OPERATIONS
	e value
	f $VALUES
	a ()I toValue
	a (I)Lnet/minecraft/server/AttributeModifier$Operation; fromValue
net/minecraft/server/ControllerMove$Operation net/minecraft/world/entity/ai/control/MoveControl$Operation
	e $VALUES
net/minecraft/server/DataConverterOminousBannerBlockEntityRename net/minecraft/util/datafix/OminousBannerBlockEntityRenameFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
wc$1 net/minecraft/server/network/ServerGamePacketListenerImpl$1
	a $SwitchMap$net$minecraft$world$level$block$entity$CommandBlockEntity$Mode
	b $SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerActionPacket$Action
	c $SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerCommandPacket$Action
	d $SwitchMap$net$minecraft$network$protocol$game$ServerboundClientCommandPacket$Action
net/minecraft/server/WorldGenNether net/minecraft/world/level/levelgen/feature/NetherFortressFeature
	a FORTRESS_ENEMIES
	a ()Lceu$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;II)Z isFeatureChunk
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	e ()Ljava/util/List; getSpecialEnemies
net/minecraft/server/Behavior net/minecraft/world/entity/ai/behavior/Behavior
	a entryCondition
	b status
	c endTimestamp
	d minDuration
	e maxDuration
	a ()Lnet/minecraft/server/Behavior$Status; getStatus
	a (J)Z timedOut
	a (Lnet/minecraft/server/EntityLiving;)Z hasRequiredMemories
	a (Lnet/minecraft/server/EntityLiving;Ljava/util/Map$Entry;)Z lambda$hasRequiredMemories$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z tryStart
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tickOrStop
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	e (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V doStop
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/DataConverterSchemaV808 net/minecraft/util/datafix/schemas/V808
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/server/ItemClock net/minecraft/world/item/ClockItem
net/minecraft/server/Sensor net/minecraft/world/entity/ai/sensing/Sensor
	a RANDOM
	b scanRate
	c timeToTick
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V tick
net/minecraft/server/ChunkStatus$Type net/minecraft/world/level/chunk/ChunkStatus$ChunkType
	c $VALUES
net/minecraft/server/EnumToolMaterial net/minecraft/world/item/Tiers
	f level
	g uses
	h speed
	i damage
	j enchantmentValue
	k repairIngredient
	l $VALUES
	a ()I getUses
	b ()F getSpeed
	c ()F getAttackDamageBonus
	d ()I getLevel
	e ()I getEnchantmentValue
	f ()Lnet/minecraft/server/RecipeItemStack; getRepairIngredient
	g ()Lnet/minecraft/server/RecipeItemStack; lambda$static$4
	h ()Lnet/minecraft/server/RecipeItemStack; lambda$static$3
	i ()Lnet/minecraft/server/RecipeItemStack; lambda$static$2
	j ()Lnet/minecraft/server/RecipeItemStack; lambda$static$1
	k ()Lnet/minecraft/server/RecipeItemStack; lambda$static$0
net/minecraft/server/WorldGenDecoratorChorusPlant net/minecraft/world/level/levelgen/placement/ChorusPlantPlacementDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorEmptyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/AttributeModifier net/minecraft/world/entity/ai/attributes/AttributeModifier
	a amount
	b operation
	c nameGetter
	d id
	e serialize
	a (Ljava/lang/String;)Ljava/lang/String; lambda$new$1
	a (Z)Lnet/minecraft/server/AttributeModifier; setSerialize
	b (Ljava/lang/String;)Ljava/lang/String; lambda$new$0
	e ()Z isSerializable
	getUniqueId ()Ljava/util/UUID; getId
net/minecraft/server/WorldGenSurfaceConfiguration net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration
	a ()Lnet/minecraft/server/IBlockData; getTopMaterial
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	b ()Lnet/minecraft/server/IBlockData; getUnderMaterial
	c ()Lnet/minecraft/server/IBlockData; getUnderwaterMaterial
dlz$a net/minecraft/client/particle/SplashParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/EnumDirection$EnumDirectionLimit net/minecraft/core/Direction$Plane
	c faces
	d axis
	e $VALUES
	a (Ljava/util/Random;)Lnet/minecraft/server/EnumDirection; getRandomDirection
	a (Lnet/minecraft/server/EnumDirection;)Z test
	b (Ljava/util/Random;)Lnet/minecraft/server/EnumDirection$EnumAxis; getRandomAxis
net/minecraft/server/GameRules$GameRuleBoolean net/minecraft/world/level/GameRules$BooleanValue
	a value
	a ()Z get
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	a (Ljava/lang/String;)V deserialize
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/GameRules$GameRuleBoolean;)V lambda$create$1
	a (Z)Lnet/minecraft/server/GameRules$GameRuleDefinition; access$000
	a (ZLjava/util/function/BiConsumer;)Lnet/minecraft/server/GameRules$GameRuleDefinition; access$200
	a (ZLnet/minecraft/server/GameRules$GameRuleDefinition;)Lnet/minecraft/server/GameRules$GameRuleBoolean; lambda$create$0
	a (ZLnet/minecraft/server/MinecraftServer;)V set
	b ()Ljava/lang/String; serialize
	b (Z)Lnet/minecraft/server/GameRules$GameRuleDefinition; create
	b (ZLjava/util/function/BiConsumer;)Lnet/minecraft/server/GameRules$GameRuleDefinition; create
	c ()I getCommandResult
	d ()Lnet/minecraft/server/GameRules$GameRuleBoolean; getSelf
	e ()Lnet/minecraft/server/GameRules$GameRuleValue; getSelf
net/minecraft/server/VoxelShapeBitSet net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape
	d storage
	e xMin
	f yMin
	g zMin
	h xMax
	i yMax
	j zMax
	a ()Z isEmpty
	a (III)I getIndex
	a (IIII)Z isZStripFull
	a (IIIIZ)V setZStrip
	a (IIIZZ)V setFull
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)I firstFull
	a (Lnet/minecraft/server/OperatorBoolean;Lnet/minecraft/server/VoxelShapeDiscrete;IILnet/minecraft/server/VoxelShapeDiscrete;IILnet/minecraft/server/VoxelShapeBitSet;II[I[ZIII)Z lambda$null$0
	a (Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/OperatorBoolean;)Lnet/minecraft/server/VoxelShapeBitSet; join
	a (Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/OperatorBoolean;Lnet/minecraft/server/VoxelShapeDiscrete;ILnet/minecraft/server/VoxelShapeDiscrete;ILnet/minecraft/server/VoxelShapeBitSet;I[I[ZIII)Z lambda$null$1
	a (Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/OperatorBoolean;Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/VoxelShapeBitSet;[IIII)Z lambda$join$2
	b (III)Z isFull
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)I lastFull
net/minecraft/server/PacketPlayInEntityAction net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket
	a id
	animation action
	c data
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketPlayInEntityAction$EnumPlayerAction; getAction
	d ()I getData
net/minecraft/server/ArgumentProfile net/minecraft/commands/arguments/GameProfileArgument
	a ERROR_UNKNOWN_PLAYER
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentProfile; gameProfile
	a (Lcom/mojang/brigadier/StringReader;)Lcn$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V lambda$listSuggestions$1
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getGameProfiles
	a (Ljava/lang/String;Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/Collection; lambda$parse$0
net/minecraft/server/LootEntryChildrenAbstract net/minecraft/world/level/storage/loot/entries/CompositeEntryBase
	c children
	e composedChildren
	a (Lnet/minecraft/server/LootCollector;Ljava/util/function/Function;Ljava/util/Set;Lnet/minecraft/server/LootContextParameterSet;)V validate
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/Class;Lcpj$a;)Lcpj$b; createSerializer
	a ([Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; compose
net/minecraft/server/BlockRedstoneComparator net/minecraft/world/level/block/ComparatorBlock
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EntityItemFrame;)Z lambda$getItemFrame$0
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z shouldTurnOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EntityItemFrame; getItemFrame
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I getOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I getInputSignal
	c (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V checkTickOnNeighbor
	e (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I calculateOutputSignal
	f (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V refreshOutputState
	j (Lnet/minecraft/server/IBlockData;)I getDelay
net/minecraft/server/PacketLoginInEncryptionBegin net/minecraft/network/protocol/login/ServerboundKeyPacket
	a keybytes
	b nonce
	a (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; getSecretKey
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginInListener;)V handle
	b (Ljava/security/PrivateKey;)[B getNonce
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutSelectAdvancementTab net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket
	a tab
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getTab
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
bft$1 net/minecraft/world/item/enchantment/EnchantmentCategory$1
	a (Lnet/minecraft/server/Item;)Z canEnchant
net/minecraft/server/WorldGenFeatureVillageConfiguration net/minecraft/world/level/levelgen/feature/VillageConfiguration
	a startPool
	b size
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureVillageConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/EnchantmentBinding net/minecraft/world/item/enchantment/BindingCurseEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
	c ()Z isCurse
bft$3 net/minecraft/world/item/enchantment/EnchantmentCategory$11
	a (Lnet/minecraft/server/Item;)Z canEnchant
bft$2 net/minecraft/world/item/enchantment/EnchantmentCategory$10
	a (Lnet/minecraft/server/Item;)Z canEnchant
net/minecraft/server/GenericAttributes net/minecraft/world/entity/monster/SharedMonsterAttributes
	l LOGGER
	a (Lnet/minecraft/server/AttributeInstance;)Lnet/minecraft/server/NBTTagCompound; saveAttribute
	a (Lnet/minecraft/server/AttributeInstance;Lnet/minecraft/server/NBTTagCompound;)V loadAttribute
	a (Lnet/minecraft/server/AttributeMapBase;)Lnet/minecraft/server/NBTTagList; saveAttributes
	a (Lnet/minecraft/server/AttributeMapBase;Lnet/minecraft/server/NBTTagList;)V loadAttributes
	a (Lnet/minecraft/server/AttributeModifier;)Lnet/minecraft/server/NBTTagCompound; saveAttributeModifier
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/AttributeModifier; loadAttributeModifier
r$a net/minecraft/advancements/AdvancementList$Listener
	a ()V onAdvancementsCleared
	a (Lnet/minecraft/server/Advancement;)V onAddAdvancementRoot
	b (Lnet/minecraft/server/Advancement;)V onRemoveAdvancementRoot
	c (Lnet/minecraft/server/Advancement;)V onAddAdvancementTask
	d (Lnet/minecraft/server/Advancement;)V onRemoveAdvancementTask
net/minecraft/server/DataConverterItemStackEnchantment net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix
	a MAP
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$null$6
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fixTag$7
	b (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$fixTag$4
	c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$5
	d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$3
net/minecraft/server/WorldGenDecoratorSkyVisible net/minecraft/world/level/levelgen/placement/CountTopSolidDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
cpb$b net/minecraft/world/level/storage/loot/LootTable$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootTable; deserialize
	a (Lnet/minecraft/server/LootTable;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/EntityBlaze$PathfinderGoalBlazeFireball net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal
	a blaze
	b attackStep
	c attackTime
	d lastSeen
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()D getFollowDistance
net/minecraft/server/CommandTeamMsg net/minecraft/server/commands/TeamMsgCommand
	a ERROR_NOT_ON_TEAM
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
	a (Lnet/minecraft/server/ChatModifier;)V lambda$sendMessage$1
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/IChatBaseComponent;)I sendMessage
cpb$a net/minecraft/world/level/storage/loot/LootTable$Builder
	a pools
	b functions
	c paramSet
	a ()Lcpb$a; unwrap
	a (Lcpa$a;)Lcpb$a; withPool
	a (Lcqh$a;)Lcpb$a; apply
	a (Lnet/minecraft/server/LootContextParameterSet;)Lcpb$a; setParamSet
	b ()Lnet/minecraft/server/LootTable; build
	b (Lcqh$a;)Ljava/lang/Object; apply
	c ()Ljava/lang/Object; unwrap
brf$1 net/minecraft/world/level/block/RotatedPillarBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	b $SwitchMap$net$minecraft$world$level$block$Rotation
ciw$1 net/minecraft/world/level/levelgen/structure/StructureStart$1
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
net/minecraft/server/PacketPlayOutServerDifficulty net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket
	a difficulty
	b locked
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Z isLocked
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/EnumDifficulty; getDifficulty
net/minecraft/server/EntityEnderPearl net/minecraft/world/entity/projectile/ThrownEnderpearl
	e originalOwner
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/Entity; changeDimension
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	h ()V tick
	i ()Lnet/minecraft/server/Item; getDefaultItem
net/minecraft/server/PathfinderGoalMoveThroughVillage net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal
	a mob
	b speedModifier
	c path
	d poiPos
	e onlyAtNight
	f visited
	g distanceToPoi
	h canDealWithDoors
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;)Z hasNotVisited
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)D lambda$canUse$0
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	g ()V updateVisited
net/minecraft/server/Container net/minecraft/world/inventory/AbstractContainerMenu
	d dataSlots
	dragType quickcraftType
	e menuType
	f changeUid
	h quickcraftStatus
	i quickcraftSlots
	items lastSlots
	k unSynchedPlayers
	listeners containerListeners
	windowId containerId
	a (II)V setData
	a (IILnet/minecraft/server/InventoryClickType;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ItemStack; clicked
	a (ILnet/minecraft/server/EntityHuman;)Z isValidQuickcraftType
	a (Ljava/util/List;)V setAll
	a (Ljava/util/Set;ILnet/minecraft/server/ItemStack;I)V getQuickCraftSlotCount
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Ljava/lang/Boolean; lambda$stillValid$0
	a (Lnet/minecraft/server/ContainerAccess;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Block;)Z stillValid
	a (Lnet/minecraft/server/ContainerProperty;)Lnet/minecraft/server/ContainerProperty; addDataSlot
	a (Lnet/minecraft/server/EntityHuman;I)Z clickMenuButton
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/IInventory;)V clearContainer
	a (Lnet/minecraft/server/EntityHuman;Z)V setSynched
	a (Lnet/minecraft/server/IContainerProperties;)V addDataSlots
	a (Lnet/minecraft/server/IContainerProperties;I)V checkContainerDataCount
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/IInventory;I)V checkContainerSize
	a (Lnet/minecraft/server/ItemStack;IIZ)Z moveItemStackTo
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z consideredTheSameItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/server/PlayerInventory;)S backup
	a (Lnet/minecraft/server/Slot;)Lnet/minecraft/server/Slot; addSlot
	a (Lnet/minecraft/server/Slot;Lnet/minecraft/server/ItemStack;Z)Z canItemQuickReplace
	a (Lnet/minecraft/server/TileEntity;)I getRedstoneSignalFromBlockEntity
	b ()Lnet/minecraft/server/NonNullList; getItems
	b (I)I getQuickcraftType
	b (II)I getQuickcraftMask
	b (ILnet/minecraft/server/ItemStack;)V addItem
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/ICrafting;)V removeSlotListener
	b (Lnet/minecraft/server/IInventory;)I getRedstoneSignalFromContainer
	b (Lnet/minecraft/server/Slot;)Z canDragTo
	c ()V broadcastChanges
	c (I)I getQuickcraftHeader
	c (Lnet/minecraft/server/EntityHuman;)Z isSynched
	canUse (Lnet/minecraft/server/EntityHuman;)Z stillValid
	d ()V resetQuickCraft
	getSlot (Lnet/minecraft/server/IInventory;I)Lnet/minecraft/server/Slot; getSlotFor
	shiftClick (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
net/minecraft/server/RemoteConnectionThread net/minecraft/server/rcon/thread/GenericThread
	a running
	b serverInterface
	c name
	d thread
	e maxStopWait
	f datagramSockets
	g serverSockets
	h LOGGER
	i UNIQUE_THREAD_ID
	a ()V start
	a (Ljava/lang/String;)V debug
	a (Ljava/net/DatagramSocket;)V registerSocket
	a (Ljava/net/DatagramSocket;Z)Z closeSocket
	a (Ljava/net/ServerSocket;)V registerSocket
	a (Ljava/net/ServerSocket;Z)Z closeSocket
	a (Z)V closeSockets
	b ()V stop
	b (Ljava/lang/String;)V info
	b (Ljava/net/DatagramSocket;)Z closeSocket
	b (Ljava/net/ServerSocket;)Z closeSocket
	c ()Z isRunning
	c (Ljava/lang/String;)V warn
	d ()I currentPlayerCount
	d (Ljava/lang/String;)V error
	e ()V closeSockets
net/minecraft/server/BiomeBase$Geography net/minecraft/world/level/biome/Biome$BiomeCategory
	r BY_NAME
	s name
	t $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/BiomeBase$Geography; byName
	a (Lnet/minecraft/server/BiomeBase$Geography;)Lnet/minecraft/server/BiomeBase$Geography; lambda$static$0
net/minecraft/server/CustomFunctionCallbackTimerQueue net/minecraft/world/level/timers/TimerQueue
	a LOGGER
	b callbacksRegistry
	c queue
	d sequentialId
	e events
	a ()Ljava/util/Set; getEventsIds
	a (Lcrz$a;)Lnet/minecraft/server/NBTTagCompound; storeEvent
	a (Lcrz$a;Lcrz$a;)I lambda$createComparator$0
	a (Ljava/lang/Object;J)V tick
	a (Ljava/lang/String;)Z remove
	a (Ljava/lang/String;JLnet/minecraft/server/CustomFunctionCallbackTimer;)Z schedule
	a (Lnet/minecraft/server/NBTTagCompound;)V loadEvent
	a (Lnet/minecraft/server/NBTTagList;)V load
	b ()Lnet/minecraft/server/NBTTagList; store
	b (Ljava/lang/String;JLnet/minecraft/server/CustomFunctionCallbackTimer;)V reschedule
	c ()Ljava/util/Comparator; createComparator
	c (Ljava/lang/String;JLnet/minecraft/server/CustomFunctionCallbackTimer;)V addEvent
net/minecraft/server/AreaFactory net/minecraft/world/level/newbiome/area/AreaFactory
bqt$1 net/minecraft/world/level/block/PoweredRailBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$Mirror
net/minecraft/server/BlockStructure net/minecraft/world/level/block/StructureBlock
	a MODE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/TileEntityStructure;)V trigger
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/AttributeMapServer net/minecraft/world/entity/ai/attributes/ModifiableAttributeMap
	d attributesByLegacy
	e dirtyAttributes
	a (Ljava/lang/String;)Lnet/minecraft/server/AttributeInstance; getInstance
	a (Lnet/minecraft/server/AttributeInstance;)V onAttributeModified
	a (Lnet/minecraft/server/IAttribute;)Lnet/minecraft/server/AttributeInstance; getInstance
	b (Ljava/lang/String;)Lnet/minecraft/server/AttributeModifiable; getInstance
	b (Lnet/minecraft/server/IAttribute;)Lnet/minecraft/server/AttributeInstance; registerAttribute
	c ()Ljava/util/Collection; getSyncableAttributes
	c (Lnet/minecraft/server/IAttribute;)Lnet/minecraft/server/AttributeInstance; createAttributeInstance
	e (Lnet/minecraft/server/IAttribute;)Lnet/minecraft/server/AttributeModifiable; getInstance
	getAttributes ()Ljava/util/Set; getDirtyAttributes
net/minecraft/server/GenLayerSpecial net/minecraft/world/level/newbiome/layer/AddEdgeLayer
un$1 net/minecraft/server/dedicated/ServerWatchdog$1
	a this$0
bft$9 net/minecraft/world/item/enchantment/EnchantmentCategory$4
	a (Lnet/minecraft/server/Item;)Z canEnchant
bft$8 net/minecraft/world/item/enchantment/EnchantmentCategory$3
	a (Lnet/minecraft/server/Item;)Z canEnchant
net/minecraft/server/WorldGenHugeMushroomRed net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenHugeMushroomConfiguration;)Z place
net/minecraft/server/PacketPlayOutChat net/minecraft/network/protocol/game/ClientboundChatPacket
	a message
	b type
	a ()Z isSkippable
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/IChatBaseComponent; getMessage
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z isSystem
	d ()Lnet/minecraft/server/ChatMessageType; getType
net/minecraft/server/WorldGenCarverConfigurationEmpty net/minecraft/world/level/levelgen/carver/NoneCarverConfiguration
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenCarverConfigurationEmpty; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
bft$5 net/minecraft/world/item/enchantment/EnchantmentCategory$13
	a (Lnet/minecraft/server/Item;)Z canEnchant
bft$4 net/minecraft/world/item/enchantment/EnchantmentCategory$12
	a (Lnet/minecraft/server/Item;)Z canEnchant
bft$7 net/minecraft/world/item/enchantment/EnchantmentCategory$2
	a (Lnet/minecraft/server/Item;)Z canEnchant
bft$6 net/minecraft/world/item/enchantment/EnchantmentCategory$14
	a (Lnet/minecraft/server/Item;)Z canEnchant
net/minecraft/server/CommandReload net/minecraft/server/commands/ReloadCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
net/minecraft/server/RedirectStream net/minecraft/server/LoggedPrintStream
	a LOGGER
	b name
	a (Ljava/lang/String;)V logLine
net/minecraft/server/ItemEnderPearl net/minecraft/world/item/EnderpearlItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/BiomeSavannaMutated net/minecraft/world/level/biome/ShatteredSavannaBiome
net/minecraft/server/EnumDirection$EnumAxis net/minecraft/core/Direction$Axis
	d BY_NAME
	e name
	f $VALUES
	a ()Ljava/lang/String; getName
	a (DDD)D choose
	a (III)I choose
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumDirection$EnumAxis; byName
	a (Ljava/util/Random;)Lnet/minecraft/server/EnumDirection$EnumAxis; getRandomAxis
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection$EnumAxis; lambda$static$0
	a (Lnet/minecraft/server/EnumDirection;)Z test
	b ()Z isVertical
	c ()Z isHorizontal
	d ()Lnet/minecraft/server/EnumDirection$EnumDirectionLimit; getPlane
	m ()Ljava/lang/String; getSerializedName
cif$1 net/minecraft/world/level/levelgen/structure/EndCityPieces$1
	a ()V init
	a (Lnet/minecraft/server/DefinedStructureManager;ILnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)Z generate
cif$2 net/minecraft/world/level/levelgen/structure/EndCityPieces$2
	a ()V init
	a (Lnet/minecraft/server/DefinedStructureManager;ILnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)Z generate
cif$3 net/minecraft/world/level/levelgen/structure/EndCityPieces$3
	a shipCreated
	a ()V init
	a (Lnet/minecraft/server/DefinedStructureManager;ILnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)Z generate
bfc$a$a net/minecraft/world/item/crafting/SingleItemRecipe$Serializer$SingleItemMaker
dli$a net/minecraft/client/particle/LargeSmokeParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dkw$1 net/minecraft/client/particle/DripParticle$1
net/minecraft/server/BlockBlastFurnace net/minecraft/world/level/block/BlastFurnaceBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V openContainer
net/minecraft/server/WorldGenLightStone1 net/minecraft/world/level/levelgen/feature/GlowstoneFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/BlockPowered net/minecraft/world/level/block/PoweredBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	h (Lnet/minecraft/server/IBlockData;)Z isSignalSource
net/minecraft/server/IReloadableResourceManager net/minecraft/server/packs/resources/ReloadableResourceManager
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture; reload
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/IReloadable; createQueuedReload
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/IReloadable; createFullReload
	a (Lnet/minecraft/server/IReloadListener;)V registerReloadListener
cif$4 net/minecraft/world/level/levelgen/structure/EndCityPieces$4
	a ()V init
	a (Lnet/minecraft/server/DefinedStructureManager;ILnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)Z generate
net/minecraft/server/SensorSecondaryPlaces net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)V doTick
net/minecraft/server/LightEngineStorageSky net/minecraft/world/level/lighting/SkyLightSectionStorage
	k HORIZONTALS
	l sectionsWithSources
	m sectionsToAddSourcesTo
	n sectionsToRemoveSourcesFrom
	o columnsWithSkySources
	p hasSourceInconsistencies
	a ()Z hasInconsistencies
	a (I)Z hasSectionsBelow
	a (Lnet/minecraft/server/LightEngineLayer;ZZ)V markNewInconsistencies
	b (JZ)V enableLightSources
	d (J)I getLightValue
	e ()V recheckInconsistencyFlag
	j (J)Lnet/minecraft/server/NibbleArray; createDataLayer
	k (J)V onNodeAdded
	l (J)V onNodeRemoved
	m (J)Z hasLightSource
	n (J)Z isAboveData
	o (J)Z lightOnInSection
	p (J)V queueRemoveSource
	q (J)V queueAddSource
net/minecraft/server/BlockBedrock net/minecraft/world/level/block/BedrockBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
net/minecraft/server/PacketPlayOutSpawnEntityPainting net/minecraft/network/protocol/game/ClientboundAddPaintingPacket
	a id
	b uuid
	c pos
	d direction
	e motive
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/UUID; getUUID
	d ()Lnet/minecraft/server/BlockPosition; getPos
	e ()Lnet/minecraft/server/EnumDirection; getDirection
	f ()Lnet/minecraft/server/Paintings; getMotive
net/minecraft/server/VoxelShapeMerger net/minecraft/world/phys/shapes/IndexMerger
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Lcsu$a;)Z forMergedIndexes
aqz$a net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData
	a leader
cvl$1 com/mojang/realmsclient/client/Ping$1
	a (Lcom/mojang/realmsclient/dto/RegionPingResult;Lcom/mojang/realmsclient/dto/RegionPingResult;)I compare
net/minecraft/server/CommandList net/minecraft/server/commands/ListPlayersCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listPlayers
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/function/Function;)I format
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
	b (Lnet/minecraft/server/CommandListenerWrapper;)I listPlayersWithUuids
net/minecraft/server/BiomeMesaPlateauClearMutated net/minecraft/world/level/biome/ModifiedBadlandsPlateauBiome
	a (Lnet/minecraft/server/BlockPosition;)I getFoliageColor
	b (Lnet/minecraft/server/BlockPosition;)I getGrassColor
net/minecraft/server/ItemMapEmpty net/minecraft/world/item/EmptyMapItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/Enchantment$Rarity net/minecraft/world/item/enchantment/Enchantment$Rarity
	e weight
	f $VALUES
	a ()I getWeight
net/minecraft/server/DataConverterOminousBannerRename net/minecraft/util/datafix/OminousBannerRenameFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
net/minecraft/server/CommandDispatcher net/minecraft/commands/Commands
	a LOGGER
	b dispatcher
	a ()Lcom/mojang/brigadier/CommandDispatcher; getDispatcher
	a (Lce$a;)Ljava/util/function/Predicate; createValidator
	a (Lce$a;Ljava/lang/String;)Z lambda$createValidator$6
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$fillUsableCommands$5
	a (Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$new$1
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Collection;)V lambda$new$0
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Map;)V fillUsableCommands
	a (Ljava/io/File;)V serializeTreeToFile
	a (Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; literal
	a (Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; argument
	a (Ljava/lang/String;Lnet/minecraft/server/ChatModifier;)V lambda$performCommand$2
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I performCommand
	a (Lnet/minecraft/server/EntityPlayer;)V sendCommands
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/ChatModifier;)V lambda$performCommand$3
	a (Lnet/minecraft/server/ICompletionProvider;)Z lambda$fillUsableCommands$4
dbl$1 net/minecraft/client/gui/screens/ChatScreen$1
cps$1 net/minecraft/world/level/storage/loot/entries/LootTableReference$1
net/minecraft/server/PathfinderGoalDoorInteract net/minecraft/world/entity/ai/goal/DoorInteractGoal
	a passed
	b doorOpenDirX
	c doorOpenDirZ
	door doorPos
	entity mob
	f hasDoor
	a ()Z canUse
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z isDoor
	a (Z)V setOpen
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	g ()Z isOpen
net/minecraft/server/BiomeBase net/minecraft/world/level/biome/Biome
	a LOGGER
	b EXPLORABLE_BIOMES
	c MUTATED_BIOMES
	d TEMPERATURE_NOISE
	e BIOME_INFO_NOISE
	f descriptionId
	g depth
	h scale
	i temperature
	j downfall
	k waterColor
	l waterFogColor
	m parent
	n surfaceBuilder
	o biomeCategory
	p precipitation
	q carvers
	r features
	s flowerFeatures
	t validFeatureStarts
	u spawners
	v temperatureCache
	a ()Z isMutated
	a (F)I getSkyColor
	a (ILnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeBase; getBiome
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$serialize$10
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/BiomeBase$BiomeMeta;)Ljava/lang/Object; lambda$null$9
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/WorldGenCarverWrapper;)Ljava/lang/Object; lambda$null$4
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/WorldGenFeatureConfigured;)Ljava/lang/Object; lambda$null$6
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJ)V buildSurfaceAt
	a (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeBase; getMutatedVariant
	a (Lnet/minecraft/server/BlockPosition;)I getFoliageColor
	a (Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/BiomeBase$BiomeMeta;)V addSpawn
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z shouldFreeze
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Z)Z shouldFreeze
	a (Lnet/minecraft/server/StructureGenerator;)Z isValidStart
	a (Lnet/minecraft/server/StructureGenerator;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V addStructureStart
	a (Lnet/minecraft/server/WorldGenCarverAbstract;Lnet/minecraft/server/WorldGenCarverConfiguration;)Lnet/minecraft/server/WorldGenCarverWrapper; makeCarver
	a (Lnet/minecraft/server/WorldGenStage$Decoration;)Ljava/util/List; getFeaturesForStep
	a (Lnet/minecraft/server/WorldGenStage$Decoration;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/GeneratorAccess;JLnet/minecraft/server/SeededRandom;Lnet/minecraft/server/BlockPosition;)V generate
	a (Lnet/minecraft/server/WorldGenStage$Decoration;Lnet/minecraft/server/WorldGenFeatureConfigured;)V addFeature
	a (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/List; getCarvers
	a (Lnet/minecraft/server/WorldGenStage$Features;Lnet/minecraft/server/WorldGenCarverWrapper;)V addCarver
	a (Lnet/minecraft/server/WorldGenerator;Lnet/minecraft/server/WorldGenFeatureConfiguration;Lnet/minecraft/server/WorldGenDecorator;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;)Lnet/minecraft/server/WorldGenFeatureConfigured; makeComposite
	b ()Lnet/minecraft/server/BiomeBase$Precipitation; getPrecipitation
	b (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$serialize$8
	b (Lnet/minecraft/server/BlockPosition;)I getGrassColor
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z shouldSnow
	b (Lnet/minecraft/server/StructureGenerator;)Lnet/minecraft/server/WorldGenFeatureConfiguration; getStructureConfiguration
	b (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/List; lambda$getCarvers$3
	c ()Z isHumid
	c (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$serialize$7
	c (Lnet/minecraft/server/BlockPosition;)F getTemperatureNoCache
	c (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/List; lambda$addCarver$2
	d ()F getCreatureProbability
	d (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$serialize$5
	e ()Ljava/util/List; getFlowerFeatures
	f ()Lnet/minecraft/server/BiomeBase$EnumTemperature; getTemperatureCategory
	g ()F getDepth
	getAdjustedTemperature (Lnet/minecraft/server/BlockPosition;)F getTemperature
	getHumidity ()F getDownfall
	i ()Lnet/minecraft/server/IChatBaseComponent; getName
	j ()Ljava/lang/String; getDescriptionId
	k ()F getScale
	m ()I getWaterColor
	n ()I getWaterFogColor
	o ()Lnet/minecraft/server/BiomeBase$Geography; getBiomeCategory
	p ()Lnet/minecraft/server/WorldGenSurfaceComposite; getSurfaceBuilder
	q ()Lnet/minecraft/server/WorldGenSurfaceConfiguration; getSurfaceBuilderConfig
	r ()Ljava/lang/String; getParent
	s ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap; lambda$new$1
	t ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap; lambda$null$0
net/minecraft/server/DataConverterSignText net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix
	a GSON
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fix$0
	a (Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;)Lcom/mojang/datafixers/Dynamic; updateLine
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/WorldGenForest net/minecraft/world/level/levelgen/feature/BirchFeature
	a LOG
	aS LEAF
	aT superBirch
	a (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;)Z doPlace
net/minecraft/server/ExpirableListEntry net/minecraft/server/players/BanListEntry
	a DATE_FORMAT
	b created
	c source
	d expires
	e reason
	a ()Ljava/util/Date; getCreated
	a (Lcom/google/gson/JsonObject;)V serialize
	e ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	f ()Z hasExpired
net/minecraft/server/Block$Info net/minecraft/world/level/block/Block$Properties
	a material
	b materialColor
	c hasCollision
	d soundType
	e lightEmission
	f explosionResistance
	g destroyTime
	h isTicking
	i friction
	j drops
	k dynamicShape
	a ()Lnet/minecraft/server/Block$Info; noCollission
	a (F)Lnet/minecraft/server/Block$Info; friction
	a (FF)Lnet/minecraft/server/Block$Info; strength
	a (I)Lnet/minecraft/server/Block$Info; lightLevel
	a (Lnet/minecraft/server/Block$Info;)Lnet/minecraft/server/Material; access$000
	a (Lnet/minecraft/server/Block;)Lnet/minecraft/server/Block$Info; copy
	a (Lnet/minecraft/server/Material;)Lnet/minecraft/server/Block$Info; of
	a (Lnet/minecraft/server/Material;Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/Block$Info; of
	a (Lnet/minecraft/server/Material;Lnet/minecraft/server/MaterialMapColor;)Lnet/minecraft/server/Block$Info; of
	a (Lnet/minecraft/server/SoundEffectType;)Lnet/minecraft/server/Block$Info; sound
	b ()Lnet/minecraft/server/Block$Info; instabreak
	b (F)Lnet/minecraft/server/Block$Info; strength
	b (Lnet/minecraft/server/Block$Info;)Lnet/minecraft/server/MaterialMapColor; access$100
	b (Lnet/minecraft/server/Block;)Lnet/minecraft/server/Block$Info; dropsLike
	c ()Lnet/minecraft/server/Block$Info; randomTicks
	c (Lnet/minecraft/server/Block$Info;)Z access$200
	d ()Lnet/minecraft/server/Block$Info; dynamicShape
	d (Lnet/minecraft/server/Block$Info;)Lnet/minecraft/server/SoundEffectType; access$300
	e ()Lnet/minecraft/server/Block$Info; noDrops
	e (Lnet/minecraft/server/Block$Info;)I access$400
	f (Lnet/minecraft/server/Block$Info;)F access$500
	g (Lnet/minecraft/server/Block$Info;)F access$600
	h (Lnet/minecraft/server/Block$Info;)Z access$700
	i (Lnet/minecraft/server/Block$Info;)F access$800
	j (Lnet/minecraft/server/Block$Info;)Z access$900
	k (Lnet/minecraft/server/Block$Info;)Lnet/minecraft/server/MinecraftKey; access$1000
net/minecraft/server/MovingObjectPositionBlock net/minecraft/world/phys/BlockHitResult
	b direction
	c blockPos
	d miss
	e inside
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/MovingObjectPositionBlock; withDirection
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MovingObjectPositionBlock; miss
	c ()Lnet/minecraft/server/MovingObjectPosition$EnumMovingObjectType; getType
	d ()Z isInside
	getBlockPosition ()Lnet/minecraft/server/BlockPosition; getBlockPos
cfe$a net/minecraft/world/level/levelgen/feature/VillagePieces$VillagePiece
cr$c net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode
	a index
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
net/minecraft/server/CriterionTriggerImpossible net/minecraft/advancements/critereon/ImpossibleTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Laz$a; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
cr$d net/minecraft/commands/arguments/NbtPathArgument$ListElementFunction
	a (Lnet/minecraft/server/NBTTagList;ILnet/minecraft/server/NBTBase;)Z apply
cr$a net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode
	a INSTANCE
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
net/minecraft/server/BiomeColdBeach net/minecraft/world/level/biome/SnowyBeachBiome
net/minecraft/server/AreaTransformer net/minecraft/world/level/newbiome/layer/traits/DimensionTransformer
	a (I)I getParentX
	b (I)I getParentY
cr$b net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode
	a name
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
dbl$a net/minecraft/client/gui/screens/ChatScreen$SuggestionsList
	a this$0
	b rect
	c suggestions
	d originalContents
	e offset
	f current
	g lastMouse
	h tabCycles
	a ()V useSuggestion
	a (D)Z mouseScrolled
	a (I)V cycle
	a (II)V render
	a (III)Z mouseClicked
	b ()V hide
	b (I)V select
	b (III)Z keyPressed
cps$a net/minecraft/world/level/storage/loot/entries/LootTableReference$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorLootTable; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorLootTable;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
cpb$1 net/minecraft/world/level/storage/loot/LootTable$1
net/minecraft/server/SecondaryWorldServer net/minecraft/server/level/DerivedServerLevel
	a ()V tickTime
net/minecraft/server/IPosition net/minecraft/core/Position
	getX ()D x
	getY ()D y
	getZ ()D z
net/minecraft/server/PathfinderGoalFollowEntity net/minecraft/world/entity/ai/goal/FollowMobGoal
	a mob
	b followPredicate
	c followingMob
	d speedModifier
	e navigation
	f timeToRecalcPath
	g stopDistance
	h oldWaterCost
	i areaSize
	a ()Z canUse
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityInsentient;)Z lambda$new$0
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
dlz$1 net/minecraft/client/particle/SplashParticle$1
dcs$a$a net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList$Entry
	a this$1
	b stat
net/minecraft/server/EntityZombie net/minecraft/world/entity/monster/Zombie
	DROWN_CONVERTING DATA_DROWNED_CONVERSION_ID
	b SPEED_MODIFIER_BABY_UUID
	bA DATA_SPECIAL_TYPE_ID
	bC DOOR_BREAKING_PREDICATE
	bD breakDoorGoal
	bE canBreakDoors
	bF inWaterTime
	bz DATA_BABY_ID
	c SPEED_MODIFIER_BABY
	d SPAWN_REINFORCEMENTS_CHANCE
	drownedConversionTime conversionTime
	C (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	I_ ()Z isSunSensitive
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityZombie;)Ljava/util/Random; access$100
	a (Lnet/minecraft/server/EnumDifficulty;)Z lambda$static$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aO ()D getRidingHeight
	b (Lnet/minecraft/server/EntityLiving;)V killed
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;)V convertTo
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cQ ()Lnet/minecraft/server/EnumMonsterType; getMobType
	cl ()V registerAttributes
	d (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	dV ()Z supportsBreakDoorGoal
	dX ()Lnet/minecraft/server/ItemStack; getSkull
	dY ()Z convertsInWater
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	ea ()V doUnderWaterConversion
	ed ()Z canBreakDoors
	g (Lnet/minecraft/server/ItemStack;)Z canHoldItem
	getSoundStep ()Lnet/minecraft/server/SoundEffect; getStepSound
	h ()V tick
	isDrownConverting ()Z isUnderWaterConverting
	k ()V aiStep
	l ()V addBehaviourGoals
	n ()V registerGoals
	s (Z)V setCanBreakDoors
	startDrownedConversion (I)V startUnderWaterConversion
	u_ ()V defineSynchedData
	v (F)V handleAttributes
	v_ ()Z isBaby
net/minecraft/server/LootItemConditionUser net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder
	b (Lcrk$a;)Ljava/lang/Object; when
	c ()Ljava/lang/Object; unwrap
net/minecraft/server/ArgumentScoreboardTeam net/minecraft/commands/arguments/TeamArgument
	a EXAMPLES
	b ERROR_TEAM_NOT_FOUND
	a ()Lnet/minecraft/server/ArgumentScoreboardTeam; team
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeam; getTeam
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
net/minecraft/server/BlockComposter$ContainerOutput net/minecraft/world/level/block/ComposterBlock$OutputContainer
	a state
	b level
	c pos
	d changed
	J_ ()I getMaxStackSize
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
	e ()V setChanged
net/minecraft/server/ArgumentVec3 net/minecraft/commands/arguments/coordinates/Vec3Argument
	a ERROR_NOT_COMPLETE
	b ERROR_MIXED_TYPE
	c EXAMPLES
	d centerCorrect
	a ()Lnet/minecraft/server/ArgumentVec3; vec3
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/Vec3D; getVec3
	a (Z)Lnet/minecraft/server/ArgumentVec3; vec3
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IVectorPosition; getCoordinates
net/minecraft/server/StructureBoundingBox net/minecraft/world/level/levelgen/structure/BoundingBox
	a x0
	b y0
	c z0
	d x1
	e y1
	f z1
	a ()Lnet/minecraft/server/StructureBoundingBox; getUnknownBox
	a (III)V move
	a (IIII)Z intersects
	a (IIIIII)Lnet/minecraft/server/StructureBoundingBox; createProper
	a (IIIIIIIIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/StructureBoundingBox; orientBox
	a (Lnet/minecraft/server/BaseBlockPosition;)V move
	a (Lnet/minecraft/server/BaseBlockPosition;Lnet/minecraft/server/BaseBlockPosition;)Z intersects
	a (Lnet/minecraft/server/StructureBoundingBox;)Z isInsideOf
	b ()Lnet/minecraft/server/BaseBlockPosition; getLength
	b (III)Lnet/minecraft/server/StructureBoundingBox; moved
	b (IIIIII)Z intersects
	b (Lnet/minecraft/server/BaseBlockPosition;)Z isInside
	b (Lnet/minecraft/server/StructureBoundingBox;)Z intersects
	c ()I getXSpan
	c (Lnet/minecraft/server/StructureBoundingBox;)V expand
	d ()I getYSpan
	d (Lnet/minecraft/server/StructureBoundingBox;)Lnet/minecraft/server/StructureBoundingBox; getIntersection
	e ()I getZSpan
	f ()Lnet/minecraft/server/BaseBlockPosition; getCenter
	g ()Lnet/minecraft/server/NBTTagIntArray; createTag
cr$i net/minecraft/commands/arguments/NbtPathArgument$Node
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Ljava/util/List;)Ljava/util/List; get
	a (Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List; collect
	a (Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List; getOrCreate
	a (Ljava/util/function/Supplier;Lnet/minecraft/server/NBTBase;Ljava/util/List;)V lambda$getOrCreate$0
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
cr$g net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode
	a predicate
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
cr$h net/minecraft/commands/arguments/NbtPathArgument$NbtPath
	a original
	b nodeToOriginalPosition
	c nodes
	a (Lcr$i;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; createNotFoundException
	a (Lcr$i;Ljava/util/function/Supplier;Lnet/minecraft/server/NBTBase;)Ljava/lang/Integer; lambda$set$1
	a (Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer; lambda$apply$0
	a (Ljava/util/List;Ljava/util/function/Function;)I apply
	a (Lnet/minecraft/server/NBTBase;)Ljava/util/List; get
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)Ljava/util/List; getOrCreate
	a (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;)I set
	b (Lnet/minecraft/server/NBTBase;)I countMatching
	b (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I set
	c (Lnet/minecraft/server/NBTBase;)I remove
	d (Lnet/minecraft/server/NBTBase;)Ljava/util/List; getOrCreateParents
net/minecraft/server/BehaviorSleep net/minecraft/world/entity/ai/behavior/SleepInBed
	a nextOkStartTime
	a (J)Z timedOut
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;Ljava/util/Set;)V lambda$start$0
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/ArgumentVec2 net/minecraft/commands/arguments/coordinates/Vec2Argument
	a ERROR_NOT_COMPLETE
	b EXAMPLES
	c centerCorrect
	a ()Lnet/minecraft/server/ArgumentVec2; vec2
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/Vec2F; getVec2
	a (Z)Lnet/minecraft/server/ArgumentVec2; vec2
cr$e net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode
	a pattern
	b predicate
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lnet/minecraft/server/NBTBase;)V lambda$getOrCreateTag$0
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
zd$a net/minecraft/tags/FluidTags$Wrapper
	a check
	b actual
	a ()Ljava/util/Collection; getValues
	a (Ljava/lang/Object;)Z contains
	a (Lnet/minecraft/server/FluidType;)Z contains
	b ()Ljava/util/Collection; getSource
cr$f net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode
	a name
	b pattern
	c predicate
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
net/minecraft/server/WorldGenSwampTree net/minecraft/world/level/levelgen/feature/SwampTreeFeature
	a TRUNK
	aS LEAF
	a (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;)Z doPlace
	a (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockStateBoolean;)V addVine
net/minecraft/server/CriterionTriggerFishingRodHooked net/minecraft/advancements/critereon/FishingRodHookedTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityFishingHook;Ljava/util/Collection;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lay$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/ControllerLook net/minecraft/world/entity/ai/control/LookControl
	a mob
	b yMaxRotSpeed
	c xMaxRotAngle
	d hasWanted
	e wantedX
	f wantedY
	g wantedZ
	a ()V tick
	a (DDD)V setLookAt
	a (DDDFF)V setLookAt
	a (FFF)F rotateTowards
	a (Lnet/minecraft/server/Entity;)V setLookAt
	a (Lnet/minecraft/server/Entity;FF)V setLookAt
	a (Lnet/minecraft/server/Vec3D;)V setLookAt
	b ()Z resetXRotOnTick
	b (Lnet/minecraft/server/Entity;)D getWantedY
	c ()Z isHasWanted
	d ()D getWantedX
	e ()D getWantedY
	f ()D getWantedZ
	g ()F getXRotD
	h ()F getYRotD
net/minecraft/server/WorldUpgrader net/minecraft/util/worldupdate/WorldUpgrader
	a LOGGER
	b THREAD_FACTORY
	c levelName
	d eraseCache
	e levelStorage
	f thread
	g pathToWorld
	h running
	i finished
	j progress
	k totalChunks
	l converted
	m skipped
	n progressMap
	o status
	p REGEX
	q overworldDataStorage
	a ()V cancel
	a (Ljava/io/File;Ljava/lang/String;)Z lambda$getAllChunkPos$2
	a (Ljava/lang/Thread;Ljava/lang/Throwable;)V lambda$new$0
	a (Lnet/minecraft/server/DimensionManager;)F dimensionProgress
	b ()Z isFinished
	b (Lnet/minecraft/server/DimensionManager;)Ljava/util/List; getAllChunkPos
	c ()F getProgress
	d ()I getTotalChunks
	e ()I getConverted
	f ()I getSkipped
	g ()Lnet/minecraft/server/IChatBaseComponent; getStatus
	h ()Ljava/lang/String; getLevelName
	i ()V work
	j ()Lnet/minecraft/server/WorldPersistentData; lambda$work$1
net/minecraft/server/EntityAreaEffectCloud net/minecraft/world/entity/AreaEffectCloud
	COLOR DATA_COLOR
	aA owner
	aB ownerUUID
	affectedEntities victims
	at duration
	b LOGGER
	c DATA_RADIUS
	e DATA_WAITING
	f DATA_PARTICLE
	hasColor fixedColor
	potionRegistry potion
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/PotionRegistry;)V setPotion
	a (Z)V setWaiting
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (I)V setDurationOnUse
	getSource ()Lnet/minecraft/server/EntityLiving; getOwner
	h ()V tick
	l ()Z isWaiting
	n ()F getRadiusOnUse
	o ()F getRadiusPerTick
	p ()I getDurationOnUse
	q ()I getWaitTime
	r ()V use
	s ()Z canUse
	setColor (I)V setFixedColor
	setSource (Lnet/minecraft/server/EntityLiving;)V setOwner
	u_ ()V defineSynchedData
	v ()Lnet/minecraft/server/PotionRegistry; getPotion
	w ()Ljava/util/List; getEffects
	x_ ()V refreshDimensions
	y_ ()Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	z ()V updateColor
net/minecraft/server/BiomeMesaPlataeuClear net/minecraft/world/level/biome/BadlandsPlateauBiome
	a (Lnet/minecraft/server/BlockPosition;)I getFoliageColor
	b (Lnet/minecraft/server/BlockPosition;)I getGrassColor
cvl$a com/mojang/realmsclient/client/Ping$Region
	a US_EAST_1
	b US_WEST_2
	c US_WEST_1
	d EU_WEST_1
	e AP_SOUTHEAST_1
	f AP_SOUTHEAST_2
	g AP_NORTHEAST_1
	h SA_EAST_1
	i name
	j endpoint
	k $VALUES
	a (Lcvl$a;)Ljava/lang/String; access$000
	b (Lcvl$a;)Ljava/lang/String; access$100
net/minecraft/server/ItemNetherStar net/minecraft/world/item/SimpleFoiledItem
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
net/minecraft/server/Resource net/minecraft/server/packs/resources/SimpleResource
	a IO_EXECUTOR
	b LOGGER
	c sourceName
	d location
	e resourceStream
	f metadataStream
	g triedMetadata
	h metadata
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadata
	b ()Ljava/io/InputStream; getInputStream
	c ()Z hasMetadata
	d ()Ljava/lang/String; getSourceName
net/minecraft/server/ItemProjectileWeapon net/minecraft/world/item/ProjectileWeaponItem
	a ARROW_ONLY
	b ARROW_OR_FIREWORK
	a (Lnet/minecraft/server/EntityLiving;Ljava/util/function/Predicate;)Lnet/minecraft/server/ItemStack; getHeldProjectile
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	c ()I getEnchantmentValue
	d ()Ljava/util/function/Predicate; getSupportedHeldProjectiles
	e (Lnet/minecraft/server/ItemStack;)Z lambda$static$1
	j (Lnet/minecraft/server/ItemStack;)Z lambda$static$0
cxa$9 com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$8
	a this$0
cxa$8 com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$7
	a this$0
net/minecraft/server/WorldGenFeatureBamboo net/minecraft/world/level/levelgen/feature/BambooFeature
	a BAMBOO_TRUNK
	aS BAMBOO_FINAL_LARGE
	aT BAMBOO_TOP_LARGE
	aU BAMBOO_TOP_SMALL
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfigurationChance;)Z place
crh$1 net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$1
bov$1 net/minecraft/world/level/block/FenceGateBlock$1
	a $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
buo$2 net/minecraft/world/level/block/entity/LecternBlockEntity$2
	a this$0
	a ()I getCount
	a (I)I get
	a (II)V set
net/minecraft/server/ChatComponentUtils net/minecraft/network/chat/ComponentUtils
	a (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	a (Lcom/mojang/brigadier/Message;)Lnet/minecraft/server/IChatBaseComponent; fromMessage
	a (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; lambda$formatList$0
	a (Ljava/util/Collection;)Lnet/minecraft/server/IChatBaseComponent; formatList
	a (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/server/IChatBaseComponent; formatAndSortList
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; wrapInSquareBrackets
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/IChatBaseComponent; mergeStyles
	b (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/server/IChatBaseComponent; formatList
	filterForDisplay (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatBaseComponent; updateForEntity
buo$1 net/minecraft/world/level/block/entity/LecternBlockEntity$1
	a this$0
	J_ ()I getMaxStackSize
	L_ ()V clearContent
	M_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/server/ItemStack;)Z canPlaceItem
	c ()Z isEmpty
	e ()V setChanged
net/minecraft/server/BlockMinecartTrack net/minecraft/world/level/block/RailBlock
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V updateState
	e ()Lnet/minecraft/server/IBlockState; getShapeProperty
net/minecraft/server/BlockDragonEgg net/minecraft/world/level/block/DragonEggBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V attack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V teleport
net/minecraft/server/ArmorMaterial net/minecraft/world/item/ArmorMaterial
	a ()I getEnchantmentValue
	a (Lnet/minecraft/server/EnumItemSlot;)I getDurabilityForSlot
	b ()Lnet/minecraft/server/SoundEffect; getEquipSound
	b (Lnet/minecraft/server/EnumItemSlot;)I getDefenseForSlot
	c ()Lnet/minecraft/server/RecipeItemStack; getRepairIngredient
	d ()Ljava/lang/String; getName
	e ()F getToughness
net/minecraft/server/PacketPlayInSetCommandBlock net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket
	a pos
	b command
	c trackOutput
	d conditional
	e automatic
	f mode
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/lang/String; getCommand
	d ()Z isTrackOutput
	e ()Z isConditional
	f ()Z isAutomatic
	g ()Lnet/minecraft/server/TileEntityCommand$Type; getMode
net/minecraft/server/NBTTagShort net/minecraft/nbt/ShortTag
	a ()B getId
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)V load
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTBase; copy
	c ()Lnet/minecraft/server/NBTTagShort; copy
	d ()J getAsLong
	e ()I getAsInt
	f ()S getAsShort
	g ()B getAsByte
	h ()D getAsDouble
	i ()F getAsFloat
	j ()Ljava/lang/Number; getAsNumber
net/minecraft/server/DataConverterObjectiveDisplayName net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$2
	a (Lcom/mojang/datafixers/Dynamic;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$1
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$4
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$3
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
net/minecraft/server/PacketPlayOutEntityEffect net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket
	a entityId
	b effectId
	c effectAmplifier
	d effectDurationTicks
	e flags
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Z isSuperLongDuration
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getEntityId
	d ()B getEffectId
	e ()B getEffectAmplifier
	f ()I getEffectDurationTicks
	g ()Z isEffectVisible
	h ()Z isEffectAmbient
	i ()Z effectShowsIcon
arl$1 net/minecraft/world/entity/animal/Panda$1
net/minecraft/server/LoginListener$EnumProtocolState net/minecraft/server/network/ServerLoginPacketListenerImpl$State
	h $VALUES
net/minecraft/server/EntityMonster net/minecraft/world/entity/monster/Monster
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z isDarkEnoughToSpawn
	ai ()Lnet/minecraft/server/SoundEffect; getSwimSound
	aj ()Lnet/minecraft/server/SoundEffect; getSwimSplashSound
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkMonsterSpawnRules
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cc ()Lnet/minecraft/server/SoundCategory; getSoundSource
	cl ()V registerAttributes
	cp ()Z shouldDropExperience
	d (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkAnyLightMonsterSpawnRules
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityHuman;)Z isPreventingPlayerRest
	eb ()V updateNoActionTime
	f (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; getProjectile
	h ()V tick
	k ()V aiStep
	o (I)Lnet/minecraft/server/SoundEffect; getFallDamageSound
net/minecraft/server/OldNibbleArray net/minecraft/world/level/chunk/OldDataLayer
	a data
	b depthBits
	c depthBitsPlusFour
	a ()Z isValid
	a (I)V setAll
	a (III)I get
	a (IIII)V set
net/minecraft/server/BlockButtonAbstract net/minecraft/world/level/block/ButtonBlock
	A PRESSED_WEST_AABB
	B PRESSED_EAST_AABB
	D sensitive
	b CEILING_AABB_X
	c CEILING_AABB_Z
	d FLOOR_AABB_X
	e FLOOR_AABB_Z
	f NORTH_AABB
	g SOUTH_AABB
	h WEST_AABB
	i EAST_AABB
	j PRESSED_CEILING_AABB_X
	k PRESSED_CEILING_AABB_Z
	w PRESSED_FLOOR_AABB_X
	x PRESSED_FLOOR_AABB_Z
	y PRESSED_NORTH_AABB
	z PRESSED_SOUTH_AABB
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Z)V playSound
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Z)Lnet/minecraft/server/SoundEffect; getSound
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V checkPressed
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V updateNeighbours
	h (Lnet/minecraft/server/IBlockData;)Z isSignalSource
net/minecraft/server/WorldGenVillage net/minecraft/world/level/levelgen/feature/VillageFeature
	a ()Lceu$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;II)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IIII)Lnet/minecraft/server/ChunkCoordIntPair; getPotentialFeatureChunkFromLocationWithOffset
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	g ()Z supportsProjection
cxa$3 com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$2
	a this$0
ca$d net/minecraft/commands/CommandFunction$FunctionEntry
	a function
	a (ILjava/util/ArrayDeque;Lnet/minecraft/server/CustomFunctionData;Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CustomFunction;)V lambda$execute$0
	a (Lnet/minecraft/server/CustomFunctionData;Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/ArrayDeque;I)V execute
net/minecraft/server/DedicatedServerSettings net/minecraft/server/dedicated/DedicatedServerSettings
	path source
	save ()V forceSave
	setProperty (Ljava/util/function/UnaryOperator;)Lnet/minecraft/server/DedicatedServerSettings; update
cxa$2 com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$10
	a this$0
net/minecraft/server/BlockRedstoneWire net/minecraft/world/level/block/RedStoneWireBlock
	f PROPERTY_BY_DIRECTION
	g SHAPE_BY_INDEX
	h shouldSignal
	i toUpdate
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z shouldConnectTo
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPropertyRedstoneSide; getConnectingSide
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z shouldConnectTo
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V checkCornerChangeAt
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; updatePowerStrength
	b (I)I getColorForData
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isPowerSourceAt
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V updateIndirectNeighbourShapes
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; updatePowerStrengthImpl
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	getPower (ILnet/minecraft/server/IBlockData;)I checkTarget
	h (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	j (Lnet/minecraft/server/IBlockData;)Z shouldConnectTo
	q (Lnet/minecraft/server/IBlockData;)I getAABBIndex
cxa$1 com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$1
	a this$0
ca$b net/minecraft/commands/CommandFunction$CommandEntry
	a parse
	a (Lnet/minecraft/server/CustomFunctionData;Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/ArrayDeque;I)V execute
ca$c net/minecraft/commands/CommandFunction$Entry
	a (Lnet/minecraft/server/CustomFunctionData;Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/ArrayDeque;I)V execute
cxa$7 com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$6
	a this$0
cxa$6 com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$5
	a this$0
ca$a net/minecraft/commands/CommandFunction$CacheableFunction
	a NONE
	b id
	c resolved
	d function
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lnet/minecraft/server/CustomFunction;)Lnet/minecraft/server/MinecraftKey; lambda$getId$0
	a (Lnet/minecraft/server/CustomFunctionData;)Ljava/util/Optional; get
cxa$5 com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$4
	a this$0
cxa$4 com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$3
	a this$0
net/minecraft/server/EntityPanda net/minecraft/world/entity/animal/Panda
	PICKUP_PREDICATE PANDA_ITEMS
	bA UNHAPPY_COUNTER
	bB SNEEZE_COUNTER
	bC EAT_COUNTER
	bD MAIN_GENE_ID
	bE HIDDEN_GENE_ID
	bF DATA_ID_FLAGS
	bG gotBamboo
	bH didBite
	bI rollDelta
	bJ sitAmount
	bK sitAmountO
	bL onBackAmount
	bM onBackAmountO
	bN rollAmount
	bO rollAmountO
	bz rollCounter
	C (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityItem;)V pickUpItem
	a (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$200
	a (Lnet/minecraft/server/EntityPanda;Lnet/minecraft/server/EntityPanda;)V setGeneFromParents
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityItem;)Z lambda$static$0
	b (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$300
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$400
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	d (IZ)V setFlag
	d (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$500
	dR ()Z isAggressive
	dV ()I getUnhappyCounter
	dW ()Z isSneezing
	dX ()Z isSitting
	dY ()Z isOnBack
	dZ ()Z isEating
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$700
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	eA ()Lnet/minecraft/server/EntityPanda$Gene; getOneOfGenesRandomly
	eB ()V tryToSit
	ee ()I getSneezeCounter
	eh ()Z isRolling
	ei ()Lnet/minecraft/server/EntityPanda$Gene; getVariant
	ej ()Z isLazy
	ek ()Z isWorried
	el ()Z isPlayful
	em ()Z isBrown
	en ()Z isWeak
	eo ()Z isScared
	ep ()V setAttributes
	eq ()Z canPerformAction
	er ()Ljava/util/function/Predicate; access$600
	es ()I getEatCounter
	et ()V handleEating
	eu ()V addEatingParticles
	ev ()V updateSitAmount
	ew ()V updateOnBackAnimation
	ex ()V updateRollAmount
	ey ()V handleRoll
	ez ()V afterSneeze
	f (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$800
	g (Lnet/minecraft/server/EntityPanda;)V access$900
	h ()V tick
	h (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$1000
	i (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$1100
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	j (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$1200
	j (Lnet/minecraft/server/ItemStack;)Z isFoodOrCake
	k (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$1300
	l (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$1400
	m (Lnet/minecraft/server/EntityPanda;)Z access$1500
	n ()V registerGoals
	n (Lnet/minecraft/server/EntityPanda;)Z access$1600
	r (Z)V sit
	s (I)V setUnhappyCounter
	s (Z)V setOnBack
	t (I)V setSneezeCounter
	t (Z)V eat
	u (I)V setEatCounter
	u (Z)V sneeze
	u_ ()V defineSynchedData
	v (F)F getSitAmount
	v (I)Z getFlag
	v (Z)V roll
	w (F)F getLieOnBackAmount
	x (F)F getRollAmount
net/minecraft/server/EntityIronGolem net/minecraft/world/entity/animal/IronGolem
	b DATA_FLAGS_ID
	c attackAnimationTick
	d offerFlowerTick
	C (Lnet/minecraft/server/Entity;)Z doHurtTarget
	D (Lnet/minecraft/server/Entity;)V doPush
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	dV ()I getOfferFlowerTick
	dX ()Z lambda$registerGoals$0
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$1
	k ()V aiStep
	l ()I getAttackAnimationTick
	l (I)I decreaseAirSupply
	n ()V registerGoals
	r (Z)V offerFlower
	u_ ()V defineSynchedData
net/minecraft/server/WorldGenEnder net/minecraft/world/level/levelgen/feature/SpikeFeature
	a SPIKE_CACHE
	a (Lnet/minecraft/server/GeneratorAccess;)Ljava/util/List; getSpikesForLevel
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEndSpikeConfiguration;Lnet/minecraft/server/WorldGenEnder$Spike;)V placeSpike
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEndSpikeConfiguration;)Z place
net/minecraft/server/WorldGenCarverConfiguration net/minecraft/world/level/levelgen/carver/CarverConfiguration
	a NONE
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/MethodProfilerResults net/minecraft/util/profiling/ProfileResults
	a ()J getStartTimeNano
	a (Ljava/io/File;)Z saveResults
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	b ()I getStartTimeTicks
	b (Ljava/lang/String;)Ljava/lang/String; demanglePath
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	e ()Ljava/lang/String; getProfilerResults
	f ()I getTickDuration
	g ()J getNanoDuration
net/minecraft/server/ContainerBeacon$SlotBeacon net/minecraft/world/inventory/BeaconMenu$PaymentSlot
	a this$0
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
net/minecraft/server/CriterionTriggerKilled net/minecraft/advancements/critereon/KilledTrigger
	a players
	b id
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/CriterionTriggerKilled;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbe$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
doa$a net/minecraft/client/renderer/block/model/BlockElement$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; getFaces
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldoa; deserialize
	a (Lcom/google/gson/JsonObject;)Ldoc; getRotation
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/server/Vector3fa; getVector3f
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumDirection; getFacing
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; filterNullFromFaces
	b (Lcom/google/gson/JsonObject;)F getAngle
	c (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/EnumDirection$EnumAxis; getAxis
	d (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/Vector3fa; getTo
	e (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/Vector3fa; getFrom
clo$a net/minecraft/world/level/material/Material$Builder
	a pushReaction
	b blocksMotion
	c flammable
	d isAlwaysDestroyable
	e liquid
	f replaceable
	g solid
	h color
	i solidBlocking
	a ()Lclo$a; liquid
	a (Lclo$a;)Lclo$a; access$000
	b ()Lclo$a; nonSolid
	c ()Lclo$a; noCollider
	d ()Lclo$a; notAlwaysDestroyable
	e ()Lclo$a; flammable
	f ()Lclo$a; replaceable
	g ()Lclo$a; destroyOnPush
	h ()Lclo$a; notPushable
	i ()Lnet/minecraft/server/Material; build
	j ()Lclo$a; notSolidBlocking
net/minecraft/server/IChunkProvider net/minecraft/world/level/chunk/ChunkSource
	a (II)Lnet/minecraft/server/Chunk; getChunkNow
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/server/BlockPosition;)Z isTickingChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Z isEntityTickingChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V updateChunkForced
	a (Lnet/minecraft/server/Entity;)Z isEntityTickingChunk
	a (ZZ)V setSpawnSettings
	b (II)Z hasChunk
	c (II)Lnet/minecraft/server/IBlockAccess; getChunkForLighting
	getChunkAt (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	getChunkAt (IIZ)Lnet/minecraft/server/Chunk; getChunk
	getChunkGenerator ()Lnet/minecraft/server/ChunkGenerator; getGenerator
	getName ()Ljava/lang/String; gatherStats
	h ()I getLoadedChunksCount
net/minecraft/server/DataConverterSchemaV1022 net/minecraft/util/datafix/schemas/V1022
	a ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$2
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
net/minecraft/server/CriterionTriggerVillagerTrade net/minecraft/advancements/critereon/TradeTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityVillagerAbstract;Lnet/minecraft/server/ItemStack;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbt$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/ScoreboardObjective net/minecraft/world/scores/Objective
	a scoreboard
	b name
	c criteria
	e renderType
	a ()Lnet/minecraft/server/Scoreboard; getScoreboard
	a (Lnet/minecraft/server/ChatModifier;)V lambda$getFormattedDisplayName$0
	e ()Lnet/minecraft/server/IChatBaseComponent; getFormattedDisplayName
net/minecraft/server/VillageSiege net/minecraft/world/entity/ai/village/VillageSiege
	a hasSetupSiege
	b siegeState
	c zombiesToSpawn
	d nextSpawnTime
	e spawnX
	f spawnY
	g spawnZ
	a (Lnet/minecraft/server/WorldServer;)Z tryToSetupSiege
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Vec3D; findRandomSpawnPos
	a (Lnet/minecraft/server/WorldServer;ZZ)I tick
	b (Lnet/minecraft/server/WorldServer;)V trySpawn
net/minecraft/server/DefinedStructureManager net/minecraft/world/level/levelgen/structure/templatesystem/StructureManager
	a LOGGER
	b structureRepository
	c fixerUpper
	d server
	e generatedDir
	a (Ljava/io/InputStream;)Lnet/minecraft/server/DefinedStructure; readStructure
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/DefinedStructure; getOrCreate
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/String;)Ljava/nio/file/Path; createPathToStructure
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/DefinedStructure; get
	b (Lnet/minecraft/server/MinecraftKey;Ljava/lang/String;)Ljava/nio/file/Path; createAndValidatePathToStructure
	c (Lnet/minecraft/server/MinecraftKey;)Z save
	d (Lnet/minecraft/server/MinecraftKey;)V remove
	e (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/DefinedStructure; loadFromResource
	f (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/DefinedStructure; loadFromGenerated
	g (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/DefinedStructure; lambda$get$0
arl$e net/minecraft/world/entity/animal/Panda$PandaGroupData
arl$f net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal
	a panda
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V alertOther
	b ()Z canContinueToUse
arl$g net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal
	a panda
	b cooldown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
arl$h net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal
	f panda
	a ()Z canUse
net/minecraft/server/BlockDirectional net/minecraft/world/level/block/DirectionalBlock
arl$b net/minecraft/world/entity/animal/Panda$PandaAttackGoal
	d panda
	a ()Z canUse
arl$c net/minecraft/world/entity/animal/Panda$PandaAvoidGoal
	i panda
	a ()Z canUse
net/minecraft/server/PathfinderGoalArrowAttack net/minecraft/world/entity/ai/goal/RangedAttackGoal
	a mob
	b rangedAttackMob
	c target
	d attackTime
	e speedModifier
	f seeTime
	g attackIntervalMin
	h attackIntervalMax
	i attackRadius
	j attackRadiusSqr
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
arl$d net/minecraft/world/entity/animal/Panda$PandaBreedGoal
	d BREED_TARGETING
	e panda
	f unhappyCooldown
	a ()Z canUse
	h ()Z canFindBamboo
net/minecraft/server/BlockFurnaceFurace net/minecraft/world/level/block/FurnaceBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V openContainer
net/minecraft/server/LootSelectorTag net/minecraft/world/level/storage/loot/entries/TagEntry
	c tag
	h expand
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/Item;)V lambda$createItemStack$0
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/server/LootSelectorTag;)Lnet/minecraft/server/Tag; access$000
	a (Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z expandTag
	a (Lnet/minecraft/server/Tag;)Lcpr$a; tagContents
	a (Lnet/minecraft/server/Tag;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; lambda$expandTag$2
	b (Lnet/minecraft/server/LootSelectorTag;)Z access$100
	b (Lnet/minecraft/server/Tag;)Lcpr$a; expandTag
	b (Lnet/minecraft/server/Tag;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; lambda$tagContents$1
ge$1 net/minecraft/core/particles/ItemParticleOption$1
	a (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParamItem; fromCommand
	a (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParamItem; fromNetwork
	b (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParam; fromCommand
	b (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParam; fromNetwork
net/minecraft/server/RemoteControlSession net/minecraft/server/rcon/thread/RconClient
	h LOGGER
	i authed
	j client
	k buf
	l rconPassword
	a (IILjava/lang/String;)V send
	a (ILjava/lang/String;)V sendCmdResponse
	b ()V stop
	f ()V sendAuthFailure
	g ()V closeSocket
cxa$a com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$SettingsSlider
	a this$0
cwo$1 com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen$1
	a this$0
cwo$2 com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen$2
	a this$0
coy$c$a net/minecraft/world/level/storage/loot/LootContext$EntityTarget$Serializer
	a (Lcom/google/gson/stream/JsonReader;)Lnet/minecraft/server/LootTableInfo$EntityTarget; read
	a (Lcom/google/gson/stream/JsonWriter;Lnet/minecraft/server/LootTableInfo$EntityTarget;)V write
bo$a net/minecraft/advancements/critereon/RecipeUnlockedTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/IRecipe;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
net/minecraft/server/BlockTorchWall net/minecraft/world/level/block/WallTorchBlock
	a FACING
	b AABBS
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	j (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/VoxelShape; getShape
	l ()Ljava/lang/String; getDescriptionId
bo$b net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance
	a recipe
	a (Lnet/minecraft/server/IRecipe;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
arl$m net/minecraft/world/entity/animal/Panda$PandaSneezeGoal
	a panda
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/server/WorldLoadListener net/minecraft/server/level/progress/ChunkProgressListener
	a ()V start
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkStatus;)V onStatusChange
	b ()V stop
arl$i net/minecraft/world/entity/animal/Panda$PandaMoveControl
	i panda
	a ()V tick
arl$j net/minecraft/world/entity/animal/Panda$PandaPanicGoal
	f panda
	a ()Z canUse
	b ()Z canContinueToUse
net/minecraft/server/CommandAdvancement$Filter net/minecraft/server/commands/AdvancementCommands$Mode
	f parents
	g children
	h $VALUES
	a (Lnet/minecraft/server/CommandAdvancement$Filter;)Z access$000
	b (Lnet/minecraft/server/CommandAdvancement$Filter;)Z access$100
arl$k net/minecraft/world/entity/animal/Panda$PandaRollGoal
	a panda
	C_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
arl$l net/minecraft/world/entity/animal/Panda$PandaSitGoal
	a this$0
	b cooldown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
eak$a net/minecraft/client/sounds/MusicManager$Music
	a MENU
	b GAME
	c CREATIVE
	d CREDITS
	e NETHER
	f END_BOSS
	g END
	h UNDER_WATER
	i event
	j minDelay
	k maxDelay
	l $VALUES
	a ()Lnet/minecraft/server/SoundEffect; getEvent
	b ()I getMinDelay
	c ()I getMaxDelay
net/minecraft/server/LootItemFunctionCopyNBT$Action net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy
	d name
	e $VALUES
	a (Ljava/lang/String;)Lnet/minecraft/server/LootItemFunctionCopyNBT$Action; getByName
	a (Lnet/minecraft/server/LootItemFunctionCopyNBT$Action;)Ljava/lang/String; access$100
	a (Lnet/minecraft/server/NBTBase;Lcr$h;Ljava/util/List;)V merge
doa$1 net/minecraft/client/renderer/block/model/BlockElement$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/WorldGenDecoratorHeightExtraChance net/minecraft/world/level/levelgen/placement/CountWithExtraChanceHeightmapDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyExtraChanceConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/ArgumentCriterionValue net/minecraft/commands/arguments/RangeArgument
	a ()Lcx$b; intRange
	b ()Lcx$a; doubleRange
crh$a net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionInverted; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionInverted;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
net/minecraft/server/LootSelectorEntry net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer
	c compositeFunction
	e weight
	f quality
	g functions
	h entry
	a (Lcpr$d;)Lcpr$a; simpleBuilder
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/server/LootCollector;Ljava/util/function/Function;Ljava/util/Set;Lnet/minecraft/server/LootContextParameterSet;)V validate
	a (Lnet/minecraft/server/LootSelectorEntry;)Ljava/util/function/BiFunction; access$000
net/minecraft/server/DataConverterSchemaV1920 net/minecraft/util/datafix/schemas/V1920
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/server/PacketPlayOutSetSlot net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket
	a containerId
	b slot
	c itemStack
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getSlot
	d ()Lnet/minecraft/server/ItemStack; getItem
al$a net/minecraft/advancements/critereon/DamagePredicate$Builder
	a dealtDamage
	b takenDamage
	c sourceEntity
	d blocked
	e type
	a ()Lal$a; damageInstance
	a (Lam$a;)Lal$a; type
	a (Ljava/lang/Boolean;)Lal$a; blocked
	a (Lnet/minecraft/server/CriterionConditionDamageSource;)Lal$a; type
	a (Lnet/minecraft/server/CriterionConditionEntity;)Lal$a; sourceEntity
	a (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lal$a; dealtDamage
	b ()Lnet/minecraft/server/CriterionConditionDamage; build
	b (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lal$a; takenDamage
net/minecraft/server/LootItemFunctionSetTable net/minecraft/world/level/storage/loot/functions/SetContainerLootTable
	a name
	c seed
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootCollector;Ljava/util/function/Function;Ljava/util/Set;Lnet/minecraft/server/LootContextParameterSet;)V validate
	a (Lnet/minecraft/server/LootItemFunctionSetTable;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lnet/minecraft/server/MinecraftKey;)Lcqg$a; withLootTable
	a (Lnet/minecraft/server/MinecraftKey;J)Lcqg$a; withLootTable
	a (Lnet/minecraft/server/MinecraftKey;J[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$withLootTable$1
	a (Lnet/minecraft/server/MinecraftKey;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$withLootTable$0
	b (Lnet/minecraft/server/LootItemFunctionSetTable;)J access$100
net/minecraft/server/BlockMinecartTrackAbstract net/minecraft/world/level/block/BaseRailBlock
	a FLAT_AABB
	b HALF_BLOCK_AABB
	c isStraight
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V updateState
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z isRail
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; updateDir
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	d ()Z isStraight
	e ()Lnet/minecraft/server/IBlockState; getShapeProperty
	i (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	j (Lnet/minecraft/server/IBlockData;)Z isRail
crz$1 net/minecraft/world/level/timers/TimerQueue$1
net/minecraft/server/DataConverterHeightmapRenaming net/minecraft/util/datafix/fixes/HeightmapRenamingFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
net/minecraft/server/EntityHorseZombie net/minecraft/world/entity/animal/horse/ZombieHorse
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cQ ()Lnet/minecraft/server/EnumMonsterType; getMobType
	cl ()V registerAttributes
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	ee ()V addBehaviourGoals
net/minecraft/server/GameProfileSerializer net/minecraft/nbt/NbtUtils
	a LOGGER
	a (ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder; indent
	a (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/server/DataFixTypes;Lnet/minecraft/server/NBTTagCompound;I)Lnet/minecraft/server/NBTTagCompound; update
	a (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/server/DataFixTypes;Lnet/minecraft/server/NBTTagCompound;II)Lnet/minecraft/server/NBTTagCompound; update
	a (Ljava/lang/StringBuilder;Lnet/minecraft/server/NBTBase;IZ)Ljava/lang/StringBuilder; prettyPrint
	a (Ljava/util/UUID;)Lnet/minecraft/server/NBTTagCompound; createUUIDTag
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; writeBlockPos
	a (Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/NBTTagCompound; writeFluidState
	a (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/NBTTagCompound; writeBlockState
	a (Lnet/minecraft/server/IBlockDataHolder;Lnet/minecraft/server/IBlockState;Ljava/lang/String;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/IBlockDataHolder; setValueHelper
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Lnet/minecraft/server/NBTBase;)Ljava/lang/String; prettyPrint
	a (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;Z)Z compareNbt
	a (Lnet/minecraft/server/NBTBase;Z)Ljava/lang/String; prettyPrint
	b (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/UUID; loadUUIDTag
	c (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/BlockPosition; readBlockPos
	d (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/IBlockData; readBlockState
	deserialize (Lnet/minecraft/server/NBTTagCompound;)Lcom/mojang/authlib/GameProfile; readGameProfile
	e (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/Fluid; readFluidState
	serialize (Lnet/minecraft/server/NBTTagCompound;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/NBTTagCompound; writeGameProfile
net/minecraft/server/DataConverterSchemaV1931 net/minecraft/util/datafix/schemas/V1931
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/PacketPlayOutCustomPayload net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket
	a BRAND
	b DEBUG_PATHFINDING_PACKET
	c DEBUG_NEIGHBORSUPDATE_PACKET
	d DEBUG_CAVES_PACKET
	e DEBUG_STRUCTURES_PACKET
	f DEBUG_WORLDGENATTEMPT_PACKET
	g DEBUG_POI_TICKET_COUNT_PACKET
	h DEBUG_POI_ADDED_PACKET
	i DEBUG_POI_REMOVED_PACKET
	j DEBUG_VILLAGE_SECTIONS
	k DEBUG_GOAL_SELECTOR
	l DEBUG_BRAIN
	m DEBUG_RAIDS
	n identifier
	o data
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getIdentifier
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketDataSerializer; getData
axw$1 net/minecraft/world/entity/vehicle/Boat$1
	a $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type
	b $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Status
dex$a$a net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton$Pos
	a ingredients
	b x
	c y
	d this$1
net/minecraft/server/WorldGenEndTrophy net/minecraft/world/level/levelgen/feature/EndPodiumFeature
	a END_PODIUM_LOCATION
	aS active
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/PacketPlayOutTabComplete net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket
	a id
	b suggestions
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lcom/mojang/brigadier/suggestion/Suggestions; getSuggestions
fs$1 net/minecraft/core/Vec3i$1
	a val$minCorner
	b val$maxCorner
	c lastPos
	a ()Lnet/minecraft/server/BaseBlockPosition; computeNext
net/minecraft/server/ArgumentSerializer net/minecraft/commands/synchronization/ArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
net/minecraft/server/CommandTitle net/minecraft/server/commands/TitleCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I clearTitle
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;III)I setTimes
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/PacketPlayOutTitle$EnumTitleAction;)I showTitle
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I resetTitle
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
rv$a net/minecraft/server/commands/DataPackCommand$Inserter
net/minecraft/server/ItemCrossbow net/minecraft/world/item/CrossbowItem
	c startSoundPlayed
	d midLoadSoundPlayed
	a (I)Lnet/minecraft/server/SoundEffect; getStartSound
	a (ILnet/minecraft/server/ItemStack;)F getPowerForTime
	a (Ljava/util/Random;)[F getShotPitches
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)Z tryLoadProjectiles
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;ZZ)Z loadProjectile
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityLiving;)V lambda$shootProjectile$5
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/ItemStack;)Z lambda$containsChargedProjectile$4
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Item;)Z containsChargedProjectile
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbdr;)V appendHoverText
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/server/ItemStack;Z)V setCharged
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/ItemStack;FF)V performShooting
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;FZFFF)V shootProjectile
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V onCrossbowShot
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;I)V onUseTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EntityArrow; getArrow
	a (Z)F getRandomShotPitch
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)V addChargedProjectile
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)F lambda$new$3
	c (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)F lambda$new$2
	d ()Ljava/util/function/Predicate; getSupportedHeldProjectiles
	d (Lnet/minecraft/server/ItemStack;)Z isCharged
	d (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)F lambda$new$1
	e (Lnet/minecraft/server/ItemStack;)I getChargeDuration
	e (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)F lambda$new$0
	e_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	f_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
	j (Lnet/minecraft/server/ItemStack;)Ljava/util/List; getChargedProjectiles
	k (Lnet/minecraft/server/ItemStack;)V clearChargedProjectiles
	l (Lnet/minecraft/server/ItemStack;)F getShootingPower
re$1 net/minecraft/server/PlayerAdvancements$1
net/minecraft/server/BlockPropertyBedPart net/minecraft/world/level/block/state/properties/BedPart
	c name
	d $VALUES
	m ()Ljava/lang/String; getSerializedName
dko$a net/minecraft/client/particle/BarrierParticle$Provider
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/LightEngineThreaded net/minecraft/server/level/ThreadedLevelLightEngine
	a LOGGER
	b taskMailbox
	c lightTasks
	d chunkMap
	e sorterMailbox
	f taskPerBatch
	g scheduled
	a (I)V setTaskPerBatch
	a (IILjava/util/function/IntSupplier;Lnet/minecraft/server/LightEngineThreaded$Update;Ljava/lang/Runnable;)V addTask
	a (IILnet/minecraft/server/LightEngineThreaded$Update;Ljava/lang/Runnable;)V addTask
	a (IZZ)I runUpdates
	a (Lnet/minecraft/server/BlockPosition;)V checkBlock
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V updateChunkStatus
	a (Lnet/minecraft/server/ChunkCoordIntPair;Ljava/lang/Runnable;)V lambda$lightChunk$21
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/NibbleArray;)V queueSectionData
	a (Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BlockPosition;)V lambda$null$17
	a (Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/IChunkAccess; lambda$lightChunk$20
	a (Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/ChunkCoordIntPair;Z)V lambda$lightChunk$18
	a (Lnet/minecraft/server/IChunkAccess;Z)Ljava/util/concurrent/CompletableFuture; lightChunk
	a (Lnet/minecraft/server/LightEngineThreaded$Update;Ljava/lang/Runnable;)V lambda$addTask$13
	a (Lnet/minecraft/server/SectionPosition;)Ljava/lang/String; lambda$queueSectionData$12
	a (Lnet/minecraft/server/SectionPosition;Z)V updateSectionStatus
	b ()V runUpdate
	b (Lnet/minecraft/server/BlockPosition;)Ljava/lang/String; lambda$checkBlock$1
	b (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/lang/String; lambda$retainData$16
	b (Lnet/minecraft/server/ChunkCoordIntPair;Z)V retainData
	b (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/NibbleArray;)V lambda$queueSectionData$11
	b (Lnet/minecraft/server/SectionPosition;Z)Ljava/lang/String; lambda$updateSectionStatus$7
	c ()V lambda$tryScheduleUpdate$22
	c (Lnet/minecraft/server/BlockPosition;)V lambda$checkBlock$0
	c (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/lang/String; lambda$updateChunkStatus$4
	c (Lnet/minecraft/server/ChunkCoordIntPair;Z)Ljava/lang/String; lambda$lightChunk$19
	c (Lnet/minecraft/server/SectionPosition;Z)V lambda$updateSectionStatus$6
	d ()I lambda$retainData$14
	d (Lnet/minecraft/server/ChunkCoordIntPair;)V lambda$updateChunkStatus$3
	d (Lnet/minecraft/server/ChunkCoordIntPair;Z)V lambda$retainData$15
	e ()I lambda$queueSectionData$10
	e (Lnet/minecraft/server/ChunkCoordIntPair;Z)Ljava/lang/String; lambda$enableLightSources$9
	f ()I lambda$updateSectionStatus$5
	f (Lnet/minecraft/server/ChunkCoordIntPair;Z)V lambda$enableLightSources$8
	g ()I lambda$updateChunkStatus$2
	queueUpdate ()V tryScheduleUpdate
net/minecraft/server/DataConverterSchemaV1928 net/minecraft/util/datafix/schemas/V1928
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
net/minecraft/server/DataConverterSchemaV1929 net/minecraft/util/datafix/schemas/V1929
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
dds$a net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$CustomCreativeSlot
	a (Lnet/minecraft/server/EntityHuman;)Z mayPickup
crz$a net/minecraft/world/level/timers/TimerQueue$Event
	a triggerTime
	b sequentialId
	c id
	d callback
dds$b net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$ItemPickerMenu
	c items
	a (F)V scrollTo
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	b (Lnet/minecraft/server/Slot;)Z canDragTo
	e ()Z canScroll
cbb$a net/minecraft/world/level/levelgen/feature/DesertPyramidFeature$FeatureStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
dds$c net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$SlotWrapper
	a this$0
	b target
	a ()I getMaxStackSize
	a (I)Lnet/minecraft/server/ItemStack; remove
	a (Ldds$c;)Lnet/minecraft/server/Slot; access$100
	a (Lnet/minecraft/server/EntityHuman;)Z mayPickup
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/IInventory;I)Z isAt
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/Slot;)V swap
	b ()Z isActive
	b (Lnet/minecraft/server/ItemStack;)I getMaxStackSize
	c ()Ljava/lang/String; getNoItemIcon
	d ()V setChanged
	d (Lnet/minecraft/server/ItemStack;)V set
	e ()Lnet/minecraft/server/ItemStack; getItem
	f ()Z hasItem
net/minecraft/server/PacketListenerPlayIn net/minecraft/network/protocol/game/ServerGamePacketListener
	a (Lnet/minecraft/server/PacketPlayInAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/server/PacketPlayInAdvancements;)V handleSeenAdvancements
	a (Lnet/minecraft/server/PacketPlayInArmAnimation;)V handleAnimate
	a (Lnet/minecraft/server/PacketPlayInAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/server/PacketPlayInBEdit;)V handleEditBook
	a (Lnet/minecraft/server/PacketPlayInBeacon;)V handleSetBeaconPacket
	a (Lnet/minecraft/server/PacketPlayInBlockDig;)V handlePlayerAction
	a (Lnet/minecraft/server/PacketPlayInBlockPlace;)V handleUseItem
	a (Lnet/minecraft/server/PacketPlayInBoatMove;)V handlePaddleBoat
	a (Lnet/minecraft/server/PacketPlayInChat;)V handleChat
	a (Lnet/minecraft/server/PacketPlayInClientCommand;)V handleClientCommand
	a (Lnet/minecraft/server/PacketPlayInCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/server/PacketPlayInCustomPayload;)V handleCustomPayload
	a (Lnet/minecraft/server/PacketPlayInDifficultyChange;)V handleChangeDifficulty
	a (Lnet/minecraft/server/PacketPlayInDifficultyLock;)V handleLockDifficulty
	a (Lnet/minecraft/server/PacketPlayInEnchantItem;)V handleContainerButtonClick
	a (Lnet/minecraft/server/PacketPlayInEntityAction;)V handlePlayerCommand
	a (Lnet/minecraft/server/PacketPlayInEntityNBTQuery;)V handleEntityTagQuery
	a (Lnet/minecraft/server/PacketPlayInFlying;)V handleMovePlayer
	a (Lnet/minecraft/server/PacketPlayInHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/server/PacketPlayInItemName;)V handleRenameItem
	a (Lnet/minecraft/server/PacketPlayInKeepAlive;)V handleKeepAlive
	a (Lnet/minecraft/server/PacketPlayInPickItem;)V handlePickItem
	a (Lnet/minecraft/server/PacketPlayInRecipeDisplayed;)V handleRecipeBookUpdatePacket
	a (Lnet/minecraft/server/PacketPlayInResourcePackStatus;)V handleResourcePackResponse
	a (Lnet/minecraft/server/PacketPlayInSetCommandBlock;)V handleSetCommandBlock
	a (Lnet/minecraft/server/PacketPlayInSetCommandMinecart;)V handleSetCommandMinecart
	a (Lnet/minecraft/server/PacketPlayInSetCreativeSlot;)V handleSetCreativeModeSlot
	a (Lnet/minecraft/server/PacketPlayInSetJigsaw;)V handleSetJigsawBlock
	a (Lnet/minecraft/server/PacketPlayInSettings;)V handleClientInformation
	a (Lnet/minecraft/server/PacketPlayInSpectate;)V handleTeleportToEntityPacket
	a (Lnet/minecraft/server/PacketPlayInSteerVehicle;)V handlePlayerInput
	a (Lnet/minecraft/server/PacketPlayInStruct;)V handleSetStructureBlock
	a (Lnet/minecraft/server/PacketPlayInTabComplete;)V handleCustomCommandSuggestions
	a (Lnet/minecraft/server/PacketPlayInTeleportAccept;)V handleAcceptTeleportPacket
	a (Lnet/minecraft/server/PacketPlayInTileNBTQuery;)V handleBlockEntityTagQuery
	a (Lnet/minecraft/server/PacketPlayInTrSel;)V handleSelectTrade
	a (Lnet/minecraft/server/PacketPlayInTransaction;)V handleContainerAck
	a (Lnet/minecraft/server/PacketPlayInUpdateSign;)V handleSignUpdate
	a (Lnet/minecraft/server/PacketPlayInUseEntity;)V handleInteract
	a (Lnet/minecraft/server/PacketPlayInUseItem;)V handleUseItemOn
	a (Lnet/minecraft/server/PacketPlayInVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/server/PacketPlayInWindowClick;)V handleContainerClick
net/minecraft/server/NavigationAbstract net/minecraft/world/entity/ai/navigation/PathNavigation
	a mob
	b level
	c path
	d speedModifier
	e tick
	f lastStuckCheck
	g lastStuckCheckPos
	h timeoutCachedNode
	i timeoutTimer
	j lastTimeoutCheck
	k timeoutLimit
	l maxDistanceToWaypoint
	m hasDelayedRecomputation
	n timeLastRecompute
	o nodeEvaluator
	p dist
	q targetPos
	r reachRange
	s pathFinder
	D_ ()V trimPath
	a ()Z canUpdatePath
	a (D)V setSpeedModifier
	a (DDDD)Z moveTo
	a (DDDI)Lnet/minecraft/server/PathEntity; createPath
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
	a (Ljava/util/Set;IZI)Lnet/minecraft/server/PathEntity; createPath
	a (Ljava/util/stream/Stream;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/Entity;D)Z moveTo
	a (Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/PathEntity;D)Z moveTo
	a (Lnet/minecraft/server/Pathfinder;)V setPathFinder
	a (Lnet/minecraft/server/Vec3D;)V doStuckDetection
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;III)Z canMoveDirectly
	b ()Lnet/minecraft/server/Vec3D; getTempMobPos
	b (Lnet/minecraft/server/BlockPosition;)V recomputePath
	c ()V tick
	d (Z)V setCanFloat
	g ()Lnet/minecraft/server/Pathfinder; getPathFinder
	h ()Lnet/minecraft/server/BlockPosition; getTargetPos
	i ()F getMaxDist
	j ()Z hasDelayedRecomputation
	k ()V recomputePath
	l ()Lnet/minecraft/server/PathEntity; getPath
	m ()V updatePath
	n ()Z isDone
	o ()V stop
	p ()Z isInLiquid
	q ()Lnet/minecraft/server/PathfinderAbstract; getNodeEvaluator
	r ()Z canFloat
	s ()F getMaxDistanceToWaypoint
net/minecraft/server/PathfinderGoalFishSchool net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal
	a mob
	b timeToRecalcPath
	c nextStartTick
	a ()Z canUse
	a (Lnet/minecraft/server/EntityFishSchool;)I nextStartTick
	b ()Z canContinueToUse
	b (Lnet/minecraft/server/EntityFishSchool;)Z lambda$canUse$1
	c ()V start
	c (Lnet/minecraft/server/EntityFishSchool;)Z lambda$canUse$0
	d ()V stop
	e ()V tick
net/minecraft/server/WorldGenMegaTreeProviderDarkOak net/minecraft/world/level/block/grower/DarkOakTreeGrower
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenTreeAbstract; getMegaFeature
	b (Ljava/util/Random;)Lnet/minecraft/server/WorldGenTreeAbstract; getFeature
net/minecraft/server/PathfinderGoalCrossbowAttack net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal
	a mob
	b crossbowState
	c speedModifier
	d attackRadiusSqr
	e seeTime
	f attackDelay
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
	g ()Z isHoldingCrossbow
	h ()Z isValidTarget
	j ()Z canRun
net/minecraft/server/EntityComplexPart net/minecraft/world/entity/boss/EnderDragonPart
	c name
	d size
	owner parentMob
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aH ()Z isPickable
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	s (Lnet/minecraft/server/Entity;)Z is
	u_ ()V defineSynchedData
cri$1 net/minecraft/world/level/storage/loot/predicates/LocationCheck$1
net/minecraft/server/PacketPlayInAdvancements$Status net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action
	c $VALUES
net/minecraft/server/BiomeLukewarmOcean net/minecraft/world/level/biome/LukeWarmOceanBiome
net/minecraft/server/BlockDirtSnow net/minecraft/world/level/block/SnowyDirtBlock
	a SNOWY
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
ddb$1 net/minecraft/client/gui/screens/controls/ControlList$1
arm$1 net/minecraft/world/entity/animal/Parrot$1
	a (Lnet/minecraft/server/EntityInsentient;)Z test
fb$1 net/minecraft/core/Direction$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	b $SwitchMap$net$minecraft$core$Direction
cxb$2 com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen$2
	a this$0
net/minecraft/server/EntityCat$PathfinderGoalTemptChance net/minecraft/world/entity/animal/Cat$CatTemptGoal
	chosenTarget selectedPlayer
	d cat
	a ()Z canUse
	e ()V tick
	g ()Z canScare
cxb$1 com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen$1
	a this$0
net/minecraft/server/DataConverterSchemaV1909 net/minecraft/util/datafix/schemas/V1909
net/minecraft/server/Advancement$SerializedAdvancement net/minecraft/advancements/Advancement$Builder
	a parentId
	b parent
	c display
	d rewards
	e criteria
	f requirements
	g requirementsStrategy
	a ()Lnet/minecraft/server/Advancement$SerializedAdvancement; advancement
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/Advancement$SerializedAdvancement; fromJson
	a (Ljava/lang/String;Lnet/minecraft/server/Criterion;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addCriterion
	a (Ljava/lang/String;Lnet/minecraft/server/CriterionInstance;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addCriterion
	a (Ljava/util/function/Consumer;Ljava/lang/String;)Lnet/minecraft/server/Advancement; save
	a (Ljava/util/function/Function;)Z canBuild
	a (Lnet/minecraft/server/Advancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; parent
	a (Lnet/minecraft/server/AdvancementDisplay;)Lnet/minecraft/server/Advancement$SerializedAdvancement; display
	a (Lnet/minecraft/server/AdvancementRequirements;)Lnet/minecraft/server/Advancement$SerializedAdvancement; requirements
	a (Lnet/minecraft/server/AdvancementRewards;)Lnet/minecraft/server/Advancement$SerializedAdvancement; rewards
	a (Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/AdvancementFrameType;ZZZ)Lnet/minecraft/server/Advancement$SerializedAdvancement; display
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/AdvancementFrameType;ZZZ)Lnet/minecraft/server/Advancement$SerializedAdvancement; display
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Advancement$SerializedAdvancement; parent
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lt$a;)Lnet/minecraft/server/Advancement$SerializedAdvancement; rewards
	a ([[Ljava/lang/String;)Lnet/minecraft/server/Advancement$SerializedAdvancement; requirements
	b ()Lcom/google/gson/JsonObject; serializeToJson
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Advancement; build
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/Advancement$SerializedAdvancement; fromNetwork
	c ()Ljava/util/Map; getCriteria
	c (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Advancement; lambda$build$0
cxb$4 com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen$4
	a this$0
bnk$2$1 net/minecraft/world/level/block/ChestBlock$2$1
	a val$first
	b val$second
	c val$container
	d this$0
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/BlockSkullPlayer net/minecraft/world/level/block/PlayerHeadBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
cxb$3 com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen$3
	a this$0
net/minecraft/server/DataConverterSchemaV1906 net/minecraft/util/datafix/schemas/V1906
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$1
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/server/Potions net/minecraft/world/item/alchemy/Potions
	a (Ljava/lang/String;Lnet/minecraft/server/PotionRegistry;)Lnet/minecraft/server/PotionRegistry; register
net/minecraft/server/RecipeShulkerBox net/minecraft/world/item/crafting/ShulkerBoxColoring
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
net/minecraft/server/EntityDamageSourceIndirect net/minecraft/world/damagesource/IndirectEntityDamageSource
	c (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/IChatBaseComponent; getLocalizedDeathMessage
	j ()Lnet/minecraft/server/Entity; getDirectEntity
	k ()Lnet/minecraft/server/Entity; getEntity
net/minecraft/server/DataConverterSchemaV1904 net/minecraft/util/datafix/schemas/V1904
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
dwa$1 net/minecraft/client/renderer/entity/layers/ShulkerHeadLayer$1
	a $SwitchMap$net$minecraft$core$Direction
fx$20 net/minecraft/core/dispenser/DispenseItemBehavior$9
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
dfy$b net/minecraft/client/gui/spectator/SpectatorMenu$ScrollMenuItem
	a direction
	b enabled
	Z_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	a (FI)V renderIcon
	a (Ldfy;)V selectItem
	aa_ ()Z isEnabled
dfy$a net/minecraft/client/gui/spectator/SpectatorMenu$CloseSpectatorItem
	Z_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	a (FI)V renderIcon
	a (Ldfy;)V selectItem
	aa_ ()Z isEnabled
uw$2 net/minecraft/server/level/ChunkMap$2
	a val$startX
	c val$finalI
	d val$range
	e val$startZ
	f val$either
	g this$0
vi$a net/minecraft/server/level/ServerChunkCache$MainThreadExecutor
	a this$0
	ax ()Z scheduleExecutables
	ay ()Ljava/lang/Thread; getRunningThread
	c (Ljava/lang/Runnable;)Z shouldRun
	d (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	q ()Z pollTask
dcs$b$a net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemComparator
	a this$1
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/Item;)I compare
net/minecraft/server/Registry net/minecraft/core/IdMap
	a (Ljava/lang/Object;)I getId
	fromId (I)Ljava/lang/Object; byId
net/minecraft/server/BlockHay net/minecraft/world/level/block/HayBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;F)V fallOn
net/minecraft/server/LootItemConditionKilledByPlayer net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition
	a INSTANCE
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lcrk$a; killedByPlayer
	c ()Lnet/minecraft/server/LootItemConditionKilledByPlayer; access$000
	d ()Lnet/minecraft/server/LootItemCondition; lambda$killedByPlayer$0
dcs$b$b net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow
	a this$1
	a (Lnet/minecraft/server/Statistic;IIZ)V renderStat
uw$1 net/minecraft/server/level/ChunkMap$1
	a val$k
	c this$0
net/minecraft/server/LootItemFunctionEnchant net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction
	a LOGGER
	c enchantments
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionEnchant;)Ljava/util/List; access$100
	a ([Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$randomApplicableEnchantment$0
	b ()Lcqa$a; randomEnchantment
	c ()Lcqg$a; randomApplicableEnchantment
jw$1 net/minecraft/network/chat/Style$1
	a ()Lnet/minecraft/server/EnumChatFormat; getColor
	a (Ljava/lang/Boolean;)Lnet/minecraft/server/ChatModifier; setBold
	a (Lnet/minecraft/server/ChatClickable;)Lnet/minecraft/server/ChatModifier; setClickEvent
	a (Lnet/minecraft/server/ChatHoverable;)Lnet/minecraft/server/ChatModifier; setHoverEvent
	a (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; inheritFrom
	a (Lnet/minecraft/server/EnumChatFormat;)Lnet/minecraft/server/ChatModifier; setColor
	b ()Z isBold
	b (Ljava/lang/Boolean;)Lnet/minecraft/server/ChatModifier; setItalic
	c ()Z isItalic
	c (Ljava/lang/Boolean;)Lnet/minecraft/server/ChatModifier; setStrikethrough
	d ()Z isStrikethrough
	d (Ljava/lang/Boolean;)Lnet/minecraft/server/ChatModifier; setUnderlined
	e ()Z isUnderlined
	e (Ljava/lang/Boolean;)Lnet/minecraft/server/ChatModifier; setObfuscated
	f ()Z isObfuscated
	h ()Lnet/minecraft/server/ChatClickable; getClickEvent
	i ()Lnet/minecraft/server/ChatHoverable; getHoverEvent
	j ()Ljava/lang/String; getInsertion
	k ()Ljava/lang/String; getLegacyFormatCodes
	m ()Lnet/minecraft/server/ChatModifier; copy
	n ()Lnet/minecraft/server/ChatModifier; flatCopy
coy$b net/minecraft/world/level/storage/loot/LootContext$DynamicDrop
ake$b$1 net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$1
	a (Lnet/minecraft/server/Behavior;)Z lambda$apply$0
	a (Lnet/minecraft/server/WeightedList;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V apply
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;JLnet/minecraft/server/Behavior;)Z lambda$apply$1
net/minecraft/server/WorldGenTreeProviderBirch net/minecraft/world/level/block/grower/BirchTreeGrower
	b (Ljava/util/Random;)Lnet/minecraft/server/WorldGenTreeAbstract; getFeature
net/minecraft/server/MobEffectAttackDamage net/minecraft/world/effect/AttackDamageMobEffect
	a multiplier
	a (ILnet/minecraft/server/AttributeModifier;)D getAttributeModifierValue
ake$b$2 net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$2
	a (Lnet/minecraft/server/Behavior;)Z lambda$apply$0
	a (Lnet/minecraft/server/WeightedList;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V apply
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;JLnet/minecraft/server/Behavior;)V lambda$apply$1
dfy$1 net/minecraft/client/gui/spectator/SpectatorMenu$1
	Z_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	a (FI)V renderIcon
	a (Ldfy;)V selectItem
	aa_ ()Z isEnabled
vi$1 net/minecraft/server/level/ServerChunkCache$1
net/minecraft/server/NoiseGeneratorPerlin net/minecraft/world/level/levelgen/synth/ImprovedNoise
	a xo
	b yo
	c zo
	d p
	a (DDDDD)D noise
	a (I)I p
	a (IDDD)D gradDot
	a (IIIDDDDDD)D sampleAndLerp
net/minecraft/server/DataConverterSchemaNamed net/minecraft/util/datafix/schemas/NamespacedSchema
	a (Ljava/lang/String;)Ljava/lang/String; ensureNamespaced
ais$a net/minecraft/world/entity/EntityType$Builder
	a factory
	b category
	c serialize
	d summon
	e fireImmune
	f canSpawnFarFromPlayer
	g dimensions
	a ()Lais$a; noSummon
	a (FF)Lais$a; sized
	a (Lais$b;Lnet/minecraft/server/EnumCreatureType;)Lais$a; of
	a (Ljava/lang/String;)Lnet/minecraft/server/EntityTypes; build
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; lambda$createNothing$0
	a (Lnet/minecraft/server/EnumCreatureType;)Lais$a; createNothing
	b ()Lais$a; noSave
	c ()Lais$a; fireImmune
	d ()Lais$a; canSpawnFarFromPlayer
ais$b net/minecraft/world/entity/EntityType$EntityFactory
net/minecraft/server/WorldGenFeatureVillageSnowy net/minecraft/world/level/levelgen/feature/SnowyVillagePools
	a ()V bootstrap
net/minecraft/server/SensorVillagerBabies net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/EntityLiving;)Ljava/util/List; getNearestVillagerBabies
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	b (Lnet/minecraft/server/EntityLiving;)Z isVillagerBaby
	c (Lnet/minecraft/server/EntityLiving;)Ljava/util/List; getVisibleEntities
net/minecraft/server/Enchantment net/minecraft/world/item/enchantment/Enchantment
	a slots
	c descriptionId
	d rarity
	itemTarget category
	a (I)I getMinCost
	a (ILnet/minecraft/server/DamageSource;)I getDamageProtection
	a (ILnet/minecraft/server/EnumMonsterType;)F getDamageBonus
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	a (Lnet/minecraft/server/EntityLiving;)Ljava/util/Map; getSlotItems
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;I)V doPostAttack
	b (I)I getMaxCost
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;I)V doPostHurt
	c ()Z isCurse
	c (I)Lnet/minecraft/server/Enchantment; byId
	d ()Lnet/minecraft/server/Enchantment$Rarity; getRarity
	d (I)Lnet/minecraft/server/IChatBaseComponent; getFullname
	f ()Ljava/lang/String; getOrCreateDescriptionId
	g ()Ljava/lang/String; getDescriptionId
	getStartLevel ()I getMinLevel
	isCompatible (Lnet/minecraft/server/Enchantment;)Z isCompatibleWith
	isTreasure ()Z isTreasureOnly
dpv$1 net/minecraft/client/renderer/chunk/ChunkRenderWorker$1
	a val$buffers
	b val$task
	c val$compiledChunk
	d this$0
	a (Ljava/util/List;)V onSuccess
net/minecraft/server/DefinedStructure$EntityInfo net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo
	a pos
	b blockPos
	c nbt
net/minecraft/server/WorldGenTreeProviderSpruce net/minecraft/world/level/block/grower/SpruceTreeGrower
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenTreeAbstract; getMegaFeature
	b (Ljava/util/Random;)Lnet/minecraft/server/WorldGenTreeAbstract; getFeature
net/minecraft/server/SystemUtils$OS net/minecraft/Util$OS
	f $VALUES
	a (Ljava/io/File;)V openFile
	a (Ljava/lang/String;)V openUri
	a (Ljava/net/URI;)V openUri
	a (Ljava/net/URL;)V openUrl
	b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
	c (Ljava/net/URL;)Ljava/lang/Process; lambda$openUrl$0
net/minecraft/server/BlockSnow net/minecraft/world/level/block/SnowLayerBlock
	b SHAPE_BY_LAYER
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	n (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/server/DataConverterUUID net/minecraft/util/datafix/fixes/EntityStringUuidFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
net/minecraft/server/CommandEnchant net/minecraft/server/commands/EnchantCommand
	a ERROR_NOT_LIVING_ENTITY
	b ERROR_NO_ITEM
	c ERROR_INCOMPATIBLE
	d ERROR_LEVEL_TOO_HIGH
	e ERROR_NOTHING_HAPPENED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$4
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/Enchantment;I)I enchant
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
net/minecraft/server/PathfinderGoalRaid net/minecraft/world/entity/ai/goal/PathfindToRaidGoal
	a mob
	a ()Z canUse
	a (Lnet/minecraft/server/Raid;)V recruitNearby
	a (Lnet/minecraft/server/Raid;Lnet/minecraft/server/EntityRaider;)Z lambda$recruitNearby$0
	b ()Z canContinueToUse
	e ()V tick
fx$13 net/minecraft/core/dispenser/DispenseItemBehavior$20
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
bpz$1 net/minecraft/world/level/block/LeverBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	b $SwitchMap$net$minecraft$core$Direction
	c $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
net/minecraft/server/Behavior$Status net/minecraft/world/entity/ai/behavior/Behavior$Status
	c $VALUES
fx$14 net/minecraft/core/dispenser/DispenseItemBehavior$3
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
fx$15 net/minecraft/core/dispenser/DispenseItemBehavior$4
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityEgg;)V lambda$getProjectile$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
cio$a net/minecraft/world/level/levelgen/structure/PillagerOutpostPieces$PillagerOutpostPiece
net/minecraft/server/WorldGenFeatureVillagePlain net/minecraft/world/level/levelgen/feature/PlainVillagePools
	a ()V bootstrap
net/minecraft/server/IAttribute net/minecraft/world/entity/ai/attributes/Attribute
	a (D)D sanitizeValue
	c ()Z isClientSyncable
	d ()Lnet/minecraft/server/IAttribute; getParentAttribute
	getDefault ()D getDefaultValue
net/minecraft/server/BlockCoralBase net/minecraft/world/level/block/BaseCoralPlantTypeBlock
	a AABB
	b WATERLOGGED
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V tryScheduleDieTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z scanForWater
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
fx$16 net/minecraft/core/dispenser/DispenseItemBehavior$5
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntitySnowball;)V lambda$getProjectile$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
fx$10 net/minecraft/core/dispenser/DispenseItemBehavior$18
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
dla$a net/minecraft/client/particle/ExplodeParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
fx$11 net/minecraft/core/dispenser/DispenseItemBehavior$19
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
dko$1 net/minecraft/client/particle/BarrierParticle$1
net/minecraft/server/ChunkSection net/minecraft/world/level/chunk/LevelChunkSection
	GLOBAL_PALETTE GLOBAL_BLOCKSTATE_PALETTE
	blockIds states
	e tickingFluidCount
	yPos bottomBlockY
	a ()V acquire
	a (Lnet/minecraft/server/ChunkSection;)Z isEmpty
	a (Lnet/minecraft/server/IBlockData;)Z maybeHas
	a (Lnet/minecraft/server/IBlockData;I)V lambda$recalcBlockCounts$0
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()V release
	b (III)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z isEmpty
	d ()Z isRandomlyTicking
	f ()Z isRandomlyTickingFluids
	getBlocks ()Lnet/minecraft/server/DataPaletteBlock; getStates
	getType (III)Lnet/minecraft/server/IBlockData; getBlockState
	getYPosition ()I bottomBlockY
	j ()I getSerializedSize
	setType (IIILnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; setBlockState
	setType (IIILnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
	shouldTick ()Z isRandomlyTickingBlocks
fx$12 net/minecraft/core/dispenser/DispenseItemBehavior$2
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
uw$a net/minecraft/server/level/ChunkMap$DistanceManager
	a this$0
	a (J)Z isChunkToRemove
	a (JILnet/minecraft/server/PlayerChunk;I)Lnet/minecraft/server/PlayerChunk; updateChunkScheduling
	b (J)Lnet/minecraft/server/PlayerChunk; getChunk
net/minecraft/server/PathfinderGoalRandomStroll net/minecraft/world/entity/ai/goal/RandomStrollGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f interval
	g forceTrigger
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	g ()Lnet/minecraft/server/Vec3D; getPosition
	h ()V trigger
	setTimeBetweenMovement (I)V setInterval
fx$17 net/minecraft/core/dispenser/DispenseItemBehavior$6
	a ()F getUncertainty
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityThrownExpBottle;)V lambda$getProjectile$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
	b ()F getPower
fx$18 net/minecraft/core/dispenser/DispenseItemBehavior$7
fx$19 net/minecraft/core/dispenser/DispenseItemBehavior$8
net/minecraft/server/DragonControllerHold net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase
	b NEW_TARGET_TARGETING
	c currentPath
	d targetLocation
	e clockwise
	a (Lnet/minecraft/server/EntityEnderCrystal;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DamageSource;Lnet/minecraft/server/EntityHuman;)V onCrystalDestroyed
	a (Lnet/minecraft/server/EntityHuman;)V strafePlayer
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
bvs$1 net/minecraft/world/level/block/state/AbstractStateHolder$1
	a (Ljava/util/Map$Entry;)Ljava/lang/String; apply
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/lang/String; getName
net/minecraft/server/WorldGenStronghold net/minecraft/world/level/levelgen/feature/StrongholdFeature
	a isSpotSelected
	aS strongholdPos
	aT discoveredStarts
	aU currentSeed
	a ()Lceu$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;)V generatePositions
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;II)Z isFeatureChunk
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;IZ)Lnet/minecraft/server/BlockPosition; getNearestGeneratedFeature
	a (Lnet/minecraft/server/WorldGenStronghold;)Ljava/util/List; access$000
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	d ()V reset
net/minecraft/server/WorldGenDecoratorConfigured net/minecraft/world/level/levelgen/placement/ConfiguredDecorator
	a decorator
	b config
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorConfigured; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfigured;)Z place
net/minecraft/server/RecipeStonecutting net/minecraft/world/item/crafting/StonecutterRecipe
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
net/minecraft/server/CriterionConditionMobEffect net/minecraft/advancements/critereon/MobEffectsPredicate
	a ANY
	b effects
	a ()Lnet/minecraft/server/CriterionConditionMobEffect; effects
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionMobEffect; fromJson
	a (Ljava/util/Map;)Z matches
	a (Lnet/minecraft/server/Entity;)Z matches
	a (Lnet/minecraft/server/EntityLiving;)Z matches
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
	a (Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/CriterionConditionMobEffect; and
	a (Lnet/minecraft/server/MobEffectList;Lbj$a;)Lnet/minecraft/server/CriterionConditionMobEffect; and
	b ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/server/CriterionInstanceAbstract net/minecraft/advancements/critereon/AbstractCriterionTriggerInstance
	a criterion
	a ()Lnet/minecraft/server/MinecraftKey; getCriterion
net/minecraft/server/IRecipeComplex net/minecraft/world/item/crafting/CustomRecipe
	a id
	P_ ()Z isSpecial
	c ()Lnet/minecraft/server/ItemStack; getResultItem
	f ()Lnet/minecraft/server/MinecraftKey; getId
net/minecraft/server/PersistentScoreboard net/minecraft/world/scores/ScoreboardSaveData
	a LOGGER
	b scoreboard
	c delayLoad
	a ()Lnet/minecraft/server/NBTTagList; saveTeams
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/IScoreboardCriteria;)V lambda$loadObjectives$0
	a (Lnet/minecraft/server/NBTTagList;)V loadTeams
	a (Lnet/minecraft/server/Scoreboard;)V setScoreboard
	a (Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/NBTTagList;)V loadTeamPlayers
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b (Lnet/minecraft/server/NBTTagList;)V loadObjectives
	c (Lnet/minecraft/server/NBTTagCompound;)V loadDisplaySlots
	d (Lnet/minecraft/server/NBTTagCompound;)V saveDisplaySlots
	e ()Lnet/minecraft/server/NBTTagList; saveObjectives
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdLibrary net/minecraft/world/level/levelgen/structure/StrongholdPieces$Library
	a isTall
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdLibrary; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/WorldGenCavesOcean net/minecraft/world/level/levelgen/carver/UnderwaterCaveWorldCarver
	a (Lnet/minecraft/server/IChunkAccess;IIIIIIII)Z hasWater
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;IIIIIIIILjava/util/concurrent/atomic/AtomicBoolean;)Z carveBlock
	a (Lnet/minecraft/server/WorldGenCarverAbstract;Lnet/minecraft/server/IChunkAccess;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;IIIIIIII)Z carveBlock
net/minecraft/server/ItemCooldown$Info net/minecraft/world/item/ItemCooldowns$CooldownInstance
	a this$0
	b startTime
	endTick endTime
	a (Lnet/minecraft/server/ItemCooldown$Info;)I access$000
	b (Lnet/minecraft/server/ItemCooldown$Info;)I access$100
net/minecraft/server/EntitySnowball net/minecraft/world/entity/projectile/Snowball
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	i ()Lnet/minecraft/server/Item; getDefaultItem
	n ()Lnet/minecraft/server/ParticleParam; getParticle
net/minecraft/server/ChunkEmpty net/minecraft/world/level/chunk/EmptyLevelChunk
	b BIOMES
	a (II)Z isYSpaceEmpty
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/List;Ljava/util/function/Predicate;)V getEntitiesOfClass
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Chunk$EnumTileEntityState;)Lnet/minecraft/server/TileEntity; getBlockEntity
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/server/Entity;)V addEntity
	a (Lnet/minecraft/server/Entity;I)V removeEntity
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/List;Ljava/util/function/Predicate;)V getEntities
	a (Lnet/minecraft/server/TileEntity;)V addBlockEntity
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/Entity;)V removeEntity
	b ([Lnet/minecraft/server/BiomeBase;)V lambda$static$0
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	e (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	e_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	g (Lnet/minecraft/server/BlockPosition;)I getLightBlock
	h (Lnet/minecraft/server/BlockPosition;)I getLightEmission
	s ()V markUnsaved
	t ()Z isEmpty
	u ()Lnet/minecraft/server/PlayerChunk$State; getFullStatus
cpk$1 net/minecraft/world/level/storage/loot/entries/DynamicLoot$1
net/minecraft/server/PlayerInventory net/minecraft/world/entity/player/Inventory
	extraSlots offhand
	f compartments
	h timesChanged
	itemInHandIndex selected
	L_ ()V clearContent
	M_ ()I getContainerSize
	O ()Lnet/minecraft/server/IChatBaseComponent; getName
	a (D)V swapPaint
	a (F)V hurtArmor
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/EntityHuman;)V lambda$hurtArmor$1
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Ljava/util/function/Predicate;I)I clearInventory
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/server/ItemStack;)V setPickedItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z hasRemainingSpaceForItem
	a (Lnet/minecraft/server/NBTTagList;)Lnet/minecraft/server/NBTTagList; save
	a (Lnet/minecraft/server/PlayerInventory;)V replaceWith
	a (Lnet/minecraft/server/Tag;)Z contains
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;)V placeItemBackInInventory
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/server/IBlockData;)Z canDestroy
	b (Lnet/minecraft/server/ItemStack;)I findSlotMatchingItem
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isSameItem
	b (Lnet/minecraft/server/NBTTagList;)V load
	c ()Z isEmpty
	c (I)V pickSlot
	c (ILnet/minecraft/server/ItemStack;)Z add
	c (Lnet/minecraft/server/ItemStack;)I findSlotMatchingUnusedItem
	d (I)Z isHotbarSlot
	d (ILnet/minecraft/server/ItemStack;)I addResource
	dropContents ()V dropAll
	e ()V setChanged
	e (I)Lnet/minecraft/server/ItemStack; getArmor
	f (Lnet/minecraft/server/ItemStack;)V removeItem
	firstPartial (Lnet/minecraft/server/ItemStack;)I getSlotWithRemainingSpace
	getFirstEmptySlotIndex ()I getFreeSlot
	getHotbarSize ()I getSelectionSize
	getItemInHand ()Lnet/minecraft/server/ItemStack; getSelected
	h (Lnet/minecraft/server/ItemStack;)Z contains
	i ()I getSuitableHotbarSlot
	i (Lnet/minecraft/server/ItemStack;)I addResource
	j ()V tick
	j (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; lambda$add$0
	l ()I getTimesChanged
	pickup (Lnet/minecraft/server/ItemStack;)Z add
net/minecraft/server/WorldGenDecoratorChanceConfiguration net/minecraft/world/level/levelgen/placement/DecoratorChance
	a chance
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorChanceConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
fx$18$1 net/minecraft/core/dispenser/DispenseItemBehavior$7$1
	b this$0
	a ()F getUncertainty
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityPotion;)V lambda$getProjectile$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
	b ()F getPower
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSimpleT net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleTopRoom
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/EntityFishingHook net/minecraft/world/entity/fishing/FishingHook
	ar nibble
	as timeUntilLured
	at timeUntilHooked
	au fishAngle
	av currentState
	aw luck
	ax lureSpeed
	c DATA_HOOKED_ENTITY
	e life
	g flightTime
	hooked hookedIn
	isInGround inGround
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	Y ()V remove
	a (B)V handleEntityEvent
	a (D)Z shouldRenderAtSqrDistance
	a (DDDFFIZ)V lerpTo
	a (Lnet/minecraft/server/BlockPosition;)V catchingFish
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;)Z canBeHooked
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	ap ()Z makeStepSound
	b (Lnet/minecraft/server/Entity;)Z lambda$checkCollision$0
	b (Lnet/minecraft/server/ItemStack;)I retrieve
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bu ()Z canChangeDimensions
	h ()V tick
	i ()Lnet/minecraft/server/EntityHuman; getOwner
	k ()Z shouldStopFishing
	l ()V updateRotation
	m ()V checkCollision
	n ()V setHookedEntity
	reel ()V bringInHookedEntity
	u_ ()V defineSynchedData
net/minecraft/server/BehaviorLookWalk net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget
	a speed
	b closeEnoughDistance
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/PacketPlayOutUnloadChunk net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket
	a x
	b z
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getZ
net/minecraft/server/PacketPlayInDifficultyLock net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket
	a locked
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Z isLocked
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
dbd$1 net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$1
net/minecraft/server/RecipeFireworksFade net/minecraft/world/item/crafting/FireworkStarFadeRecipe
	a STAR_INGREDIENT
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
net/minecraft/server/BehaviorOutsideCelebrate net/minecraft/world/entity/ai/behavior/GoOutsideToCelebrate
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
net/minecraft/server/CommandTime net/minecraft/server/commands/TimeCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I setTime
	a (Lnet/minecraft/server/WorldServer;)I getDayTime
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	b (Lnet/minecraft/server/CommandListenerWrapper;I)I addTime
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	c (Lnet/minecraft/server/CommandListenerWrapper;I)I queryTime
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/BehaviorHide net/minecraft/world/entity/ai/behavior/SetHiddenState
	a closeEnoughDist
	b stayHiddenTicks
	c ticksHidden
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
uf$c net/minecraft/server/commands/data/DataCommands$DataProvider
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandDataAccessor; access
net/minecraft/server/BiomeMegaSpruceTaiga net/minecraft/world/level/biome/GiantSpruceTaigaBiome
net/minecraft/server/CriterionTriggerLocation net/minecraft/advancements/critereon/LocationTrigger
	a id
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/CriterionTriggerLocation;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lnet/minecraft/server/EntityPlayer;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbh$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
dng$a net/minecraft/client/renderer/LevelRenderer$RenderChunkInfo
	a this$0
	b chunk
	c sourceDirection
	d directions
	e step
	a (BLnet/minecraft/server/EnumDirection;)V setDirections
	a (Ldng$a;)Ldpy; access$000
	a (Lnet/minecraft/server/EnumDirection;)Z hasDirection
	b (Ldng$a;)Lnet/minecraft/server/EnumDirection; access$200
	c (Ldng$a;)I access$300
	d (Ldng$a;)B access$400
cku$a net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap
	a ()Lcku$a; copy
	b ()Lnet/minecraft/server/LightEngineStorageArray; copy
net/minecraft/server/BlockBarrel net/minecraft/world/level/block/BarrelBlock
	a FACING
	b OPEN
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/DataConverterEntityRename net/minecraft/util/datafix/fixes/EntityTheRenameningFix
	a RENAMED_IDS
	b RENAMED_BLOCKS
	c RENAMED_ITEMS
	a (Ljava/lang/String;)Ljava/lang/String; rename
uf$a net/minecraft/server/commands/data/DataCommands$DataManipulator
uf$b net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator
net/minecraft/server/WorldGenFeaturePillagerOutpost net/minecraft/world/level/levelgen/feature/PillagerOutpostFeature
	a OUTPOST_ENEMIES
	a ()Lceu$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;II)Z isFeatureChunk
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	d ()I getRandomSalt
	e ()Ljava/util/List; getSpecialEnemies
dyx$a net/minecraft/client/resources/model/SimpleBakedModel$Builder
	a unculledFaces
	b culledFaces
	c overrides
	d hasAmbientOcclusion
	e particleIcon
	f isGui3d
	g transforms
	a ()Ldyx$a; item
	a (Ldnz;)Ldyx$a; addUnculledFace
	a (Ldxb;)Ldyx$a; particle
	a (Lnet/minecraft/server/EnumDirection;Ldnz;)Ldyx$a; addCulledFace
	b ()Ldyp; build
net/minecraft/server/WhiteListEntry net/minecraft/server/players/UserWhiteListEntry
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
net/minecraft/server/RecipeBookClone net/minecraft/world/item/crafting/BookCloningRecipe
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	b (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/NonNullList; getRemainingItems
	b (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/NonNullList; getRemainingItems
net/minecraft/server/LootItemConditionMatchTool net/minecraft/world/level/storage/loot/predicates/MatchTool
	a predicate
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lbc$a;)Lcrk$a; toolMatches
	a (Lnet/minecraft/server/LootItemConditionMatchTool;)Lnet/minecraft/server/CriterionConditionItem; access$000
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b (Lbc$a;)Lnet/minecraft/server/LootItemCondition; lambda$toolMatches$0
net/minecraft/server/DefinedStructureRuleTestType net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType
	b ALWAYS_TRUE_TEST
	c BLOCK_TEST
	d BLOCKSTATE_TEST
	e TAG_TEST
	f RANDOM_BLOCK_TEST
	g RANDOM_BLOCKSTATE_TEST
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/DefinedStructureRuleTest; lambda$static$0
	a (Ljava/lang/String;Lnet/minecraft/server/DefinedStructureRuleTestType;)Lnet/minecraft/server/DefinedStructureRuleTestType; register
dlr$1 net/minecraft/client/particle/ParticleRenderType$1
	a (Lcuw;Ldxc;)V begin
	a (Lcuz;)V end
net/minecraft/server/BlockHopper net/minecraft/world/level/block/HopperBlock
	A WEST_INTERACTION_SHAPE
	c TOP
	d FUNNEL
	e CONVEX_BASE
	f BASE
	g DOWN_SHAPE
	h EAST_SHAPE
	i NORTH_SHAPE
	j SOUTH_SHAPE
	k WEST_SHAPE
	w DOWN_INTERACTION_SHAPE
	x EAST_INTERACTION_SHAPE
	y NORTH_INTERACTION_SHAPE
	z SOUTH_INTERACTION_SHAPE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V checkPoweredState
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	i (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
net/minecraft/server/WorldGenDecoratorNoiseHeightDouble net/minecraft/world/level/levelgen/placement/NoiseHeightmapDoubleDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorNoiseConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/EntitySlime$PathfinderGoalSlimeRandomJump net/minecraft/world/entity/monster/Slime$SlimeFloatGoal
	a slime
	a ()Z canUse
	e ()V tick
net/minecraft/server/BlockBanner net/minecraft/world/level/block/BannerBlock
	b BY_COLOR
	c SHAPE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/Block; byColor
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
dlr$5 net/minecraft/client/particle/ParticleRenderType$5
	a (Lcuw;Ldxc;)V begin
	a (Lcuz;)V end
dlr$4 net/minecraft/client/particle/ParticleRenderType$4
	a (Lcuw;Ldxc;)V begin
	a (Lcuz;)V end
dlr$3 net/minecraft/client/particle/ParticleRenderType$3
	a (Lcuw;Ldxc;)V begin
	a (Lcuz;)V end
dlr$2 net/minecraft/client/particle/ParticleRenderType$2
	a (Lcuw;Ldxc;)V begin
	a (Lcuz;)V end
dbd$b net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Glyph
	a width
	b height
	c sourceX
	d sourceY
	e source
	a (II)V upload
	b ()F getBoldOffset
	c ()F getShadowOffset
	d ()I getPixelWidth
	e ()I getPixelHeight
	f ()Z isColored
	g ()F getOversample
dmd$a net/minecraft/client/particle/SuspendedTownParticle$ComposterFillProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dbd$a net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Builder
	a metadata
	b texturePattern
	a (Lcom/google/gson/JsonObject;)Ldbb; fromJson
	a (Lnet/minecraft/server/IResourceManager;)Lctw; create
dar$1 net/minecraft/client/gui/font/FontManager$1
	a this$0
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/lang/String;)Z lambda$prepare$0
	a (Ljava/util/Map;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/util/Map;Lnet/minecraft/server/MinecraftKey;)V lambda$apply$3
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/util/Map; prepare
	a (Lnet/minecraft/server/MinecraftKey;)Lcyu; lambda$null$2
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
	b (Lnet/minecraft/server/MinecraftKey;)Ljava/util/List; lambda$prepare$1
net/minecraft/server/EntityEnderSignal net/minecraft/world/entity/projectile/EyeOfEnder
	b DATA_ITEM_STACK
	despawnTimer life
	shouldDropItem surviveAfterDeath
	targetX tx
	targetY ty
	targetZ tz
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/BlockPosition;)V signalTo
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aE ()I getLightColor
	aF ()F getBrightness
	b (Lnet/minecraft/server/ItemStack;)V setItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bs ()Z isAttackable
	c (Lnet/minecraft/server/ItemStack;)V lambda$setItem$0
	f ()Lnet/minecraft/server/ItemStack; getItem
	h ()V tick
	h (DDD)V lerpMotion
	i ()Lnet/minecraft/server/ItemStack; getItemRaw
	u_ ()V defineSynchedData
dmd$b net/minecraft/client/particle/SuspendedTownParticle$DolphinSpeedProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dar$2 net/minecraft/client/gui/font/FontManager$2
	a this$0
	a (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; wait
net/minecraft/server/ArgumentRegistry net/minecraft/commands/synchronization/ArgumentTypes
	a LOGGER
	b BY_CLASS
	c BY_NAME
	a ()V bootStrap
	a (Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V serializeToJson
	a (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject; serializeNodeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lek$a; get
	a (Ljava/lang/String;Ljava/lang/Class;Lnet/minecraft/server/ArgumentSerializer;)V register
	a (Lnet/minecraft/server/MinecraftKey;)Lek$a; get
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserialize
	a (Lnet/minecraft/server/PacketDataSerializer;Lcom/mojang/brigadier/arguments/ArgumentType;)V serialize
dmd$c net/minecraft/client/particle/SuspendedTownParticle$HappyVillagerProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dmd$d net/minecraft/client/particle/SuspendedTownParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dlr$6 net/minecraft/client/particle/ParticleRenderType$6
	a (Lcuw;Ldxc;)V begin
	a (Lcuz;)V end
net/minecraft/server/DataConverterVillagerTrade net/minecraft/util/datafix/fixes/VillagerTradeFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$fix$3
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateItemStack
	a (Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$updateItemStack$5
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$4
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$fix$0
net/minecraft/server/BlockNote net/minecraft/world/level/block/NoteBlock
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V attack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	play (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V playNote
net/minecraft/server/AdvancementProgress net/minecraft/advancements/AdvancementProgress
	a criteria
	b requirements
	a (Ljava/lang/String;)Z grantProgress
	a (Ljava/util/Map;[[Ljava/lang/String;)V update
	a (Ljava/util/Set;Ljava/util/Map$Entry;)Z lambda$update$0
	a (Lnet/minecraft/server/AdvancementProgress;)I compareTo
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b ()Z hasProgress
	b (Ljava/lang/String;)Z revokeProgress
	b (Lnet/minecraft/server/AdvancementProgress;)Ljava/util/Map; access$000
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/AdvancementProgress; fromNetwork
	c ()F getPercent
	d ()Ljava/lang/String; getProgressText
	g ()Ljava/util/Date; getFirstProgressDate
	getAwardedCriteria ()Ljava/lang/Iterable; getCompletedCriteria
	getCriterionProgress (Ljava/lang/String;)Lnet/minecraft/server/CriterionProgress; getCriterion
	h ()I countCompletedRequirements
net/minecraft/server/WorldGenMushrooms net/minecraft/world/level/levelgen/feature/BushFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration;)Z place
net/minecraft/server/Packet net/minecraft/network/protocol/Packet
	a ()Z isSkippable
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/WorldGenFeatureHellFlowingLavaConfiguration net/minecraft/world/level/levelgen/feature/HellSpringConfiguration
	a insideRock
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureHellFlowingLavaConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
dgk$1 net/minecraft/client/map/Map$1
	a this$0
cvd$a com/mojang/blaze3d/vertex/VertexFormatElement$Type
	a FLOAT
	b UBYTE
	c BYTE
	d USHORT
	e SHORT
	f UINT
	g INT
	h size
	i name
	j glType
	k $VALUES
	a ()I getSize
	b ()Ljava/lang/String; getName
	c ()I getGlType
cvd$b com/mojang/blaze3d/vertex/VertexFormatElement$Usage
	a POSITION
	b NORMAL
	c COLOR
	d UV
	e MATRIX
	f BLEND_WEIGHT
	g PADDING
	h name
	i $VALUES
	a ()Ljava/lang/String; getName
dgk$3 net/minecraft/client/map/Map$3
	a this$0
dgk$2 net/minecraft/client/map/Map$2
	a this$0
net/minecraft/server/NibbleArrayFlat net/minecraft/world/level/lighting/FlatDataLayer
	a ()[B getData
	b (III)I getIndex
dgk$4 net/minecraft/client/map/Map$4
	a this$0
	A ()Ljava/util/List; players
	D ()Lnet/minecraft/server/Scoreboard; getScoreboard
	E ()Lnet/minecraft/server/IChunkProvider; getChunkSource
	F ()Lnet/minecraft/server/TickList; getLiquidTicks
	G ()Lnet/minecraft/server/TickList; getBlockTicks
	a (I)Lnet/minecraft/server/Entity; getEntity
	a (ILnet/minecraft/server/BlockPosition;I)V destroyBlockProgress
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldMap; getMapData
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;I)V sendBlockUpdated
	a (Lnet/minecraft/server/EntityHuman;DDDLnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EntityHuman;ILnet/minecraft/server/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/WorldMap;)V setMapData
	b ()Ldgj; getChunkSource
	b (II)Z hasChunk
	s ()Lnet/minecraft/server/CraftingManager; getRecipeManager
	t ()Lnet/minecraft/server/TagRegistry; getTagManager
	v ()V checkSession
	y ()I getFreeMapId
net/minecraft/server/SlotShulkerBox net/minecraft/world/inventory/ShulkerBoxSlot
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
net/minecraft/server/ServerGUI net/minecraft/server/gui/MinecraftServerGui
	a MONOSPACED
	b LOGGER
	c server
	d logAppenderThread
	e finalizers
	f isClosing
	a ()V start
	a (Ljava/lang/Runnable;)V addFinalizer
	a (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;)V lambda$buildChatPanel$1
	a (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V print
	a (Ljavax/swing/JTextField;Ljava/awt/event/ActionEvent;)V lambda$buildChatPanel$0
	a (Lnet/minecraft/server/DedicatedServer;)Lnet/minecraft/server/ServerGUI; showFrameFor
	a (Lnet/minecraft/server/ServerGUI;)Ljava/util/concurrent/atomic/AtomicBoolean; access$000
	b ()V close
	b (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V lambda$print$2
	b (Lnet/minecraft/server/ServerGUI;)V access$100
	c ()Ljavax/swing/JComponent; buildInfoPanel
	d ()Ljavax/swing/JComponent; buildPlayerPanel
	e ()Ljavax/swing/JComponent; buildChatPanel
	f ()V runFinalizers
net/minecraft/server/Convertable net/minecraft/world/level/storage/LevelStorageSource
	a LOGGER
	b FORMATTER
	c baseDir
	d backupDir
	e fixerUpper
	a ()Ljava/lang/String; getName
	a (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/server/WorldData; getLevelData
	a (Ljava/lang/String;Ljava/lang/String;)V renameLevel
	a (Ljava/lang/String;Lnet/minecraft/server/MinecraftServer;)Lnet/minecraft/server/WorldNBTStorage; selectLevel
	a (Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)Lnet/minecraft/server/WorldData; getDataTagFor
	a (Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;Lnet/minecraft/server/MinecraftServer;)Lnet/minecraft/server/WorldNBTStorage; selectLevel
	a ([Ljava/io/File;)Z deleteRecursive
	b ()Ljava/util/List; getLevelList
	b (Ljava/lang/String;)Lnet/minecraft/server/WorldData; getDataTagFor
	b (Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; getFile
	c ()Ljava/nio/file/Path; getBaseDir
	c (Ljava/lang/String;)Z isNewLevelIdAcceptable
	convert (Ljava/lang/String;Lnet/minecraft/server/IProgressUpdate;)Z convertLevel
	d ()Ljava/nio/file/Path; getBackupPath
	d (Ljava/lang/String;)Z deleteLevel
	e ()I getStorageVersion
	e (Ljava/lang/String;)Z levelExists
	f (Ljava/lang/String;)J makeWorldBackup
	g (Ljava/lang/String;)Ljava/nio/file/Path; getLevelPath
	isConvertable (Ljava/lang/String;)Z requiresConversion
net/minecraft/server/ArgumentMathOperation net/minecraft/commands/arguments/OperationArgument
	a EXAMPLES
	b ERROR_INVALID_OPERATION
	c ERROR_DIVIDE_BY_ZERO
	a ()Lnet/minecraft/server/ArgumentMathOperation; operation
	a (II)I lambda$getSimpleOperation$6
	a (Lcom/mojang/brigadier/StringReader;)Lcv$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcv$a; getOperation
	a (Ljava/lang/String;)Lcv$a; getOperation
	a (Lnet/minecraft/server/ScoreboardScore;Lnet/minecraft/server/ScoreboardScore;)V lambda$getOperation$0
	b (II)I lambda$getSimpleOperation$5
	b (Ljava/lang/String;)Lcv$b; getSimpleOperation
	c (II)I lambda$getSimpleOperation$4
	d (II)I lambda$getSimpleOperation$3
	e (II)I lambda$getSimpleOperation$2
	f (II)I lambda$getSimpleOperation$1
net/minecraft/server/DataBits net/minecraft/util/BitStorage
	a data
	b bits
	c mask
	d size
	a ()[J getRaw
	a (I)I get
	a (II)I getAndSet
	a (Ljava/util/function/IntConsumer;)V getAll
	b ()I getSize
	b (II)V set
	c ()I getBits
net/minecraft/server/SoundEffectType net/minecraft/world/level/block/SoundType
	A placeSound
	B hitSound
	C fallSound
	a WOOD
	b GRAVEL
	c GRASS
	d STONE
	e METAL
	f GLASS
	g WOOL
	h SAND
	i SNOW
	j LADDER
	k ANVIL
	l SLIME_BLOCK
	m WET_GRASS
	n CORAL_BLOCK
	o BAMBOO
	p BAMBOO_SAPLING
	q SCAFFOLDING
	r SWEET_BERRY_BUSH
	s CROP
	t HARD_CROP
	u NETHER_WART
	v LANTERN
	w volume
	x pitch
	y breakSound
	z stepSound
	a ()F getVolume
	b ()F getPitch
	c ()Lnet/minecraft/server/SoundEffect; getBreakSound
	d ()Lnet/minecraft/server/SoundEffect; getStepSound
	e ()Lnet/minecraft/server/SoundEffect; getPlaceSound
	f ()Lnet/minecraft/server/SoundEffect; getHitSound
	g ()Lnet/minecraft/server/SoundEffect; getFallSound
dmd$1 net/minecraft/client/particle/SuspendedTownParticle$1
cpk$a net/minecraft/world/level/storage/loot/entries/DynamicLoot$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorDynamic; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorDynamic;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
dmu$a net/minecraft/client/renderer/BiomeColors$ColorResolver
coy$1 net/minecraft/world/level/storage/loot/LootContext$1
net/minecraft/server/DataConverterCustomNameItem net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
net/minecraft/server/BiomeTheEndFloatingIslands net/minecraft/world/level/biome/SmallEndIslandsBiome
	a (F)I getSkyColor
net/minecraft/server/PathDestination net/minecraft/world/level/pathfinder/Target
	m bestHeuristic
	n bestNode
	o reached
	a (FLnet/minecraft/server/PathPoint;)V updateBest
	c (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/PathDestination; createFromStream
	d ()Lnet/minecraft/server/PathPoint; getBestNode
	e ()V setReached
	f ()Z isReached
net/minecraft/server/ArgumentSerializers net/minecraft/commands/synchronization/brigadier/BrigadierArgumentSerializers
	a ()V bootstrap
	a (B)Z numberHasMin
	a (ZZ)B createNumberFlags
	b (B)Z numberHasMax
doj$a net/minecraft/client/renderer/block/model/ItemOverride$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldoj; deserialize
	a (Lcom/google/gson/JsonObject;)Ljava/util/Map; getPredicates
net/minecraft/server/DefinedStructureProcessorRule net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor
	a rules
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/DefinedStructureProcessorPredicates;)Ljava/lang/Object; lambda$getDynamic$0
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
agd$1 net/minecraft/util/datafix/schemas/V99$1
net/minecraft/server/INamableTileEntity net/minecraft/world/Nameable
	getDisplayName ()Lnet/minecraft/server/IChatBaseComponent; getName
	getScoreboardDisplayName ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/GeneratorSettingsNether net/minecraft/world/level/levelgen/NetherGeneratorSettings
	t ()I getBedrockRoofPosition
	u ()I getBedrockFloorPosition
net/minecraft/server/BlockPortal$Shape net/minecraft/world/level/block/NetherPortalBlock$PortalShape
	a level
	b axis
	c rightDir
	d leftDir
	e numPortalBlocks
	position bottomLeft
	a ()I getHeight
	a (Lnet/minecraft/server/BlockPortal$Shape;)I access$000
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDistanceUntilEdge
	a (Lnet/minecraft/server/IBlockData;)Z isEmpty
	b ()I getWidth
	b (Lnet/minecraft/server/BlockPortal$Shape;)Lnet/minecraft/server/EnumDirection; access$100
	c ()I calculatePortalHeight
	c (Lnet/minecraft/server/BlockPortal$Shape;)Lnet/minecraft/server/BlockPosition; access$200
	createPortal ()V createPortalBlocks
	d ()Z isValid
	f ()Z isComplete
	g ()Z hasAllPortalBlocks
net/minecraft/server/ArgumentParserPosition net/minecraft/commands/arguments/coordinates/WorldCoordinate
	a ERROR_EXPECTED_DOUBLE
	b ERROR_EXPECTED_INT
	c relative
	d value
	a ()Z isRelative
	a (D)D get
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ArgumentParserPosition; parseInt
	a (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/server/ArgumentParserPosition; parseDouble
	b (Lcom/mojang/brigadier/StringReader;)Z isRelative
aak$1 net/minecraft/util/datafix/DataFixers$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
aak$2 net/minecraft/util/datafix/DataFixers$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/TileEntityChestTrapped net/minecraft/world/level/block/entity/TrappedChestBlockEntity
	h ()V signalOpenCount
net/minecraft/server/EnumInteractionResult net/minecraft/world/InteractionResult
	d $VALUES
net/minecraft/server/WorldLoadListenerLogger net/minecraft/server/level/progress/LoggerChunkProgressListener
	a LOGGER
	b maxCount
	c count
	d startTime
	e nextTickTime
	a ()V start
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkStatus;)V onStatusChange
	b ()V stop
	c ()I getProgress
net/minecraft/server/TileEntityBeacon$BeaconColorTracker net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection
	a color
	b height
	a ()V increaseHeight
	a (Lnet/minecraft/server/TileEntityBeacon$BeaconColorTracker;)[F access$500
	b ()[F getColor
	c ()I getHeight
net/minecraft/server/EnumChatVisibility net/minecraft/world/entity/player/ChatVisiblity
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Lnet/minecraft/server/EnumChatVisibility; byId
	b ()Ljava/lang/String; getKey
	b (I)[Lnet/minecraft/server/EnumChatVisibility; lambda$static$0
net/minecraft/server/BiomeLukewarmDeepOcean net/minecraft/world/level/biome/DeepLukeWarmOceanBiome
net/minecraft/server/DifficultyDamageScaler net/minecraft/world/DifficultyInstance
	a base
	b effectiveDifficulty
	a ()Lnet/minecraft/server/EnumDifficulty; getDifficulty
	a (F)Z isHarderThan
	a (Lnet/minecraft/server/EnumDifficulty;JJF)F calculateDifficulty
	b ()F getEffectiveDifficulty
	c ()Z isHard
	d ()F getSpecialMultiplier
net/minecraft/server/BlockMinecartDetector net/minecraft/world/level/block/DetectorRailBlock
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/AxisAlignedBB; getSearchBB
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List; getInteractingMinecartOfType
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V checkPressed
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V updatePowerToConnected
	e ()Lnet/minecraft/server/IBlockState; getShapeProperty
	h (Lnet/minecraft/server/IBlockData;)Z isSignalSource
crq$a net/minecraft/world/level/storage/loot/predicates/MatchTool$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionMatchTool; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionMatchTool;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
net/minecraft/server/DataConverterSkeleton net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix
	a (Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
cwx$2 com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$2
	a this$0
cwx$1 com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$1
	a this$0
net/minecraft/server/PacketPlayOutViewCentre net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket
	a x
	b z
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getZ
net/minecraft/server/PacketLoginInListener net/minecraft/network/protocol/login/ServerLoginPacketListener
	a (Lnet/minecraft/server/PacketLoginInCustomPayload;)V handleCustomQueryPacket
	a (Lnet/minecraft/server/PacketLoginInEncryptionBegin;)V handleKey
	a (Lnet/minecraft/server/PacketLoginInStart;)V handleHello
net/minecraft/server/CriterionTriggerPlacedBlock net/minecraft/advancements/critereon/PlacedBlockTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V trigger
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$createInstance$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbm$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/AdvancementDataPlayer net/minecraft/server/PlayerAdvancements
	a LOGGER
	b GSON
	c TYPE_TOKEN
	d server
	data advancements
	e file
	g visible
	h visibilityChanged
	i progressChanged
	k lastSelectedTab
	l isFirstPacket
	a ()V stopListening
	a (Lnet/minecraft/server/Advancement;)V setSelectedTab
	a (Lnet/minecraft/server/Advancement;Lnet/minecraft/server/AdvancementProgress;)V startProgress
	a (Lnet/minecraft/server/EntityPlayer;)V setPlayer
	b ()V reload
	b (Lnet/minecraft/server/EntityPlayer;)V flushDirty
	c ()V save
	c (Lnet/minecraft/server/Advancement;)V registerListeners
	d ()V registerListeners
	d (Lnet/minecraft/server/Advancement;)V unregisterListeners
	e ()V ensureAllVisible
	e (Lnet/minecraft/server/Advancement;)V ensureVisibility
	f ()V checkForAutomaticTriggers
	f (Lnet/minecraft/server/Advancement;)Z shouldBeVisible
	g ()V load
	g (Lnet/minecraft/server/Advancement;)Z hasCompletedChildrenOrSelf
	getProgress (Lnet/minecraft/server/Advancement;)Lnet/minecraft/server/AdvancementProgress; getOrStartProgress
	grantCriteria (Lnet/minecraft/server/Advancement;Ljava/lang/String;)Z award
	revokeCritera (Lnet/minecraft/server/Advancement;Ljava/lang/String;)Z revoke
net/minecraft/server/ItemWorldMapBase net/minecraft/world/item/ComplexItem
	O_ ()Z isComplex
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Packet; getUpdatePacket
net/minecraft/server/TileEntityMobSpawner net/minecraft/world/level/block/entity/SpawnerBlockEntity
	a spawner
	T_ ()V tick
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a_ (II)Z triggerEvent
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	p ()Z onlyOpCanSetNbt
net/minecraft/server/TileEntityBlastFurnace net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/ItemStack;)I getBurnDuration
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
net/minecraft/server/BlockPlant net/minecraft/world/level/block/BushBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
net/minecraft/server/WorldGenFeatureFlowingConfiguration net/minecraft/world/level/levelgen/feature/SpringConfiguration
	a state
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureFlowingConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/PacketPlayInPickItem net/minecraft/network/protocol/game/ServerboundPickItemPacket
	a slot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getSlot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/INamable net/minecraft/util/StringRepresentable
	getName ()Ljava/lang/String; getSerializedName
net/minecraft/server/EnumBlockRotation net/minecraft/world/level/block/Rotation
	e $VALUES
	a (II)I rotate
	a (Ljava/util/Random;)Lnet/minecraft/server/EnumBlockRotation; getRandom
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/EnumBlockRotation; getRotated
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; rotate
	b (Ljava/util/Random;)Ljava/util/List; getShuffled
cqn$a net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetCount; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetCount;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/WorldGenDecoratorNetherChance net/minecraft/world/level/levelgen/placement/nether/ChanceRangeDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureChanceDecoratorRangeConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/ChunkProviderGenerate net/minecraft/world/level/levelgen/OverworldLevelSource
	h BIOME_WEIGHTS
	i depthNoise
	j isAmplified
	k phantomSpawner
	l patrolSpawner
	m catSpawner
	n villageSiege
	a (DDI)D getYOffset
	a (II)[D getDepthAndScale
	a (Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/BlockPosition;)Ljava/util/List; getMobsAt
	a (Lnet/minecraft/server/WorldServer;ZZ)V tickCustomSpawners
	a ([DII)V fillNoiseColumn
	a ([F)V lambda$static$0
	b ()I getSpawnHeight
	b (Lnet/minecraft/server/RegionLimitedWorldAccess;)V spawnOriginalMobs
	c (II)D getRdepth
	f ()I getSeaLevel
au$a net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DamageSource;FFZ)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
net/minecraft/server/WorldGenSurfaceSwamp net/minecraft/world/level/levelgen/surfacebuilders/SwampSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
dng$1 net/minecraft/client/renderer/LevelRenderer$1
	a $SwitchMap$com$mojang$blaze3d$vertex$VertexFormatElement$Usage
au$b net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance
	a damage
	a (Lal$a;)Lau$b; entityHurtPlayer
	a (Lnet/minecraft/server/CriterionConditionDamage;)Lau$b; entityHurtPlayer
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DamageSource;FFZ)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lau$b; entityHurtPlayer
net/minecraft/server/Chunk net/minecraft/world/level/chunk/LevelChunk
	a EMPTY_SECTION
	b LOGGER
	d biomes
	e pendingBlockEntities
	entitySlices entitySections
	heightMap heightmaps
	i upgradeData
	l structureStarts
	lastSaved lastSaveTime
	loc chunkPos
	m structuresRefences
	n postProcessing
	o blockTicks
	p liquidTicks
	q lastSaveHadEntities
	s unsaved
	t inhabitedTime
	tileEntities blockEntities
	u fullStatus
	v postLoad
	world level
	x isLightCorrect
	A ()V postProcessGeneration
	B ()V unpackTicks
	a (III)Lnet/minecraft/server/Fluid; getFluidState
	a (ILnet/minecraft/server/BlockPosition;)Z lambda$replaceWithPacketData$5
	a (J)V setLastSaveTime
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/List;Ljava/util/function/Predicate;)V getEntitiesOfClass
	a (Ljava/lang/String;)Lnet/minecraft/server/StructureStart; getStartForFeature
	a (Ljava/lang/String;J)V addReferenceForFeature
	a (Ljava/lang/String;Lnet/minecraft/server/StructureStart;)V setStartForFeature
	a (Ljava/util/Map;)V setAllStarts
	a (Ljava/util/function/Supplier;)V setFullStatus
	a (Lnet/minecraft/server/BlockPosition;I)I getRawBrightness
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Chunk$EnumTileEntityState;)Lnet/minecraft/server/TileEntity; getBlockEntity
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/TileEntity; promotePendingBlockEntity
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/server/Entity;)V addEntity
	a (Lnet/minecraft/server/Entity;I)V removeEntity
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/List;Ljava/util/function/Predicate;)V getEntities
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/List;Ljava/util/function/Predicate;)V getEntities
	a (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap; getHeightmap
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/HeightMap$Type;[J)V setHeightmap
	a (Lnet/minecraft/server/LightEngine;)V setLightEngine
	a (Lnet/minecraft/server/NBTTagCompound;)V setBlockEntityNbt
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/NBTTagCompound;IZ)V replaceWithPacketData
	a (Lnet/minecraft/server/TileEntity;)V addBlockEntity
	a (Lnet/minecraft/server/WorldServer;)V packTicks
	a (Z)V setUnsaved
	addEntities ()V runPostLoad
	b (III)Ljava/lang/String; lambda$getFluidState$3
	b (J)V setInhabitedTime
	b (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
	b (Ljava/util/Map;)V setAllReferences
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/Entity;)V removeEntity
	b (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap; getOrCreateHeightmapUnprimed
	b (Z)V setLightCorrect
	c ()Ljava/util/Set; getBlockEntitiesPos
	c (III)Ljava/lang/String; lambda$getBlockState$2
	c (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; lambda$addReferenceForFeature$8
	c (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Entity; lambda$new$0
	c (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/BlockPosition; getHeighestPosition
	d ()[Lnet/minecraft/server/ChunkSection; getSections
	d (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; lambda$getReferencesForFeature$7
	d (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	d (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap; lambda$getOrCreateHeightmapUnprimed$1
	d (Z)V setLastSaveHadEntities
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	e (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	e_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	f ()Ljava/util/Collection; getHeightmaps
	g ()Lnet/minecraft/server/ChunkCoordIntPair; getPos
	getEntitySlices ()[Lnet/minecraft/server/EntitySlice; getEntitySections
	getState ()Lnet/minecraft/server/PlayerChunk$State; getFullStatus
	getTileEntities ()Ljava/util/Map; getBlockEntities
	getWorld ()Lnet/minecraft/server/World; getLevel
	h ()Ljava/util/Map; getAllStarts
	i ()[Lnet/minecraft/server/BiomeBase; getBiomes
	i (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbt
	j ()Z isUnsaved
	j (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbtForSaving
	k ()Lnet/minecraft/server/ChunkStatus; getStatus
	k (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; createBlockEntity
	l ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
	l (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/FluidType; lambda$unpackTicks$10
	m ()Ljava/util/stream/Stream; getLights
	m (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Block; lambda$unpackTicks$9
	markDirty ()V markUnsaved
	n ()Lnet/minecraft/server/TickList; getBlockTicks
	n (Lnet/minecraft/server/BlockPosition;)Z lambda$getLights$6
	o ()Lnet/minecraft/server/TickList; getLiquidTicks
	o (Lnet/minecraft/server/BlockPosition;)Z lambda$replaceWithPacketData$4
	p ()Lnet/minecraft/server/ChunkConverter; getUpgradeData
	q ()J getInhabitedTime
	r ()Z isLightCorrect
	v ()Ljava/util/Map; getAllReferences
cwg$9 com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen$8
	a this$0
cqn$1 net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$1
cwx$b com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldSelectionList
	a this$0
	a (Lnet/minecraft/realms/RealmsLevelSummary;)V addEntry
cwg$3 com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen$2
	a this$0
cwg$4 com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen$3
	a this$0
net/minecraft/server/WorldGenFeatureShipwreck net/minecraft/world/level/levelgen/feature/ShipwreckFeature
	a ()Lceu$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;)I getSpacing
	b ()Ljava/lang/String; getFeatureName
	b (Lnet/minecraft/server/ChunkGenerator;)I getSeparation
	c ()I getLookupRange
	d ()I getRandomSalt
cwg$1 com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen$1
	a this$0
cwx$a com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldListEntry
	a levelSummary
	b this$0
	a (Lnet/minecraft/realms/RealmsLevelSummary;IIIILnet/minecraft/realms/Tezzelator;II)V renderItem
cwg$2 com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen$10
	a $SwitchMap$com$mojang$realmsclient$gui$RealmsWorldSlotButton$Action
cwg$7 com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen$6
	a this$0
bg$a net/minecraft/advancements/critereon/LocationPredicate$Builder
	a x
	b y
	c z
	d biome
	e feature
	f dimension
	a ()Lnet/minecraft/server/CriterionConditionLocation; build
	a (Lnet/minecraft/server/BiomeBase;)Lbg$a; setBiome
	a (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lbg$a; setX
	a (Lnet/minecraft/server/DimensionManager;)Lbg$a; setDimension
	a (Lnet/minecraft/server/StructureGenerator;)Lbg$a; setFeature
	b (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lbg$a; setY
	c (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lbg$a; setZ
cwg$8 com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen$7
	a this$0
cwg$5 com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen$4
	a this$0
cwg$6 com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen$5
	a this$0
net/minecraft/server/WorldGenBigTree net/minecraft/world/level/levelgen/feature/BigTreeFeature
	a LOG
	aS LEAVES
	a (I)F foliageShape
	a (II)F treeShape
	a (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;ILnet/minecraft/server/BlockPosition;Ljava/util/List;Lnet/minecraft/server/StructureBoundingBox;)V makeBranches
	a (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;)Z doPlace
	a (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/StructureBoundingBox;)V makeTrunk
	a (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/StructureBoundingBox;)I makeLimb
	a (Lnet/minecraft/server/BlockPosition;)I getSteps
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EnumDirection$EnumAxis; getLogAxis
	a (Lnet/minecraft/server/VirtualLevelWritable;ILnet/minecraft/server/BlockPosition;Ljava/util/List;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Set;)V makeFoliage
	a (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;FLnet/minecraft/server/StructureBoundingBox;Ljava/util/Set;)V crossSection
	a (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Set;)V foliageCluster
	b (II)Z trimBranches
	b (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/StructureBoundingBox;)I checkLocation
net/minecraft/server/PacketPlayOutSpawnEntityWeather net/minecraft/network/protocol/game/ClientboundAddGlobalEntityPacket
	a id
	b x
	c y
	d z
	e type
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()I getType
bnk$1 net/minecraft/world/level/block/ChestBlock$1
	a (Lnet/minecraft/server/TileEntityChest;)Lnet/minecraft/server/IInventory; acceptSingle
	a (Lnet/minecraft/server/TileEntityChest;Lnet/minecraft/server/TileEntityChest;)Lnet/minecraft/server/IInventory; acceptDouble
	b (Lnet/minecraft/server/TileEntityChest;)Ljava/lang/Object; acceptSingle
	b (Lnet/minecraft/server/TileEntityChest;Lnet/minecraft/server/TileEntityChest;)Ljava/lang/Object; acceptDouble
bnk$2 net/minecraft/world/level/block/ChestBlock$2
	a (Lnet/minecraft/server/TileEntityChest;)Lnet/minecraft/server/ITileInventory; acceptSingle
	a (Lnet/minecraft/server/TileEntityChest;Lnet/minecraft/server/TileEntityChest;)Lnet/minecraft/server/ITileInventory; acceptDouble
	b (Lnet/minecraft/server/TileEntityChest;)Ljava/lang/Object; acceptSingle
	b (Lnet/minecraft/server/TileEntityChest;Lnet/minecraft/server/TileEntityChest;)Ljava/lang/Object; acceptDouble
net/minecraft/server/DataConverterSwimStats net/minecraft/util/datafix/fixes/SwimStatsRenameFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
bnk$3 net/minecraft/world/level/block/ChestBlock$3
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/EntityGuardian$PathfinderGoalGuardianAttack net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal
	a guardian
	b attackTime
	c elder
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/BehaviorOutside net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot
	a speed
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/MemoryTarget; lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z hasNoBlocksAbove
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/Vec3D; getOutdoorPosition
net/minecraft/server/EntitySkeletonAbstract net/minecraft/world/entity/monster/AbstractSkeleton
	b bowGoal
	c meleeGoal
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aN ()V rideTick
	aO ()D getRidingHeight
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityArrow; getArrow
	cQ ()Lnet/minecraft/server/EnumMonsterType; getMobType
	cl ()V registerAttributes
	dV ()V reassessWeaponGoal
	k ()V aiStep
	l ()Lnet/minecraft/server/SoundEffect; getStepSound
	n ()V registerGoals
avy$1 net/minecraft/world/entity/npc/VillagerType$1
	i val$name
net/minecraft/server/PropertyManager net/minecraft/server/dedicated/Settings
	a LOGGER
	a ()Ljava/util/Properties; cloneProperties
	a (Ljava/lang/String;)Ljava/lang/String; getLegacyString
	a (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object; getLegacy
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I get
	a (Ljava/util/function/Function;)Ljava/util/function/Function; wrapNumberDeserializer
	a (Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Number; lambda$wrapNumberDeserializer$0
	a (Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/lang/String;)Ljava/lang/Object; lambda$get$2
	a (Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function; dispatchNumberOrString
	a (Ljava/util/function/IntFunction;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Object; lambda$dispatchNumberOrString$1
	b (Ljava/lang/String;)Ljava/lang/Boolean; getLegacyBoolean
	b (Ljava/lang/String;I)Lnet/minecraft/server/PropertyManager$EditableProperty; getMutable
	b (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/PropertyManager$EditableProperty; getMutable
	b (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/PropertyManager$EditableProperty; getMutable
	b (Ljava/lang/String;Z)Lnet/minecraft/server/PropertyManager$EditableProperty; getMutable
	c (Ljava/lang/String;)Ljava/lang/String; getStringRaw
	getBoolean (Ljava/lang/String;Z)Z get
	getInt (Ljava/lang/String;I)I get
	getLong (Ljava/lang/String;J)J get
	getString (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; get
	loadPropertiesFile (Ljava/nio/file/Path;)Ljava/util/Properties; loadFromFile
	savePropertiesFile (Ljava/nio/file/Path;)V store
net/minecraft/server/CriterionTriggerUsedEnderEye net/minecraft/advancements/critereon/UsedEnderEyeTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/BlockPosition;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbu$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/DataConverterSchemaV1125 net/minecraft/util/datafix/schemas/V1125
	a ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$2
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
dqo$a net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer$DebugGoal
	a pos
	b priority
	c name
	d isRunning
net/minecraft/server/LootEntry net/minecraft/world/level/storage/loot/entries/LootPoolEntry
	a (F)I getWeight
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
net/minecraft/server/EntityTippedArrow net/minecraft/world/entity/projectile/Arrow
	COLOR ID_EFFECT_COLOR
	hasColor fixedColor
	potionRegistry potion
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/EntityLiving;)V doPostHurtEffects
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (I)V makeParticle
	b (Lnet/minecraft/server/ItemStack;)V setEffectsFromItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/ItemStack;)I getCustomColor
	h ()V tick
	n ()Lnet/minecraft/server/ItemStack; getPickupItem
	setColor (I)V setFixedColor
	u_ ()V defineSynchedData
	z ()V updateColor
net/minecraft/server/ContainerShulkerBox net/minecraft/world/inventory/ShulkerBoxMenu
	c container
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
net/minecraft/server/BlockStainedGlassPane net/minecraft/world/level/block/StainedGlassPaneBlock
	a ()Lnet/minecraft/server/EnumColor; getColor
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
net/minecraft/server/GeneratorAccess net/minecraft/world/level/LevelAccessor
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/Set;)Ljava/util/stream/Stream; getEntityCollisions
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/VoxelShape;)Z isUnobstructed
	a (Lnet/minecraft/server/EntityHuman;ILnet/minecraft/server/BlockPosition;I)V levelEvent
	aa ()F getMoonBrightness
	ab ()I getMoonPhase
	b (II)Z hasChunk
	getBlockTickList ()Lnet/minecraft/server/TickList; getBlockTicks
	getChunkProvider ()Lnet/minecraft/server/IChunkProvider; getChunkSource
	getDamageScaler (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/DifficultyDamageScaler; getCurrentDifficultyAt
	getFluidTickList ()Lnet/minecraft/server/TickList; getLiquidTicks
	getMinecraftWorld ()Lnet/minecraft/server/World; getLevel
	getWorldData ()Lnet/minecraft/server/WorldData; getLevelData
	j (F)F getTimeOfDay
	o_ ()Lnet/minecraft/server/BlockPosition; getSharedSpawnPos
	p ()Lnet/minecraft/server/MinecraftServer; getServer
	triggerEffect (ILnet/minecraft/server/BlockPosition;I)V levelEvent
	update (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V blockUpdated
net/minecraft/server/ItemTrident net/minecraft/world/item/TridentItem
	a (Lnet/minecraft/server/EntityLiving;)V lambda$mineBlock$3
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityHuman;)V lambda$releaseUsing$1
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)Z canAttackBlock
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z mineBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	b (Lnet/minecraft/server/EntityLiving;)V lambda$hurtEnemy$2
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)F lambda$new$0
	c ()I getEnchantmentValue
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
	e_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	f_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
net/minecraft/server/WorldGenFeatureIceburg net/minecraft/world/level/levelgen/feature/IcebergFeature
	a (III)I getEllipseC
	a (IILnet/minecraft/server/BlockPosition;IID)D signedDistanceEllipse
	a (IILnet/minecraft/server/BlockPosition;ILjava/util/Random;)D signedDistanceCircle
	a (IILnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;ZDLnet/minecraft/server/BlockPosition;II)V carve
	a (Ljava/util/Random;III)I heightDependentRadiusRound
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;IILnet/minecraft/server/BlockPosition;ZIDI)V generateCutOut
	a (Lnet/minecraft/server/Block;)Z isIcebergBlock
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;IIZZLnet/minecraft/server/IBlockData;)V setIcebergBlock
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;IIIIIIZIDZLnet/minecraft/server/IBlockData;)V generateIcebergBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V removeFloatingSnowLayer
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;IIZI)V smooth
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureIceburgConfiguration;)Z place
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z belowIsAir
	b (III)I heightDependentRadiusEllipse
	b (Ljava/util/Random;III)I heightDependentRadiusSteep
net/minecraft/server/ArgumentParserSelector net/minecraft/commands/arguments/selector/EntitySelectorParser
	A predicate
	B order
	C currentEntity
	D playerName
	E startPosition
	F entityUUID
	G suggestions
	H hasNameEquals
	I hasNameNotEquals
	J isLimited
	K isSorted
	L hasGamemodeEquals
	M hasGamemodeNotEquals
	N hasTeamEquals
	O hasTeamNotEquals
	P type
	Q typeInverse
	R hasScores
	S hasAdvancements
	a ERROR_INVALID_NAME_OR_UUID
	b ERROR_UNKNOWN_SELECTOR_TYPE
	c ERROR_SELECTORS_NOT_ALLOWED
	checkPermissions usesSelectors
	d ERROR_MISSING_SELECTOR_TYPE
	e ERROR_EXPECTED_END_OF_OPTIONS
	f ERROR_EXPECTED_OPTION_VALUE
	g ORDER_ARBITRARY
	h ORDER_NEAREST
	i ORDER_FURTHEST
	j ORDER_RANDOM
	k SUGGEST_NOTHING
	l reader
	m allowSelectors
	n maxResults
	o includesEntities
	p worldLimited
	q distance
	r level
	s x
	t y
	u z
	v deltaX
	w deltaY
	x deltaZ
	y rotX
	z rotY
	A ()Z hasGamemodeNotEquals
	B ()Z hasTeamEquals
	C ()Z hasTeamNotEquals
	D ()V setTypeLimitedInversely
	E ()Z isTypeLimited
	F ()Z isTypeLimitedInversely
	G ()Z hasScores
	H ()Z hasAdvancements
	I ()V finalizePredicates
	a ()Lnet/minecraft/server/EntitySelector; getSelector
	a (D)V setX
	a (DDD)Lnet/minecraft/server/AxisAlignedBB; createAabb
	a (I)V setMaxResults
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V fillSelectorSuggestions
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Ljava/util/function/BiConsumer;)V setOrder
	a (Ljava/util/function/BiFunction;)V setSuggestions
	a (Ljava/util/function/Predicate;)V addPredicate
	a (Ljava/util/function/ToDoubleFunction;DDLnet/minecraft/server/Entity;)Z lambda$createRotationPredicate$15
	a (Lnet/minecraft/server/CriterionConditionRange;)V setRotX
	a (Lnet/minecraft/server/CriterionConditionRange;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate; createRotationPredicate
	a (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)V setDistance
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)V setLevel
	a (Lnet/minecraft/server/Entity;)Z lambda$finalizePredicates$14
	a (Lnet/minecraft/server/EntityTypes;)V limitToType
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; lambda$getSelector$11
	a (Lnet/minecraft/server/Vec3D;Ljava/util/List;)V lambda$static$7
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)I lambda$null$5
	a (Z)V setIncludesEntities
	b (D)V setY
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestNameOrSelector
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	b (Lnet/minecraft/server/CriterionConditionRange;)V setRotY
	b (Lnet/minecraft/server/Entity;)D lambda$finalizePredicates$13
	b (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; lambda$getSelector$10
	b (Lnet/minecraft/server/Vec3D;Ljava/util/List;)V lambda$static$6
	b (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)I lambda$null$3
	b (Z)V setCurrentEntity
	c ()V parseNameOrUUID
	c (D)V setZ
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestName
	c (Lnet/minecraft/server/Entity;)D lambda$finalizePredicates$12
	c (Lnet/minecraft/server/Vec3D;Ljava/util/List;)V lambda$static$4
	c (Z)V setHasNameEquals
	d ()V parseOptions
	d (D)V setDeltaX
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestSelector
	d (Lnet/minecraft/server/Entity;)Z lambda$new$9
	d (Lnet/minecraft/server/Vec3D;Ljava/util/List;)V lambda$static$2
	d (Z)V setHasNameNotEquals
	e ()Z shouldInvertValue
	e (D)V setDeltaY
	e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOpenOptions
	e (Z)V setLimited
	f ()Z isTag
	f (D)V setDeltaZ
	f (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsKeyOrClose
	f (Z)V setSorted
	g ()Lcom/mojang/brigadier/StringReader; getReader
	g (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsKey
	g (Z)V setHasGamemodeEquals
	h ()V setWorldLimited
	h (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsNextOrClose
	h (Z)V setHasGamemodeNotEquals
	i ()Lnet/minecraft/server/CriterionConditionValue$FloatRange; getDistance
	i (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestEquals
	i (Z)V setHasTeamEquals
	j ()Lnet/minecraft/server/CriterionConditionValue$IntegerRange; getLevel
	j (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$static$8
	j (Z)V setHasTeamNotEquals
	k ()Lnet/minecraft/server/CriterionConditionRange; getRotX
	k (Z)V setHasScores
	l ()Lnet/minecraft/server/CriterionConditionRange; getRotY
	l (Z)V setHasAdvancements
	m ()Ljava/lang/Double; getX
	n ()Ljava/lang/Double; getY
	o ()Ljava/lang/Double; getZ
	p ()Ljava/lang/Double; getDeltaX
	q ()Ljava/lang/Double; getDeltaY
	r ()Ljava/lang/Double; getDeltaZ
	s ()Ljava/util/function/BiConsumer; getOrder
	u ()Z isCurrentEntity
	v ()Z hasNameEquals
	w ()Z hasNameNotEquals
	x ()Z isLimited
	y ()Z isSorted
	z ()Z hasGamemodeEquals
net/minecraft/server/RecipeItemStack$StackProvider net/minecraft/world/item/crafting/Ingredient$ItemValue
	a item
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
net/minecraft/server/CommandFill net/minecraft/server/commands/FillCommand
	a ERROR_AREA_TOO_LARGE
	b HOLLOW_CORE
	c ERROR_FAILED
	a ()Lnet/minecraft/server/ArgumentTileLocation; access$000
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ArgumentTileLocation;Lnet/minecraft/server/CommandFill$Mode;Ljava/util/function/Predicate;)I fillBlocks
	a (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$null$5
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
net/minecraft/server/PacketPlayOutOpenWindow net/minecraft/network/protocol/game/ClientboundOpenScreenPacket
	a containerId
	b type
	c title
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/Containers; getType
	d ()Lnet/minecraft/server/IChatBaseComponent; getTitle
wd$1 net/minecraft/server/network/ServerHandshakePacketListenerImpl$1
	a $SwitchMap$net$minecraft$network$ConnectionProtocol
net/minecraft/server/BlockConcretePowder net/minecraft/world/level/block/ConcretePowderBlock
	a concrete
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z touchesLiquid
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V onLand
	canHarden (Lnet/minecraft/server/IBlockData;)Z canSolidify
dkv$1 net/minecraft/client/particle/DragonBreathParticle$1
net/minecraft/server/EntityArmorStand net/minecraft/world/entity/decoration/ArmorStand
	b DATA_CLIENT_FLAGS
	bA RIDABLE_MINECARTS
	bD invisible
	bE disabledSlots
	bs DATA_RIGHT_LEG_POSE
	bt lastHit
	bu DEFAULT_HEAD_POSE
	bv DEFAULT_BODY_POSE
	bw DEFAULT_LEFT_ARM_POSE
	bx DEFAULT_RIGHT_ARM_POSE
	by DEFAULT_LEFT_LEG_POSE
	bz DEFAULT_RIGHT_LEG_POSE
	c DATA_HEAD_POSE
	d DATA_BODY_POSE
	e DATA_LEFT_ARM_POSE
	f DATA_RIGHT_ARM_POSE
	g DATA_LEFT_LEG_POSE
	A ()Z hasPhysics
	B ()Lnet/minecraft/server/NBTTagCompound; writePose
	C ()V updateInvisibilityStatus
	D ()V showBreakingParticles
	D (Lnet/minecraft/server/Entity;)V doPush
	F ()V playBrokenSound
	V ()V kill
	a (B)V handleEntityEvent
	a (BIZ)B setBit
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;)Z lambda$static$0
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)V swapItem
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interactAt
	a (Lnet/minecraft/server/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aH ()Z isPickable
	aI ()Z isPushable
	aO ()D getRidingHeight
	aZ ()Ljava/lang/Iterable; getHandSlots
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EnumItemSlot;)Lnet/minecraft/server/ItemStack; getItemBySlot
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bS ()Z ignoreExplosion
	ba ()Ljava/lang/Iterable; getArmorSlots
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	d (Lnet/minecraft/server/EnumItemSlot;)Z isDisabled
	dd ()V pushEntities
	df ()Z isEffectiveAi
	di ()Lnet/minecraft/server/EnumMainHand; getMainArm
	dt ()Z isAffectedByPotions
	du ()Z attackable
	e (FF)F tickHeadTurn
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/DamageSource;F)V causeDamage
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	e (Lnet/minecraft/server/Vec3D;)V travel
	f (Lnet/minecraft/server/DamageSource;)V brokenByPlayer
	f (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/EnumItemSlot; getClickedSlot
	g (Lnet/minecraft/server/DamageSource;)V brokenByAnything
	g (Lnet/minecraft/server/NBTTagCompound;)V readPose
	h ()V tick
	hasArms ()Z isShowArms
	hasBasePlate ()Z isNoBasePlate
	i (Z)V setInvisible
	k (F)V setYHeadRot
	l (F)V setYBodyRot
	o (I)Lnet/minecraft/server/SoundEffect; getFallDamageSound
	r ()Lnet/minecraft/server/Vector3f; getHeadPose
	s ()Lnet/minecraft/server/Vector3f; getBodyPose
	setArms (Z)V setShowArms
	setBasePlate (Z)V setNoBasePlate
	u ()Lnet/minecraft/server/Vector3f; getLeftArmPose
	u_ ()V defineSynchedData
	v ()Lnet/minecraft/server/Vector3f; getRightArmPose
	v_ ()Z isBaby
	w ()Lnet/minecraft/server/Vector3f; getLeftLegPose
	x_ ()V refreshDimensions
	y_ ()Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	z ()Lnet/minecraft/server/Vector3f; getRightLegPose
net/minecraft/server/ItemCooldownPlayer net/minecraft/world/item/ServerItemCooldowns
	a player
	b (Lnet/minecraft/server/Item;I)V onCooldownStarted
	c (Lnet/minecraft/server/Item;)V onCooldownEnded
dwy$a net/minecraft/client/renderer/texture/Stitcher$Holder
	a sprite
	b width
	c height
net/minecraft/server/EnchantmentThorns net/minecraft/world/item/enchantment/ThornsEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILjava/util/Random;)Z shouldHit
	a (Ljava/util/Map$Entry;Lnet/minecraft/server/EntityLiving;)V lambda$doPostHurt$1
	a (Lnet/minecraft/server/ItemStack;)Z canEnchant
	b (I)I getMaxCost
	b (ILjava/util/Random;)I getDamage
	b (Ljava/util/Map$Entry;Lnet/minecraft/server/EntityLiving;)V lambda$doPostHurt$0
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;I)V doPostHurt
dwy$b net/minecraft/client/renderer/texture/Stitcher$Region
	a originX
	b originY
	c width
	d height
	e subSlots
	f holder
	a ()Ldwy$a; getHolder
	a (Ldwy$a;)Z add
	a (Ljava/util/function/Consumer;)V walk
	b ()I getX
	c ()I getY
net/minecraft/server/WorldGenSurfaceDefaultBlock net/minecraft/world/level/levelgen/surfacebuilders/DefaultSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;I)V apply
net/minecraft/server/NavigationSpider net/minecraft/world/entity/ai/navigation/WallClimberNavigation
	p pathToPosition
	a (Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/Entity;D)Z moveTo
	a (Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/PathEntity; createPath
	c ()V tick
net/minecraft/server/CriterionConditionDamage net/minecraft/advancements/critereon/DamagePredicate
	a ANY
	b dealtDamage
	c takenDamage
	d sourceEntity
	e blocked
	f type
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionDamage; fromJson
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DamageSource;FFZ)Z matches
net/minecraft/server/BiomeLayoutOverworldConfiguration net/minecraft/world/level/biome/OverworldBiomeSourceSettings
	a levelData
	b generatorSettings
	a ()Lnet/minecraft/server/WorldData; getLevelData
	a (Lnet/minecraft/server/GeneratorSettingsOverworld;)Lnet/minecraft/server/BiomeLayoutOverworldConfiguration; setGeneratorSettings
	a (Lnet/minecraft/server/WorldData;)Lnet/minecraft/server/BiomeLayoutOverworldConfiguration; setLevelData
	b ()Lnet/minecraft/server/GeneratorSettingsOverworld; getGeneratorSettings
net/minecraft/server/EntityWitherSkull net/minecraft/world/entity/projectile/WitherSkull
	f DATA_DANGEROUS
	K_ ()Z shouldBurn
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;F)F getBlockExplosionResistance
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	aH ()Z isPickable
	bc ()Z isOnFire
	isCharged ()Z isDangerous
	k ()F getInertia
	setCharged (Z)V setDangerous
	u_ ()V defineSynchedData
net/minecraft/server/TileEntitySmoker net/minecraft/world/level/block/entity/SmokerBlockEntity
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/ItemStack;)I getBurnDuration
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
net/minecraft/server/Quaternion com/mojang/math/Quaternion
	a values
	a ()F i
	a (F)F cos
	a (Lnet/minecraft/server/Quaternion;)V mul
	b ()F j
	b (F)F sin
	c ()F k
	d ()F r
	e ()V conj
net/minecraft/server/BlockPressurePlateWeighted net/minecraft/world/level/block/WeightedPressurePlateBlock
	weight maxWeight
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOnSound
	a (Lnet/minecraft/server/IBlockData;I)Lnet/minecraft/server/IBlockData; setSignalForState
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOffSound
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getSignalStrength
	j (Lnet/minecraft/server/IBlockData;)I getSignalForState
net/minecraft/server/TileEntityBarrel net/minecraft/world/level/block/entity/BarrelBlockEntity
	b openCount
	L_ ()V clearContent
	M_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/SoundEffect;)V playSound
	a (Lnet/minecraft/server/IBlockData;Z)V updateBlockState
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NonNullList;)V setItems
	a_ (Lnet/minecraft/server/EntityHuman;)V startOpen
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b_ (Lnet/minecraft/server/EntityHuman;)V stopOpen
	c ()Z isEmpty
	f ()Lnet/minecraft/server/NonNullList; getItems
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	h ()V recheckOpen
	s ()V scheduleRecheck
net/minecraft/server/NBTTagList net/minecraft/nbt/ListTag
	a ()B getId
	a (ILnet/minecraft/server/NBTBase;)Z setTag
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)V load
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (Lnet/minecraft/server/NBTBase;)Z updateType
	a_ ()I getElementType
	b ()Lnet/minecraft/server/NBTBase; copy
	b (I)Lnet/minecraft/server/NBTTagList; getList
	b (ILnet/minecraft/server/NBTBase;)Z addTag
	b_ ()V stripEmptyChildren
	c ()Lnet/minecraft/server/NBTTagList; copy
	c (ILnet/minecraft/server/NBTBase;)V add
	d (I)S getShort
	d (ILnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; set
	e (I)I getInt
	f ()V updateTypeAfterRemove
	f (I)[I getIntArray
	g (I)[J getLongArray
	h (I)D getDouble
	i (I)F getFloat
	k (I)Lnet/minecraft/server/NBTBase; get
dpl$1 net/minecraft/client/renderer/blockentity/ShulkerBoxRenderer$1
	a $SwitchMap$net$minecraft$core$Direction
cxz$1 net/minecraft/client/KeyMapping$1
	a $SwitchMap$com$mojang$blaze3d$platform$InputConstants$Type
net/minecraft/server/EntityGolem net/minecraft/world/entity/animal/AbstractGolem
	A ()I getAmbientSoundInterval
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	b (FF)V causeFallDamage
	c (D)Z removeWhenFarAway
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
net/minecraft/server/ItemArmorStand net/minecraft/world/item/ArmorStandItem
	a (Lnet/minecraft/server/EntityArmorStand;Ljava/util/Random;)V randomizePose
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
net/minecraft/server/LootItemConditionEntityScore net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition
	a scores
	b entityTarget
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Scoreboard;Ljava/lang/String;Lnet/minecraft/server/LootValueBounds;)Z hasScore
	a (Lnet/minecraft/server/LootItemConditionEntityScore;)Ljava/util/Map; access$100
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;)Lcrf$a; hasScores
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b (Lnet/minecraft/server/LootItemConditionEntityScore;)Lnet/minecraft/server/LootTableInfo$EntityTarget; access$200
net/minecraft/server/EntityCreeper net/minecraft/world/entity/monster/Creeper
	POWERED DATA_IS_POWERED
	b DATA_SWELL_DIR
	bD droppedSkulls
	bz oldSwell
	d DATA_IS_IGNITED
	fuseTicks swell
	maxFuseTicks maxSwell
	C (Lnet/minecraft/server/Entity;)Z doHurtTarget
	a (I)V setSwellDir
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$mobInteract$0
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (FF)V causeFallDamage
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bv ()I getMaxFallDistance
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	canCauseHeadDrop ()Z canDropMobsSkull
	cl ()V registerAttributes
	createEffectCloud ()V spawnLingeringCloud
	dV ()I getSwellDir
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	explode ()V explodeCreeper
	h ()V tick
	n ()V registerGoals
	setCausedHeadDrop ()V increaseDroppedSkulls
	u_ ()V defineSynchedData
	v (F)F getSwelling
net/minecraft/server/DragonControllerDying net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase
	b targetLocation
	c time
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
net/minecraft/server/ContainerMerchant net/minecraft/world/inventory/MerchantMenu
	e merchantLevel
	f showProgressBar
	g canRestock
	inventoryMerchant tradeContainer
	merchant trader
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/server/MerchantRecipeList;)V setOffers
	a (Z)V setShowProgressBar
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isSameItem
	b (Z)V setCanRestock
	c (ILnet/minecraft/server/ItemStack;)V moveFromInventoryToPaymentSlot
	d (I)V setSelectionHint
	e ()I getTraderXp
	e (I)V setXp
	f ()I getFutureTraderXp
	f (I)V setMerchantLevel
	g ()I getTraderLevel
	g (I)V tryMoveItems
	h ()Z canRestock
	i ()Lnet/minecraft/server/MerchantRecipeList; getOffers
	j ()Z showProgressBar
	k ()V playTradeSound
net/minecraft/server/ThreadNamedUncaughtExceptionHandler net/minecraft/DefaultUncaughtExceptionHandlerWithName
	a logger
net/minecraft/server/CommandExecute net/minecraft/server/commands/ExecuteCommand
	a ERROR_AREA_TOO_LARGE
	b ERROR_CONDITIONAL_FAILED
	c ERROR_CONDITIONAL_FAILED_COUNT
	d CALLBACK_CHAINER
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/ResultConsumer;)Lcom/mojang/brigadier/ResultConsumer; lambda$static$3
	a (Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$null$2
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$addConditionals$49
	a (Lcom/mojang/brigadier/context/CommandContext;I)Lnet/minecraft/server/NBTBase; lambda$null$30
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z checkScore
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Z checkScore
	a (Lcom/mojang/brigadier/context/CommandContext;Z)I checkIfRegions
	a (Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection; expect
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLse$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; addConditional
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder; addIfBlocksConditional
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; addConditionals
	a (Lcom/mojang/brigadier/tree/CommandNode;ZLuf$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$addConditionals$52
	a (Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrapStores
	a (Lcom/mojang/brigadier/tree/LiteralCommandNode;Luf$c;ZLcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$wrapStores$32
	a (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$null$45
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Ljava/util/Collection;Lnet/minecraft/server/Scoreboard;Lnet/minecraft/server/ScoreboardObjective;ZLcom/mojang/brigadier/context/CommandContext;ZI)V lambda$storeValue$33
	a (Ljava/util/function/IntFunction;I)Lnet/minecraft/server/NBTBase; lambda$null$35
	a (Lnet/minecraft/server/CommandDataAccessor;Lcr$h;)I checkMatchingData
	a (Lnet/minecraft/server/CommandDataAccessor;ZLcr$h;Ljava/util/function/IntFunction;Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$storeData$36
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$5
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;Z)Lnet/minecraft/server/CommandListenerWrapper; storeValue
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;ZZ)Lnet/minecraft/server/CommandListenerWrapper; storeValue
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;Lcr$h;Ljava/util/function/IntFunction;Z)Lnet/minecraft/server/CommandListenerWrapper; storeData
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Z)Ljava/util/OptionalInt; checkRegions
	a (Lse$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$createNumericConditionalHandler$54
	a (Luf$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$51
	a (Luf$c;ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$null$31
	a (ZLcom/mojang/brigadier/context/CommandContext;)I lambda$addIfBlocksConditional$59
	a (ZLse$a;)Lcom/mojang/brigadier/Command; createNumericConditionalHandler
	a (ZLse$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$addConditional$56
	a (ZLuf$c;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$null$50
	a (ZZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$addIfBlocksConditional$57
	a (ZZLnet/minecraft/server/BossBattleCustom;Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$storeValue$34
	b (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$47
	b (Lcom/mojang/brigadier/context/CommandContext;I)Lnet/minecraft/server/NBTBase; lambda$null$28
	b (Lcom/mojang/brigadier/context/CommandContext;Z)I checkUnlessRegions
	b (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$null$43
	b (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$4
	b (Lse$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$createNumericConditionalHandler$53
	b (Luf$c;ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$null$29
	b (ZLcom/mojang/brigadier/context/CommandContext;)I lambda$addIfBlocksConditional$58
	b (ZLse$b;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$addConditional$55
	c (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$46
	c (Lcom/mojang/brigadier/context/CommandContext;I)Lnet/minecraft/server/NBTBase; lambda$null$26
	c (Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt; checkRegions
	c (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$null$41
	c (Luf$c;ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$null$27
	c (ZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$addConditionals$48
	d (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$44
	d (Lcom/mojang/brigadier/context/CommandContext;I)Lnet/minecraft/server/NBTBase; lambda$null$24
	d (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$null$39
	d (Luf$c;ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$null$25
	d (ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$wrapStores$19
	e (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$42
	e (Lcom/mojang/brigadier/context/CommandContext;I)Lnet/minecraft/server/NBTBase; lambda$null$22
	e (Luf$c;ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$null$23
	e (ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$wrapStores$18
	f (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$40
	f (Lcom/mojang/brigadier/context/CommandContext;I)Lnet/minecraft/server/NBTBase; lambda$null$20
	f (Luf$c;ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$null$21
	f (ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$wrapStores$17
	g (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$38
	h (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$37
	i (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$register$16
	j (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$register$15
	k (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$register$14
	l (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$register$13
	m (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$12
	n (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$11
	o (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$register$10
	p (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$9
	q (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$register$8
	r (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$7
	s (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$6
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairs2 net/minecraft/world/level/levelgen/structure/StrongholdPieces$StairsDown
	a isSource
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairs2; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/IEntityAccess net/minecraft/world/level/EntityGetter
	a (DDD)Lnet/minecraft/server/EntityHuman; getNearestPlayerIgnoreY
	a (DDDDLjava/util/function/Predicate;)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (DDDDZ)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/List; getEntitiesOfClass
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntitiesOfClass
	a (Ljava/lang/Class;Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;DDDLnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/EntityLiving; getNearestEntity
	a (Ljava/lang/Class;Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/List; getNearbyEntities
	a (Ljava/util/List;Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;DDD)Lnet/minecraft/server/EntityLiving; getNearestEntity
	a (Ljava/util/Set;Lnet/minecraft/server/Entity;)Z lambda$getEntityCollisions$2
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/Set;)Ljava/util/stream/Stream; getEntityCollisions
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)Ljava/util/stream/Stream; lambda$getEntityCollisions$4
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/VoxelShape;)Z isUnobstructed
	a (Lnet/minecraft/server/PathfinderTargetCondition;DDD)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;DDD)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/List; getNearbyPlayers
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/Entity;)Z lambda$isUnobstructed$1
	b (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/List; getLoadedEntitiesOfClass
	b (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getLoadedEntitiesOfClass
	b (Ljava/lang/Class;Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;DDDLnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/EntityLiving; getNearestLoadedEntity
	b (Ljava/lang/String;)Lnet/minecraft/server/EntityHuman; getPlayerByName
	b (Ljava/util/UUID;)Lnet/minecraft/server/EntityHuman; getPlayerByUUID
	b (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)Z lambda$getEntityCollisions$3
	c (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)Z lambda$isUnobstructed$0
	findNearbyPlayer (Lnet/minecraft/server/Entity;D)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	getPlayers ()Ljava/util/List; players
	isPlayerNearby (DDDD)Z hasNearbyAlivePlayer
cx$b$a net/minecraft/commands/arguments/RangeArgument$Ints$Serializer
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcx$b; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
s$a net/minecraft/advancements/AdvancementProgress$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/AdvancementProgress; deserialize
	a (Lnet/minecraft/server/AdvancementProgress;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/WorldGenAcaciaTree net/minecraft/world/level/levelgen/feature/SavannaTreeFeature
	a TRUNK
	aS LEAF
	a (Ljava/util/Set;Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;)V placeLogAt
	a (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;)Z doPlace
	a (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;)V placeLeafAt
net/minecraft/server/UserCache$BanEntrySerializer net/minecraft/server/players/GameProfileCache$Serializer
	a this$0
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/UserCache$UserCacheEntry; deserialize
	a (Lnet/minecraft/server/UserCache$UserCacheEntry;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/WorldGenShipwreck net/minecraft/world/level/levelgen/structure/ShipwreckPieces
	a PIVOT
	b STRUCTURE_LOCATION_BEACHED
	c STRUCTURE_LOCATION_OCEAN
	a ()Lnet/minecraft/server/BlockPosition; access$000
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureShipwreckConfiguration;)V addPieces
net/minecraft/server/CriterionConditionNBT net/minecraft/advancements/critereon/NbtPredicate
	a ANY
	b tag
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionNBT; fromJson
	a (Lnet/minecraft/server/Entity;)Z matches
	a (Lnet/minecraft/server/ItemStack;)Z matches
	a (Lnet/minecraft/server/NBTBase;)Z matches
	b (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/NBTTagCompound; getEntityTagToCompare
css$1 net/minecraft/world/phys/shapes/EntityCollisionContext$1
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/BlockPosition;Z)Z isAbove
ayp$a net/minecraft/world/inventory/BrewingStandMenu$FuelSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a_ (Lnet/minecraft/server/ItemStack;)Z mayPlaceItem
net/minecraft/server/BlockCauldron net/minecraft/world/level/block/CauldronBlock
	b SHAPE
	c INSIDE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)V setWaterLevel
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	c (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V handleRain
	f (Lnet/minecraft/server/IBlockData;)Z canOcclude
	i (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
net/minecraft/server/SensorType net/minecraft/world/entity/ai/sensing/SensorType
	a DUMMY
	b NEAREST_LIVING_ENTITIES
	c NEAREST_PLAYERS
	d INTERACTABLE_DOORS
	e NEAREST_BED
	f HURT_BY
	g VILLAGER_HOSTILES
	h VILLAGER_BABIES
	i SECONDARY_POIS
	j GOLEM_LAST_SEEN
	k factory
	a ()Lnet/minecraft/server/Sensor; create
	a (Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/server/SensorType; register
dkv$a net/minecraft/client/particle/DragonBreathParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/BlockBamboo net/minecraft/world/level/block/BambooBlock
	a SMALL_SHAPE
	b LARGE_SHAPE
	c COLLISION_SHAPE
	d AGE
	e LEAVES
	f STAGE
	R_ ()Lnet/minecraft/server/Block$EnumRandomOffset; getOffsetType
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getHeightAboveUpToMax
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getDestroyProgress
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;I)V growBamboo
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getHeightBelowUpToMax
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
cpr$e net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootSelectorEntry; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEntryAbstract; deserialize
cpr$d net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor
net/minecraft/server/LootItemFunctionExplosionDecay net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	b ()Lcqg$a; explosionDecay
cpr$c net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase
	b this$0
	a (F)I getWeight
cpr$b net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder
	c constructor
	b ()Lnet/minecraft/server/LootEntryAbstract; build
	d ()Lcpq$a; getThis
	g ()Lcpr$b; getThis
cpr$a net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder
	a weight
	b quality
	c functions
	a ()[Lnet/minecraft/server/LootItemFunction; getFunctions
	a (I)Lcpr$a; setWeight
	a (Lcqh$a;)Lcpr$a; apply
	b (I)Lcpr$a; setQuality
	b (Lcqh$a;)Ljava/lang/Object; apply
cpa$1 net/minecraft/world/level/storage/loot/LootPool$1
dly$1 net/minecraft/client/particle/SpitParticle$1
net/minecraft/server/BiomeBambooJungle net/minecraft/world/level/biome/BambooJungleBiome
dmk$a net/minecraft/client/particle/WaterDropParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/TagsFluid net/minecraft/tags/FluidTags
	c source
	d resetCount
	a ()Lnet/minecraft/server/Tags; getAllTags
	a (Ljava/lang/String;)Lnet/minecraft/server/Tag; bind
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; lambda$static$0
	a (Lnet/minecraft/server/Tags;)V reset
	b ()I access$000
	c ()Lnet/minecraft/server/Tags; access$100
dv$2 net/minecraft/commands/arguments/item/FunctionArgument$2
	a val$id
	b this$0
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; create
	b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Either; unwrap
uo$1 net/minecraft/server/dedicated/Settings$1
net/minecraft/server/EntityHorseDonkey net/minecraft/world/entity/animal/horse/Donkey
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
net/minecraft/server/MerchantRecipeList net/minecraft/world/item/trading/MerchantOffers
	a ()Lnet/minecraft/server/NBTTagCompound; createTag
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;I)Lnet/minecraft/server/MerchantRecipe; getRecipeFor
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToStream
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/MerchantRecipeList; createFromStream
net/minecraft/server/GuiStatsComponent net/minecraft/server/gui/StatsComponent
	a DECIMAL_FORMAT
	b values
	c vp
	d msgs
	e server
	f timer
	a ()V close
	a (Ljava/awt/event/ActionEvent;)V lambda$new$1
	a (Ljava/text/DecimalFormat;)V lambda$static$0
	a ([J)D getAverage
	b ()V tick
jo$1 net/minecraft/network/chat/Component$1
	a $SwitchMap$net$minecraft$ChatFormatting
brv$1 net/minecraft/world/level/block/SnowLayerBlock$1
	a $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
net/minecraft/server/PlayerConnection net/minecraft/server/network/ServerGamePacketListenerImpl
	A awaitingTeleportTime
	B clientIsFloating
	C aboveGroundTickCount
	D clientVehicleIsFloating
	E aboveGroundVehicleTickCount
	awaitingKeepAlive keepAlivePending
	c LOGGER
	chatThrottle chatSpamTickCount
	e tickCount
	h keepAliveChallenge
	j dropSpamTickCount
	k expectedAcks
	l firstGoodX
	lastKeepAlive keepAliveTime
	m firstGoodY
	minecraftServer server
	n firstGoodZ
	networkManager connection
	o lastGoodX
	p lastGoodY
	processedMovePackets knownMovePacketCount
	q lastGoodZ
	r lastVehicle
	receivedMovePackets receivedMovePacketCount
	s vehicleFirstGoodX
	t vehicleFirstGoodY
	teleportAwait awaitingTeleport
	teleportPos awaitingPositionFromClient
	u vehicleFirstGoodZ
	v vehicleLastGoodX
	w vehicleLastGoodY
	x vehicleLastGoodZ
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (DDDFF)V teleport
	a (DDDFFLjava/util/Set;)V teleport
	a (Ljava/lang/String;)V info
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/IChatBaseComponent;Lio/netty/util/concurrent/Future;)V lambda$disconnect$0
	a (Lnet/minecraft/server/IWorldReader;)Z isPlayerCollidingWithAnything
	a (Lnet/minecraft/server/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V send
	a (Lnet/minecraft/server/PacketPlayInAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/server/PacketPlayInAdvancements;)V handleSeenAdvancements
	a (Lnet/minecraft/server/PacketPlayInArmAnimation;)V handleAnimate
	a (Lnet/minecraft/server/PacketPlayInAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/server/PacketPlayInAutoRecipe;Lnet/minecraft/server/IRecipe;)V lambda$handlePlaceRecipe$3
	a (Lnet/minecraft/server/PacketPlayInBEdit;)V handleEditBook
	a (Lnet/minecraft/server/PacketPlayInBeacon;)V handleSetBeaconPacket
	a (Lnet/minecraft/server/PacketPlayInBlockDig;)V handlePlayerAction
	a (Lnet/minecraft/server/PacketPlayInBlockPlace;)V handleUseItem
	a (Lnet/minecraft/server/PacketPlayInBoatMove;)V handlePaddleBoat
	a (Lnet/minecraft/server/PacketPlayInChat;)V handleChat
	a (Lnet/minecraft/server/PacketPlayInClientCommand;)V handleClientCommand
	a (Lnet/minecraft/server/PacketPlayInCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/server/PacketPlayInCustomPayload;)V handleCustomPayload
	a (Lnet/minecraft/server/PacketPlayInDifficultyChange;)V handleChangeDifficulty
	a (Lnet/minecraft/server/PacketPlayInDifficultyLock;)V handleLockDifficulty
	a (Lnet/minecraft/server/PacketPlayInEnchantItem;)V handleContainerButtonClick
	a (Lnet/minecraft/server/PacketPlayInEntityAction;)V handlePlayerCommand
	a (Lnet/minecraft/server/PacketPlayInEntityNBTQuery;)V handleEntityTagQuery
	a (Lnet/minecraft/server/PacketPlayInFlying;)V handleMovePlayer
	a (Lnet/minecraft/server/PacketPlayInHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/server/PacketPlayInItemName;)V handleRenameItem
	a (Lnet/minecraft/server/PacketPlayInKeepAlive;)V handleKeepAlive
	a (Lnet/minecraft/server/PacketPlayInPickItem;)V handlePickItem
	a (Lnet/minecraft/server/PacketPlayInRecipeDisplayed;)V handleRecipeBookUpdatePacket
	a (Lnet/minecraft/server/PacketPlayInResourcePackStatus;)V handleResourcePackResponse
	a (Lnet/minecraft/server/PacketPlayInSetCommandBlock;)V handleSetCommandBlock
	a (Lnet/minecraft/server/PacketPlayInSetCommandMinecart;)V handleSetCommandMinecart
	a (Lnet/minecraft/server/PacketPlayInSetCreativeSlot;)V handleSetCreativeModeSlot
	a (Lnet/minecraft/server/PacketPlayInSetJigsaw;)V handleSetJigsawBlock
	a (Lnet/minecraft/server/PacketPlayInSettings;)V handleClientInformation
	a (Lnet/minecraft/server/PacketPlayInSpectate;)V handleTeleportToEntityPacket
	a (Lnet/minecraft/server/PacketPlayInSteerVehicle;)V handlePlayerInput
	a (Lnet/minecraft/server/PacketPlayInStruct;)V handleSetStructureBlock
	a (Lnet/minecraft/server/PacketPlayInTabComplete;)V handleCustomCommandSuggestions
	a (Lnet/minecraft/server/PacketPlayInTabComplete;Lcom/mojang/brigadier/suggestion/Suggestions;)V lambda$handleCustomCommandSuggestions$1
	a (Lnet/minecraft/server/PacketPlayInTeleportAccept;)V handleAcceptTeleportPacket
	a (Lnet/minecraft/server/PacketPlayInTileNBTQuery;)V handleBlockEntityTagQuery
	a (Lnet/minecraft/server/PacketPlayInTrSel;)V handleSelectTrade
	a (Lnet/minecraft/server/PacketPlayInTransaction;)V handleContainerAck
	a (Lnet/minecraft/server/PacketPlayInUpdateSign;)V handleSignUpdate
	a (Lnet/minecraft/server/PacketPlayInUseEntity;)V handleInteract
	a (Lnet/minecraft/server/PacketPlayInUseItem;)V handleUseItemOn
	a (Lnet/minecraft/server/PacketPlayInVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/server/PacketPlayInWindowClick;)V handleContainerClick
	b (Ljava/lang/String;)V warn
	b (Lnet/minecraft/server/Packet;)Ljava/lang/String; lambda$send$2
	b (Lnet/minecraft/server/PacketPlayInFlying;)Z containsInvalidValues
	b (Lnet/minecraft/server/PacketPlayInVehicleMove;)Z containsInvalidValues
	isExemptPlayer ()Z isSingleplayerOwner
	sendPacket (Lnet/minecraft/server/Packet;)V send
	syncPosition ()V resetPosition
net/minecraft/server/PacketPlayOutCustomSoundEffect net/minecraft/network/protocol/game/ClientboundCustomSoundPacket
	a name
	b source
	c x
	d y
	e z
	f volume
	g pitch
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getName
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/SoundCategory; getSource
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()F getVolume
	h ()F getPitch
dv$1 net/minecraft/commands/arguments/item/FunctionArgument$1
	a val$id
	b this$0
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; create
	b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Either; unwrap
dsd$1 net/minecraft/client/renderer/entity/EvokerRenderer$1
	a this$0
	a (Lnet/minecraft/server/Entity;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityIllagerWizard;FFFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;FFFFFFF)V render
net/minecraft/server/EntityBird net/minecraft/world/entity/animal/FlyingAnimal
	E_ ()Z isFlying
bya$a net/minecraft/world/level/chunk/PalettedContainer$CountConsumer
net/minecraft/server/PacketPlayOutTitle$EnumTitleAction net/minecraft/network/protocol/game/ClientboundSetTitlesPacket$Type
	g $VALUES
net/minecraft/server/PacketPlayOutEntityStatus net/minecraft/network/protocol/game/ClientboundEntityEventPacket
	a entityId
	b eventId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getEntity
	b ()B getEventId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
cvk$a com/mojang/realmsclient/client/FileUpload$CustomInputStreamEntity
	a length
	b content
	c uploadStatus
net/minecraft/server/NameReferencingFileConverter$FileConversionException net/minecraft/server/players/OldUsersConverter$ConversionError
aul$1 net/minecraft/world/entity/monster/Evoker$1
net/minecraft/server/LootTableInfo net/minecraft/world/level/storage/loot/LootContext
	a random
	b luck
	c level
	d lootTables
	e visitedTables
	f params
	g dynamicDrops
	a ()Lnet/minecraft/server/LootTableRegistry; getLootTables
	a (Lnet/minecraft/server/LootTable;)Z addVisitedTable
	a (Lnet/minecraft/server/MinecraftKey;Ljava/util/function/Consumer;)V addDynamicDrops
	b ()Ljava/util/Random; getRandom
	b (Lnet/minecraft/server/LootContextParameter;)Ljava/lang/Object; getParam
	b (Lnet/minecraft/server/LootTable;)V removeVisitedTable
	c ()F getLuck
	d ()Lnet/minecraft/server/WorldServer; getLevel
	getContextParameter (Lnet/minecraft/server/LootContextParameter;)Ljava/lang/Object; getParamOrNull
	hasContextParameter (Lnet/minecraft/server/LootContextParameter;)Z hasParam
net/minecraft/server/BlockBubbleColumn net/minecraft/world/level/block/BubbleColumnBlock
	a DRAG_DOWN
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z canExistIn
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Z)V growColumn
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z getDrag
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/FluidType; takeLiquid
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/CommandSetBlock net/minecraft/server/commands/SetBlockCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ArgumentTileLocation;Lnet/minecraft/server/CommandSetBlock$Mode;Ljava/util/function/Predicate;)I setBlock
	a (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$null$3
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/PacketPlayOutKeepAlive net/minecraft/network/protocol/game/ClientboundKeepAlivePacket
	a id
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()J getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/CriterionTrigger net/minecraft/advancements/CriterionTrigger
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
dly$a net/minecraft/client/particle/SpitParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/PacketPlayInKeepAlive net/minecraft/network/protocol/game/ServerboundKeepAlivePacket
	a id
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()J getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/IInventoryListener net/minecraft/world/ContainerListener
	a (Lnet/minecraft/server/IInventory;)V containerChanged
dv$a net/minecraft/commands/arguments/item/FunctionArgument$Result
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; create
	b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Either; unwrap
net/minecraft/server/ResourcePackSource net/minecraft/server/packs/repository/RepositorySource
	a (Ljava/util/Map;Lxa$b;)V loadPacks
net/minecraft/server/VirtualLevelWritable net/minecraft/world/level/LevelSimulatedRW
net/minecraft/server/BlockWoodButton net/minecraft/world/level/block/WoodButtonBlock
	a (Z)Lnet/minecraft/server/SoundEffect; getSound
net/minecraft/server/GenLayerDeepOcean net/minecraft/world/level/newbiome/layer/AddDeepOceanLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/BlockDataAbstract net/minecraft/world/level/block/state/AbstractStateHolder
	STATE_TO_VALUE PROPERTY_ENTRY_TO_STRING_FUNCTION
	a owner
	d values
	e hashCode
	f neighbours
	a ()Ljava/util/Collection; getProperties
	a (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; findNextInCollection
	a (Ljava/util/Map;)V populateNeighbours
	a (Lnet/minecraft/server/IBlockState;)Ljava/lang/Object; cycle
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/lang/Object; setValue
	b ()Lcom/google/common/collect/ImmutableMap; getValues
	b (Lnet/minecraft/server/IBlockState;)Z hasProperty
	c (Lnet/minecraft/server/IBlockState;)Ljava/lang/Comparable; getValue
	c (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/util/Map; makeNeighbourValues
cpa$b net/minecraft/world/level/storage/loot/LootPool$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootSelector; deserialize
	a (Lnet/minecraft/server/LootSelector;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
aul$d net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal
	a this$0
	e wololoTargeting
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
	m ()I getCastWarmupTime
net/minecraft/server/DataConverterVillagerProfession net/minecraft/util/datafix/fixes/VillagerDataFix
	a (II)Ljava/lang/String; upgradeData
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
cpa$a net/minecraft/world/level/storage/loot/LootPool$Builder
	a entries
	b conditions
	c functions
	d rolls
	e bonusRolls
	a ()Lcpa$a; unwrap
	a (Lcpq$a;)Lcpa$a; add
	a (Lcqh$a;)Lcpa$a; apply
	a (Lcrk$a;)Lcpa$a; when
	a (Lnet/minecraft/server/LootValue;)Lcpa$a; setRolls
	a (Lnet/minecraft/server/LootValueBounds;)Lcpa$a; setBonusRolls
	b ()Lnet/minecraft/server/LootSelector; build
	b (Lcqh$a;)Ljava/lang/Object; apply
	b (Lcrk$a;)Ljava/lang/Object; when
	c ()Ljava/lang/Object; unwrap
net/minecraft/server/EnumItemSlot$Function net/minecraft/world/entity/EquipmentSlot$Type
	c $VALUES
aul$a net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal
	a this$0
	a (DDDDFI)V createSpellEntity
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
civ$1 net/minecraft/world/level/levelgen/structure/StructurePiece$1
	a $SwitchMap$net$minecraft$core$Direction
aul$c net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal
	a this$0
	e vexCountTargeting
	a ()Z canUse
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
net/minecraft/server/DynamicDeserializer net/minecraft/util/Deserializer
	a LOGGER
	a (Lcom/mojang/datafixers/Dynamic;Lnet/minecraft/server/IRegistry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; deserialize
aul$b net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal
	a this$0
	e ()V tick
net/minecraft/server/PathfinderGoalLlamaFollow net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal
	a llama
	b speedModifier
	c distCheckCounter
	a ()Z canUse
	a (Lnet/minecraft/server/Entity;)Z lambda$canUse$0
	a (Lnet/minecraft/server/EntityLlama;I)Z firstIsLeashed
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
net/minecraft/server/EntityGuardian net/minecraft/world/entity/monster/Guardian
	b DATA_ID_MOVING
	bA clientSideSpikesAnimation
	bB clientSideSpikesAnimationO
	bD DATA_ID_ATTACK_TARGET
	bE clientSideCachedAttackTarget
	bF clientSideAttackTime
	bG clientSideTouchedGround
	bz clientSideTailAnimationSpeed
	c clientSideTailAnimation
	d clientSideTailAnimationO
	goalRandomStroll randomStrollGoal
	A ()I getAmbientSoundInterval
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	M ()I getMaxHeadXRot
	a (I)V setActiveAttackTarget
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityGuardian;I)V access$000
	a (Lnet/minecraft/server/EntityGuardian;Z)V access$100
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	ap ()Z makeStepSound
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkGuardianSpawnRules
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cQ ()Lnet/minecraft/server/EnumMonsterType; getMobType
	cl ()V registerAttributes
	cm ()Z canBreatheUnderwater
	dX ()Z isMoving
	dY ()Z hasActiveAttackTarget
	dZ ()Lnet/minecraft/server/EntityLiving; getActiveAttackTarget
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/Vec3D;)V travel
	getSoundFlop ()Lnet/minecraft/server/SoundEffect; getFlopSound
	k ()V aiStep
	l ()I getAttackDuration
	n ()V registerGoals
	r (Z)V setMoving
	u_ ()V defineSynchedData
	v (F)F getTailAnimation
	w (F)F getSpikesAnimation
	x (F)F getAttackAnimationScale
net/minecraft/server/DamageSource net/minecraft/world/damagesource/DamageSource
	A exhaustion
	B isFireSource
	BURN ON_FIRE
	C isProjectile
	D scalesWithDifficulty
	DRYOUT DRY_OUT
	E isMagic
	F isExplosion
	FIRE IN_FIRE
	LIGHTNING LIGHTNING_BOLT
	STUCK IN_WALL
	translationIndex msgId
	x bypassArmor
	y bypassInvul
	z bypassMagic
	a ()Lnet/minecraft/server/DamageSource; netherBedExplosion
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/DamageSource; thorns
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/DamageSource; trident
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/DamageSource; indirectMobAttack
	b ()Z isProjectile
	b (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/DamageSource; explosion
	c ()Lnet/minecraft/server/DamageSource; setProjectile
	c (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/DamageSource; indirectMagic
	e ()Lnet/minecraft/server/DamageSource; setExplosion
	getExhaustionCost ()F getFoodExhaustion
	ignoresArmor ()Z isBypassArmor
	ignoresInvulnerability ()Z isBypassInvul
	isStarvation ()Z isBypassMagic
	j ()Lnet/minecraft/server/Entity; getDirectEntity
	m ()Lnet/minecraft/server/DamageSource; bypassInvul
	n ()Lnet/minecraft/server/DamageSource; bypassMagic
	p ()Z isFire
	projectile (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/DamageSource; thrown
	q ()Ljava/lang/String; getMsgId
	r ()Lnet/minecraft/server/DamageSource; setScalesWithDifficulty
	s ()Z scalesWithDifficulty
	setExplosion ()Lnet/minecraft/server/DamageSource; setIsFire
	setIgnoreArmor ()Lnet/minecraft/server/DamageSource; bypassArmor
	v ()Z isCreativePlayer
	w ()Lnet/minecraft/server/Vec3D; getSourcePosition
net/minecraft/server/EntityWolf net/minecraft/world/entity/animal/Wolf
	DATA_HEALTH DATA_HEALTH_ID
	bC PREY_SELECTOR
	bE DATA_INTERESTED_ID
	bF DATA_COLLAR_COLOR
	bG interestedAngle
	bH interestedAngleO
	bI isWet
	bJ isShaking
	bK shakeAnim
	bL shakeAnimO
	C (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L ()V customServerAiStep
	M ()I getMaxHeadXRot
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z wantsToAttack
	a (Lnet/minecraft/server/EntityWolf;)Ljava/util/Random; access$000
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityWolf; getBreedOffspring
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cU ()F getSoundVolume
	cl ()V registerAttributes
	dC ()I getMaxSpawnClusterSize
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	ee ()Z isWet
	ef ()F getTailAngle
	ei ()Z isInterested
	f (FF)F getBodyRollAngle
	g (Lnet/minecraft/server/EntityLiving;)V setTarget
	h ()V tick
	i (Lnet/minecraft/server/EntityLiving;)Z lambda$static$0
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	k ()V aiStep
	n ()V registerGoals
	s (Z)V setTame
	u_ ()V defineSynchedData
	v (F)F getWetShade
	v (Z)V setIsInterested
	w (F)F getHeadRollAngle
cln$b net/minecraft/world/level/material/LavaFluid$Source
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d (Lnet/minecraft/server/Fluid;)I getAmount
net/minecraft/server/Vector3f net/minecraft/core/Rotations
	a ()Lnet/minecraft/server/NBTTagList; save
	e ()F getWrappedX
	f ()F getWrappedY
	g ()F getWrappedZ
cln$a net/minecraft/world/level/material/LavaFluid$Flowing
	a (Lbvu$a;)V createFluidStateDefinition
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d (Lnet/minecraft/server/Fluid;)I getAmount
aaa$1 net/minecraft/util/RewindableStream$1
	a this$0
	b index
net/minecraft/server/CriterionTriggerPlayerHurtEntity net/minecraft/advancements/critereon/PlayerHurtEntityTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;FFZ)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbn$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/BlockEnderChest net/minecraft/world/level/block/EnderChestBlock
	b WATERLOGGED
	c SHAPE
	d CONTAINER_TITLE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/InventoryEnderChest;ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$use$0
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	d (Lnet/minecraft/server/IBlockData;)Z hasCustomBreakingProgress
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/RegionFile net/minecraft/world/level/chunk/storage/RegionFile
	a EMPTY_SECTOR
	b file
	c offsets
	d chunkTimestamps
	e sectorFree
	a (I[BI)V write
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/io/DataInputStream; getChunkDataInputStream
	a (Lnet/minecraft/server/ChunkCoordIntPair;I)V setOffset
	a (Lnet/minecraft/server/ChunkCoordIntPair;[BI)V write
	b (Lnet/minecraft/server/ChunkCoordIntPair;)Z doesChunkExist
	b (Lnet/minecraft/server/ChunkCoordIntPair;I)V setTimestamp
	c (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/io/DataOutputStream; getChunkDataOutputStream
	d (Lnet/minecraft/server/ChunkCoordIntPair;)Z hasChunk
	f (Lnet/minecraft/server/ChunkCoordIntPair;)I getOffsetIndex
ze$a net/minecraft/tags/ItemTags$Wrapper
	a check
	b actual
	a ()Ljava/util/Collection; getValues
	a (Ljava/lang/Object;)Z contains
	a (Lnet/minecraft/server/Item;)Z contains
	b ()Ljava/util/Collection; getSource
ark$b net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal
	c ocelot
	g ()Z canScare
net/minecraft/server/EntityMinecartAbstract$EnumMinecartType net/minecraft/world/entity/vehicle/AbstractMinecart$Type
	h $VALUES
ark$a net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal
	i ocelot
	a ()Z canUse
	b ()Z canContinueToUse
net/minecraft/server/Tuple net/minecraft/util/Tuple
	a ()Ljava/lang/Object; getA
	a (Ljava/lang/Object;)V setA
	b ()Ljava/lang/Object; getB
	b (Ljava/lang/Object;)V setB
cwn$a com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type
	a Warning
	b Info
	c colorCode
	d text
	e $VALUES
cwn$2 com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$2
	a this$0
cwn$3 com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$3
	a this$0
net/minecraft/server/BiomeWarmOcean net/minecraft/world/level/biome/WarmOceanBiome
net/minecraft/server/DataConverterEntityPufferfish net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix
	a RENAMED_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/server/GenLayerTopSoil net/minecraft/world/level/newbiome/layer/AddSnowLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
cwn$1 com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$1
	a this$0
net/minecraft/server/EntityFireballFireball net/minecraft/world/entity/projectile/Fireball
	f DATA_ITEM_STACK
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/ItemStack;)V setItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/ItemStack;)V lambda$setItem$0
	f ()Lnet/minecraft/server/ItemStack; getItem
	l ()Lnet/minecraft/server/ItemStack; getItemRaw
	u_ ()V defineSynchedData
eaj$a net/minecraft/client/sounds/ChannelAccess$ChannelHandle
	a this$0
	b channel
	c stopped
	a ()Z isStopped
	a (Leaj$a;)Lctp; access$200
	a (Leaj$a;Lctp;)Lctp; access$202
	a (Ljava/util/function/Consumer;)V execute
	b ()V release
	b (Ljava/util/function/Consumer;)V lambda$execute$0
net/minecraft/server/BiomeLayout net/minecraft/world/level/biome/BiomeSourceType
	a CHECKERBOARD
	b FIXED
	c VANILLA_LAYERED
	d THE_END
	e factory
	f settingsFactory
	a ()Lnet/minecraft/server/BiomeLayoutConfiguration; createSettings
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lnet/minecraft/server/BiomeLayout; register
	a (Lnet/minecraft/server/BiomeLayoutConfiguration;)Lnet/minecraft/server/WorldChunkManager; create
net/minecraft/server/EntityRabbit$PathfinderGoalKillerRabbitMeleeAttack net/minecraft/world/entity/animal/Rabbit$EvilRabbitAttackGoal
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
net/minecraft/server/LootSelectorEmpty net/minecraft/world/level/storage/loot/entries/EmptyLootItem
	a ()Lcpr$a; emptyItem
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
crg$a net/minecraft/world/level/storage/loot/predicates/ExplosionCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionSurvivesExplosion; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionSurvivesExplosion;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
net/minecraft/server/BiomeBambooJungleHills net/minecraft/world/level/biome/BambooJungleHillsBiome
net/minecraft/server/BlockEnderPortal net/minecraft/world/level/block/EndPortalBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
net/minecraft/server/NetworkManager$QueuedPacket net/minecraft/network/Connection$PacketHolder
	a packet
	b listener
	a (Lnet/minecraft/server/NetworkManager$QueuedPacket;)Lnet/minecraft/server/Packet; access$000
	b (Lnet/minecraft/server/NetworkManager$QueuedPacket;)Lio/netty/util/concurrent/GenericFutureListener; access$100
net/minecraft/server/CommandSpawnpoint net/minecraft/server/commands/SetSpawnCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/BlockPosition;)I setSpawn
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/CriterionConditionEntityType net/minecraft/advancements/critereon/EntityTypePredicate
	a ANY
	b COMMA_JOINER
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionEntityType; fromJson
	a (Lnet/minecraft/server/EntityTypes;)Z matches
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
	a (Lnet/minecraft/server/Tag;)Lnet/minecraft/server/CriterionConditionEntityType; of
	b (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/CriterionConditionEntityType; of
net/minecraft/server/DataConverterSchemaV702 net/minecraft/util/datafix/schemas/V702
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/BlockOre net/minecraft/world/level/block/OreBlock
	a (Ljava/util/Random;)I xpOnDrop
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
net/minecraft/server/EnchantmentDigging net/minecraft/world/item/enchantment/DiggingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/ItemStack;)Z canEnchant
	b (I)I getMaxCost
net/minecraft/server/DataConverterSchemaV703 net/minecraft/util/datafix/schemas/V703
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
net/minecraft/server/DataConverterSchemaV700 net/minecraft/util/datafix/schemas/V700
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/DataConverterSchemaV701 net/minecraft/util/datafix/schemas/V701
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/DefinedStructure$BlockInfo net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo
	a pos
	b state
	c nbt
net/minecraft/server/DataConverterSchemaV704 net/minecraft/util/datafix/schemas/V704
	a ITEM_TO_BLOCKENTITY
	b ADD_NAMES
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$5
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$3
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	a (Ljava/util/HashMap;)V lambda$static$6
	a (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$4
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$0
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$2
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$1
net/minecraft/server/CriterionTriggerEffectsChanged net/minecraft/advancements/critereon/EffectsChangedTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lao$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
hi$a net/minecraft/data/recipes/ShapedRecipeBuilder$Result
	a this$0
	b id
	c result
	d count
	e group
	f pattern
	g key
	h advancement
	i advancementId
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
bsy$1 net/minecraft/world/level/block/VineBlock$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
net/minecraft/server/DataConverterSchemaV705 net/minecraft/util/datafix/schemas/V705
	a ADD_NAMES
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$25
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$23
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	a (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$24
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerThrowableProjectile$1
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$22
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerThrowableProjectile
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$21
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$20
	e (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$19
	f (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$18
	g (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$17
	h (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$16
	i (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$15
	j (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$14
	k (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$13
	l (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$12
	m (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
	n (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
	o (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
	p (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
	q (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
	r (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
	s (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
	t (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	u (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	v (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
cqd$a net/minecraft/world/level/storage/loot/functions/FillPlayerHead$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionFillPlayerHead; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionFillPlayerHead;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
cpr$1 net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$1
	a this$0
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
net/minecraft/server/IResourcePack net/minecraft/server/packs/Pack
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	a (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	b (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Z hasResource
net/minecraft/server/IpBanEntry net/minecraft/server/players/IpBanListEntry
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Ljava/lang/String; createIpInfo
	e ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/DataConverterCatType net/minecraft/util/datafix/fixes/CatTypeFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/WorldGenMelon net/minecraft/world/level/levelgen/feature/MelonFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/WorldGenBonusChest net/minecraft/world/level/levelgen/feature/BonusChestFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/EntitySilverfish$PathfinderGoalSilverfishHideInBlock net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal
	h selectedDirection
	i doMerge
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/server/EntityHorseAbstract net/minecraft/world/entity/animal/horse/AbstractHorse
	attributeJumpStrength JUMP_STRENGTH
	bA tailCounter
	bB sprintCounter
	bC isJumping
	bE temper
	bG canGallop
	bH gallopSoundCounter
	bI PARENT_HORSE_SELECTOR
	bJ MOMMY_TARGETING
	bK DATA_ID_FLAGS
	bL DATA_ID_OWNER_UUID
	bM eatingCounter
	bN mouthCounter
	bO standCounter
	bQ eatAnim
	bR eatAnimO
	bS standAnim
	bT standAnimO
	bU mouthAnim
	bV mouthAnimO
	canSlide allowStandSliding
	inventoryChest inventory
	jumpPower playerJumpPendingScale
	A ()I getAmbientSoundInterval
	F_ ()Z canJump
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	G_ ()F getJumpRidingScale
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityAgeable;Lnet/minecraft/server/EntityHorseAbstract;)V setOffspringAttributes
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/IInventory;)V containerChanged
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/SoundEffectType;)V playGallopSound
	aI ()Z isPushable
	a_ (F)V setJumpRidingScale
	a_ (I)V onPlayerJump
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (FF)V causeFallDamage
	b (I)V handleStartJump
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Z handleEating
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bV ()Lnet/minecraft/server/Entity; getControllingPassenger
	c ()V handleStopJump
	cF ()V dropEquipment
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cU ()F getSoundVolume
	cW ()Z isImmobile
	cl ()V registerAttributes
	d (IZ)V setFlag
	dC ()I getMaxSpawnClusterSize
	dD ()Z canBeControlledByRider
	dV ()V eating
	dY ()V moveTail
	dZ ()V openMouth
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityHuman;)V openInventory
	e (Lnet/minecraft/server/Vec3D;)V travel
	eA ()Z wearsArmor
	eB ()V stand
	ee ()V addBehaviourGoals
	eh ()Z isJumping
	ei ()Z isEating
	ej ()Z isStanding
	en ()V updateEquipment
	ep ()Z canBeSaddled
	eq ()Z isSaddled
	es ()V followMommy
	et ()Z canEatGrass
	eu ()V makeMad
	ev ()V playJumpSound
	ew ()Z canParent
	ex ()F generateRandomMaxHealth
	ey ()D generateRandomJumpStrength
	ez ()D generateRandomSpeed
	g (Lnet/minecraft/server/EntityHuman;)V doPlayerRide
	getChestSlots ()I getInventorySize
	getJumpStrength ()D getCustomJump
	getMaxDomestication ()I getMaxTemper
	getSoundAngry ()Lnet/minecraft/server/SoundEffect; getAngrySound
	h ()V tick
	h (Lnet/minecraft/server/EntityHuman;)Z tameWithName
	h (Lnet/minecraft/server/EntityLiving;)Z lambda$static$0
	hasReproduced ()Z isBred
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	j (Lnet/minecraft/server/ItemStack;)Z isArmor
	k ()V aiStep
	k (Lnet/minecraft/server/Entity;)V positionRider
	loadChest ()V createInventory
	n ()V registerGoals
	s (I)Z getFlag
	t (Z)V setIsJumping
	u (F)V onLeashDistance
	u (I)I modifyTemper
	u (Z)V setBred
	u_ ()V defineSynchedData
	v (F)F getEatAnim
	v (Z)V setSaddled
	w (F)F getStandAnim
	w (Z)V setEating
	w_ ()Z onLadder
	x (F)F getMouthAnim
	y (Z)V spawnTamingParticles
net/minecraft/server/GameProfiler net/minecraft/util/profiling/GameProfiler
	a LOGGER
	b MAXIMUM_TICK_TIME_NANOS
	c getTickTime
	d continuous
	e perTick
	a ()V startTick
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	a (Lnet/minecraft/server/GameProfiler;)Ljava/util/function/IntSupplier; access$100
	b ()V endTick
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c ()V pop
	d ()Lagj$a; continuous
net/minecraft/server/Unit net/minecraft/util/Unit
	b $VALUES
net/minecraft/server/WorldGenSurfaceFrozenOcean net/minecraft/world/level/levelgen/surfacebuilders/FrozenOceanSurfaceBuilder
	S icebergNoise
	T icebergRoofNoise
	U seed
	a PACKED_ICE
	b SNOW_BLOCK
	c AIR
	d GRAVEL
	e ICE
	a (J)V initNoise
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
cfd$a net/minecraft/world/level/levelgen/feature/VillageFeature$FeatureStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
net/minecraft/server/WorldGenFeatureSeaGrassConfiguration net/minecraft/world/level/levelgen/feature/SeagrassFeatureConfiguration
	a count
	b tallSeagrassProbability
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureSeaGrassConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/DataConverterItemName net/minecraft/util/datafix/fixes/ItemRenameFix
	a name
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	a (Ljava/lang/String;)Ljava/lang/String; fixItem
net/minecraft/server/ItemFireworksCharge net/minecraft/world/item/FireworkStarItem
	a (I)Lnet/minecraft/server/IChatBaseComponent; getColorName
	a (Lnet/minecraft/server/IChatBaseComponent;[I)Lnet/minecraft/server/IChatBaseComponent; appendColors
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbdr;)V appendHoverText
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/util/List;)V appendHoverText
bex$a net/minecraft/world/item/crafting/ShapelessRecipe$Serializer
	a (Lcom/google/gson/JsonArray;)Lnet/minecraft/server/NonNullList; itemsFromJson
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/ShapelessRecipes;)V toNetwork
	b (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ShapelessRecipes; fromJson
	b (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ShapelessRecipes; fromNetwork
net/minecraft/server/RayTrace net/minecraft/world/level/ClipContext
	a from
	b to
	c block
	d fluid
	e collisionContext
	a ()Lnet/minecraft/server/Vec3D; getTo
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getFluidShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getBlockShape
	b ()Lnet/minecraft/server/Vec3D; getFrom
net/minecraft/server/WorldGenMonumentPieces$IWorldGenMonumentPieceSelector net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentRoomFitter
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/BehaviorPanic net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger
	a (Lnet/minecraft/server/EntityLiving;)Z hasHostile
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/EntityLiving;)Z isHurt
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/LightEngineGraphSection net/minecraft/server/level/SectionTracker
	a (J)Z isSource
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (J)I getLevelFromSource
	b (JIZ)V update
	b (JJI)I computeLevelFromNeighbor
dpt$a net/minecraft/client/renderer/chunk/ChunkCompileTask$Status
	a PENDING
	b COMPILING
	c UPLOADING
	d DONE
	e $VALUES
dpt$b net/minecraft/client/renderer/chunk/ChunkCompileTask$Type
	a REBUILD_CHUNK
	b RESORT_TRANSPARENCY
	c $VALUES
net/minecraft/server/PacketPlayInUseEntity$EnumEntityUseAction net/minecraft/network/protocol/game/ServerboundInteractPacket$Action
	d $VALUES
net/minecraft/server/WorldType net/minecraft/world/level/LevelType
	g BUFFET
	j id
	l generatorSerialization
	n selectable
	name generatorName
	o replacement
	p hasHelpText
	q hasCustomOptions
	types LEVEL_TYPES
	a (I)Lnet/minecraft/server/WorldType; getReplacementForVersion
	a (Z)Lnet/minecraft/server/WorldType; setCustomOptions
	b ()Ljava/lang/String; getSerialization
	b (Z)Lnet/minecraft/server/WorldType; setSelectableByUser
	c ()Ljava/lang/String; getDescriptionId
	d ()Ljava/lang/String; getHelpTextId
	f ()Z hasCustomOptions
	g ()Z isSelectable
	getType (Ljava/lang/String;)Lnet/minecraft/server/WorldType; getLevelType
	h ()Z hasReplacement
	i ()I getId
	j ()Z hasHelpText
	k ()Lnet/minecraft/server/WorldType; setHasReplacement
	l ()Lnet/minecraft/server/WorldType; setHasHelpText
	name ()Ljava/lang/String; getName
net/minecraft/server/BlockCoralFanWall net/minecraft/world/level/block/CoralWallFanBlock
	c deadBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
net/minecraft/server/EntityLiving net/minecraft/world/entity/LivingEntity
	HEALTH DATA_HEALTH_ID
	aB oAttackAnim
	aC attackAnim
	aD attackStrengthTicker
	aE animationSpeedOld
	aF animationSpeed
	aG animationPosition
	aI timeOffs
	aJ rotA
	aK yBodyRot
	aL yBodyRotO
	aM yHeadRot
	aN yHeadRotO
	aO flyingSpeed
	aT oRun
	aU run
	aV animStep
	aW animStepO
	aX rotOffs
	aY deathScore
	activeItem useItem
	ar DATA_LIVING_ENTITY_FLAGS
	as SLEEPING_DIMENSIONS
	at swinging
	attributeMap attributes
	au swingingArm
	av swingTime
	aw removeArrowTime
	az hurtDir
	b SPEED_MODIFIER_SPRINTING_UUID
	bB lastHurtMob
	bC lastHurtMobTimestamp
	bD speed
	bF absorptionAmount
	bG lastPos
	bH lastDamageSource
	bI lastDamageStamp
	bJ swimAmount
	bK swimAmountO
	bb xxa
	bc yya
	bd zza
	be yRotA
	bf lerpSteps
	bg lerpX
	bh lerpY
	bi lerpZ
	bj lerpYRot
	bk lerpXRot
	bl lyHeadRot
	bm lerpHeadSteps
	bo useItemRemaining
	bp fallFlyTicks
	bq autoSpinAttackTicks
	br brain
	bs SLEEPING_POS_ID
	bw lastHandItemStacks
	bx lastArmorItemStacks
	c SPEED_MODIFIER_SPRINTING
	deathTicks deathTime
	e DATA_EFFECT_COLOR_ID
	effects activeEffects
	f DATA_EFFECT_AMBIENCE_ID
	g DATA_ARROW_COUNT_ID
	hurtTicks hurtTime
	hurtTimestamp lastHurtByMobTimestamp
	jumpTicks noJumpDelay
	killed dead
	killer lastHurtByPlayer
	lastDamage lastHurt
	lastDamageByPlayerTime lastHurtByPlayerTime
	lastDamager lastHurtByMob
	maxNoDamageTicks invulnerableDuration
	ticksFarFromPlayer noActionTime
	updateEffects effectsDirty
	A (Lnet/minecraft/server/Entity;)D getVisibilityPercent
	B (Lnet/minecraft/server/Entity;)V findStandUpPosition
	C ()V updateInvisibilityStatus
	C (Lnet/minecraft/server/Entity;)Z doHurtTarget
	D (Lnet/minecraft/server/Entity;)V doPush
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	V ()V kill
	a (B)V handleEntityEvent
	a (DDDFFIZ)V lerpTo
	a (DDDZ)Z randomTeleport
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (F)F getSwimAmount
	a (FI)V lerpHeadTo
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/BehaviorController; makeBrain
	a (Lnet/minecraft/server/ArgumentAnchor$Anchor;Lnet/minecraft/server/Vec3D;)V lookAt
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/AxisAlignedBB;)V checkAutoSpinAttack
	a (Lnet/minecraft/server/BlockPosition;)V setPosToBed
	a (Lnet/minecraft/server/BlockPosition;Z)V setRecordPlayingNearby
	a (Lnet/minecraft/server/DamageSource;Z)V dropFromLootTable
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;FDD)V knockback
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/PathfinderTargetCondition;)Z canAttack
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/server/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/server/EnumHand;)V swing
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/ItemStack;)V setItemInHand
	a (Lnet/minecraft/server/EnumItemSlot;)Z hasItemInSlot
	a (Lnet/minecraft/server/ItemStack;I)V spawnItemParticles
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)V addEatEffect
	a (Lnet/minecraft/server/MobEffect;)V onEffectAdded
	a (Lnet/minecraft/server/MobEffect;Z)V onEffectUpdated
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/BlockPosition;)V lambda$addAdditionalSaveData$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; eat
	a (ZLnet/minecraft/server/DamageSource;)Lnet/minecraft/server/LootTableInfo$Builder; createLootContext
	aG ()V markHurt
	aH ()Z isPickable
	aI ()Z isPushable
	aL ()Z isAlive
	aM ()Z isInWall
	aN ()V rideTick
	aY ()V animateHurt
	aZ ()Ljava/lang/Iterable; getHandSlots
	aa ()V baseTick
	af ()V outOfWorld
	alwaysGivesExp ()Z isAlwaysExperienceDropper
	applyArmorModifier (Lnet/minecraft/server/DamageSource;F)F getDamageAfterArmorAbsorb
	applyBlockingModifier (Lnet/minecraft/server/DamageSource;)Z isDamageSourceBlocked
	applyMagicModifier (Lnet/minecraft/server/DamageSource;F)F getDamageAfterMagicAbsorb
	b (FF)V causeFallDamage
	b (Lnet/minecraft/server/BlockPosition;)V onChangedBlock
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z trapdoorUsableAsLadder
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/ItemStack; getItemInHand
	b (Lnet/minecraft/server/ItemStack;)V playEquipSound
	b (Lnet/minecraft/server/ItemStack;I)V spawnItemUseParticles
	b (Lnet/minecraft/server/MobEffect;)V onEffectRemoved
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bH ()Z shouldShowName
	ba ()Ljava/lang/Iterable; getArmorSlots
	bf ()Z rideableUnderWater
	bk ()Z isVisuallySwimming
	br ()F getYHeadRot
	c (IZ)V setLivingEntityFlag
	c (Ljava/util/Collection;)Z areAllEffectsAmbient
	c (Lnet/minecraft/server/DamageSource;)V playHurtSound
	c (Lnet/minecraft/server/EntityLiving;)Z canAttack
	c (Lnet/minecraft/server/EnumHand;)V startUsingItem
	c (Lnet/minecraft/server/EnumItemSlot;)V broadcastBreakEvent
	c (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/SoundEffect; getDrinkingSound
	c (Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/MobEffect; removeEffectNoUpdate
	c (Lnet/minecraft/server/Tag;)V jumpInLiquid
	cB ()Ljava/util/Map; getActiveEffectsMap
	cC ()Z isInvertedHealAndHarm
	cE ()Lnet/minecraft/server/DamageSource; getLastDamageSource
	cF ()V dropEquipment
	cG ()Lnet/minecraft/server/MinecraftKey; getLootTable
	cI ()Lnet/minecraft/server/IBlockData; getFeetBlockState
	cO ()V updateSwingTime
	cT ()F getArmorCoverPercentage
	cV ()F getVoicePitch
	cX ()F getJumpPower
	cZ ()V goDownInWater
	clearActiveItem ()V releaseUsingItem
	cm ()Z canBreatheUnderwater
	cn ()F getScale
	co ()V tickDeath
	collideNearby ()V pushEntities
	ct ()I getLastHurtByMobTimestamp
	cu ()Lnet/minecraft/server/EntityLiving; getLastHurtMob
	cv ()I getLastHurtMobTimestamp
	cw ()I getNoActionTime
	cy ()V removeEffectParticles
	d (Lnet/minecraft/server/BlockPosition;)V setSleepingPos
	d (Lnet/minecraft/server/DamageSource;)V dropAllDeathLoot
	d (Lnet/minecraft/server/EnumHand;)V broadcastBreakEvent
	d (Lnet/minecraft/server/EnumItemSlot;)B entityEventForEquipmentBreak
	d (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/SoundEffect; getEatingSound
	d (Lnet/minecraft/server/MobEffect;)Z canBeAffected
	da ()F getWaterSlowDown
	damageArmor (F)V hurtArmor
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	damageEntity0 (Lnet/minecraft/server/DamageSource;F)V actuallyHurt
	damageShield (F)V hurtCurrentlyUsedShield
	db ()F getSpeed
	df ()Z isEffectiveAi
	dh ()V updateEffectVisibility
	dl ()Lnet/minecraft/server/ItemStack; getUseItem
	dm ()I getUseItemRemainingTicks
	dn ()I getTicksUsingItem
	doTick ()V serverAiStep
	dp ()V stopUsingItem
	dropDeathLoot (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	ds ()I getFallFlyingTicks
	dt ()Z isAffectedByPotions
	du ()Z attackable
	dw ()V clearSleepingPos
	dy ()V stopSleeping
	dz ()Lnet/minecraft/server/EnumDirection; getBedOrientation
	e (FF)F tickHeadTurn
	e (Lnet/minecraft/server/BlockPosition;)V startSleeping
	e (Lnet/minecraft/server/EntityLiving;)V blockedByShield
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	e (Lnet/minecraft/server/Vec3D;)V travel
	enterCombat ()V onEnterCombat
	exitCombat ()V onLeaveCombat
	f (Lnet/minecraft/server/BlockPosition;)V lambda$stopSleeping$5
	f (Lnet/minecraft/server/DamageSource;)Z checkTotemDeathProtection
	f (Lnet/minecraft/server/EntityLiving;)V doAutoAttackOnTouch
	f (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; getProjectile
	f (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; handleOnClimbable
	f (Z)V setSprinting
	g (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Vec3D; lambda$null$4
	g (Lnet/minecraft/server/EntityLiving;)V lambda$updateFallFlying$2
	g (Lnet/minecraft/server/ItemStack;)V breakItem
	getAbsorptionHearts ()F getAbsorptionAmount
	getArmorStrength ()I getArmorValue
	getAttributeInstance (Lnet/minecraft/server/IAttribute;)Lnet/minecraft/server/AttributeInstance; getAttribute
	getAttributeMap ()Lnet/minecraft/server/AttributeMapBase; getAttributes
	getBedPosition ()Ljava/util/Optional; getSleepingPos
	getBehaviorController ()Lnet/minecraft/server/BehaviorController; getBrain
	getEffects ()Ljava/util/Collection; getActiveEffects
	getEquipment (Lnet/minecraft/server/EnumItemSlot;)Lnet/minecraft/server/ItemStack; getItemBySlot
	getExpValue (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	getItemInMainHand ()Lnet/minecraft/server/ItemStack; getMainHandItem
	getItemInOffHand ()Lnet/minecraft/server/ItemStack; getOffhandItem
	getKillingEntity ()Lnet/minecraft/server/EntityLiving; getKillCredit
	getLastDamager ()Lnet/minecraft/server/EntityLiving; getLastHurtByMob
	getMainHand ()Lnet/minecraft/server/EnumMainHand; getMainArm
	getMonsterType ()Lnet/minecraft/server/EnumMonsterType; getMobType
	getRaisedHand ()Lnet/minecraft/server/EnumHand; getUsedItemHand
	getSoundDeath ()Lnet/minecraft/server/SoundEffect; getDeathSound
	getSoundFall (I)Lnet/minecraft/server/SoundEffect; getFallDamageSound
	getSoundHurt (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h ()V tick
	h (F)F getViewYRot
	h (Lnet/minecraft/server/BlockPosition;)Ljava/lang/Boolean; lambda$checkBedExists$3
	h (Lnet/minecraft/server/EntityLiving;)V lambda$hurt$1
	hasLineOfSight (Lnet/minecraft/server/Entity;)Z canSee
	i (Lnet/minecraft/server/Entity;)V push
	initAttributes ()V registerAttributes
	isClimbing ()Z onLadder
	isDropExperience ()Z shouldDropExperience
	isFrozen ()Z isImmobile
	isGliding ()Z isFallFlying
	isHandRaised ()Z isUsingItem
	isRiptiding ()Z isAutoSpinAttack
	j ()V stopRiding
	jump ()V jumpFromGround
	k (F)V setYHeadRot
	l ()I getCurrentSwingDuration
	l (F)V setYBodyRot
	l (I)I decreaseAirSupply
	m (I)I increaseAirSupply
	movementTick ()V aiStep
	n ()V updateFallFlying
	n (I)V setNoActionTime
	o ()V updatingUsingItem
	o (F)V setSpeed
	p ()V updateSwimAmount
	p (F)F getAttackAnim
	q ()V completeUsingItem
	q (I)V startAutoSpinAttack
	r ()Z checkBedExists
	r (F)F getFrictionInfluencedSpeed
	receive (Lnet/minecraft/server/Entity;I)V take
	setAbsorptionHearts (F)V setAbsorptionAmount
	setLastDamager (Lnet/minecraft/server/EntityLiving;)V setLastHurtByMob
	setSlot (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	shieldBlock (Lnet/minecraft/server/EntityLiving;)V blockUsingShield
	tickPotionEffects ()V tickEffects
	u_ ()V defineSynchedData
	z (Lnet/minecraft/server/Entity;)V setLastHurtMob
net/minecraft/server/UserCache net/minecraft/server/players/GameProfileCache
	a DATE_FORMAT
	b gson
	c usesAuthentication
	d profilesByName
	e profilesByUUID
	f profileMRUList
	g profileRepository
	h file
	i GAMEPROFILE_ENTRY_TYPE
	a ()[Ljava/lang/String; getKnownNames
	a (I)Ljava/util/List; getTopMRUProfiles
	a (Lcom/mojang/authlib/GameProfile;)V add
	a (Lcom/mojang/authlib/GameProfile;Ljava/util/Date;)V add
	a (Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; lookupGameProfile
	a (Ljava/util/UUID;)Lcom/mojang/authlib/GameProfile; get
	a (Z)V setUsesAuthentication
	b ()V load
	b (Ljava/util/UUID;)Lnet/minecraft/server/UserCache$UserCacheEntry; getProfileInfo
	c ()V save
	d ()Z usesAuthentication
	getProfile (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; get
net/minecraft/server/GenLayerDesert net/minecraft/world/level/newbiome/layer/BiomeEdgeLayer
	b DESERT
	c MOUNTAINS
	d WOODED_MOUNTAINS
	e SNOWY_TUNDRA
	f JUNGLE
	g BAMBOO_JUNGLE
	h JUNGLE_EDGE
	i BADLANDS
	j BADLANDS_PLATEAU
	k WOODED_BADLANDS_PLATEAU
	l PLAINS
	m GIANT_TREE_TAIGA
	n MOUNTAIN_EDGE
	o SWAMP
	p TAIGA
	q SNOWY_TAIGA
	r $VALUES
	a (II)Z isValidTemperatureEdge
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
	a ([IIIIIIII)Z checkEdge
	b ([IIIIIIII)Z checkEdgeStrict
bp$b net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance
	a item
	a (Lnet/minecraft/server/CriterionConditionItem;)Lbp$b; shotCrossbow
	a (Lnet/minecraft/server/IMaterial;)Lbp$b; shotCrossbow
	a (Lnet/minecraft/server/ItemStack;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
axu$1 net/minecraft/world/entity/vehicle/AbstractMinecart$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
bp$a net/minecraft/advancements/critereon/ShotCrossbowTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/ItemStack;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
net/minecraft/server/MobEffectInfo net/minecraft/world/effect/MobEffectCategory
	d tooltipFormatting
	e $VALUES
	a ()Lnet/minecraft/server/EnumChatFormat; getTooltipFormatting
net/minecraft/server/BlockPumpkin net/minecraft/world/level/block/PumpkinBlock
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$use$0
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	d ()Lnet/minecraft/server/BlockStem; getStem
	e ()Lnet/minecraft/server/BlockStemAttached; getAttachedStem
net/minecraft/server/PathPoint net/minecraft/world/level/pathfinder/Node
	a x
	b y
	c z
	d heapIdx
	e g
	f h
	g f
	h cameFrom
	i closed
	j walkedDistance
	k costMalus
	l type
	m hash
	a ()Lnet/minecraft/server/BlockPosition; asBlockPos
	a (III)Lnet/minecraft/server/PathPoint; cloneMove
	a (Lnet/minecraft/server/BlockPosition;)F distanceTo
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToStream
	a (Lnet/minecraft/server/PathPoint;)F distanceTo
	b ()Lnet/minecraft/server/Vec3D; asVec3
	b (III)I createHash
	b (Lnet/minecraft/server/BlockPosition;)F distanceToSqr
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/PathPoint; createFromStream
	b (Lnet/minecraft/server/PathPoint;)F distanceToSqr
	c ()Z inOpenSet
	c (Lnet/minecraft/server/BlockPosition;)F distanceManhattan
	c (Lnet/minecraft/server/PathPoint;)F distanceManhattan
net/minecraft/server/CommandSay net/minecraft/server/commands/SayCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
net/minecraft/server/WorldGenDecoratorCarveMask net/minecraft/world/level/levelgen/placement/CarvingMaskDecorator
	a (Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorCarveMaskConfiguration;I)Z lambda$getPositions$0
	a (Lnet/minecraft/server/ChunkCoordIntPair;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$1
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorCarveMaskConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/BlockTallPlant net/minecraft/world/level/block/DoublePlantBlock
	R_ ()Lnet/minecraft/server/Block$EnumRandomOffset; getOffsetType
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V placeAt
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)J getSeed
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
net/minecraft/server/Items net/minecraft/world/item/Items
	A SAND
	B RED_SAND
	C GRAVEL
	D GOLD_ORE
	E IRON_ORE
	F COAL_ORE
	G OAK_LOG
	GLOBE_BANNER_PATTERN GLOBE_BANNER_PATTER
	H SPRUCE_LOG
	I BIRCH_LOG
	J JUNGLE_LOG
	K ACACIA_LOG
	L DARK_OAK_LOG
	M STRIPPED_OAK_LOG
	N STRIPPED_SPRUCE_LOG
	O STRIPPED_BIRCH_LOG
	P STRIPPED_JUNGLE_LOG
	Q STRIPPED_ACACIA_LOG
	R STRIPPED_DARK_OAK_LOG
	S STRIPPED_OAK_WOOD
	T STRIPPED_SPRUCE_WOOD
	U STRIPPED_BIRCH_WOOD
	V STRIPPED_JUNGLE_WOOD
	W STRIPPED_ACACIA_WOOD
	X STRIPPED_DARK_OAK_WOOD
	Y OAK_WOOD
	Z SPRUCE_WOOD
	aA DEAD_BUSH
	aB SEAGRASS
	aC SEA_PICKLE
	aD PISTON
	aE WHITE_WOOL
	aF ORANGE_WOOL
	aG MAGENTA_WOOL
	aH LIGHT_BLUE_WOOL
	aI YELLOW_WOOL
	aJ LIME_WOOL
	aK PINK_WOOL
	aL GRAY_WOOL
	aM LIGHT_GRAY_WOOL
	aN CYAN_WOOL
	aO PURPLE_WOOL
	aP BLUE_WOOL
	aQ BROWN_WOOL
	aR GREEN_WOOL
	aS RED_WOOL
	aT BLACK_WOOL
	aU DANDELION
	aV POPPY
	aW BLUE_ORCHID
	aX ALLIUM
	aY AZURE_BLUET
	aZ RED_TULIP
	aa BIRCH_WOOD
	ab JUNGLE_WOOD
	ac ACACIA_WOOD
	ad DARK_OAK_WOOD
	ae OAK_LEAVES
	af SPRUCE_LEAVES
	ag BIRCH_LEAVES
	ah JUNGLE_LEAVES
	ai ACACIA_LEAVES
	aj DARK_OAK_LEAVES
	ak SPONGE
	al WET_SPONGE
	am GLASS
	an LAPIS_ORE
	ao LAPIS_BLOCK
	ap DISPENSER
	aq SANDSTONE
	ar CHISELED_SANDSTONE
	as CUT_SANDSTONE
	at NOTE_BLOCK
	au POWERED_RAIL
	av DETECTOR_RAIL
	aw STICKY_PISTON
	ax COBWEB
	ay GRASS
	az FERN
	b STONE
	bA QUARTZ_SLAB
	bB RED_SANDSTONE_SLAB
	bC CUT_RED_SANDSTONE_SLAB
	bD PURPUR_SLAB
	bE PRISMARINE_SLAB
	bF PRISMARINE_BRICK_SLAB
	bG DARK_PRISMARINE_SLAB
	bH SMOOTH_QUARTZ
	bI SMOOTH_RED_SANDSTONE
	bJ SMOOTH_SANDSTONE
	bK SMOOTH_STONE
	bL BRICKS
	bM TNT
	bN BOOKSHELF
	bO MOSSY_COBBLESTONE
	bP OBSIDIAN
	bQ TORCH
	bR END_ROD
	bS CHORUS_PLANT
	bT CHORUS_FLOWER
	bU PURPUR_BLOCK
	bV PURPUR_PILLAR
	bW PURPUR_STAIRS
	bX SPAWNER
	bY OAK_STAIRS
	bZ CHEST
	ba ORANGE_TULIP
	bb WHITE_TULIP
	bc PINK_TULIP
	bd OXEYE_DAISY
	be CORNFLOWER
	bf LILY_OF_THE_VALLEY
	bg WITHER_ROSE
	bh BROWN_MUSHROOM
	bi RED_MUSHROOM
	bj GOLD_BLOCK
	bk IRON_BLOCK
	bl OAK_SLAB
	bm SPRUCE_SLAB
	bn BIRCH_SLAB
	bo JUNGLE_SLAB
	bp ACACIA_SLAB
	bq DARK_OAK_SLAB
	br STONE_SLAB
	bs SMOOTH_STONE_SLAB
	bt SANDSTONE_SLAB
	bu CUT_STANDSTONE_SLAB
	bv PETRIFIED_OAK_SLAB
	bw COBBLESTONE_SLAB
	bx BRICK_SLAB
	by STONE_BRICK_SLAB
	bz NETHER_BRICK_SLAB
	c GRANITE
	cA SPRUCE_FENCE
	cB BIRCH_FENCE
	cC JUNGLE_FENCE
	cD ACACIA_FENCE
	cE DARK_OAK_FENCE
	cF PUMPKIN
	cG CARVED_PUMPKIN
	cH NETHERRACK
	cI SOUL_SAND
	cJ GLOWSTONE
	cK JACK_O_LANTERN
	cL OAK_TRAPDOOR
	cM SPRUCE_TRAPDOOR
	cN BIRCH_TRAPDOOR
	cO JUNGLE_TRAPDOOR
	cP ACACIA_TRAPDOOR
	cQ DARK_OAK_TRAPDOOR
	cR INFESTED_STONE
	cS INFESTED_COBBLESTONE
	cT INFESTED_STONE_BRICKS
	cU INFESTED_MOSSY_STONE_BRICKS
	cV INFESTED_CRACKED_STONE_BRICKS
	cW INFESTED_CHISELED_STONE_BRICKS
	cX STONE_BRICKS
	cY MOSSY_STONE_BRICKS
	cZ CRACKED_STONE_BRICKS
	ca DIAMOND_ORE
	cb DIAMOND_BLOCK
	cc CRAFTING_TABLE
	cd FARMLAND
	ce FURNACE
	cf LADDER
	cg RAIL
	ch COBBLESTONE_STAIRS
	ci LEVER
	cj STONE_PRESSURE_PLATE
	ck OAK_PRESSURE_PLATE
	cl SPRUCE_PRESSURE_PLATE
	cm BIRCH_PRESSURE_PLATE
	cn JUNGLE_PRESSURE_PLATE
	co ACACIA_PRESSURE_PLATE
	cp DARK_OAK_PRESSURE_PLATE
	cq REDSTONE_ORE
	cr REDSTONE_TORCH
	cs STONE_BUTTON
	ct SNOW
	cu ICE
	cv SNOW_BLOCK
	cw CACTUS
	cx CLAY
	cy JUKEBOX
	cz OAK_FENCE
	d POLISHED_GRANITE
	dA REDSTONE_LAMP
	dB SANDSTONE_STAIRS
	dC EMERALD_ORE
	dD ENDER_CHEST
	dE TRIPWIRE_HOOK
	dF EMERALD_BLOCK
	dG SPRUCE_STAIRS
	dH BIRCH_STAIRS
	dI JUNGLE_STAIRS
	dJ COMMAND_BLOCK
	dK BEACON
	dL COBBLESTONE_WALL
	dM MOSSY_COBBLESTONE_WALL
	dN BRICK_WALL
	dO PRISMARINE_WALL
	dP RED_SANDSTONE_WALL
	dQ MOSSY_STONE_BRICK_WALL
	dR GRANITE_WALL
	dS STONE_BRICK_WALL
	dT NETHER_BRICK_WALL
	dU ANDESITE_WALL
	dV RED_NETHER_BRICK_WALL
	dW SANDSTONE_WALL
	dX END_STONE_BRICK_WALL
	dY DIORITE_WALL
	dZ OAK_BUTTON
	da CHISELED_STONE_BRICKS
	db BROWN_MUSHROOM_BLOCK
	dc RED_MUSHROOM_BLOCK
	dd MUSHROOM_STEM
	de IRON_BARS
	df GLASS_PANE
	dg MELON
	dh VINE
	di OAK_FENCE_GATE
	dj SPRUCE_FENCE_GATE
	dk BIRCH_FENCE_GATE
	dl JUNGLE_FENCE_GATE
	dm ACACIA_FENCE_GATE
	dn DARK_OAK_FENCE_GATE
	do BRICK_STAIRS
	dp STONE_BRICK_STAIRS
	dq MYCELIUM
	dr LILY_PAD
	ds NETHER_BRICKS
	dt NETHER_BRICK_FENCE
	du NETHER_BRICK_STAIRS
	dv ENCHANTING_TABLE
	dw END_PORTAL_FRAME
	dx END_STONE
	dy END_STONE_BRICKS
	dz DRAGON_EGG
	e DIORITE
	eA LIME_TERRACOTTA
	eB PINK_TERRACOTTA
	eC GRAY_TERRACOTTA
	eD LIGHT_GRAY_TERRACOTTA
	eE CYAN_TERRACOTTA
	eF PURPLE_TERRACOTTA
	eG BLUE_TERRACOTTA
	eH BROWN_TERRACOTTA
	eI GREEN_TERRACOTTA
	eJ RED_TERRACOTTA
	eK BLACK_TERRACOTTA
	eL BARRIER
	eM IRON_TRAPDOOR
	eN HAY_BLOCK
	eO WHITE_CARPET
	eP ORANGE_CARPET
	eQ MAGENTA_CARPET
	eR LIGHT_BLUE_CARPET
	eS YELLOW_CARPET
	eT LIME_CARPET
	eU PINK_CARPET
	eV GRAY_CARPET
	eW LIGHT_GRAY_CARPET
	eX CYAN_CARPET
	eY PURPLE_CARPET
	eZ BLUE_CARPET
	ea SPRUCE_BUTTON
	eb BIRCH_BUTTON
	ec JUNGLE_BUTTON
	ed ACACIA_BUTTON
	ee DARK_OAK_BUTTON
	ef ANVIL
	eg CHIPPED_ANVIL
	eh DAMAGED_ANVIL
	ei TRAPPED_CHEST
	ej LIGHT_WEIGHTED_PRESSURE_PLATE
	ek HEAVY_WEIGHTED_PRESSURE_PLATE
	el DAYLIGHT_DETECTOR
	em REDSTONE_BLOCK
	en NETHER_QUARTZ_ORE
	eo HOPPER
	ep CHISELED_QUARTZ_BLOCK
	eq QUARTZ_BLOCK
	er QUARTZ_PILLAR
	es QUARTZ_STAIRS
	et ACTIVATOR_RAIL
	eu DROPPER
	ev WHITE_TERRACOTTA
	ew ORANGE_TERRACOTTA
	ex MAGENTA_TERRACOTTA
	ey LIGHT_BLUE_TERRACOTTA
	ez YELLOW_TERRACOTTA
	f POLISHED_DIORITE
	fA CYAN_STAINED_GLASS
	fB PURPLE_STAINED_GLASS
	fC BLUE_STAINED_GLASS
	fD BROWN_STAINED_GLASS
	fE GREEN_STAINED_GLASS
	fF RED_STAINED_GLASS
	fG BLACK_STAINED_GLASS
	fH WHITE_STAINED_GLASS_PANE
	fI ORANGE_STAINED_GLASS_PANE
	fJ MAGENTA_STAINED_GLASS_PANE
	fK LIGHT_BLUE_STAINED_GLASS_PANE
	fL YELLOW_STAINED_GLASS_PANE
	fM LIME_STAINED_GLASS_PANE
	fN PINK_STAINED_GLASS_PANE
	fO GRAY_STAINED_GLASS_PANE
	fP LIGHT_GRAY_STAINED_GLASS_PANE
	fQ CYAN_STAINED_GLASS_PANE
	fR PURPLE_STAINED_GLASS_PANE
	fS BLUE_STAINED_GLASS_PANE
	fT BROWN_STAINED_GLASS_PANE
	fU GREEN_STAINED_GLASS_PANE
	fV RED_STAINED_GLASS_PANE
	fW BLACK_STAINED_GLASS_PANE
	fX PRISMARINE
	fY PRISMARINE_BRICKS
	fZ DARK_PRISMARINE
	fa BROWN_CARPET
	fb GREEN_CARPET
	fc RED_CARPET
	fd BLACK_CARPET
	fe TERRACOTTA
	ff COAL_BLOCK
	fg PACKED_ICE
	fh ACACIA_STAIRS
	fi DARK_OAK_STAIRS
	fj SLIME_BLOCK
	fk GRASS_PATH
	fl SUNFLOWER
	fm LILAC
	fn ROSE_BUSH
	fo PEONY
	fp TALL_GRASS
	fq LARGE_FERN
	fr WHITE_STAINED_GLASS
	fs ORANGE_STAINED_GLASS
	ft MAGENTA_STAINED_GLASS
	fu LIGHT_BLUE_STAINED_GLASS
	fv YELLOW_STAINED_GLASS
	fw LIME_STAINED_GLASS
	fx PINK_STAINED_GLASS
	fy GRAY_STAINED_GLASS
	fz LIGHT_GRAY_STAINED_GLASS
	g ANDESITE
	gA CYAN_SHULKER_BOX
	gB PURPLE_SHULKER_BOX
	gC BLUE_SHULKER_BOX
	gD BROWN_SHULKER_BOX
	gE GREEN_SHULKER_BOX
	gF RED_SHULKER_BOX
	gG BLACK_SHULKER_BOX
	gH WHITE_GLAZED_TERRACOTTA
	gI ORANGE_GLAZED_TERRACOTTA
	gJ MAGENTA_GLAZED_TERRACOTTA
	gK LIGHT_BLUE_GLAZED_TERRACOTTA
	gL YELLOW_GLAZED_TERRACOTTA
	gM LIME_GLAZED_TERRACOTTA
	gN PINK_GLAZED_TERRACOTTA
	gO GRAY_GLAZED_TERRACOTTA
	gP LIGHT_GRAY_GLAZED_TERRACOTTA
	gQ CYAN_GLAZED_TERRACOTTA
	gR PURPLE_GLAZED_TERRACOTTA
	gS BLUE_GLAZED_TERRACOTTA
	gT BROWN_GLAZED_TERRACOTTA
	gU GREEN_GLAZED_TERRACOTTA
	gV RED_GLAZED_TERRACOTTA
	gW BLACK_GLAZED_TERRACOTTA
	gX WHITE_CONCRETE
	gY ORANGE_CONCRETE
	gZ MAGENTA_CONCRETE
	ga PRISMARINE_STAIRS
	gb PRISMARINE_BRICK_STAIRS
	gc DARK_PRISMARINE_STAIRS
	gd SEA_LANTERN
	ge RED_SANDSTONE
	gf CHISELED_RED_SANDSTONE
	gg CUT_RED_SANDSTONE
	gh RED_SANDSTONE_STAIRS
	gi REPEATING_COMMAND_BLOCK
	gj CHAIN_COMMAND_BLOCK
	gk MAGMA_BLOCK
	gl NETHER_WART_BLOCK
	gm RED_NETHER_BRICKS
	gn BONE_BLOCK
	go STRUCTURE_VOID
	gp OBSERVER
	gq SHULKER_BOX
	gr WHITE_SHULKER_BOX
	gs ORANGE_SHULKER_BOX
	gt MAGENTA_SHULKER_BOX
	gu LIGHT_BLUE_SHULKER_BOX
	gv YELLOW_SHULKER_BOX
	gw LIME_SHULKER_BOX
	gx PINK_SHULKER_BOX
	gy GRAY_SHULKER_BOX
	gz LIGHT_GRAY_SHULKER_BOX
	h POLISHED_ANDESITE
	hA GREEN_CONCRETE_POWDER
	hB RED_CONCRETE_POWDER
	hC BLACK_CONCRETE_POWDER
	hD TURTLE_EGG
	hE DEAD_TUBE_CORAL_BLOCK
	hF DEAD_BRAIN_CORAL_BLOCK
	hG DEAD_BUBBLE_CORAL_BLOCK
	hH DEAD_FIRE_CORAL_BLOCK
	hI DEAD_HORN_CORAL_BLOCK
	hJ TUBE_CORAL_BLOCK
	hK BRAIN_CORAL_BLOCK
	hL BUBBLE_CORAL_BLOCK
	hM FIRE_CORAL_BLOCK
	hN HORN_CORAL_BLOCK
	hO TUBE_CORAL
	hP BRAIN_CORAL
	hQ BUBBLE_CORAL
	hR FIRE_CORAL
	hS HORN_CORAL
	hT DEAD_BRAIN_CORAL
	hU DEAD_BUBBLE_CORAL
	hV DEAD_FIRE_CORAL
	hW DEAD_HORN_CORAL
	hX DEAD_TUBE_CORAL
	hY TUBE_CORAL_FAN
	hZ BRAIN_CORAL_FAN
	ha LIGHT_BLUE_CONCRETE
	hb YELLOW_CONCRETE
	hc LIME_CONCRETE
	hd PINK_CONCRETE
	he GRAY_CONCRETE
	hf LIGHT_GRAY_CONCRETE
	hg CYAN_CONCRETE
	hh PURPLE_CONCRETE
	hi BLUE_CONCRETE
	hj BROWN_CONCRETE
	hk GREEN_CONCRETE
	hl RED_CONCRETE
	hm BLACK_CONCRETE
	hn WHITE_CONCRETE_POWDER
	ho ORANGE_CONCRETE_POWDER
	hp MAGENTA_CONCRETE_POWDER
	hq LIGHT_BLUE_CONCRETE_POWDER
	hr YELLOW_CONCRETE_POWDER
	hs LIME_CONCRETE_POWDER
	ht PINK_CONCRETE_POWDER
	hu GRAY_CONCRETE_POWDER
	hv LIGHT_GRAY_CONCRETE_POWDER
	hw CYAN_CONCRETE_POWDER
	hx PURPLE_CONCRETE_POWDER
	hy BLUE_CONCRETE_POWDER
	hz BROWN_CONCRETE_POWDER
	i GRASS_BLOCK
	iA MOSSY_STONE_BRICK_SLAB
	iB POLISHED_DIORITE_SLAB
	iC MOSSY_COBBLESTONE_SLAB
	iD END_STONE_BRICK_SLAB
	iE SMOOTH_SANDSTONE_SLAB
	iF SMOOTH_QUARTZ_SLAB
	iG GRANITE_SLAB
	iH ANDESITE_SLAB
	iI RED_NETHER_BRICK_SLAB
	iJ POLISHED_ANDESITE_SLAB
	iK DIORITE_SLAB
	iL SCAFFOLDING
	iM IRON_DOOR
	iN OAK_DOOR
	iO SPRUCE_DOOR
	iP BIRCH_DOOR
	iQ JUNGLE_DOOR
	iR ACACIA_DOOR
	iS DARK_OAK_DOOR
	iT REPEATER
	iU COMPARATOR
	iV STRUCTURE_BLOCK
	iW JIGSAW_BLOCK
	iX COMPOSTER
	ia BUBBLE_CORAL_FAN
	ib FIRE_CORAL_FAN
	ic HORN_CORAL_FAN
	id DEAD_TUBE_CORAL_FAN
	ie DEAD_BRAIN_CORAL_FAN
	if DEAD_BUBBLE_CORAL_FAN
	ig DEAD_FIRE_CORAL_FAN
	ih DEAD_HORN_CORAL_FAN
	ii BLUE_ICE
	ij CONDUIT
	ik POLISHED_GRANITE_STAIRS
	il SMOOTH_RED_SANDSTONE_STAIRS
	im MOSSY_STONE_BRICK_STAIRS
	in POLISHED_DIORITE_STAIRS
	io MOSSY_COBBLESTONE_STAIRS
	ip END_STONE_BRICK_STAIRS
	iq STONE_STAIRS
	ir SMOOTH_SANDSTONE_STAIRS
	is SMOOTH_QUARTZ_STAIRS
	it GRANITE_STAIRS
	iu ANDESITE_STAIRS
	iv RED_NETHER_BRICK_STAIRS
	iw POLISHED_ANDESITE_STAIRS
	ix DIORITE_STAIRS
	iy POLISHED_GRANITE_SLAB
	iz SMOOTH_RED_SANDSTONE_SLAB
	j DIRT
	k COARSE_DIRT
	kN SUGAR_CANE
	kO KELP
	kP DRIED_KELP_BLOCK
	kQ BAMBOO
	l PODZOL
	lD CAKE
	m COBBLESTONE
	mr BREWING_STAND
	ms CAULDRON
	n OAK_PLANKS
	nH FLOWER_POT
	o SPRUCE_PLANKS
	p BIRCH_PLANKS
	pA LOOM
	pG BARREL
	pH SMOKER
	pI BLAST_FURNACE
	pJ CARTOGRAPHY_TABLE
	pK FLETCHING_TABLE
	pL GRINDSTONE
	pM LECTERN
	pN SMITHING_TABLE
	pO STONECUTTER
	pP BELL
	pQ LANTERN
	pS CAMPFIRE
	q JUNGLE_PLANKS
	r ACACIA_PLANKS
	s DARK_OAK_PLANKS
	t OAK_SAPLING
	u SPRUCE_SAPLING
	v BIRCH_SAPLING
	w JUNGLE_SAPLING
	x ACACIA_SAPLING
	y DARK_OAK_SAPLING
	z BEDROCK
	a (Ljava/lang/String;Lnet/minecraft/server/Item;)Lnet/minecraft/server/Item; registerItem
	a (Lnet/minecraft/server/Block;)Lnet/minecraft/server/Item; registerBlock
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/CreativeModeTab;)Lnet/minecraft/server/Item; registerBlock
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Item;)Lnet/minecraft/server/Item; registerBlock
	a (Lnet/minecraft/server/ItemBlock;)Lnet/minecraft/server/Item; registerBlock
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/Item;)Lnet/minecraft/server/Item; registerItem
net/minecraft/server/EntityThrownTrident net/minecraft/world/entity/projectile/ThrownTrident
	ar clientSideReturnTridentTickCount
	as ID_LOYALTY
	au dealtDamage
	trident tridentItem
	a (Lnet/minecraft/server/MovingObjectPositionEntity;)V onHitEntity
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/MovingObjectPositionEntity; findHitEntity
	b (Lnet/minecraft/server/EntityHuman;)V playerTouch
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	g (DDD)Z shouldRender
	h ()V tick
	i ()V checkDespawn
	k ()Lnet/minecraft/server/SoundEffect; getDefaultHitGroundSoundEvent
	n ()Lnet/minecraft/server/ItemStack; getPickupItem
	u ()F getWaterInertia
	u_ ()V defineSynchedData
	w ()Z isAcceptibleReturnOwner
net/minecraft/server/FluidTypeFlowing net/minecraft/world/level/material/FlowingFluid
	e OCCLUSION_CACHE
	f shapes
	a (IZ)Lnet/minecraft/server/Fluid; getFlowing
	a (Lbvu$a;)V createFluidStateDefinition
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)S getCacheKey
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/IBlockData;I)Z lambda$getSlopeDistance$2
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z canPassThroughWall
	a (Lnet/minecraft/server/Fluid;)F getOwnHeight
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getHeight
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)V spread
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockData;)V spreadToSides
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V beforeDestroyingBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/Fluid;)V spreadTo
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isSolidFace
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/Vec3D; getFlow
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;Lnet/minecraft/server/FluidType;)Z canSpreadTo
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canHoldFluid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isWaterHole
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z canPassThrough
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)I sourceNeighborCount
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;I)Lcom/mojang/datafixers/util/Pair; lambda$getSpread$3
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I getSlopeDistance
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)Z lambda$getSpread$4
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getNewLiquid
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Lnet/minecraft/server/Fluid;)I getSpreadDelay
	a (Z)Lnet/minecraft/server/Fluid; getSource
	b (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/VoxelShape; lambda$getShape$5
	b (Lnet/minecraft/server/IWorldReader;)I getSlopeFindDistance
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;I)Lcom/mojang/datafixers/util/Pair; lambda$getSlopeDistance$1
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Ljava/util/Map; getSpread
	c (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z hasSameAbove
	c (Lnet/minecraft/server/IWorldReader;)I getDropOff
	d (Lnet/minecraft/server/Fluid;)I getAmount
	e ()Lnet/minecraft/server/FluidType; getFlowing
	e (Lnet/minecraft/server/Fluid;)I getLegacyLevel
	f ()Lnet/minecraft/server/FluidType; getSource
	g ()Z canConvertToSource
	g (Lnet/minecraft/server/Fluid;)Z affectsFlow
	h (Lnet/minecraft/server/Fluid;)Z isSourceBlockOfThisType
	l ()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap; lambda$static$0
am$a net/minecraft/advancements/critereon/DamageSourcePredicate$Builder
	a isProjectile
	b isExplosion
	c bypassesArmor
	d bypassesInvulnerability
	e bypassesMagic
	f isFire
	g isMagic
	h isLightning
	i directEntity
	j sourceEntity
	a ()Lam$a; damageType
	a (Lav$a;)Lam$a; direct
	a (Ljava/lang/Boolean;)Lam$a; isProjectile
	a (Lnet/minecraft/server/CriterionConditionEntity;)Lam$a; direct
	b ()Lnet/minecraft/server/CriterionConditionDamageSource; build
	b (Lav$a;)Lam$a; source
	b (Ljava/lang/Boolean;)Lam$a; isExplosion
	b (Lnet/minecraft/server/CriterionConditionEntity;)Lam$a; source
	c (Ljava/lang/Boolean;)Lam$a; bypassesArmor
	d (Ljava/lang/Boolean;)Lam$a; bypassesInvulnerability
	e (Ljava/lang/Boolean;)Lam$a; bypassesMagic
	f (Ljava/lang/Boolean;)Lam$a; isFire
	g (Ljava/lang/Boolean;)Lam$a; isMagic
	h (Ljava/lang/Boolean;)Lam$a; isLightning
net/minecraft/server/Item$Info net/minecraft/world/item/Item$Properties
	a maxStackSize
	b maxDamage
	c craftingRemainingItem
	d category
	e rarity
	f foodProperties
	a (I)Lnet/minecraft/server/Item$Info; stacksTo
	a (Lnet/minecraft/server/CreativeModeTab;)Lnet/minecraft/server/Item$Info; tab
	a (Lnet/minecraft/server/EnumItemRarity;)Lnet/minecraft/server/Item$Info; rarity
	a (Lnet/minecraft/server/FoodInfo;)Lnet/minecraft/server/Item$Info; food
	a (Lnet/minecraft/server/Item$Info;)Lnet/minecraft/server/CreativeModeTab; access$000
	a (Lnet/minecraft/server/Item;)Lnet/minecraft/server/Item$Info; craftRemainder
	b (I)Lnet/minecraft/server/Item$Info; defaultDurability
	b (Lnet/minecraft/server/Item$Info;)Lnet/minecraft/server/EnumItemRarity; access$100
	c (I)Lnet/minecraft/server/Item$Info; durability
	c (Lnet/minecraft/server/Item$Info;)Lnet/minecraft/server/Item; access$200
	d (Lnet/minecraft/server/Item$Info;)I access$300
	e (Lnet/minecraft/server/Item$Info;)I access$400
	f (Lnet/minecraft/server/Item$Info;)Lnet/minecraft/server/FoodInfo; access$500
net/minecraft/server/PathfinderGoal$Type net/minecraft/world/entity/ai/goal/Goal$Flag
	e $VALUES
crx$a net/minecraft/world/level/timers/TimerCallback$Serializer
	a id
	b cls
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/CustomFunctionCallbackTimer;)V serialize
	b ()Ljava/lang/Class; getCls
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallbackTimer; deserialize
net/minecraft/server/CommandBan net/minecraft/server/commands/BanPlayerCommands
	a ERROR_ALREADY_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/IChatBaseComponent;)I banPlayers
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/EnumAnimation net/minecraft/world/item/UseAnim
	h $VALUES
net/minecraft/server/WorldGenFeatureCoralTree net/minecraft/world/level/levelgen/feature/CoralTreeFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z placeFeature
net/minecraft/server/VoxelShapeSlice net/minecraft/world/phys/shapes/SliceShape
	b delegate
	c axis
	d SLICE_COORDS
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	a (Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/VoxelShapeDiscrete; makeSlice
net/minecraft/server/ItemArmor net/minecraft/world/item/ArmorItem
	a DISPENSE_ITEM_BEHAVIOR
	b slot
	c defense
	d toughness
	e material
	k ARMOR_MODIFIER_UUID_PER_SLOT
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; dispenseArmor
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	b ()Lnet/minecraft/server/EnumItemSlot; getSlot
	c ()I getEnchantmentValue
	d ()Lnet/minecraft/server/ArmorMaterial; getMaterial
	e ()I getDefense
net/minecraft/server/Block net/minecraft/world/level/block/Block
	REGISTRY_ID BLOCK_STATE_REGISTRY
	a UPDATE_SHAPE_ORDER
	b SHAPE_FULL_BLOCK_CACHE
	blockData defaultBlockState
	blockStateList stateDefinition
	c RIGID_SUPPORT_SHAPE
	d CENTER_SUPPORT_SHAPE
	durability explosionResistance
	frictionFactor friction
	g dynamicShape
	h drops
	j item
	k OCCLUSION_CACHE
	l LOGGER
	n lightEmission
	name descriptionId
	q isTicking
	stepSound soundType
	strength destroySpeed
	t materialColor
	v hasCollision
	R_ ()Lnet/minecraft/server/Block$EnumRandomOffset; getOffsetType
	S_ ()Z isPossibleToRespawnInThis
	a (DDDDDD)Lnet/minecraft/server/VoxelShape; box
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/Block;)Z isExceptionForConnection
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/Explosion;)Z dropFromExplosion
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/Entity;)V updateEntityAfterFallOn
	a (Lnet/minecraft/server/IBlockData;)I getLightEmission
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)J getSeed
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V updateNeighbourShapes
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V updateOrDestroy
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; pushEntitiesUp
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;)I getLightColor
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V dropResources
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z canSupportCenter
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockAccess;Ljava/util/List;Lbdr;)V appendHoverText
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/VoxelShape;)Z isShapeFullBlock
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/EnumDirection;)Z isFaceFull
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V popResource
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/Entity;)V onProjectileHit
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V lambda$dropResources$1
	asBlock (Lnet/minecraft/server/Item;)Lnet/minecraft/server/Block; byItem
	b (Lnet/minecraft/server/Block;)Z equalsStone
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateFromNeighbourShapes
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V updateIndirectNeighbourShapes
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)V dropResources
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V lambda$dropResources$4
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	c (Lnet/minecraft/server/Block;)Z equalsDirt
	c (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z canSupportRigidBlock
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isViewBlocking
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z shouldRenderFace
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V dropResources
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V handleRain
	c (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V lambda$dropResources$3
	canPlace (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	d ()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap; lambda$static$0
	d (Lnet/minecraft/server/Block;)Z access$1100
	d (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)V prepareRender
	d (Lnet/minecraft/server/IBlockData;)Z hasCustomBreakingProgress
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isFaceSturdy
	d (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V lambda$dropResources$2
	doPhysics (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	dropExperience (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;I)V popExperience
	dropItems (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/Entity;Lnet/minecraft/server/ItemStack;)V dropResources
	dropNaturally (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
	e (Lnet/minecraft/server/IBlockData;)Z isAir
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MaterialMapColor; getMapColor
	f (Lnet/minecraft/server/IBlockData;)Z canOcclude
	f (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getDestroySpeed
	g ()Lnet/minecraft/server/Item; asItem
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	g (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z hasPostProcess
	getBlockData ()Lnet/minecraft/server/IBlockData; defaultBlockState
	getByCombinedId (I)Lnet/minecraft/server/IBlockData; stateById
	getCombinedId (Lnet/minecraft/server/IBlockData;)I getId
	getDamage (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getDestroyProgress
	getDurability ()F getExplosionResistance
	getInventory (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	getPlacedState (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	getPushReaction (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	getStates ()Lnet/minecraft/server/BlockStateList; getStateDefinition
	getStepSound (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/SoundEffectType; getSoundType
	h (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
	i ()Lnet/minecraft/server/MinecraftKey; getLootTable
	i (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
	interact (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	isComplexRedstone (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	isOccluding (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
	isPowerSource (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	isTicking (Lnet/minecraft/server/IBlockData;)Z isRandomlyTicking
	isTileEntity ()Z isEntityBlock
	j (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isSolidRender
	k ()Lnet/minecraft/server/IChatBaseComponent; getName
	k (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getLightBlock
	l ()Ljava/lang/String; getDescriptionId
	l (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Material; getMaterial
	l (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Vec3D; getOffset
	m ()F getFriction
	n (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
	o (Lnet/minecraft/server/IBlockData;)V registerDefaultState
	p ()Z hasDynamicShape
	postBreak (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V destroy
	postPlace (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	remove (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	updateState (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
net/minecraft/server/BlockTorch net/minecraft/world/level/block/TorchBlock
	d AABB
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
net/minecraft/server/NBTTagString net/minecraft/nbt/StringTag
	a ()B getId
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)V load
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;)Ljava/lang/String; quoteAndEscape
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTBase; copy
	c ()Lnet/minecraft/server/NBTTagString; copy
	c_ ()Ljava/lang/String; getAsString
net/minecraft/server/EntityCat net/minecraft/world/entity/animal/Cat
	bC TEXTURE_BY_TYPE
	bD TEMPT_INGREDIENT
	bE DATA_TYPE_ID
	bF IS_LYING
	bG RELAX_STATE_ONE
	bH DATA_COLLAR_COLOR
	bI avoidPlayersGoal
	bJ temptGoal
	bK lieDownAmount
	bL lieDownAmountO
	bM lieDownAmountTail
	bN lieDownAmountOTail
	bO relaxStateOneAmount
	bP relaxStateOneAmountO
	A ()I getAmbientSoundInterval
	C (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L ()V customServerAiStep
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)V usePlayerItem
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (FF)V causeFallDamage
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityCat; getBreedOffspring
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (D)Z removeWhenFarAway
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	dW ()V reassessTameGoals
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	ee ()Lnet/minecraft/server/MinecraftKey; getResourceLocation
	eg ()Z isLying
	eh ()Z isRelaxStateOne
	ej ()V hiss
	ek ()V handleLieDown
	el ()V updateLieDownAmount
	em ()V updateRelaxStateOneAmount
	h ()V tick
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	n ()V registerGoals
	u (Z)V setLying
	u_ ()V defineSynchedData
	v (F)F getLieDownAmount
	v (Z)V setRelaxStateOne
	w (F)F getLieDownAmountTail
	x (F)F getRelaxStateOneAmount
net/minecraft/server/BlockSapling net/minecraft/world/level/block/SaplingBlock
	b SHAPE
	c treeGrower
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	grow (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)V advanceTree
gf$a net/minecraft/core/particles/ParticleOptions$Deserializer
	b (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParam; fromCommand
	b (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParam; fromNetwork
net/minecraft/server/WorldGenFeatureCircle net/minecraft/world/level/levelgen/feature/DiskReplaceFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureCircleConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/BlockStoneButton net/minecraft/world/level/block/StoneButtonBlock
	a (Z)Lnet/minecraft/server/SoundEffect; getSound
net/minecraft/server/BiomeJungle net/minecraft/world/level/biome/JungleBiome
net/minecraft/server/WorldGenFeatureDefinedStructurePoolFeature net/minecraft/world/level/levelgen/feature/structures/FeaturePoolElement
	a feature
	b defaultJigsawNBT
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;)Z place
	b ()Lnet/minecraft/server/NBTTagCompound; fillDefaultJigsawNBT
net/minecraft/server/WorldGenFeatureJunglePyramid net/minecraft/world/level/levelgen/feature/JunglePyramidFeature
	a ()Lceu$a; getStartFactory
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	d ()I getRandomSalt
net/minecraft/server/CommandBanIp net/minecraft/server/commands/BanIpCommands
	a IP_ADDRESS_PATTERN
	b ERROR_INVALID_IP
	c ERROR_ALREADY_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/server/IChatBaseComponent;)I banIpOrName
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/server/IChatBaseComponent;)I banIp
net/minecraft/server/ArgumentVec2I net/minecraft/commands/arguments/coordinates/ColumnPosArgument
	a ERROR_NOT_COMPLETE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentVec2I; columnPos
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/BlockPosition2D; getColumnPos
ayy$2 net/minecraft/world/inventory/DataSlot$2
	a val$storage
	b val$index
	a (I)V set
	b ()I get
net/minecraft/server/EntityProjectileThrowable net/minecraft/world/entity/projectile/ThrowableItemProjectile
	e DATA_ITEM_STACK
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/ItemStack;)V lambda$setItem$0
	f ()Lnet/minecraft/server/ItemStack; getItem
	getItem ()Lnet/minecraft/server/ItemStack; getItemRaw
	i ()Lnet/minecraft/server/Item; getDefaultItem
	u_ ()V defineSynchedData
net/minecraft/server/ArgumentSerializerString net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lcom/mojang/brigadier/arguments/StringArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/StringArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/StringArgumentType; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
ayy$1 net/minecraft/world/inventory/DataSlot$1
	a val$container
	b val$dataId
	a (I)V set
	b ()I get
net/minecraft/server/ShapeDetector$BlockLoader net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader
	a level
	b loadChunks
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ShapeDetectorBlock; load
net/minecraft/server/ChatClickable$EnumClickAction net/minecraft/network/chat/ClickEvent$Action
	f LOOKUP
	g allowFromServer
	h name
	i $VALUES
	a ()Z isAllowedFromServer
	a (Ljava/lang/String;)Lnet/minecraft/server/ChatClickable$EnumClickAction; getByName
	a (Lnet/minecraft/server/ChatClickable$EnumClickAction;)Lnet/minecraft/server/ChatClickable$EnumClickAction; lambda$static$0
	b ()Ljava/lang/String; getName
net/minecraft/server/ContainerAccess net/minecraft/world/inventory/ContainerLevelAccess
	a NULL
	a (Ljava/util/function/BiConsumer;)V execute
	a (Ljava/util/function/BiConsumer;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Ljava/util/Optional; lambda$execute$0
	a (Ljava/util/function/BiFunction;)Ljava/util/Optional; evaluate
	a (Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object; evaluate
	at (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ContainerAccess; create
net/minecraft/server/ItemStack net/minecraft/world/item/ItemStack
	a EMPTY
	b ATTRIBUTE_MODIFIER_FORMAT
	c LOGGER
	e popTime
	h emptyCacheFlag
	i frame
	j cachedBreakBlock
	k cachedBreakBlockResult
	l cachedPlaceBlock
	m cachedPlaceBlockResult
	B ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	C ()I getPopTime
	E ()Z isEdible
	F ()Ljava/text/DecimalFormat; getAttributeDecimalFormat
	a (Ljava/lang/String;)Lnet/minecraft/server/NBTTagCompound; getOrCreateTagElement
	a (Ljava/lang/String;Lnet/minecraft/server/AttributeModifier;Lnet/minecraft/server/EnumItemSlot;)V addAttributeModifier
	a (Ljava/lang/String;Lnet/minecraft/server/NBTBase;)V addTagElement
	a (Ljava/util/List;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/Enchantment;)V lambda$appendEnchantmentNames$0
	a (Ljava/util/List;Lnet/minecraft/server/NBTTagList;)V appendEnchantmentNames
	a (Lnet/minecraft/server/EntityHuman;Lbdr;)Ljava/util/List; getTooltipLines
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;)Z interactEnemy
	a (Lnet/minecraft/server/EntityItemFrame;)V setFramed
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityHuman;)V hurtEnemy
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getAttributeModifiers
	a (Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/ItemStack; setHoverName
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/ItemStack; of
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/ChatModifier;)V lambda$getDisplayName$2
	a (Lnet/minecraft/server/ShapeDetectorBlock;Lnet/minecraft/server/ShapeDetectorBlock;)Z areSameBlocks
	a (Lnet/minecraft/server/TagRegistry;Lnet/minecraft/server/ShapeDetectorBlock;)Z hasAdventureModeBreakTagForBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;I)V onCraftedBy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V mineBlock
	add (I)V grow
	addEnchantment (Lnet/minecraft/server/Enchantment;I)V enchant
	b (Ljava/lang/String;)Lnet/minecraft/server/NBTTagCompound; getTagElement
	b (Lnet/minecraft/server/IBlockData;)Z canDestroySpecial
	b (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; lambda$expandBlockState$1
	b (Lnet/minecraft/server/ItemStack;)Z sameItemStackIgnoreDurability
	b (Lnet/minecraft/server/TagRegistry;Lnet/minecraft/server/ShapeDetectorBlock;)Z hasAdventureModePlaceTagForBlock
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V onUseTick
	c (Lnet/minecraft/server/ItemStack;)Z matches
	c (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isSame
	canEnchant ()Z isEnchantable
	checkEmpty ()V updateEmptyCacheFlag
	cloneAndSubtract (I)Lnet/minecraft/server/ItemStack; split
	cloneItemStack ()Lnet/minecraft/server/ItemStack; copy
	d (I)V setPopTime
	d (Ljava/lang/String;)Ljava/util/Collection; expandBlockState
	d (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isSameIgnoreDurability
	damage (ILnet/minecraft/server/EntityLiving;Ljava/util/function/Consumer;)V hurtAndBreak
	doMaterialsMatch (Lnet/minecraft/server/ItemStack;)Z sameItem
	e ()Z isDamageableItem
	equals (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z tagMatches
	f ()Z isDamaged
	getDamage ()I getDamageValue
	getEnchantments ()Lnet/minecraft/server/NBTTagList; getEnchantmentTags
	getName ()Lnet/minecraft/server/IChatBaseComponent; getHoverName
	getRepairCost ()I getBaseRepairCost
	h ()I getMaxDamage
	hasEnchantments ()Z isEnchanted
	hasName ()Z hasCustomHoverName
	isDamaged (ILjava/util/Random;Lnet/minecraft/server/EntityPlayer;)Z hurt
	j ()Ljava/lang/String; getDescriptionId
	k ()I getUseDuration
	l ()Lnet/minecraft/server/EnumAnimation; getUseAnimation
	m ()Z useOnRelease
	placeItem (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	removeTag (Ljava/lang/String;)V removeTagKey
	s ()V resetHoverName
	setDamage (I)V setDamageValue
	subtract (I)V shrink
	u ()Z hasFoil
	v ()Lnet/minecraft/server/EnumItemRarity; getRarity
	y ()Z isFramed
	z ()Lnet/minecraft/server/EntityItemFrame; getFrame
net/minecraft/server/DataConverterEntityName net/minecraft/util/datafix/fixes/EntityRenameFix
	a name
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Ljava/lang/Object;Lcom/mojang/datafixers/types/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; getEntity
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
net/minecraft/server/BlockBannerAbstract net/minecraft/world/level/block/AbstractBannerBlock
	a color
	S_ ()Z isPossibleToRespawnInThis
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
net/minecraft/server/Explosion$Effect net/minecraft/world/level/Explosion$BlockInteraction
	d $VALUES
cyu$a net/minecraft/client/gui/Font$Effect
	a x0
	b y0
	c x1
	d y1
	e r
	f g
	g b
	h a
	a (Lcuw;)V render
net/minecraft/server/IMerchant net/minecraft/world/item/trading/Merchant
	a (ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$openTradingScreen$0
	a (Lnet/minecraft/server/MerchantRecipe;)V notifyTrade
	a (Lnet/minecraft/server/MerchantRecipeList;)V overrideOffers
	ea ()Z showProgressBar
	eb ()Lnet/minecraft/server/SoundEffect; getNotifyTradeSound
	ei ()Z canRestock
	getExperience ()I getVillagerXp
	getTrader ()Lnet/minecraft/server/EntityHuman; getTradingPlayer
	getWorld ()Lnet/minecraft/server/World; getLevel
	i (Lnet/minecraft/server/ItemStack;)V notifyTradeUpdated
	openTrade (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IChatBaseComponent;I)V openTradingScreen
	s (I)V overrideXp
net/minecraft/server/PersistentIndexed net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData
	a all
	b remaining
	a ()Lit/unimi/dsi/fastutil/longs/LongSet; getAll
	a (J)V addIndex
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (J)Z hasStartIndex
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c (J)Z hasUnhandledIndex
	d (J)V removeIndex
ayy$3 net/minecraft/world/inventory/DataSlot$3
	a value
	a (I)V set
	b ()I get
net/minecraft/server/WorldGenFeatureReplaceBlockConfiguration net/minecraft/world/level/levelgen/feature/ReplaceBlockConfiguration
	a target
	b state
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureReplaceBlockConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/PacketPlayOutBoss$Action net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation
	g $VALUES
cin$a net/minecraft/world/level/levelgen/structure/OceanRuinPieces$OceanRuinPiece
	d biomeType
	e integrity
	f templateLocation
	g rotation
	h isLarge
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getHeight
	a (Lnet/minecraft/server/DefinedStructureManager;)V loadTemplate
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/LootEnchantFunction net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction
	a value
	c limit
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootEnchantFunction;)Lnet/minecraft/server/LootValueBounds; access$100
	a (Lnet/minecraft/server/LootValueBounds;)Lcqj$a; lootingMultiplier
	b ()Z hasLimit
	b (Lnet/minecraft/server/LootEnchantFunction;)Z access$200
	c (Lnet/minecraft/server/LootEnchantFunction;)I access$300
net/minecraft/server/WorldGenStrongholdPieces net/minecraft/world/level/levelgen/structure/StrongholdPieces
	a STRONGHOLD_PIECE_WEIGHTS
	b currentPieces
	c imposedPiece
	d totalWeight
	e SMOOTH_STONE_SELECTOR
	a ()V resetPieces
	a (Ljava/lang/Class;)Ljava/lang/Class; access$102
	a (Ljava/lang/Class;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece; findAndCreatePieceFactory
	a (Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/StructurePiece; access$000
	b ()Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStones; access$200
	b (Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece; generatePieceFromSmallDoor
	c ()Z updatePieceWeight
	c (Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/StructurePiece; generateAndAddPiece
net/minecraft/server/DataConverterNamedEntity net/minecraft/util/datafix/fixes/NamedEntityFix
	a name
	b entityName
	c type
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/BehaviorFarm net/minecraft/world/entity/ai/behavior/HarvestFarmland
	a aboveFarmlandPos
	b canPlantStuff
	c wantsToReapStuff
	d nextOkStartTime
	e timeWorkedSoFar
	f validFarmlandAroundVillager
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;)Z validPos
	a (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/BlockPosition; getValidFarmland
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
dkn$1 net/minecraft/client/particle/AttackSweepParticle$1
cyu$1 net/minecraft/client/gui/Font$1
net/minecraft/server/WorldGenFeaturePillagerOutpostPieces net/minecraft/world/level/levelgen/structure/PillagerOutpostPieces
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Lnet/minecraft/server/SeededRandom;)V addPieces
net/minecraft/server/FileUtils net/minecraft/FileUtil
	a COPY_COUNTER_PATTERN
	b RESERVED_WINDOWS_FILENAMES
	a (Ljava/nio/file/Path;)Z isPathNormalized
	a (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; findAvailableName
	b (Ljava/nio/file/Path;)Z isPathPortable
	b (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path; createPathToResource
net/minecraft/server/WorldGenFeatureChoice net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureChoiceConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/WorldGenEndCity net/minecraft/world/level/levelgen/feature/EndCityFeature
	a ()Lceu$a; getStartFactory
	a (IILnet/minecraft/server/ChunkGenerator;)I access$000
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;II)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IIII)Lnet/minecraft/server/ChunkCoordIntPair; getPotentialFeatureChunkFromLocationWithOffset
	b ()Ljava/lang/String; getFeatureName
	b (IILnet/minecraft/server/ChunkGenerator;)I getYPositionForFeature
	c ()I getLookupRange
ayh$1 net/minecraft/world/food/FoodProperties$1
net/minecraft/server/ChunkProviderTheEnd net/minecraft/world/level/levelgen/TheEndLevelSource
	h dimensionSpawnPosition
	a (DDI)D getYOffset
	a (II)[D getDepthAndScale
	a ([DII)V fillNoiseColumn
	b ()I getSpawnHeight
	f ()I getSeaLevel
	g ()D getTopSlideStart
	h ()D getBottomSlideStart
	j ()Lnet/minecraft/server/BlockPosition; getDimensionSpawnPosition
net/minecraft/server/MethodProfilerResultsEmpty net/minecraft/util/profiling/EmptyProfileResults
	a EMPTY
	a ()J getStartTimeNano
	a (Ljava/io/File;)Z saveResults
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	b ()I getStartTimeTicks
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	e ()Ljava/lang/String; getProfilerResults
net/minecraft/server/DebugOutputStream net/minecraft/server/DebugLoggedPrintStream
	a (Ljava/lang/String;)V logLine
net/minecraft/server/PathfinderGoalWaterJump net/minecraft/world/entity/ai/goal/DolphinJumpGoal
	a STEPS_TO_CHECK
	b dolphin
	c interval
	d breached
	C_ ()Z isInterruptable
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;III)Z waterIsClear
	b ()Z canContinueToUse
	b (Lnet/minecraft/server/BlockPosition;III)Z surfaceIsClear
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/EntityFishSchool net/minecraft/world/entity/animal/AbstractSchoolingFish
	b leader
	c schoolSize
	a (Ljava/util/stream/Stream;)V addFollowers
	a (Lnet/minecraft/server/EntityFishSchool;)Lnet/minecraft/server/EntityFishSchool; startFollowing
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/server/EntityFishSchool;)V lambda$addFollowers$1
	c (Lnet/minecraft/server/EntityFishSchool;)Z lambda$addFollowers$0
	dC ()I getMaxSpawnClusterSize
	dV ()Z canRandomSwim
	dX ()I getMaxSchoolSize
	dY ()Z isFollower
	dZ ()V stopFollowing
	ea ()Z canBeFollowed
	eb ()Z hasFollowers
	ec ()Z inRangeOfLeader
	ed ()V pathToLeader
	ee ()V addFollower
	ef ()V removeFollower
	h ()V tick
	n ()V registerGoals
net/minecraft/server/PacketPlayInEnchantItem net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket
	a containerId
	b buttonId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getButtonId
net/minecraft/server/IPlayerFileData net/minecraft/world/level/storage/PlayerIO
net/minecraft/server/CriterionInstance net/minecraft/advancements/CriterionTriggerInstance
	a ()Lnet/minecraft/server/MinecraftKey; getCriterion
	b ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/server/ResourcePackSourceFolder net/minecraft/server/packs/repository/FolderRepositorySource
	a RESOURCEPACK_FILTER
	file folder
	a (Ljava/io/File;)Ljava/util/function/Supplier; createSupplier
	a (Ljava/util/Map;Lxa$b;)V loadPacks
	b (Ljava/io/File;)Lnet/minecraft/server/IResourcePack; lambda$createSupplier$2
	c (Ljava/io/File;)Lnet/minecraft/server/IResourcePack; lambda$createSupplier$1
	d (Ljava/io/File;)Z lambda$static$0
net/minecraft/server/Counter net/minecraft/stats/StatFormatter
	a (I)Ljava/lang/String; lambda$static$3
	a (Ljava/text/DecimalFormat;)V lambda$static$0
	b (I)Ljava/lang/String; lambda$static$2
	c (I)Ljava/lang/String; lambda$static$1
dpu$a net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$PendingUpload
	a this$0
	b future
	c dist
	a (Ldpu$a;)I compareTo
	b (Ldpu$a;)Lcom/google/common/util/concurrent/ListenableFutureTask; access$000
net/minecraft/server/BlockAccessAir net/minecraft/world/level/EmptyBlockGetter
	b $VALUES
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	d (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	e_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
net/minecraft/server/DataConverterRecipes net/minecraft/util/datafix/fixes/RecipesFix
	a RECIPES
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$2
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
net/minecraft/server/ChunkGeneratorType net/minecraft/world/level/chunk/ChunkGeneratorType
	a SURFACE
	b CAVES
	c FLOATING_ISLANDS
	d DEBUG
	e FLAT
	f factory
	g isPublic
	h settingsFactory
	a ()Lnet/minecraft/server/GeneratorSettingsDefault; createSettings
	a (Ljava/lang/String;Lnet/minecraft/server/ChunkGeneratorFactory;Ljava/util/function/Supplier;Z)Lnet/minecraft/server/ChunkGeneratorType; register
	b ()Z isPublic
net/minecraft/server/IBlockData net/minecraft/world/level/block/state/BlockState
	c cache
	d lightEmission
	e useShapeForLightOcclusion
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/IBlockData; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$serialize$0
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/IBlockData;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/BlockPosition;)J getSeed
	a (Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V updateNeighbourShapes
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)Z entityCanStandOn
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/VoxelShape; getFaceOcclusionShape
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;)I getLightColor
	a (Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/Entity;)V onProjectileHit
	b (Lcom/mojang/datafixers/Dynamic;)Ljava/lang/String; lambda$deserialize$2
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V updateIndirectNeighbourShapes
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getLightBlock
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c ()V initCache
	c (Lcom/mojang/datafixers/Dynamic;)Ljava/lang/String; lambda$deserialize$1
	c (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MaterialMapColor; getMapColor
	c (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	canPlace (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	d (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
	d (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isFaceSturdy
	doPhysics (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	dropNaturally (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
	f ()Z hasLargeCollisionShape
	f (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getDestroySpeed
	g ()Z useShapeForLightOcclusion
	g (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isSolidRender
	getDamage (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getDestroyProgress
	getPushReaction ()Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	h ()I getLightEmission
	interact (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	isComplexRedstone ()Z hasAnalogOutputSignal
	isOccluding (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
	isPowerSource ()Z isSignalSource
	j ()Z hasCustomBreakingProgress
	j (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
	k ()Lnet/minecraft/server/EnumRenderType; getRenderShape
	k (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
	l (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Vec3D; getOffset
	m (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isViewBlocking
	n (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z hasPostProcess
	o ()Z canOcclude
	o (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isCollisionShapeFullBlock
	p ()Lnet/minecraft/server/Fluid; getFluidState
	q ()Z isRandomlyTicking
	r ()Lnet/minecraft/server/SoundEffectType; getSoundType
	remove (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	updateState (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
net/minecraft/server/ItemExpBottle net/minecraft/world/item/ExperienceBottleItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
ded$1 net/minecraft/client/gui/screens/inventory/LecternScreen$1
	a this$0
	a (Lnet/minecraft/server/Container;II)V setContainerData
	a (Lnet/minecraft/server/Container;ILnet/minecraft/server/ItemStack;)V slotChanged
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/NonNullList;)V refreshContainer
csk$1 net/minecraft/world/phys/shapes/ArrayVoxelShape$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
net/minecraft/server/CriterionTriggerSummonedEntity net/minecraft/advancements/critereon/SummonedEntityTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbq$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/BehaviorStrollPlaceList net/minecraft/world/entity/ai/behavior/StrollToPoiList
	a strollToMemoryType
	b mustBeCloseToMemoryType
	c speed
	d closeEnoughDist
	e maxDistanceFromPoi
	f nextOkStartTime
	g targetPos
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
ayh$a net/minecraft/world/food/FoodProperties$Builder
	a nutrition
	b saturationModifier
	c isMeat
	d canAlwaysEat
	e fastFood
	f effects
	a ()Layh$a; meat
	a (F)Layh$a; saturationMod
	a (I)Layh$a; nutrition
	a (Lnet/minecraft/server/MobEffect;F)Layh$a; effect
	b ()Layh$a; alwaysEat
	c ()Layh$a; fast
	d ()Lnet/minecraft/server/FoodInfo; build
net/minecraft/server/LightEngine net/minecraft/world/level/lighting/LevelLightEngine
	a blockEngine
	b skyEngine
	a ()Z hasLightWork
	a (IZZ)I runUpdates
	a (Lnet/minecraft/server/BlockPosition;)V checkBlock
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/server/EnumSkyBlock;)Lnet/minecraft/server/LightEngineLayerEventListener; getLayerListener
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;)Ljava/lang/String; getDebugData
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/NibbleArray;)V queueSectionData
	a (Lnet/minecraft/server/SectionPosition;Z)V updateSectionStatus
	b (Lnet/minecraft/server/ChunkCoordIntPair;Z)V retainData
net/minecraft/server/Activity net/minecraft/world/entity/schedule/Activity
	k name
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/Activity; register
net/minecraft/server/BlockPropertyComparatorMode net/minecraft/world/level/block/state/properties/ComparatorMode
	c name
	d $VALUES
	m ()Ljava/lang/String; getSerializedName
net/minecraft/server/EntityBoat$EnumStatus net/minecraft/world/entity/vehicle/Boat$Status
	f $VALUES
net/minecraft/server/PacketPlayOutHeldItemSlot net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket
	a slot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getSlot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/BlockPropertyAttachPosition net/minecraft/world/level/block/state/properties/AttachFace
	d name
	e $VALUES
	m ()Ljava/lang/String; getSerializedName
dkn$a net/minecraft/client/particle/AttackSweepParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/StructureGenerator net/minecraft/world/level/levelgen/feature/StructureFeature
	a LOGGER
	a ()Lceu$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;II)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IIII)Lnet/minecraft/server/ChunkCoordIntPair; getPotentialFeatureChunkFromLocationWithOffset
	a (Lnet/minecraft/server/GeneratorAccess;II)Ljava/util/List; dereferenceStructureStarts
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z isInsideBoundingFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/StructureStart; getStructureAt
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	b ()Ljava/lang/String; getFeatureName
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z isInsideFeature
	c ()I getLookupRange
	g ()Z supportsProjection
net/minecraft/server/ItemSkullPlayer net/minecraft/world/item/PlayerHeadItem
	a (Lnet/minecraft/server/NBTTagCompound;)Z verifyTagAfterLoad
	g (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IChatBaseComponent; getName
net/minecraft/server/PacketPlayInAdvancements net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket
	a action
	b tab
	a (Lnet/minecraft/server/Advancement;)Lnet/minecraft/server/PacketPlayInAdvancements; openedTab
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/PacketPlayInAdvancements; closedScreen
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketPlayInAdvancements$Status; getAction
	d ()Lnet/minecraft/server/MinecraftKey; getTab
net/minecraft/server/WorldData net/minecraft/world/level/storage/LevelData
	A gameType
	B generateMapFeatures
	C hardcore
	D allowCommands
	E initialized
	F difficulty
	G difficultyLocked
	H borderX
	I borderZ
	J borderSize
	K borderSizeLerpTime
	L borderSizeLerpTarget
	M borderSafeZone
	N borderDamagePerBlock
	O borderWarningBlocks
	P borderWarningTime
	Q disabledDataPacks
	R enabledDataPacks
	S dimensionData
	T customBossEvents
	U wanderingTraderSpawnDelay
	V wanderingTraderSpawnChance
	W wanderingTraderId
	X gameRules
	Y scheduledEvents
	a DEFAULT_DIFFICULTY
	b minecraftVersionName
	c minecraftVersion
	d snapshot
	e seed
	f generator
	g generatorOptions
	h legacyCustomOptions
	i xSpawn
	j ySpawn
	k zSpawn
	l gameTime
	m dayTime
	n lastPlayed
	o sizeOnDisk
	p fixerUpper
	q playerDataVersion
	r upgradedPlayerTag
	s loadedPlayerTag
	u version
	B ()D getBorderX
	C ()D getBorderZ
	D ()D getBorderSize
	E ()J getBorderSizeLerpTime
	F ()D getBorderSizeLerpTarget
	G ()D getBorderSafeZone
	H ()D getBorderDamagePerBlock
	I ()I getBorderWarningBlocks
	J ()I getBorderWarningTime
	K ()I getMinecraftVersion
	L ()Z isSnapshot
	M ()Ljava/lang/String; getMinecraftVersionName
	N ()Ljava/util/Set; getDisabledDataPacks
	O ()Ljava/util/Set; getEnabledDataPacks
	Q ()I getWanderingTraderSpawnDelay
	R ()I getWanderingTraderSpawnChance
	S ()Ljava/util/UUID; getWanderingTraderId
	T ()V updatePlayerTag
	U ()Ljava/lang/String; lambda$fillCrashReportCategory$8
	V ()Ljava/lang/String; lambda$fillCrashReportCategory$7
	W ()Ljava/lang/String; lambda$fillCrashReportCategory$6
	X ()Ljava/lang/String; lambda$fillCrashReportCategory$5
	Y ()Ljava/lang/String; lambda$fillCrashReportCategory$4
	Z ()Ljava/lang/String; lambda$fillCrashReportCategory$3
	a (D)V setBorderSize
	a (I)V setXSpawn
	a (Ljava/util/UUID;)V setWanderingTraderId
	a (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/NBTTagCompound; getDimensionData
	a (Lnet/minecraft/server/DimensionManager;Lnet/minecraft/server/NBTTagCompound;)V setDimensionData
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; createTag
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTTagCompound;)V setTagData
	a (Lnet/minecraft/server/WorldSettings;)V setLevelSettings
	a (Lnet/minecraft/server/WorldType;)V setGenerator
	aa ()Ljava/lang/String; lambda$fillCrashReportCategory$2
	ab ()Ljava/lang/String; lambda$fillCrashReportCategory$1
	ac ()Ljava/lang/String; lambda$fillCrashReportCategory$0
	b ()I getXSpawn
	b (D)V setBorderSizeLerpTarget
	b (I)V setYSpawn
	b (Lnet/minecraft/server/NBTTagCompound;)V setGeneratorOptions
	c ()I getYSpawn
	c (D)V setBorderZ
	c (I)V setZSpawn
	c (J)V setBorderSizeLerpTime
	c (Lnet/minecraft/server/NBTTagCompound;)V setCustomBossEvents
	c (Z)V setAllowCommands
	d ()I getZSpawn
	d (D)V setBorderX
	d (I)V setVersion
	d (Z)V setInitialized
	e (D)V setBorderSafeZone
	e (Z)V setDifficultyLocked
	f (D)V setBorderDamagePerBlock
	f (Z)V setGenerateMapFeatures
	g ()J getSizeOnDisk
	g (I)V setClearWeatherTime
	g (Z)V setHardcore
	getName ()Ljava/lang/String; getLevelName
	getThunderDuration ()I getThunderTime
	getTime ()J getGameTime
	getType ()Lnet/minecraft/server/WorldType; getGeneratorType
	getWeatherDuration ()I getRainTime
	h ()Lnet/minecraft/server/NBTTagCompound; getLoadedPlayerTag
	h (I)V setBorderWarningBlocks
	hasStorm ()Z isRaining
	i (I)V setBorderWarningTime
	j ()I getVersion
	j (I)V setWanderingTraderSpawnDelay
	k ()J getLastPlayed
	k (I)V setWanderingTraderSpawnChance
	setName (Ljava/lang/String;)V setLevelName
	setStorm (Z)V setRaining
	setThunderDuration (I)V setThunderTime
	setTime (J)V setGameTime
	setWeatherDuration (I)V setRainTime
	shouldGenerateMapFeatures ()Z isGenerateMapFeatures
	t ()Z getAllowCommands
	u ()Z isInitialized
	v ()Lnet/minecraft/server/GameRules; getGameRules
	y ()Lnet/minecraft/server/CustomFunctionCallbackTimerQueue; getScheduledEvents
	z ()I getClearWeatherTime
net/minecraft/server/PacketPlayOutCombatEvent$EnumCombatEventType net/minecraft/network/protocol/game/ClientboundPlayerCombatPacket$Event
	d $VALUES
bph$1 net/minecraft/world/level/block/GrindstoneBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
net/minecraft/server/WorldGenMegaTreeAbstract net/minecraft/world/level/levelgen/feature/MegaTreeFeature
	a baseHeight
	aS trunk
	aT leaf
	aU heightInterval
	a (Ljava/util/Random;)I calcTreeHeigth
	a (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;I)Z checkIsFree
	a (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;I)Z prepareTree
	a (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/StructureBoundingBox;Ljava/util/Set;)V placeDoubleTrunkLeaves
	b (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;)Z makeDirtFloor
	b (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/StructureBoundingBox;Ljava/util/Set;)V placeSingleTrunkLeaves
net/minecraft/server/ItemCarrotStick net/minecraft/world/item/CarrotOnAStickItem
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$use$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/EntityChicken net/minecraft/world/entity/animal/Chicken
	bA flapSpeed
	bB oFlapSpeed
	bC oFlap
	bD flapping
	bF isChickenJockey
	bG FOOD_ITEMS
	bz flap
	eggLayTime eggTime
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (FF)V causeFallDamage
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityChicken; getBreedOffspring
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (D)Z removeWhenFarAway
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	d (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	k ()V aiStep
	k (Lnet/minecraft/server/Entity;)V positionRider
	n ()V registerGoals
	r (Z)V setChickenJockey
dmc$a net/minecraft/client/particle/SuspendedParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
auu$1 net/minecraft/world/entity/monster/Phantom$1
net/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplates net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePools
	a pools
	a ()Ljava/util/Set; getPoolLocations
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate; getPool
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate;)V register
net/minecraft/server/PlayerChunkMap$EntityTracker net/minecraft/server/level/ChunkMap$TrackedEntity
	a this$0
	e lastSectionPos
	trackedPlayers seenBy
	tracker entity
	trackerEntry serverEntity
	trackingDistance range
	a ()V broadcastRemoved
	a (Lnet/minecraft/server/PlayerChunkMap$EntityTracker;)Lnet/minecraft/server/Entity; access$000
	a (Lnet/minecraft/server/PlayerChunkMap$EntityTracker;Lnet/minecraft/server/SectionPosition;)Lnet/minecraft/server/SectionPosition; access$102
	b (Lnet/minecraft/server/PlayerChunkMap$EntityTracker;)Lnet/minecraft/server/SectionPosition; access$100
	broadcastIncludingSelf (Lnet/minecraft/server/Packet;)V broadcastAndSend
	c (Lnet/minecraft/server/PlayerChunkMap$EntityTracker;)Lnet/minecraft/server/EntityTrackerEntry; access$200
	clear (Lnet/minecraft/server/EntityPlayer;)V removePlayer
	track (Ljava/util/List;)V updatePlayers
net/minecraft/server/PacketPlayOutScoreboardTeam net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket
	a name
	b displayName
	c playerPrefix
	d playerSuffix
	e nametagVisibility
	f collisionRule
	g color
	h players
	i method
	j options
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/lang/String; getName
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	d ()Ljava/util/Collection; getPlayers
	e ()I getMethod
	f ()I getOptions
	g ()Lnet/minecraft/server/EnumChatFormat; getColor
	h ()Ljava/lang/String; getNametagVisibility
	i ()Ljava/lang/String; getCollisionRule
	j ()Lnet/minecraft/server/IChatBaseComponent; getPlayerPrefix
	k ()Lnet/minecraft/server/IChatBaseComponent; getPlayerSuffix
net/minecraft/server/ChatMessageType net/minecraft/network/chat/ChatType
	d index
	e interrupt
	f $VALUES
	a ()B getIndex
	a (B)Lnet/minecraft/server/ChatMessageType; getForIndex
	b ()Z shouldInterrupt
net/minecraft/server/PacketLoginOutEncryptionBegin net/minecraft/network/protocol/login/ClientboundHelloPacket
	a serverId
	b publicKey
	c nonce
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginOutListener;)V handle
	b ()Ljava/lang/String; getServerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/security/PublicKey; getPublicKey
	d ()[B getNonce
net/minecraft/server/EntityEnderman net/minecraft/world/entity/monster/EnderMan
	b SPEED_MODIFIER_ATTACKING_UUID
	bA ENDERMITE_SELECTOR
	bB lastCreepySound
	bC targetChangeTime
	bz DATA_CREEPY
	c SPEED_MODIFIER_ATTACKING
	d DATA_CARRY_STATE
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L ()V customServerAiStep
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;)Z teleportTowards
	a (Lnet/minecraft/server/EntityEnderman;Lnet/minecraft/server/Entity;)Z access$100
	a (Lnet/minecraft/server/EntityEnderman;Lnet/minecraft/server/EntityHuman;)Z access$000
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	dV ()Z teleport
	dX ()Z isCreepy
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	f (Lnet/minecraft/server/EntityHuman;)Z isLookingAtMe
	g (Lnet/minecraft/server/EntityLiving;)V setTarget
	getCarried ()Lnet/minecraft/server/IBlockData; getCarriedBlock
	h (Lnet/minecraft/server/EntityLiving;)Z lambda$static$0
	k ()V aiStep
	l ()V playCreepySound
	l (DDD)Z teleport
	n ()V registerGoals
	setCarried (Lnet/minecraft/server/IBlockData;)V setCarriedBlock
	u_ ()V defineSynchedData
dxt$a net/minecraft/client/resources/SkinManager$SkinTextureCallback
ug$1 net/minecraft/server/commands/data/EntityDataAccessor$1
	a val$arg
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandDataAccessor; access
net/minecraft/server/CriterionTriggerItemDurabilityChanged net/minecraft/advancements/critereon/ItemDurabilityTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;I)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbb$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece
	a BASE_GRAY
	b BASE_LIGHT
	c BASE_BLACK
	d DOT_DECO_DATA
	e LAMP_BLOCK
	f FILL_BLOCK
	g FILL_KEEP
	h GRIDROOM_SOURCE_INDEX
	i GRIDROOM_TOP_CONNECT_INDEX
	j GRIDROOM_LEFTWING_CONNECT_INDEX
	k GRIDROOM_RIGHTWING_CONNECT_INDEX
	l roomDefinition
	a (I)I getRoomX
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;III)Z spawnElder
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIIIII)V generateWaterBox
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIIIIILnet/minecraft/server/IBlockData;)V generateBoxOnFillOnly
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIZ)V generateDefaultFloor
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructureBoundingBox;IIII)Z chunkIntersects
	b (I)I getRoomY
	b (III)I getRoomIndex
	c (I)I getRoomZ
net/minecraft/server/ChatComponentNBT net/minecraft/network/chat/NbtComponent
	b interpreting
	c nbtPathPattern
	d compiledNbtPath
	e LOGGER
	a (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/stream/Stream; getData
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatBaseComponent; resolve
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;ILjava/lang/String;)Ljava/util/stream/Stream; lambda$resolve$1
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; lambda$resolve$2
	a (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/stream/Stream; lambda$resolve$0
	b (Ljava/lang/String;)Lcr$h; compileNbtPath
	d ()Ljava/lang/String; getContents
	i ()Ljava/lang/String; getNbtPath
	j ()Z isInterpreting
net/minecraft/server/LightEngineStorage net/minecraft/world/level/lighting/LayerLightSectionStorage
	a EMPTY_DATA
	b dataSectionSet
	c toMarkNoData
	d toMarkData
	e visibleSectionData
	f updatingSectionData
	g changedSections
	h sectionsAffectedByLightUpdates
	i queuedSections
	j hasToRemove
	k DIRECTIONS
	l layer
	m chunkSource
	n columnsToRetainQueuedDataFor
	o toRemove
	a ()Z hasInconsistencies
	a (JI)V setLevel
	a (JLnet/minecraft/server/NibbleArray;)V queueSectionData
	a (JZ)Lnet/minecraft/server/NibbleArray; getDataLayer
	a (Lnet/minecraft/server/LightEngineLayer;J)V clearQueuedSectionBlocks
	a (Lnet/minecraft/server/LightEngineLayer;ZZ)V markNewInconsistencies
	a (Lnet/minecraft/server/LightEngineStorageArray;J)Lnet/minecraft/server/NibbleArray; getDataLayer
	b (J)I getLevelFromSource
	b (JI)V setStoredLevel
	b (JZ)V enableLightSources
	c ()V runAllUpdates
	c (J)I getLevel
	c (JZ)V retainData
	d ()V swapSectionMap
	d (J)I getLightValue
	d (JZ)V updateSectionStatus
	g (J)Z storingLightForSection
	h (J)Lnet/minecraft/server/NibbleArray; getDataLayerData
	i (J)I getStoredLevel
	j (J)Lnet/minecraft/server/NibbleArray; createDataLayer
	k (J)V onNodeAdded
	l (J)V onNodeRemoved
brn$1 net/minecraft/world/level/block/ShulkerBoxBlock$1
	a $SwitchMap$net$minecraft$world$item$DyeColor
auu$b net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal
	a this$0
	b attackTargeting
	c nextScanTick
	a ()Z canUse
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityHuman;)I lambda$canUse$0
	b ()Z canContinueToUse
dmc$1 net/minecraft/client/particle/SuspendedParticle$1
net/minecraft/server/TileInventory net/minecraft/world/SimpleMenuProvider
	a title
	b menuConstructor
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/BlockSkull net/minecraft/world/level/block/SkullBlock
	a ROTATION
	b SHAPE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	h (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
cpj$b net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootEntryAbstract;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEntryChildrenAbstract; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEntryChildrenAbstract; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryChildrenAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEntryAbstract; deserialize
cpj$a net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor
net/minecraft/server/DataPaletteHash net/minecraft/world/level/chunk/HashMapPalette
	a registry
	b values
	c resizeHandler
	d reader
	e writer
	f bits
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (Ljava/lang/Object;)I idFor
	a (Lnet/minecraft/server/NBTTagList;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()I getSize
	b (Ljava/lang/Object;)Z maybeHas
	b (Lnet/minecraft/server/NBTTagList;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
cox$1 net/minecraft/world/level/storage/loot/IntLimiter$1
bad$1 net/minecraft/world/item/ArmorItem$1
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
net/minecraft/server/DataWatcher$Item net/minecraft/network/syncher/SynchedEntityData$DataItem
	a accessor
	b value
	c dirty
	a ()Lnet/minecraft/server/DataWatcherObject; getAccessor
	a (Ljava/lang/Object;)V setValue
	a (Lnet/minecraft/server/DataWatcher$Item;)Lnet/minecraft/server/DataWatcherObject; access$000
	a (Z)V setDirty
	b ()Ljava/lang/Object; getValue
	b (Lnet/minecraft/server/DataWatcher$Item;)Ljava/lang/Object; access$100
	c ()Z isDirty
	d ()Lnet/minecraft/server/DataWatcher$Item; copy
net/minecraft/server/ControllerLookDolphin net/minecraft/world/entity/ai/control/DolphinLookControl
	h maxYRotFromCenter
	a ()V tick
auu$h net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal
	b this$0
	g ()Z touchingTarget
auu$g net/minecraft/world/entity/monster/Phantom$PhantomMoveControl
	i this$0
	j speed
	a ()V tick
net/minecraft/server/RecipeFireworks net/minecraft/world/item/crafting/FireworkRocketRecipe
	a PAPER_INGREDIENT
	b GUNPOWDER_INGREDIENT
	c STAR_INGREDIENT
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	c ()Lnet/minecraft/server/ItemStack; getResultItem
auu$i net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal
	a this$0
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
auu$d net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl
	a this$0
	a ()V clientTick
net/minecraft/server/LightEngineLayerEventListener net/minecraft/world/level/lighting/LayerLightEventListener
	a (Lnet/minecraft/server/SectionPosition;)Lnet/minecraft/server/NibbleArray; getDataLayerData
	b (Lnet/minecraft/server/BlockPosition;)I getLightValue
net/minecraft/server/ArgumentBlockPredicate net/minecraft/commands/arguments/blocks/BlockPredicateArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	a ()Lnet/minecraft/server/ArgumentBlockPredicate; blockPredicate
	a (Lcom/mojang/brigadier/StringReader;)Ldf$b; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; getBlockPredicate
	a (Ldf$a;Lnet/minecraft/server/TagRegistry;)Ljava/util/function/Predicate; lambda$parse$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/ArgumentBlock;Lnet/minecraft/server/TagRegistry;)Ljava/util/function/Predicate; lambda$parse$2
auu$c net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal
	a this$0
	b nextSweepTick
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()V setAnchorAboveTarget
net/minecraft/server/MapGeneratorUtils net/minecraft/core/MapFiller
	a (Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/Map; hashMapFrom
	a (Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/util/Map;)Ljava/util/Map; from
	b (Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/Map; linkedHashMapFrom
net/minecraft/server/IChatBaseComponent$ChatSerializer net/minecraft/network/chat/Component$Serializer
	a GSON
	b JSON_READER_POS
	c JSON_READER_LINESTART
	a ()Ljava/lang/reflect/Field; lambda$static$2
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/IChatBaseComponent; fromJson
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/IChatBaseComponent; deserialize
	a (Lcom/google/gson/stream/JsonReader;)I getPos
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IChatBaseComponent; fromJson
	a (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; fromJson
	a (Lnet/minecraft/server/ChatModifier;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeStyle
	a (Lnet/minecraft/server/IChatBaseComponent;)Ljava/lang/String; toJson
	a (Lnet/minecraft/server/IChatBaseComponent;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	b ()Ljava/lang/reflect/Field; lambda$static$1
	b (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; fromJsonLenient
	b (Lnet/minecraft/server/IChatBaseComponent;)Lcom/google/gson/JsonElement; toJsonTree
	c ()Lcom/google/gson/Gson; lambda$static$0
auu$f net/minecraft/world/entity/monster/Phantom$PhantomLookControl
	h this$0
	a ()V tick
auu$e net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal
	a this$0
	c angle
	d distance
	e height
	f clockwise
	a ()Z canUse
	c ()V start
	e ()V tick
	h ()V selectNext
net/minecraft/server/RegistryID net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap
	a EMPTY_SLOT
	b keys
	c values
	d byId
	e nextId
	f size
	a ()V clear
	a (Ljava/lang/Object;I)V addMapping
	b ()I size
	b (I)Z contains
	b (Ljava/lang/Object;)Z contains
	b (Ljava/lang/Object;I)I indexOf
	c ()I nextId
	c (I)I getValue
	c (Ljava/lang/Object;)I add
	d (I)V grow
	d (Ljava/lang/Object;)I hash
	e (I)I findEmpty
	fromId (I)Ljava/lang/Object; byId
net/minecraft/server/IScoreboardCriteria net/minecraft/world/scores/criteria/ObjectiveCriteria
	PLAYER_KILL_COUNT KILL_COUNT_PLAYERS
	TOTAL_KILL_COUNT KILL_COUNT_ALL
	XP EXPERIENCE
	criteria CRITERIA_BY_NAME
	m TEAM_KILL
	n KILLED_BY_TEAM
	o name
	p readOnly
	q renderType
	a (Ljava/lang/String;)Ljava/util/Optional; byName
	a (Ljava/lang/String;ILnet/minecraft/server/StatisticWrapper;)Ljava/util/Optional; lambda$byName$0
	a (Lnet/minecraft/server/StatisticWrapper;Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; getStat
	e ()Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay; getDefaultRenderType
net/minecraft/server/BehaviorTradeVillager net/minecraft/world/entity/ai/behavior/TradeWithVillager
	a trades
	a (Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/server/Item;)Z lambda$figureOutWhatIAmWillingToTrade$0
	a (Lnet/minecraft/server/EntityVillager;Ljava/util/Set;Lnet/minecraft/server/EntityLiving;)V throwHalfStack
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityVillager;)Ljava/util/Set; figureOutWhatIAmWillingToTrade
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
dcs$c$a net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList$MobRow
	a this$1
	b type
	a (Ljava/lang/String;I)Ljava/lang/String; killsMessage
	b (Ljava/lang/String;I)Ljava/lang/String; killedByMessage
net/minecraft/server/BiomeColdTaigaHills net/minecraft/world/level/biome/SnowyTaigaHillsBiome
net/minecraft/server/WorldChunkManagerTheEnd net/minecraft/world/level/biome/TheEndBiomeSource
	c islandNoise
	d random
	e possibleBiomes
	a (II)Lnet/minecraft/server/BiomeBase; getBiome
	a (III)Ljava/util/Set; getBiomesWithin
	a (IIIIZ)[Lnet/minecraft/server/BiomeBase; getBiomeBlock
	a (IIILjava/util/List;)Z containsOnly
	a (IIILjava/util/List;Ljava/util/Random;)Lnet/minecraft/server/BlockPosition; findBiome
	a (Lnet/minecraft/server/StructureGenerator;)Z canGenerateStructure
	b ()Ljava/util/Set; getSurfaceBlocks
	b (Lnet/minecraft/server/StructureGenerator;)Ljava/lang/Boolean; lambda$canGenerateStructure$0
	c (II)F getHeightValue
net/minecraft/server/WorldGenTreeProvider net/minecraft/world/level/block/grower/AbstractTreeGrower
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z growTree
	b (Ljava/util/Random;)Lnet/minecraft/server/WorldGenTreeAbstract; getFeature
net/minecraft/server/BlockEndRod net/minecraft/world/level/block/EndRodBlock
	b Y_AXIS_AABB
	c Z_AXIS_AABB
	d X_AXIS_AABB
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	i (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
net/minecraft/server/PacketLoginOutSuccess net/minecraft/network/protocol/login/ClientboundGameProfilePacket
	a gameProfile
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginOutListener;)V handle
	b ()Lcom/mojang/authlib/GameProfile; getGameProfile
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/ResourceDataJson net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener
	a LOGGER
	b PATH_SUFFIX_LENGTH
	c gson
	d directory
	a (Ljava/lang/String;)Z lambda$prepare$0
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/util/Map; prepare
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
net/minecraft/server/SensorHurtBy net/minecraft/world/entity/ai/sensing/HurtBySensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
net/minecraft/server/LoginListener net/minecraft/server/network/ServerLoginPacketListenerImpl
	b UNIQUE_THREAD_ID
	c LOGGER
	e nonce
	g state
	h tick
	i gameProfile
	j serverId
	l delayedAcceptPlayer
	loginKey secretKey
	networkManager connection
	random RANDOM
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; createFakeProfile
	a (Lio/netty/channel/ChannelFuture;)V lambda$handleAcceptedLogin$0
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/LoginListener;)Lcom/mojang/authlib/GameProfile; access$000
	a (Lnet/minecraft/server/LoginListener;Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; access$002
	a (Lnet/minecraft/server/LoginListener;Lnet/minecraft/server/LoginListener$EnumProtocolState;)Lnet/minecraft/server/LoginListener$EnumProtocolState; access$402
	a (Lnet/minecraft/server/PacketLoginInCustomPayload;)V handleCustomQueryPacket
	a (Lnet/minecraft/server/PacketLoginInEncryptionBegin;)V handleKey
	a (Lnet/minecraft/server/PacketLoginInStart;)V handleHello
	b (Lnet/minecraft/server/LoginListener;)Lnet/minecraft/server/MinecraftServer; access$100
	c ()V handleAcceptedLogin
	c (Lnet/minecraft/server/LoginListener;)Ljavax/crypto/SecretKey; access$200
	d ()Ljava/lang/String; getUserName
	e ()Lorg/apache/logging/log4j/Logger; access$300
net/minecraft/server/PacketPlayInResourcePackStatus net/minecraft/network/protocol/game/ServerboundResourcePackPacket
	status action
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/PacketPlayInResourcePackStatus$EnumResourcePackStatus; getAction
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/BlockPropertyBambooSize net/minecraft/world/level/block/state/properties/BambooLeaves
	d name
	e $VALUES
	m ()Ljava/lang/String; getSerializedName
cox$a net/minecraft/world/level/storage/loot/IntLimiter$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootIntegerLimit; deserialize
	a (Lnet/minecraft/server/LootIntegerLimit;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/PacketPlayOutWorldBorder net/minecraft/network/protocol/game/ClientboundSetBorderPacket
	a type
	b newAbsoluteMaxSize
	c newCenterX
	d newCenterZ
	e newSize
	f oldSize
	g lerpTime
	h warningTime
	i warningBlocks
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/WorldBorder;)V applyChanges
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/MobSpawnerPatrol net/minecraft/world/level/levelgen/PatrolSpawner
	a nextTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;Z)Z spawnPatrolMember
	a (Lnet/minecraft/server/WorldServer;ZZ)I tick
net/minecraft/server/EntityEnderman$PathfinderGoalEndermanPickupBlock net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal
	a ()Z canUse
	e ()V tick
net/minecraft/server/WorldGenFeatureCompositeFlower net/minecraft/world/level/levelgen/feature/DecoratedFlowerFeature
net/minecraft/server/WorldGenDecoratorCarveMaskConfiguration net/minecraft/world/level/levelgen/placement/DecoratorCarvingMaskConfig
	a step
	b probability
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorCarveMaskConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/IBlockDataHolder net/minecraft/world/level/block/state/StateHolder
	b LOGGER
	a ()Ljava/util/Collection; getProperties
	a (Lnet/minecraft/server/IBlockDataHolder;Lnet/minecraft/server/IBlockState;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/server/IBlockDataHolder; setValueHelper
	a (Lnet/minecraft/server/IBlockState;)Ljava/lang/Object; cycle
	b (Lnet/minecraft/server/IBlockState;)Z hasProperty
	b (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/lang/String; getName
	get (Lnet/minecraft/server/IBlockState;)Ljava/lang/Comparable; getValue
	getStateMap ()Lcom/google/common/collect/ImmutableMap; getValues
	set (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/lang/Object; setValue
net/minecraft/server/IAsyncTaskHandlerReentrant net/minecraft/util/thread/ReentrantBlockableEventLoop
	depth reentrantCount
	ax ()Z scheduleExecutables
	h (Ljava/lang/Runnable;)V doRunTask
	isEntered ()Z runningTask
net/minecraft/server/ChunkGenerator net/minecraft/world/level/chunk/ChunkGenerator
	a level
	c biomeSource
	addDecorations (Lnet/minecraft/server/RegionLimitedWorldAccess;)V applyBiomeDecoration
	addMobs (Lnet/minecraft/server/RegionLimitedWorldAccess;)V spawnOriginalMobs
	b (IILnet/minecraft/server/HeightMap$Type;)I getFirstFreeHeight
	buildBase (Lnet/minecraft/server/IChunkAccess;)V buildSurfaceAndBedrock
	buildNoise (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/IChunkAccess;)V fillFromNoise
	c (IILnet/minecraft/server/HeightMap$Type;)I getFirstOccupiedHeight
	canSpawnStructure (Lnet/minecraft/server/BiomeBase;Lnet/minecraft/server/StructureGenerator;)Z isBiomeValidStartForStructure
	doCarving (Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/WorldGenStage$Features;)V applyCarvers
	doMobSpawning (Lnet/minecraft/server/WorldServer;ZZ)V tickCustomSpawners
	getDecoratingBiome (Lnet/minecraft/server/RegionLimitedWorldAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BiomeBase; getDecorationBiome
	getFeatureConfiguration (Lnet/minecraft/server/BiomeBase;Lnet/minecraft/server/StructureGenerator;)Lnet/minecraft/server/WorldGenFeatureConfiguration; getStructureConfiguration
	getGenerationDepth ()I getGenDepth
	getMobsFor (Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/BlockPosition;)Ljava/util/List; getMobsAt
	getWorldChunkManager ()Lnet/minecraft/server/WorldChunkManager; getBiomeSource
	storeStructures (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/IChunkAccess;)V createReferences
net/minecraft/server/ItemArmorColorable net/minecraft/world/item/DyeableArmorItem
dyw$a net/minecraft/client/resources/model/MultiPartBakedModel$Builder
	a selectors
	a ()Ldyp; build
	a (Ljava/util/function/Predicate;Ldyp;)V add
net/minecraft/server/EntityWitch net/minecraft/world/entity/monster/Witch
	b SPEED_MODIFIER_DRINKING_UUID
	bA DATA_USING_ITEM
	bB usingTime
	bC healRaidersGoal
	bD attackPlayersGoal
	bz SPEED_MODIFIER_DRINKING
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	c (Lnet/minecraft/server/DamageSource;F)F getDamageAfterMagicAbsorb
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	dV ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	dX ()Z canBeLeader
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$0
	k ()V aiStep
	l ()Z isDrinkingPotion
	n ()V registerGoals
	s (Z)V setUsingItem
	u_ ()V defineSynchedData
net/minecraft/server/ArgumentSerializerLong net/minecraft/commands/synchronization/brigadier/LongArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lcom/mojang/brigadier/arguments/LongArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/LongArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/LongArgumentType; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
cqm$a net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetTable; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetTable;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/BiomeDeepOcean net/minecraft/world/level/biome/DeepOceanBiome
dbq$a$a net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry
	a this$1
	a (II)V blitSlotBg
	a (IILnet/minecraft/server/ItemStack;)V blitSlot
net/minecraft/server/PlayerMap net/minecraft/server/level/PlayerMap
	a players
	a (J)Ljava/util/stream/Stream; getPlayers
	a (JJLnet/minecraft/server/EntityPlayer;)V updatePlayer
	a (JLnet/minecraft/server/EntityPlayer;)V removePlayer
	a (JLnet/minecraft/server/EntityPlayer;Z)V addPlayer
	a (Lnet/minecraft/server/EntityPlayer;)V ignorePlayer
	b (Lnet/minecraft/server/EntityPlayer;)V unIgnorePlayer
	c (Lnet/minecraft/server/EntityPlayer;)Z ignoredOrUnknown
	d (Lnet/minecraft/server/EntityPlayer;)Z ignored
net/minecraft/server/BiomeBirchForestHillsMutated net/minecraft/world/level/biome/TallBirchHillsBiome
net/minecraft/server/ResourceNotFoundException net/minecraft/server/packs/ResourcePackFileNotFoundException
net/minecraft/server/BlockKelp net/minecraft/world/level/block/KelpBlock
	a AGE
	b SHAPE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
cqm$1 net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$1
caf$a net/minecraft/world/level/levelgen/feature/BuriedTreasureFeature$BuriedTreasureStart
	a ()Lnet/minecraft/server/BlockPosition; getLocatePos
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
com/mojang/blaze3d/platform/GLX$a com/mojang/blaze3d/platform/GLX$FboMode
	a BASE
	b ARB
	c EXT
	d $VALUES
net/minecraft/server/EntityRabbit net/minecraft/world/entity/animal/Rabbit
	bA KILLER_BUNNY
	bB jumpTicks
	bC jumpDuration
	bD wasOnGround
	bE jumpDelayTicks
	bF moreCarrotTicks
	bz DATA_TYPE_ID
	C (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L ()V customServerAiStep
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityRabbit;)Z access$000
	a (Lnet/minecraft/server/EntityRabbit;I)I access$302
	a (Lnet/minecraft/server/GeneratorAccess;)I getRandomRabbitType
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aA ()V updateSprintingState
	a_ (Z)V setJumping
	b (DD)V facePoint
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityRabbit; getBreedOffspring
	b (Lnet/minecraft/server/EntityRabbit;)Lnet/minecraft/server/ControllerJump; access$100
	b (Lnet/minecraft/server/Item;)Z isTemptingItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityRabbit;)Z access$200
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkRabbitSpawnRules
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cX ()F getJumpPower
	cY ()V jumpFromGround
	cc ()Lnet/minecraft/server/SoundCategory; getSoundSource
	cl ()V registerAttributes
	d (D)V setSpeedModifier
	dV ()V startJumping
	dY ()V enableJumpControl
	dZ ()V disableJumpControl
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	ee ()V setLandingDelay
	ef ()V checkLandingDelay
	eg ()Z wantsMoreFood
	getSoundJump ()Lnet/minecraft/server/SoundEffect; getJumpSound
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	k ()V aiStep
	n ()V registerGoals
	u_ ()V defineSynchedData
	v (F)F getJumpCompletion
net/minecraft/server/PathfinderGoalZombieAttack net/minecraft/world/entity/ai/goal/ZombieAttackGoal
	d zombie
	e raiseArmTicks
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart net/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece
	a previousPiece
	b portalRoomPiece
	c pendingChildren
	W_ ()Lnet/minecraft/server/BlockPosition; getLocatorPosition
net/minecraft/server/EntityPotion net/minecraft/world/entity/projectile/ThrownPotion
	e WATER_SENSITIVE
	f DATA_ITEM_STACK
	g LOGGER
	a (Ljava/util/List;Lnet/minecraft/server/Entity;)V applySplash
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V dowseFire
	a (Lnet/minecraft/server/EntityLiving;)Z isWaterSensitiveEntity
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/PotionRegistry;)V makeAreaOfEffectCloud
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	l ()F getGravity
	splash ()V applyWater
	u_ ()V defineSynchedData
net/minecraft/server/ChunkConverterPalette net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix
	a LOGGER
	b VIRTUAL
	c FIX
	d PUMPKIN
	e SNOWY_PODZOL
	f SNOWY_GRASS
	g SNOWY_MYCELIUM
	h UPPER_SUNFLOWER
	i UPPER_LILAC
	j UPPER_TALL_GRASS
	k UPPER_LARGE_FERN
	l UPPER_ROSE_BUSH
	m UPPER_PEONY
	n FLOWER_POT_MAP
	o SKULL_MAP
	p DOOR_MAP
	q NOTE_BLOCK_MAP
	r DYE_COLOR_MAP
	s BED_BLOCK_MAP
	t BANNER_BLOCK_MAP
	u AIR
	a ()Lcom/mojang/datafixers/Dynamic; access$000
	a (Lcom/mojang/datafixers/Dynamic;)Ljava/lang/String; getName
	a (Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;)Ljava/lang/String; getProperty
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$4
	a (Ljava/util/HashMap;)V lambda$static$6
	a (Ljava/util/Map;ILjava/lang/String;)V addBeds
	a (Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V mapSkull
	a (Ljava/util/Map;Ljava/lang/String;I)V mapDoor
	a (Lnet/minecraft/server/RegistryID;Lcom/mojang/datafixers/Dynamic;)I idFor
	a (ZZZZ)I getSideMask
	b ()Ljava/util/BitSet; access$100
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fix
	b (Ljava/util/HashMap;)V lambda$static$5
	b (Ljava/util/Map;ILjava/lang/String;)V addBanners
	c ()Ljava/util/BitSet; access$200
	c (Ljava/util/HashMap;)V lambda$static$3
	d ()Lcom/mojang/datafixers/Dynamic; access$400
	d (Ljava/util/HashMap;)V lambda$static$2
	e ()Lcom/mojang/datafixers/Dynamic; access$500
	e (Ljava/util/HashMap;)V lambda$static$1
	f ()Lcom/mojang/datafixers/Dynamic; access$600
	f (Ljava/util/HashMap;)V lambda$static$0
	g ()Ljava/util/Map; access$700
	h ()Ljava/util/Map; access$800
	i ()Ljava/util/Map; access$900
	j ()Lcom/mojang/datafixers/Dynamic; access$1000
	k ()Ljava/util/Map; access$1100
	l ()Ljava/util/Map; access$1200
	m ()Ljava/util/Map; access$1300
	n ()Lcom/mojang/datafixers/Dynamic; access$1400
	o ()Lcom/mojang/datafixers/Dynamic; access$1500
	p ()Lcom/mojang/datafixers/Dynamic; access$1600
	q ()Lcom/mojang/datafixers/Dynamic; access$1700
	r ()Lcom/mojang/datafixers/Dynamic; access$1800
	s ()Lcom/mojang/datafixers/Dynamic; access$1900
	t ()Lorg/apache/logging/log4j/Logger; access$2100
net/minecraft/server/LootItemConditionAlternative net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition
	a terms
	b composedPredicate
	a (Lnet/minecraft/server/LootCollector;Ljava/util/function/Function;Ljava/util/Set;Lnet/minecraft/server/LootContextParameterSet;)V validate
	a (Lnet/minecraft/server/LootItemConditionAlternative;)[Lnet/minecraft/server/LootItemCondition; access$100
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	a ([Lcrk$a;)Lcrb$a; alternative
net/minecraft/server/DefinedStructurePiece net/minecraft/world/level/levelgen/structure/TemplateStructurePiece
	a template
	b placeSettings
	c templatePosition
	d LOGGER
	X_ ()Lnet/minecraft/server/EnumBlockRotation; getRotation
	a (III)V move
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/DefinedStructure;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;)V setup
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/DataConverterPOI net/minecraft/util/datafix/fixes/ReorganizePoi
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; cap
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
net/minecraft/server/EnumDifficulty net/minecraft/world/Difficulty
	e BY_ID
	f id
	g key
	h $VALUES
	a ()I getId
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumDifficulty; byName
	b ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	b (I)[Lnet/minecraft/server/EnumDifficulty; lambda$static$0
	c ()Ljava/lang/String; getKey
	getById (I)Lnet/minecraft/server/EnumDifficulty; byId
clf$a net/minecraft/world/level/lighting/SpatialLongSet$InternalMap
	a X_BITS
	b Z_BITS
	c Y_BITS
	d Z_OFFSET
	e X_OFFSET
	g OUTER_MASK
	h lastPos
	i lastOuterKey
	j minSize
	a ()J removeFirstBit
	a (IJ)Z replaceBit
	a (J)J getOuterKey
	a (JI)J getFullKey
	b (IJ)Z removeFromEntry
	b (J)I getInnerKey
	c (J)Z addBit
	d (J)Z removeBit
	e (J)Z removeFromNullEntry
net/minecraft/server/BlockWitherSkull net/minecraft/world/level/block/WitherSkullBlock
	c witherPatternFull
	d witherPatternBase
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntitySkull;)V checkSpawn
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)Z canSpawnMob
	d ()Lnet/minecraft/server/ShapeDetector; getOrCreateWitherFull
	e ()Lnet/minecraft/server/ShapeDetector; getOrCreateWitherBase
net/minecraft/server/EntityCod net/minecraft/world/entity/animal/Cod
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dW ()Lnet/minecraft/server/SoundEffect; getFlopSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	l ()Lnet/minecraft/server/ItemStack; getBucketItemStack
cpj$1 net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$1
	a val$constructor
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootEntryAbstract;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEntryChildrenAbstract; deserialize
net/minecraft/server/IMinecraftServer net/minecraft/server/ServerInterface
	e ()I getServerPort
	e_ ()Ljava/lang/String; getServerIp
	executeRemoteCommand (Ljava/lang/String;)Ljava/lang/String; runCommand
	f_ ()Ljava/lang/String; getServerName
	g (Ljava/lang/String;)V error
	getDedicatedServerProperties ()Lnet/minecraft/server/DedicatedServerProperties; getProperties
	getPlayers ()[Ljava/lang/String; getPlayerNames
	getPlugins ()Ljava/lang/String; getPluginNames
	getVersion ()Ljava/lang/String; getServerVersion
	getWorld ()Ljava/lang/String; getLevelIdName
	h (Ljava/lang/String;)V debug
	warning (Ljava/lang/String;)V warn
net/minecraft/server/VoxelShapeMergerIdentical net/minecraft/world/phys/shapes/IdenticalMerger
	a coords
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Lcsu$a;)Z forMergedIndexes
dxt$1 net/minecraft/client/resources/SkinManager$1
	a this$0
	a (Lcom/mojang/authlib/GameProfile;)Ljava/util/Map; load
dyf$a net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat
	a NONE
	b PARTIAL
	c FULL
	d BY_NAME
	e name
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ldyf$a;)Ldyf$a; lambda$static$0
	a (Ljava/lang/String;)Ldyf$a; getByName
dxt$2 net/minecraft/client/resources/SkinManager$2
	a val$baseProcessor
	b val$callback
	c val$type
	d val$resourceLocation
	e val$textureInfo
	f this$0
	a ()V onTextureDownloaded
	a (Lcuj;)Lcuj; process
net/minecraft/server/PacketPlayOutEntityEquipment net/minecraft/network/protocol/game/ClientboundSetEquippedItemPacket
	a entity
	b slot
	c itemStack
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/ItemStack; getItem
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getEntity
	d ()Lnet/minecraft/server/EnumItemSlot; getSlot
net/minecraft/server/WorldGenFeatureBlockOffsetConfiguration net/minecraft/world/level/levelgen/feature/BlockBlobConfiguration
	a state
	b startRadius
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureBlockOffsetConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
avx$k net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds
	a emeraldCost
	b destination
	c destinationType
	d maxUses
	e villagerXp
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
net/minecraft/server/DataConverterLang net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
net/minecraft/server/TagsItem net/minecraft/tags/ItemTags
	N source
	O resetCount
	a ()Lnet/minecraft/server/Tags; getAllTags
	a (Ljava/lang/String;)Lnet/minecraft/server/Tag; bind
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; lambda$static$0
	a (Lnet/minecraft/server/Tags;)V reset
	b ()I access$000
	c ()Lnet/minecraft/server/Tags; access$100
avx$i net/minecraft/world/entity/npc/VillagerTrades$SuspisciousStewForEmerald
	a effect
	b duration
	c xp
	d priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
avx$j net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds
	a toItem
	b toCount
	c emeraldCost
	d maxUses
	e villagerXp
	f fromItem
	g fromCount
	h priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
	a (Lnet/minecraft/server/PotionRegistry;)Z lambda$getOffer$0
sr$b net/minecraft/server/commands/LootCommand$DropConsumer
avx$g net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems
	a fromItem
	b fromCount
	c emeraldCost
	d toItem
	e toCount
	f maxUses
	g villagerXp
	h priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
sr$a net/minecraft/server/commands/LootCommand$Callback
avx$h net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds
	a itemStack
	b emeraldCost
	c numberOfItems
	d maxUses
	e villagerXp
	f priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
avx$e net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds
	a itemStack
	b baseEmeraldCost
	c maxUses
	d villagerXp
	e priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
sr$c net/minecraft/server/commands/LootCommand$TailProvider
net/minecraft/server/ChestLock net/minecraft/world/LockCode
	a NO_LOCK
	a (Lnet/minecraft/server/ItemStack;)Z unlocksWith
	a (Lnet/minecraft/server/NBTTagCompound;)V addToTag
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/ChestLock; fromTag
avx$c net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem
	a trades
	b cost
	c maxUses
	d villagerXp
	a (Ljava/util/Map;Lnet/minecraft/server/VillagerType;)Z lambda$new$0
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
	a (Lnet/minecraft/server/VillagerType;)V lambda$new$1
net/minecraft/server/WorldGenFeatureOceanRuinPieces net/minecraft/world/level/levelgen/structure/OceanRuinPieces
	a WARM_RUINS
	b RUINS_BRICK
	c RUINS_CRACKED
	d RUINS_MOSSY
	e BIG_RUINS_BRICK
	f BIG_RUINS_MOSSY
	g BIG_RUINS_CRACKED
	h BIG_WARM_RUINS
	a (Ljava/util/Random;)Lnet/minecraft/server/MinecraftKey; getSmallWarmRuin
	a (Ljava/util/Random;II)Ljava/util/List; allPositions
	a (Lnet/minecraft/server/DefinedStructureManager;Ljava/util/Random;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureOceanRuinConfiguration;Ljava/util/List;)V addClusterRuins
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureOceanRuinConfiguration;)V addPieces
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureOceanRuinConfiguration;ZF)V addPiece
	b (Ljava/util/Random;)Lnet/minecraft/server/MinecraftKey; getBigWarmRuin
avx$d net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds
	a villagerXp
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
avx$a net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds
	a item
	b value
	c maxUses
	d villagerXp
	a (Ljava/util/Random;)Lnet/minecraft/server/ItemDye; getRandomDye
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
net/minecraft/server/PotionRegistry net/minecraft/world/item/alchemy/Potion
	a name
	b effects
	a ()Ljava/util/List; getEffects
	a (Ljava/lang/String;)Lnet/minecraft/server/PotionRegistry; byName
	b ()Z hasInstantEffects
	b (Ljava/lang/String;)Ljava/lang/String; getName
avx$b net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems
	a item
	b cost
	c maxUses
	d villagerXp
	e priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
net/minecraft/server/NBTCompressedStreamTools net/minecraft/nbt/NbtIo
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; readUnnamedTag
	a (Ljava/io/DataInput;Lnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagCompound; read
	a (Ljava/io/DataInputStream;)Lnet/minecraft/server/NBTTagCompound; read
	a (Ljava/io/File;)Lnet/minecraft/server/NBTTagCompound; read
	a (Ljava/io/InputStream;)Lnet/minecraft/server/NBTTagCompound; readCompressed
	a (Lnet/minecraft/server/NBTBase;Ljava/io/DataOutput;)V writeUnnamedTag
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/io/File;)V safeWrite
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/io/OutputStream;)V writeCompressed
	b (Lnet/minecraft/server/NBTTagCompound;Ljava/io/File;)V write
net/minecraft/server/DataConverterEntity net/minecraft/util/datafix/fixes/EntityIdFix
	a ID_MAP
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$1
	a (Ljava/util/HashMap;)V lambda$static$0
net/minecraft/server/PathEntity net/minecraft/world/level/pathfinder/Path
	a nodes
	b openSet
	c closedSet
	d targetNodes
	e index
	f target
	g distToTarget
	h reached
	a ()V next
	a (I)Lnet/minecraft/server/PathPoint; get
	a (ILnet/minecraft/server/PathPoint;)V set
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Vec3D; currentPos
	a (Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/Vec3D; getPos
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToStream
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/PathDestination;)V lambda$writeToStream$0
	a (Lnet/minecraft/server/PathEntity;)Z sameAs
	a ([Lnet/minecraft/server/PathPoint;[Lnet/minecraft/server/PathPoint;Ljava/util/Set;)V setDebug
	b ()Z isDone
	b (I)V truncate
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/PathEntity; createFromStream
	c ()Lnet/minecraft/server/PathPoint; last
	c (I)V setIndex
	d ()Ljava/util/List; getNodes
	e ()I getSize
	f ()I getIndex
	g ()Lnet/minecraft/server/Vec3D; currentPos
	h ()Z canReach
	i ()[Lnet/minecraft/server/PathPoint; getOpenSet
	j ()[Lnet/minecraft/server/PathPoint; getClosedSet
	k ()Lnet/minecraft/server/BlockPosition; getTarget
	l ()F getDistToTarget
cvc$1 com/mojang/blaze3d/vertex/VertexFormat$1
	a $SwitchMap$com$mojang$blaze3d$vertex$VertexFormatElement$Usage
net/minecraft/server/BlockTileEntity net/minecraft/world/level/block/BaseEntityBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/GenLayer net/minecraft/world/level/newbiome/layer/Layer
	a LOGGER
	b area
	a (I)Lnet/minecraft/server/BiomeBase; getBiome
	a (II)Lnet/minecraft/server/BiomeBase; get
	a (IIII)[Lnet/minecraft/server/BiomeBase; getArea
net/minecraft/server/CommandAdvancement$Action net/minecraft/server/commands/AdvancementCommands$Action
	c key
	d $VALUES
	a ()Ljava/lang/String; getKey
	a (Lnet/minecraft/server/EntityPlayer;Ljava/lang/Iterable;)I perform
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Advancement;)Z perform
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Advancement;Ljava/lang/String;)Z performCriterion
ddi$1 net/minecraft/client/gui/screens/inventory/BeaconScreen$1
	a val$menu
	b this$0
	a (Lnet/minecraft/server/Container;II)V setContainerData
	a (Lnet/minecraft/server/Container;ILnet/minecraft/server/ItemStack;)V slotChanged
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/NonNullList;)V refreshContainer
crp$1 net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$1
cbi$a net/minecraft/world/level/levelgen/feature/EndCityFeature$EndCityStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
net/minecraft/server/OpListEntry net/minecraft/server/players/ServerOpListEntry
	a level
	b bypassesPlayerLimit
	a ()I getLevel
	a (Lcom/google/gson/JsonObject;)V serialize
	b ()Z getBypassesPlayerLimit
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
cxi$1 com/mojang/realmsclient/util/RealmsTextureManager$1
	a val$uuid
buw$1 net/minecraft/world/level/block/entity/StructureBlockEntity$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
dzz$1 net/minecraft/client/searchtree/SuffixArray$1
	a val$lefts
	b val$rights
	c this$0
net/minecraft/server/MobSpawnerAbstract net/minecraft/world/level/BaseSpawner
	a LOGGER
	e spin
	f oSpin
	j displayEntity
	mobs spawnPotentials
	spawnData nextSpawnData
	a ()Lnet/minecraft/server/World; getLevel
	a (DDDLnet/minecraft/server/Entity;)Lnet/minecraft/server/Entity; lambda$tick$0
	a (I)V broadcastEvent
	a (Lnet/minecraft/server/Entity;)V addWithPassengers
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (I)Z onEventTriggered
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c ()V tick
	d ()Lnet/minecraft/server/Entity; getOrCreateDisplayEntity
	e ()D getSpin
	f ()D getoSpin
	getMobName ()Lnet/minecraft/server/MinecraftKey; getEntityId
	h ()Z isNearPlayer
	i ()V delay
	setMobName (Lnet/minecraft/server/EntityTypes;)V setEntityId
	setSpawnData (Lnet/minecraft/server/MobSpawnerData;)V setNextSpawnData
net/minecraft/server/VillagerTrades$IMerchantRecipeOption net/minecraft/world/entity/npc/VillagerTrades$ItemListing
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
net/minecraft/server/EntityPufferFish net/minecraft/world/entity/animal/Pufferfish
	b PUFF_STATE
	bz NO_SPECTATORS_AND_NO_WATER_MOB
	c inflateCounter
	d deflateTimer
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityInsentient;)V touch
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EntityPufferFish;I)I access$102
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityHuman;)V playerTouch
	b (Lnet/minecraft/server/EntityPufferFish;I)I access$202
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dW ()Lnet/minecraft/server/SoundEffect; getFlopSound
	dY ()Ljava/util/function/Predicate; access$000
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h ()V tick
	h (Lnet/minecraft/server/EntityLiving;)Z lambda$static$0
	k ()V aiStep
	l ()Lnet/minecraft/server/ItemStack; getBucketItemStack
	n ()V registerGoals
	r (I)F getScale
	u_ ()V defineSynchedData
net/minecraft/server/PacketPlayOutMap net/minecraft/network/protocol/game/ClientboundMapItemDataPacket
	a mapId
	b scale
	c trackingPosition
	d locked
	e decorations
	f startX
	g startY
	h width
	i height
	j mapColors
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/WorldMap;)V applyToMap
	b ()I getMapId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()B getScale
net/minecraft/server/PacketPlayInVehicleMove net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket
	a x
	b y
	c z
	d yRot
	e xRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	getPitch ()F getXRot
	getYaw ()F getYRot
net/minecraft/server/ExceptionWorldConflict net/minecraft/world/level/LevelConflictException
av$a net/minecraft/advancements/critereon/EntityPredicate$Builder
	a entityType
	b distanceToPlayer
	c location
	d effects
	e nbt
	f flags
	g equipment
	h catType
	a ()Lav$a; entity
	a (Lnet/minecraft/server/CriterionConditionDistance;)Lav$a; distance
	a (Lnet/minecraft/server/CriterionConditionEntityEquipment;)Lav$a; equipment
	a (Lnet/minecraft/server/CriterionConditionEntityFlags;)Lav$a; flags
	a (Lnet/minecraft/server/CriterionConditionEntityType;)Lav$a; entityType
	a (Lnet/minecraft/server/CriterionConditionLocation;)Lav$a; located
	a (Lnet/minecraft/server/CriterionConditionMobEffect;)Lav$a; effects
	a (Lnet/minecraft/server/CriterionConditionNBT;)Lav$a; nbt
	a (Lnet/minecraft/server/EntityTypes;)Lav$a; of
	a (Lnet/minecraft/server/MinecraftKey;)Lav$a; of
	a (Lnet/minecraft/server/Tag;)Lav$a; of
	b ()Lnet/minecraft/server/CriterionConditionEntity; build
	b (Lnet/minecraft/server/MinecraftKey;)Lav$a; catType
net/minecraft/server/EntityCow net/minecraft/world/entity/animal/Cow
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityCow; getBreedOffspring
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cU ()F getSoundVolume
	cl ()V registerAttributes
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	n ()V registerGoals
net/minecraft/server/ItemRecord net/minecraft/world/item/RecordItem
	a BY_NAME
	b analogOutput
	c sound
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbdr;)V appendHoverText
	a (Lnet/minecraft/server/SoundEffect;)Lnet/minecraft/server/ItemRecord; getBySound
	d ()I getAnalogOutput
	e ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	t ()Lnet/minecraft/server/SoundEffect; getSound
bh$b net/minecraft/advancements/critereon/LocationTrigger$TriggerInstance
	a location
	a (Lnet/minecraft/server/CriterionConditionLocation;)Lbh$b; located
	a (Lnet/minecraft/server/WorldServer;DDD)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lbh$b; sleptInBed
	d ()Lbh$b; raidWon
net/minecraft/server/Recipes net/minecraft/world/item/crafting/RecipeType
	a (Ljava/lang/String;)Lnet/minecraft/server/Recipes; register
	a (Lnet/minecraft/server/IRecipe;Lnet/minecraft/server/World;Lnet/minecraft/server/IInventory;)Ljava/util/Optional; tryMatch
bh$a net/minecraft/advancements/critereon/LocationTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/WorldServer;DDD)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
av$1 net/minecraft/advancements/critereon/EntityPredicate$1
net/minecraft/server/TileEntityLootable net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity
	L_ ()V clearContent
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IBlockAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/MinecraftKey;)V setLootTable
	a (Lnet/minecraft/server/NonNullList;)V setItems
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	d (Lnet/minecraft/server/EntityHuman;)V unpackLootTable
	d (Lnet/minecraft/server/NBTTagCompound;)Z tryLoadLootTable
	e (Lnet/minecraft/server/EntityHuman;)Z canOpen
	e (Lnet/minecraft/server/NBTTagCompound;)Z trySaveLootTable
	f ()Lnet/minecraft/server/NonNullList; getItems
net/minecraft/server/WorldGenMinable net/minecraft/world/level/levelgen/feature/OreFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureOreConfiguration;DDDDDDIIIII)Z doPlace
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureOreConfiguration;)Z place
cx$a$a net/minecraft/commands/arguments/RangeArgument$Floats$Serializer
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcx$a; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
net/minecraft/server/ChatModifier$ChatModifierSerializer net/minecraft/network/chat/Style$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/ChatModifier; deserialize
	a (Lnet/minecraft/server/ChatModifier;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/CriterionTriggerTick net/minecraft/advancements/critereon/TickTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbs$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/BiomeTheEnd net/minecraft/world/level/biome/TheEndBiome
	a (F)I getSkyColor
ro$1 net/minecraft/server/commands/AdvancementCommands$1
doi$b net/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing
	a UP
	b DOWN
	c LEFT
	d RIGHT
	e direction
	f xOffset
	g yOffset
	h $VALUES
	a ()Lnet/minecraft/server/EnumDirection; getDirection
	a (Ldoi$b;)Z access$000
	b ()I getXOffset
	c ()I getYOffset
	d ()Z isHorizontal
dcw$1 net/minecraft/client/gui/screens/advancements/AdvancementTabType$1
	a $SwitchMap$net$minecraft$client$gui$screens$advancements$AdvancementTabType
net/minecraft/server/BlockTripwireHook net/minecraft/world/level/block/TripWireHookBlock
	d NORTH_AABB
	e SOUTH_AABB
	f WEST_AABB
	g EAST_AABB
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V notifyNeighbors
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;ZZILnet/minecraft/server/IBlockData;)V calculateState
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ZZZZ)V playSound
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	h (Lnet/minecraft/server/IBlockData;)Z isSignalSource
net/minecraft/server/ChunkGeneratorAbstract net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator
	e random
	f defaultBlock
	g defaultFluid
	h BEARD_KERNEL
	i AIR
	j chunkHeight
	k chunkWidth
	l chunkCountX
	m chunkCountY
	n chunkCountZ
	o minLimitPerlinNoise
	p maxLimitPerlinNoise
	q mainPerlinNoise
	r surfaceNoise
	a (DDI)D getYOffset
	a (II)[D getDepthAndScale
	a (III)D getContribution
	a (IIIDDDD)D sampleAndClampNoise
	a (IILnet/minecraft/server/HeightMap$Type;)I getBaseHeight
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/Random;)V setBedrock
	a ([DII)V fillNoiseColumn
	a ([DIIDDDDII)V fillNoiseColumn
	a ([F)V lambda$static$0
	b (II)[D makeAndFillNoiseColumn
	b (III)D computeContribution
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/IChunkAccess;)V fillFromNoise
	c (Lnet/minecraft/server/IChunkAccess;)V buildSurfaceAndBedrock
	g ()D getTopSlideStart
	h ()D getBottomSlideStart
	i ()I getNoiseSizeY
ae$a net/minecraft/advancements/critereon/BredAnimalsTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityAnimal;Lnet/minecraft/server/EntityAnimal;Lnet/minecraft/server/EntityAgeable;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
net/minecraft/server/TileEntityBanner net/minecraft/world/level/block/entity/BannerBlockEntity
	a name
	color baseColor
	g receivedData
	h patterns
	i colors
	j textureHashName
	patterns itemPatterns
	O ()Lnet/minecraft/server/IChatBaseComponent; getName
	Q ()Lnet/minecraft/server/IChatBaseComponent; getCustomName
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Ljava/util/function/Supplier;)Lnet/minecraft/server/EnumColor; getBaseColor
	a (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getItem
	a (Lnet/minecraft/server/IChatBaseComponent;)V setCustomName
	a (Lnet/minecraft/server/ItemStack;)I getPatternCount
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumColor;)V fromItem
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; lambda$getItem$0
	b (Lnet/minecraft/server/ItemStack;)V removeLastPattern
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c ()Ljava/util/List; getPatterns
	f ()Ljava/util/List; getColors
	g ()Ljava/lang/String; getTextureHashName
	h ()V createPatternList
doi$a net/minecraft/client/renderer/block/model/ItemModelGenerator$Span
	a facing
	b min
	c max
	d anchor
	a ()Ldoi$b; getFacing
	a (I)V expand
	b ()I getMin
	c ()I getMax
	d ()I getAnchor
dnw$1 net/minecraft/client/renderer/block/BlockRenderDispatcher$1
	a $SwitchMap$net$minecraft$world$level$block$RenderShape
ae$b net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance
	a parent
	b partner
	c child
	a (Lav$a;)Lae$b; bredAnimals
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityAnimal;Lnet/minecraft/server/EntityAnimal;Lnet/minecraft/server/EntityAgeable;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lae$b; bredAnimals
net/minecraft/server/MobEffectHealthBoost net/minecraft/world/effect/HealthBoostMobEffect
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AttributeMapBase;I)V removeAttributeModifiers
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece14 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StairsRoom
	a (Ljava/util/List;IIIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece14; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/BlockDaylightDetector net/minecraft/world/level/block/DaylightDetectorBlock
	b INVERTED
	c SHAPE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V updateSignalStrength
	h (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	n (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
fx$19$1 net/minecraft/core/dispenser/DispenseItemBehavior$8$1
	b this$0
	a ()F getUncertainty
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityPotion;)V lambda$getProjectile$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
	b ()F getPower
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece
	a previousPiece
	b availableBridgePieces
	c availableCastlePieces
	d pendingChildren
net/minecraft/server/BiomeMesaBryce net/minecraft/world/level/biome/ErodedBadlandsBiome
	a (Lnet/minecraft/server/BlockPosition;)I getFoliageColor
	b (Lnet/minecraft/server/BlockPosition;)I getGrassColor
cwf$1 com/mojang/realmsclient/gui/screens/RealmsClientOutdatedScreen$1
	a this$0
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece12 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$MonsterThrone
	a hasPlacedSpawner
	a (Ljava/util/List;IIIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece12; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
ddi$a net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconCancelButton
	a this$0
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece13 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$RoomCrossing
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece13; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/PathfinderGoalBowShoot net/minecraft/world/entity/ai/goal/RangedBowAttackGoal
	a mob
	b speedModifier
	c attackIntervalMin
	d attackRadiusSqr
	e attackTime
	f seeTime
	g strafingClockwise
	h strafingBackwards
	i strafingTime
	a ()Z canUse
	a (I)V setMinAttackInterval
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z isHoldingBow
ddi$b net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconConfirmButton
	a this$0
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece10 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorRightTurnPiece
	a isNeedingChest
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece10; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
ddi$c net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconPowerButton
	a this$0
	b effect
	c sprite
	d isPrimary
	a ()V renderIcon
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece11 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleStalkRoom
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece11; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
ddi$d net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconScreenButton
	a selected
	a ()V renderIcon
	a (Z)V setSelected
	b ()Z isSelected
ddi$e net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconSpriteScreenButton
	a iconX
	b iconY
	a ()V renderIcon
net/minecraft/server/BehaviorGate$Execution net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy
	c $VALUES
	a (Lnet/minecraft/server/WeightedList;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V apply
net/minecraft/server/BiomeTheEndMediumIsland net/minecraft/world/level/biome/EndMidlandsBiome
	a (F)I getSkyColor
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece8 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorLeftTurnPiece
	a isNeedingChest
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece8; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece7 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorCrossingPiece
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece7; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/ChunkProviderServer net/minecraft/server/level/ServerChunkCache
	allowAnimals spawnFriendlies
	allowMonsters spawnEnemies
	b MAGIC_NUMBER
	c CHUNK_STATUSES
	cacheChunk lastChunk
	cachePos lastChunkPos
	cacheStatus lastChunkStatus
	chunkGenerator generator
	chunkMapDistance distanceManager
	lastTickTime lastInhabitedUpdate
	playerChunkMap chunkMap
	serverThread mainThread
	serverThreadQueue mainThreadProcessor
	world level
	worldPersistentData dataStorage
	a ()Lnet/minecraft/server/LightEngineThreaded; getLightEngine
	a (II)Lnet/minecraft/server/Chunk; getChunkNow
	a (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	a (JLjava/util/function/Function;)Z checkChunkFuture
	a (JLnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/ChunkStatus;)V storeInCache
	a (JZ[Lnet/minecraft/server/EnumCreatureType;ZILit/unimi/dsi/fastutil/objects/Object2IntMap;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/PlayerChunk;)V lambda$tickChunks$5
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage; lambda$getChunkFuture$4
	a (Lnet/minecraft/server/BlockPosition;)Z isTickingChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Z isEntityTickingChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V updateChunkForced
	a (Lnet/minecraft/server/ChunkProviderServer;)Ljava/lang/Thread; access$100
	a (Lnet/minecraft/server/Entity;)Z isEntityTickingChunk
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;)V onLightUpdate
	a (Lnet/minecraft/server/IChunkAccess;)Lnet/minecraft/server/IChunkAccess; lambda$getChunk$1
	a (Lnet/minecraft/server/PlayerChunk;I)Z chunkAbsent
	a (Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/EnumSkyBlock;)V lambda$onLightUpdate$6
	a (ZLnet/minecraft/server/PlayerChunk$Failure;)Lnet/minecraft/server/IChunkAccess; lambda$getChunk$2
	a (ZZ)V setSpawnSettings
	addTicket (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V addRegionTicket
	b ()I getTickingGenerated
	b (IILnet/minecraft/server/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; getChunkFuture
	b (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/lang/String; getChunkDebugData
	b (Lnet/minecraft/server/ChunkProviderServer;)Z access$200
	b (Lnet/minecraft/server/Entity;)Z isInAccessibleChunk
	broadcastIncludingSelf (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Packet;)V broadcastAndSend
	c ()Lnet/minecraft/server/World; getLevel
	c (II)Lnet/minecraft/server/IBlockAccess; getChunkForLighting
	c (Lnet/minecraft/server/ChunkProviderServer;)Lnet/minecraft/server/LightEngineThreaded; access$300
	d (IILnet/minecraft/server/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; lambda$getChunkFuture$3
	e ()Ljava/lang/String; gatherStats
	e (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; lambda$getChunk$0
	f ()I getPendingTasksCount
	flagDirty (Lnet/minecraft/server/BlockPosition;)V blockChanged
	g ()Lnet/minecraft/server/ChunkGenerator; getGenerator
	getChunk (J)Lnet/minecraft/server/PlayerChunk; getVisibleChunkIfPresent
	getWorldPersistentData ()Lnet/minecraft/server/WorldPersistentData; getDataStorage
	h ()I getLoadedChunksCount
	isLoaded (II)Z hasChunk
	j ()Lnet/minecraft/server/VillagePlace; getPoiManager
	k ()Lnet/minecraft/server/LightEngine; getLightEngine
	l ()Lnet/minecraft/server/IBlockAccess; getLevel
	movePlayer (Lnet/minecraft/server/EntityPlayer;)V move
	removeTicket (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V removeRegionTicket
	runTasks ()Z pollTask
	tickDistanceManager ()Z runDistanceManagerUpdates
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece9 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorPiece
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece9; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/StructurePiece net/minecraft/world/level/levelgen/structure/StructurePiece
	a orientation
	b mirror
	c rotation
	d type
	e SHAPE_CHECK_BLOCKS
	m CAVE_AIR
	n boundingBox
	o genDepth
	W_ ()Lnet/minecraft/server/BlockPosition; getLocatorPosition
	X_ ()Lnet/minecraft/server/EnumBlockRotation; getRotation
	a (II)I getWorldX
	a (III)V move
	a (Ljava/util/List;Lnet/minecraft/server/StructureBoundingBox;)Lnet/minecraft/server/StructurePiece; findCollisionPiece
	a (Lnet/minecraft/server/ChunkCoordIntPair;I)Z isCloseToChunk
	a (Lnet/minecraft/server/EnumDirection;)V setOrientation
	a (Lnet/minecraft/server/GeneratorAccess;IIILnet/minecraft/server/StructureBoundingBox;)V generateAirColumnUp
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/IBlockData;IIILnet/minecraft/server/StructureBoundingBox;)V placeBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIIIIILnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Z)V generateBox
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIIIIILnet/minecraft/server/IBlockData;Z)V generateUpperHalfSphere
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIIIIIZLjava/util/Random;Lnet/minecraft/server/StructurePiece$StructurePieceBlockSelector;)V generateBox
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;FIIIIIILnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;ZZ)V generateMaybeBox
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;FIIILnet/minecraft/server/IBlockData;)V maybeGenerateBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockDoor;)V createDoor
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;Lnet/minecraft/server/MinecraftKey;)Z createDispenser
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;IIILnet/minecraft/server/MinecraftKey;)Z createChest
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IBlockData;)Z createChest
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Z)V generateBox
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/StructureBoundingBox;ZLjava/util/Random;Lnet/minecraft/server/StructurePiece$StructurePieceBlockSelector;)V generateBox
	a (Lnet/minecraft/server/IBlockAccess;IIILnet/minecraft/server/StructureBoundingBox;)Lnet/minecraft/server/IBlockData; getBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; reorient
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/StructureBoundingBox;)Z edgesLiquid
	a (Lnet/minecraft/server/IWorldReader;IIILnet/minecraft/server/StructureBoundingBox;)Z isInterior
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
	b (II)I getWorldZ
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/IBlockData;IIILnet/minecraft/server/StructureBoundingBox;)V fillColumnDown
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIIIII)V generateAirBox
	c (III)Lnet/minecraft/server/BlockPosition; getWorldPos
	d (I)I getWorldY
	f ()Lnet/minecraft/server/NBTTagCompound; createTag
	g ()Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	h ()I getGenDepth
	i ()Lnet/minecraft/server/EnumDirection; getOrientation
	j ()Lnet/minecraft/server/EnumBlockMirror; getMirror
	k ()Lnet/minecraft/server/WorldGenFeatureStructurePieceType; getType
we$1 net/minecraft/server/network/ServerLoginPacketListenerImpl$1
	a this$0
	a ()Ljava/net/InetAddress; getAddress
net/minecraft/server/BlockSweetBerryBush net/minecraft/world/level/block/SweetBerryBushBlock
	a AGE
	b SAPLING_SHAPE
	c MID_GROWTH_SHAPE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece net/minecraft/world/level/levelgen/structure/NetherBridgePieces$NetherBridgePiece
	a (Ljava/util/List;)I updatePieceWeight
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;III)V generateLightPostFacingRight
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;IIIII)V generateLightPost
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructureBoundingBox;)Z isOkBox
	a (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15;Ljava/util/List;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece; generatePiece
	a (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;IZ)Lnet/minecraft/server/StructurePiece; generateAndAddPiece
	a (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15;Ljava/util/List;Ljava/util/Random;IIZ)Lnet/minecraft/server/StructurePiece; generateChildForward
	b (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;III)V generateLightPostFacingLeft
	b (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15;Ljava/util/List;Ljava/util/Random;IIZ)Lnet/minecraft/server/StructurePiece; generateChildLeft
	c (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;III)V generateLightPostFacingUp
	c (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15;Ljava/util/List;Ljava/util/Random;IIZ)Lnet/minecraft/server/StructurePiece; generateChildRight
	d (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;III)V generateLightPostFacingDown
net/minecraft/server/EntityMinecartChest net/minecraft/world/entity/vehicle/MinecartChest
	M_ ()I getContainerSize
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/DamageSource;)V destroy
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	s ()I getDefaultDisplayOffset
net/minecraft/server/Item net/minecraft/world/item/Item
	a PROPERTY_DAMAGED
	b PROPERTY_DAMAGE
	c PROPERTY_LEFTHANDED
	craftingResult craftingRemainingItem
	d PROPERTY_COOLDOWN
	durability maxDamage
	e PROPERTY_CUSTOM_MODEL_DATA
	f BY_BLOCK
	foodInfo foodProperties
	g BASE_ATTACK_DAMAGE_UUID
	h BASE_ATTACK_SPEED_UUID
	i random
	j category
	k properties
	l rarity
	name descriptionId
	O_ ()Z isComplex
	a (Lnet/minecraft/server/CreativeModeTab;)Z allowdedIn
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)Z canAttackBlock
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;)Z interactEnemy
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbdr;)V appendHoverText
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z mineBlock
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/IDynamicTexture; getProperty
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IDynamicTexture;)V addProperty
	a (Lnet/minecraft/server/NBTTagCompound;)Z verifyTagAfterLoad
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/RayTrace$FluidCollisionOption;)Lnet/minecraft/server/MovingObjectPosition; getPlayerPOVHitResult
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;I)V onUseTick
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;)V onCraftedBy
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)F lambda$static$4
	c ()I getEnchantmentValue
	c (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)F lambda$static$3
	canDestroySpecialBlock (Lnet/minecraft/server/IBlockData;)Z canDestroySpecial
	d (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)F lambda$static$2
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
	e (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)F lambda$static$1
	e_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	f ()Z hasProperties
	f (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; getDescriptionId
	f (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)F lambda$static$0
	f_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
	g ()Lnet/minecraft/server/Item; asItem
	g (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IChatBaseComponent; getName
	g_ (Lnet/minecraft/server/ItemStack;)Z isEnchantable
	getById (I)Lnet/minecraft/server/Item; byId
	getFoodInfo ()Lnet/minecraft/server/FoodInfo; getFoodProperties
	getItemOf (Lnet/minecraft/server/Block;)Lnet/minecraft/server/Item; byBlock
	getMaxDurability ()I getMaxDamage
	getName ()Ljava/lang/String; getDescriptionId
	h (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumItemRarity; getRarity
	i (Lnet/minecraft/server/ItemStack;)Z useOnRelease
	isFood ()Z isEdible
	k ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	l ()Ljava/lang/String; getOrCreateDescriptionId
	m ()Z shouldOverrideMultiplayerNbt
	n ()Lnet/minecraft/server/Item; getCraftingRemainingItem
	o ()Z hasCraftingRemainingItem
	p ()Lnet/minecraft/server/CreativeModeTab; getItemCategory
	q ()Lnet/minecraft/server/ItemStack; getDefaultInstance
	usesDurability ()Z canBeDepleted
crp$a net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionRandomChanceWithLooting; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionRandomChanceWithLooting;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece4 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorStairsPiece
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece4; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece3 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeStraight
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece3; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece6 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleEntrance
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece6; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
cxi$a com/mojang/realmsclient/util/RealmsTextureManager$RealmsTexture
	a image
	b textureId
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece5 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorTBalconyPiece
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece5; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/LootEntryAlternatives net/minecraft/world/level/storage/loot/entries/AlternativesEntry
	a (Lnet/minecraft/server/LootCollector;Ljava/util/function/Function;Ljava/util/Set;Lnet/minecraft/server/LootContextParameterSet;)V validate
	a ([Lcpq$a;)Lcph$a; alternatives
	a ([Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; compose
	a ([Lnet/minecraft/server/LootEntryChildren;Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z lambda$compose$0
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece2 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeEndFiller
	a selfSeed
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece2; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
doi$1 net/minecraft/client/renderer/block/model/ItemModelGenerator$1
	a $SwitchMap$net$minecraft$client$renderer$block$model$ItemModelGenerator$SpanFacing
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece1 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeCrossing
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece1; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
crb$1 net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$1
cli$1 net/minecraft/world/level/material/FlowingFluid$1
net/minecraft/server/BlockEnderPortalFrame net/minecraft/world/level/block/EndPortalFrameBlock
	EYE HAS_EYE
	c BASE_SHAPE
	d EYE_SHAPE
	e FULL_SHAPE
	f portalShape
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	d ()Lnet/minecraft/server/ShapeDetector; getOrCreatePortalShape
	n (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
dol$a net/minecraft/client/renderer/block/model/ItemTransform$Deserializer
	a DEFAULT_ROTATION
	b DEFAULT_TRANSLATION
	c DEFAULT_SCALE
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldol; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/server/Vector3fa;)Lnet/minecraft/server/Vector3fa; getVector3f
net/minecraft/server/Entity net/minecraft/world/entity/Entity
	AIR_TICKS DATA_AIR_SUPPLY_ID
	B stuckSpeedMultiplier
	D walkDistO
	E walkDist
	F moveDist
	H xOld
	I yOld
	J zOld
	K maxUpStep
	M pushthrough
	POSE DATA_POSE
	Q waterHeight
	R wasUnderWater
	W DATA_SHARED_FLAGS_ID
	aA DATA_CUSTOM_NAME_VISIBLE
	aB DATA_SILENT
	aC DATA_NO_GRAVITY
	aE tags
	aF teleported
	aG pistonDeltas
	aH pistonDeltasGameTime
	ac xp
	ad yp
	ae zp
	af noCulling
	ai isInsidePortal
	aj portalTime
	al portalEntranceBlock
	am portalEntranceOffset
	an portalEntranceForwards
	ap stringUUID
	attachedToPlayer forcedLoading
	av nextStep
	aw nextFlap
	az DATA_CUSTOM_NAME
	boundingBox bb
	c EMPTY_LIST
	chunkX xChunk
	chunkY yChunk
	chunkZ zChunk
	d INITIAL_AABB
	datawatcher entityData
	dead removed
	e viewScale
	entityCount ENTITY_COUNTER
	f type
	fireTicks remainingFireTicks
	h LOGGER
	headHeight eyeHeight
	i blocksBuilding
	impulse hasImpulse
	inLava isInLava
	inWater wasInWater
	j boardingCooldown
	justCreated firstTick
	lastPitch xRotO
	lastX xo
	lastY yo
	lastYaw yRotO
	lastZ zo
	locX x
	locY y
	locZ z
	mot deltaMovement
	noDamageTicks invulnerableTime
	noclip noPhysics
	pitch xRot
	portalCooldown changingDimensionDelay
	positionChanged horizontalCollision
	size dimensions
	ticksLived tickCount
	uniqueID uuid
	velocityChanged hurtMarked
	world level
	y verticalCollision
	yaw yRot
	z collision
	E ()V processDimensionDelay
	H_ ()Z shouldInformAdmins
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	O ()Lnet/minecraft/server/IChatBaseComponent; getName
	Q ()Lnet/minecraft/server/IChatBaseComponent; getCustomName
	X ()V resetPos
	a ()Z acceptsSuccess
	a (B)V handleEntityEvent
	a (D)Z shouldRenderAtSqrDistance
	a (DD)V turn
	a (DDDFFIZ)V lerpTo
	a (DFZ)Lnet/minecraft/server/MovingObjectPosition; pick
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (FI)V lerpHeadTo
	a (FLnet/minecraft/server/Vec3D;)V moveRelative
	a (Ljava/lang/Class;)Z hasPassenger
	a (Ljava/util/UUID;)V setUUID
	a (Lnet/minecraft/server/ArgumentAnchor$Anchor;Lnet/minecraft/server/Vec3D;)V lookAt
	a (Lnet/minecraft/server/AxisAlignedBB;)V setBoundingBox
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/ChatModifier;)V lambda$getDisplayName$5
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/Entity; changeDimension
	a (Lnet/minecraft/server/Entity;ILnet/minecraft/server/DamageSource;)V awardKillScore
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/World;Lnet/minecraft/server/VoxelShapeCollision;Lnet/minecraft/server/StreamAccumulator;)Lnet/minecraft/server/Vec3D; collideBoundingBoxHeuristically
	a (Lnet/minecraft/server/Entity;Z)Z startRiding
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interactAt
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;)V doEnchantDamageEffects
	a (Lnet/minecraft/server/EntityPlayer;)Z broadcastToPlayer
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EnumBlockMirror;)F mirror
	a (Lnet/minecraft/server/EnumBlockRotation;)F rotate
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;D)D applyPistonMovementRestriction
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;F)Z shouldBlockExplode
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;F)F getBlockExplosionResistance
	a (Lnet/minecraft/server/IBlockData;)V onInsideBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Vec3D;)V makeStuckInBlock
	a (Lnet/minecraft/server/IChatBaseComponent;)V sendMessage
	a (Lnet/minecraft/server/IMaterial;)Lnet/minecraft/server/EntityItem; spawnAtLocation
	a (Lnet/minecraft/server/IMaterial;I)Lnet/minecraft/server/EntityItem; spawnAtLocation
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EntityItem; spawnAtLocation
	a (Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityItem; spawnAtLocation
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/ScoreboardTeamBase;)Z isAlliedTo
	a (Lnet/minecraft/server/SoundEffect;FF)V playSound
	a (Lnet/minecraft/server/Tag;)Z isUnderLiquid
	a (Lnet/minecraft/server/Tag;Z)Z isUnderLiquid
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; limitPistonMovement
	a (Lnet/minecraft/server/Vec3D;FF)Lnet/minecraft/server/Vec3D; getInputVector
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/VoxelShapeCollision;Lnet/minecraft/server/StreamAccumulator;)Lnet/minecraft/server/Vec3D; collideBoundingBox
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/StreamAccumulator;)Lnet/minecraft/server/Vec3D; collideBoundingBoxLegacy
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumMoveType;)Lnet/minecraft/server/Vec3D; applySneaking
	a (ZLjava/util/Set;)V fillIndirectPassengers
	a ([D)Lnet/minecraft/server/NBTTagList; newDoubleList
	a ([F)Lnet/minecraft/server/NBTTagList; newFloatList
	aA ()V updateSprintingState
	aB ()V doSprintParticleEffect
	aC ()V setInLava
	aD ()Z isInLava
	aE ()I getLightColor
	aF ()F getBrightness
	aJ ()Z repositionEntityAfterLoad
	aO ()D getRidingHeight
	aP ()D getRideHeight
	aQ ()Z showVehicleHealth
	aS ()F getPickRadius
	aU ()Lnet/minecraft/server/Vec2F; getRotationVector
	aV ()Lnet/minecraft/server/Vec3D; getForward
	aX ()I getDimensionChangingDelay
	aY ()V animateHurt
	aZ ()Ljava/lang/Iterable; getHandSlots
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	ab ()I getPortalWaitTime
	ad ()I getRemainingFireTicks
	addScoreboardTag (Ljava/lang/String;)Z addTag
	af ()V outOfWorld
	ag ()F nextStep
	am ()Z makeFlySound
	appendEntityCrashDetails (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	aq ()Lnet/minecraft/server/AxisAlignedBB; getCollideBox
	au ()Z isInWaterRainOrBubble
	av ()Z isInWaterOrBubble
	aw ()Z isUnderWater
	ax ()V updateSwimming
	ay ()Z updateInWaterState
	az ()V doWaterSplashEffect
	b ()Z acceptsFailure
	b (D)V setViewScale
	b (DDD)V setPacketCoordinates
	b (FF)V causeFallDamage
	b (Lnet/minecraft/server/AxisAlignedBB;)Z isFree
	b (Lnet/minecraft/server/ChatModifier;)V lambda$removeAction$0
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	b (Lnet/minecraft/server/EntityLiving;)V killed
	b (Lnet/minecraft/server/EntityPlayer;)V startSeenByPlayer
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/Tag;)Z checkAndHandleWater
	b (Lnet/minecraft/server/Vec3D;)D getHorizontalDistanceSqr
	b (Z)V setDropContainerContent
	bA ()Z displayFireAnimation
	bE ()Z isPushedByWater
	bF ()D getViewScale
	bH ()Z shouldShowName
	bK ()Lnet/minecraft/server/ChatHoverable; createHoverEvent
	bM ()Lnet/minecraft/server/AxisAlignedBB; getBoundingBoxForCulling
	bP ()Lnet/minecraft/server/Vec3D; getCommandSenderWorldPosition
	bS ()Z ignoreExplosion
	bT ()Z onlyOpCanSetNbt
	bU ()Z checkAndResetTeleportedFlag
	bb ()Ljava/lang/Iterable; getAllSlots
	bf ()Z rideableUnderWater
	bh ()Z isVisuallySneaking
	bk ()Z isVisuallySwimming
	bl ()Z isVisuallyCrawling
	bm ()Z isGlowing
	bp ()I getMaxAirSupply
	bs ()Z isAttackable
	burnFromLava ()V lavaHurt
	bv ()I getMaxFallDistance
	bw ()Lnet/minecraft/server/BlockPosition; getPortalEntranceBlock
	c (FF)Lnet/minecraft/server/Vec3D; calculateViewVector
	c (Lnet/minecraft/server/BlockPosition;)V handleInsidePortal
	c (Lnet/minecraft/server/EntityHuman;)Z isInvisibleTo
	c (Lnet/minecraft/server/EntityPlayer;)V stopSeenByPlayer
	c (Lnet/minecraft/server/EntityPose;)Z canEnterPose
	c (Lnet/minecraft/server/IChatBaseComponent;)V removeAction
	c (Lnet/minecraft/server/NBTTagCompound;)Z saveAsPassenger
	c (Lnet/minecraft/server/Vec3D;)D distanceToSqr
	ca ()Z isControlledByLocalInstance
	canPortal ()Z canChangeDimensions
	cf ()D getWaterHeight
	checkBlockCollisions ()V checkInsideBlocks
	collide (Lnet/minecraft/server/Entity;)V push
	d (DDD)Z isFree
	d (F)V playSwimSound
	d (FF)Lnet/minecraft/server/Vec3D; calculateUpVector
	d (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/AxisAlignedBB; getBoundingBoxForPose
	d (Lnet/minecraft/server/NBTTagCompound;)Z save
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	decouple ()V unRide
	die ()V remove
	doPortalTick ()V handleNetherPortal
	e (DDD)D distanceToSqr
	e (F)F playFlySound
	e (I)V setId
	e (Lnet/minecraft/server/EntityPose;)F getEyeHeight
	e (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; collide
	enderTeleportAndLoad (DDD)V teleportToWithTicket
	enderTeleportTo (DDD)V teleportTo
	entityBaseTick ()V baseTick
	extinguish ()V clearFire
	f (DDD)V push
	f (F)Lnet/minecraft/server/Vec3D; getViewVector
	f (Lnet/minecraft/server/NBTTagCompound;)V load
	g (DDD)Z shouldRender
	g (F)F getViewXRot
	g (I)V setRemainingFireTicks
	g (Lnet/minecraft/server/Entity;)F distanceTo
	getAdjustedDirection ()Lnet/minecraft/server/EnumDirection; getMotionDirection
	getAirTicks ()I getAirSupply
	getAllPassengers ()Ljava/util/Collection; getIndirectPassengers
	getArmorItems ()Ljava/lang/Iterable; getArmorSlots
	getChunkCoordinates ()Lnet/minecraft/server/BlockPosition; getCommandSenderBlockPosition
	getCommandListener ()Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
	getCustomNameVisible ()Z isCustomNameVisible
	getDataWatcher ()Lnet/minecraft/server/DataWatcher; getEntityData
	getEntityType ()Lnet/minecraft/server/EntityTypes; getType
	getFlag (I)Z getSharedFlag
	getHeadHeight ()F getEyeHeight
	getHeadHeight (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	getHeadRotation ()F getYHeadRot
	getHeight ()F getBbHeight
	getLookDirection ()Lnet/minecraft/server/Vec3D; getLookAngle
	getMaxFireTicks ()I getFireImmuneTicks
	getMinecraftServer ()Lnet/minecraft/server/MinecraftServer; getServer
	getMot ()Lnet/minecraft/server/Vec3D; getDeltaMovement
	getName ()Ljava/lang/String; getScoreboardName
	getPortalDirection ()Lnet/minecraft/server/EnumDirection; getPortalEntranceForwards
	getPortalOffset ()Lnet/minecraft/server/Vec3D; getPortalEntranceOffset
	getPositionVector ()Lnet/minecraft/server/Vec3D; position
	getPushReaction ()Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	getRidingPassenger ()Lnet/minecraft/server/Entity; getControllingPassenger
	getSaveID ()Ljava/lang/String; getEncodeId
	getScoreboardDisplayName ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	getScoreboardTags ()Ljava/util/Set; getTags
	getScoreboardTeam ()Lnet/minecraft/server/ScoreboardTeamBase; getTeam
	getSoundCategory ()Lnet/minecraft/server/SoundCategory; getSoundSource
	getSoundSplash ()Lnet/minecraft/server/SoundEffect; getSwimSplashSound
	getSoundSplashHighSpeed ()Lnet/minecraft/server/SoundEffect; getSwimHighSpeedSplashSound
	getSoundSwim ()Lnet/minecraft/server/SoundEffect; getSwimSound
	getUniqueID ()Ljava/util/UUID; getUUID
	getUniqueIDString ()Ljava/lang/String; getStringUUID
	getWidth ()F getBbWidth
	getWorld ()Lnet/minecraft/server/World; getCommandSenderWorld
	h (DDD)V lerpMotion
	h (F)F getViewYRot
	h (Lnet/minecraft/server/Entity;)D distanceToSqr
	h (Z)V setGlowing
	hasSinglePlayerPassenger ()Z hasOnePlayerPassenger
	i (DDD)V checkInBlock
	i (F)Lnet/minecraft/server/Vec3D; getUpVector
	inBlock ()Z isInWall
	initDatawatcher ()V defineSynchedData
	isBurning ()Z isOnFire
	isCollidable ()Z isPushable
	isFireProof ()Z fireImmune
	isIgnoreBlockTrigger ()Z isIgnoringBlockTriggers
	isInteractable ()Z isPickable
	isInvulnerable (Lnet/minecraft/server/DamageSource;)Z isInvulnerableTo
	j (F)Lnet/minecraft/server/Vec3D; getEyePosition
	j (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/AxisAlignedBB; getCollideAgainstBox
	j (Z)V onAboveBubbleCol
	k (I)Z hasPermissions
	k (Lnet/minecraft/server/Entity;)V positionRider
	k (Z)V onInsideBubbleColumn
	killEntity ()V kill
	l ()Z isInBubbleColumn
	l (F)V setYBodyRot
	l (Lnet/minecraft/server/Entity;)V onPassengerTurned
	m ()V updateWaterState
	n ()V updateUnderWaterState
	n (Lnet/minecraft/server/Entity;)Z canRide
	o ()Ljava/lang/String; lambda$fillCrashReportCategory$4
	onLightningStrike (Lnet/minecraft/server/EntityLightning;)V thunderHit
	p ()Ljava/lang/String; lambda$fillCrashReportCategory$3
	passengerTick ()V rideTick
	pickup (Lnet/minecraft/server/EntityHuman;)V playerTouch
	playStepSound ()Z makeStepSound
	q ()Ljava/lang/String; lambda$fillCrashReportCategory$2
	q (Lnet/minecraft/server/Entity;)Z canAddPassenger
	r ()Ljava/lang/String; lambda$fillCrashReportCategory$1
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
	recalcPosition ()V setLocationFromBoundingbox
	removeScoreboardTag (Ljava/lang/String;)Z removeTag
	s (Lnet/minecraft/server/Entity;)Z is
	save (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; saveWithoutId
	setAirTicks (I)V setAirSupply
	setEquipment (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	setFlag (IZ)V setSharedFlag
	setHeadRotation (F)V setYHeadRot
	setLocation (DDDFF)V absMoveTo
	setMot (DDD)V setDeltaMovement
	setMot (Lnet/minecraft/server/Vec3D;)V setDeltaMovement
	setOnFire (I)V setSecondsOnFire
	setPosition (DDD)V setPos
	setPositionRotation (DDDFF)V moveTo
	setPositionRotation (Lnet/minecraft/server/BlockPosition;FF)V moveTo
	setYawPitch (FF)V setRot
	spawnIn (Lnet/minecraft/server/World;)V setLevel
	t (Lnet/minecraft/server/Entity;)Z skipAttackInteraction
	u (Lnet/minecraft/server/Entity;)V copyPosition
	updateSize ()V refreshDimensions
	v (Lnet/minecraft/server/Entity;)V restoreFrom
	velocityChanged ()V markHurt
	w (Lnet/minecraft/server/Entity;)Z hasPassenger
	x (Lnet/minecraft/server/Entity;)Z isPassengerOfSameVehicle
	y ()I getPermissionLevel
	y (Lnet/minecraft/server/Entity;)Z hasIndirectPassenger
net/minecraft/server/PacketPlayInRecipeDisplayed net/minecraft/network/protocol/game/ServerboundRecipeBookUpdatePacket
	a purpose
	b recipe
	c guiOpen
	d filteringCraftable
	e furnaceGuiOpen
	f furnaceFilteringCraftable
	g blastFurnaceGuiOpen
	h blastFurnaceFilteringCraftable
	i smokerGuiOpen
	j smokerFilteringCraftable
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/PacketPlayInRecipeDisplayed$Status; getPurpose
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/MinecraftKey; getRecipe
	d ()Z isGuiOpen
	e ()Z isFilteringCraftable
	f ()Z isFurnaceGuiOpen
	g ()Z isFurnaceFilteringCraftable
	h ()Z isBlastFurnaceGuiOpen
	i ()Z isBlastFurnaceFilteringCraftable
	j ()Z isSmokerGuiOpen
	k ()Z isSmokerFilteringCraftable
net/minecraft/server/ArgumentSerializerInteger net/minecraft/commands/synchronization/brigadier/IntegerArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/IntegerArgumentType; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
ddl$a net/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess
	a ()I getPageCount
	a (I)Lnet/minecraft/server/IChatBaseComponent; getPageRaw
	a (Lnet/minecraft/server/ItemStack;)Lddl$a; fromItem
	b (I)Lnet/minecraft/server/IChatBaseComponent; getPage
ddl$b net/minecraft/client/gui/screens/inventory/BookViewScreen$WritableBookAccess
	a pages
	a ()I getPageCount
	a (I)Lnet/minecraft/server/IChatBaseComponent; getPageRaw
	b (Lnet/minecraft/server/ItemStack;)Ljava/util/List; readPages
ddl$c net/minecraft/client/gui/screens/inventory/BookViewScreen$WrittenBookAccess
	a pages
	a ()I getPageCount
	a (I)Lnet/minecraft/server/IChatBaseComponent; getPageRaw
	b (Lnet/minecraft/server/ItemStack;)Ljava/util/List; readPages
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece
	d entryDoor
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType; randomSmallDoor
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType;III)V generateSmallDoor
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructureBoundingBox;)Z isOkBox
	a (Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;II)Lnet/minecraft/server/StructurePiece; generateSmallDoorChildForward
	b (Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;II)Lnet/minecraft/server/StructurePiece; generateSmallDoorChildLeft
	c (Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;II)Lnet/minecraft/server/StructurePiece; generateSmallDoorChildRight
net/minecraft/server/EnchantmentQuickCharge net/minecraft/world/item/enchantment/QuickChargeEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/RecipiesShield net/minecraft/world/item/crafting/ShieldDecorationRecipe
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
arw$b net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData
	b base
	c pattern
	d baseColor
	e patternColor
	a (Larw$b;)I access$000
	b (Larw$b;)I access$100
	c (Larw$b;)I access$200
	d (Larw$b;)I access$300
net/minecraft/server/DataConverterTypes net/minecraft/util/datafix/fixes/References
	a LEVEL
	c CHUNK
	d HOTBAR
	e OPTIONS
	f STRUCTURE
	g STATS
	h SAVED_DATA
	i ADVANCEMENTS
	j POI_CHUNK
	k BLOCK_ENTITY
	m BLOCK_STATE
	n ENTITY_NAME
	o ENTITY_TREE
	q BLOCK_NAME
	r ITEM_NAME
	s UNTAGGED_SPAWNER
	t STRUCTURE_FEATURE
	u OBJECTIVE
	v TEAM
	w RECIPE
	x BIOME
	a ()Ljava/lang/String; lambda$static$23
	b ()Ljava/lang/String; lambda$static$22
	c ()Ljava/lang/String; lambda$static$21
	d ()Ljava/lang/String; lambda$static$20
	e ()Ljava/lang/String; lambda$static$19
	f ()Ljava/lang/String; lambda$static$18
	g ()Ljava/lang/String; lambda$static$17
	h ()Ljava/lang/String; lambda$static$16
	i ()Ljava/lang/String; lambda$static$15
	j ()Ljava/lang/String; lambda$static$14
	k ()Ljava/lang/String; lambda$static$13
	l ()Ljava/lang/String; lambda$static$12
	m ()Ljava/lang/String; lambda$static$11
	n ()Ljava/lang/String; lambda$static$10
	o ()Ljava/lang/String; lambda$static$9
	p ()Ljava/lang/String; lambda$static$8
	q ()Ljava/lang/String; lambda$static$7
	r ()Ljava/lang/String; lambda$static$6
	s ()Ljava/lang/String; lambda$static$5
	t ()Ljava/lang/String; lambda$static$4
	u ()Ljava/lang/String; lambda$static$3
	v ()Ljava/lang/String; lambda$static$2
	w ()Ljava/lang/String; lambda$static$1
	x ()Ljava/lang/String; lambda$static$0
net/minecraft/server/EntityBat net/minecraft/world/entity/ambient/Bat
	b DATA_ID_FLAGS
	c BAT_RESTING_TARGETING
	d targetPosition
	D (Lnet/minecraft/server/Entity;)V doPush
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L ()V customServerAiStep
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aI ()Z isPushable
	ap ()Z makeStepSound
	b (FF)V causeFallDamage
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkBatSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bz ()Z isIgnoringBlockTriggers
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cU ()F getSoundVolume
	cV ()F getVoicePitch
	cl ()V registerAttributes
	dT ()Z isHalloween
	dd ()V pushEntities
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h ()V tick
	isAsleep ()Z isResting
	setAsleep (Z)V setResting
	u_ ()V defineSynchedData
net/minecraft/server/BlockFence net/minecraft/world/level/block/FenceBlock
	i occlusionByIndex
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IBlockData;ZLnet/minecraft/server/EnumDirection;)Z connectsTo
	h (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
arf$1 net/minecraft/world/entity/animal/Dolphin$1
t$a net/minecraft/advancements/AdvancementRewards$Builder
	a experience
	b loot
	c recipes
	d function
	a ()Lnet/minecraft/server/AdvancementRewards; build
	a (I)Lt$a; experience
	a (Lnet/minecraft/server/MinecraftKey;)Lt$a; loot
	b (I)Lt$a; addExperience
	b (Lnet/minecraft/server/MinecraftKey;)Lt$a; addLootTable
	c (Lnet/minecraft/server/MinecraftKey;)Lt$a; recipe
	d (Lnet/minecraft/server/MinecraftKey;)Lt$a; addRecipe
	e (Lnet/minecraft/server/MinecraftKey;)Lt$a; function
	f (Lnet/minecraft/server/MinecraftKey;)Lt$a; runs
net/minecraft/server/ItemGlassBottle net/minecraft/world/item/BottleItem
	a (Lnet/minecraft/server/EntityAreaEffectCloud;)Z lambda$use$0
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; turnBottleIntoItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
t$b net/minecraft/advancements/AdvancementRewards$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/AdvancementRewards; deserialize
net/minecraft/server/CriterionTriggerShotCrossbow net/minecraft/advancements/critereon/ShotCrossbowTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbp$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/EntityBoat net/minecraft/world/entity/vehicle/Boat
	aA lerpYRot
	aB lerpXRot
	aC inputLeft
	aD inputRight
	aE inputUp
	aF inputDown
	aG waterLevel
	aH landFriction
	aI status
	aJ oldStatus
	aK lastYd
	aL isAboveBubbleColumn
	aM bubbleColumnDirectionIsDown
	aN bubbleMultiplier
	aO bubbleAngle
	aP bubbleAngleO
	ar DATA_ID_BUBBLE_TIME
	as paddlePositions
	at invFriction
	au outOfControlTicks
	av deltaRotation
	aw lerpSteps
	ax lerpX
	ay lerpY
	az lerpZ
	b DATA_ID_HURT
	c DATA_ID_HURTDIR
	d DATA_ID_DAMAGE
	e DATA_ID_TYPE
	f DATA_ID_PADDLE_LEFT
	g DATA_ID_PADDLE_RIGHT
	A ()I getBubbleTime
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (DDDFFIZ)V lerpTo
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (I)Z getPaddleState
	a (IF)F getRowingTime
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/Entity;)V clampRotation
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (ZZ)V setPaddleState
	a (ZZZZ)V setInput
	aH ()Z isPickable
	aI ()Z isPushable
	aP ()D getRideHeight
	aY ()V animateHurt
	ap ()Z makeStepSound
	aq ()Lnet/minecraft/server/AxisAlignedBB; getCollideBox
	b (F)F getBubbleAngle
	b (I)V setHurtTime
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bJ ()Lnet/minecraft/server/EnumDirection; getMotionDirection
	bV ()Lnet/minecraft/server/Entity; getControllingPassenger
	c (I)V setHurtDir
	d (I)V setBubbleTime
	f ()Lnet/minecraft/server/Item; getDropItem
	getType ()Lnet/minecraft/server/EntityBoat$EnumBoatType; getBoatType
	h ()V tick
	i ()Lnet/minecraft/server/SoundEffect; getPaddleSound
	i (Lnet/minecraft/server/Entity;)V push
	j (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/AxisAlignedBB; getCollideAgainstBox
	j (Z)V onAboveBubbleCol
	k ()F getWaterLevelAbove
	k (Lnet/minecraft/server/Entity;)V positionRider
	l ()F getGroundFriction
	l (Lnet/minecraft/server/Entity;)V onPassengerTurned
	n ()I getHurtTime
	o ()I getHurtDir
	q ()V tickBubbleColumn
	q (Lnet/minecraft/server/Entity;)Z canAddPassenger
	r ()V tickLerp
	s ()Lnet/minecraft/server/EntityBoat$EnumStatus; getStatus
	u ()Z checkInWater
	u_ ()V defineSynchedData
	v ()Lnet/minecraft/server/EntityBoat$EnumStatus; isUnderwater
	w ()V floatBoat
	z ()V controlBoat
cwz$1 com/mojang/realmsclient/gui/screens/RealmsSettingsScreen$1
	a this$0
net/minecraft/server/ChunkTaskQueueSorter net/minecraft/server/level/ChunkTaskPriorityQueueSorter
	a LOGGER
	b queues
	c sleeping
	d mailbox
	a ()Ljava/lang/String; getDebugStatus
	a (ILnet/minecraft/server/ChunkCoordIntPair;ILnet/minecraft/server/ChunkTaskQueue;)V lambda$null$9
	a (ILnet/minecraft/server/Mailbox;)Lnet/minecraft/server/ChunkTaskQueue; lambda$new$0
	a (Ljava/lang/Long;)Ljava/lang/String; lambda$null$17
	a (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; lambda$null$13
	a (Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Luy$a; message
	a (Ljava/lang/Runnable;JZ)Luy$b; release
	a (Ljava/lang/Runnable;Lnet/minecraft/server/Mailbox;)Ljava/lang/Runnable; lambda$message$2
	a (Ljava/util/Map$Entry;)Ljava/lang/String; lambda$getDebugStatus$18
	a (Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Luy$a; message
	a (Ljava/util/function/IntSupplier;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/util/function/IntConsumer;)V lambda$onLevelChange$10
	a (Lnet/minecraft/server/ChunkCoordIntPair;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V onLevelChange
	a (Lnet/minecraft/server/ChunkTaskQueue;Lnet/minecraft/server/Mailbox;)V pollTask
	a (Lnet/minecraft/server/ChunkTaskQueue;Lnet/minecraft/server/Mailbox;Ljava/util/List;)V lambda$null$15
	a (Lnet/minecraft/server/Mailbox;)Lnet/minecraft/server/Mailbox; getReleaseProcessor
	a (Lnet/minecraft/server/Mailbox;JLjava/lang/Runnable;Z)V release
	a (Lnet/minecraft/server/Mailbox;JZLjava/lang/Runnable;)V lambda$release$11
	a (Lnet/minecraft/server/Mailbox;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletableFuture; lambda$null$14
	a (Lnet/minecraft/server/Mailbox;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V submit
	a (Lnet/minecraft/server/Mailbox;Ljava/util/function/IntSupplier;JLjava/util/function/Function;Z)V lambda$submit$12
	a (Lnet/minecraft/server/Mailbox;Lnet/minecraft/server/Mailbox;)Lagv$b; lambda$getReleaseProcessor$8
	a (Lnet/minecraft/server/Mailbox;Lnet/minecraft/server/Mailbox;Z)V lambda$null$4
	a (Lnet/minecraft/server/Mailbox;Luy$b;)V lambda$null$6
	a (Lnet/minecraft/server/Mailbox;Z)Lnet/minecraft/server/Mailbox; getProcessor
	a (Lnet/minecraft/server/Mailbox;ZLnet/minecraft/server/Mailbox;)Lagv$b; lambda$getProcessor$5
	a (Lnet/minecraft/server/Mailbox;ZLuy$a;)V lambda$null$3
	a (Lnet/minecraft/server/PlayerChunk;Ljava/lang/Runnable;)Luy$a; message
	a (Lnet/minecraft/server/PlayerChunk;Ljava/util/function/Function;)Luy$a; message
	b (Ljava/lang/Runnable;Lnet/minecraft/server/Mailbox;)V lambda$null$1
	b (Lnet/minecraft/server/ChunkTaskQueue;Lnet/minecraft/server/Mailbox;)V lambda$pollTask$16
	b (Lnet/minecraft/server/Mailbox;)Lnet/minecraft/server/ChunkTaskQueue; getQueue
	b (Lnet/minecraft/server/Mailbox;Lnet/minecraft/server/Mailbox;)V lambda$null$7
cxl$b com/mojang/realmsclient/util/TextRenderingUtils$LineSegment
	a fullText
	b linkTitle
	c linkUrl
	a ()Ljava/lang/String; renderedText
	a (Ljava/lang/String;)Lcxl$b; text
	a (Ljava/lang/String;Ljava/lang/String;)Lcxl$b; link
	b ()Z isLink
	c ()Ljava/lang/String; getLinkUrl
cwz$2 com/mojang/realmsclient/gui/screens/RealmsSettingsScreen$2
	a this$0
cxl$a com/mojang/realmsclient/util/TextRenderingUtils$Line
	a segments
cwz$3 com/mojang/realmsclient/gui/screens/RealmsSettingsScreen$3
	a this$0
net/minecraft/server/OldChunkLoader net/minecraft/world/level/chunk/storage/OldChunkStorage
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/OldChunkLoader$OldChunk; load
	a (Lnet/minecraft/server/OldChunkLoader$OldChunk;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/WorldChunkManager;)V convertToAnvilFormat
aac net/minecraft/util/SmoothDouble
	a targetValue
	b remainingValue
	c lastAmount
	a ()V reset
	a (DD)D getNewDeltaValue
net/minecraft/server/PacketPlayOutMultiBlockChange$MultiBlockChangeInfo net/minecraft/network/protocol/game/ClientboundChunkBlocksUpdatePacket$BlockUpdate
	a this$0
	b offset
	c block
	a ()Lnet/minecraft/server/BlockPosition; getPos
	b ()S getOffset
	c ()Lnet/minecraft/server/IBlockData; getBlock
net/minecraft/server/LootItemFunctionSetCount net/minecraft/world/level/storage/loot/functions/SetItemCountFunction
	a value
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionSetCount;)Lnet/minecraft/server/LootValue; access$000
	a (Lnet/minecraft/server/LootValue;)Lcqg$a; setCount
	a (Lnet/minecraft/server/LootValue;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$setCount$0
net/minecraft/server/OldChunkLoader$OldChunk net/minecraft/world/level/chunk/storage/OldChunkStorage$OldLevelChunk
	a lastUpdated
	b terrainPopulated
	c heightmap
	d blockLight
	e skyLight
	f data
	g blocks
	h entities
	i blockEntities
	j blockTicks
	k x
	l z
dib$a net/minecraft/client/model/ParrotModel$State
	a FLYING
	b STANDING
	c SITTING
	d PARTY
	e ON_SHOULDER
	f $VALUES
net/minecraft/server/VillagerProfession net/minecraft/world/entity/npc/VillagerProfession
	p name
	q jobPoiType
	r requestedItems
	s secondaryPoi
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;Lnet/minecraft/server/VillagePlaceType;)Lnet/minecraft/server/VillagerProfession; register
	a (Ljava/lang/String;Lnet/minecraft/server/VillagePlaceType;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;)Lnet/minecraft/server/VillagerProfession; register
	b ()Lnet/minecraft/server/VillagePlaceType; getJobPoiType
	c ()Lcom/google/common/collect/ImmutableSet; getRequestedItems
	d ()Lcom/google/common/collect/ImmutableSet; getSecondaryPoi
aah net/minecraft/util/VisibleForDebug
dhp$1 net/minecraft/client/model/HumanoidModel$1
	a $SwitchMap$net$minecraft$client$model$HumanoidModel$ArmPose
net/minecraft/server/ITileEntityContainer net/minecraft/world/inventory/MenuConstructor
net/minecraft/server/DefinedStructureTestTag net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest
	a tag
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
net/minecraft/server/EnchantmentLootBonus net/minecraft/world/item/enchantment/LootBonusEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/Fluid net/minecraft/world/level/material/FluidState
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/Fluid; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$serialize$0
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/Fluid;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	b (Lcom/mojang/datafixers/Dynamic;)Ljava/lang/String; lambda$deserialize$2
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z shouldRenderBackwardUpFace
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c (Lcom/mojang/datafixers/Dynamic;)Ljava/lang/String; lambda$deserialize$1
	c (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Vec3D; getFlow
	d (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getShape
	f ()F getOwnHeight
	g ()I getAmount
	getBlockData ()Lnet/minecraft/server/IBlockData; createLegacyBlock
	h ()Z isRandomlyTicking
	j ()Lnet/minecraft/server/ParticleParam; getDripParticle
	k ()Lnet/minecraft/server/TextureType; getRenderLayer
	l ()F getExplosionResistance
net/minecraft/server/BlockIronBars net/minecraft/world/level/block/IronBarsBlock
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/server/IBlockData;Z)Z attachsTo
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
net/minecraft/server/WorldGenTaigaStructure net/minecraft/world/level/levelgen/feature/BlockBlobFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureBlockOffsetConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
cqp$a net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder
	a replace
	b resolutionContext
	c lore
	a ()Lcqp$a; getThis
	a (Lnet/minecraft/server/IChatBaseComponent;)Lcqp$a; addLine
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;)Lcqp$a; setResolutionContext
	a (Z)Lcqp$a; setReplace
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcqg$a; getThis
arf$c net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal
	a dolphin
	b speedModifier
	c player
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
arf$d net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal
	a this$0
	b cooldown
	a ()Z canUse
	a (Lnet/minecraft/server/ItemStack;)V drop
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/WeightedRandomEnchant net/minecraft/world/item/enchantment/EnchantmentInstance
net/minecraft/server/BiomeSwamplandMutated net/minecraft/world/level/biome/SwampHillsBiome
	a (Lnet/minecraft/server/BlockPosition;)I getFoliageColor
	b (Lnet/minecraft/server/BlockPosition;)I getGrassColor
net/minecraft/server/WorldGenDecoratorChance net/minecraft/world/level/levelgen/placement/ChanceHeightmapDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorChanceConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/PacketPlayOutAdvancements net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket
	a reset
	b added
	c removed
	d progress
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/Map; getAdded
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/Set; getRemoved
	d ()Ljava/util/Map; getProgress
	e ()Z shouldReset
arf$a net/minecraft/world/entity/animal/Dolphin$DolphinMoveControl
	i dolphin
	a ()V tick
arf$b net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal
	a dolphin
	b stuck
	C_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/WorldGenCavesHell net/minecraft/world/level/levelgen/carver/HellCaveWorldCarver
	a ()I getCaveBound
	a (Ljava/util/Random;)F getThickness
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;IIIIIIIILjava/util/concurrent/atomic/AtomicBoolean;)Z carveBlock
	b ()D getYScale
	b (Ljava/util/Random;)I getCaveY
net/minecraft/server/CriterionProgress net/minecraft/advancements/CriterionProgress
	a DATE_FORMAT
	b obtained
	a ()Z isDone
	a (Ljava/lang/String;)Lnet/minecraft/server/CriterionProgress; fromJson
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b ()V grant
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/CriterionProgress; fromNetwork
	c ()V revoke
	e ()Lcom/google/gson/JsonElement; serializeToJson
	getDate ()Ljava/util/Date; getObtained
cwi$1 com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen$1
	a this$0
cwi$2 com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen$2
	a this$0
net/minecraft/server/DataConverterItemLoreComponentize net/minecraft/util/datafix/fixes/ItemLoreFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fixLoreList$5
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$3
	a (Ljava/lang/String;)Ljava/lang/String; fixLoreEntry
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; fixLoreList
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$2
	c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$1
	d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
net/minecraft/server/PacketPlayInBlockDig net/minecraft/network/protocol/game/ServerboundPlayerActionPacket
	a pos
	b direction
	c action
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/EnumDirection; getDirection
	d ()Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType; getAction
net/minecraft/server/GenLayerOcean net/minecraft/world/level/newbiome/layer/OceanMixerLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;II)I applyPixel
net/minecraft/server/EntityShulker net/minecraft/world/entity/monster/Shulker
	COLOR DATA_COLOR_ID
	b DATA_ATTACH_FACE_ID
	bA COVERED_ARMOR_MODIFIER_UUID
	bB COVERED_ARMOR_MODIFIER
	bC currentPeekAmountO
	bD currentPeekAmount
	bE oldAttachPosition
	bF clientSideTeleportInterpolation
	c DATA_ATTACH_POS_ID
	d DATA_PEEK_ID
	B ()V playAmbientSound
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	M ()I getMaxHeadXRot
	a (DDDFFIZ)V lerpTo
	a (I)V setRawPeekAmount
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityShulker;)Ljava/util/Random; access$100
	a (Lnet/minecraft/server/EnumColor;)V setColor
	a (Lnet/minecraft/server/EnumMoveType;Lnet/minecraft/server/Vec3D;)V move
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aS ()F getPickRadius
	ap ()Z makeStepSound
	aq ()Lnet/minecraft/server/AxisAlignedBB; getCollideBox
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityShulker;)Ljava/util/Random; access$200
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (DDD)V setPos
	c (Lnet/minecraft/server/EntityShulker;)Ljava/util/Random; access$300
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cc ()Lnet/minecraft/server/SoundCategory; getSoundSource
	cl ()V registerAttributes
	d (Lnet/minecraft/server/EntityShulker;)Ljava/util/Random; access$400
	dA ()I getMaxHeadYRot
	dV ()Lnet/minecraft/server/EnumDirection; getAttachFace
	dW ()Lnet/minecraft/server/BlockPosition; getAttachPosition
	dX ()I getRawPeekAmount
	dY ()I getClientSideTeleportInterpolation
	dZ ()Lnet/minecraft/server/BlockPosition; getOldAttachPosition
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityShulker;)Ljava/util/Random; access$500
	ea ()Z hasValidInterpolationPositions
	eb ()V setDefaultColor
	ec ()Lnet/minecraft/server/EnumColor; getColor
	ed ()Z isClosed
	g (Lnet/minecraft/server/BlockPosition;)V setAttachPosition
	h ()V tick
	i (Lnet/minecraft/server/Entity;)V push
	k ()V aiStep
	l ()Z teleportSomewhere
	n ()V registerGoals
	o ()Lnet/minecraft/server/EntityAIBodyControl; createBodyControl
	u_ ()V defineSynchedData
	v (F)F getClientPeekAmount
net/minecraft/server/DataConverterPiston net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix
	a ()Ljava/lang/IllegalStateException; lambda$fix$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	b ()Ljava/lang/IllegalStateException; lambda$fix$0
dib$1 net/minecraft/client/model/ParrotModel$1
	a $SwitchMap$net$minecraft$client$model$ParrotModel$State
crb$a net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder
	a terms
	a (Lcrk$a;)Lcrb$a; or
ckw$2 net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint$2
	a val$minMapSize
	b this$0
net/minecraft/server/NoiseGenerator net/minecraft/world/level/levelgen/synth/SurfaceNoise
	a (DDDD)D getSurfaceNoiseValue
crb$b net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionAlternative; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionAlternative;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
ckw$1 net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint$1
	a val$minQueueSize
	b this$0
eae$a net/minecraft/client/server/LanServerDetection$LanServerDetector
	a serverList
	b pingGroup
	c socket
eae$b net/minecraft/client/server/LanServerDetection$LanServerList
	a servers
	b isDirty
	a ()Z isDirty
	a (Ljava/lang/String;Ljava/net/InetAddress;)V addServer
	b ()V markClean
	c ()Ljava/util/List; getServers
dci$b$a net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry
	a this$1
	a ()V select
	a (II)V blitSlotBg
	a (IILnet/minecraft/server/Item;)V blitSlot
	a (Ldci$b$a;)V access$100
net/minecraft/server/ItemRestricted net/minecraft/world/item/GameMasterBlockItem
	c (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getPlacementState
net/minecraft/server/WorldGenEndIsland net/minecraft/world/level/levelgen/feature/EndIslandFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/AutoRecipeAbstract net/minecraft/recipebook/PlaceRecipe
	a (IIILnet/minecraft/server/IRecipe;Ljava/util/Iterator;I)V placeRecipe
	a (Ljava/util/Iterator;IIII)V addItemToSlot
net/minecraft/server/DataPaletteBlock net/minecraft/world/level/chunk/PalettedContainer
	a storage
	b globalPalette
	c dummyPaletteResize
	d registry
	e reader
	f writer
	g defaultValue
	h palette
	i bits
	j lock
	a ()V acquire
	a (I)Ljava/lang/Object; get
	a (III)Ljava/lang/Object; get
	a (ILjava/lang/Object;)Ljava/lang/Object; getAndSet
	a (Lbya$a;)V count
	a (Lbya$a;Lit/unimi/dsi/fastutil/ints/Int2IntMap$Entry;)V lambda$count$3
	a (Lit/unimi/dsi/fastutil/ints/Int2IntMap;I)V lambda$count$2
	a (Ljava/lang/Object;)Z maybeHas
	a (Ljava/lang/Thread;)Ljava/lang/String; lambda$acquire$1
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;Ljava/lang/String;)V write
	a (Lnet/minecraft/server/NBTTagList;[J)V read
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()V release
	b (I)V setBits
	b (III)I getIndex
	b (IIILjava/lang/Object;)Ljava/lang/Object; getAndSetUnchecked
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getSerializedSize
	c (IIILjava/lang/Object;)V set
	c (ILjava/lang/Object;)I lambda$new$0
	setBlock (IIILjava/lang/Object;)Ljava/lang/Object; getAndSet
	setBlockIndex (ILjava/lang/Object;)V set
net/minecraft/server/EnchantmentManager net/minecraft/world/item/enchantment/EnchantmentHelper
	a (ILnet/minecraft/server/ItemStack;Z)Ljava/util/List; getAvailableEnchantmentResults
	a (Lbfu$a;ILnet/minecraft/server/Enchantment;)V lambda$runIterationOnItem$1
	a (Lbfu$a;Ljava/lang/Iterable;)V runIterationOnInventory
	a (Lbfu$a;Lnet/minecraft/server/ItemStack;)V runIterationOnItem
	a (Ljava/lang/Iterable;Lnet/minecraft/server/DamageSource;)I getDamageProtection
	a (Ljava/util/Collection;Lnet/minecraft/server/Enchantment;)Z isEnchantmentCompatible
	a (Ljava/util/List;Lnet/minecraft/server/WeightedRandomEnchant;)V filterCompatibleEnchantments
	a (Ljava/util/Map;Lnet/minecraft/server/ItemStack;)V setEnchantments
	a (Ljava/util/Map;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/Enchantment;)V lambda$getEnchantments$0
	a (Ljava/util/Random;IILnet/minecraft/server/ItemStack;)I getEnchantmentCost
	a (Ljava/util/Random;Lnet/minecraft/server/ItemStack;IZ)Lnet/minecraft/server/ItemStack; enchantItem
	a (Lnet/minecraft/server/Enchantment;Lnet/minecraft/server/EntityLiving;)I getEnchantmentLevel
	a (Lnet/minecraft/server/EntityLiving;)F getSweepingDamageRatio
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;)V doPostHurtEffects
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;Lnet/minecraft/server/Enchantment;I)V lambda$doPostDamageEffects$5
	a (Lnet/minecraft/server/ItemStack;)Ljava/util/Map; getEnchantments
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumMonsterType;)F getDamageBonus
	a (Lorg/apache/commons/lang3/mutable/MutableFloat;Lnet/minecraft/server/EnumMonsterType;Lnet/minecraft/server/Enchantment;I)V lambda$getDamageBonus$3
	a (Lorg/apache/commons/lang3/mutable/MutableInt;Lnet/minecraft/server/DamageSource;Lnet/minecraft/server/Enchantment;I)V lambda$getDamageProtection$2
	b (Ljava/util/Random;Lnet/minecraft/server/ItemStack;IZ)Ljava/util/List; selectEnchantment
	b (Lnet/minecraft/server/Enchantment;Lnet/minecraft/server/EntityLiving;)Ljava/util/Map$Entry; getRandomItemWith
	b (Lnet/minecraft/server/EntityLiving;)I getKnockbackBonus
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;)V doPostDamageEffects
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;Lnet/minecraft/server/Enchantment;I)V lambda$doPostHurtEffects$4
	b (Lnet/minecraft/server/ItemStack;)I getFishingLuckBonus
	c (Lnet/minecraft/server/ItemStack;)I getFishingSpeedBonus
	d (Lnet/minecraft/server/ItemStack;)Z hasBindingCurse
	e (Lnet/minecraft/server/EntityLiving;)I getDepthStrider
	f (Lnet/minecraft/server/ItemStack;)I getLoyalty
	g (Lnet/minecraft/server/EntityLiving;)I getMobLooting
	g (Lnet/minecraft/server/ItemStack;)I getRiptide
	getDigSpeedEnchantmentLevel (Lnet/minecraft/server/EntityLiving;)I getBlockEfficiency
	getEnchantmentLevel (Lnet/minecraft/server/Enchantment;Lnet/minecraft/server/ItemStack;)I getItemEnchantmentLevel
	getFireAspectEnchantmentLevel (Lnet/minecraft/server/EntityLiving;)I getFireAspect
	getOxygenEnchantmentLevel (Lnet/minecraft/server/EntityLiving;)I getRespiration
	h (Lnet/minecraft/server/EntityLiving;)Z hasAquaAffinity
	h (Lnet/minecraft/server/ItemStack;)Z hasChanneling
	i (Lnet/minecraft/server/EntityLiving;)Z hasFrostWalker
	shouldNotDrop (Lnet/minecraft/server/ItemStack;)Z hasVanishingCurse
net/minecraft/server/WorldGenFeatureRandom2Configuration net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRandom2;)Z place
net/minecraft/server/ResourcePackMetaParser net/minecraft/server/packs/metadata/MetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
net/minecraft/server/WorldProviderNormal net/minecraft/world/level/dimension/NormalDimension
	a (II)Z isFoggyAt
	a (IIZ)Lnet/minecraft/server/BlockPosition; getValidSpawnPosition
	a (JF)F getTimeOfDay
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)Lnet/minecraft/server/BlockPosition; getSpawnPosInChunk
	b (FF)Lnet/minecraft/server/Vec3D; getFogColor
	m ()Lnet/minecraft/server/ChunkGenerator; createRandomLevelGenerator
	n ()Z isNaturalDimension
	o ()Z mayRespawn
	p ()Lnet/minecraft/server/DimensionManager; getType
acp net/minecraft/util/datafix/fixes/ForcePoiRebuild
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; cap
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$3
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$cap$4
	b (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$2
net/minecraft/server/ItemArrow net/minecraft/world/item/ArrowItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityArrow; createArrow
net/minecraft/server/CriterionConditionLocation net/minecraft/advancements/critereon/LocationPredicate
	a ANY
	b x
	c y
	d z
	e biome
	f feature
	g dimension
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionLocation; fromJson
	a (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/CriterionConditionLocation; inBiome
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/CriterionConditionLocation; inDimension
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
	a (Lnet/minecraft/server/StructureGenerator;)Lnet/minecraft/server/CriterionConditionLocation; inFeature
	a (Lnet/minecraft/server/WorldServer;DDD)Z matches
	a (Lnet/minecraft/server/WorldServer;FFF)Z matches
df$a net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate
	a state
	b properties
	c nbt
	a (Lnet/minecraft/server/ShapeDetectorBlock;)Z test
net/minecraft/server/PathfinderGoalStrollVillage net/minecraft/world/entity/ai/goal/MoveBackToVillage
	a ()Z canUse
	g ()Lnet/minecraft/server/Vec3D; getPosition
net/minecraft/server/PotionBrewer$PredicatedCombination net/minecraft/world/item/alchemy/PotionBrewing$Mix
	a from
	b ingredient
	c to
	a (Lnet/minecraft/server/PotionBrewer$PredicatedCombination;)Lnet/minecraft/server/RecipeItemStack; access$000
	b (Lnet/minecraft/server/PotionBrewer$PredicatedCombination;)Ljava/lang/Object; access$100
	c (Lnet/minecraft/server/PotionBrewer$PredicatedCombination;)Ljava/lang/Object; access$200
net/minecraft/server/DoubleListOffset net/minecraft/world/phys/shapes/OffsetDoubleList
	a delegate
	b offset
net/minecraft/server/VillagerType net/minecraft/world/entity/npc/VillagerType
	h BY_BIOME
	a (Ljava/lang/String;)Lnet/minecraft/server/VillagerType; register
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/VillagerType; byBiome
net/minecraft/server/IEntitySelector net/minecraft/world/entity/EntitySelector
	a ENTITY_STILL_ALIVE
	b LIVING_ENTITY_STILL_ALIVE
	c ENTITY_NOT_BEING_RIDDEN
	d CONTAINER_ENTITY_SELECTOR
	e NO_CREATIVE_OR_SPECTATOR
	f NO_SPECTATORS
	a (DDDD)Ljava/util/function/Predicate; withinDistance
	a (DDDDLnet/minecraft/server/Entity;)Z lambda$withinDistance$4
	a (Lnet/minecraft/server/Entity;)Ljava/util/function/Predicate; pushableBy
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)Z lambda$notRiding$6
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/ScoreboardTeamBase;Lnet/minecraft/server/ScoreboardTeamBase$EnumTeamPush;Lnet/minecraft/server/Entity;)Z lambda$pushableBy$5
	b (Lnet/minecraft/server/Entity;)Ljava/util/function/Predicate; notRiding
	c (Lnet/minecraft/server/Entity;)Z lambda$static$3
	d (Lnet/minecraft/server/Entity;)Z lambda$static$2
	e (Lnet/minecraft/server/Entity;)Z lambda$static$1
	f (Lnet/minecraft/server/Entity;)Z lambda$static$0
net/minecraft/server/ContainerLoom net/minecraft/world/inventory/LoomMenu
	containerAccess access
	craftInventory inputContainer
	d selectedBannerPatternIndex
	e slotUpdateListener
	f bannerSlot
	g dyeSlot
	h patternSlot
	i resultSlot
	resultInventory outputContainer
	a (Ljava/lang/Runnable;)V registerUpdateListener
	a (Lnet/minecraft/server/ContainerLoom;)Ljava/lang/Runnable; access$000
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;I)Z clickMenuButton
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$removed$1
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	b (Lnet/minecraft/server/ContainerLoom;)Lnet/minecraft/server/Slot; access$100
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	c (Lnet/minecraft/server/ContainerLoom;)Lnet/minecraft/server/Slot; access$200
	d (Lnet/minecraft/server/ContainerLoom;)Lnet/minecraft/server/ContainerProperty; access$300
	e ()I getSelectedBannerPatternIndex
	f ()Lnet/minecraft/server/Slot; getBannerSlot
	g ()Lnet/minecraft/server/Slot; getDyeSlot
	h ()Lnet/minecraft/server/Slot; getPatternSlot
	i ()Lnet/minecraft/server/Slot; getResultSlot
	j ()V setupResultSlot
	k ()V lambda$new$0
net/minecraft/server/EntitySquid net/minecraft/world/entity/animal/Squid
	b xBodyRot
	bA tentacleMovement
	bB oldTentacleMovement
	bC tentacleAngle
	bD oldTentacleAngle
	bE speed
	bF tentacleSpeed
	bG rotateSpeed
	bH tx
	bI ty
	bJ tz
	bz zBodyRotO
	c xBodyRotO
	d zBodyRot
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (FFF)V setMovementVector
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntitySquid;)Z access$100
	ap ()Z makeStepSound
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkSquidSpawnRules
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cU ()F getSoundVolume
	cl ()V registerAttributes
	dV ()V spawnInk
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/Vec3D;)V travel
	f (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; rotateVector
	k ()V aiStep
	l ()Z hasMovementVector
	n ()V registerGoals
df$1 net/minecraft/commands/arguments/blocks/BlockPredicateArgument$1
net/minecraft/server/TileEntityBeacon net/minecraft/world/level/block/entity/BeaconBlockEntity
	a BEACON_EFFECTS
	b VALID_EFFECTS
	c beamSections
	chestLock lockKey
	containerProperties dataAccess
	customName name
	g checkingBeamSections
	i lastCheckY
	primaryEffect primaryPower
	secondaryEffect secondaryPower
	T_ ()V tick
	V_ ()V setRemoved
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (I)Lnet/minecraft/server/MobEffectList; access$400
	a (III)V updateBase
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/SoundEffect;)V playSound
	a (Lnet/minecraft/server/TileEntityBeacon;)I access$000
	a (Lnet/minecraft/server/TileEntityBeacon;I)I access$002
	a (Lnet/minecraft/server/TileEntityBeacon;Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/MobEffectList; access$102
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (I)Lnet/minecraft/server/MobEffectList; getValidEffectById
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b (Lnet/minecraft/server/TileEntityBeacon;)Lnet/minecraft/server/MobEffectList; access$100
	b (Lnet/minecraft/server/TileEntityBeacon;Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/MobEffectList; access$202
	c (Lnet/minecraft/server/TileEntityBeacon;)Lnet/minecraft/server/MobEffectList; access$200
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	d (Lnet/minecraft/server/TileEntityBeacon;)Ljava/util/List; access$300
	f ()Ljava/util/List; getBeamSections
	h ()I getLevels
	i ()D getViewDistance
net/minecraft/server/ParticleType net/minecraft/core/particles/SimpleParticleType
	a DESERIALIZER
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/server/Particle; getType
dky$b net/minecraft/client/particle/EnchantmentTableParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/CommandLocate net/minecraft/server/commands/LocateCommand
	a ERROR_FAILED
	a (IIII)F dist
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ChatModifier;)V lambda$locate$16
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I locate
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/DataConverterChunkStatus2 net/minecraft/util/datafix/fixes/ChunkStatusFix2
	a RENAMES_AND_DOWNGRADES
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
net/minecraft/server/ContainerGrindstone net/minecraft/world/inventory/GrindstoneMenu
	containerAccess access
	craftInventory repairSlots
	resultInventory resultSlots
	a (Ljava/util/Map$Entry;)Z lambda$removeNonCurses$0
	a (Lnet/minecraft/server/ContainerGrindstone;)Lnet/minecraft/server/IInventory; access$000
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$removed$1
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/ItemStack;II)Lnet/minecraft/server/ItemStack; removeNonCurses
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; mergeEnchants
	e ()V createResult
net/minecraft/server/GenLayerRiver net/minecraft/world/level/newbiome/layer/RiverLayer
	b RIVER
	c $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
	c (I)I riverFilter
net/minecraft/server/PacketPlayInArmAnimation net/minecraft/network/protocol/game/ServerboundSwingPacket
	a hand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/EnumHand; getHand
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/Mailbox net/minecraft/util/thread/ProcessorHandle
	a (Ljava/lang/Object;)V tell
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/server/Mailbox; of
	a (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; ask
	bf ()Ljava/lang/String; name
net/minecraft/server/BiomeColdDeepOcean net/minecraft/world/level/biome/DeepColdOceanBiome
net/minecraft/server/EntityEnderman$PathfinderGoalPlayerWhoLookedAtTarget net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal
	i enderman
	j pendingTarget
	k aggroTime
	l teleportTime
	m startAggroTargetConditions
	n continueAggroTargetConditions
	a ()Z canUse
	a (Lnet/minecraft/server/EntityEnderman;Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/RecipeSingleItem net/minecraft/world/item/crafting/SingleItemRecipe
	e type
	f serializer
	key id
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a ()Lnet/minecraft/server/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	c ()Lnet/minecraft/server/ItemStack; getResultItem
	d ()Ljava/lang/String; getGroup
	f ()Lnet/minecraft/server/MinecraftKey; getId
	g ()Lnet/minecraft/server/Recipes; getType
net/minecraft/server/WorldGenFeatureEmptyConfiguration net/minecraft/world/level/levelgen/feature/NoneFeatureConfiguration
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
dky$a net/minecraft/client/particle/EnchantmentTableParticle$NautilusProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/GameProfilerFiller net/minecraft/util/profiling/ProfilerFiller
	a ()V startTick
	a (Ljava/util/function/Supplier;)V push
	b ()V endTick
	b (Ljava/util/function/Supplier;)V popPush
	enter (Ljava/lang/String;)V push
	exit ()V pop
	exitEnter (Ljava/lang/String;)V popPush
net/minecraft/server/CommandPardon net/minecraft/server/commands/PardonCommand
	a ERROR_NOT_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I pardonPlayers
cc$1 net/minecraft/commands/CommandSource$1
	H_ ()Z shouldInformAdmins
	a ()Z acceptsSuccess
	a (Lnet/minecraft/server/IChatBaseComponent;)V sendMessage
	b ()Z acceptsFailure
net/minecraft/server/EntityPose net/minecraft/world/entity/Pose
	h $VALUES
net/minecraft/server/DataConverterEquipment net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix
	a ()Ljava/lang/IllegalStateException; lambda$null$0
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$1
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$2
	a (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
aem net/minecraft/util/datafix/fixes/package-info
ddl$1 net/minecraft/client/gui/screens/inventory/BookViewScreen$1
	a ()I getPageCount
	a (I)Lnet/minecraft/server/IChatBaseComponent; getPageRaw
net/minecraft/server/StatisticWrapper net/minecraft/stats/StatType
	a registry
	b map
	a (Ljava/lang/Object;)Z contains
	a (Ljava/lang/Object;Lnet/minecraft/server/Counter;)Lnet/minecraft/server/Statistic; get
	a (Lnet/minecraft/server/Counter;Ljava/lang/Object;)Lnet/minecraft/server/Statistic; lambda$get$0
	b ()I size
	b (Ljava/lang/Object;)Lnet/minecraft/server/Statistic; get
	c ()Ljava/lang/String; getTranslationKey
net/minecraft/server/ProtoChunkExtension net/minecraft/world/level/chunk/ImposterProtoChunk
	a wrapped
	H ()I getMaxLightLevel
	a (J)V setLastSaveTime
	a (Ljava/lang/String;)Lnet/minecraft/server/StructureStart; getStartForFeature
	a (Ljava/lang/String;J)V addReferenceForFeature
	a (Ljava/lang/String;Lnet/minecraft/server/StructureStart;)V setStartForFeature
	a (Ljava/util/Map;)V setAllStarts
	a (Lnet/minecraft/server/Block;)Z lambda$getBlockTicks$0
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/server/ChunkStatus;)V setStatus
	a (Lnet/minecraft/server/Entity;)V addEntity
	a (Lnet/minecraft/server/FluidType;)Z lambda$getLiquidTicks$1
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/HeightMap$Type;[J)V setHeightmap
	a (Lnet/minecraft/server/NBTTagCompound;)V setBlockEntityNbt
	a (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/BitSet; getCarvingMask
	a (Z)V setUnsaved
	a ([Lnet/minecraft/server/BiomeBase;)V setBiomes
	b (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
	b (Ljava/util/Map;)V setAllReferences
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Z)V setLightCorrect
	c (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/BlockPosition; getHeighestPosition
	d ()[Lnet/minecraft/server/ChunkSection; getSections
	d (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	d (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap$Type; fixType
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	e (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	e_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	f (Lnet/minecraft/server/BlockPosition;)V markPosForPostprocessing
	g ()Lnet/minecraft/server/ChunkCoordIntPair; getPos
	h ()Ljava/util/Map; getAllStarts
	i ()[Lnet/minecraft/server/BiomeBase; getBiomes
	i (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbt
	j ()Z isUnsaved
	j (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbtForSaving
	k ()Lnet/minecraft/server/ChunkStatus; getStatus
	m ()Ljava/util/stream/Stream; getLights
	n ()Lnet/minecraft/server/TickList; getBlockTicks
	o ()Lnet/minecraft/server/TickList; getLiquidTicks
	r ()Z isLightCorrect
	s ()Lnet/minecraft/server/ProtoChunkTickList; getBlockTicks
	t ()Lnet/minecraft/server/ProtoChunkTickList; getLiquidTicks
	u ()Lnet/minecraft/server/Chunk; getWrapped
	v ()Ljava/util/Map; getAllReferences
aen net/minecraft/util/datafix/package-info
net/minecraft/server/WorldGenDecoratorForestRock net/minecraft/world/level/levelgen/placement/ForestRockPlacementDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenFeatureDesertPyramid net/minecraft/world/level/levelgen/feature/DesertPyramidFeature
	a ()Lceu$a; getStartFactory
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	d ()I getRandomSalt
net/minecraft/server/WorldGenFeatureChanceDecoratorHeight net/minecraft/world/level/levelgen/placement/CountChanceHeightmapDoubleDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$1
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyChanceConfiguration;I)Z lambda$getPositions$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyChanceConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorSolidTopHeight net/minecraft/world/level/levelgen/placement/TopSolidHeightMapRangeDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorRangeConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/EntitySkeleton net/minecraft/world/entity/monster/Skeleton
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	l ()Lnet/minecraft/server/SoundEffect; getStepSound
net/minecraft/server/BehaviorHomeRaid net/minecraft/world/entity/ai/behavior/LocateHidingPlaceDuringRaid
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
net/minecraft/server/FoodInfo net/minecraft/world/food/FoodProperties
	a nutrition
	b saturationModifier
	c isMeat
	d canAlwaysEat
	e fastFood
	f effects
	c ()Z isMeat
	d ()Z canAlwaysEat
	e ()Z isFastFood
	f ()Ljava/util/List; getEffects
net/minecraft/server/BlockPropertyStairsShape net/minecraft/world/level/block/state/properties/StairsShape
	f name
	g $VALUES
	m ()Ljava/lang/String; getSerializedName
net/minecraft/server/WorldGenTallPlant net/minecraft/world/level/levelgen/feature/DoublePlantFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureDoublePlantConfiguration;)Z place
net/minecraft/server/ReputationEvent net/minecraft/world/entity/ai/village/ReputationEventType
	a ZOMBIE_VILLAGER_CURED
	b GOLEM_KILLED
	c VILLAGER_HURT
	d VILLAGER_KILLED
	e TRADE
	a (Ljava/lang/String;)Lnet/minecraft/server/ReputationEvent; register
net/minecraft/server/CrashReportCallable net/minecraft/CrashReportDetail
net/minecraft/server/PacketPlayInEntityAction$EnumPlayerAction net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action
	j $VALUES
df$b net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result
df$c net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate
	a tag
	b nbt
	c vagueProperties
	a (Lnet/minecraft/server/ShapeDetectorBlock;)Z test
net/minecraft/server/PathfinderGoalOfferFlower net/minecraft/world/entity/ai/goal/OfferFlowerGoal
	a OFFER_TARGER_CONTEXT
	b golem
	c villager
	d tick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
asi$a net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal
	a this$0
	b llama
	c ownerLastHurtBy
	d timestamp
	a ()Z canUse
	c ()V start
net/minecraft/server/Enchantments net/minecraft/world/item/enchantment/Enchantments
	ARROW_DAMAGE POWER_ARROWS
	ARROW_FIRE FLAMING_ARROWS
	ARROW_INFINITE INFINITY_ARROWS
	ARROW_KNOCKBACK PUNCH_ARROWS
	DAMAGE_ALL SHARPNESS
	DAMAGE_ARTHROPODS BANE_OF_ARTHROPODS
	DAMAGE_UNDEAD SMITE
	DIG_SPEED BLOCK_EFFICIENCY
	DURABILITY UNBREAKING
	L ARMOR_SLOTS
	LOOT_BONUS_BLOCKS BLOCK_FORTUNE
	LOOT_BONUS_MOBS MOB_LOOTING
	LUCK FISHING_LUCK
	LURE FISHING_SPEED
	OXYGEN RESPIRATION
	PROTECTION_ENVIRONMENTAL ALL_DAMAGE_PROTECTION
	PROTECTION_EXPLOSIONS BLAST_PROTECTION
	PROTECTION_FALL FALL_PROTECTION
	PROTECTION_FIRE FIRE_PROTECTION
	PROTECTION_PROJECTILE PROJECTILE_PROTECTION
	SWEEPING SWEEPING_EDGE
	WATER_WORKER AQUA_AFFINITY
	a (Ljava/lang/String;Lnet/minecraft/server/Enchantment;)Lnet/minecraft/server/Enchantment; register
age net/minecraft/util/datafix/schemas/package-info
net/minecraft/server/WorldGenDecoratorFrequencyChanceConfiguration net/minecraft/world/level/levelgen/placement/DecoratorFrequencyChance
	a count
	b chance
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorFrequencyChanceConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
arw$1 net/minecraft/world/entity/animal/TropicalFish$1
agf net/minecraft/util/package-info
net/minecraft/server/BlockAnvil net/minecraft/world/level/block/AnvilBlock
	b BASE
	c X_LEG1
	d X_LEG2
	e X_TOP
	f Z_LEG1
	g Z_LEG2
	h Z_TOP
	i X_AXIS_AABB
	j Z_AXIS_AABB
	k CONTAINER_TITLE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/EntityFallingBlock;)V falling
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V onBroken
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$getMenuProvider$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V onLand
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; damage
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
dlk$1 net/minecraft/client/particle/MobAppearanceParticle$1
agp net/minecraft/util/profiling/package-info
agr net/minecraft/util/thread/NamedThreadFactory
	a LOGGER
	b group
	c threadNumber
	d namePrefix
	a (Ljava/lang/Runnable;Ljava/lang/Thread;Ljava/lang/Throwable;)V lambda$newThread$0
hj$a net/minecraft/data/recipes/ShapelessRecipeBuilder$Result
	a id
	b result
	c count
	d group
	e ingredients
	f advancement
	g advancementId
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
net/minecraft/server/WorldPersistentData net/minecraft/world/level/storage/DimensionDataStorage
	a LOGGER
	c fixerUpper
	d dataFolder
	data cache
	a ()V save
	a (Ljava/io/PushbackInputStream;)Z isGzip
	a (Ljava/lang/String;)Ljava/io/File; getDataFile
	a (Ljava/lang/String;I)Lnet/minecraft/server/NBTTagCompound; readTagFromDisk
	a (Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/server/PersistentBase; computeIfAbsent
	a (Lnet/minecraft/server/PersistentBase;)V set
	b (Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/server/PersistentBase; get
	c (Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/server/PersistentBase; readSavedData
agw net/minecraft/util/thread/package-info
cuk$c com/mojang/blaze3d/platform/PngInfo$StbReaderSeekableByteChannel
	b channel
	a (I)V skip
	a (J)I eof
	b (JI)I read
net/minecraft/server/ArgumentEntity net/minecraft/commands/arguments/EntityArgument
	a ERROR_NOT_SINGLE_ENTITY
	b ERROR_NOT_SINGLE_PLAYER
	c ERROR_ONLY_PLAYERS_ALLOWED
	d NO_ENTITIES_FOUND
	e NO_PLAYERS_FOUND
	f ERROR_SELECTORS_NOT_ALLOWED
	g EXAMPLES
	h single
	i playersOnly
	a ()Lnet/minecraft/server/ArgumentEntity; entity
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/EntitySelector; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/Entity; getEntity
	a (Lnet/minecraft/server/ArgumentEntity;)Z access$000
	a (Lnet/minecraft/server/ICompletionProvider;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V lambda$listSuggestions$0
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getEntities
	b (Lnet/minecraft/server/ArgumentEntity;)Z access$100
	c ()Lnet/minecraft/server/ArgumentEntity; player
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getOptionalEntities
	d ()Lnet/minecraft/server/ArgumentEntity; players
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getOptionalPlayers
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/EntityPlayer; getPlayer
	f (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getPlayers
	multipleEntities ()Lnet/minecraft/server/ArgumentEntity; entities
agy net/minecraft/util/worldupdate/package-info
net/minecraft/server/JsonList$JsonListEntrySerializer net/minecraft/server/players/StoredUserList$Serializer
	a this$0
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/JsonListEntry; deserialize
	a (Lnet/minecraft/server/JsonListEntry;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/ItemDebugStick net/minecraft/world/item/DebugStickItem
	a (Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object; getRelative
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/ItemStack;)V handleInteraction
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IChatBaseComponent;)V message
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;)Ljava/lang/String; getNameHelper
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;Z)Lnet/minecraft/server/IBlockData; cycleState
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)Z canAttackBlock
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
cty$1 com/mojang/blaze3d/font/TrueTypeGlyphProvider$1
net/minecraft/server/ToolMaterial net/minecraft/world/item/Tier
	a ()I getUses
	b ()F getSpeed
	c ()F getAttackDamageBonus
	d ()I getLevel
	e ()I getEnchantmentValue
	f ()Lnet/minecraft/server/RecipeItemStack; getRepairIngredient
cuk$b com/mojang/blaze3d/platform/PngInfo$StbReaderBufferedChannel
	b channel
	c readBufferAddress
	d bufferSize
	e read
	f consumed
	a (I)V skip
	b (I)V fillReadBuffer
	b (JI)I read
cuk$a com/mojang/blaze3d/platform/PngInfo$StbReader
	a closed
	a (I)V skip
	a (J)I eof
	a (JI)V skip
	a (JJI)I read
	b (JI)I read
net/minecraft/server/PacketListener net/minecraft/network/PacketListener
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
net/minecraft/server/CommandScoreboard net/minecraft/server/commands/ScoreboardCommand
	a ERROR_OBJECTIVE_ALREADY_EXISTS
	b ERROR_DISPLAY_SLOT_ALREADY_EMPTY
	c ERROR_DISPLAY_SLOT_ALREADY_SET
	d ERROR_TRIGGER_ALREADY_ENABLED
	e ERROR_NOT_TRIGGER
	f ERROR_NO_VALUE
	a ()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; createRenderTypeModify
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$17
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listTrackedPlayers
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I clearDisplaySlot
	a (Lnet/minecraft/server/CommandListenerWrapper;ILnet/minecraft/server/ScoreboardObjective;)I setDisplaySlot
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I listTrackedPlayerScores
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/server/IScoreboardCriteria;Lnet/minecraft/server/IChatBaseComponent;)I addObjective
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)I getScore
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I resetScores
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTriggers
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;)I enableTrigger
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;I)I setScore
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;Lcv$a;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;)I performOperation
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardObjective;)I removeObjective
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardObjective;Lnet/minecraft/server/IChatBaseComponent;)I setDisplayName
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardObjective;Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay;)I setRenderType
	a (Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay;Lcom/mojang/brigadier/context/CommandContext;)I lambda$createRenderTypeModify$20
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	b (Lnet/minecraft/server/CommandListenerWrapper;)I listObjectives
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;)I resetScore
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;I)I addScore
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	c (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$1
	c (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;I)I removeScore
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
net/minecraft/server/WorldGenReed net/minecraft/world/level/levelgen/feature/ReedsFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/Blocks net/minecraft/world/level/block/Blocks
	JIGSAW JIGSAW_BLOCK
	a (Ljava/lang/String;Lnet/minecraft/server/Block;)Lnet/minecraft/server/Block; register
net/minecraft/server/EntityPigZombie$PathfinderGoalAnger net/minecraft/world/entity/monster/PigZombie$PigZombieAngerTargetGoal
	a ()Z canUse
net/minecraft/server/BiomeLayoutCheckerboardConfiguration net/minecraft/world/level/biome/CheckerboardBiomeSourceSettings
	a allowedBiomes
	b size
	a ()[Lnet/minecraft/server/BiomeBase; getAllowedBiomes
	a (I)Lnet/minecraft/server/BiomeLayoutCheckerboardConfiguration; setSize
	a ([Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeLayoutCheckerboardConfiguration; setAllowedBiomes
	b ()I getSize
net/minecraft/server/UtilColor net/minecraft/util/StringUtil
	a STRIP_COLOR_PATTERN
	a (I)Ljava/lang/String; formatTickDuration
	a (Ljava/lang/String;)Ljava/lang/String; stripColor
	a (Ljava/lang/String;IZ)Ljava/lang/String; truncateStringIfNecessary
	b (Ljava/lang/String;)Z isNullOrEmpty
cuk$1 com/mojang/blaze3d/platform/PngInfo$1
net/minecraft/server/EntityHorseChestedAbstract net/minecraft/world/entity/animal/horse/AbstractChestedHorse
	bI DATA_ID_CHEST
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aP ()D getRideHeight
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cF ()V dropEquipment
	cl ()V registerAttributes
	dW ()I getInventorySize
	dX ()Lnet/minecraft/server/SoundEffect; getAngrySound
	dY ()V playChestEquipsSound
	dZ ()I getInventoryColumns
	isCarryingChest ()Z hasChest
	setCarryingChest (Z)V setChest
	u_ ()V defineSynchedData
net/minecraft/server/LootValueBounds net/minecraft/world/level/storage/loot/RandomValueBounds
	d min
	e max
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (F)Lnet/minecraft/server/LootValueBounds; exactly
	a (FF)Lnet/minecraft/server/LootValueBounds; between
	a (I)Z matchesValue
	a (Ljava/util/Random;)I getInt
	a (Lnet/minecraft/server/LootValueBounds;)F access$000
	b ()F getMin
	b (Ljava/util/Random;)F getFloat
	b (Lnet/minecraft/server/LootValueBounds;)F access$100
	c ()F getMax
net/minecraft/server/VillagerData net/minecraft/world/entity/npc/VillagerData
	a NEXT_LEVEL_XP_THRESHOLDS
	b type
	c profession
	d level
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	b (I)I getMinXpPerLevel
	c (I)I getMaxXpPerLevel
	d (I)Z canLevelUp
	withLevel (I)Lnet/minecraft/server/VillagerData; setLevel
	withProfession (Lnet/minecraft/server/VillagerProfession;)Lnet/minecraft/server/VillagerData; setProfession
	withType (Lnet/minecraft/server/VillagerType;)Lnet/minecraft/server/VillagerData; setType
net/minecraft/server/ShapeDetectorBuilder net/minecraft/world/level/block/state/pattern/BlockPatternBuilder
	a COMMA_JOINED
	b pattern
	c lookup
	d height
	e width
	a ()Lnet/minecraft/server/ShapeDetectorBuilder; start
	a (CLjava/util/function/Predicate;)Lnet/minecraft/server/ShapeDetectorBuilder; where
	a ([Ljava/lang/String;)Lnet/minecraft/server/ShapeDetectorBuilder; aisle
	b ()Lnet/minecraft/server/ShapeDetector; build
	c ()[[[Ljava/util/function/Predicate; createPattern
	d ()V ensureAllCharactersMatched
net/minecraft/server/WorldGenForestTree net/minecraft/world/level/levelgen/feature/DarkOakFeature
	a LOG
	aS LEAVES
	a (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;)Z doPlace
	a (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;)V placeLogAt
	a (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;I)Z canPlaceTreeOfHeight
	a (Lnet/minecraft/server/VirtualLevelWritable;IIILnet/minecraft/server/StructureBoundingBox;Ljava/util/Set;)V placeLeafAt
net/minecraft/server/BiomeTaigaMutated net/minecraft/world/level/biome/TaigaMountainsBiome
net/minecraft/server/BiomeMushroomIslandShore net/minecraft/world/level/biome/MushroomFieldsShoreBiome
aib net/minecraft/world/damagesource/package-info
net/minecraft/server/DragonControllerCharge net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase
	b LOGGER
	c targetLocation
	d timeSinceCharge
	a (Lnet/minecraft/server/Vec3D;)V setTarget
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
net/minecraft/server/EnumMainHand net/minecraft/world/entity/HumanoidArm
	c name
	d $VALUES
	a ()Lnet/minecraft/server/EnumMainHand; getOpposite
net/minecraft/server/BiomeMushrooms net/minecraft/world/level/biome/MushroomFieldsBiome
ail net/minecraft/world/effect/package-info
net/minecraft/server/CriterionConditionEnchantments net/minecraft/advancements/critereon/EnchantmentPredicate
	a ANY
	b enchantment
	c level
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionEnchantments; fromJson
	a (Ljava/util/Map;)Z containedIn
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
	b (Lcom/google/gson/JsonElement;)[Lnet/minecraft/server/CriterionConditionEnchantments; fromJsonArray
net/minecraft/server/WorldGenHugeMushroomConfiguration net/minecraft/world/level/levelgen/feature/HugeMushroomFeatureConfig
	a planted
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenHugeMushroomConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
aiq net/minecraft/world/entity/EntityEvent
cty$a com/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph
	a this$0
	b width
	c height
	d bearingX
	e bearingY
	f advance
	g index
	a ()F getBearingX
	a (II)V upload
	d ()I getPixelWidth
	e ()I getPixelHeight
	f ()Z isColored
	g ()F getOversample
	l ()F getBearingY
net/minecraft/server/DataConverterRecipeRename net/minecraft/util/datafix/fixes/RecipesRenameningFix
	a RECIPES
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$2
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
net/minecraft/server/LightEngineThreaded$Update net/minecraft/server/level/ThreadedLevelLightEngine$TaskType
	c $VALUES
net/minecraft/server/IWorldInventory net/minecraft/world/WorldlyContainer
net/minecraft/server/BiomeRiver net/minecraft/world/level/biome/RiverBiome
dlk$a net/minecraft/client/particle/MobAppearanceParticle$Provider
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
aze$4 net/minecraft/world/inventory/GrindstoneMenu$4
	a val$access
	b this$0
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/World;)I getExperienceAmount
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$onTake$0
	e (Lnet/minecraft/server/ItemStack;)I getExperienceFromItem
net/minecraft/server/BehaviorInteractDoor net/minecraft/world/entity/ai/behavior/InteractWithDoor
	a (Ljava/util/List;Lnet/minecraft/server/WorldServer;ILnet/minecraft/server/BehaviorController;Lnet/minecraft/server/BlockPosition;)V lambda$openOrCloseDoors$3
	a (Ljava/util/List;Lnet/minecraft/server/WorldServer;ILnet/minecraft/server/EntityLiving;Ljava/util/Set;)V lambda$closeAllOpenedDoors$4
	a (Lnet/minecraft/server/PathPoint;)Lnet/minecraft/server/BlockPosition; lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Ljava/util/List;ILnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BehaviorController;)V closeAllOpenedDoors
	a (Lnet/minecraft/server/WorldServer;Ljava/util/List;Ljava/util/List;)Ljava/util/Set; getDoorsThatAreOnMyPath
	a (Lnet/minecraft/server/WorldServer;Ljava/util/List;Ljava/util/Set;ILnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BehaviorController;)V openOrCloseDoors
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/GlobalPos;)Z lambda$getDoorsThatAreOnMyPath$1
	a (ZLnet/minecraft/server/GlobalPos;Ljava/util/Set;)V lambda$null$2
aze$3 net/minecraft/world/inventory/GrindstoneMenu$3
	a this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
aze$2 net/minecraft/world/inventory/GrindstoneMenu$2
	a this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
aze$1 net/minecraft/world/inventory/GrindstoneMenu$1
	a this$0
	e ()V setChanged
ajd net/minecraft/world/entity/OwnableEntity
	A_ ()Ljava/util/UUID; getOwnerUUID
	B_ ()Lnet/minecraft/server/Entity; getOwner
cih$a net/minecraft/world/level/levelgen/structure/JunglePyramidPiece$MossStoneSelector
	a (Ljava/util/Random;IIIZ)V next
ajf net/minecraft/world/entity/PlayerRideable
net/minecraft/server/LootItemFunctionUser net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder
	b (Lcqh$a;)Ljava/lang/Object; apply
	c ()Ljava/lang/Object; unwrap
bq$a net/minecraft/advancements/critereon/SummonedEntityTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
bq$b net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance
	a entity
	a (Lav$a;)Lbq$b; summonedEntity
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/server/GenLayerCleaner net/minecraft/world/level/newbiome/layer/RiverInitLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
net/minecraft/server/CommandTag net/minecraft/server/commands/TagCommand
	a ERROR_ADD_FAILED
	b ERROR_REMOVE_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$2
	a (Ljava/util/Collection;)Ljava/util/Collection; getTags
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I listTags
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Ljava/lang/String;)I addTag
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Ljava/lang/String;)I removeTag
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
cih$1 net/minecraft/world/level/levelgen/structure/JunglePyramidPiece$1
atl$1 net/minecraft/world/entity/decoration/ArmorStand$1
	a $SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
net/minecraft/server/TileEntityChest net/minecraft/world/level/block/entity/ChestBlockEntity
	a openness
	b oOpenness
	j tickInterval
	viewingCount openCount
	M_ ()I getContainerSize
	T_ ()V tick
	a (F)F getOpenNess
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getOpenCount
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NonNullList;)V setItems
	a (Lnet/minecraft/server/SoundEffect;)V playSound
	a (Lnet/minecraft/server/TileEntityChest;Lnet/minecraft/server/TileEntityChest;)V swapContents
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/TileEntityContainer;III)I getOpenCount
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/TileEntityContainer;IIIII)I getOpenCount
	a_ (II)Z triggerEvent
	a_ (Lnet/minecraft/server/EntityHuman;)V startOpen
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b_ (Lnet/minecraft/server/EntityHuman;)V stopOpen
	c ()Z isEmpty
	f ()Lnet/minecraft/server/NonNullList; getItems
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	onOpen ()V signalOpenCount
net/minecraft/server/CommandPardonIP net/minecraft/server/commands/PardonIpCommand
	a ERROR_INVALID
	b ERROR_NOT_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I unban
dky$1 net/minecraft/client/particle/EnchantmentTableParticle$1
ajv net/minecraft/world/entity/ai/attributes/package-info
net/minecraft/server/BlockPotatoes net/minecraft/world/level/block/PotatoBlock
	a SHAPE_BY_AGE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	f ()Lnet/minecraft/server/IMaterial; getBaseSeedId
net/minecraft/server/InventoryCrafting net/minecraft/world/inventory/CraftingContainer
	b width
	c height
	container menu
	L_ ()V clearContent
	M_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (II)Lnet/minecraft/server/ItemStack; getItem
	c ()Z isEmpty
	e ()V setChanged
	f ()I getHeight
	g ()I getWidth
czr$a net/minecraft/client/gui/components/LockIconButton$Icon
	a LOCKED
	b LOCKED_HOVER
	c LOCKED_DISABLED
	d UNLOCKED
	e UNLOCKED_HOVER
	f UNLOCKED_DISABLED
	g x
	h y
	i $VALUES
	a ()I getX
	b ()I getY
net/minecraft/server/PacketPlayOutWorldEvent net/minecraft/network/protocol/game/ClientboundLevelEventPacket
	a type
	b pos
	c data
	d globalEvent
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Z isGlobalEvent
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getType
	d ()I getData
	e ()Lnet/minecraft/server/BlockPosition; getPos
cda$a net/minecraft/world/level/levelgen/feature/NetherFortressFeature$NetherBridgeStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
net/minecraft/server/ItemElytra net/minecraft/world/item/ElytraItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)F lambda$new$0
	e (Lnet/minecraft/server/ItemStack;)Z isFlyEnabled
net/minecraft/server/DimensionManager net/minecraft/world/level/dimension/DimensionType
	hasSkyLight hasSkylight
	providerFactory factory
	suffix fileSuffix
	a ()Ljava/lang/Iterable; getAllTypes
	a (I)Lnet/minecraft/server/DimensionManager; getById
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/DimensionManager; of
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Ljava/io/File;)Ljava/io/File; getStorageFolder
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/MinecraftKey; getName
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/DimensionManager; getByName
	getDimensionID ()I getId
	getSuffix ()Ljava/lang/String; getFileSuffix
	getWorldProvider (Lnet/minecraft/server/World;)Lnet/minecraft/server/WorldProvider; create
net/minecraft/server/WorldGenTaiga2 net/minecraft/world/level/levelgen/feature/SpruceFeature
	a TRUNK
	aS LEAF
	a (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;)Z doPlace
net/minecraft/server/WorldGenTaiga1 net/minecraft/world/level/levelgen/feature/PineFeature
	a TRUNK
	aS LEAF
	a (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;)Z doPlace
net/minecraft/server/BlockStem net/minecraft/world/level/block/StemBlock
	b SHAPE_BY_AGE
	blockFruit fruit
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	d ()Lnet/minecraft/server/Item; getSeedItem
	e ()Lnet/minecraft/server/BlockStemmed; getFruit
net/minecraft/server/DispenseBehaviorShulkerBox net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
net/minecraft/server/BiomeHell net/minecraft/world/level/biome/NetherBiome
net/minecraft/server/TileEntityDispenser net/minecraft/world/level/block/entity/DispenserBlockEntity
	a RANDOM
	M_ ()I getContainerSize
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NonNullList;)V setItems
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c ()Z isEmpty
	f ()Lnet/minecraft/server/NonNullList; getItems
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	h ()I getRandomSlot
net/minecraft/server/PathfinderGoalRandomTargetNonTamed net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal
	i tamableMob
	a ()Z canUse
	b ()Z canContinueToUse
cqg$b net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder
	a constructor
	a ()Lcqg$b; getThis
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcqg$a; getThis
net/minecraft/server/PlayerChunk$State net/minecraft/server/level/ChunkHolder$FullChunkStatus
	e $VALUES
	isAtLeast (Lnet/minecraft/server/PlayerChunk$State;)Z isOrAfter
cqg$a net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder
	a conditions
	a (Lcrk$a;)Lcqg$a; when
	b (Lcrk$a;)Ljava/lang/Object; when
	c ()Ljava/lang/Object; unwrap
	d ()Lcqg$a; getThis
	f ()Lcqg$a; unwrap
	g ()[Lnet/minecraft/server/LootItemCondition; getConditions
cpu$1 net/minecraft/world/level/storage/loot/entries/TagEntry$1
	a val$item
	c this$0
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
net/minecraft/server/LootItemConditions net/minecraft/world/level/storage/loot/predicates/LootItemConditions
	a CONDITIONS_BY_NAME
	b CONDITIONS_BY_CLASS
	a (Lcrk$b;)V register
	a (Ljava/lang/Object;)Z lambda$orConditions$2
	a (Lnet/minecraft/server/LootItemCondition;)Lcrk$b; getSerializer
	a (Lnet/minecraft/server/MinecraftKey;)Lcrk$b; getSerializer
	a ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; andConditions
	a ([Ljava/util/function/Predicate;Ljava/lang/Object;)Z lambda$orConditions$3
	b (Ljava/lang/Object;)Z lambda$andConditions$0
	b ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; orConditions
	b ([Ljava/util/function/Predicate;Ljava/lang/Object;)Z lambda$andConditions$1
net/minecraft/server/EnchantmentTridentLoyalty net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/ResourceDataAbstract net/minecraft/server/packs/resources/SimplePreparableReloadListener
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; lambda$reload$0
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Ljava/lang/Object;)V lambda$reload$1
	a (Lxd$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
net/minecraft/server/LootContextParameter net/minecraft/world/level/storage/loot/parameters/LootContextParam
	a name
	a ()Lnet/minecraft/server/MinecraftKey; getName
net/minecraft/server/BossBattle$BarStyle net/minecraft/world/BossEvent$BossBarOverlay
	f name
	g $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/BossBattle$BarStyle; byName
cqg$c net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemFunction; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/SharedConstants net/minecraft/SharedConstants
	a NETTY_LEAK_DETECTION
	allowedCharacters ILLEGAL_FILE_CHARACTERS
	b IS_RUNNING_IN_IDE
	d CURRENT_VERSION
	a ()Lcom/mojang/bridge/game/GameVersion; getCurrentVersion
	a (Lcom/mojang/bridge/game/GameVersion;)V setVersion
	a (Ljava/lang/String;)Ljava/lang/String; filterText
	b (Ljava/lang/String;)Ljava/lang/String; filterUnicodeSupplementary
net/minecraft/server/CommandDataAccessorEntity net/minecraft/server/commands/data/EntityDataAccessor
	a PROVIDER
	b ERROR_NO_PLAYERS
	c entity
	a ()Lnet/minecraft/server/NBTTagCompound; getData
	a (Lcr$h;DI)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Ljava/lang/String;)Luf$c; lambda$static$0
	a (Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/server/NBTTagCompound;)V setData
	b ()Lnet/minecraft/server/IChatBaseComponent; getModifiedSuccess
byd$1 net/minecraft/world/level/chunk/UpgradeData$1
net/minecraft/server/LootItemConditionTableBonus net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition
	a enchantment
	b values
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/Enchantment;[F)Lcrk$a; bonusLevelFlatChance
	a (Lnet/minecraft/server/LootItemConditionTableBonus;)Lnet/minecraft/server/Enchantment; access$000
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b (Lnet/minecraft/server/Enchantment;[F)Lnet/minecraft/server/LootItemCondition; lambda$bonusLevelFlatChance$0
	b (Lnet/minecraft/server/LootItemConditionTableBonus;)[F access$100
net/minecraft/server/BehaviorMakeLove net/minecraft/world/entity/ai/behavior/MakeLove
	a birthTimestamp
	a (Lnet/minecraft/server/EntityVillager;)Lnet/minecraft/server/EntityVillager; getBreedingTarget
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/BlockPosition;)Z canReach
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityVillager;)Ljava/util/Optional; breed
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/BlockPosition;)V giveBedToChild
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityVillager;)V tryToGiveBirth
	b (Lnet/minecraft/server/EntityVillager;)Z isBreedingPossible
	b (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/BlockPosition;)Z lambda$takeVacantBed$0
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Ljava/util/Optional; takeVacantBed
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/World net/minecraft/world/level/Level
	a DIRECTIONS
	b cloudColor
	chunkProvider chunkSource
	d LOGGER
	i randValue
	j addend
	lastRainLevel oRainLevel
	lastThunderLevel oThunderLevel
	methodProfiler profiler
	serverThread thread
	tickingTileEntities updatingBlockEntities
	tileEntityList blockEntityList
	tileEntityListPending pendingBlockEntities
	tileEntityListTick tickableBlockEntities
	tileEntityListUnload blockEntitiesToUnload
	u skyDarken
	v skyFlashTime
	worldData levelData
	worldProvider dimension
	A (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getPendingBlockEntityAt
	E ()Lnet/minecraft/server/IChunkProvider; getChunkSource
	J ()Z isDay
	L ()Ljava/lang/String; gatherChunkSourceStats
	M ()V updateSkyBrightness
	N ()V prepareWeather
	O ()Lnet/minecraft/server/ChunkStatus; statusForCollisions
	P ()Lnet/minecraft/server/WorldType; getGeneratorType
	Q ()V disconnect
	U ()Z isThundering
	X ()D getHorizonHeight
	Y ()I getSkyFlashTime
	a ()V tickTime
	a (DDDDDDLnet/minecraft/server/NBTTagCompound;)V createFireworks
	a (DDDLnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FFZ)V playLocalSound
	a (F)F getSkyDarken
	a (II)Lnet/minecraft/server/IChunkAccess; getChunk
	a (IIII)Lnet/minecraft/server/BlockPosition; getBlockRandomPos
	a (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	a (ILnet/minecraft/server/BlockPosition;I)V destroyBlockProgress
	a (J)V setGameTime
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntitiesOfClass
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldMap; getMapData
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;IZ)Lnet/minecraft/server/BlockPosition; findNearestMapFeature
	a (Ljava/util/Collection;)V addAllPendingBlockEntities
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/Entity;)V guardEntityTick
	a (Lnet/minecraft/server/AxisAlignedBB;)Z containsAnyBlocks
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/Block;)Lnet/minecraft/server/IBlockData; containsBlock
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/Material;)Z containsMaterial
	a (Lnet/minecraft/server/Block;)Ljava/lang/String; lambda$neighborChanged$0
	a (Lnet/minecraft/server/BlockPosition;F)Lnet/minecraft/server/Vec3D; getSkyColor
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V blockUpdated
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;)V neighborChanged
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/EnumDirection;)V updateNeighborsAtExceptFromFacing
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)Z loadedAndEntityCanStandOn
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)Z setBlock
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V onBlockStateChange
	a (Lnet/minecraft/server/BlockPosition;Z)Z removeBlock
	a (Lnet/minecraft/server/CrashReport;)Lnet/minecraft/server/CrashReportSystemDetails; fillReportDetails
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;)Z mayInteract
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/BlockPosition;)I getBrightness
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/HeightMap$Type;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; getHeightmapPos
	a (Lnet/minecraft/server/MaterialPredicate;Lnet/minecraft/server/BlockPosition;)Z lambda$containsMaterial$3
	a (Lnet/minecraft/server/Packet;)V sendPacketToServer
	a (Lnet/minecraft/server/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/server/ParticleParam;ZDDDDDD)V addParticle
	a (Lnet/minecraft/server/TileEntity;)Z addBlockEntity
	a (Lnet/minecraft/server/WorldMap;)V setMapData
	a_ (Lnet/minecraft/server/BlockPosition;)V setSpawnPos
	a_ (Lnet/minecraft/server/BlockPosition;I)I getRawBrightness
	applyPhysics (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V updateNeighborsAt
	b ()Ljava/lang/String; lambda$fillReportDetails$5
	b (F)F getSunAngle
	b (I)Z isOutsideBuildHeight
	b (ILnet/minecraft/server/BlockPosition;I)V globalLevelEvent
	b (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getLoadedEntitiesOfClass
	b (Lnet/minecraft/server/AxisAlignedBB;)Z containsFireBlock
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V setBlocksDirty
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V blockEntityChanged
	b (Lnet/minecraft/server/BlockPosition;Z)Z destroyBlock
	b (Lnet/minecraft/server/ParticleParam;DDDDDD)V addAlwaysVisibleParticle
	b (Lnet/minecraft/server/ParticleParam;ZDDDDDD)V addAlwaysVisibleParticle
	b (Lnet/minecraft/server/TileEntity;)Ljava/lang/String; lambda$tickBlockEntities$2
	broadcastEntityEffect (Lnet/minecraft/server/Entity;B)V broadcastEntityEvent
	c ()I getSkyDarken
	c (F)Lnet/minecraft/server/Vec3D; getCloudColor
	c (I)V setSkyFlashTime
	c (II)Lnet/minecraft/server/Chunk; getChunk
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BiomeBase; getBiome
	c (Lnet/minecraft/server/TileEntity;)Ljava/lang/Object; lambda$addBlockEntity$1
	createExplosion (Lnet/minecraft/server/Entity;DDDFZLnet/minecraft/server/Explosion$Effect;)Lnet/minecraft/server/Explosion; explode
	createExplosion (Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;DDDFZLnet/minecraft/server/Explosion$Effect;)Lnet/minecraft/server/Explosion; explode
	d (F)Lnet/minecraft/server/Vec3D; getFogColor
	d (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	douseFire (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z extinguishFire
	e ()Z isClientSide
	e (F)F getStarBrightness
	e (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/DifficultyDamageScaler; getCurrentDifficultyAt
	e_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	f ()Ljava/lang/String; lambda$fillReportDetails$4
	f (F)F getThunderLevel
	g (F)V setThunderLevel
	getBlockFacePower (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	getBlockPower (Lnet/minecraft/server/BlockPosition;)I getDirectSignalTo
	getChunkAtWorldCoords (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Chunk; getChunkAt
	getCraftingManager ()Lnet/minecraft/server/CraftingManager; getRecipeManager
	getMethodProfiler ()Lnet/minecraft/server/GameProfilerFiller; getProfiler
	getMinecraftServer ()Lnet/minecraft/server/MinecraftServer; getServer
	getSpawn ()Lnet/minecraft/server/BlockPosition; getSharedSpawnPos
	getTime ()J getGameTime
	getWorldMapCount ()I getFreeMapId
	h (F)F getRainLevel
	i ()I getSeaLevel
	i (F)V setRainLevel
	i (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getTopBlockState
	isBlockFacePowered (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z hasSignal
	isBlockIndirectlyPowered (Lnet/minecraft/server/BlockPosition;)Z hasNeighborSignal
	isOutsideWorld (Lnet/minecraft/server/BlockPosition;)Z isOutsideBuildHeight
	isSavingDisabled ()Z noSave
	isValidLocation (Lnet/minecraft/server/BlockPosition;)Z isInWorldBounds
	j_ ()V validateSpawn
	k ()Ljava/util/Random; getRandom
	m_ ()Lnet/minecraft/server/World; getLevel
	n (Lnet/minecraft/server/BlockPosition;)Z isLoaded
	n_ ()J getSeed
	notify (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;I)V sendBlockUpdated
	p_ ()Lnet/minecraft/server/WorldData; getLevelData
	playBlockAction (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;II)V blockEvent
	q (Lnet/minecraft/server/BlockPosition;)I getBestNeighborSignal
	q_ ()Lnet/minecraft/server/WorldBorder; getWorldBorder
	r_ ()Lnet/minecraft/server/WorldProvider; getDimension
	removeTileEntity (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	s (Lnet/minecraft/server/BlockPosition;)Z isHumidAt
	setSpawnFlags (ZZ)V setSpawnSettings
	setTileEntity (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	setTypeUpdate (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z setBlockAndUpdate
	t ()Lnet/minecraft/server/TagRegistry; getTagManager
	updateAdjacentComparators (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V updateNeighbourForOutputSignal
	v ()V checkSession
net/minecraft/server/Reputation net/minecraft/world/entity/ai/gossip/GossipContainer
	a gossips
	a ()Ljava/util/Map; getGossipEntries
	a (II)I mergeValuesForTransfer
	a (Lapg$b;)V lambda$update$7
	a (Lcom/mojang/datafixers/Dynamic;)V update
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; store
	a (Lcom/mojang/datafixers/types/DynamicOps;Lapg$b;)Lcom/mojang/datafixers/Dynamic; lambda$store$6
	a (Ljava/util/Map$Entry;)Ljava/util/stream/Stream; lambda$unpack$1
	a (Ljava/util/Map;Ljava/util/UUID;)V lambda$getGossipEntries$0
	a (Ljava/util/Random;I)Ljava/util/Collection; selectGossipsForTransfer
	a (Ljava/util/UUID;)Lapg$a; getOrCreate
	a (Ljava/util/UUID;Ljava/util/function/Predicate;)I getReputation
	a (Ljava/util/UUID;Lnet/minecraft/server/ReputationType;)V remove
	a (Ljava/util/UUID;Lnet/minecraft/server/ReputationType;I)V add
	a (Ljava/util/function/DoublePredicate;Lnet/minecraft/server/ReputationType;Lapg$a;)Z lambda$getCountForType$4
	a (Lnet/minecraft/server/Reputation;Ljava/util/Random;I)V transferFrom
	a (Lnet/minecraft/server/ReputationType;)V remove
	a (Lnet/minecraft/server/ReputationType;II)I mergeValuesForAddition
	a (Lnet/minecraft/server/ReputationType;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer; lambda$add$5
	a (Lnet/minecraft/server/ReputationType;Ljava/util/function/DoublePredicate;)J getCountForType
	b ()V decay
	b (Lapg$b;)V lambda$transferFrom$3
	b (Ljava/util/UUID;)Lapg$a; lambda$getOrCreate$2
	b (Ljava/util/UUID;Lnet/minecraft/server/ReputationType;I)V remove
	c ()Ljava/util/stream/Stream; unpack
cqx$a net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder
	a required
	b optional
	a ()Lnet/minecraft/server/LootContextParameterSet; build
	a (Lnet/minecraft/server/LootContextParameter;)Lcqx$a; required
	b (Lnet/minecraft/server/LootContextParameter;)Lcqx$a; optional
net/minecraft/server/IFluidSource net/minecraft/world/level/block/BucketPickup
	removeFluid (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/FluidType; takeLiquid
net/minecraft/server/LootSelectorDynamic net/minecraft/world/level/storage/loot/entries/DynamicLoot
	c TYPE
	h name
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/server/LootSelectorDynamic;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lnet/minecraft/server/MinecraftKey;)Lcpr$a; dynamicEntry
	a (Lnet/minecraft/server/MinecraftKey;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; lambda$dynamicEntry$0
net/minecraft/server/ItemChorusFruit net/minecraft/world/item/ChorusFruitItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
net/minecraft/server/WorldGenTreeProviderAcacia net/minecraft/world/level/block/grower/AcaciaTreeGrower
	b (Ljava/util/Random;)Lnet/minecraft/server/WorldGenTreeAbstract; getFeature
amc net/minecraft/world/entity/ai/behavior/package-info
net/minecraft/server/DefinedStructureTestRandomBlockState net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest
	a blockState
	b probability
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
net/minecraft/server/ArgumentTileLocation net/minecraft/commands/arguments/blocks/BlockInput
	a state
	b properties
	c tag
	a ()Lnet/minecraft/server/IBlockData; getState
	a (Lnet/minecraft/server/ShapeDetectorBlock;)Z test
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z test
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;I)Z place
	b ()Lnet/minecraft/server/NBTTagCompound; getTag
	c ()Ljava/util/Set; getDefinedProperties
ame net/minecraft/world/entity/ai/control/Control
amk net/minecraft/world/entity/ai/control/package-info
net/minecraft/server/ResourcePackSourceVanilla net/minecraft/server/packs/repository/ServerPacksSource
	a vanillaPack
	a ()Lnet/minecraft/server/IResourcePack; lambda$loadPacks$0
	a (Ljava/util/Map;Lxa$b;)V loadPacks
cpu$a net/minecraft/world/level/storage/loot/entries/TagEntry$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorTag; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorTag;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
net/minecraft/server/WorldGenDesertPyramidPiece net/minecraft/world/level/levelgen/structure/DesertPyramidPiece
	e hasPlacedChest
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/BlockStructureVoid net/minecraft/world/level/block/StructureVoidBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	i (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
net/minecraft/server/PacketPlayInWindowClick net/minecraft/network/protocol/game/ServerboundContainerClickPacket
	a containerId
	button buttonNum
	d uid
	item itemStack
	shift clickType
	slot slotNum
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getSlotNum
	d ()I getButtonNum
	e ()S getUid
	f ()Lnet/minecraft/server/ItemStack; getItem
	g ()Lnet/minecraft/server/InventoryClickType; getClickType
net/minecraft/server/PacketPlayOutNamedEntitySpawn net/minecraft/network/protocol/game/ClientboundAddPlayerPacket
	a entityId
	b playerId
	c x
	d y
	e z
	f yRot
	g xRot
	h entityData
	i unpack
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/List; getUnpackedData
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getEntityId
	d ()Ljava/util/UUID; getPlayerId
	e ()D getX
	f ()D getY
	g ()D getZ
	h ()B getyRot
	i ()B getxRot
net/minecraft/server/PacketPlayInSpectate net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket
	a uuid
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	a (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/Entity; getEntity
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/EntityLeash net/minecraft/world/entity/decoration/LeashFenceKnotEntity
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/Entity;)V dropItem
	a (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/server/EnumDirection;)V setDirection
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EntityLeash; getOrCreateKnot
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (DDD)V setPos
	f ()V recalculateBoundingBox
	i ()Z survives
	k ()I getWidth
	l ()I getHeight
	m ()V playPlacementSound
net/minecraft/server/WorldGenFactory net/minecraft/world/level/levelgen/structure/StructureFeatureIO
	a MINESHAFT
	b PILLAGER_OUTPOST
	c NETHER_FORTRESS
	d STRONGHOLD
	e JUNGLE_PYRAMID
	f OCEAN_RUIN
	g DESERT_PYRAMID
	h IGLOO
	i SWAMP_HUT
	j OCEAN_MONUMENT
	k END_CITY
	l WOODLAND_MANSION
	m BURIED_TREASURE
	n SHIPWRECK
	o VILLAGE
	p LOGGER
	a ()V bootstrap
	a (Ljava/lang/String;Lnet/minecraft/server/StructureGenerator;)Lnet/minecraft/server/StructureGenerator; register
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/WorldChunkManager;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/StructureStart; loadStaticStart
net/minecraft/server/ItemBookAndQuill net/minecraft/world/item/WritableBookItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	b (Lnet/minecraft/server/NBTTagCompound;)Z makeSureTagIsValid
net/minecraft/server/DragonControllerLandedAttack net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase
	b attackingTicks
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
net/minecraft/server/BiomeBase$BiomeMeta net/minecraft/world/level/biome/Biome$SpawnerData
	b type
	c minCount
	d maxCount
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/BiomeBase$BiomeMeta; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lnet/minecraft/server/EntityTypes;)Z lambda$deserialize$0
net/minecraft/server/BlockChorusFlower net/minecraft/world/level/block/ChorusFlowerBlock
	b plant
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;I)V generatePlant
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;II)V growTreeRecursive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V placeDeadFlower
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/Entity;)V onProjectileHit
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z allNeighborsEmpty
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;I)V placeGrownFlower
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
bsk$1 net/minecraft/world/level/block/StructureBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
bba$5 net/minecraft/world/item/CreativeModeTab$2
	f ()Lnet/minecraft/server/ItemStack; makeIcon
bba$6 net/minecraft/world/item/CreativeModeTab$3
	f ()Lnet/minecraft/server/ItemStack; makeIcon
bba$3 net/minecraft/world/item/CreativeModeTab$11
	a (Lnet/minecraft/server/NonNullList;)V fillItemList
	f ()Lnet/minecraft/server/ItemStack; makeIcon
	n ()Z isAlignedRight
anp net/minecraft/world/entity/ai/goal/MoveIndoorsGoal
	a mob
	b insideX
	c insideZ
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	g ()Z isInside
net/minecraft/server/PacketPlayOutBlockBreak net/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket
	a action
	b LOGGER
	c pos
	d state
	e allGood
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/IBlockData; getState
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/BlockPosition; getPos
	d ()Z allGood
	e ()Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType; action
bba$4 net/minecraft/world/item/CreativeModeTab$12
	f ()Lnet/minecraft/server/ItemStack; makeIcon
net/minecraft/server/BlockLoom net/minecraft/world/level/block/LoomBlock
	a CONTAINER_TITLE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$getMenuProvider$0
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
bba$9 net/minecraft/world/item/CreativeModeTab$6
	f ()Lnet/minecraft/server/ItemStack; makeIcon
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdCorridor net/minecraft/world/level/levelgen/structure/StrongholdPieces$FillerCorridor
	a steps
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/StructureBoundingBox; findPieceBox
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
bba$7 net/minecraft/world/item/CreativeModeTab$4
	f ()Lnet/minecraft/server/ItemStack; makeIcon
bba$8 net/minecraft/world/item/CreativeModeTab$5
	f ()Lnet/minecraft/server/ItemStack; makeIcon
net/minecraft/server/EntityMinecartFurnace net/minecraft/world/entity/vehicle/MinecartFurnace
	b xPush
	c zPush
	d DATA_ID_FUEL
	e fuel
	f INGREDIENT
	a (Lnet/minecraft/server/DamageSource;)V destroy
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V moveAlongTrack
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	f ()D getMaxSpeed
	h ()V tick
	k ()V applyNaturalSlowdown
	n (Z)V setHasFuel
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	u_ ()V defineSynchedData
	v ()Z hasFuel
anz net/minecraft/world/entity/ai/goal/PlayGoal
	a mob
	b followFriend
	c speedModifier
	d playTime
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/NBTTagIntArray net/minecraft/nbt/IntArrayTag
	a ()B getId
	a (I)Lnet/minecraft/server/NBTTagInt; get
	a (ILnet/minecraft/server/NBTBase;)Z setTag
	a (ILnet/minecraft/server/NBTTagInt;)Lnet/minecraft/server/NBTTagInt; set
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)V load
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (Ljava/util/List;)[I toArray
	a_ ()I getElementType
	b ()Lnet/minecraft/server/NBTBase; copy
	b (I)Lnet/minecraft/server/NBTTagInt; remove
	b (ILnet/minecraft/server/NBTBase;)Z addTag
	b (ILnet/minecraft/server/NBTTagInt;)V add
	c ()Lnet/minecraft/server/NBTTagIntArray; copy
	c (I)Lnet/minecraft/server/NBTBase; remove
	c (ILnet/minecraft/server/NBTBase;)V add
	d (ILnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; set
	getInts ()[I getAsIntArray
net/minecraft/server/WorldGenFeatureTaigaGrass net/minecraft/world/level/levelgen/feature/TaigaGrassFeature
	a (Ljava/util/Random;)Lnet/minecraft/server/IBlockData; getState
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/MemoryModuleType net/minecraft/world/entity/ai/memory/MemoryModuleType
	B deserializer
	MOBS LIVING_ENTITIES
	VISIBLE_MOBS VISIBLE_LIVING_ENTITIES
	a (Ljava/lang/String;)Lnet/minecraft/server/MemoryModuleType; register
	a (Ljava/lang/String;Ljava/util/Optional;)Lnet/minecraft/server/MemoryModuleType; register
	getSerializer ()Ljava/util/Optional; getDeserializer
net/minecraft/server/DedicatedServer net/minecraft/server/dedicated/DedicatedServer
	h LOGGER
	i SHA1
	o gameType
	p gui
	propertyManager settings
	remoteControlCommandListener rconConsoleSource
	remoteControlListener rconThread
	remoteStatusListener queryThreadGs4
	serverCommandQueue consoleInput
	H_ ()Z shouldInformAdmins
	M ()Z getSpawnMonsters
	R ()Z isSnooperEnabled
	S ()Z isDedicatedServer
	X ()Z isEpollEnabled
	a (ILnet/minecraft/server/DedicatedServerProperties;)Lnet/minecraft/server/DedicatedServerProperties; lambda$setPlayerIdleTimeout$2
	a (Lnet/minecraft/server/EnumGamemode;)V setDefaultGameMode
	a (Lnet/minecraft/server/EnumGamemode;ZI)Z publishServer
	a (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooper
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)Z isUnderSpawnProtection
	a (ZLnet/minecraft/server/DedicatedServerProperties;)Lnet/minecraft/server/DedicatedServerProperties; lambda$storeUsingWhiteList$4
	aW ()Ljava/lang/String; getPackHash
	aY ()Lnet/minecraft/server/DedicatedPlayerList; getPlayerList
	aZ ()V showGui
	a_ (Ljava/lang/String;)Ljava/lang/String; runCommand
	aa ()Z isCommandBlockEnabled
	ae ()Lnet/minecraft/server/PlayerList; getPlayerList
	af ()Z isPublished
	ai ()Z hasGui
	an ()I getSpawnProtectionRadius
	aw ()I getAbsoluteMaxWorldSize
	az ()I getCompressionThreshold
	b (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	b (Ljava/util/function/BooleanSupplier;)V tickChildren
	b (Lnet/minecraft/server/CrashReport;)Lnet/minecraft/server/CrashReport; fillReport
	bc ()Lorg/apache/logging/log4j/Logger; access$000
	bk ()V waitForRetry
	bl ()Ljava/lang/String; lambda$fillReport$1
	bm ()Ljava/lang/String; lambda$fillReport$0
	c (I)V setPlayerIdleTimeout
	convertNames ()Z convertOldUsers
	d ()Z initServer
	d_ ()Lnet/minecraft/server/DedicatedServerProperties; getProperties
	e ()I getServerPort
	e_ ()Ljava/lang/String; getServerIp
	f ()Z canGenerateStructures
	f_ ()Ljava/lang/String; getServerName
	g ()Lnet/minecraft/server/EnumGamemode; getDefaultGameType
	getMaxTickTime ()J getMaxTickLength
	h ()Lnet/minecraft/server/EnumDifficulty; getDefaultDifficulty
	handleCommandQueue ()V handleConsoleInputs
	i ()Z isHardcore
	issueCommand (Ljava/lang/String;Lnet/minecraft/server/CommandListenerWrapper;)V handleConsoleInput
	j ()I getOperatorUserPermissionLevel
	k ()I getFunctionCompilationLevel
	l ()Z shouldRconBroadcast
	l (Ljava/lang/String;)V lambda$runCommand$3
	m ()V stopServer
	o ()Ljava/lang/String; getPluginNames
	setHasWhitelist (Z)V storeUsingWhiteList
	u ()V onServerExit
	v ()Z isNetherEnabled
ceu$a net/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory
net/minecraft/server/PacketPlayOutStatistic net/minecraft/network/protocol/game/ClientboundAwardStatsPacket
	a stats
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/Statistic;)I getId
	a (Lnet/minecraft/server/StatisticWrapper;Lnet/minecraft/server/PacketDataSerializer;)V readStat
	b ()Ljava/util/Map; getStats
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/ILightEngine net/minecraft/world/level/lighting/LightEventListener
	a ()Z hasLightWork
	a (IZZ)I runUpdates
	a (Lnet/minecraft/server/BlockPosition;)V checkBlock
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/server/BlockPosition;Z)V updateSectionStatus
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/server/SectionPosition;Z)V updateSectionStatus
byd$a net/minecraft/world/level/chunk/UpgradeData$BlockFixer
	a (Lnet/minecraft/server/GeneratorAccess;)V processChunk
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
net/minecraft/server/PacketPlayOutUpdateAttributes net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket
	a entityId
	b attributes
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getEntityId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/List; getValues
net/minecraft/server/BiomeColdOcean net/minecraft/world/level/biome/ColdOceanBiome
net/minecraft/server/BlockWeb net/minecraft/world/level/block/WebBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
net/minecraft/server/RecipeSerializerCooking net/minecraft/world/item/crafting/SimpleCookingSerializer
	u defaultCookingTime
	v factory
	a (Ljava/lang/String;)Ljava/lang/IllegalStateException; lambda$fromJson$0
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/RecipeCooking;)V toNetwork
	b (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/RecipeCooking; fromJson
	b (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/RecipeCooking; fromNetwork
bba$1 net/minecraft/world/item/CreativeModeTab$1
	f ()Lnet/minecraft/server/ItemStack; makeIcon
bba$2 net/minecraft/world/item/CreativeModeTab$10
	f ()Lnet/minecraft/server/ItemStack; makeIcon
aom net/minecraft/world/entity/ai/goal/TakeFlowerGoal
	a villager
	b golem
	c pickupTick
	d takeFlower
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
cla$1 net/minecraft/world/level/lighting/LayerLightSectionStorage$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece2 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentCoreRoom
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
clr$b net/minecraft/world/level/material/WaterFluid$Source
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d (Lnet/minecraft/server/Fluid;)I getAmount
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece1 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentBuilding
	p sourceRoom
	q coreRoom
	r childPieces
	a (Ljava/util/Random;)Ljava/util/List; generateRoomGraph
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateEntranceArchs
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (ZILnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateWing
	b (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateEntranceWall
	c (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateRoofPiece
	d (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateLowerWall
	e (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateMiddleWall
	f (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateUpperWall
net/minecraft/server/IDragonController net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance
	a ()Z isSitting
	a (Lnet/minecraft/server/DamageSource;F)F onHurt
	a (Lnet/minecraft/server/EntityEnderCrystal;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DamageSource;Lnet/minecraft/server/EntityHuman;)V onCrystalDestroyed
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	e ()V end
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	getControllerPhase ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	h ()F getTurnSpeed
net/minecraft/server/CommandClone net/minecraft/server/commands/CloneCommands
	a FILTER_AIR
	b ERROR_OVERLAP
	c ERROR_AREA_TOO_LARGE
	d ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;Lnet/minecraft/server/CommandClone$Mode;)I clone
	a (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$null$11
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	b (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$null$9
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	c (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$null$7
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	d (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$null$5
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	e (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$null$3
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	f (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$static$1
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
dod$a net/minecraft/client/renderer/block/model/BlockFaceUV$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldod; deserialize
	a (Lcom/google/gson/JsonObject;)I getRotation
	b (Lcom/google/gson/JsonObject;)[F getUVs
clr$a net/minecraft/world/level/material/WaterFluid$Flowing
	a (Lbvu$a;)V createFluidStateDefinition
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d (Lnet/minecraft/server/Fluid;)I getAmount
bio$1 net/minecraft/world/level/biome/Biome$1
	a this$0
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece4 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXYRoom
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece3 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXRoom
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece6 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYZRoom
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
uy$1 net/minecraft/server/level/ChunkTaskPriorityQueueSorter$1
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece5 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYRoom
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/EnchantmentLure net/minecraft/world/item/enchantment/FishingSpeedEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
aov net/minecraft/world/entity/ai/goal/package-info
net/minecraft/server/BehaviorPickupItem net/minecraft/world/entity/ai/behavior/PickUpItems
	a items
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
net/minecraft/server/LootItemFunctionConditional net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction
	a compositePredicates
	b predicates
	a (Ljava/util/function/Function;)Lcqg$a; simpleBuilder
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootCollector;Ljava/util/function/Function;Ljava/util/Set;Lnet/minecraft/server/LootContextParameterSet;)V validate
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; apply
aro$b net/minecraft/world/entity/animal/PolarBear$PolarBearGroupData
net/minecraft/server/Vec2F net/minecraft/world/phys/Vec2
	a ZERO
	b ONE
	c UNIT_X
	d NEG_UNIT_X
	e UNIT_Y
	f NEG_UNIT_Y
	g MAX
	h MIN
	i x
	j y
	a ()Lnet/minecraft/server/Vec2F; normalized
	a (F)Lnet/minecraft/server/Vec2F; scale
	a (Lnet/minecraft/server/Vec2F;)F dot
	b ()F length
	b (F)Lnet/minecraft/server/Vec2F; add
	b (Lnet/minecraft/server/Vec2F;)Lnet/minecraft/server/Vec2F; add
	c ()F lengthSquared
	c (Lnet/minecraft/server/Vec2F;)Z equals
	d ()Lnet/minecraft/server/Vec2F; negated
	d (Lnet/minecraft/server/Vec2F;)F distanceToSqr
net/minecraft/server/BlockCarrots net/minecraft/world/level/block/CarrotBlock
	a SHAPE_BY_AGE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	f ()Lnet/minecraft/server/IMaterial; getBaseSeedId
cwr$a com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionList
	a this$0
	a (I)V removeAtIndex
	b (I)V selectInviteListItem
aro$c net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal
	a this$0
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V alertOther
	c ()V start
aro$d net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal
	d this$0
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
	a (Lnet/minecraft/server/EntityLiving;D)V checkAndPerformAttack
	d ()V stop
aro$e net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal
	f this$0
	a ()Z canUse
cwr$b com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionListEntry
	a pendingInvite
	b this$0
	c rowButtons
	a (II)V lambda$renderPendingInvitationItem$0
	a (Lcom/mojang/realmsclient/dto/PendingInvite;IIII)V renderPendingInvitationItem
apf net/minecraft/world/entity/ai/goal/target/package-info
aro$a net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal
	i this$0
	a ()Z canUse
	k ()D getFollowDistance
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece8 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentWingRoom
	p mainDesign
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/EntityGuardianElder net/minecraft/world/entity/monster/ElderGuardian
	b ELDER_SIZE_SCALE
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L ()V customServerAiStep
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	d (Lnet/minecraft/server/EntityPlayer;)Z lambda$customServerAiStep$0
	dV ()V setGhost
	dW ()Lnet/minecraft/server/SoundEffect; getFlopSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	l ()I getAttackDuration
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece7 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleZRoom
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/CommandReplaceItem net/minecraft/server/commands/ReplaceItemCommand
	a ERROR_NOT_A_CONTAINER
	b ERROR_INAPPLICABLE_SLOT
	c ERROR_ENTITY_SLOT
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;ILnet/minecraft/server/ItemStack;)I setEntityItem
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/ItemStack;)I setBlockItem
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
api net/minecraft/world/entity/ai/gossip/package-info
net/minecraft/server/SeededRandom net/minecraft/world/level/levelgen/WorldgenRandom
	a count
	a ()I getCount
	a (I)V consumeCount
	a (II)J setBaseChunkSeed
	a (IIJJ)Ljava/util/Random; seedSlimeChunk
	a (JII)J setDecorationSeed
	a (JIII)J setLargeFeatureWithSalt
	b (JII)J setFeatureSeed
	c (JII)J setLargeFeatureSeed
net/minecraft/server/SectionPosition net/minecraft/core/SectionPos
	a ()I x
	a (I)I blockToSectionCoord
	a (III)Lnet/minecraft/server/SectionPosition; of
	a (IIIIII)Ljava/util/stream/Stream; betweenClosedStream
	a (J)Lnet/minecraft/server/SectionPosition; of
	a (JIII)J offset
	a (JLnet/minecraft/server/EnumDirection;)J offset
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/SectionPosition; of
	a (Lnet/minecraft/server/ChunkCoordIntPair;I)Lnet/minecraft/server/SectionPosition; of
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/SectionPosition; of
	a (Lnet/minecraft/server/SectionPosition;I)Ljava/util/stream/Stream; cube
	b ()I y
	b (I)I sectionRelative
	b (III)J asLong
	b (J)I x
	b (Lnet/minecraft/server/BlockPosition;)S sectionRelativePos
	c ()I z
	c (I)I sectionToBlockCoord
	c (III)Lnet/minecraft/server/BaseBlockPosition; offset
	c (J)I y
	d ()I minBlockX
	d (III)Lnet/minecraft/server/SectionPosition; offset
	d (J)I z
	e ()I minBlockY
	e (J)J blockToSection
	f ()I minBlockZ
	f (J)J getZeroNode
	g ()I maxBlockX
	h ()I maxBlockY
	r ()I maxBlockZ
	s ()Lnet/minecraft/server/BlockPosition; origin
	t ()Lnet/minecraft/server/BlockPosition; center
	u ()Lnet/minecraft/server/ChunkCoordIntPair; chunk
	v ()J asLong
	w ()Ljava/util/stream/Stream; blocksInside
net/minecraft/server/ChatModifier net/minecraft/network/chat/Style
	a parent
	k ROOT
	a (Lnet/minecraft/server/ChatModifier;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$002
	a (Lnet/minecraft/server/ChatModifier;Ljava/lang/String;)Ljava/lang/String; access$602
	a (Lnet/minecraft/server/ChatModifier;Lnet/minecraft/server/ChatClickable;)Lnet/minecraft/server/ChatClickable; access$702
	a (Lnet/minecraft/server/ChatModifier;Lnet/minecraft/server/ChatHoverable;)Lnet/minecraft/server/ChatHoverable; access$802
	a (Lnet/minecraft/server/ChatModifier;Lnet/minecraft/server/EnumChatFormat;)Lnet/minecraft/server/EnumChatFormat; access$502
	b (Lnet/minecraft/server/ChatModifier;)Ljava/lang/Boolean; access$000
	b (Lnet/minecraft/server/ChatModifier;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$102
	c (Lnet/minecraft/server/ChatModifier;)Ljava/lang/Boolean; access$100
	c (Lnet/minecraft/server/ChatModifier;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$202
	clone ()Lnet/minecraft/server/ChatModifier; copy
	d (Lnet/minecraft/server/ChatModifier;)Ljava/lang/Boolean; access$200
	d (Lnet/minecraft/server/ChatModifier;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$302
	e (Lnet/minecraft/server/ChatModifier;)Ljava/lang/Boolean; access$300
	e (Lnet/minecraft/server/ChatModifier;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$402
	f (Lnet/minecraft/server/ChatModifier;)Ljava/lang/Boolean; access$400
	g ()Z isEmpty
	g (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/EnumChatFormat; access$500
	h (Lnet/minecraft/server/ChatModifier;)Ljava/lang/String; access$600
	i (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatClickable; access$700
	isRandom ()Z isObfuscated
	j (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatHoverable; access$800
	k ()Ljava/lang/String; getLegacyFormatCodes
	l ()Ljava/lang/String; toStringResolved
	n ()Lnet/minecraft/server/ChatModifier; flatCopy
	o ()Lnet/minecraft/server/ChatModifier; getParent
	setChatClickable (Lnet/minecraft/server/ChatClickable;)Lnet/minecraft/server/ChatModifier; setClickEvent
	setChatHoverable (Lnet/minecraft/server/ChatHoverable;)Lnet/minecraft/server/ChatModifier; setHoverEvent
	setChatModifier (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; inheritFrom
	setRandom (Ljava/lang/Boolean;)Lnet/minecraft/server/ChatModifier; setObfuscated
	setUnderline (Ljava/lang/Boolean;)Lnet/minecraft/server/ChatModifier; setUnderlined
net/minecraft/server/BehaviorProfession net/minecraft/world/entity/ai/behavior/ResetProfession
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
apm net/minecraft/world/entity/ai/memory/package-info
cwr$1 com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$1
	a this$0
	a (Lcom/mojang/realmsclient/dto/PendingInvite;)Lcwr$b; lambda$run$0
	a (Ljava/util/List;)V lambda$run$1
net/minecraft/server/CriterionTriggerRecipeUnlocked net/minecraft/advancements/critereon/RecipeUnlockedTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/IRecipe;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbo$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/Chunk$EnumTileEntityState net/minecraft/world/level/chunk/LevelChunk$EntityCreationType
	d $VALUES
cwr$4 com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$4
	a this$0
apt net/minecraft/world/entity/ai/package-info
net/minecraft/server/EnumCreatureType net/minecraft/world/entity/MobCategory
	f BY_NAME
	g max
	h isFriendly
	i isPersistent
	j name
	k $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumCreatureType; byName
	a (Lnet/minecraft/server/EnumCreatureType;)Lnet/minecraft/server/EnumCreatureType; lambda$static$0
	b ()I getMaxInstancesPerChunk
	c ()Z isFriendly
	d ()Z isPersistent
cwr$5 com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$5
	a val$slot
	b this$0
	a (I)V lambda$run$0
aps net/minecraft/world/entity/ai/navigation/package-info
cwr$2 com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$2
	a this$0
net/minecraft/server/BlockEndGateway net/minecraft/world/level/block/EndGatewayBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
cxd$a com/mojang/realmsclient/gui/screens/RealmsUploadScreen$Unit
	a B
	b KB
	c MB
	d GB
	e $VALUES
cwr$3 com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$3
	a this$0
net/minecraft/server/EntityFireworks net/minecraft/world/entity/projectile/FireworkRocketEntity
	FIREWORK_ITEM DATA_ID_FIREWORKS_ITEM
	c DATA_ATTACHED_TO_TARGET
	d DATA_SHOT_AT_ANGLE
	expectedLifespan lifetime
	ridingEntity attachedToEntity
	ticksFlown life
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (B)V handleEntityEvent
	a (D)Z shouldRenderAtSqrDistance
	a (I)V lambda$tick$0
	a (Lnet/minecraft/server/Entity;)Z lambda$tick$1
	a (Lnet/minecraft/server/Entity;FFFFF)V shootFromRotation
	a (Lnet/minecraft/server/MovingObjectPosition;)V performHitChecks
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bs ()Z isAttackable
	c (DDDFF)V shoot
	f ()Lnet/minecraft/server/ItemStack; getItem
	g (DDD)Z shouldRender
	h ()V tick
	h (DDD)V lerpMotion
	i ()Z isShotAtAngle
	l ()Z hasExplosion
	m ()V dealExplosionDamage
	n ()Z isAttachedToEntity
	u_ ()V defineSynchedData
net/minecraft/server/Vec3D net/minecraft/world/phys/Vec3
	a ZERO
	a ()D x
	a (D)Lnet/minecraft/server/Vec3D; scale
	a (DDD)Lnet/minecraft/server/Vec3D; subtract
	a (F)Lnet/minecraft/server/Vec3D; xRot
	a (FF)Lnet/minecraft/server/Vec3D; directionFromRotation
	a (Ljava/util/EnumSet;)Lnet/minecraft/server/Vec3D; align
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)D get
	a (Lnet/minecraft/server/Vec2F;)Lnet/minecraft/server/Vec3D; directionFromRotation
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; vectorTo
	a (Lnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/Vec3D; lerp
	b ()D y
	b (F)Lnet/minecraft/server/Vec3D; yRot
	b (Lnet/minecraft/server/Vec3D;)D dot
	c ()D z
	c (DDD)D distanceToSqr
	c (F)Lnet/minecraft/server/Vec3D; zRot
	c (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; cross
	d ()Lnet/minecraft/server/Vec3D; normalize
	d (DDD)Lnet/minecraft/server/Vec3D; multiply
	d (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; subtract
	distanceSquared (Lnet/minecraft/server/Vec3D;)D distanceToSqr
	e ()Lnet/minecraft/server/Vec3D; reverse
	e (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; add
	f ()D length
	f (Lnet/minecraft/server/Vec3D;)D distanceTo
	g ()D lengthSqr
	h (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; multiply
net/minecraft/server/PacketPlayOutRecipeUpdate net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket
	a recipes
	a (Lnet/minecraft/server/IRecipe;Lnet/minecraft/server/PacketDataSerializer;)V toNetwork
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/IllegalArgumentException; lambda$fromNetwork$0
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/List; getRecipes
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
net/minecraft/server/TileEntityComparator net/minecraft/world/level/block/entity/ComparatorBlockEntity
	a output
	a (I)V setOutputSignal
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	d ()I getOutputSignal
net/minecraft/server/ItemBoneMeal net/minecraft/world/item/BoneMealItem
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V addGrowthParticles
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z growCrop
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z growWaterPlant
net/minecraft/server/EntityRabbit$PathfinderGoalEatCarrots net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal
	entity rabbit
	h wantsToRaid
	i canRaid
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	e ()V tick
crk$a net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder
	a ()Lcrk$a; invert
	a (Lcrk$a;)Lcrb$a; or
dou$a net/minecraft/client/renderer/block/model/multipart/Selector$Deserializer
	a (Lcom/google/gson/JsonElement;)Ldoq; lambda$getCondition$1
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldou; deserialize
	a (Lcom/google/gson/JsonObject;)Ldoq; getCondition
	a (Ljava/util/Map$Entry;)Ldoq; getKeyValueCondition
	b (Lcom/google/gson/JsonElement;)Ldoq; lambda$getCondition$0
	b (Lcom/google/gson/JsonObject;)Ldoq; getSelector
crk$b net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Serializer
	a name
	b clazz
	a ()Lnet/minecraft/server/MinecraftKey; getName
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	b ()Ljava/lang/Class; getPredicateClass
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
net/minecraft/server/RayTrace$FluidCollisionOption net/minecraft/world/level/ClipContext$Fluid
	e $VALUES
	predicate canPick
	a (Lnet/minecraft/server/Fluid;)Z canPick
	b (Lnet/minecraft/server/Fluid;)Z lambda$static$1
	c (Lnet/minecraft/server/Fluid;)Z lambda$static$0
aqh net/minecraft/world/entity/ai/sensing/package-info
cwr$6 com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$6
	a val$slot
	b this$0
	a (I)V lambda$run$0
aqj net/minecraft/world/entity/ai/targeting/package-info
net/minecraft/server/PacketPlayOutResourcePackSend net/minecraft/network/protocol/game/ClientboundResourcePackPacket
	a url
	b hash
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/lang/String; getUrl
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/lang/String; getHash
aql net/minecraft/world/entity/ai/util/package-info
aqo net/minecraft/world/entity/ai/village/package-info
cwa$a com/mojang/realmsclient/gui/RealmsWorldSlotButton$Action
	a NOTHING
	b SWITCH_SLOT
	c JOIN
	d $VALUES
cwa$b com/mojang/realmsclient/gui/RealmsWorldSlotButton$Listener
	a (ILcwa$a;ZZ)V onSlotClick
bcv$a net/minecraft/world/item/ProjectileWeaponItem$Type
	a BOW
	b CROSSBOW
	c $VALUES
bce$1 net/minecraft/world/item/Item$1
	a $SwitchMap$net$minecraft$world$item$Rarity
aqt net/minecraft/world/entity/ai/village/poi/package-info
cwa$c com/mojang/realmsclient/gui/RealmsWorldSlotButton$State
	a isCurrentlyActiveSlot
	b slotName
	c imageId
	d image
	e empty
	f minigame
	g action
	h actionPrompt
aqw net/minecraft/world/entity/ambient/package-info
com/mojang/realmsclient/dto/RealmsServer$c com/mojang/realmsclient/dto/RealmsServer$WorldType
	a NORMAL
	b MINIGAME
	c ADVENTUREMAP
	d EXPERIENCE
	e INSPIRATION
	f $VALUES
com/mojang/realmsclient/dto/RealmsServer$b com/mojang/realmsclient/dto/RealmsServer$State
	a CLOSED
	b OPEN
	c UNINITIALIZED
	d $VALUES
com/mojang/realmsclient/dto/RealmsServer$a com/mojang/realmsclient/dto/RealmsServer$McoServerComparator
	a refOwner
	a (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/realmsclient/dto/RealmsServer;)I compare
net/minecraft/server/EntityItem net/minecraft/world/entity/item/ItemEntity
	ITEM DATA_ITEM
	b bobOffs
	f health
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	O ()Lnet/minecraft/server/IChatBaseComponent; getName
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/Entity; changeDimension
	a (Lnet/minecraft/server/EntityItem;)V merge
	a (Lnet/minecraft/server/EntityItem;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityItem;Lnet/minecraft/server/ItemStack;)V merge
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	ap ()Z makeStepSound
	b (Lnet/minecraft/server/EntityHuman;)V playerTouch
	b (Lnet/minecraft/server/EntityItem;)Z lambda$mergeWithNeighbours$0
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bs ()Z isAttackable
	defaultPickupDelay ()V setDefaultPickUpDelay
	f ()V setShortLifeTime
	getItemStack ()Lnet/minecraft/server/ItemStack; getItem
	h ()V tick
	h (I)V burn
	m ()I getAge
	mergeNearby ()V mergeWithNeighbours
	o ()V setNoPickUpDelay
	p ()V setNeverPickUp
	q ()Z hasPickUpDelay
	r ()V setUnlimitedLifetime
	s ()V setExtendedLifetime
	setItemStack (Lnet/minecraft/server/ItemStack;)V setItem
	setPickupDelay (I)V setPickUpDelay
	u ()V makeFakeItem
	u_ ()V defineSynchedData
	v ()V setUnderwaterMovement
	z ()Z isMergable
net/minecraft/server/CommandKill net/minecraft/server/commands/KillCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I kill
net/minecraft/server/TileEntityPiston net/minecraft/world/level/block/piston/PistonMovingBlockEntity
	a movedState
	b direction
	c extending
	g isSourcePiston
	h NOCLIP
	i progress
	j progressO
	k lastTicked
	T_ ()V tick
	a (F)F getProgress
	a (Ljava/util/List;)Lnet/minecraft/server/AxisAlignedBB; getMinMaxPiecesAABB
	a (Lnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/AxisAlignedBB; moveByPositionAndProgress
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/EnumDirection;D)Lnet/minecraft/server/AxisAlignedBB; getMovementArea
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/AxisAlignedBB;)D getMovement
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/EnumDirection;D)V fixEntityWithinPistonBase
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (F)F getXOff
	b (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/AxisAlignedBB;)D getDeltaX
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c (F)F getYOff
	c (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/AxisAlignedBB;)D getDeltaY
	d ()Z isExtending
	d (F)F getZOff
	d (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/AxisAlignedBB;)D getDeltaZ
	e (F)F getExtendedProgress
	f ()Lnet/minecraft/server/EnumDirection; getDirection
	f (F)V moveCollidedEntities
	h ()Z isSourcePiston
	s ()Lnet/minecraft/server/EnumDirection; getMovementDirection
	t ()Lnet/minecraft/server/IBlockData; getMovedState
	u ()V finalTick
	v ()J getLastTicked
	x ()Lnet/minecraft/server/IBlockData; getCollisionRelatedBlockState
dna$1 net/minecraft/client/renderer/FaceInfo$1
cqh$a net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder
	b ()Lnet/minecraft/server/LootItemFunction; build
dbo$1 net/minecraft/client/gui/screens/ConnectScreen$1
	a val$hostname
	b val$port
	c this$0
	a ()V lambda$run$1
	a (Ldbo;Lnet/minecraft/server/IChatBaseComponent;)V lambda$run$0
	a (Ljava/lang/String;)V lambda$run$2
bio$a net/minecraft/world/level/biome/Biome$BiomeBuilder
	a surfaceBuilder
	b precipitation
	c biomeCategory
	d depth
	e scale
	f temperature
	g downfall
	h waterColor
	i waterFogColor
	j parent
	a (F)Lbio$a; depth
	a (I)Lbio$a; waterColor
	a (Lbio$a;)Lnet/minecraft/server/WorldGenSurfaceComposite; access$000
	a (Ljava/lang/String;)Lbio$a; parent
	a (Lnet/minecraft/server/BiomeBase$Geography;)Lbio$a; biomeCategory
	a (Lnet/minecraft/server/BiomeBase$Precipitation;)Lbio$a; precipitation
	a (Lnet/minecraft/server/WorldGenSurface;Lnet/minecraft/server/WorldGenSurfaceConfiguration;)Lbio$a; surfaceBuilder
	a (Lnet/minecraft/server/WorldGenSurfaceComposite;)Lbio$a; surfaceBuilder
	b (F)Lbio$a; scale
	b (I)Lbio$a; waterFogColor
	b (Lbio$a;)Lnet/minecraft/server/BiomeBase$Precipitation; access$100
	c (F)Lbio$a; temperature
	c (Lbio$a;)Lnet/minecraft/server/BiomeBase$Geography; access$200
	d (F)Lbio$a; downfall
	d (Lbio$a;)Ljava/lang/Float; access$300
	e (Lbio$a;)Ljava/lang/Float; access$400
	f (Lbio$a;)Ljava/lang/Float; access$500
	g (Lbio$a;)Ljava/lang/Float; access$600
	h (Lbio$a;)Ljava/lang/Integer; access$700
	i (Lbio$a;)Ljava/lang/Integer; access$800
	j (Lbio$a;)Ljava/lang/String; access$900
uy$b net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release
	a task
	b pos
	c clearQueue
	a (Luy$b;)J access$200
	b (Luy$b;)Ljava/lang/Runnable; access$300
	c (Luy$b;)Z access$400
net/minecraft/server/EntityGhast$ControllerGhast net/minecraft/world/entity/monster/Ghast$GhastMoveControl
	i ghast
	j floatDuration
	a ()V tick
	a (Lnet/minecraft/server/Vec3D;I)Z canReach
net/minecraft/server/CommandException net/minecraft/commands/CommandRuntimeException
	a message
	a ()Lnet/minecraft/server/IChatBaseComponent; getComponent
uy$a net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message
	a task
	b pos
	c level
	a (Luy$a;)Ljava/util/function/Function; access$500
	b (Luy$a;)J access$600
	c (Luy$a;)Ljava/util/function/IntSupplier; access$700
net/minecraft/server/DataConverterWorldGenSettings net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix
	a SPLITTER
	b LAYER_SPLITTER
	c OLD_AMOUNT_SPLITTER
	d AMOUNT_SPLITTER
	e BLOCK_SPLITTER
	a (Lcom/google/common/base/Splitter;ILjava/lang/String;)Ljava/lang/String; lambda$fixString$2
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	a (Ljava/lang/String;)Ljava/lang/String; fixString
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fix$1
net/minecraft/server/ItemLingeringPotion net/minecraft/world/item/LingeringPotionItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbdr;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/PacketDataSerializer net/minecraft/network/FriendlyByteBuf
	a source
	a ()[B readByteArray
	a (I)I getVarIntSize
	a (J)I getVarLongSize
	a (Ljava/lang/Class;)Ljava/lang/Enum; readEnum
	a (Ljava/lang/Enum;)Lnet/minecraft/server/PacketDataSerializer; writeEnum
	a (Ljava/lang/String;)Lnet/minecraft/server/PacketDataSerializer; writeUtf
	a (Ljava/lang/String;I)Lnet/minecraft/server/PacketDataSerializer; writeUtf
	a (Ljava/util/Collection;Ljava/util/function/BiConsumer;)V writeCollection
	a (Ljava/util/Date;)Lnet/minecraft/server/PacketDataSerializer; writeDate
	a (Ljava/util/UUID;)Lnet/minecraft/server/PacketDataSerializer; writeUUID
	a (Ljava/util/function/BiConsumer;Ljava/lang/Object;)V lambda$writeCollection$0
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/PacketDataSerializer; writeBlockPos
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/PacketDataSerializer; writeChunkPos
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/PacketDataSerializer; writeComponent
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/PacketDataSerializer; writeItem
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/PacketDataSerializer; writeResourceLocation
	a (Lnet/minecraft/server/MovingObjectPositionBlock;)V writeBlockHitResult
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/PacketDataSerializer; writeNbt
	a (Lnet/minecraft/server/SectionPosition;)Lnet/minecraft/server/PacketDataSerializer; writeSectionPos
	a ([B)Lnet/minecraft/server/PacketDataSerializer; writeByteArray
	a ([I)Lnet/minecraft/server/PacketDataSerializer; writeVarIntArray
	a ([J)Lnet/minecraft/server/PacketDataSerializer; writeLongArray
	a ([JI)[J readLongArray
	b ()[I readVarIntArray
	b (I)[B readByteArray
	b (J)Lnet/minecraft/server/PacketDataSerializer; writeVarLong
	b ([J)[J readLongArray
	c ()[J readLongArray
	c (I)[I readVarIntArray
	d ()[B accessByteBufWithCorrectSize
	d (I)Lnet/minecraft/server/PacketDataSerializer; writeVarInt
	e ()Lnet/minecraft/server/BlockPosition; readBlockPos
	e (I)Ljava/lang/String; readUtf
	f ()Lnet/minecraft/server/ChunkCoordIntPair; readChunkPos
	g ()Lnet/minecraft/server/SectionPosition; readSectionPos
	h ()Lnet/minecraft/server/IChatBaseComponent; readComponent
	i ()I readVarInt
	j ()J readVarLong
	k ()Ljava/util/UUID; readUUID
	l ()Lnet/minecraft/server/NBTTagCompound; readNbt
	m ()Lnet/minecraft/server/ItemStack; readItem
	n ()Ljava/lang/String; readUtf
	o ()Lnet/minecraft/server/MinecraftKey; readResourceLocation
	p ()Ljava/util/Date; readDate
	q ()Lnet/minecraft/server/MovingObjectPositionBlock; readBlockHitResult
net/minecraft/server/PacketPlayInFlying$PacketPlayInPositionLook net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/BiomeOcean net/minecraft/world/level/biome/OceanBiome
cqh$b net/minecraft/world/level/storage/loot/functions/LootItemFunction$Serializer
	a name
	b clazz
	a ()Lnet/minecraft/server/MinecraftKey; getName
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	b ()Ljava/lang/Class; getFunctionClass
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemFunction; deserialize
net/minecraft/server/Ticket net/minecraft/server/level/Ticket
	a type
	b ticketLevel
	d createdTick
	identifier key
	a (I)Lnet/minecraft/server/Ticket; withLevel
	a (J)Z timedOut
	a (Lnet/minecraft/server/Ticket;)I compareTo
	b ()I getTicketLevel
	c ()J getCreatedTick
	getTicketType ()Lnet/minecraft/server/TicketType; getType
net/minecraft/server/WorldGenDecoratorEmerald net/minecraft/world/level/levelgen/placement/EmeraldPlacementDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$place$0
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorEmptyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/EntityAIBodyControl net/minecraft/world/entity/ai/control/BodyRotationControl
	a mob
	b headStableTime
	c lastStableYHeadRot
	a ()V clientTick
	b ()V rotateBodyIfNecessary
	c ()V rotateHeadIfNecessary
	d ()V rotateHeadTowardsFront
	e ()Z notCarryingMobPassengers
	f ()Z isMoving
net/minecraft/server/RecipeItemStack net/minecraft/world/item/crafting/Ingredient
	a EMPTY
	b NON_ALL_EMPTY
	c values
	choices itemStacks
	e stackingIds
	a ()[Lnet/minecraft/server/ItemStack; getItems
	a (I)[Lnet/minecraft/server/ItemStack; lambda$dissolve$3
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/RecipeItemStack; fromJson
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/RecipeItemStack$Provider; valueFromJson
	a (Ljava/util/stream/Stream;)Lnet/minecraft/server/RecipeItemStack; fromValues
	a (Lnet/minecraft/server/IMaterial;)Lnet/minecraft/server/RecipeItemStack$StackProvider; lambda$of$4
	a (Lnet/minecraft/server/ItemStack;)Z test
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$valueFromJson$8
	a (Lnet/minecraft/server/PacketDataSerializer;)V toNetwork
	a (Lnet/minecraft/server/RecipeItemStack$Provider;)Ljava/util/stream/Stream; lambda$dissolve$2
	a (Lnet/minecraft/server/Tag;)Lnet/minecraft/server/RecipeItemStack; of
	a ([Lnet/minecraft/server/IMaterial;)Lnet/minecraft/server/RecipeItemStack; of
	a ([Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/RecipeItemStack; of
	b ()Lit/unimi/dsi/fastutil/ints/IntList; getStackingIds
	b (I)[Lnet/minecraft/server/RecipeItemStack$Provider; lambda$new$1
	b (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/RecipeItemStack$Provider; lambda$fromJson$7
	b (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/RecipeItemStack$StackProvider; lambda$of$5
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/RecipeItemStack; fromNetwork
	b (Lnet/minecraft/server/RecipeItemStack$Provider;)Z lambda$static$0
	buildChoices ()V dissolve
	c ()Lcom/google/gson/JsonElement; toJson
	c (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/RecipeItemStack$StackProvider; lambda$fromNetwork$6
	d ()Z isEmpty
	e ()Lnet/minecraft/server/RecipeItemStack; of
net/minecraft/server/DataWatcherRegistry net/minecraft/network/syncher/EntityDataSerializers
	a BYTE
	b INT
	c FLOAT
	d STRING
	e COMPONENT
	f OPTIONAL_COMPONENT
	g ITEM_STACK
	h BLOCK_STATE
	i BOOLEAN
	j PARTICLE
	k ROTATIONS
	l BLOCK_POS
	m OPTIONAL_BLOCK_POS
	n DIRECTION
	o OPTIONAL_UUID
	p COMPOUND_TAG
	q VILLAGER_DATA
	r OPTIONAL_UNSIGNED_INT
	s POSE
	t SERIALIZERS
	a (I)Lnet/minecraft/server/DataWatcherSerializer; getSerializer
	a (Lnet/minecraft/server/DataWatcherSerializer;)V registerSerializer
	b (Lnet/minecraft/server/DataWatcherSerializer;)I getSerializedId
net/minecraft/server/DataConverterHealth net/minecraft/util/datafix/fixes/EntityHealthFix
	a ENTITIES
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
net/minecraft/server/NavigationFlying net/minecraft/world/entity/ai/navigation/FlyingPathNavigation
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
	a (Lnet/minecraft/server/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;III)Z canMoveDirectly
	a (Z)V setCanOpenDoors
	b ()Lnet/minecraft/server/Vec3D; getTempMobPos
	b (Z)V setCanPassDoors
	c ()V tick
	d ()Z canPassDoors
	e ()Z canOpenDoors
net/minecraft/server/IBlockState net/minecraft/world/level/block/state/properties/Property
	a ()Ljava/lang/String; getName
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	b ()Ljava/lang/Class; getValueClass
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	getValues ()Ljava/util/Collection; getPossibleValues
net/minecraft/server/DataConverterChunkLightRemove net/minecraft/util/datafix/fixes/ChunkLightRemoveFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
ask net/minecraft/world/entity/animal/horse/package-info
asm net/minecraft/world/entity/boss/BossMob
	cD ()F getHealth
	cM ()F getMaxHealth
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/IInventory net/minecraft/world/Container
	a (Ljava/util/Set;)Z hasAnyOf
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/Item;)I countItem
	b (ILnet/minecraft/server/ItemStack;)Z canPlaceItem
	closeContainer (Lnet/minecraft/server/EntityHuman;)V stopOpen
	getSize ()I getContainerSize
	isNotEmpty ()Z isEmpty
	splitStack (II)Lnet/minecraft/server/ItemStack; removeItem
	splitWithoutUpdate (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	update ()V setChanged
asl net/minecraft/world/entity/animal/package-info
net/minecraft/server/GenLayerIcePlains net/minecraft/world/level/newbiome/layer/RemoveTooMuchOceanLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
asq net/minecraft/world/entity/boss/enderdragon/package-info
net/minecraft/server/IBlockFragilePlantElement net/minecraft/world/level/block/BonemealableBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	b (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
net/minecraft/server/EntitySmallFireball net/minecraft/world/entity/projectile/SmallFireball
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	aH ()Z isPickable
bvu$a net/minecraft/world/level/block/state/StateDefinition$Builder
	a owner
	b properties
	a (Lbvu$b;)Lnet/minecraft/server/BlockStateList; create
	a (Lnet/minecraft/server/IBlockState;)V validateProperty
	a ([Lnet/minecraft/server/IBlockState;)Lbvu$a; add
net/minecraft/server/AttributeMapBase net/minecraft/world/entity/ai/attributes/BaseAttributeMap
	a attributesByObject
	b attributesByName
	c descendantsByParent
	a ()Ljava/util/Collection; getAttributes
	a (Lcom/google/common/collect/Multimap;)V removeAttributeModifiers
	a (Ljava/lang/String;)Lnet/minecraft/server/AttributeInstance; getInstance
	a (Lnet/minecraft/server/AttributeInstance;)V onAttributeModified
	a (Lnet/minecraft/server/IAttribute;)Lnet/minecraft/server/AttributeInstance; getInstance
	b (Lcom/google/common/collect/Multimap;)V addAttributeModifiers
	b (Lnet/minecraft/server/IAttribute;)Lnet/minecraft/server/AttributeInstance; registerAttribute
	c (Lnet/minecraft/server/IAttribute;)Lnet/minecraft/server/AttributeInstance; createAttributeInstance
	d (Lnet/minecraft/server/IAttribute;)Ljava/util/Collection; getDescendants
bvu$b net/minecraft/world/level/block/state/StateDefinition$Factory
net/minecraft/server/EntityRavager net/minecraft/world/entity/monster/Ravager
	b NO_RAVAGER_AND_ALIVE
	bA stunnedTick
	bB roarTick
	bz attackTick
	C (Lnet/minecraft/server/Entity;)Z doHurtTarget
	E (Lnet/minecraft/server/Entity;)Z canSee
	F ()V updateControlFlags
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/Entity;)V strongKnockback
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aP ()D getRideHeight
	b (Lnet/minecraft/server/Entity;)Z lambda$static$0
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	bV ()Lnet/minecraft/server/Entity; getControllingPassenger
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cW ()Z isImmobile
	cl ()V registerAttributes
	dA ()I getMaxHeadYRot
	dD ()Z canBeControlledByRider
	dV ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	dW ()I getStunnedTick
	dX ()Z canBeLeader
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityLiving;)V blockedByShield
	ef ()I getRoarTick
	eg ()V stunEffect
	eh ()V roar
	k ()V aiStep
	l ()I getAttackTick
	n ()V registerGoals
net/minecraft/server/LootTable net/minecraft/world/level/storage/loot/LootTable
	a EMPTY
	b DEFAULT_PARAM_SET
	c LOGGER
	d paramSet
	e pools
	f functions
	g compositeFunction
	a (Ljava/util/List;ILjava/util/Random;)V shuffleAndSplitItems
	a (Ljava/util/function/Consumer;)Ljava/util/function/Consumer; createStackSplitter
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/ItemStack;)V lambda$createStackSplitter$0
	a (Lnet/minecraft/server/IInventory;Ljava/util/Random;)Ljava/util/List; getAvailableSlots
	a (Lnet/minecraft/server/LootCollector;Ljava/util/function/Function;Ljava/util/Set;Lnet/minecraft/server/LootContextParameterSet;)V validate
	a (Lnet/minecraft/server/LootTable;)Lnet/minecraft/server/LootContextParameterSet; access$100
	b ()Lcpb$a; lootTable
	b (Lnet/minecraft/server/LootTable;)[Lnet/minecraft/server/LootSelector; access$300
	c ()Lorg/apache/logging/log4j/Logger; access$200
	c (Lnet/minecraft/server/LootTable;)[Lnet/minecraft/server/LootItemFunction; access$400
	fillInventory (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/LootTableInfo;)V fill
	getLootContextParameterSet ()Lnet/minecraft/server/LootContextParameterSet; getParamSet
	populateLoot (Lnet/minecraft/server/LootTableInfo;)Ljava/util/List; getRandomItems
	populateLoot (Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)V getRandomItems
	populateLootDirect (Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)V getRandomItemsRaw
tv$a net/minecraft/server/commands/TeleportCommand$LookAt
	a position
	b entity
	c anchor
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;)V perform
net/minecraft/server/WorldGenGrass net/minecraft/world/level/levelgen/feature/GrassFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureTallGrassConfiguration;)Z place
net/minecraft/server/DataConverterChunkStatus net/minecraft/util/datafix/fixes/ChunkStatusFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
ath net/minecraft/world/entity/boss/enderdragon/phases/package-info
ati net/minecraft/world/entity/boss/package-info
net/minecraft/server/WorldGenJungleTree net/minecraft/world/level/levelgen/feature/MegaJungleTreeFeature
	a (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;)Z doPlace
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockStateBoolean;)V placeVine
	c (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/StructureBoundingBox;Ljava/util/Set;)V createCrown
net/minecraft/server/EnchantmentWeaponDamage net/minecraft/world/item/enchantment/DamageEnchantment
	a type
	d NAMES
	e MIN_COST
	f LEVEL_COST
	g LEVEL_COST_SPAN
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/server/EnumMonsterType;)F getDamageBonus
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;I)V doPostAttack
	a (Lnet/minecraft/server/ItemStack;)Z canEnchant
	b (I)I getMaxCost
atk net/minecraft/world/entity/boss/wither/package-info
atr net/minecraft/world/entity/decoration/package-info
net/minecraft/server/GeneratorSettingsDefault net/minecraft/world/level/levelgen/ChunkGeneratorSettings
	a villagesSpacing
	b villagesSeparation
	c monumentsSpacing
	d monumentsSeparation
	e strongholdsDistance
	f strongholdsCount
	g strongholdsSpread
	h templesSpacing
	i templesSeparation
	j oceanRuinSpacing
	k oceanRuinSeparation
	l endCitySpacing
	m endCitySeparation
	n shipwreckSpacing
	o shipwreckSeparation
	p woodlandMansionSpacing
	q woodlandMangionSeparation
	r defaultBlock
	s defaultFluid
	a ()I getVillagesSpacing
	a (Lnet/minecraft/server/IBlockData;)V setDefaultBlock
	b ()I getVillagesSeparation
	b (Lnet/minecraft/server/IBlockData;)V setDefaultFluid
	c ()I getMonumentsSpacing
	d ()I getMonumentsSeparation
	e ()I getStrongholdsDistance
	f ()I getStrongholdsCount
	g ()I getStrongholdsSpread
	h ()I getTemplesSpacing
	i ()I getTemplesSeparation
	j ()I getShipwreckSpacing
	k ()I getShipwreckSeparation
	l ()I getOceanRuinSpacing
	m ()I getOceanRuinSeparation
	n ()I getEndCitySpacing
	o ()I getEndCitySeparation
	p ()I getWoodlandMansionSpacing
	q ()I getWoodlandMangionSeparation
	r ()Lnet/minecraft/server/IBlockData; getDefaultBlock
	s ()Lnet/minecraft/server/IBlockData; getDefaultFluid
	t ()I getBedrockRoofPosition
	u ()I getBedrockFloorPosition
att net/minecraft/world/entity/fishing/package-info
net/minecraft/server/FluidTypes net/minecraft/world/level/material/Fluids
	a (Ljava/lang/String;Lnet/minecraft/server/FluidType;)Lnet/minecraft/server/FluidType; register
net/minecraft/server/WorldGenMineshaftPieces$WorldGenMineshaftRoom net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftRoom
	b childEntranceBoxes
	a (III)V move
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
atv net/minecraft/world/entity/global/package-info
dex$a net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton
	a ingredientPos
	b this$0
	c recipe
	d isCraftable
	a (Ldex$a;)Lnet/minecraft/server/IRecipe; access$000
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	a (Lnet/minecraft/server/IRecipe;)V calculateIngredientsPositions
dex$b net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlaySmeltingRecipeButton
	c this$0
	a (Lnet/minecraft/server/IRecipe;)V calculateIngredientsPositions
net/minecraft/server/MobEffects net/minecraft/world/effect/MobEffects
	ABSORBTION ABSORPTION
	FASTER_DIG DIG_SPEED
	FASTER_MOVEMENT MOVEMENT_SPEED
	INCREASE_DAMAGE DAMAGE_BOOST
	RESISTANCE DAMAGE_RESISTANCE
	SLOWER_DIG DIG_SLOWDOWN
	SLOWER_MOVEMENT MOVEMENT_SLOWDOWN
	a (ILjava/lang/String;Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/MobEffectList; register
atz net/minecraft/world/entity/item/package-info
net/minecraft/server/BehaviorStrollRandom net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll
	a speed
	b maxXyDist
	c maxYDist
	a (Lnet/minecraft/server/EntityCreature;)V setRandomPos
	a (Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/SectionPosition;)V setTargetedPos
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/MemoryTarget; lambda$setRandomPos$1
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/MemoryTarget; lambda$setTargetedPos$0
net/minecraft/server/EntitySenses net/minecraft/world/entity/ai/sensing/Sensing
	a mob
	b seen
	c unseen
	a ()V tick
	a (Lnet/minecraft/server/Entity;)Z canSee
bpk$1 net/minecraft/world/level/block/HopperBlock$1
	a $SwitchMap$net$minecraft$core$Direction
dkq$a net/minecraft/client/particle/BubbleColumnUpParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/GenLayerZoomVoronoi net/minecraft/world/level/newbiome/layer/VoronoiZoom
	b $VALUES
	a (I)I getParentX
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	b (I)I getParentY
net/minecraft/server/CommandSpreadPlayers net/minecraft/server/commands/SpreadPlayersCommand
	a ERROR_FAILED_TO_SPREAD_TEAMS
	b ERROR_FAILED_TO_SPREAD_ENTITIES
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Ljava/util/Collection;)I getNumberOfTeams
	a (Ljava/util/Collection;Lnet/minecraft/server/WorldServer;[Lto$a;Z)D setPlayerPositions
	a (Ljava/util/Random;IDDDD)[Lto$a; createInitialPositions
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Vec2F;FFZLjava/util/Collection;)I spreadPlayers
	a (Lnet/minecraft/server/Vec2F;DLnet/minecraft/server/WorldServer;Ljava/util/Random;DDDD[Lto$a;Z)V spreadPositions
	b (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
net/minecraft/server/LootEntrySequence net/minecraft/world/level/storage/loot/entries/SequentialEntry
	a ([Lcpq$a;)Lcpt$a; sequential
	a ([Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; compose
	a ([Lnet/minecraft/server/LootEntryChildren;Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z lambda$compose$0
net/minecraft/server/DataConverterPainting net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix
	a MAP
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Ljava/util/HashMap;)V lambda$static$0
cl$a net/minecraft/commands/arguments/EntityArgument$Serializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/ArgumentEntity;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lnet/minecraft/server/ArgumentEntity;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ArgumentEntity; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
net/minecraft/server/WorldServer net/minecraft/server/level/ServerLevel
	C allPlayersSleeping
	H navigations
	I blockEvents
	c raids
	dataManager levelStorage
	entitiesByUUID entitiesByUuid
	entitiesToAdd toAddAfterTick
	globalEntityList globalEntities
	mobSpawnerTrader wanderingTraderSpawner
	nextTickListBlock blockTicks
	nextTickListFluid liquidTicks
	portalTravelAgent portalForcer
	savingDisabled noSave
	ticking handlingTick
	u LOGGER
	A ()Ljava/util/List; players
	A (Lnet/minecraft/server/BlockPosition;)V lambda$null$11
	B ()Lnet/minecraft/server/VillagePlace; getPoiManager
	C ()Lnet/minecraft/server/PersistentRaid; getRaids
	D ()Lnet/minecraft/server/Scoreboard; getScoreboard
	E ()Lnet/minecraft/server/IChunkProvider; getChunkSource
	F ()Lnet/minecraft/server/TickList; getLiquidTicks
	G ()Lnet/minecraft/server/TickList; getBlockTicks
	a (I)Lnet/minecraft/server/Entity; getEntity
	a (ILnet/minecraft/server/BlockPosition;I)V destroyBlockProgress
	a (J)V setGameTime
	a (Ljava/io/Writer;)V dumpBlockEntities
	a (Ljava/io/Writer;Ljava/lang/Iterable;)V dumpEntities
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldMap; getMapData
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;IZ)Lnet/minecraft/server/BlockPosition; findNearestMapFeature
	a (Ljava/nio/file/Path;)V saveDebugReport
	a (Ljava/util/function/Predicate;)Ljava/util/List; getPlayers
	a (Lnet/minecraft/server/Block;)Z lambda$new$0
	a (Lnet/minecraft/server/BlockActionData;)Z doBlockEvent
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; findLightingTargetAround
	a (Lnet/minecraft/server/BlockPosition;I)Z closeToVillage
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;II)V blockEvent
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V onBlockStateChange
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;I)V sendBlockUpdated
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;)V lambda$onBlockStateChange$14
	a (Lnet/minecraft/server/Chunk;I)V tickChunk
	a (Lnet/minecraft/server/Entity;B)V broadcastEntityEvent
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;DDDFZLnet/minecraft/server/Explosion$Effect;)Lnet/minecraft/server/Explosion; explode
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)V tickPassenger
	a (Lnet/minecraft/server/EntityHuman;DDDLnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EntityHuman;ILnet/minecraft/server/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;)Z mayInteract
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EntityLiving;)Z lambda$findLightingTargetAround$8
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ParticleParam;ZDDDIDDDD)Z sendParticles
	a (Lnet/minecraft/server/EntityPlayer;ZDDDLnet/minecraft/server/Packet;)Z sendParticles
	a (Lnet/minecraft/server/EntityTypes;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/server/FluidType;)Z lambda$new$1
	a (Lnet/minecraft/server/MinecraftServer;)Lnet/minecraft/server/WorldPersistentData; lambda$null$2
	a (Lnet/minecraft/server/NextTickListEntry;)V tickLiquid
	a (Lnet/minecraft/server/ParticleParam;DDDIDDDD)I sendParticles
	a (Lnet/minecraft/server/ReputationEvent;Lnet/minecraft/server/Entity;Lnet/minecraft/server/ReputationHandler;)V onReputationEvent
	a (Lnet/minecraft/server/SectionPosition;)Z isVillage
	a (Lnet/minecraft/server/WorldMap;)V setMapData
	a (Lnet/minecraft/server/WorldNBTStorage;Ljava/util/concurrent/Executor;Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/WorldLoadListener;Lnet/minecraft/server/World;Lnet/minecraft/server/WorldProvider;)Lnet/minecraft/server/IChunkProvider; lambda$new$3
	a (Lnet/minecraft/server/WorldSettings;)V setInitialSpawn
	a_ (Lnet/minecraft/server/BlockPosition;)V setSpawnPos
	addEntity0 (Lnet/minecraft/server/Entity;)Z addEntity
	addEntityChunk (Lnet/minecraft/server/Entity;)Z loadFromChunk
	addEntitySerialized (Lnet/minecraft/server/Entity;)Z addWithUUID
	addEntityTeleport (Lnet/minecraft/server/Entity;)V addFromAnotherDimension
	addPlayer0 (Lnet/minecraft/server/EntityPlayer;)V addPlayer
	addPlayerCommand (Lnet/minecraft/server/EntityPlayer;)V addDuringCommandTeleport
	addPlayerJoin (Lnet/minecraft/server/EntityPlayer;)V addNewPlayer
	addPlayerPortal (Lnet/minecraft/server/EntityPlayer;)V addDuringPortalTeleport
	addPlayerRespawn (Lnet/minecraft/server/EntityPlayer;)V addRespawnedPlayer
	ae ()V runBlockEvents
	af ()Lnet/minecraft/server/PersistentRaid; lambda$new$4
	b ()Z isHandlingTick
	b (ILnet/minecraft/server/BlockPosition;I)V globalLevelEvent
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;)V lambda$null$13
	b (Lnet/minecraft/server/NextTickListEntry;)V tickBlock
	b (Lnet/minecraft/server/SectionPosition;)I sectionsToVillage
	b_ (Lnet/minecraft/server/BlockPosition;)Z isVillage
	c (Ljava/lang/String;)Lnet/minecraft/server/WorldMap; lambda$getMapData$10
	c (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;)V lambda$onBlockStateChange$12
	c (Lnet/minecraft/server/Entity;)Z addFreshEntity
	c_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Raid; getRaidAt
	chunkCheck (Lnet/minecraft/server/Entity;)V updateChunkPos
	clearWeather ()V stopWeather
	d ()Lnet/minecraft/server/ScoreboardServer; getScoreboard
	d_ (Lnet/minecraft/server/BlockPosition;)Z isRaided
	doTick (Ljava/util/function/BooleanSupplier;)V tick
	entityJoinedWorld (Lnet/minecraft/server/Entity;)V tickNonPassenger
	everyoneSleeping ()V updateSleepingPlayerList
	g ()V generateBonusItemsNearSpawn
	g (Lnet/minecraft/server/EntityPlayer;)V lambda$tick$6
	getDataManager ()Lnet/minecraft/server/WorldNBTStorage; getLevelStorage
	getDimensionSpawn ()Lnet/minecraft/server/BlockPosition; getDimensionSpecificSpawn
	getForceLoadedChunks ()Lit/unimi/dsi/fastutil/longs/LongSet; getForcedChunks
	getTravelAgent ()Lnet/minecraft/server/PortalTravelAgent; getPortalForcer
	getWorldPersistentData ()Lnet/minecraft/server/WorldPersistentData; getDataStorage
	h (Lnet/minecraft/server/EntityPlayer;)Z lambda$tick$5
	isUUIDTaken (Lnet/minecraft/server/Entity;)Z isUUIDUsed
	j ()Ljava/util/List; getDragons
	j_ ()V validateSpawn
	k_ ()V saveLevelData
	l ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; getMobCategoryCounts
	l_ ()Lnet/minecraft/server/EntityPlayer; getRandomPlayer
	m ()Lnet/minecraft/server/ChunkProviderServer; getChunkSource
	n ()Lnet/minecraft/server/TickListServer; getBlockTicks
	o ()Lnet/minecraft/server/TickListServer; getLiquidTicks
	o (Lnet/minecraft/server/Entity;)Ljava/lang/String; lambda$tickNonPassenger$9
	p ()Lnet/minecraft/server/MinecraftServer; getServer
	p (Lnet/minecraft/server/Entity;)V lambda$tick$7
	r ()Lnet/minecraft/server/DefinedStructureManager; getStructureManager
	registerEntity (Lnet/minecraft/server/Entity;)V add
	removeEntity (Lnet/minecraft/server/Entity;)V despawn
	removeEntityFromChunk (Lnet/minecraft/server/Entity;)V removeFromChunk
	removePlayer (Lnet/minecraft/server/EntityPlayer;)V removePlayerImmediately
	s ()Lnet/minecraft/server/CraftingManager; getRecipeManager
	setForceLoaded (IIZ)Z setChunkForced
	strikeLightning (Lnet/minecraft/server/EntityLightning;)V addGlobalEntity
	t ()Lnet/minecraft/server/TagRegistry; getTagManager
	u ()Z noSave
	unloadChunk (Lnet/minecraft/server/Chunk;)V unload
	unregisterEntity (Lnet/minecraft/server/Entity;)V onEntityRemoved
	y ()I getFreeMapId
net/minecraft/server/ContainerFurnace net/minecraft/world/inventory/AbstractFurnaceMenu
	c level
	e data
	f recipeType
	furnace container
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IRecipe;)Z recipeMatches
	a (Lnet/minecraft/server/ItemStack;)Z canSmelt
	a (ZLnet/minecraft/server/IRecipe;Lnet/minecraft/server/EntityPlayer;)V handlePlacement
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	b (Lnet/minecraft/server/ItemStack;)Z isFuel
	e ()V clearCraftingContent
	f ()I getResultSlotIndex
	g ()I getGridWidth
	h ()I getGridHeight
	i ()I getSize
	j ()I getBurnProgress
	k ()I getLitProgress
	l ()Z isLit
net/minecraft/server/DispenseBehaviorBoat net/minecraft/core/dispenser/BoatDispenseItemBehavior
	b defaultDispenseItemBehavior
	c type
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
bur$1 net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$1
	a $SwitchMap$net$minecraft$world$level$block$entity$ShulkerBoxBlockEntity$AnimationStatus
	b $SwitchMap$net$minecraft$core$Direction$Axis
net/minecraft/server/InventorySubcontainer net/minecraft/world/SimpleContainer
	a size
	c listeners
	L_ ()V clearContent
	M_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IInventoryListener;)V addListener
	a (Lnet/minecraft/server/Item;I)Lnet/minecraft/server/ItemStack; removeItemType
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; addItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)V moveItemsBetweenStacks
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/server/IInventoryListener;)V removeListener
	b (Lnet/minecraft/server/ItemStack;)V moveItemToEmptySlots
	c ()Z isEmpty
	c (Lnet/minecraft/server/ItemStack;)V moveItemToOccupiedSlotsWithSameType
	d (Lnet/minecraft/server/ItemStack;)Z lambda$toString$0
	update ()V setChanged
avo net/minecraft/world/entity/monster/package-info
net/minecraft/server/BiomePlains net/minecraft/world/level/biome/PlainsBiome
net/minecraft/server/BiomeBirchForestHills net/minecraft/world/level/biome/BirchForestHillsBiome
net/minecraft/server/WorldGenFeatureVillageSavanna net/minecraft/world/level/levelgen/feature/SavannaVillagePools
	a ()V bootstrap
net/minecraft/server/LootItemCondition net/minecraft/world/level/storage/loot/predicates/LootItemCondition
aro$1 net/minecraft/world/entity/animal/PolarBear$1
awc net/minecraft/world/entity/package-info
awb net/minecraft/world/entity/npc/package-info
net/minecraft/server/PlayerConnectionUtils net/minecraft/network/protocol/PacketUtils
	a LOGGER
	a (Lnet/minecraft/server/PacketListener;Lnet/minecraft/server/Packet;)V lambda$ensureRunningOnSameThread$0
	ensureMainThread (Lnet/minecraft/server/Packet;Lnet/minecraft/server/PacketListener;Lnet/minecraft/server/IAsyncTaskHandler;)V ensureRunningOnSameThread
	ensureMainThread (Lnet/minecraft/server/Packet;Lnet/minecraft/server/PacketListener;Lnet/minecraft/server/WorldServer;)V ensureRunningOnSameThread
net/minecraft/server/MerchantRecipe net/minecraft/world/item/trading/MerchantOffer
	buyingItem1 baseCostA
	buyingItem2 costB
	sellingItem result
	specialPrice specialPriceDiff
	a ()Lnet/minecraft/server/ItemStack; getBaseCostA
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z satisfiedBy
	a (Lnet/minecraft/server/MerchantRecipe;)Z isSame
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z take
	c (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isRequiredItem
	e ()V updateDemand
	f ()Lnet/minecraft/server/ItemStack; assemble
	getBuyItem1 ()Lnet/minecraft/server/ItemStack; getCostA
	getBuyItem2 ()Lnet/minecraft/server/ItemStack; getCostB
	getSellingItem ()Lnet/minecraft/server/ItemStack; getResult
	getSpecialPrice ()I getSpecialPriceDiff
	increaseSpecialPrice (I)V addToSpecialPriceDiff
	isFullyUsed ()Z isOutOfStock
	isRewardExp ()Z shouldRewardExp
	k ()I getDemand
	q ()V setToOutOfStock
	s ()Lnet/minecraft/server/NBTTagCompound; createTag
	setSpecialPrice ()V resetSpecialPriceDiff
	setSpecialPrice (I)V setSpecialPriceDiff
deg$a net/minecraft/client/gui/screens/inventory/MerchantScreen$TradeOfferButton
	a index
	b this$0
	a ()I getIndex
awh net/minecraft/world/entity/player/PlayerModelPart
	a CAPE
	b JACKET
	c LEFT_SLEEVE
	d RIGHT_SLEEVE
	e LEFT_PANTS_LEG
	f RIGHT_PANTS_LEG
	g HAT
	h bit
	i mask
	j id
	k name
	l $VALUES
	a ()I getMask
	b ()I getBit
	c ()Ljava/lang/String; getId
	d ()Lnet/minecraft/server/IChatBaseComponent; getName
cxd$3 com/mojang/realmsclient/gui/screens/RealmsUploadScreen$3
	a this$0
	a (JLcxe;)V lambda$run$0
awj net/minecraft/world/entity/player/package-info
cxd$2 com/mojang/realmsclient/gui/screens/RealmsUploadScreen$2
	a this$0
cxd$1 com/mojang/realmsclient/gui/screens/RealmsUploadScreen$1
	a this$0
net/minecraft/server/BiomeSavannaPlateauMutated net/minecraft/world/level/biome/ShatteredSavannaPlateauBiome
net/minecraft/server/RecipeBook net/minecraft/stats/RecipeBook
	a known
	b highlight
	c guiOpen
	d filteringCraftable
	e furnaceGuiOpen
	f furnaceFilteringCraftable
	g blastingFurnaceGuiOpen
	h blastingFurnaceFilteringCraftable
	i smokerGuiOpen
	j smokerFilteringCraftable
	a ()Z isGuiOpen
	a (Lnet/minecraft/server/ContainerRecipeBook;)Z isFilteringCraftable
	a (Lnet/minecraft/server/IRecipe;)V add
	a (Lnet/minecraft/server/MinecraftKey;)V add
	a (Lnet/minecraft/server/RecipeBook;)V copyOverData
	a (Z)V setGuiOpen
	b ()Z isFilteringCraftable
	b (Lnet/minecraft/server/IRecipe;)Z contains
	b (Lnet/minecraft/server/MinecraftKey;)V remove
	b (Z)V setFilteringCraftable
	c ()Z isFurnaceGuiOpen
	c (Lnet/minecraft/server/IRecipe;)V remove
	c (Lnet/minecraft/server/MinecraftKey;)V addHighlight
	c (Z)V setFurnaceGuiOpen
	d ()Z isFurnaceFilteringCraftable
	d (Lnet/minecraft/server/IRecipe;)Z willHighlight
	d (Z)V setFurnaceFilteringCraftable
	e ()Z isBlastingFurnaceGuiOpen
	e (Lnet/minecraft/server/IRecipe;)V removeHighlight
	e (Z)V setBlastingFurnaceGuiOpen
	f ()Z isBlastingFurnaceFilteringCraftable
	f (Lnet/minecraft/server/IRecipe;)V addHighlight
	f (Z)V setBlastingFurnaceFilteringCraftable
	g ()Z isSmokerGuiOpen
	g (Z)V setSmokerGuiOpen
	h ()Z isSmokerFilteringCraftable
	h (Z)V setSmokerFilteringCraftable
aws net/minecraft/world/entity/projectile/ItemSupplier
	f ()Lnet/minecraft/server/ItemStack; getItem
net/minecraft/server/EntityHorseMule net/minecraft/world/entity/animal/horse/Mule
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dY ()V playChestEquipsSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
net/minecraft/server/AreaTransformer6 net/minecraft/world/level/newbiome/layer/traits/C1Transformer
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
net/minecraft/server/WorldGenDecoratorSolidTop net/minecraft/world/level/levelgen/placement/TopSolidHeightMapDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorEmptyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/DataConverterProtoChunk net/minecraft/util/datafix/fixes/ChunkToProtochunkFix
	a ()Ljava/lang/IllegalStateException; lambda$null$2
	a (III)S packOffsetCoordinates
	a (Lcom/mojang/datafixers/Dynamic;I)Lcom/mojang/datafixers/Dynamic; lambda$null$0
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$3
	a (Ljava/util/List;Lcom/mojang/datafixers/Dynamic;Lcom/mojang/datafixers/Dynamic;)V lambda$null$1
net/minecraft/server/AreaTransformer7 net/minecraft/world/level/newbiome/layer/traits/CastleTransformer
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/AreaTransformer4 net/minecraft/world/level/newbiome/layer/traits/BishopTransformer
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/AreaTransformer5 net/minecraft/world/level/newbiome/layer/traits/C0Transformer
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
ctq$1 com/mojang/blaze3d/audio/Library$1
	a ()Lctp; acquire
	a (Lctp;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
cdj$a net/minecraft/world/level/levelgen/feature/PillagerOutpostFeature$FeatureStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
brq$a net/minecraft/world/level/block/SkullBlock$Type
net/minecraft/server/WorldGenHugeMushroomBrown net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenHugeMushroomConfiguration;)Z place
net/minecraft/server/AreaTransformer8 net/minecraft/world/level/newbiome/layer/traits/PixelTransformer
net/minecraft/server/NBTList net/minecraft/nbt/CollectionTag
	a (ILnet/minecraft/server/NBTBase;)Z setTag
	a_ ()I getElementType
	b (ILnet/minecraft/server/NBTBase;)Z addTag
	c (I)Lnet/minecraft/server/NBTBase; remove
	c (ILnet/minecraft/server/NBTBase;)V add
net/minecraft/server/InventoryUtils net/minecraft/world/Containers
	a RANDOM
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V lambda$dropContents$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/NonNullList;)V dropContents
	dropEntity (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;Lnet/minecraft/server/IInventory;)V dropContents
	dropInventory (Lnet/minecraft/server/World;DDDLnet/minecraft/server/IInventory;)V dropContents
	dropInventory (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IInventory;)V dropContents
	dropItem (Lnet/minecraft/server/World;DDDLnet/minecraft/server/ItemStack;)V dropItemStack
axj net/minecraft/world/entity/projectile/package-info
axn net/minecraft/world/entity/raid/package-info
net/minecraft/server/TickListWorldGen net/minecraft/server/level/WorldGenTickList
	a index
	a ()I size
	a (Ljava/util/stream/Stream;)V addAll
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	a (Lnet/minecraft/server/NextTickListEntry;)V lambda$addAll$0
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
dlt$a net/minecraft/client/particle/PortalParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dlc$1 net/minecraft/client/particle/FireworkParticles$1
	a $SwitchMap$net$minecraft$world$item$FireworkRocketItem$Shape
net/minecraft/server/EntityFireball net/minecraft/world/entity/projectile/AbstractHurtingProjectile
	dirX xPower
	dirY yPower
	dirZ zPower
	f life
	g flightTime
	shooter owner
	K_ ()Z shouldBurn
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aE ()I getLightColor
	aF ()F getBrightness
	aH ()Z isPickable
	aS ()F getPickRadius
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	h ()V tick
	i ()Lnet/minecraft/server/ParticleParam; getTrailParticle
	k ()F getInertia
	u_ ()V defineSynchedData
axt net/minecraft/world/entity/schedule/package-info
net/minecraft/server/DataConverterAddChoices net/minecraft/util/datafix/fixes/AddNewChoices
	a name
	b type
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/DynamicOps;)Ljava/util/function/Function; lambda$cap$1
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
net/minecraft/server/DataConverterPotionWater net/minecraft/util/datafix/fixes/ItemWaterPotionFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
net/minecraft/server/PacketPlayOutPosition$EnumPlayerTeleportFlags net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket$RelativeArgument
	f bit
	g $VALUES
	a ()I getMask
	a (I)Ljava/util/Set; unpack
	a (Ljava/util/Set;)I pack
	b (I)Z isSet
net/minecraft/server/EnchantmentProtection net/minecraft/world/item/enchantment/ProtectionEnchantment
	a type
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/server/DamageSource;)I getDamageProtection
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	a (Lnet/minecraft/server/EntityLiving;D)D getExplosionKnockbackAfterDampener
	a (Lnet/minecraft/server/EntityLiving;I)I getFireAfterDampener
	b (I)I getMaxCost
net/minecraft/server/BehaviorTarget net/minecraft/world/entity/ai/behavior/BlockPosWrapper
	a pos
	b lookAt
	a ()Lnet/minecraft/server/BlockPosition; getPos
	a (Lnet/minecraft/server/EntityLiving;)Z isVisible
	b ()Lnet/minecraft/server/Vec3D; getLookAtPos
aye net/minecraft/world/entity/vehicle/package-info
ayf net/minecraft/world/food/FoodConstants
ayj net/minecraft/world/food/package-info
xz$1 net/minecraft/server/players/StoredUserList$1
aug$f net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal
	a drowned
	a ()Z canUse
	c ()V start
	d ()V stop
aug$e net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal
	a drowned
	b speedModifier
	c seaLevel
	d stuck
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
dat$a net/minecraft/client/gui/font/FontTexture$Node
	a x
	b y
	c width
	d height
	e left
	f right
	g occupied
	a (Lctx;)Ldat$a; insert
	a (Ldat$a;)I access$100
	b (Ldat$a;)I access$200
aug$b net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal
	g drowned
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
aug$a net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal
	d drowned
	a ()Z canUse
	b ()Z canContinueToUse
net/minecraft/server/DispenseBehaviorMaybe net/minecraft/core/dispenser/OptionalDispenseItemBehavior
	dispensed success
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
aug$d net/minecraft/world/entity/monster/Drowned$DrownedMoveControl
	i drowned
	a ()V tick
aug$c net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f level
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	g ()Lnet/minecraft/server/Vec3D; getWaterPos
net/minecraft/server/BlockScaffolding net/minecraft/world/level/block/ScaffoldingBlock
	a DISTANCE
	b WATERLOGGED
	c BOTTOM
	d STABLE_SHAPE
	e UNSTABLE_SHAPE
	f UNSTABLE_SHAPE_BOTTOM
	g BELOW_BLOCK
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getDistance
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;I)Z isBottom
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	i (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
net/minecraft/server/WorldGenLakes net/minecraft/world/level/levelgen/feature/LakeFeature
	a AIR
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureLakeConfiguration;)Z place
net/minecraft/server/DataConverterVillage net/minecraft/util/datafix/fixes/SavedDataVillageCropFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;)Lcom/mojang/datafixers/Dynamic; updateCrop
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; updateChildren
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateChildren
	c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateSingleField
	d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateDoubleField
	e (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$updateChildren$0
net/minecraft/server/FluidImpl net/minecraft/world/level/material/FluidStateImpl
	c ()Lnet/minecraft/server/FluidType; getType
net/minecraft/server/ItemTool net/minecraft/world/item/DiggerItem
	a blocks
	b speed
	c attackDamage
	d attackSpeed
	a (Lnet/minecraft/server/EntityLiving;)V lambda$mineBlock$1
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z mineBlock
	b (Lnet/minecraft/server/EntityLiving;)V lambda$hurtEnemy$0
cyx$a net/minecraft/client/gui/MapRenderer$MapInstance
	a this$0
	b data
	c texture
	d location
	a ()V updateTexture
	a (Lcyx$a;)V access$000
	a (Lcyx$a;Z)V access$100
	a (Z)V draw
	b (Lcyx$a;)Lnet/minecraft/server/WorldMap; access$300
cyg$2 net/minecraft/client/Options$2
	a $SwitchMap$net$minecraft$client$CloudStatus
net/minecraft/server/DefinedStructureProcessorGravity net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor
	a heightmap
	b offset
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
cyg$1 net/minecraft/client/Options$1
aw$b net/minecraft/advancements/critereon/EntityTypePredicate$TypePredicate
	b type
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lnet/minecraft/server/EntityTypes;)Z matches
net/minecraft/server/LocaleLanguage net/minecraft/locale/Language
	a LOGGER
	b UNSUPPORTED_FORMAT_PATTERN
	c SINGLETON
	d storage
	e lastUpdateTime
	a ()Lnet/minecraft/server/LocaleLanguage; getInstance
	a (Ljava/lang/String;)Ljava/lang/String; getElement
	a (Ljava/util/Map;)V forceData
	b ()J getLastUpdateTime
	b (Ljava/lang/String;)Z exists
	c (Ljava/lang/String;)Ljava/lang/String; getProperty
aw$a net/minecraft/advancements/critereon/EntityTypePredicate$TagPredicate
	b tag
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lnet/minecraft/server/EntityTypes;)Z matches
net/minecraft/server/PacketPlayOutViewDistance net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket
	a radius
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getRadius
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/EnchantmentSlotType net/minecraft/world/item/enchantment/EnchantmentCategory
	o $VALUES
net/minecraft/server/PacketPlayOutLookAt net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket
	a x
	b y
	c z
	d entity
	e fromAnchor
	f toAnchor
	g atEntity
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Vec3D; getPosition
	b ()Lnet/minecraft/server/ArgumentAnchor$Anchor; getFromAnchor
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
dkq$1 net/minecraft/client/particle/BubbleColumnUpParticle$1
cyx$1 net/minecraft/client/gui/MapRenderer$1
net/minecraft/server/Biomes net/minecraft/world/level/biome/Biomes
	b DEFAULT
	a (ILjava/lang/String;Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeBase; register
net/minecraft/server/CommandKick net/minecraft/server/commands/KickCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/IChatBaseComponent;)I kickPlayers
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/BiomeMesaPlataeu net/minecraft/world/level/biome/WoodedBadlandsBiome
	a (Lnet/minecraft/server/BlockPosition;)I getFoliageColor
	b (Lnet/minecraft/server/BlockPosition;)I getGrassColor
dlc$d net/minecraft/client/particle/FireworkParticles$SparkProvider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dlc$c net/minecraft/client/particle/FireworkParticles$SparkParticle
	F trail
	G flicker
	H engine
	I fadeR
	J fadeG
	K fadeB
	L hasFade
	a ()V tick
	a (Lcuw;Lcxq;FFFFFF)V render
	a (Z)V setTrail
	b (Z)V setFlicker
dlc$b net/minecraft/client/particle/FireworkParticles$OverlayParticle
	a (Lcuw;Lcxq;FFFFFF)V render
	b ()Ldlr; getRenderType
	b (F)F getQuadSize
bi$a net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory
net/minecraft/server/BehaviorBell net/minecraft/world/entity/ai/behavior/SocializeAtBell
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/EntityLiving;)V lambda$null$3
	a (Lnet/minecraft/server/EntityLiving;)Z lambda$null$1
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BehaviorController;Ljava/util/List;)V lambda$start$4
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$null$2
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityLiving;)Z lambda$checkExtraStartConditions$0
dlc$a net/minecraft/client/particle/FireworkParticles$FlashProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
bi$b net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory
net/minecraft/server/RecipeSmoking net/minecraft/world/item/crafting/SmokingRecipe
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
aw$1 net/minecraft/advancements/critereon/EntityTypePredicate$1
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lnet/minecraft/server/EntityTypes;)Z matches
dlc$e net/minecraft/client/particle/FireworkParticles$Starter
	C life
	D engine
	E explosions
	F twinkleDelay
	a ()V tick
	a (DDDDDD[I[IZZ)V createParticle
	a (DI[I[IZZ)V createParticleBall
	a (D[[D[I[IZZZ)V createParticleShape
	a ([I[IZZ)V createParticleBurst
	c ()Z isFarAwayFromCamera
net/minecraft/server/Scoreboard net/minecraft/world/scores/Scoreboard
	displaySlots displayObjectives
	g displaySlotNames
	a (Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)V onPlayerScoreRemoved
	a (Ljava/util/function/Consumer;Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)V lambda$forAllObjectives$1
	a (Lnet/minecraft/server/Entity;)V entityRemoved
	a (Lnet/minecraft/server/IScoreboardCriteria;)Ljava/util/List; lambda$addObjective$0
	a (Lnet/minecraft/server/NBTTagList;)V loadPlayerScores
	a (Lnet/minecraft/server/NBTTagList;Ljava/util/Collection;)V lambda$savePlayerScores$6
	a (Lnet/minecraft/server/NBTTagList;Lnet/minecraft/server/ScoreboardScore;)V lambda$null$5
	b (Ljava/lang/String;)Z hasObjective
	b (Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)Z hasPlayerScore
	b (Lnet/minecraft/server/ScoreboardScore;)Z lambda$null$4
	c (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardObjective; getOrCreateObjective
	createTeam (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeam; addPlayerTeam
	d ()Ljava/util/Collection; getObjectiveNames
	e (Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)Lnet/minecraft/server/ScoreboardScore; lambda$getOrCreatePlayerScore$3
	f ()Ljava/util/Collection; getTeamNames
	getObjectiveForSlot (I)Lnet/minecraft/server/ScoreboardObjective; getDisplayObjective
	getObjectivesForCriteria (Lnet/minecraft/server/IScoreboardCriteria;Ljava/lang/String;Ljava/util/function/Consumer;)V forAllObjectives
	getPlayerObjectives (Ljava/lang/String;)Ljava/util/Map; getPlayerScores
	getPlayerScoreForObjective (Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)Lnet/minecraft/server/ScoreboardScore; getOrCreatePlayerScore
	getPlayerTeam (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeam; getPlayersTeam
	getPlayers ()Ljava/util/Collection; getTrackedPlayers
	getScoresForObjective (Lnet/minecraft/server/ScoreboardObjective;)Ljava/util/Collection; getPlayerScores
	getSlotForName (Ljava/lang/String;)I getDisplaySlotByName
	getSlotName (I)Ljava/lang/String; getDisplaySlotName
	getTeam (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeam; getPlayerTeam
	getTeams ()Ljava/util/Collection; getPlayerTeams
	h ()[Ljava/lang/String; getDisplaySlotNames
	handleObjectiveAdded (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveAdded
	handleObjectiveChanged (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveChanged
	handleObjectiveRemoved (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveRemoved
	handlePlayerRemoved (Ljava/lang/String;)V onPlayerRemoved
	handleScoreChanged (Lnet/minecraft/server/ScoreboardScore;)V onScoreChanged
	handleTeamAdded (Lnet/minecraft/server/ScoreboardTeam;)V onTeamAdded
	handleTeamChanged (Lnet/minecraft/server/ScoreboardTeam;)V onTeamChanged
	handleTeamRemoved (Lnet/minecraft/server/ScoreboardTeam;)V onTeamRemoved
	i ()Lnet/minecraft/server/NBTTagList; savePlayerScores
	k (Ljava/lang/String;)Ljava/util/Map; lambda$getOrCreatePlayerScore$2
	registerObjective (Ljava/lang/String;Lnet/minecraft/server/IScoreboardCriteria;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay;)Lnet/minecraft/server/ScoreboardObjective; addObjective
	removeTeam (Lnet/minecraft/server/ScoreboardTeam;)V removePlayerTeam
	resetPlayerScores (Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)V resetPlayerScore
	setDisplaySlot (ILnet/minecraft/server/ScoreboardObjective;)V setDisplayObjective
	unregisterObjective (Lnet/minecraft/server/ScoreboardObjective;)V removeObjective
net/minecraft/server/ChatComponentKeybind net/minecraft/network/chat/KeybindComponent
	b keyResolver
	c name
	d nameResolver
	b (Ljava/lang/String;)Ljava/util/function/Supplier; lambda$static$1
	c (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
	d ()Ljava/lang/String; getContents
	g ()Lnet/minecraft/server/IChatBaseComponent; copy
	i ()Lnet/minecraft/server/ChatComponentKeybind; copy
	j ()Ljava/lang/String; getName
ctq$a com/mojang/blaze3d/audio/Library$ChannelPool
	a ()Lctp; acquire
	a (Lctp;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
ctq$c com/mojang/blaze3d/audio/Library$Pool
	a STATIC
	b STREAMING
	c $VALUES
ctq$b com/mojang/blaze3d/audio/Library$CountingChannelPool
	a limit
	b activeChannels
	a ()Lctp; acquire
	a (Lctp;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
net/minecraft/server/BlockPredicate net/minecraft/world/level/block/state/predicate/BlockPredicate
	a block
	a (Lnet/minecraft/server/Block;)Lnet/minecraft/server/BlockPredicate; forBlock
	a (Lnet/minecraft/server/IBlockData;)Z test
net/minecraft/server/BehaviorHome net/minecraft/world/entity/ai/behavior/LocateHidingPlace
	a speed
	b radius
	c closeEnoughDist
	d currentPos
	a (Lnet/minecraft/server/BlockPosition;)Z lambda$start$3
	a (Lnet/minecraft/server/VillagePlaceType;)Z lambda$start$2
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/BlockPosition;)Z lambda$checkExtraStartConditions$1
	b (Lnet/minecraft/server/VillagePlaceType;)Z lambda$checkExtraStartConditions$0
net/minecraft/server/EntityExperienceOrb net/minecraft/world/entity/ExperienceOrb
	b tickCount
	c age
	d throwTime
	e health
	targetPlayer followingPlayer
	targetTime followingTime
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aE ()I getLightColor
	ap ()Z makeStepSound
	az ()V doWaterSplashEffect
	b (I)I durabilityToXp
	b (Lnet/minecraft/server/EntityHuman;)V playerTouch
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bs ()Z isAttackable
	c (I)I xpToDurability
	f ()I getValue
	getOrbValue (I)I getExperienceValue
	h ()V tick
	h (I)V burn
	i ()I getIcon
	k ()V setUnderwaterMovement
	u_ ()V defineSynchedData
net/minecraft/server/BlockStateEnum net/minecraft/world/level/block/state/properties/EnumProperty
	a values
	b names
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Ljava/lang/Enum;)Ljava/lang/String; getName
	a (Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Lnet/minecraft/server/BlockStateEnum; create
	a (Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Lnet/minecraft/server/BlockStateEnum; create
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	c ()I generateHashCode
	d ()Ljava/util/Collection; getPossibleValues
	of (Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/server/BlockStateEnum; create
	of (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lnet/minecraft/server/BlockStateEnum; create
qm$8 net/minecraft/network/syncher/EntityDataSerializers$16
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/NBTTagCompound;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/NBTTagCompound; read
kt$1 net/minecraft/network/protocol/game/ClientboundBossEventPacket$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundBossEventPacket$Operation
qm$9 net/minecraft/network/syncher/EntityDataSerializers$17
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/VillagerData;)V write
	a (Lnet/minecraft/server/VillagerData;)Lnet/minecraft/server/VillagerData; copy
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/VillagerData; read
net/minecraft/server/TileEntityEnchantTable net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity
	a time
	b flip
	c oFlip
	g flipT
	h flipA
	i open
	j oOpen
	k rot
	l oRot
	m tRot
	n RANDOM
	o name
	O ()Lnet/minecraft/server/IChatBaseComponent; getName
	Q ()Lnet/minecraft/server/IChatBaseComponent; getCustomName
	T_ ()V tick
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
net/minecraft/server/WorldGenFeatureDefinedStructurePoolList net/minecraft/world/level/levelgen/feature/structures/ListPoolElement
	a elements
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; getType
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure; lambda$new$0
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure;)Ljava/lang/Object; lambda$getDynamic$1
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;)Z place
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure; setProjection
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure;)V lambda$setProjectionOnEachElement$2
	b (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)V setProjectionOnEachElement
net/minecraft/server/ArgumentScoreholder net/minecraft/commands/arguments/ScoreHolderArgument
	a SUGGEST_SCORE_HOLDERS
	b EXAMPLES
	c ERROR_NO_RESULTS
	d multiple
	a ()Lnet/minecraft/server/ArgumentScoreholder; scoreHolder
	a (Lcom/mojang/brigadier/StringReader;)Lcz$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$1
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; getName
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection; getNames
	a (Ljava/util/Collection;Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/function/Supplier;)Ljava/util/Collection; lambda$parse$3
	a (Lnet/minecraft/server/ArgumentScoreholder;)Z access$000
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/function/Supplier;)Ljava/util/Collection; lambda$parse$2
	b ()Lnet/minecraft/server/ArgumentScoreholder; scoreHolders
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V lambda$null$0
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getNames
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getNamesWithDefaultWildcard
bst$1 net/minecraft/world/level/block/TrapDoorBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
net/minecraft/server/ArgumentTag net/minecraft/commands/arguments/item/FunctionArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	c ERROR_UNKNOWN_FUNCTION
	a ()Lnet/minecraft/server/ArgumentTag; functions
	a (Lcom/mojang/brigadier/StringReader;)Ldv$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getFunctions
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; access$000
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$getFunction$2
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; getFunctionOrTag
	b (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/CustomFunction; access$100
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	c (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/CustomFunction; getFunction
	d (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; getFunctionTag
net/minecraft/server/PathfinderGoalNearestAttackableTargetWitch net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal
	i canAttack
	a ()Z canUse
	a (Z)V setCanAttack
af$b net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance
	a potion
	a (Lnet/minecraft/server/PotionRegistry;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Laf$b; brewedPotion
af$a net/minecraft/advancements/critereon/BrewedPotionTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/PotionRegistry;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
net/minecraft/server/ResourcePackLoader$Position net/minecraft/server/packs/repository/UnopenedPack$Position
	c $VALUES
	a ()Lnet/minecraft/server/ResourcePackLoader$Position; opposite
	a (Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I insert
net/minecraft/server/DataConverterShoulderEntity net/minecraft/util/datafix/fixes/WriteAndReadFix
	a name
	b type
net/minecraft/server/BlockActionContext net/minecraft/world/item/BlockPlaceContext
	a replaceClicked
	g relativePos
	a ()Lnet/minecraft/server/BlockPosition; getClickedPos
	a (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockActionContext; at
	b ()Z canPlace
	c ()Z replacingClickedOnBlock
	d ()Lnet/minecraft/server/EnumDirection; getNearestLookingDirection
	e ()[Lnet/minecraft/server/EnumDirection; getNearestLookingDirections
net/minecraft/server/DamageSourceNetherBed net/minecraft/world/damagesource/NetherBedDamage
	a (Lnet/minecraft/server/ChatModifier;)V lambda$getLocalizedDeathMessage$0
	c (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/IChatBaseComponent; getLocalizedDeathMessage
net/minecraft/server/BlockPropertyInstrument net/minecraft/world/level/block/state/properties/NoteBlockInstrument
	q name
	r soundEvent
	s $VALUES
	a ()Lnet/minecraft/server/SoundEffect; getSoundEvent
	a (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/BlockPropertyInstrument; byState
	m ()Ljava/lang/String; getSerializedName
qm$4 net/minecraft/network/syncher/EntityDataSerializers$12
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/BlockPosition;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/BlockPosition; read
qm$5 net/minecraft/network/syncher/EntityDataSerializers$13
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Ljava/util/Optional;)Ljava/util/Optional; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/util/Optional;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/util/Optional; read
net/minecraft/server/ShapeDetector net/minecraft/world/level/block/state/pattern/BlockPattern
	a pattern
	b depth
	c height
	d width
	a ()I getDepth
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;III)Lnet/minecraft/server/BlockPosition; translateAndRotate
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;Lcom/google/common/cache/LoadingCache;)Lnet/minecraft/server/ShapeDetector$ShapeDetectorCollection; matches
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ShapeDetector$ShapeDetectorCollection; find
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/ShapeDetector$ShapeDetectorCollection; matches
	a (Lnet/minecraft/server/IWorldReader;Z)Lcom/google/common/cache/LoadingCache; createLevelCache
	b ()I getHeight
	c ()I getWidth
	d ()[[[Ljava/util/function/Predicate; getPattern
net/minecraft/server/ResourcePackInfo net/minecraft/server/packs/metadata/pack/PackMetadataSection
	a SERIALIZER
	b description
	c packFormat
	a ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	b ()I getPackFormat
qm$6 net/minecraft/network/syncher/EntityDataSerializers$14
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/EnumDirection;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/EnumDirection; read
net/minecraft/server/DragonControllerManager net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager
	a LOGGER
	currentDragonController currentPhase
	dragonControllers phases
	enderDragon dragon
	a ()Lnet/minecraft/server/IDragonController; getCurrentPhase
	b (Lnet/minecraft/server/DragonControllerPhase;)Lnet/minecraft/server/IDragonController; getPhase
	setControllerPhase (Lnet/minecraft/server/DragonControllerPhase;)V setPhase
net/minecraft/server/DataConverterBlockEntityKeepPacked net/minecraft/util/datafix/fixes/BlockEntityKeepPacked
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
qm$7 net/minecraft/network/syncher/EntityDataSerializers$15
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Ljava/util/Optional;)Ljava/util/Optional; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/util/Optional;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/util/Optional; read
net/minecraft/server/ChatDeserializer net/minecraft/util/GsonHelper
	a GSON
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/reflect/Type;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/reflect/Type;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/JsonElement;)Z isStringValue
	a (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String; convertToString
	a (Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; convertToObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isStringValue
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;B)B getAsByte
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;C)C getAsCharacter
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;D)D getAsDouble
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;F)F getAsFloat
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;I)I getAsInt
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;J)J getAsLong
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray; getAsJsonArray
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; getAsObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject; getAsJsonObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; getAsObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getAsString
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal; getAsBigDecimal
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger; getAsBigInteger
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/server/Item;)Lnet/minecraft/server/Item; getAsItem
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;S)S getAsShort
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z getAsBoolean
	a (Ljava/io/Reader;)Lcom/google/gson/JsonObject; parse
	a (Ljava/io/Reader;Z)Lcom/google/gson/JsonObject; parse
	a (Ljava/lang/String;)Lcom/google/gson/JsonObject; parse
	a (Ljava/lang/String;Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$convertToItem$0
	a (Ljava/lang/String;Z)Lcom/google/gson/JsonObject; parse
	b (Lcom/google/gson/JsonElement;)Z isNumberValue
	b (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lnet/minecraft/server/Item; convertToItem
	b (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isNumberValue
	c (Lcom/google/gson/JsonElement;)Z isBooleanValue
	c (Lcom/google/gson/JsonElement;Ljava/lang/String;)Z convertToBoolean
	c (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isBooleanValue
	d (Lcom/google/gson/JsonElement;)Ljava/lang/String; getType
	d (Lcom/google/gson/JsonElement;Ljava/lang/String;)D convertToDouble
	d (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isArrayNode
	e (Lcom/google/gson/JsonElement;Ljava/lang/String;)F convertToFloat
	e (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isObjectNode
	f (Lcom/google/gson/JsonElement;Ljava/lang/String;)J convertToLong
	f (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isValidPrimitive
	g (Lcom/google/gson/JsonElement;Ljava/lang/String;)I convertToInt
	g (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isValidNode
	h (Lcom/google/gson/JsonElement;Ljava/lang/String;)B convertToByte
	h (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; getAsString
	i (Lcom/google/gson/JsonElement;Ljava/lang/String;)C convertToCharacter
	i (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/server/Item; getAsItem
	j (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal; convertToBigDecimal
	j (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z getAsBoolean
	k (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger; convertToBigInteger
	k (Lcom/google/gson/JsonObject;Ljava/lang/String;)D getAsDouble
	l (Lcom/google/gson/JsonElement;Ljava/lang/String;)S convertToShort
	l (Lcom/google/gson/JsonObject;Ljava/lang/String;)F getAsFloat
	m (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject; convertToJsonObject
	m (Lcom/google/gson/JsonObject;Ljava/lang/String;)J getAsLong
	n (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray; convertToJsonArray
	n (Lcom/google/gson/JsonObject;Ljava/lang/String;)I getAsInt
	o (Lcom/google/gson/JsonObject;Ljava/lang/String;)B getAsByte
	p (Lcom/google/gson/JsonObject;Ljava/lang/String;)C getAsCharacter
	q (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal; getAsBigDecimal
	r (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger; getAsBigInteger
	s (Lcom/google/gson/JsonObject;Ljava/lang/String;)S getAsShort
	t (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject; getAsJsonObject
	u (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray; getAsJsonArray
dhp$a net/minecraft/client/model/HumanoidModel$ArmPose
	a EMPTY
	b ITEM
	c BLOCK
	d BOW_AND_ARROW
	e THROW_SPEAR
	f CROSSBOW_CHARGE
	g CROSSBOW_HOLD
	h $VALUES
net/minecraft/server/ItemSword net/minecraft/world/item/SwordItem
	a attackDamage
	b attackSpeed
	a (Lnet/minecraft/server/EntityLiving;)V lambda$mineBlock$1
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)Z canAttackBlock
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z mineBlock
	b (Lnet/minecraft/server/EntityLiving;)V lambda$hurtEnemy$0
	b (Lnet/minecraft/server/IBlockData;)Z canDestroySpecial
	d ()F getDamage
qm$1 net/minecraft/network/syncher/EntityDataSerializers$1
	a (Ljava/lang/Byte;)Ljava/lang/Byte; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Byte;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Byte; read
net/minecraft/server/WorldGenEnder$Spike net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike
	a centerX
	b centerZ
	c radius
	d height
	e guarded
	f topBoundingBox
	a ()I getCenterX
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenEnder$Spike; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lnet/minecraft/server/BlockPosition;)Z isCenterWithinChunk
	b ()I getCenterZ
	c ()I getRadius
	d ()I getHeight
	e ()Z isGuarded
	f ()Lnet/minecraft/server/AxisAlignedBB; getTopBoundingBox
qm$2 net/minecraft/network/syncher/EntityDataSerializers$10
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/Particle;)Lnet/minecraft/server/ParticleParam; readParticle
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/ParticleParam;)V write
	a (Lnet/minecraft/server/ParticleParam;)Lnet/minecraft/server/ParticleParam; copy
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParam; read
cjt$1 net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
qm$3 net/minecraft/network/syncher/EntityDataSerializers$11
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/Vector3f;)V write
	a (Lnet/minecraft/server/Vector3f;)Lnet/minecraft/server/Vector3f; copy
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/Vector3f; read
net/minecraft/server/PathfinderGoalNearestAttackableTarget net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal
	a targetType
	b randomInterval
	c target
	d targetConditions
	a ()Z canUse
	a (D)Lnet/minecraft/server/AxisAlignedBB; getTargetSearchArea
	c ()V start
	g ()V findTarget
net/minecraft/server/EntityAgeable net/minecraft/world/entity/AgableMob
	b age
	bz DATA_BABY_ID
	c forcedAge
	d forcedAgeTimer
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityAgeable;)V onOffspringSpawnedFromEgg
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	createChild (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	k ()V aiStep
	l ()V ageBoundaryReached
	setAge (I)V ageUp
	setAge (IZ)V ageUp
	setAgeRaw (I)V setAge
	u_ ()V defineSynchedData
	v_ ()Z isBaby
net/minecraft/server/IVectorPosition net/minecraft/commands/arguments/coordinates/Coordinates
	a ()Z isXRelative
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec3D; getPosition
	b ()Z isYRelative
	b (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec2F; getRotation
	c ()Z isZRelative
	c (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/BlockPosition; getBlockPos
net/minecraft/server/BlockBarrier net/minecraft/world/level/block/BarrierBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	f (Lnet/minecraft/server/IBlockData;)Z canOcclude
dci$b net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList
	a this$0
	a (Ldci$b$a;)V setSelected
	a (Ldci$b;)Lcyc; access$300
net/minecraft/server/BlockTurtleEgg net/minecraft/world/level/block/TurtleEggBlock
	a HATCH
	b EGGS
	c ONE_EGG_AABB
	d MULTIPLE_EGGS_AABB
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z onSand
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/World;)Z shouldUpdateHatchLevel
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V stepOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;F)V fallOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;I)V destroyEgg
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V decreaseEggs
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;)Z canDestroyEgg
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
dci$a net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetInfo
	a icon
	b name
	c value
cqp$b net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetLore; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetLore;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/DefinedStructureProcessorBlockIgnore net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor
	a STRUCTURE_BLOCK
	b AIR
	c STRUCTURE_AND_AIR
	d toIgnore
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/Block; lambda$new$0
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/Block;)Ljava/lang/Object; lambda$getDynamic$1
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
net/minecraft/server/MapIcon net/minecraft/world/level/saveddata/maps/MapDecoration
	rotation rot
	a (B)V setX
	b (B)V setY
	c (B)V setRot
	f ()Z renderOnFrame
	getRotation ()B getRot
	getType ()B getImage
net/minecraft/server/IWorldBorderListener net/minecraft/world/level/border/BorderChangeListener
	a (Lnet/minecraft/server/WorldBorder;D)V onBorderSizeSet
	a (Lnet/minecraft/server/WorldBorder;DD)V onBorderCenterSet
	a (Lnet/minecraft/server/WorldBorder;DDJ)V onBorderSizeLerping
	a (Lnet/minecraft/server/WorldBorder;I)V onBorderSetWarningTime
	b (Lnet/minecraft/server/WorldBorder;D)V onBorderSetDamagePerBlock
	b (Lnet/minecraft/server/WorldBorder;I)V onBorderSetWarningBlocks
	c (Lnet/minecraft/server/WorldBorder;D)V onBorderSetDamageSafeZOne
net/minecraft/server/EntityGuardian$ControllerMoveGuardian net/minecraft/world/entity/monster/Guardian$GuardianMoveControl
	i guardian
	a ()V tick
net/minecraft/server/DataConverterCoralFan net/minecraft/util/datafix/fixes/RenamedCoralFansFix
	a RENAMED_IDS
net/minecraft/server/WorldGenMineshaftPieces$WorldGenMineshaftCorridor net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCorridor
	b hasRails
	c spiderCorridor
	d hasPlacedSpider
	e numSections
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/StructureBoundingBox; findCorridorSize
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIIIILjava/util/Random;)V placeSupport
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;FIII)V placeCobWeb
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;IIILnet/minecraft/server/MinecraftKey;)Z createChest
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/EntitySquid$PathfinderGoalSquid net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal
	a this$0
	b squid
	a ()Z canUse
	e ()V tick
net/minecraft/server/EnchantmentSweeping net/minecraft/world/item/enchantment/SweepingEdgeEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
	e (I)F getSweepingDamageRatio
net/minecraft/server/EntityLlamaSpit net/minecraft/world/entity/projectile/LlamaSpit
	c ownerTag
	shooter owner
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/Entity;)Z lambda$tick$0
	a (Lnet/minecraft/server/Entity;FFFFF)V shootFromRotation
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (DDDFF)V shoot
	f ()V restoreOwnerFromSave
	h ()V tick
	h (DDD)V lerpMotion
	u_ ()V defineSynchedData
net/minecraft/server/IRegistry net/minecraft/core/Registry
	STATS STAT_TYPE
	a LOADERS
	e LOGGER
	f REGISTRY
	A ()Lnet/minecraft/server/BiomeBase; lambda$static$12
	B ()Lnet/minecraft/server/WorldGenDecorator; lambda$static$11
	C ()Lnet/minecraft/server/WorldGenerator; lambda$static$10
	D ()Lnet/minecraft/server/WorldGenSurface; lambda$static$9
	E ()Lnet/minecraft/server/WorldGenCarverAbstract; lambda$static$8
	F ()Lnet/minecraft/server/PotionRegistry; lambda$static$7
	G ()Lnet/minecraft/server/Item; lambda$static$6
	H ()Lnet/minecraft/server/EntityTypes; lambda$static$5
	I ()Lnet/minecraft/server/Enchantment; lambda$static$4
	J ()Lnet/minecraft/server/Block; lambda$static$3
	K ()Lnet/minecraft/server/MobEffectList; lambda$static$2
	L ()Lnet/minecraft/server/FluidType; lambda$static$1
	M ()Lnet/minecraft/server/SoundEffect; lambda$static$0
	a ()Lnet/minecraft/server/Activity; lambda$static$36
	a (Ljava/lang/Object;)I getId
	a (Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/server/RegistryBlocks; registerDefaulted
	a (Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/server/IRegistry; registerSimple
	a (Ljava/lang/String;Lnet/minecraft/server/IRegistryWritable;Ljava/util/function/Supplier;)Lnet/minecraft/server/IRegistryWritable; internalRegister
	a (Ljava/util/Map$Entry;)V lambda$static$37
	a (Ljava/util/Random;)Ljava/lang/Object; getRandom
	a (Lnet/minecraft/server/IRegistry;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; registerMapping
	a (Lnet/minecraft/server/IRegistry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/MinecraftKey;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lnet/minecraft/server/IRegistryWritable;)V lambda$static$38
	b (I)Z containsId
	c ()Lnet/minecraft/server/Schedule; lambda$static$35
	c (Lnet/minecraft/server/MinecraftKey;)Z containsKey
	d ()Ljava/util/stream/Stream; stream
	e ()Lnet/minecraft/server/SensorType; lambda$static$34
	f ()Lnet/minecraft/server/MemoryModuleType; lambda$static$33
	g ()Lnet/minecraft/server/VillagePlaceType; lambda$static$32
	h ()Lnet/minecraft/server/VillagerProfession; lambda$static$31
	i ()Lnet/minecraft/server/VillagerType; lambda$static$30
	j ()Lnet/minecraft/server/StatisticWrapper; lambda$static$29
	k ()Lnet/minecraft/server/RecipeSerializer; lambda$static$28
	l ()Lnet/minecraft/server/Recipes; lambda$static$27
	m ()Lnet/minecraft/server/Containers; lambda$static$26
	n ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; lambda$static$25
	o ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; lambda$static$24
	p ()Lnet/minecraft/server/DefinedStructureRuleTestType; lambda$static$23
	q ()Lnet/minecraft/server/WorldGenFeatureStructurePieceType; lambda$static$22
	r ()Lnet/minecraft/server/StructureGenerator; lambda$static$21
	s ()Lnet/minecraft/server/ChunkStatus; lambda$static$20
	t ()Lnet/minecraft/server/MinecraftKey; lambda$static$19
	u ()Lnet/minecraft/server/Paintings; lambda$static$18
	v ()Lnet/minecraft/server/DimensionManager; lambda$static$17
	w ()Lnet/minecraft/server/ChunkGeneratorType; lambda$static$16
	x ()Lnet/minecraft/server/TileEntityTypes; lambda$static$15
	y ()Lnet/minecraft/server/BiomeLayout; lambda$static$14
	z ()Lnet/minecraft/server/Particle; lambda$static$13
net/minecraft/server/BlockCommand net/minecraft/world/level/block/CommandBlock
	a FACING
	b CONDITIONAL
	c LOGGER
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/CommandBlockListenerAbstract;Z)V execute
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V executeChain
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/WorldGenFeatureIcePile net/minecraft/world/level/levelgen/feature/IceBlockPileFeature
	a (Lnet/minecraft/server/GeneratorAccess;)Lnet/minecraft/server/IBlockData; getBlockState
net/minecraft/server/Advancement net/minecraft/advancements/Advancement
	a parent
	b display
	c rewards
	d id
	e criteria
	f requirements
	g children
	h chatComponent
	a ()Lnet/minecraft/server/Advancement$SerializedAdvancement; deconstruct
	a (Lnet/minecraft/server/Advancement;)V addChild
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/ChatModifier;)V lambda$new$0
	b ()Lnet/minecraft/server/Advancement; getParent
	c ()Lnet/minecraft/server/AdvancementDisplay; getDisplay
	d ()Lnet/minecraft/server/AdvancementRewards; getRewards
	e ()Ljava/lang/Iterable; getChildren
	g ()I getMaxCriteraRequired
	getName ()Lnet/minecraft/server/MinecraftKey; getId
	i ()[[Ljava/lang/String; getRequirements
	j ()Lnet/minecraft/server/IChatBaseComponent; getChatComponent
net/minecraft/server/SkipEncodeException net/minecraft/network/SkipPacketException
dyz$b net/minecraft/client/resources/model/WeightedBakedModel$WeightedModel
	b model
dyz$a net/minecraft/client/resources/model/WeightedBakedModel$Builder
	a list
	a ()Ldyp; build
	a (Ldyp;I)Ldyz$a; add
net/minecraft/server/BlockDispenser net/minecraft/world/level/block/DispenserBlock
	REGISTRY DISPENSER_REGISTRY
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;)V lambda$static$0
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IDispenseBehavior;)V registerBehavior
	a (Lnet/minecraft/server/ISourceBlock;)Lnet/minecraft/server/IPosition; getDispensePosition
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IDispenseBehavior; getDispenseMethod
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	dispense (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V dispenseFrom
net/minecraft/server/PacketPlayOutMapChunk net/minecraft/network/protocol/game/ClientboundLevelChunkPacket
	a x
	b z
	c availableSections
	d heightmaps
	e buffer
	f blockEntitiesTags
	g fullChunk
	a (Lnet/minecraft/server/Chunk;I)I calculateChunkSize
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/Chunk;I)I extractChunkData
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/PacketDataSerializer; getReadBuffer
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getX
	d ()I getZ
	e ()I getAvailableSections
	f ()Z isFullChunk
	g ()Lnet/minecraft/server/NBTTagCompound; getHeightmaps
	h ()Ljava/util/List; getBlockEntitiesTags
	i ()Lio/netty/buffer/ByteBuf; getWriteBuffer
net/minecraft/server/WorldGenDecoratorNoiseConfiguration net/minecraft/world/level/levelgen/placement/DecoratorNoiseCountFactor
	a noiseToCountRatio
	b noiseFactor
	c noiseOffset
	d heightmap
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorNoiseConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/BlockGlazedTerracotta net/minecraft/world/level/block/GlazedTerracottaBlock
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	i (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
net/minecraft/server/Explosion net/minecraft/world/level/Explosion
	a fire
	b blockInteraction
	blocks toBlow
	c random
	j damageSource
	l hitPlayers
	posX x
	posY y
	posZ z
	size radius
	world level
	a ()V explode
	a (Lnet/minecraft/server/DamageSource;)V setDamageSource
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;)F getSeenPercent
	a (Z)V finalizeExplosion
	b ()Lnet/minecraft/server/DamageSource; getDamageSource
	c ()Ljava/util/Map; getHitPlayers
	clearBlocks ()V clearToBlow
	getBlocks ()Ljava/util/List; getToBlow
	getSource ()Lnet/minecraft/server/EntityLiving; getSourceMob
net/minecraft/server/BlockBambooSapling net/minecraft/world/level/block/BambooSaplingBlock
	a SAPLING_SHAPE
	R_ ()Lnet/minecraft/server/Block$EnumRandomOffset; getOffsetType
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getDestroyProgress
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V growBamboo
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
net/minecraft/server/NBTTagDouble net/minecraft/nbt/DoubleTag
	a ()B getId
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)V load
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTBase; copy
	c ()Lnet/minecraft/server/NBTTagDouble; copy
	d ()J getAsLong
	e ()I getAsInt
	f ()S getAsShort
	g ()B getAsByte
	h ()D getAsDouble
	i ()F getAsFloat
	j ()Ljava/lang/Number; getAsNumber
net/minecraft/server/GameProfilerDisabled net/minecraft/util/profiling/InactiveProfiler
	a INACTIVE
	a ()V startTick
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	b ()V endTick
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c ()V pop
	d ()Lnet/minecraft/server/MethodProfilerResults; getResults
dlt$1 net/minecraft/client/particle/PortalParticle$1
dat$1 net/minecraft/client/gui/font/FontTexture$1
net/minecraft/server/CommandDifficulty net/minecraft/server/commands/DifficultyCommand
	a ERROR_ALREADY_DIFFICULT
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EnumDifficulty;)I setDifficulty
	a (Lnet/minecraft/server/EnumDifficulty;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
cjt$a net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette
	a DEFAULT_BLOCK_STATE
	b ids
	c lastId
	a (I)Lnet/minecraft/server/IBlockData; stateFor
	a (Lnet/minecraft/server/IBlockData;)I idFor
	a (Lnet/minecraft/server/IBlockData;I)V addMapping
net/minecraft/server/EntityMinecartAbstract net/minecraft/world/entity/vehicle/AbstractMinecart
	aA lyd
	aB lzd
	ar flipped
	as EXITS
	at lSteps
	au lx
	av ly
	aw lz
	ax lyr
	ay lxr
	az lxd
	b DATA_ID_HURT
	c DATA_ID_HURTDIR
	d DATA_ID_DAMAGE
	e DATA_ID_DISPLAY_BLOCK
	f DATA_ID_DISPLAY_OFFSET
	g DATA_ID_CUSTOM_DISPLAY
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (DDDD)Lnet/minecraft/server/Vec3D; getPosOffs
	a (DDDFFIZ)V lerpTo
	a (IIIZ)V activateMinecart
	a (Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
	a (Lnet/minecraft/server/DamageSource;)V destroy
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/World;DDDLnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType;)Lnet/minecraft/server/EntityMinecartAbstract; createMinecart
	a (Z)V setCustomDisplay
	aH ()Z isPickable
	aI ()Z isPushable
	aP ()D getRideHeight
	aY ()V animateHurt
	ap ()Z makeStepSound
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V moveAlongTrack
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bJ ()Lnet/minecraft/server/EnumDirection; getMotionDirection
	bM ()Lnet/minecraft/server/AxisAlignedBB; getBoundingBoxForCulling
	c (I)V setHurtTime
	d (I)V setHurtDir
	decelerate ()V applyNaturalSlowdown
	getDisplayBlock ()Lnet/minecraft/server/IBlockData; getDisplayBlockState
	getDisplayBlockOffset ()I getDisplayOffset
	getType ()I getHurtTime
	h ()V tick
	h (DDD)V lerpMotion
	i ()V comeOffTrack
	i (Lnet/minecraft/server/Entity;)V push
	j (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/AxisAlignedBB; getCollideAgainstBox
	l (DDD)Lnet/minecraft/server/Vec3D; getPos
	n ()I getHurtDir
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	s ()I getDefaultDisplayOffset
	setDisplayBlock (Lnet/minecraft/server/IBlockData;)V setDisplayBlockState
	setDisplayBlockOffset (I)V setDisplayOffset
	u ()Z hasCustomDisplay
	u_ ()V defineSynchedData
cut$a com/mojang/blaze3d/shaders/Program$Type
	a VERTEX
	b FRAGMENT
	c name
	d extension
	e glType
	f programs
	g $VALUES
	a ()Ljava/lang/String; getName
	a (Lcut$a;)I access$000
	b ()Ljava/lang/String; getExtension
	c ()Ljava/util/Map; getPrograms
	d ()I getGlType
avj$c net/minecraft/world/entity/monster/Vindicator$VindicatorMeleeAttackGoal
	d this$0
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
net/minecraft/server/BlockMobSpawner net/minecraft/world/level/block/SpawnerBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/BlockEnchantmentTable net/minecraft/world/level/block/EnchantmentTableBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$getMenuProvider$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	n (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
avj$a net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
avj$b net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal
	a ()Z canUse
	c ()V start
net/minecraft/server/ArgumentRotationAxis net/minecraft/commands/arguments/coordinates/SwizzleArgument
	a EXAMPLES
	b ERROR_INVALID
	a ()Lnet/minecraft/server/ArgumentRotationAxis; swizzle
	a (Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet; getSwizzle
net/minecraft/server/PathfinderGoalTame net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal
	b speedModifier
	c posX
	d posY
	e posZ
	entity horse
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
net/minecraft/server/PacketPlayOutUpdateTime net/minecraft/network/protocol/game/ClientboundSetTimePacket
	a gameTime
	b dayTime
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()J getGameTime
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()J getDayTime
net/minecraft/server/DefinedStructureTestBlockState net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest
	a blockState
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
net/minecraft/server/VectorPosition net/minecraft/commands/arguments/coordinates/WorldCoordinates
	a x
	b y
	c z
	a ()Z isXRelative
	a (DDD)Lnet/minecraft/server/VectorPosition; absolute
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/VectorPosition; parseInt
	a (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/server/VectorPosition; parseDouble
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec3D; getPosition
	a (Lnet/minecraft/server/Vec2F;)Lnet/minecraft/server/VectorPosition; absolute
	b ()Z isYRelative
	b (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec2F; getRotation
	c ()Z isZRelative
	d ()Lnet/minecraft/server/VectorPosition; current
net/minecraft/server/BehaviorBellRing net/minecraft/world/entity/ai/behavior/RingBell
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
bax$1 net/minecraft/world/item/ClockItem$1
	a this$0
	b rotation
	c rota
	d lastUpdateTick
	a (Lnet/minecraft/server/World;D)D wobble
net/minecraft/server/DataWatcher net/minecraft/network/syncher/SynchedEntityData
	a LOGGER
	b ENTITY_ID_POOL
	entries itemsById
	f isEmpty
	g isDirty
	a ()Z isDirty
	a (Ljava/lang/Class;Lnet/minecraft/server/DataWatcherSerializer;)Lnet/minecraft/server/DataWatcherObject; defineId
	a (Ljava/util/List;)V assignValues
	a (Ljava/util/List;Lnet/minecraft/server/PacketDataSerializer;)V pack
	a (Lnet/minecraft/server/DataWatcher$Item;Lnet/minecraft/server/DataWatcher$Item;)V assignValue
	a (Lnet/minecraft/server/PacketDataSerializer;)V packAll
	a (Lnet/minecraft/server/PacketDataSerializer;ILnet/minecraft/server/DataWatcherSerializer;)Lnet/minecraft/server/DataWatcher$Item; genericHelper
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/DataWatcher$Item;)V writeDataItem
	b ()Ljava/util/List; packDirty
	b (Lnet/minecraft/server/DataWatcherObject;)Lnet/minecraft/server/DataWatcher$Item; getItem
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/util/List; unpack
	c ()Ljava/util/List; getAll
	d ()Z isEmpty
	e ()V clearDirty
	register (Lnet/minecraft/server/DataWatcherObject;Ljava/lang/Object;)V define
	registerObject (Lnet/minecraft/server/DataWatcherObject;Ljava/lang/Object;)V createDataItem
net/minecraft/server/DataConverterCustomNameTile net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
cpm$a net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder
	a entries
	a ()Lcpm$a; getThis
	b ()Lnet/minecraft/server/LootEntryAbstract; build
	b (Lcpq$a;)Lcpm$a; append
	d ()Lcpq$a; getThis
net/minecraft/server/EnchantmentMultishot net/minecraft/world/item/enchantment/MultiShotEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/AreaTransformer2 net/minecraft/world/level/newbiome/layer/traits/AreaTransformer1
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/AreaFactory;)Lnet/minecraft/server/AreaFactory; run
	a (Lnet/minecraft/server/AreaFactory;Lnet/minecraft/server/AreaContextTransformed;)Lnet/minecraft/server/Area; lambda$run$1
	b (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I lambda$null$0
net/minecraft/server/AreaTransformer3 net/minecraft/world/level/newbiome/layer/traits/AreaTransformer2
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;II)I lambda$null$0
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/AreaFactory;Lnet/minecraft/server/AreaFactory;)Lnet/minecraft/server/AreaFactory; run
	a (Lnet/minecraft/server/AreaFactory;Lnet/minecraft/server/AreaFactory;Lnet/minecraft/server/AreaContextTransformed;)Lnet/minecraft/server/Area; lambda$run$1
	a (Lnet/minecraft/server/WorldGenContext;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;II)I applyPixel
net/minecraft/server/AreaTransformer1 net/minecraft/world/level/newbiome/layer/traits/AreaTransformer0
	a (Lnet/minecraft/server/AreaContextTransformed;)Lnet/minecraft/server/AreaFactory; run
	a (Lnet/minecraft/server/AreaContextTransformed;II)I lambda$null$0
	a (Lnet/minecraft/server/WorldGenContext;II)I applyPixel
	b (Lnet/minecraft/server/AreaContextTransformed;)Lnet/minecraft/server/Area; lambda$run$1
p$b$2 net/minecraft/Util$OS$2
	b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
net/minecraft/server/CriterionTriggerEnterBlock net/minecraft/advancements/critereon/EnterBlockTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/IBlockData;)V trigger
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$createInstance$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lar$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
bab net/minecraft/world/inventory/package-info
net/minecraft/server/DataConverterShulkerBoxItem net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix
	a NAMES_BY_COLOR
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
p$b$1 net/minecraft/Util$OS$1
	b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
net/minecraft/server/EnchantmentArrowDamage net/minecraft/world/item/enchantment/ArrowDamageEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/MojangsonParser net/minecraft/nbt/TagParser
	a ERROR_TRAILING_DATA
	b ERROR_EXPECTED_KEY
	c ERROR_EXPECTED_VALUE
	d ERROR_INSERT_MIXED_LIST
	e ERROR_INSERT_MIXED_ARRAY
	f ERROR_INVALID_ARRAY
	g DOUBLE_PATTERN_NOSUFFIX
	h DOUBLE_PATTERN
	i FLOAT_PATTERN
	j BYTE_PATTERN
	k LONG_PATTERN
	l SHORT_PATTERN
	m INT_PATTERN
	n reader
	a ()Lnet/minecraft/server/NBTTagCompound; readSingleStruct
	a (BB)Ljava/util/List; readArray
	a (C)V expect
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b ()Ljava/lang/String; readKey
	b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	c ()Lnet/minecraft/server/NBTBase; readTypedValue
	d ()Lnet/minecraft/server/NBTBase; readValue
	e ()Lnet/minecraft/server/NBTBase; readList
	f ()Lnet/minecraft/server/NBTTagCompound; readStruct
	g ()Lnet/minecraft/server/NBTBase; readListTag
	i ()Z hasElementSeparator
	parse (Ljava/lang/String;)Lnet/minecraft/server/NBTTagCompound; parseTag
	parseArray ()Lnet/minecraft/server/NBTBase; readArrayTag
	parseLiteral (Ljava/lang/String;)Lnet/minecraft/server/NBTBase; type
net/minecraft/server/EntityWither net/minecraft/world/entity/boss/wither/WitherBoss
	b DATA_TARGET_A
	bA DATA_ID_INV
	bB xRotHeads
	bC yRotHeads
	bD xRotOHeads
	bE yRotOHeads
	bF nextHeadUpdate
	bG idleHeadUpdates
	bH destroyBlocksTick
	bJ LIVING_ENTITY_SELECTOR
	bK TARGETING_CONDITIONS
	bossBattle bossEvent
	bz DATA_TARGETS
	c DATA_TARGET_B
	d DATA_TARGET_C
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	J ()V checkDespawn
	L ()V customServerAiStep
	a (FFF)F rotlerp
	a (I)F getHeadYRot
	a (IDDDZ)V performRangedAttack
	a (ILnet/minecraft/server/EntityLiving;)V performRangedAttack
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Vec3D;)V makeStuckInBlock
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aE ()I getLightColor
	b (FF)V causeFallDamage
	b (I)F getHeadXRot
	b (Lnet/minecraft/server/EntityPlayer;)V startSeenByPlayer
	b (Lnet/minecraft/server/IBlockData;)Z canDestroy
	b (Lnet/minecraft/server/IChatBaseComponent;)V setCustomName
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bu ()Z canChangeDimensions
	c (Lnet/minecraft/server/EntityPlayer;)V stopSeenByPlayer
	c (Lnet/minecraft/server/MobEffect;)Z addEffect
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cQ ()Lnet/minecraft/server/EnumMonsterType; getMobType
	cl ()V registerAttributes
	d (Lnet/minecraft/server/MobEffect;)Z canBeAffected
	dV ()I getInvulnerableTicks
	dW ()Z isPowered
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	getHeadTarget (I)I getAlternativeTarget
	h (Lnet/minecraft/server/EntityLiving;)Z lambda$static$0
	k ()V aiStep
	l ()V makeInvulnerable
	n ()V registerGoals
	n (Lnet/minecraft/server/Entity;)Z canRide
	r (I)V setInvulnerableTicks
	setHeadTarget (II)V setAlternativeTarget
	t (I)D getHeadX
	u (I)D getHeadY
	u_ ()V defineSynchedData
	v (I)D getHeadZ
crr$1 net/minecraft/world/level/storage/loot/predicates/WeatherCheck$1
uq$2 net/minecraft/server/gui/MinecraftServerGui$2
	a this$0
dju$b net/minecraft/client/model/geom/ImageGenerator$UnfoldedCube
	a x
	b y
	c cubeRegions
	d id
	e width
	f height
	g cube
	h this$0
	a (II)Z fits
	a (Ljava/awt/Graphics;)V render
	b (II)V place
uq$1 net/minecraft/server/gui/MinecraftServerGui$1
	a val$gui
	b val$frame
	c val$server
net/minecraft/server/EnumItemSlot net/minecraft/world/entity/EquipmentSlot
	g type
	h index
	i filterFlag
	j name
	k $VALUES
	a ()Lnet/minecraft/server/EnumItemSlot$Function; getType
	a (Lnet/minecraft/server/EnumItemSlot$Function;I)Lnet/minecraft/server/EnumItemSlot; byTypeAndIndex
	b ()I getIndex
	c ()I getFilterFlag
	fromName (Ljava/lang/String;)Lnet/minecraft/server/EnumItemSlot; byName
	getSlotName ()Ljava/lang/String; getName
dju$a net/minecraft/client/model/geom/ImageGenerator$Region
	a x1
	b y1
	c x2
	d y2
	e this$0
	a (II)V move
	a (Ldju$a;II)Z overlaps
	a (Ljava/awt/Graphics;)V render
net/minecraft/server/BossBattleCustomData net/minecraft/server/bossevents/CustomBossEvents
	a server
	b events
	a ()Ljava/util/Collection; getIds
	a (Lnet/minecraft/server/EntityPlayer;)V onPlayerConnect
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/BossBattleCustom; get
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/EntityPlayer;)V onPlayerDisconnect
	c ()Lnet/minecraft/server/NBTTagCompound; save
	getBattles ()Ljava/util/Collection; getEvents
	register (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/BossBattleCustom; create
net/minecraft/server/EntityHorseSkeleton net/minecraft/world/entity/animal/horse/SkeletonHorse
	bI skeletonTrapGoal
	bJ isTrap
	bK trapTime
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aP ()D getRideHeight
	ai ()Lnet/minecraft/server/SoundEffect; getSwimSound
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bf ()Z rideableUnderWater
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cQ ()Lnet/minecraft/server/EnumMonsterType; getMobType
	cl ()V registerAttributes
	d (F)V playSwimSound
	dV ()Z isTrap
	da ()F getWaterSlowDown
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	ee ()V addBehaviourGoals
	ev ()V playJumpSound
	k ()V aiStep
	r (Z)V setTrap
net/minecraft/server/LightEngineLayer net/minecraft/world/level/lighting/LayerLightEngine
	a chunkSource
	b layer
	c storage
	d pos
	e DIRECTIONS
	f runningLightUpdates
	g lastChunkPos
	h lastChunk
	a ()Z hasLightWork
	a (II)Lnet/minecraft/server/IBlockAccess; getChunk
	a (IZZ)I runUpdates
	a (J)Z isSource
	a (JI)V setLevel
	a (JJI)I getComputedLevel
	a (JLjava/util/concurrent/atomic/AtomicInteger;)Lnet/minecraft/server/IBlockData; getStateAndOpacity
	a (JLnet/minecraft/server/NibbleArray;)V queueSectionData
	a (Lnet/minecraft/server/BlockPosition;)V checkBlock
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;I)I getLightBlockInto
	a (Lnet/minecraft/server/IBlockData;JLnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/NibbleArray;J)I getLevel
	a (Lnet/minecraft/server/SectionPosition;)Lnet/minecraft/server/NibbleArray; getDataLayerData
	a (Lnet/minecraft/server/SectionPosition;Z)V updateSectionStatus
	b (J)Ljava/lang/String; getDebugData
	b (JJI)I computeLevelFromNeighbor
	b (Lnet/minecraft/server/BlockPosition;)I getLightValue
	b (Lnet/minecraft/server/ChunkCoordIntPair;Z)V retainData
	c ()V clearCache
	c (J)I getLevel
	f (J)V checkNode
net/minecraft/server/RemoteStatusListener$RemoteStatusChallenge net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge
	a this$0
	e challengeBytes
	f ident
	identity identBytes
	token challenge
	a ()I getChallenge
	a (J)Ljava/lang/Boolean; before
	b ()[B getChallengeBytes
	c ()[B getIdentBytes
	d ()Ljava/lang/String; getIdent
net/minecraft/server/DataConverterZombieVillagerLevelXp net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fix$0
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
csu$a net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer
net/minecraft/server/BlockBrewingStand net/minecraft/world/level/block/BrewingStandBlock
	b SHAPE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/InventoryLargeChest net/minecraft/world/CompoundContainer
	left container1
	right container2
	J_ ()I getMaxStackSize
	L_ ()V clearContent
	M_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IInventory;)Z contains
	a_ (Lnet/minecraft/server/EntityHuman;)V startOpen
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/server/ItemStack;)Z canPlaceItem
	b_ (Lnet/minecraft/server/EntityHuman;)V stopOpen
	c ()Z isEmpty
	e ()V setChanged
net/minecraft/server/DataConverterSchemaV1451_2 net/minecraft/util/datafix/schemas/V1451_2
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$0
net/minecraft/server/RegionLimitedWorldAccess net/minecraft/server/level/WorldGenRegion
	a LOGGER
	b cache
	c x
	d z
	e size
	f level
	g seed
	h seaLevel
	i levelData
	j random
	k dimension
	l settings
	m blockTicks
	n liquidTicks
	A ()Ljava/util/List; players
	E ()Lnet/minecraft/server/IChunkProvider; getChunkSource
	F ()Lnet/minecraft/server/TickList; getLiquidTicks
	G ()Lnet/minecraft/server/TickList; getBlockTicks
	a ()I getCenterX
	a (DDDDLjava/util/function/Predicate;)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (II)Lnet/minecraft/server/IChunkAccess; getChunk
	a (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntitiesOfClass
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V blockUpdated
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)Z setBlock
	a (Lnet/minecraft/server/BlockPosition;Z)Z removeBlock
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/VoxelShape;)Z isUnobstructed
	a (Lnet/minecraft/server/EntityHuman;ILnet/minecraft/server/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/BlockPosition;)I getBrightness
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/HeightMap$Type;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; getHeightmapPos
	a (Lnet/minecraft/server/ParticleParam;DDDDDD)V addParticle
	a_ (Lnet/minecraft/server/BlockPosition;I)I getRawBrightness
	b ()I getCenterZ
	b (II)Z hasChunk
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
	b (Lnet/minecraft/server/BlockPosition;Z)Z destroyBlock
	c ()I getSkyDarken
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BiomeBase; getBiome
	c (Lnet/minecraft/server/Entity;)Z addFreshEntity
	d (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	e ()Z isClientSide
	e (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/DifficultyDamageScaler; getCurrentDifficultyAt
	e_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	f ()Lnet/minecraft/server/WorldServer; getLevel
	i ()I getSeaLevel
	i (Lnet/minecraft/server/BlockPosition;)V markPosForPostprocessing
	j ()Lnet/minecraft/server/GeneratorSettingsDefault; getSettings
	j (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TickList; lambda$new$1
	k ()Ljava/util/Random; getRandom
	k (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TickList; lambda$new$0
	m_ ()Lnet/minecraft/server/World; getLevel
	n_ ()J getSeed
	o_ ()Lnet/minecraft/server/BlockPosition; getSharedSpawnPos
	p ()Lnet/minecraft/server/MinecraftServer; getServer
	p_ ()Lnet/minecraft/server/WorldData; getLevelData
	q_ ()Lnet/minecraft/server/WorldBorder; getWorldBorder
	r_ ()Lnet/minecraft/server/WorldProvider; getDimension
net/minecraft/server/DataConverterSchemaV1451_1 net/minecraft/util/datafix/schemas/V1451_1
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
net/minecraft/server/DataConverterSchemaV1451_4 net/minecraft/util/datafix/schemas/V1451_4
	a ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
net/minecraft/server/WorldGenDeadBush net/minecraft/world/level/levelgen/feature/DeadBushFeature
	a DEAD_BUSH
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/DataConverterSchemaV1451_3 net/minecraft/util/datafix/schemas/V1451_3
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
	f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
	g (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
	h (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	i (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	j (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
	k (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
net/minecraft/server/DataConverterSchemaV1451_6 net/minecraft/util/datafix/schemas/V1451_6
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
net/minecraft/server/DataConverterSchemaV1451_5 net/minecraft/util/datafix/schemas/V1451_5
arv$1 net/minecraft/world/entity/animal/Squid$1
net/minecraft/server/RegionFileSection net/minecraft/world/level/chunk/storage/SectionStorage
	a LOGGER
	b storage
	d dirty
	e deserializer
	f factory
	g fixerUpper
	h type
	a (J)V setDirty
	a (JLcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/MinecraftSerializable; lambda$readColumn$2
	a (JZLnet/minecraft/server/MinecraftSerializable;)V lambda$readColumn$3
	a (Lcom/mojang/datafixers/Dynamic;)I getVersion
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V flush
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; writeColumn
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lcom/mojang/datafixers/types/DynamicOps;Ljava/lang/Object;)V readColumn
	b (J)V onSectionLoad
	b (Lnet/minecraft/server/ChunkCoordIntPair;)V readColumn
	b (Lnet/minecraft/server/SectionPosition;)Z outsideStoredRange
	c (J)Ljava/util/Optional; get
	c (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/NBTTagCompound; tryRead
	d (J)Ljava/util/Optional; getOrLoad
	d (Lnet/minecraft/server/ChunkCoordIntPair;)V writeColumn
	e (J)Lnet/minecraft/server/MinecraftSerializable; getOrCreate
	f (J)V lambda$null$1
	g (J)V lambda$getOrCreate$0
net/minecraft/server/DataConverterSchemaV1451_7 net/minecraft/util/datafix/schemas/V1451_7
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
net/minecraft/server/EntityRabbit$ControllerMoveRabbit net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl
	i rabbit
	j nextJumpSpeed
	a ()V tick
	a (DDDD)V setWantedPosition
net/minecraft/server/PacketPlayOutStopSound net/minecraft/network/protocol/game/ClientboundStopSoundPacket
	a name
	b source
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getName
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/SoundCategory; getSource
in$1 net/minecraft/nbt/NbtAccounter$1
	a (J)V accountBits
dny$1 net/minecraft/client/renderer/block/ModelBlockRenderer$1
	a $SwitchMap$net$minecraft$core$Direction
crr$a net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder
	a isRaining
	b isThundering
	a (Ljava/lang/Boolean;)Lcrr$a; setRaining
	b ()Lnet/minecraft/server/LootItemConditionWeatherCheck; build
	b (Ljava/lang/Boolean;)Lcrr$a; setThundering
agv$c net/minecraft/util/thread/StrictQueue$QueueStrictQueue
	a queue
	a ()Ljava/lang/Object; pop
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
crr$b net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionWeatherCheck; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionWeatherCheck;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
agv$b net/minecraft/util/thread/StrictQueue$IntRunnable
	a priority
	b task
	a ()I getPriority
net/minecraft/server/PacketPlayInBlockPlace net/minecraft/network/protocol/game/ServerboundUseItemPacket
	a hand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/EnumHand; getHand
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
agv$a net/minecraft/util/thread/StrictQueue$FixedPriorityQueue
	a queueList
	a ()Ljava/lang/Object; pop
	a (I)Ljava/util/concurrent/ConcurrentLinkedQueue; lambda$new$0
	a (Lagv$b;)Z push
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
	c ()Ljava/lang/Runnable; pop
boo$1 net/minecraft/world/level/block/EndRodBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
ddk$a net/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i
	a this$0
	b x
	c y
	a (Lddk$a;)I access$000
	a (Lddk$a;I)I access$102
	b (Lddk$a;)I access$100
	b (Lddk$a;I)I access$002
cfo$1 net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$1
net/minecraft/server/BlockPistonMoving net/minecraft/world/level/block/piston/MovingPistonBlock
	a FACING
	b TYPE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V destroy
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntityPiston; getBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;ZZ)Lnet/minecraft/server/TileEntity; newMovingBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isViewBlocking
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
	f (Lnet/minecraft/server/IBlockData;)Z canOcclude
net/minecraft/server/ItemEnchantedBook net/minecraft/world/item/EnchantedBookItem
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/WeightedRandomEnchant;)V addEnchantment
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbdr;)V appendHoverText
	a (Lnet/minecraft/server/WeightedRandomEnchant;)Lnet/minecraft/server/ItemStack; createForEnchantment
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
	e (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/NBTTagList; getEnchantments
	g_ (Lnet/minecraft/server/ItemStack;)Z isEnchantable
arv$a net/minecraft/world/entity/animal/Squid$SquidFleeGoal
	a this$0
	b fleeTicks
	a ()Z canUse
	c ()V start
	e ()V tick
net/minecraft/server/EntityPhantom net/minecraft/world/entity/monster/Phantom
	b ID_SIZE
	bz attackPhase
	c moveTargetPoint
	d anchorPoint
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L ()V customServerAiStep
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityPhantom;)Lnet/minecraft/server/Vec3D; access$400
	a (Lnet/minecraft/server/EntityPhantom;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; access$1402
	a (Lnet/minecraft/server/EntityPhantom;Lnet/minecraft/server/EntityPhantom$AttackPhase;)Lnet/minecraft/server/EntityPhantom$AttackPhase; access$502
	a (Lnet/minecraft/server/EntityPhantom;Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; access$402
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityPhantom;)Lnet/minecraft/server/EntityPhantom$AttackPhase; access$500
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$600
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cQ ()Lnet/minecraft/server/EnumMonsterType; getMobType
	cU ()F getSoundVolume
	cc ()Lnet/minecraft/server/SoundCategory; getSoundSource
	cl ()V registerAttributes
	d (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$700
	dT ()Lnet/minecraft/server/Vec3D; getMovementTarget
	dU ()V updatePhantomSizeInfo
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$800
	f (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$900
	g (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$1000
	getSize ()I getPhantomSize
	h ()V tick
	h (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$1100
	i (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$1200
	j (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$1300
	k ()V aiStep
	k (Lnet/minecraft/server/EntityPhantom;)Lnet/minecraft/server/BlockPosition; access$1400
	l (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$1500
	m (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$1600
	n ()V registerGoals
	n (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$1700
	o ()Lnet/minecraft/server/EntityAIBodyControl; createBodyControl
	o (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$1800
	setSize (I)V setPhantomSize
	u_ ()V defineSynchedData
bdr net/minecraft/world/item/TooltipFlag
	a ()Z isAdvanced
zx$1 net/minecraft/util/LowerCaseEnumTypeAdapterFactory$1
	a val$lowercaseToConstant
	b this$0
net/minecraft/server/DataWatcherObject net/minecraft/network/syncher/EntityDataAccessor
	a id
	b serializer
	a ()I getId
	b ()Lnet/minecraft/server/DataWatcherSerializer; getSerializer
net/minecraft/server/WorldGenFeatureSeaPickel net/minecraft/world/level/levelgen/feature/SeaPickleFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureKelpConfiguration;)Z place
net/minecraft/server/WorldGenDecoratorNetherGlowstone net/minecraft/world/level/levelgen/placement/nether/LightGemChanceDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$place$0
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
cwy$1 com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$1
	a this$0
cwy$2 com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$2
	a this$0
net/minecraft/server/ItemKnowledgeBook net/minecraft/world/item/KnowledgeBookItem
	a LOGGER
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
cwy$5 com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$5
	a $assertionsDisabled
	b val$startPage
	c this$0
	a (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; lambda$run$0
net/minecraft/server/EntitySkeletonWither net/minecraft/world/entity/monster/WitherSkeleton
	C (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentEnchantments
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityArrow; getArrow
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	d (Lnet/minecraft/server/MobEffect;)Z canBeAffected
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	l ()Lnet/minecraft/server/SoundEffect; getStepSound
cwy$3 com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$3
	a this$0
net/minecraft/server/EntityFox$Type net/minecraft/world/entity/animal/Fox$Type
	c BY_ID
	d BY_NAME
	e id
	f name
	g biomes
	h $VALUES
	a ()Ljava/lang/String; getName
	a (I)Lnet/minecraft/server/EntityFox$Type; byId
	a (Ljava/lang/String;)Lnet/minecraft/server/EntityFox$Type; byName
	a (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/EntityFox$Type; byBiome
	a (Lnet/minecraft/server/EntityFox$Type;)Lnet/minecraft/server/EntityFox$Type; lambda$static$1
	b ()Ljava/util/List; getBiomes
	b (I)[Lnet/minecraft/server/EntityFox$Type; lambda$static$0
	c ()I getId
cwy$4 com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$4
	a this$0
net/minecraft/server/IResourcePackListener net/minecraft/server/packs/resources/ResourceManagerReloadListener
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	a (Lxd$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	b (Lnet/minecraft/server/IResourceManager;)V lambda$reload$0
net/minecraft/server/Reloadable net/minecraft/server/packs/resources/SimpleReloadInstance
	a resourceManager
	b allPreparations
	c allDone
	d preparingListeners
	e listenerCount
	f startedReloads
	g finishedReloads
	h startedTaskCounter
	i doneTaskCounter
	a ()Ljava/util/concurrent/CompletableFuture; done
	a (Ljava/lang/Runnable;)V lambda$null$3
	a (Ljava/util/List;)Lnet/minecraft/server/Unit; lambda$done$5
	a (Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V lambda$new$4
	a (Ljava/util/concurrent/Executor;Lxd$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/IReloadListener;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; lambda$of$0
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/Reloadable; of
	a (Lnet/minecraft/server/Reloadable;)Ljava/util/Set; access$000
	b ()F getActualProgress
	b (Ljava/lang/Runnable;)V lambda$null$1
	b (Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V lambda$new$2
	c ()Z isApplying
	d ()Z isDone
	e ()V checkExceptions
net/minecraft/server/PathType net/minecraft/world/level/pathfinder/BlockPathTypes
	u malus
	v $VALUES
	a ()F getMalus
bec net/minecraft/world/item/alchemy/package-info
net/minecraft/server/WorldGenFeatureRandomChoiceConfiguration net/minecraft/world/level/levelgen/feature/RandomFeatureConfig
	a features
	b defaultFeature
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureRandomChoiceConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/WorldGenFeatureRandomChoiceConfigurationWeight;)Ljava/lang/Object; lambda$serialize$1
	a (Lnet/minecraft/server/WorldGenerator;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/WorldGenFeatureConfigured; getDefaultFeature
	a (Lnet/minecraft/server/WorldGenerator;Lnet/minecraft/server/WorldGenFeatureConfiguration;F)Lnet/minecraft/server/WorldGenFeatureRandomChoiceConfigurationWeight; getWeightedConfiguredFeature
	a ([Lnet/minecraft/server/WorldGenerator;[Lnet/minecraft/server/WorldGenFeatureConfiguration;[FI)Lnet/minecraft/server/WorldGenFeatureRandomChoiceConfigurationWeight; lambda$new$0
bqu$1 net/minecraft/world/level/block/PressurePlateBlock$1
	a $SwitchMap$net$minecraft$world$level$block$PressurePlateBlock$Sensitivity
net/minecraft/server/DispenseBehaviorItem net/minecraft/core/dispenser/DefaultDispenseItemBehavior
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/EnumDirection;)V playAnimation
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;ILnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IPosition;)V spawnItem
net/minecraft/server/BlockDoor net/minecraft/world/level/block/DoorBlock
	f SOUTH_AABB
	g NORTH_AABB
	h WEST_AABB
	i EAST_AABB
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)J getSeed
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
	b (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/BlockPropertyDoorHinge; getHinge
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)V playSound
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	d ()I getCloseSound
	e ()I getOpenSound
	i (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	setDoor (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)V setOpen
net/minecraft/server/CommandDeop net/minecraft/server/commands/DeOpCommands
	a ERROR_NOT_OP
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I deopPlayers
net/minecraft/server/BiomeTaigaHills net/minecraft/world/level/biome/TaigaHillsBiome
zg$a net/minecraft/tags/Tag$Builder
	a values
	b ordered
	a ()Lzg$a; tag
	a (Ljava/lang/Object;)Lzg$a; add
	a (Ljava/util/Collection;)Lzg$a; add
	a (Ljava/util/function/Function;)Z canBuild
	a (Ljava/util/function/Function;Lcom/google/gson/JsonObject;)Lzg$a; addFromJson
	a (Lnet/minecraft/server/MinecraftKey;)Lzg$a; addTag
	a (Lnet/minecraft/server/Tag;)Lzg$a; addTag
	a (Lzg$b;)Lzg$a; add
	a (Z)Lzg$a; keepOrder
	a ([Ljava/lang/Object;)Lzg$a; add
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; build
	c (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonParseException; lambda$addFromJson$0
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdCrossing net/minecraft/world/level/levelgen/structure/StrongholdPieces$FiveCrossing
	a leftLow
	b leftHigh
	c rightLow
	e rightHigh
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdCrossing; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
zg$b net/minecraft/tags/Tag$Entry
	a (Lcom/google/gson/JsonArray;Ljava/util/function/Function;)V serializeTo
	a (Ljava/util/Collection;)V build
	a (Ljava/util/function/Function;)Z canBuild
zg$c net/minecraft/tags/Tag$TagEntry
	a id
	b tag
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonArray;Ljava/util/function/Function;)V serializeTo
	a (Ljava/util/Collection;)V build
	a (Ljava/util/function/Function;)Z canBuild
zg$d net/minecraft/tags/Tag$ValuesEntry
	a values
	a ()Ljava/util/Collection; getValues
	a (Lcom/google/gson/JsonArray;Ljava/util/function/Function;)V serializeTo
	a (Ljava/util/Collection;)V build
net/minecraft/server/EntityArrow net/minecraft/world/entity/projectile/AbstractArrow
	aA piercedAndKilledEntities
	ar ID_FLAGS
	as PIERCE_LEVEL
	at lastState
	av flightTime
	ay soundEvent
	az piercingIgnoreEntityIds
	b DATA_OWNERUUID_ID
	d inGroundTime
	damage baseDamage
	despawnCounter life
	fromPlayer pickup
	knockbackStrength knockback
	shake shakeTime
	shooter ownerUUID
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (DDDFFIZ)V lerpTo
	a (IZ)V setFlag
	a (Lnet/minecraft/server/Entity;FFFFF)V shootFromRotation
	a (Lnet/minecraft/server/EntityLiving;)V doPostHurtEffects
	a (Lnet/minecraft/server/EntityLiving;F)V setEnchantmentEffectsFromEntity
	a (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/MovingObjectPositionEntity;)V onHitEntity
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/SoundEffect;)V setSoundEvent
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/MovingObjectPositionEntity; findHitEntity
	ap ()Z makeStepSound
	b (Lnet/minecraft/server/Entity;)Z lambda$findHitEntity$0
	b (Lnet/minecraft/server/EntityHuman;)V playerTouch
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bs ()Z isAttackable
	c (DDDFF)V shoot
	f ()Z isInGround
	getDamage ()D getBaseDamage
	getItemStack ()Lnet/minecraft/server/ItemStack; getPickupItem
	getShooter ()Lnet/minecraft/server/Entity; getOwner
	getSoundHit ()Lnet/minecraft/server/SoundEffect; getHitGroundSoundEvent
	h ()V tick
	h (DDD)V lerpMotion
	i ()V checkDespawn
	isCritical ()Z isCritArrow
	k ()Lnet/minecraft/server/SoundEffect; getDefaultHitGroundSoundEvent
	n (Z)V setNoPhysics
	o (Z)V setShotFromCrossbow
	p ()I getKnockback
	r ()Z shotFromCrossbow
	setCritical (Z)V setCritArrow
	setDamage (D)V setBaseDamage
	setKnockbackStrength (I)V setKnockback
	setShooter (Lnet/minecraft/server/Entity;)V setOwner
	u ()F getWaterInertia
	u_ ()V defineSynchedData
	v ()Z isNoPhysics
	w ()V resetPiercedEntities
aik$1 net/minecraft/world/effect/MobEffects$1
	a (II)Z isDurationEffectTick
	a (Lnet/minecraft/server/EntityLiving;I)V applyEffectTick
cig$a net/minecraft/world/level/levelgen/structure/IglooPieces$IglooPiece
	d templateLocation
	e rotation
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/DefinedStructureManager;)V loadTemplate
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/WorldGenTrees net/minecraft/world/level/levelgen/feature/TreeFeature
	a baseHeight
	aS DEFAULT_TRUNK
	aT DEFAULT_LEAF
	aU addJungleFeatures
	aV trunk
	aW leaf
	a (Ljava/util/Random;)I getTreeHeight
	a (Ljava/util/Set;Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;)Z doPlace
	a (Lnet/minecraft/server/IWorldWriter;ILnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V placeCocoa
	a (Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockStateBoolean;)V addVine
	a (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockStateBoolean;)V addHangingVine
net/minecraft/server/TileEntityFurnace net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity
	b dataAccess
	burnTime litTime
	c recipeType
	cookTime cookingProgress
	cookTimeTotal cookingTotalTime
	g SLOTS_FOR_UP
	h SLOTS_FOR_DOWN
	i SLOTS_FOR_SIDES
	n recipesUsed
	ticksForCurrentFuel litDuration
	L_ ()V clearContent
	M_ ()I getContainerSize
	T_ ()V tick
	U_ ()Lnet/minecraft/server/IRecipe; getRecipeUsed
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (Ljava/util/List;Lnet/minecraft/server/EntityHuman;Ljava/util/Map$Entry;Lnet/minecraft/server/IRecipe;)V lambda$awardResetAndExperience$1
	a (Ljava/util/Map;Lnet/minecraft/server/IMaterial;I)V add
	a (Ljava/util/Map;Lnet/minecraft/server/Tag;I)V add
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;IF)V createExperience
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	a (Lnet/minecraft/server/IRecipe;)V setRecipeUsed
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/Integer;)Ljava/lang/Integer; lambda$setRecipeUsed$0
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/TileEntityFurnace;)I access$000
	a (Lnet/minecraft/server/TileEntityFurnace;I)I access$002
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/server/ItemStack;)Z canPlaceItem
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
	b (Lnet/minecraft/server/EntityHuman;)V awardAndReset
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b (Lnet/minecraft/server/TileEntityFurnace;)I access$100
	b (Lnet/minecraft/server/TileEntityFurnace;I)I access$102
	c ()Z isEmpty
	c (Lnet/minecraft/server/TileEntityFurnace;)I access$200
	c (Lnet/minecraft/server/TileEntityFurnace;I)I access$202
	d (Lnet/minecraft/server/EntityHuman;)V awardResetAndExperience
	d (Lnet/minecraft/server/TileEntityFurnace;)I access$300
	d (Lnet/minecraft/server/TileEntityFurnace;I)I access$302
	f ()Ljava/util/Map; getFuel
	fuelTime (Lnet/minecraft/server/ItemStack;)I getBurnDuration
	getRecipeCookingTime ()I getTotalCookTime
	isBurning ()Z isLit
net/minecraft/server/BlockCarpet net/minecraft/world/level/block/WoolCarpetBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	d ()Lnet/minecraft/server/EnumColor; getColor
bfi net/minecraft/world/item/crafting/package-info
net/minecraft/server/PacketPlayInCloseWindow net/minecraft/network/protocol/game/ServerboundContainerClosePacket
	id containerId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/BiomeLayoutFixedConfiguration net/minecraft/world/level/biome/FixedBiomeSourceSettings
	a biome
	a ()Lnet/minecraft/server/BiomeBase; getBiome
	a (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeLayoutFixedConfiguration; setBiome
net/minecraft/server/PathfinderGoalFloat net/minecraft/world/entity/ai/goal/FloatGoal
	a mob
	a ()Z canUse
	e ()V tick
dlj$a net/minecraft/client/particle/LavaParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dkx$1 net/minecraft/client/particle/DustParticle$1
net/minecraft/server/ContainerBrewingStand net/minecraft/world/inventory/BrewingStandMenu
	d brewingStandData
	e ingredientSlot
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()I getFuel
	f ()I getBrewingTicks
net/minecraft/server/WorldGenDecoratorIceburg net/minecraft/world/level/levelgen/placement/IcebergPlacementDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorChanceConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/PathfinderGoalHurtByTarget net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal
	a HURT_BY_TARGETING
	b alertSameType
	c timestamp
	d toIgnoreDamage
	i toIgnoreAlert
	a ()Z canUse
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V alertOther
	a ([Ljava/lang/Class;)Lnet/minecraft/server/PathfinderGoalHurtByTarget; setAlertOthers
	c ()V start
	g ()V alertOthers
net/minecraft/server/PathfinderGoalFollowOwner net/minecraft/world/entity/ai/goal/FollowOwnerGoal
	a tamable
	b level
	c owner
	d speedModifier
	e navigation
	f timeToRecalcPath
	g stopDistance
	h startDistance
	i oldWaterCost
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;)Z isTeleportFriendlyBlock
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bfu$a net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceEntry net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentEntryRoom
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/BehaviorWake net/minecraft/world/entity/ai/behavior/WakeUp
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/SensorDummy net/minecraft/world/entity/ai/sensing/DummySensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
bgr net/minecraft/world/item/enchantment/package-info
net/minecraft/server/CommandBlockListenerAbstract net/minecraft/world/level/BaseCommandBlock
	b TIME_FORMAT
	customName name
	H_ ()Z shouldInformAdmins
	a ()Z acceptsSuccess
	a (I)V setSuccessCount
	a (Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$performCommand$0
	a (Lio/netty/buffer/ByteBuf;)V writeCoordinates
	a (Lnet/minecraft/server/EntityHuman;)Z usedBy
	a (Lnet/minecraft/server/IChatBaseComponent;)V sendMessage
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/World;)Z performCommand
	a (Z)V setTrackOutput
	b ()Z acceptsFailure
	b (Lnet/minecraft/server/NBTTagCompound;)V load
	c (Lnet/minecraft/server/IChatBaseComponent;)V setLastOutput
	d ()Lnet/minecraft/server/WorldServer; getLevel
	e ()V onUpdated
	f ()Lnet/minecraft/server/Vec3D; getPosition
	g ()Ljava/lang/String; lambda$performCommand$1
	getWrapper ()Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
	i ()I getSuccessCount
	j ()Lnet/minecraft/server/IChatBaseComponent; getLastOutput
	m ()Z isTrackOutput
net/minecraft/server/VillagePlace$Occupancy net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy
	d test
	e $VALUES
	a ()Ljava/util/function/Predicate; getTest
	a (Lnet/minecraft/server/VillagePlaceRecord;)Z lambda$static$0
bgs net/minecraft/world/item/package-info
sk$1 net/minecraft/server/commands/GameRuleCommand$1
	a val$base
	a (Lnet/minecraft/server/GameRules$GameRuleKey;Lcom/mojang/brigadier/context/CommandContext;)I lambda$visit$1
	a (Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleDefinition;)V visit
	b (Lnet/minecraft/server/GameRules$GameRuleKey;Lcom/mojang/brigadier/context/CommandContext;)I lambda$visit$0
net/minecraft/server/WorldGenFlowerValley net/minecraft/world/level/levelgen/feature/GeneralForestFlowerFeature
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getRandomFlower
net/minecraft/server/DefinedStructureRuleTest net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
	b (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/BlockStateBoolean net/minecraft/world/level/block/state/properties/BooleanProperty
	a values
	a (Ljava/lang/Boolean;)Ljava/lang/String; getName
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	c ()I generateHashCode
	d ()Ljava/util/Collection; getPossibleValues
	of (Ljava/lang/String;)Lnet/minecraft/server/BlockStateBoolean; create
net/minecraft/server/ShapelessRecipes net/minecraft/world/item/crafting/ShapelessRecipe
	key id
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a ()Lnet/minecraft/server/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/ShapelessRecipes;)Ljava/lang/String; access$000
	b (Lnet/minecraft/server/ShapelessRecipes;)Lnet/minecraft/server/NonNullList; access$100
	c ()Lnet/minecraft/server/ItemStack; getResultItem
	c (Lnet/minecraft/server/ShapelessRecipes;)Lnet/minecraft/server/ItemStack; access$200
	d ()Ljava/lang/String; getGroup
	f ()Lnet/minecraft/server/MinecraftKey; getId
bgw net/minecraft/world/item/trading/package-info
net/minecraft/server/PortalTravelAgent net/minecraft/world/level/PortalForcer
	a LOGGER
	b PORTAL_BLOCK
	d random
	e cachedPortals
	f negativeChecks
	world level
	a (J)V tick
	a (Lnet/minecraft/server/BlockPosition2D;)Ljava/lang/Object; lambda$clearStaleCacheEntries$1
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumDirection;DDZ)Lnet/minecraft/server/ShapeDetector$Shape; findPortal
	a (Lnet/minecraft/server/Entity;)Z createPortal
	a (Lnet/minecraft/server/Entity;F)Z findAndMoveToPortal
	b (J)V purgeNegativeChecks
	b (Lnet/minecraft/server/BlockPosition2D;)Ljava/lang/Object; lambda$findPortal$0
	c (J)V clearStaleCacheEntries
dpn$1 net/minecraft/client/renderer/blockentity/SkullBlockRenderer$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/BiomeExtremeHillsEdge net/minecraft/world/level/biome/MountainEdgeBiome
cyn$a net/minecraft/client/User$Type
	a LEGACY
	b MOJANG
	c BY_NAME
	d name
	e $VALUES
	a (Lcyn$a;)Ljava/lang/String; lambda$static$0
	a (Ljava/lang/String;)Lcyn$a; byName
net/minecraft/server/DataConverterFlattenSpawnEgg net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix
	a MAP
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Ljava/util/HashMap;)V lambda$static$0
bhg net/minecraft/world/level/CustomSpawner
	a (Lnet/minecraft/server/WorldServer;ZZ)I tick
net/minecraft/server/AreaTransformerOffset1 net/minecraft/world/level/newbiome/layer/traits/DimensionOffset1Transformer
	a (I)I getParentX
	b (I)I getParentY
bhl net/minecraft/world/level/FoliageColor
	a pixels
	a ()I getEvergreenColor
	a (DD)I get
	a ([I)V init
	b ()I getBirchColor
	c ()I getDefaultColor
net/minecraft/server/Material net/minecraft/world/level/material/Material
	BANNER BARRIER
	CLOTH WOOL
	DRAGON_EGG EGG
	EARTH DIRT
	HEAVY HEAVY_METAL
	ORE METAL
	ORIENTABLE DECORATION
	PACKED_ICE TOP_SNOW
	PUMPKIN VEGETABLE
	Q color
	R pushReaction
	S blocksMotion
	SHATTERABLE GLASS
	SNOW_BLOCK SNOW
	SNOW_LAYER ICE_SOLID
	STRUCTURE_VOID STRUCTURAL_AIR
	TNT EXPLOSIVE
	U alwaysDestroyable
	V liquid
	W solidBlocking
	WOOL CLOTH_DECORATION
	X replaceable
	Y solid
	canBurn flammable
	f ()Z isSolidBlocking
	i ()Lnet/minecraft/server/MaterialMapColor; getColor
	isBuildable ()Z isSolid
	isBurnable ()Z isFlammable
	isSolid ()Z blocksMotion
net/minecraft/server/IContainerProperties net/minecraft/world/inventory/ContainerData
	a ()I getCount
	getProperty (I)I get
	setProperty (II)V set
den$1 net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen$1
	a this$0
den$2 net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen$2
	a $SwitchMap$net$minecraft$world$level$block$Mirror
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
bhp net/minecraft/world/level/GrassColor
	a pixels
	a (DD)I get
	a ([I)V init
net/minecraft/server/DataConverterJukeBox net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix
	a ()Ljava/lang/IllegalStateException; lambda$fix$0
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/PacketPlayInBeacon net/minecraft/network/protocol/game/ServerboundSetBeaconPacket
	a primary
	b secondary
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getPrimary
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getSecondary
net/minecraft/server/TileEntityBell net/minecraft/world/level/block/entity/BellBlockEntity
	a ticks
	b shaking
	c clickDirection
	g lastRingTimestamp
	h nearbyEntities
	i resonating
	j resonationTicks
	T_ ()V tick
	a (Lnet/minecraft/server/BlockPosition;ILjava/util/concurrent/atomic/AtomicInteger;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)V lambda$showBellParticles$1
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z lambda$showBellParticles$0
	a (Lnet/minecraft/server/EntityLiving;)Z isRaiderWithinRange
	a (Lnet/minecraft/server/EnumDirection;)V onHit
	a_ (II)Z triggerEvent
	b (Lnet/minecraft/server/EntityLiving;)V glow
	b (Lnet/minecraft/server/World;)V makeRaidersGlow
	c (Lnet/minecraft/server/World;)V showBellParticles
	d ()V playResonateSound
	f ()V updateEntities
	h ()Z areRaidersNearby
net/minecraft/server/CommandSummon net/minecraft/server/commands/SummonCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/NBTTagCompound;Z)I spawnEntity
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Entity; lambda$spawnEntity$4
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
dkx$a net/minecraft/client/particle/DustParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleParamRedstone;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/LootItemFunctionLimitCount net/minecraft/world/level/storage/loot/functions/LimitCount
	a limiter
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootIntegerLimit;)Lcqg$a; limitCount
	a (Lnet/minecraft/server/LootIntegerLimit;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$limitCount$0
	a (Lnet/minecraft/server/LootItemFunctionLimitCount;)Lnet/minecraft/server/LootIntegerLimit; access$000
dkg$1 net/minecraft/client/multiplayer/PlayerInfo$1
	a $SwitchMap$com$mojang$authlib$minecraft$MinecraftProfileTexture$Type
net/minecraft/server/PacketPlayOutSpawnPosition net/minecraft/network/protocol/game/ClientboundSetSpawnPositionPacket
	position pos
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/ContainerBeacon net/minecraft/world/inventory/BeaconMenu
	containerAccess access
	containerProperties beaconData
	d paymentSlot
	a (II)V setData
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	c (II)V updateEffects
	e ()I getLevels
	f ()Lnet/minecraft/server/MobEffectList; getPrimaryEffect
	g ()Lnet/minecraft/server/MobEffectList; getSecondaryEffect
	h ()Z hasPayment
cpt$a net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder
	a entries
	a ()Lcpt$a; getThis
	b ()Lnet/minecraft/server/LootEntryAbstract; build
	c (Lcpq$a;)Lcpt$a; then
	d ()Lcpq$a; getThis
net/minecraft/server/CriterionTriggerFilledBucket net/minecraft/advancements/critereon/FilledBucketTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lax$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/PathfinderGoalRandomStrollLand net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal
	h probability
	g ()Lnet/minecraft/server/Vec3D; getPosition
net/minecraft/server/ChunkRegionLoader net/minecraft/world/level/chunk/storage/ChunkSerializer
	a LOGGER
	a (ILnet/minecraft/server/ChunkSection;)Z lambda$write$3
	a (Lnet/minecraft/server/Block;)Z lambda$read$0
	a (Lnet/minecraft/server/Chunk;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Entity; lambda$postLoadChunk$4
	a (Lnet/minecraft/server/ChunkCoordIntPair;Ljava/util/Map;Ljava/util/Map;)Lnet/minecraft/server/NBTTagCompound; packStructureData
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/WorldChunkManager;Lnet/minecraft/server/NBTTagCompound;)Ljava/util/Map; unpackStructureStart
	a (Lnet/minecraft/server/FluidType;)Z lambda$read$1
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/ChunkStatus$Type; getChunkTypeFromTag
	a ([Lit/unimi/dsi/fastutil/shorts/ShortList;)Lnet/minecraft/server/NBTTagList; packOffsets
	b (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/Map; unpackStructureReferences
	b (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/Chunk;)V lambda$read$2
	loadChunk (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/VillagePlace;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/ProtoChunk; read
	loadEntities (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/Chunk;)V postLoadChunk
	saveChunk (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/IChunkAccess;)Lnet/minecraft/server/NBTTagCompound; write
bmq$1 net/minecraft/world/level/block/BedBlock$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/EntityShulkerBullet net/minecraft/world/entity/projectile/ShulkerBullet
	ar targetDeltaZ
	as ownerId
	at lastKnownOwnerPos
	au targetId
	av lastKnownTargetPos
	dir currentMoveDirection
	e flightSteps
	f targetDeltaX
	g targetDeltaY
	shooter owner
	target finalTarget
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)V selectNextMoveDirection
	a (Lnet/minecraft/server/EnumDirection;)V setMoveDirection
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aE ()I getLightColor
	aF ()F getBrightness
	aH ()Z isPickable
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bc ()Z isOnFire
	cc ()Lnet/minecraft/server/SoundCategory; getSoundSource
	f ()Lnet/minecraft/server/EnumDirection; getMoveDirection
	h ()V tick
	u_ ()V defineSynchedData
ba$b net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance
	a slotsOccupied
	b slotsFull
	c slotsEmpty
	d predicates
	a (Lnet/minecraft/server/PlayerInventory;)Z matches
	a ([Lnet/minecraft/server/CriterionConditionItem;)Lba$b; hasItem
	a ([Lnet/minecraft/server/IMaterial;)Lba$b; hasItem
	b ()Lcom/google/gson/JsonElement; serializeToJson
ba$a net/minecraft/advancements/critereon/InventoryChangeTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/PlayerInventory;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
net/minecraft/server/PathfinderGoalSit net/minecraft/world/entity/ai/goal/SitGoal
	entity mob
	willSit wantToSit
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	setSitting (Z)V wantToSit
net/minecraft/server/CommandDebug net/minecraft/server/commands/DebugCommand
	a LOGGER
	b ERROR_NOT_RUNNING
	c ERROR_ALREADY_RUNNING
	d ZIP_FS_PROVIDER
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Ljava/nio/file/spi/FileSystemProvider;)Z lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)I start
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lnet/minecraft/server/CommandListenerWrapper;)I stop
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lnet/minecraft/server/CommandListenerWrapper;)I report
	d (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$1
net/minecraft/server/BiomeJungleEdge net/minecraft/world/level/biome/JungleEdgeBiome
br$b net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance
	a entity
	a (Lnet/minecraft/server/CriterionConditionEntity;)Lbr$b; tamedAnimal
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityAnimal;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lbr$b; tamedAnimal
net/minecraft/server/LootValueConstant net/minecraft/world/level/storage/loot/ConstantIntValue
	d value
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (I)Lnet/minecraft/server/LootValueConstant; exactly
	a (Ljava/util/Random;)I getInt
	a (Lnet/minecraft/server/LootValueConstant;)I access$000
br$a net/minecraft/advancements/critereon/TameAnimalTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityAnimal;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
net/minecraft/server/PacketDecompressor net/minecraft/network/CompressionDecoder
	a inflater
	b threshold
	a ()I getThreshold
	a (I)V setThreshold
com/mojang/blaze3d/platform/GlStateManager$a com/mojang/blaze3d/platform/GlStateManager$AlphaState
	a mode
	b func
	c reference
cet$a net/minecraft/world/level/levelgen/feature/StrongholdFeature$StrongholdStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
apg$1 net/minecraft/world/entity/ai/gossip/GossipContainer$1
xr$2 net/minecraft/server/players/GameProfileCache$2
hk$a net/minecraft/data/recipes/SimpleCookingRecipeBuilder$Result
	a id
	b group
	c ingredient
	d result
	e experience
	f cookingTime
	g advancement
	h advancementId
	i serializer
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
com/mojang/blaze3d/platform/GlStateManager$f com/mojang/blaze3d/platform/GlStateManager$ColorLogicState
	a enable
	b op
com/mojang/blaze3d/platform/GlStateManager$g com/mojang/blaze3d/platform/GlStateManager$ColorMask
	a red
	b green
	c blue
	d alpha
cvm$b com/mojang/realmsclient/client/RealmsClient$Environment
	a PRODUCTION
	b STAGE
	c LOCAL
	d baseUrl
	e protocol
	f $VALUES
com/mojang/blaze3d/platform/GlStateManager$h com/mojang/blaze3d/platform/GlStateManager$ColorMaterialState
	a enable
	b face
	c mode
net/minecraft/server/CommandClear net/minecraft/server/commands/ClearInventoryCommands
	a ERROR_SINGLE
	b ERROR_MULTIPLE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Ljava/util/function/Predicate;I)I clearInventory
	a (Lnet/minecraft/server/ItemStack;)Z lambda$null$5
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	b (Lnet/minecraft/server/ItemStack;)Z lambda$null$3
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
com/mojang/blaze3d/platform/GlStateManager$i com/mojang/blaze3d/platform/GlStateManager$CullFace
	a FRONT
	b BACK
	c FRONT_AND_BACK
	d value
	e $VALUES
com/mojang/blaze3d/platform/GlStateManager$b com/mojang/blaze3d/platform/GlStateManager$BlendState
	a mode
	b srcRgb
	c dstRgb
	d srcAlpha
	e dstAlpha
com/mojang/blaze3d/platform/GlStateManager$c com/mojang/blaze3d/platform/GlStateManager$BooleanState
	a state
	b enabled
	a ()V disable
	a (Z)V setEnabled
	b ()V enable
com/mojang/blaze3d/platform/GlStateManager$d com/mojang/blaze3d/platform/GlStateManager$ClearState
	a depth
	b color
	c stencil
com/mojang/blaze3d/platform/GlStateManager$e com/mojang/blaze3d/platform/GlStateManager$Color
	a r
	b g
	c b
	d a
net/minecraft/server/OpList net/minecraft/server/players/ServerOpList
	a ()[Ljava/lang/String; getUserList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/JsonListEntry; createEntry
	a (Lcom/mojang/authlib/GameProfile;)I getOpLevel
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; find
	b (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	c (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
com/mojang/blaze3d/platform/GlStateManager$n com/mojang/blaze3d/platform/GlStateManager$LogicOp
	a AND
	b AND_INVERTED
	c AND_REVERSE
	d CLEAR
	e COPY
	f COPY_INVERTED
	g EQUIV
	h INVERT
	i NAND
	j NOOP
	k NOR
	l OR
	m OR_INVERTED
	n OR_REVERSE
	o SET
	p XOR
	q value
	r $VALUES
com/mojang/blaze3d/platform/GlStateManager$o com/mojang/blaze3d/platform/GlStateManager$PolygonOffsetState
	a fill
	b line
	c factor
	d units
com/mojang/blaze3d/platform/GlStateManager$p com/mojang/blaze3d/platform/GlStateManager$Profile
	a DEFAULT
	b PLAYER_SKIN
	c TRANSPARENT_MODEL
	d $VALUES
	a ()V apply
	b ()V clean
com/mojang/blaze3d/platform/GlStateManager$q com/mojang/blaze3d/platform/GlStateManager$StencilFunc
	a func
	b ref
	c mask
com/mojang/blaze3d/platform/GlStateManager$j com/mojang/blaze3d/platform/GlStateManager$CullState
	a enable
	b mode
cvm$a com/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse
	a COMPATIBLE
	b OUTDATED
	c OTHER
	d $VALUES
com/mojang/blaze3d/platform/GlStateManager$k com/mojang/blaze3d/platform/GlStateManager$DepthState
	a mode
	b mask
	c func
com/mojang/blaze3d/platform/GlStateManager$l com/mojang/blaze3d/platform/GlStateManager$FogMode
	a LINEAR
	b EXP
	c EXP2
	d value
	e $VALUES
xr$1 net/minecraft/server/players/GameProfileCache$1
	a val$result
com/mojang/blaze3d/platform/GlStateManager$m com/mojang/blaze3d/platform/GlStateManager$FogState
	a enable
	b mode
	c density
	d start
	e end
com/mojang/blaze3d/platform/GlStateManager$v com/mojang/blaze3d/platform/GlStateManager$TextureState
	a enable
	b binding
net/minecraft/server/EntityAnimal net/minecraft/world/entity/animal/Animal
	breedCause loveCause
	loveTicks inLove
	A ()I getAmbientSoundInterval
	L ()V customServerAiStep
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)V usePlayerItem
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aO ()D getRidingHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkAnimalSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (D)Z removeWhenFarAway
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	ea ()Z canFallInLove
	f (Lnet/minecraft/server/EntityHuman;)V setInLove
	getBreedCause ()Lnet/minecraft/server/EntityPlayer; getLoveCause
	getExpValue (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	k ()V aiStep
	mate (Lnet/minecraft/server/EntityAnimal;)Z canMate
	setLoveTicks (I)V setInLoveTime
com/mojang/blaze3d/platform/GlStateManager$w com/mojang/blaze3d/platform/GlStateManager$Viewport
	a INSTANCE
	b x
	c y
	d width
	e height
	f $VALUES
ao$b net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance
	a effects
	a (Lnet/minecraft/server/CriterionConditionMobEffect;)Lao$b; hasEffects
	a (Lnet/minecraft/server/EntityPlayer;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/server/PacketDecoder net/minecraft/network/PacketDecoder
	a LOGGER
	b MARKER
	c flow
com/mojang/blaze3d/platform/GlStateManager$r com/mojang/blaze3d/platform/GlStateManager$StencilState
	a func
	b mask
	c fail
	d zfail
	e zpass
com/mojang/blaze3d/platform/GlStateManager$s com/mojang/blaze3d/platform/GlStateManager$TexGen
	a S
	b T
	c R
	d Q
	e $VALUES
rh$a net/minecraft/server/ServerFunctionManager$QueuedCommand
	a manager
	b sender
	c entry
	a (Ljava/util/ArrayDeque;I)V execute
com/mojang/blaze3d/platform/GlStateManager$t com/mojang/blaze3d/platform/GlStateManager$TexGenCoord
	a enable
	b coord
	c mode
ao$a net/minecraft/advancements/critereon/EffectsChangedTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/EntityPlayer;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
aeg$a net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection
	e chestIds
	a ()Z skippable
	a (I)Z isTrappedChest
com/mojang/blaze3d/platform/GlStateManager$u com/mojang/blaze3d/platform/GlStateManager$TexGenState
	a s
	b t
	c r
	d q
bba$12 net/minecraft/world/item/CreativeModeTab$9
	f ()Lnet/minecraft/server/ItemStack; makeIcon
net/minecraft/server/WorldGenFire net/minecraft/world/level/levelgen/feature/HellFireFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
czq$1 net/minecraft/client/gui/components/LerpingBossEvent$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundBossEventPacket$Operation
net/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection
	c BY_NAME
	d name
	e processors
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching; byName
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching; lambda$static$0
	b ()Lcom/google/common/collect/ImmutableList; getProcessors
net/minecraft/server/ItemActionContext net/minecraft/world/item/UseOnContext
	b player
	c hand
	d hitResult
	e level
	f itemStack
	f ()Lnet/minecraft/server/EnumDirection; getHorizontalDirection
	getClickPosition ()Lnet/minecraft/server/BlockPosition; getClickedPos
	getEntity ()Lnet/minecraft/server/EntityHuman; getPlayer
	getItemStack ()Lnet/minecraft/server/ItemStack; getItemInHand
	getWorld ()Lnet/minecraft/server/World; getLevel
	h ()F getRotation
	j ()Lnet/minecraft/server/Vec3D; getClickLocation
	k ()Z isInside
	n ()Lnet/minecraft/server/EnumHand; getHand
bba$10 net/minecraft/world/item/CreativeModeTab$7
	f ()Lnet/minecraft/server/ItemStack; makeIcon
bba$11 net/minecraft/world/item/CreativeModeTab$8
	f ()Lnet/minecraft/server/ItemStack; makeIcon
xa$b net/minecraft/server/packs/repository/UnopenedPack$UnopenedPackConstructor
net/minecraft/server/Behaviors net/minecraft/world/entity/ai/behavior/VillagerGoalPackages
	a ()Lcom/mojang/datafixers/util/Pair; getFullLookBehavior
	a (F)Lcom/google/common/collect/ImmutableList; getPlayPackage
	a (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getCorePackage
	b ()Lcom/mojang/datafixers/util/Pair; getMinimalLookBehavior
	b (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getWorkPackage
	c (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getRestPackage
	d (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getMeetPackage
	e (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getIdlePackage
	f (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getPanicPackage
	g (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getPreRaidPackage
	h (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getRaidPackage
	i (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getHidePackage
dlj$1 net/minecraft/client/particle/LavaParticle$1
cuj$a com/mojang/blaze3d/platform/NativeImage$Format
	a RGBA
	b RGB
	c LUMINANCE_ALPHA
	d LUMINANCE
	e components
	f glFormat
	g hasRed
	h hasGreen
	i hasBlue
	j hasLuminance
	k hasAlpha
	l redOffset
	m greenOffset
	n blueOffset
	o luminanceOffset
	p alphaOffset
	q supportedByStb
	r $VALUES
	a ()I components
	a (I)Lcuj$a; access$100
	a (Lcuj$a;)I access$000
	b ()V setPackPixelStoreState
	b (I)Lcuj$a; getStbFormat
	c ()V setUnpackPixelStoreState
	d ()I glFormat
	e ()Z hasAlpha
	f ()I alphaOffset
	g ()Z hasLuminanceOrAlpha
	h ()I luminanceOrAlphaOffset
	i ()Z supportedByStb
apg$b net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry
	a target
	b type
	c value
	a ()I weightedValue
	a (Lcom/mojang/datafixers/Dynamic;)Ljava/util/Optional; load
	a (Lcom/mojang/datafixers/Dynamic;Lnet/minecraft/server/ReputationType;)Ljava/util/Optional; lambda$load$2
	a (Lcom/mojang/datafixers/Dynamic;Lnet/minecraft/server/ReputationType;Ljava/util/UUID;)Ljava/util/Optional; lambda$null$1
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; store
	a (Ljava/util/UUID;Lnet/minecraft/server/ReputationType;Ljava/lang/Number;)Lapg$b; lambda$null$0
cuj$c com/mojang/blaze3d/platform/NativeImage$WriteCallback
	a output
	b exception
	a ()V throwIfException
apg$a net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips
	a entries
	a ()V decay
	a (Lapg$a;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; access$000
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)I lambda$weightedValue$1
	a (Ljava/util/UUID;)Ljava/util/stream/Stream; unpack
	a (Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Lapg$b; lambda$unpack$2
	a (Ljava/util/function/Predicate;)I weightedValue
	a (Ljava/util/function/Predicate;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Z lambda$weightedValue$0
	a (Lnet/minecraft/server/ReputationType;)V makeSureValueIsntTooLowOrTooHigh
	b ()Z isEmpty
	b (Lnet/minecraft/server/ReputationType;)V remove
net/minecraft/server/ChunkProviderHell net/minecraft/world/level/levelgen/NetherLevelSource
	h yOffsets
	a (DDI)D getYOffset
	a (II)[D getDepthAndScale
	a (Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/BlockPosition;)Ljava/util/List; getMobsAt
	a ([DII)V fillNoiseColumn
	b ()I getSpawnHeight
	e ()I getGenDepth
	f ()I getSeaLevel
	j ()[D makeYOffsets
cuj$b com/mojang/blaze3d/platform/NativeImage$InternalGlFormat
	a RGBA
	b RGB
	c LUMINANCE_ALPHA
	d LUMINANCE
	e INTENSITY
	f glFormat
	g $VALUES
	a ()I glFormat
net/minecraft/server/RecipeSuspiciousStew net/minecraft/world/item/crafting/SuspiciousStewRecipe
	Q_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
net/minecraft/server/LootSelectorLootTable net/minecraft/world/level/storage/loot/entries/LootTableReference
	c name
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/server/LootCollector;Ljava/util/function/Function;Ljava/util/Set;Lnet/minecraft/server/LootContextParameterSet;)V validate
	a (Lnet/minecraft/server/LootSelectorLootTable;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lnet/minecraft/server/MinecraftKey;)Lcpr$a; lootTableReference
	a (Lnet/minecraft/server/MinecraftKey;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; lambda$lootTableReference$0
blu net/minecraft/world/level/biome/package-info
net/minecraft/server/WorldGenFeatureDefinedStructureJigsawPlacement net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement
	a POOLS
	b LOGGER
	a ()Lorg/apache/logging/log4j/Logger; access$500
	a (Lnet/minecraft/server/MinecraftKey;ILcfo$a;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)V addPieces
cuj$1 com/mojang/blaze3d/platform/NativeImage$1
net/minecraft/server/WorldGenDecoratorRoofedTree net/minecraft/world/level/levelgen/placement/DarkOakTreePlacementDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorEmptyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
ro$a$1 net/minecraft/server/commands/AdvancementCommands$Action$1
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Advancement;)Z perform
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Advancement;Ljava/lang/String;)Z performCriterion
net/minecraft/server/PacketPlayOutRespawn net/minecraft/network/protocol/game/ClientboundRespawnPacket
	a dimension
	b playerGameType
	c levelType
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/DimensionManager; getDimension
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/EnumGamemode; getPlayerGameType
	d ()Lnet/minecraft/server/WorldType; getLevelType
coq$1 net/minecraft/world/level/storage/LevelStorageSource$1
	a val$rootPath
	b val$levelPath
	c val$stream
	d this$0
	a (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; visitFile
ro$a$2 net/minecraft/server/commands/AdvancementCommands$Action$2
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Advancement;)Z perform
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Advancement;Ljava/lang/String;)Z performCriterion
brg$1 net/minecraft/world/level/block/Rotation$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
dob$a net/minecraft/client/renderer/block/model/BlockElementFace$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldob; deserialize
	a (Lcom/google/gson/JsonObject;)I getTintIndex
	b (Lcom/google/gson/JsonObject;)Ljava/lang/String; getTexture
	c (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/EnumDirection; getCullFacing
net/minecraft/server/DefinedStructureProcessor net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
	b (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureKelp net/minecraft/world/level/levelgen/feature/KelpFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/IRecipe net/minecraft/world/item/crafting/Recipe
	a ()Lnet/minecraft/server/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	b (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/NonNullList; getRemainingItems
	c ()Lnet/minecraft/server/ItemStack; getResultItem
	d ()Ljava/lang/String; getGroup
	g ()Lnet/minecraft/server/Recipes; getType
	getKey ()Lnet/minecraft/server/MinecraftKey; getId
	getRecipeSerializer ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
	isComplex ()Z isSpecial
net/minecraft/server/ChatMessage net/minecraft/network/chat/TranslatableComponent
	b decomposedParts
	c FORMAT_PATTERN
	d DEFAULT_LANGUAGE
	e LANGUAGE
	h decomposeLock
	i decomposedLanguageTime
	a (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/IChatBaseComponent; setStyle
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatBaseComponent; resolve
	b (I)Lnet/minecraft/server/IChatBaseComponent; getComponent
	b (Ljava/lang/String;)V decomposeTemplate
	c ()Ljava/util/stream/Stream; stream
	d ()Ljava/lang/String; getContents
	g ()Lnet/minecraft/server/IChatBaseComponent; copy
	i ()V decompose
	j ()Lnet/minecraft/server/ChatMessage; copy
net/minecraft/server/BiomeIceMountains net/minecraft/world/level/biome/SnowyMountainsBiome
	d ()F getCreatureProbability
net/minecraft/server/OperatorBoolean net/minecraft/world/phys/shapes/BooleanOp
	a (ZZ)Z lambda$static$15
	b (ZZ)Z lambda$static$14
	c (ZZ)Z lambda$static$13
	d (ZZ)Z lambda$static$12
	e (ZZ)Z lambda$static$11
	f (ZZ)Z lambda$static$10
	g (ZZ)Z lambda$static$9
	h (ZZ)Z lambda$static$8
	i (ZZ)Z lambda$static$7
	j (ZZ)Z lambda$static$6
	k (ZZ)Z lambda$static$5
	l (ZZ)Z lambda$static$4
	m (ZZ)Z lambda$static$3
	n (ZZ)Z lambda$static$2
	o (ZZ)Z lambda$static$1
	p (ZZ)Z lambda$static$0
net/minecraft/server/BehaviorGate$Order net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy
	c consumer
	d $VALUES
	a (Lnet/minecraft/server/WeightedList;)V apply
	b (Lnet/minecraft/server/WeightedList;)V lambda$static$0
ddb$b net/minecraft/client/gui/screens/controls/ControlList$Entry
ddb$c net/minecraft/client/gui/screens/controls/ControlList$KeyEntry
	a this$0
	b key
	c name
	d changeButton
	e resetButton
	a (Lcxz;Lczi;)V lambda$new$1
	a (Lddb$c;)Ljava/lang/String; access$500
	b (Lcxz;Lczi;)V lambda$new$0
net/minecraft/server/ArgumentMobEffect net/minecraft/commands/arguments/MobEffectArgument
	a ERROR_UNKNOWN_EFFECT
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentMobEffect; effect
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/MobEffectList; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/MobEffectList; getEffect
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$parse$1
es$1 net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$1
	a $SwitchMap$com$mojang$brigadier$arguments$StringArgumentType$StringType
qv$a net/minecraft/resources/ResourceLocation$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/MinecraftKey; deserialize
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/EntityVillagerAbstract net/minecraft/world/entity/npc/AbstractVillager
	bA DATA_UNHAPPY_COUNTER
	trades offers
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/Entity; changeDimension
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/MerchantRecipe;)V notifyTrade
	a (Lnet/minecraft/server/MerchantRecipeList;)V overrideOffers
	a (Lnet/minecraft/server/MerchantRecipeList;[Lnet/minecraft/server/VillagerTrades$IMerchantRecipeOption;I)V addOffersFromItemListings
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/ParticleParam;)V addParticlesAroundSelf
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/MerchantRecipe;)V rewardTradeXp
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	dV ()I getUnhappyCounter
	dW ()I getVillagerXp
	dX ()Lnet/minecraft/server/EntityHuman; getTradingPlayer
	dY ()Z isTrading
	dZ ()Lnet/minecraft/server/MerchantRecipeList; getOffers
	e (Lnet/minecraft/server/EntityHuman;)V setTradingPlayer
	ea ()Z showProgressBar
	eb ()Lnet/minecraft/server/SoundEffect; getNotifyTradeSound
	ec ()V playCelebrateSound
	ed ()V stopTrading
	eg ()Lnet/minecraft/server/World; getLevel
	eh ()V updateTrades
	i (Lnet/minecraft/server/ItemStack;)V notifyTradeUpdated
	r (I)V setUnhappyCounter
	r (Z)Lnet/minecraft/server/SoundEffect; getTradeUpdatedSound
	s (I)V overrideXp
	u_ ()V defineSynchedData
net/minecraft/server/PathfinderTurtle net/minecraft/world/level/pathfinder/TurtleNodeEvaluator
	k oldWalkableCost
	l oldWaterBorderCost
	a ()V done
	a (DDD)Lnet/minecraft/server/PathDestination; getGoal
	a (IIIID)Lnet/minecraft/server/PathPoint; getAcceptedNode
	a (Lnet/minecraft/server/BlockPosition;)D inWaterDependentPosHeight
	a (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;ZZLnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathType;)Lnet/minecraft/server/PathType; evaluateBlockPathType
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/EntityInsentient;)V prepare
	a ([Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)I getNeighbors
	b ()Lnet/minecraft/server/PathPoint; getStart
net/minecraft/server/DataConverterTrappedChest net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix
	a LOGGER
	a (IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$5
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$4
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
net/minecraft/server/GenLayerMushroomShore net/minecraft/world/level/newbiome/layer/ShoreLayer
	b BEACH
	c SNOWY_BEACH
	d DESERT
	e MOUNTAINS
	f WOODED_MOUNTAINS
	g FOREST
	h JUNGLE
	i JUNGLE_EDGE
	j JUNGLE_HILLS
	k BADLANDS
	l WOODED_BADLANDS_PLATEAU
	m BADLANDS_PLATEAU
	n ERODED_BADLANDS
	o MODIFIED_WOODED_BADLANDS_PLATEAU
	p MODIFIED_BADLANDS_PLATEAU
	q MUSHROOM_FIELDS
	r MUSHROOM_FIELD_SHORE
	s RIVER
	t MOUNTAIN_EDGE
	u STONE_SHORE
	v SWAMP
	w TAIGA
	x $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
	c (I)Z isJungleCompatible
	d (I)Z isMesa
net/minecraft/server/WorldGenFeaturePillagerOutpostPoolPiece net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece
	a element
	b position
	c rotation
	d groundLevelDelta
	e junctions
	f structureManager
	X_ ()Lnet/minecraft/server/EnumBlockRotation; getRotation
	a (III)V move
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTBase;)V lambda$new$0
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructureJigsawJunction;)V addJunction
	b ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure; getElement
	c ()Lnet/minecraft/server/BlockPosition; getPosition
	d ()I getGroundLevelDelta
	e ()Ljava/util/List; getJunctions
net/minecraft/server/EntityEndermite net/minecraft/world/entity/monster/Endermite
	b life
	c playerSpawned
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aO ()D getRidingHeight
	ap ()Z makeStepSound
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkEndermiteSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cQ ()Lnet/minecraft/server/EnumMonsterType; getMobType
	cl ()V registerAttributes
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h ()V tick
	k ()V aiStep
	l (F)V setYBodyRot
	n ()V registerGoals
dzs$a net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$SubSound
	o player
	o ()V tick
dzs$b net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance
	o player
	p fade
	o ()V tick
cwp$1 com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen$1
	a this$0
ddb$a net/minecraft/client/gui/screens/controls/ControlList$CategoryEntry
	a this$0
	b name
	c width
net/minecraft/server/CommandBanList net/minecraft/server/commands/BanListCommands
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I showList
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
dos$a net/minecraft/client/renderer/block/model/multipart/MultiPart$Deserializer
	a context
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonArray;)Ljava/util/List; getSelectors
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldos; deserialize
net/minecraft/server/SensorNearestLivingEntities net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor
	a TARGETING
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$doTick$1
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$doTick$0
net/minecraft/server/PlayerChunk net/minecraft/server/level/ChunkHolder
	CHUNK_STATES FULL_CHUNK_STATUSES
	UNLOADED_CHUNK UNLOADED_LEVEL_CHUNK
	UNLOADED_CHUNK_ACCESS UNLOADED_CHUNK
	UNLOADED_CHUNK_ACCESS_FUTURE UNLOADED_CHUNK_FUTURE
	UNLOADED_CHUNK_FUTURE UNLOADED_LEVEL_CHUNK_FUTURE
	chunkSave chunkToSave
	dirtyBlocks changedBlocks
	dirtyCount changes
	entityTickingFuture entityTickingChunkFuture
	hasBeenLoaded wasAccessibleSinceLastSave
	location pos
	n queueLevel
	players playerProvider
	r changedSectionFilter
	s sectionsToForceSendLightFor
	statusFutures futures
	t blockChangedLightSectionFilter
	tickingFuture tickingChunkFuture
	u skyChangedLightSectionFilter
	w onLevelChange
	a ()Ljava/util/concurrent/CompletableFuture; getTickingChunkFuture
	a (I)V setTicketLevel
	a (III)V blockChanged
	a (Ljava/util/concurrent/CompletableFuture;)V updateChunkToSave
	a (Lnet/minecraft/server/Chunk;)V broadcastChanges
	a (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/PlayerChunkMap;)Ljava/util/concurrent/CompletableFuture; getOrScheduleFuture
	a (Lnet/minecraft/server/EnumSkyBlock;I)V sectionLightChanged
	a (Lnet/minecraft/server/IChunkAccess;)Lnet/minecraft/server/IChunkAccess; lambda$null$1
	a (Lnet/minecraft/server/IChunkAccess;Lcom/mojang/datafixers/util/Either;)Lnet/minecraft/server/IChunkAccess; lambda$updateChunkToSave$3
	a (Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/PlayerChunk$Failure;)Lnet/minecraft/server/IChunkAccess; lambda$null$2
	a (Lnet/minecraft/server/Packet;Lnet/minecraft/server/EntityPlayer;)V lambda$broadcast$0
	a (Lnet/minecraft/server/Packet;Z)V broadcast
	a (Lnet/minecraft/server/PlayerChunk;)Lnet/minecraft/server/ChunkCoordIntPair; access$000
	a (Lnet/minecraft/server/PlayerChunkMap;)V updateFutures
	a (Lnet/minecraft/server/PlayerChunkMap;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$updateFutures$4
	a (Lnet/minecraft/server/ProtoChunkExtension;)V replaceProtoChunk
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V broadcastBlockEntity
	b ()Ljava/util/concurrent/CompletableFuture; getEntityTickingChunkFuture
	b (Lnet/minecraft/server/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; getFutureIfPresent
	c ()Ljava/util/concurrent/CompletableFuture; getFullChunkFuture
	d (I)V setQueueLevel
	e ()Lnet/minecraft/server/ChunkStatus; getLastAvailableStatus
	f ()Lnet/minecraft/server/IChunkAccess; getLastAvailable
	getChunk ()Lnet/minecraft/server/Chunk; getTickingChunk
	getChunkSave ()Ljava/util/concurrent/CompletableFuture; getChunkToSave
	getChunkState (I)Lnet/minecraft/server/PlayerChunk$State; getFullChunkStatus
	getChunkStatus (I)Lnet/minecraft/server/ChunkStatus; getStatus
	getStatusFutureUnchecked (Lnet/minecraft/server/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; getFutureIfPresentUnchecked
	h ()Lnet/minecraft/server/PlayerChunk$State; getFullStatus
	hasBeenLoaded ()Z wasAccessibleSinceLastSave
	i ()Lnet/minecraft/server/ChunkCoordIntPair; getPos
	k ()I getQueueLevel
	m ()V refreshAccessibility
net/minecraft/server/LootItemFunctionApplyBonus net/minecraft/world/level/storage/loot/functions/ApplyBonusCount
	a FORMULAS
	c enchantment
	d formula
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/Enchantment;)Lcqg$a; addOreBonusCount
	a (Lnet/minecraft/server/Enchantment;FI)Lcqg$a; addBonusBinomialDistributionCount
	a (Lnet/minecraft/server/Enchantment;I)Lcqg$a; addUniformBonusCount
	a (Lnet/minecraft/server/Enchantment;IF[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$addBonusBinomialDistributionCount$0
	a (Lnet/minecraft/server/Enchantment;I[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$addUniformBonusCount$3
	a (Lnet/minecraft/server/Enchantment;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$addUniformBonusCount$2
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionApplyBonus;)Lnet/minecraft/server/Enchantment; access$000
	b ()Ljava/util/Map; access$200
	b (Lnet/minecraft/server/Enchantment;)Lcqg$a; addUniformBonusCount
	b (Lnet/minecraft/server/Enchantment;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$addOreBonusCount$1
	b (Lnet/minecraft/server/LootItemFunctionApplyBonus;)Lcpw$b; access$100
net/minecraft/server/PathfinderGoalOwnerHurtTarget net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal
	a tameAnimal
	b ownerLastHurt
	c timestamp
	a ()Z canUse
	c ()V start
net/minecraft/server/DataConverterBannerColour net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$null$3
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fixTag$4
	c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$2
	d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$1
	e (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fixTag$0
cri$a net/minecraft/world/level/storage/loot/predicates/LocationCheck$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionLocationCheck; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionLocationCheck;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
net/minecraft/server/ServerPing$ServerData$Serializer net/minecraft/network/protocol/status/ServerStatus$Version$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/ServerPing$ServerData; deserialize
	a (Lnet/minecraft/server/ServerPing$ServerData;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/BlockLongGrass net/minecraft/world/level/block/TallGrassBlock
	a SHAPE
	R_ ()Lnet/minecraft/server/Block$EnumRandomOffset; getOffsetType
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	b (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
net/minecraft/server/BehaviorStrollInside net/minecraft/world/entity/ai/behavior/InsideBrownianWalk
	a speed
	a (Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/BlockPosition;)V lambda$start$3
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/BlockPosition;)Z lambda$start$2
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/BlockPosition;)Z lambda$start$1
net/minecraft/server/NoiseGeneratorOctaves net/minecraft/world/level/levelgen/synth/PerlinNoise
	a noiseLevels
	a (D)D wrap
	a (DD)D getValue
	a (DDD)D getValue
	a (DDDD)D getSurfaceNoiseValue
	a (DDDDDZ)D getValue
	a (I)Lnet/minecraft/server/NoiseGeneratorPerlin; getOctaveNoise
net/minecraft/server/BiomeDesert net/minecraft/world/level/biome/DesertBiome
net/minecraft/server/WorldGenMineshaft net/minecraft/world/level/levelgen/feature/MineshaftFeature
	a ()Lceu$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;II)Z isFeatureChunk
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
net/minecraft/server/EntityPainting net/minecraft/world/entity/decoration/Painting
	art motive
	N ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (DDDFFIZ)V lerpTo
	a (Lnet/minecraft/server/Entity;)V dropItem
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (DDDFF)V moveTo
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	k ()I getWidth
	l ()I getHeight
	m ()V playPlacementSound
net/minecraft/server/BiomeIcePlainsSpikes net/minecraft/world/level/biome/IceSpikesBiome
	d ()F getCreatureProbability
net/minecraft/server/SlotFurnaceFuel net/minecraft/world/inventory/FurnaceFuelSlot
	a menu
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	b (Lnet/minecraft/server/ItemStack;)I getMaxStackSize
	c_ (Lnet/minecraft/server/ItemStack;)Z isBucket
net/minecraft/server/ItemWorldMap net/minecraft/world/item/MapItem
	a (I)Ljava/lang/String; makeKey
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;)Lnet/minecraft/server/WorldMap; getSavedData
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;I)V scaleMap
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;IIIZZLnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/WorldMap; createAndStoreSavedData
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbdr;)V appendHoverText
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Packet; getUpdatePacket
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;Lnet/minecraft/server/WorldMap;)V update
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getCorrectStateForFluidBlock
	a ([Lnet/minecraft/server/BiomeBase;III)Z isLand
	applySepiaFilter (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;)V renderBiomePreviewMap
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;)V onCraftedBy
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; lockMap
	createFilledMapView (Lnet/minecraft/server/World;IIBZZ)Lnet/minecraft/server/ItemStack; create
	e (Lnet/minecraft/server/ItemStack;)I getMapId
	getSavedMap (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;)Lnet/minecraft/server/WorldMap; getOrCreateSavedData
	j (Lnet/minecraft/server/ItemStack;)I getColor
cqf$a net/minecraft/world/level/storage/loot/functions/LimitCount$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionLimitCount; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionLimitCount;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/GenLayerSmooth net/minecraft/world/level/newbiome/layer/SmoothLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/BehaviorNop net/minecraft/world/entity/ai/behavior/DoNothing
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/StreamAccumulator net/minecraft/util/RewindableStream
	a cache
	b source
	a ()Ljava/util/stream/Stream; getStream
	a (Lnet/minecraft/server/StreamAccumulator;)Ljava/util/List; access$000
	b (Lnet/minecraft/server/StreamAccumulator;)Ljava/util/Spliterator; access$100
net/minecraft/server/CustomFunctionCallbackTimers net/minecraft/world/level/timers/TimerCallbacks
	a SERVER_CALLBACKS
	b LOGGER
	c idToSerializer
	d classToSerializer
	a (Lcrx$a;)Lnet/minecraft/server/CustomFunctionCallbackTimers; register
	a (Ljava/lang/Class;)Lcrx$a; getSerializer
	a (Lnet/minecraft/server/CustomFunctionCallbackTimer;)Lnet/minecraft/server/NBTTagCompound; serialize
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallbackTimer; deserialize
net/minecraft/server/CriterionConditionEntityFlags net/minecraft/advancements/critereon/EntityFlagsPredicate
	a ANY
	b isOnFire
	c isSneaking
	d isSprinting
	e isSwimming
	f isBaby
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionEntityFlags; fromJson
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; getOptionalBoolean
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V addOptionalBoolean
	a (Lnet/minecraft/server/Entity;)Z matches
dcp$a net/minecraft/client/gui/screens/TitleScreen$WarningMessageWidget
	a this$0
	b warningClickWidth
	c warningx0
	d warningy0
	e warningx1
	f warningy1
	g warningMessageTop
	h warningMessageBottom
	i warningMessageUrl
	a (DD)Z mouseClicked
	a (I)V updatePosition
	a (Z)V lambda$mouseClicked$0
	b (I)V render
net/minecraft/server/EntityArrow$PickupStatus net/minecraft/world/entity/projectile/AbstractArrow$Pickup
	d $VALUES
	a (I)Lnet/minecraft/server/EntityArrow$PickupStatus; byOrdinal
cqf$1 net/minecraft/world/level/storage/loot/functions/LimitCount$1
net/minecraft/server/EntityBlaze net/minecraft/world/entity/monster/Blaze
	b allowedHeightOffset
	c nextHeightOffsetChangeTick
	d DATA_FLAGS_ID
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L ()V customServerAiStep
	a (Lnet/minecraft/server/EntityBlaze;Z)V access$000
	aE ()I getLightColor
	aF ()F getBrightness
	b (FF)V causeFallDamage
	bc ()Z isOnFire
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()V registerAttributes
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	k ()V aiStep
	l ()Z isCharged
	n ()V registerGoals
	r (Z)V setCharged
	u_ ()V defineSynchedData
net/minecraft/server/BlockJigsaw net/minecraft/world/level/block/JigsawBlock
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;)Z canAttach
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
bpy net/minecraft/world/level/block/LevelEvent
net/minecraft/server/ArgumentNBTBase net/minecraft/commands/arguments/NbtTagArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/ArgumentNBTBase; nbtTag
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/NBTBase; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/NBTBase; getNbtTag
net/minecraft/server/PathfinderGoalBeg net/minecraft/world/entity/ai/goal/BegGoal
	a wolf
	b player
	c level
	d lookDistance
	e lookTime
	f begTargeting
	a ()Z canUse
	a (Lnet/minecraft/server/EntityHuman;)Z playerHoldingInteresting
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/DataConverterSchemaV501 net/minecraft/util/datafix/schemas/V501
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/TagsEntity net/minecraft/tags/EntityTypeTags
	RADIERS RAIDERS
	c source
	d resetCount
	a ()Lnet/minecraft/server/Tags; getAllTags
	a (Ljava/lang/String;)Lnet/minecraft/server/Tag; bind
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; lambda$static$0
	a (Lnet/minecraft/server/Tags;)V reset
	b ()I access$000
	c ()Lnet/minecraft/server/Tags; access$100
net/minecraft/server/EntityFishingHook$HookState net/minecraft/world/entity/fishing/FishingHook$FishHookState
	d $VALUES
net/minecraft/server/BlockCactus net/minecraft/world/level/block/CactusBlock
	b COLLISION_SHAPE
	c OUTLINE_SHAPE
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
	f (Lnet/minecraft/server/IBlockData;)Z canOcclude
net/minecraft/server/BehaviorSwim net/minecraft/world/entity/ai/behavior/Swim
	a height
	b chance
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)Z canStillUse
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
bnc$1 net/minecraft/world/level/block/ButtonBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
net/minecraft/server/GenLayerJungle net/minecraft/world/level/newbiome/layer/RareBiomeLargeLayer
	b JUNGLE
	c BAMBOO_JUNGLE
	d $VALUES
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
crj$1 net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$1
net/minecraft/server/BlockSprawling net/minecraft/world/level/block/PipeBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e UP
	f DOWN
	g PROPERTY_BY_DIRECTION
	h shapeByIndex
	i DIRECTIONS
	a (F)[Lnet/minecraft/server/VoxelShape; makeShapes
	a (Ljava/util/EnumMap;)V lambda$static$0
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	j (Lnet/minecraft/server/IBlockData;)I getAABBIndex
net/minecraft/server/ReputationHandler net/minecraft/world/entity/ReputationEventHandler
	a (Lnet/minecraft/server/ReputationEvent;Lnet/minecraft/server/Entity;)V onReputationEventFrom
net/minecraft/server/PathfinderGoalOcelotAttack net/minecraft/world/entity/ai/goal/OcelotAttackGoal
	a level
	b mob
	c target
	d attackTime
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
net/minecraft/server/DataConverterArmorStand net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/BlockPropertyDoubleBlockHalf net/minecraft/world/level/block/state/properties/DoubleBlockHalf
	c $VALUES
	m ()Ljava/lang/String; getSerializedName
net/minecraft/server/EntitySilverfish$PathfinderGoalSilverfishWakeOthers net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal
	b lookForFriends
	a ()Z canUse
	e ()V tick
	g ()V notifyHurt
net/minecraft/server/CriterionTriggerConstructBeacon net/minecraft/advancements/critereon/ConstructBeaconTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/TileEntityBeacon;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lai$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/LayerIsland net/minecraft/world/level/newbiome/layer/IslandLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;II)I applyPixel
net/minecraft/server/WorldGenPumpkin net/minecraft/world/level/levelgen/feature/CentralSpikedFeature
	a blockState
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
abg$c net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section
	a y
	b palette
	c listTag
	d section
	e hasData
	f toFix
	g update
	h seen
	i buffer
	a ()Lcom/mojang/datafixers/Dynamic; write
	a (I)Lcom/mojang/datafixers/Dynamic; getBlock
	a (II)V addFix
	a (ILcom/mojang/datafixers/Dynamic;)V setBlock
	a (Labg$c;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; access$300
	a (Ljava/nio/ByteBuffer;)Labg$a; lambda$upgrade$1
	b (I)I upgrade
	b (Labg$c;)Lit/unimi/dsi/fastutil/ints/IntList; access$2000
	b (Ljava/nio/ByteBuffer;)Labg$a; lambda$upgrade$0
net/minecraft/server/WorldGenCarverAbstract net/minecraft/world/level/levelgen/carver/WorldCarver
	a CAVE
	b HELL_CAVE
	c CANYON
	d UNDERWATER_CANYON
	e UNDERWATER_CAVE
	f AIR
	g CAVE_AIR
	h WATER
	i LAVA
	j replaceableBlocks
	k liquids
	l genHeight
	m configurationFactory
	a (DDDI)Z skip
	a (IIDDIIF)Z canReach
	a (IIIIII)Z isEdge
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenCarverConfiguration; createSettings
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenCarverAbstract;)Lnet/minecraft/server/WorldGenCarverAbstract; register
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenCarverConfiguration;)Z isStartChunk
	a (Lnet/minecraft/server/IBlockData;)Z canReplaceBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)Z canReplaceBlock
	a (Lnet/minecraft/server/IChunkAccess;IIIIIIII)Z hasWater
	a (Lnet/minecraft/server/IChunkAccess;JIIIDDDDDLjava/util/BitSet;)Z carveSphere
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;IIIIIIIILjava/util/concurrent/atomic/AtomicBoolean;)Z carveBlock
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/server/WorldGenCarverConfiguration;)Z carve
	c ()I getRange
abg$d net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk
	a sides
	b sections
	c level
	d x
	e z
	f blockEntities
	a ()Lcom/mojang/datafixers/Dynamic; write
	a (I)Lcom/mojang/datafixers/Dynamic; getBlock
	a (ILcom/mojang/datafixers/Dynamic;)V setBlock
	a (ILnet/minecraft/server/ChunkConverterPalette$Direction;)I relative
	a (Lcom/mojang/datafixers/Dynamic;)V lambda$null$2
	a (Ljava/util/stream/Stream;)V lambda$new$3
	b (I)Lcom/mojang/datafixers/Dynamic; getBlockEntity
	b (Lcom/mojang/datafixers/Dynamic;)V lambda$null$0
	b (Ljava/util/stream/Stream;)V lambda$new$1
	c (I)Lcom/mojang/datafixers/Dynamic; removeBlockEntity
	d (I)Labg$c; getSection
net/minecraft/server/PacketStatusInPing net/minecraft/network/protocol/status/ServerboundPingRequestPacket
	a time
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketStatusInListener;)V handle
	b ()J getTime
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/WorldGenFeatureDesertVillage net/minecraft/world/level/levelgen/feature/DesertVillagePools
	a ()V bootstrap
abg$a net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer
	a data
	a (I)Z isFirst
	a (III)I get
	b (I)I getPosition
net/minecraft/server/WorldGenFeatureOreConfiguration$Target net/minecraft/world/level/levelgen/feature/OreConfiguration$Predicates
	c BY_NAME
	d name
	e predicate
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenFeatureOreConfiguration$Target; byName
	a (Lnet/minecraft/server/IBlockData;)Z lambda$static$0
	a (Lnet/minecraft/server/WorldGenFeatureOreConfiguration$Target;)Lnet/minecraft/server/WorldGenFeatureOreConfiguration$Target; lambda$static$1
	b ()Ljava/util/function/Predicate; getPredicate
net/minecraft/server/StructureStart net/minecraft/world/level/levelgen/structure/StructureStart
	a INVALID_START
	b pieces
	c boundingBox
	d random
	e feature
	f chunkX
	g chunkZ
	h biome
	i references
	a ()Lnet/minecraft/server/BlockPosition; getLocatePos
	a (II)Lnet/minecraft/server/NBTTagCompound; createTag
	a (ILjava/util/Random;I)V moveBelowSeaLevel
	a (Ljava/util/Random;II)V moveInsideHeights
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)V postProcess
	b ()V calculateBoundingBox
	c ()Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	d ()Ljava/util/List; getPieces
	e ()Z isValid
	f ()I getChunkX
	g ()I getChunkZ
	h ()Z canBeReferenced
	i ()V addReference
	j ()I getMaxReferences
	k ()Lnet/minecraft/server/StructureGenerator; getFeature
net/minecraft/server/PacketPlayOutNamedSoundEffect net/minecraft/network/protocol/game/ClientboundSoundPacket
	a sound
	b source
	c x
	d y
	e z
	f volume
	g pitch
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/SoundEffect; getSound
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/SoundCategory; getSource
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()F getVolume
	h ()F getPitch
cxc$1 com/mojang/realmsclient/gui/screens/RealmsTermsScreen$1
	a this$0
net/minecraft/server/GameProfileBanEntry net/minecraft/server/players/UserBanListEntry
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
	e ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/FluidTypeEmpty net/minecraft/world/level/material/EmptyFluid
	a ()Lnet/minecraft/server/TextureType; getRenderLayer
	a (Lnet/minecraft/server/Fluid;)F getOwnHeight
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getHeight
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/Vec3D; getFlow
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	b ()Lnet/minecraft/server/Item; getBucket
	b (Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/IBlockData; createLegacyBlock
	b (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getShape
	c ()Z isEmpty
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d ()F getExplosionResistance
	d (Lnet/minecraft/server/Fluid;)I getAmount
net/minecraft/server/DefinedStructureProcessorPredicates net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule
	a inputPredicate
	b locPredicate
	c outputState
	d outputTag
	a ()Lnet/minecraft/server/IBlockData; getOutputState
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/DefinedStructureProcessorPredicates; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
	b ()Lnet/minecraft/server/NBTTagCompound; getOutputTag
	b (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/NBTBase; lambda$deserialize$0
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairs net/minecraft/world/level/levelgen/structure/StrongholdPieces$Straight
	a leftChild
	b rightChild
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairs; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
cxc$2 com/mojang/realmsclient/gui/screens/RealmsTermsScreen$2
	a this$0
net/minecraft/server/WorldGenDecoratorSkyVisibleBiased net/minecraft/world/level/levelgen/placement/ChanceTopSolidHeightmapDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorChanceConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/ItemFireball net/minecraft/world/item/FireChargeItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V playSound
net/minecraft/server/ArgumentPredicateItemStack net/minecraft/commands/arguments/item/ItemInput
	a ERROR_STACK_TOO_BIG
	b item
	c tag
	a ()Lnet/minecraft/server/Item; getItem
	a (IZ)Lnet/minecraft/server/ItemStack; createItemStack
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/ItemStack;)Z test
	b ()Lnet/minecraft/server/NBTTagCompound; getTag
	c ()Ljava/lang/String; serialize
zp$a net/minecraft/util/CsvOutput$Builder
	a headers
	a (Ljava/io/Writer;)Lnet/minecraft/server/CSVWriter; build
	a (Ljava/lang/String;)Lzp$a; addColumn
net/minecraft/server/WorldGenMineshaft$Type net/minecraft/world/level/levelgen/feature/MineshaftFeature$Type
	c BY_NAME
	d name
	e $VALUES
	a ()Ljava/lang/String; getName
	a (I)Lnet/minecraft/server/WorldGenMineshaft$Type; byId
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenMineshaft$Type; byName
	a (Lnet/minecraft/server/WorldGenMineshaft$Type;)Lnet/minecraft/server/WorldGenMineshaft$Type; lambda$static$0
net/minecraft/server/EnumSkyBlock net/minecraft/world/level/LightLayer
	c surrounding
	d $VALUES
net/minecraft/server/Foods net/minecraft/world/food/Foods
	A PORKCHOP
	B POTATO
	C PUFFERFISH
	D PUMPKIN_PIE
	E RABBIT
	F RABBIT_STEW
	G ROTTEN_FLESH
	H SALMON
	I SPIDER_EYE
	J SUSPICIOUS_STEW
	K SWEET_BERRIES
	L TROPICAL_FISH
	a APPLE
	b BAKED_POTATO
	c BEEF
	d BEETROOT
	e BEETROOT_SOUP
	f BREAD
	g CARROT
	h CHICKEN
	i CHORUS_FRUIT
	j COD
	k COOKED_BEEF
	l COOKED_CHICKEN
	m COOKED_COD
	n COOKED_MUTTON
	o COOKED_PORKCHOP
	p COOKED_RABBIT
	q COOKED_SALMON
	r COOKIE
	s DRIED_KELP
	t ENCHANTED_GOLDEN_APPLE
	u GOLDEN_APPLE
	v GOLDEN_CARROT
	w MELON_SLICE
	x MUSHROOM_STEW
	y MUTTON
	z POISONOUS_POTATO
	a (I)Lnet/minecraft/server/FoodInfo; stew
net/minecraft/server/GameProfilerFillerActive net/minecraft/util/profiling/ProfileCollector
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c ()V pop
	d ()Lnet/minecraft/server/MethodProfilerResults; getResults
cwg$10 com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen$9
	a val$worldId
	b this$0
net/minecraft/server/EntityMonsterPatrolling net/minecraft/world/entity/monster/PatrollingMonster
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aO ()D getRidingHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkPatrollingMonsterSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (D)Z removeWhenFarAway
	dX ()Z canBeLeader
	dZ ()Z hasPatrolTarget
	ec ()Z canJoinPatrol
	ed ()V findPatrolTarget
	n ()V registerGoals
bog$1 net/minecraft/world/level/block/DoorBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
net/minecraft/server/WorldGenFeatureFlowerForest net/minecraft/world/level/levelgen/feature/ForestFlowerFeature
	a flowers
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getRandomFlower
net/minecraft/server/EnchantmentFrostWalker net/minecraft/world/item/enchantment/FrostWalkerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;I)V onEntityMoved
	b ()Z isTreasureOnly
	b (I)I getMaxCost
cwq$1 com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen$1
	a this$0
net/minecraft/server/WorldGenFeatureRandomChoice net/minecraft/world/level/levelgen/feature/RandomSelectorFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRandomChoiceConfiguration;)Z place
net/minecraft/server/BlockLectern net/minecraft/world/level/block/LecternBlock
	a FACING
	b POWERED
	c HAS_BOOK
	d SHAPE_BASE
	e SHAPE_POST
	f SHAPE_COMMON
	g SHAPE_TOP_PLATE
	h SHAPE_COLLISION
	i SHAPE_WEST
	j SHAPE_NORTH
	k SHAPE_EAST
	w SHAPE_SOUTH
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V openScreen
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V signalPageChange
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/ItemStack;)Z tryPlaceBook
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V updateBelow
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/ItemStack;)V placeBook
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V changePowered
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V popBook
	h (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	h (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
	n (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
	setHasBook (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V resetBookState
cwq$2 com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen$2
	a this$0
com/mojang/blaze3d/platform/GlStateManager$p$3 com/mojang/blaze3d/platform/GlStateManager$Profile$3
	a ()V apply
	b ()V clean
net/minecraft/server/DataConverterBook net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Dynamic;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fixTag$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$3
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$null$1
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
net/minecraft/server/BehaviorUtil net/minecraft/world/entity/ai/behavior/BehaviorUtils
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/EntityLiving;)Z entityIsVisible
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/MemoryModuleType;Lnet/minecraft/server/EntityTypes;)Z targetIsValid
	a (Lnet/minecraft/server/EntityLiving;Ljava/util/List;)Z lambda$entityIsVisible$0
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)V lockGazeAndWalkToEachOther
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;I)V walkToEntity
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;)V throwItem
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/EntityLiving;)Z lambda$targetIsValid$1
	a (Lnet/minecraft/server/WorldServer;ILnet/minecraft/server/SectionPosition;)Z lambda$findSectionClosestToVillage$3
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/SectionPosition;I)Lnet/minecraft/server/SectionPosition; findSectionClosestToVillage
	b (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/EntityLiving;)Z lambda$targetIsValid$2
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)V lookAtEachOther
	c (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)V lookAtEntity
	d (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)V walkToEachOther
com/mojang/blaze3d/platform/GlStateManager$p$2 com/mojang/blaze3d/platform/GlStateManager$Profile$2
	a ()V apply
	b ()V clean
com/mojang/blaze3d/platform/GlStateManager$p$1 com/mojang/blaze3d/platform/GlStateManager$Profile$1
	a ()V apply
	b ()V clean
net/minecraft/server/BlockCocoa net/minecraft/world/level/block/CocoaBlock
	b EAST_AABB
	c WEST_AABB
	d NORTH_AABB
	e SOUTH_AABB
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	c ()Lnet/minecraft/server/TextureType; getRenderLayer
net/minecraft/server/WorldGenFeatureShipwreckConfiguration net/minecraft/world/level/levelgen/feature/ShipwreckConfiguration
	a isBeached
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureShipwreckConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
cwq$3 com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen$3
	a this$0
net/minecraft/server/ShapeDetector$Shape net/minecraft/world/level/block/state/pattern/BlockPattern$PortalInfo
	position pos
	velocity speed
	yaw angle
net/minecraft/server/BlockGrindstone net/minecraft/world/level/block/GrindstoneBlock
	A FLOOR_EAST_WEST_GRINDSTONE
	B WALL_SOUTH_LEFT_POST
	D WALL_SOUTH_RIGHT_POST
	E WALL_SOUTH_LEFT_PIVOT
	F WALL_SOUTH_RIGHT_PIVOT
	G WALL_SOUTH_LEFT_LEG
	H WALL_SOUTH_RIGHT_LEG
	I WALL_SOUTH_ALL_LEGS
	J WALL_SOUTH_GRINDSTONE
	K WALL_NORTH_LEFT_POST
	L WALL_NORTH_RIGHT_POST
	M WALL_NORTH_LEFT_PIVOT
	N WALL_NORTH_RIGHT_PIVOT
	O WALL_NORTH_LEFT_LEG
	P WALL_NORTH_RIGHT_LEG
	Q WALL_NORTH_ALL_LEGS
	R WALL_NORTH_GRINDSTONE
	S WALL_WEST_LEFT_POST
	T WALL_WEST_RIGHT_POST
	U WALL_WEST_LEFT_PIVOT
	V WALL_WEST_RIGHT_PIVOT
	W WALL_WEST_LEFT_LEG
	X WALL_WEST_RIGHT_LEG
	Y WALL_WEST_ALL_LEGS
	Z WALL_WEST_GRINDSTONE
	a FLOOR_NORTH_SOUTH_LEFT_POST
	aa WALL_EAST_LEFT_POST
	ab WALL_EAST_RIGHT_POST
	ac WALL_EAST_LEFT_PIVOT
	ad WALL_EAST_RIGHT_PIVOT
	ae WALL_EAST_LEFT_LEG
	af WALL_EAST_RIGHT_LEG
	ag WALL_EAST_ALL_LEGS
	ah WALL_EAST_GRINDSTONE
	ai CEILING_NORTH_SOUTH_LEFT_POST
	aj CEILING_NORTH_SOUTH_RIGHT_POST
	ak CEILING_NORTH_SOUTH_LEFT_PIVOT
	al CEILING_NORTH_SOUTH_RIGHT_PIVOT
	am CEILING_NORTH_SOUTH_LEFT_LEG
	an CEILING_NORTH_SOUTH_RIGHT_LEG
	ao CEILING_NORTH_SOUTH_ALL_LEGS
	ap CEILING_NORTH_SOUTH_GRINDSTONE
	aq CEILING_EAST_WEST_LEFT_POST
	ar CEILING_EAST_WEST_RIGHT_POST
	as CEILING_EAST_WEST_LEFT_PIVOT
	at CEILING_EAST_WEST_RIGHT_PIVOT
	au CEILING_EAST_WEST_LEFT_LEG
	av CEILING_EAST_WEST_RIGHT_LEG
	aw CEILING_EAST_WEST_ALL_LEGS
	ax CEILING_EAST_WEST_GRINDSTONE
	az CONTAINER_TITLE
	b FLOOR_NORTH_SOUTH_RIGHT_POST
	c FLOOR_NORTH_SOUTH_LEFT_PIVOT
	d FLOOR_NORTH_SOUTH_RIGHT_PIVOT
	e FLOOR_NORTH_SOUTH_LEFT_LEG
	f FLOOR_NORTH_SOUTH_RIGHT_LEG
	g FLOOR_NORTH_SOUTH_ALL_LEGS
	h FLOOR_NORTH_SOUTH_GRINDSTONE
	i FLOOR_EAST_WEST_LEFT_POST
	j FLOOR_EAST_WEST_RIGHT_POST
	k FLOOR_EAST_WEST_LEFT_PIVOT
	w FLOOR_EAST_WEST_RIGHT_PIVOT
	x FLOOR_EAST_WEST_LEFT_LEG
	y FLOOR_EAST_WEST_RIGHT_LEG
	z FLOOR_EAST_WEST_ALL_LEGS
	a (Lbvu$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Z use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$getMenuProvider$0
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	q (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/VoxelShape; getVoxelShape
net/minecraft/server/PacketPlayInStruct net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket
	a pos
	b updateType
	c mode
	d name
	e offset
	f size
	g mirror
	h rotation
	i data
	j ignoreEntities
	k showAir
	l showBoundingBox
	m integrity
	n seed
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/TileEntityStructure$UpdateType; getUpdateType
	d ()Lnet/minecraft/server/BlockPropertyStructureMode; getMode
	e ()Ljava/lang/String; getName
	f ()Lnet/minecraft/server/BlockPosition; getOffset
	g ()Lnet/minecraft/server/BlockPosition; getSize
	h ()Lnet/minecraft/server/EnumBlockMirror; getMirror
	i ()Lnet/minecraft/server/EnumBlockRotation; getRotation
	j ()Ljava/lang/String; getData
	k ()Z isIgnoreEntities
	l ()Z isShowAir
	m ()Z isShowBoundingBox
	n ()F getIntegrity
	o ()J getSeed
net/minecraft/server/PacketPlayInSteerVehicle net/minecraft/network/protocol/game/ServerboundPlayerInputPacket
	a xxa
	b zza
	c isJumping
	d isSneaking
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()F getXxa
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()F getZza
	d ()Z isJumping
	e ()Z isSneaking
crj$a net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder
	a block
	b allowedProperties
	c properties
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Lcrj$a; withProperty
crj$b net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionBlockStateProperty; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/IBlockState;Ljava/lang/Object;)V lambda$serialize$0
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionBlockStateProperty;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lnet/minecraft/server/Block;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalArgumentException; lambda$null$2
	a (Lnet/minecraft/server/BlockStateList;Lnet/minecraft/server/Block;Ljava/util/Map;Ljava/util/Map$Entry;)V lambda$deserialize$3
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Object;)Ljava/lang/String; valueToString
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/IllegalArgumentException; lambda$deserialize$1
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
btn$1 net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity$1
	a this$0
	a ()I getCount
	a (I)I get
	a (II)V set
net/minecraft/server/WorldGenJunglePyramidPiece net/minecraft/world/level/levelgen/structure/JunglePyramidPiece
	e placedMainChest
	f placedHiddenChest
	g placedTrap1
	h placedTrap2
	i STONE_SELECTOR
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
zp$1 net/minecraft/util/CsvOutput$1
net/minecraft/server/ItemSplashPotion net/minecraft/world/item/SplashPotionItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/ResourcePackRepository net/minecraft/server/packs/repository/PackRepository
	a sources
	b available
	c selected
	d constructor
	a ()V reload
	a (Ljava/lang/String;)Lnet/minecraft/server/ResourcePackLoader; getPack
	a (Ljava/util/Collection;)V setSelected
	a (Ljava/util/Map$Entry;)V lambda$sortAvailable$0
	a (Lnet/minecraft/server/ResourcePackSource;)V addSource
	b ()Ljava/util/Collection; getAvailable
	c ()Ljava/util/Collection; getUnselected
	d ()Ljava/util/Collection; getSelected
	e ()V sortAvailable
bup net/minecraft/world/level/block/entity/LidBlockEntity
	a (F)F getOpenNess
net/minecraft/server/NextTickListEntry net/minecraft/world/level/TickNextTickData
	a pos
	b delay
	c priority
	d counter
	e type
	f c
	a ()Ljava/util/Comparator; createTimeComparator
	a (Lnet/minecraft/server/NextTickListEntry;Lnet/minecraft/server/NextTickListEntry;)I lambda$createTimeComparator$0
	b ()Ljava/lang/Object; getType
cqx$1 net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$1
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition
	a index
	b connections
	c hasOpening
	d claimed
	e isSource
	f scanIndex
	a ()V updateOpenings
	a (I)Z findSource
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)V setConnection
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)I access$000
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Z)Z access$102
	b ()Z isSpecial
	b (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z access$100
	b (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Z)Z access$902
	c ()I countOpenings
	c (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)[Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker; access$1000
	d (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)[Z access$1100
net/minecraft/server/BiomeTaiga net/minecraft/world/level/biome/TaigaBiome
net/minecraft/server/BehaviorInteract net/minecraft/world/entity/ai/behavior/InteractWith
	a maxDist
	b speed
	c type
	d interactionRangeSqr
	e targetFilter
	f selfFilter
	g memory
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/EntityLiving;)V lambda$null$6
	a (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityLiving; lambda$null$4
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BehaviorController;Ljava/util/List;)V lambda$start$7
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$null$5
	a (Lnet/minecraft/server/EntityTypes;ILnet/minecraft/server/MemoryModuleType;FI)Lnet/minecraft/server/BehaviorInteract; of
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityLiving;)Z lambda$null$3
	c (Lnet/minecraft/server/EntityLiving;)Z lambda$checkExtraStartConditions$2
	d (Lnet/minecraft/server/EntityLiving;)Z lambda$of$1
	e (Lnet/minecraft/server/EntityLiving;)Z lambda$of$0
net/minecraft/server/TagsBlock net/minecraft/tags/BlockTags
	Y source
	Z resetCount
	a ()Lnet/minecraft/server/Tags; getAllTags
	a (Ljava/lang/String;)Lnet/minecraft/server/Tag; bind
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; lambda$static$0
	a (Lnet/minecraft/server/Tags;)V reset
	b ()I access$000
	c ()Lnet/minecraft/server/Tags; access$100
net/minecraft/server/RunnableSaveScoreboard net/minecraft/world/level/saveddata/SaveDataDirtyRunnable
	a savedData
net/minecraft/server/NBTNumber net/minecraft/nbt/NumericTag
	asByte ()B getAsByte
	asDouble ()D getAsDouble
	asFloat ()F getAsFloat
	asInt ()I getAsInt
	asLong ()J getAsLong
	asShort ()S getAsShort
	j ()Ljava/lang/Number; getAsNumber
net/minecraft/server/WorldGenFeatureCoralMushroom net/minecraft/world/level/levelgen/feature/CoralMushroomFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z placeFeature
net/minecraft/server/TickListServer net/minecraft/world/level/ServerTickList
	a ignore
	b toId
	c fromId
	f level
	g currentlyTicking
	h alreadyTicked
	i ticker
	nextTickList tickNextTickList
	nextTickListHash tickNextTickSet
	a ()I size
	a (Ljava/util/List;Ljava/util/Collection;Lnet/minecraft/server/StructureBoundingBox;Z)Ljava/util/List; fetchTicksInArea
	a (Ljava/util/function/Function;Ljava/lang/Iterable;J)Lnet/minecraft/server/NBTTagList; saveTickList
	a (Ljava/util/stream/Stream;)V addAll
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/NBTTagList; save
	a (Lnet/minecraft/server/ChunkCoordIntPair;ZZ)Ljava/util/List; fetchTicksInChunk
	a (Lnet/minecraft/server/NBTTagList;)V load
	a (Lnet/minecraft/server/NextTickListEntry;)V addTickData
	a (Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/BlockPosition;)V copy
	a (Lnet/minecraft/server/StructureBoundingBox;ZZ)Ljava/util/List; fetchTicksInArea
	b ()V tick
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
net/minecraft/server/DataConverterOptionsAddTextBackground net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$1
	a (Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Ljava/lang/String;)D calculateBackground
dpw$1 net/minecraft/client/renderer/chunk/CompiledChunk$1
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)Z facesCanSeeEachother
	a (Lnet/minecraft/server/TextureType;)V setChanged
	c (Lnet/minecraft/server/TextureType;)V layerIsPresent
bvb net/minecraft/world/level/block/entity/package-info
net/minecraft/server/DragonControllerStrafe net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase
	b LOGGER
	c fireballCharge
	d currentPath
	e targetLocation
	f attackTarget
	g holdingPatternClockwise
	a (Lnet/minecraft/server/EntityLiving;)V setTarget
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
dvp$1 net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer$1
	a $SwitchMap$net$minecraft$world$entity$EquipmentSlot
bvk net/minecraft/world/level/block/grower/package-info
net/minecraft/server/ItemMonsterEgg net/minecraft/world/item/SpawnEggItem
	a BY_ID
	b color1
	c color2
	d defaultType
	a (I)I getColor
	a (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/ItemMonsterEgg; byId
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/EntityTypes;)Z spawnsEntity
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/EntityTypes; getType
	d ()Ljava/lang/Iterable; eggs
net/minecraft/server/EnchantmentTridentImpaling net/minecraft/world/item/enchantment/TridentImpalerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/server/EnumMonsterType;)F getDamageBonus
	b (I)I getMaxCost
bvl net/minecraft/world/level/block/package-info
net/minecraft/server/ServerConnection net/minecraft/server/network/ServerConnectionListener
	a SERVER_EVENT_GROUP
	b SERVER_EPOLL_EVENT_GROUP
	c running
	d LOGGER
	e server
	f channels
	g connections
	a ()Ljava/net/SocketAddress; startMemoryChannel
	a (Ljava/net/InetAddress;I)V startTcpServerListener
	a (Lnet/minecraft/server/NetworkManager;Lnet/minecraft/server/IChatBaseComponent;Lio/netty/util/concurrent/Future;)V lambda$tick$2
	a (Lnet/minecraft/server/ServerConnection;)Ljava/util/List; access$000
	b ()V stop
	b (Lnet/minecraft/server/ServerConnection;)Lnet/minecraft/server/MinecraftServer; access$100
	c ()V tick
	d ()Lnet/minecraft/server/MinecraftServer; getServer
	e ()Lio/netty/channel/epoll/EpollEventLoopGroup; lambda$static$1
	f ()Lio/netty/channel/nio/NioEventLoopGroup; lambda$static$0
net/minecraft/server/BiomeTheEndHighIsland net/minecraft/world/level/biome/EndHighlandsBiome
	a (F)I getSkyColor
bvr net/minecraft/world/level/block/piston/package-info
net/minecraft/server/WorldGenWitchHut net/minecraft/world/level/levelgen/structure/SwamplandHutPiece
	e spawnedWitch
	f spawnedCat
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;)V spawnCat
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
bvw net/minecraft/world/level/block/state/package-info
net/minecraft/server/ContainerBrewingStand$SlotBrewing net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
czi$a net/minecraft/client/gui/components/Button$OnPress
net/minecraft/server/WorldGenFeatureFlowerSwamp net/minecraft/world/level/levelgen/feature/SwampFlowerFeature
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getRandomFlower
dlb$a net/minecraft/client/particle/FallingDustParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleParamBlock;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dkp$1 net/minecraft/client/particle/BreakingItemParticle$1
net/minecraft/server/LootItemConditionLocationCheck net/minecraft/world/level/storage/loot/predicates/LocationCheck
	a predicate
	a (Lbg$a;)Lcrk$a; checkLocation
	a (Lnet/minecraft/server/LootItemConditionLocationCheck;)Lnet/minecraft/server/CriterionConditionLocation; access$000
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b (Lbg$a;)Lnet/minecraft/server/LootItemCondition; lambda$checkLocation$0
bwa net/minecraft/world/level/block/state/pattern/package-info
net/minecraft/server/BlockSponge net/minecraft/world/level/block/SpongeBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V tryAbsorbWater
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z removeWaterBreadthFirstSearch
ahq$1 net/minecraft/world/Snooper$1
	a this$0
bwe net/minecraft/world/level/block/state/predicate/package-info
bvt$1 net/minecraft/world/level/block/state/BlockState$1
net/minecraft/server/Raid$Status net/minecraft/world/entity/raid/Raid$RaidStatus
	e VALUES
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/Raid$Status; access$000
	b (Ljava/lang/String;)Lnet/minecraft/server/Raid$Status; getByName
net/minecraft/server/BiomeJungleMutated net/minecraft/world/level/biome/ModifiedJungleBiome
net/minecraft/server/CommandSaveOn net/minecraft/server/commands/SaveOnCommand
	a ERROR_ALREADY_ON
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
net/minecraft/server/PacketPlayOutSpawnEntity net/minecraft/network/protocol/game/ClientboundAddEntityPacket
	a id
	b uuid
	c x
	d y
	e z
	f xa
	g ya
	h za
	i xRot
	j yRot
	k type
	l data
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/UUID; getUUID
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()D getXa
	h ()D getYa
	i ()D getZa
	j ()I getxRot
	k ()I getyRot
	l ()Lnet/minecraft/server/EntityTypes; getType
	m ()I getData
net/minecraft/server/ControllerMove net/minecraft/world/entity/ai/control/MoveControl
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f strafeForwards
	g strafeRight
	h operation
	a ()V tick
	a (DDDD)V setWantedPosition
	a (FF)V strafe
	a (FFF)F rotlerp
	a (Lnet/minecraft/server/ControllerMove;)V copyFrom
	b ()Z hasWanted
	c ()D getSpeedModifier
	d ()D getWantedX
	e ()D getWantedY
	f ()D getWantedZ
net/minecraft/server/EnchantmentSilkTouch net/minecraft/world/item/enchantment/UntouchingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/ResourceManagerFallback net/minecraft/server/packs/resources/FallbackResourceManager
	a fallbacks
	b LOGGER
	c type
	a ()Ljava/util/Set; getNamespaces
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; listResources
	a (Lnet/minecraft/server/IResourcePack;)V add
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/IResource; getResource
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IResourcePack;)Ljava/io/InputStream; getWrappedResource
	b ()Lorg/apache/logging/log4j/Logger; access$000
	b (Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Lnet/minecraft/server/MinecraftKey;)Ljava/util/List; getResources
	d (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; getMetadataLocation
	e (Lnet/minecraft/server/MinecraftKey;)V validateLocation
	f (Lnet/minecraft/server/MinecraftKey;)Z isValidLocation
net/minecraft/server/LootItemConditionRandomChanceWithLooting net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition
	a percent
	b lootingMultiplier
	a ()Ljava/util/Set; getReferencedContextParams
	a (FF)Lcrk$a; randomChanceAndLootingBoost
	a (Lnet/minecraft/server/LootItemConditionRandomChanceWithLooting;)F access$000
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b (FF)Lnet/minecraft/server/LootItemCondition; lambda$randomChanceAndLootingBoost$0
	b (Lnet/minecraft/server/LootItemConditionRandomChanceWithLooting;)F access$100
net/minecraft/server/DataConverterDropChances net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$1
	c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
bvt$a net/minecraft/world/level/block/state/BlockState$Cache
	a DIRECTIONS
	b canOcclude
	c solidRender
	d propagatesSkylightDown
	e lightBlock
	f occlusionShapes
	g collisionShape
	h largeCollisionShape
	i isFaceSturdy
	j isCollisionShapeFullBlock
	a (Lbvt$a;)Z access$100
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Z lambda$new$0
	b (Lbvt$a;)I access$200
	c (Lbvt$a;)[Lnet/minecraft/server/VoxelShape; access$300
	d (Lbvt$a;)Z access$400
	e (Lbvt$a;)Z access$500
	f (Lbvt$a;)Z access$600
	g (Lbvt$a;)Lnet/minecraft/server/VoxelShape; access$700
	h (Lbvt$a;)[Z access$800
	i (Lbvt$a;)Z access$900
net/minecraft/server/RecipeHolder net/minecraft/world/inventory/RecipeHolder
	U_ ()Lnet/minecraft/server/IRecipe; getRecipeUsed
	a (Lnet/minecraft/server/IRecipe;)V setRecipeUsed
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/IRecipe;)Z setRecipeUsed
	b (Lnet/minecraft/server/EntityHuman;)V awardAndReset
net/minecraft/server/IStructureAccess net/minecraft/world/level/chunk/FeatureAccess
	a (Ljava/lang/String;)Lnet/minecraft/server/StructureStart; getStartForFeature
	a (Ljava/lang/String;J)V addReferenceForFeature
	a (Ljava/lang/String;Lnet/minecraft/server/StructureStart;)V setStartForFeature
	b (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
	b (Ljava/util/Map;)V setAllReferences
	v ()Ljava/util/Map; getAllReferences
net/minecraft/server/LootItemFunctionSetName net/minecraft/world/level/storage/loot/functions/SetNameFunction
	a LOGGER
	c name
	d resolutionContext
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; lambda$createResolver$0
	a (Lnet/minecraft/server/IChatBaseComponent;)Lcqg$a; setName
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/LootTableInfo$EntityTarget;)Lcqg$a; setName
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/LootTableInfo$EntityTarget;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$setName$3
	a (Lnet/minecraft/server/IChatBaseComponent;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$setName$2
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionSetName;)Lnet/minecraft/server/IChatBaseComponent; access$000
	a (Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/LootTableInfo$EntityTarget;)Ljava/util/function/UnaryOperator; createResolver
	b (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; lambda$createResolver$1
	b (Lnet/minecraft/server/LootItemFunctionSetName;)Lnet/minecraft/server/LootTableInfo$EntityTarget; access$100
net/minecraft/server/PacketPlayOutAutoRecipe net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket
	a containerId
	b recipe
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getRecipe
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getContainerId
net/minecraft/server/GameProfileBanList net/minecraft/server/players/UserBanList
	a ()[Ljava/lang/String; getUserList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/JsonListEntry; createEntry
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; find
	b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
bxc net/minecraft/world/level/block/state/properties/package-info
net/minecraft/server/VoxelShapeMergerList net/minecraft/world/phys/shapes/IndirectMerger
	a result
	b firstIndices
	c secondIndices
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Lcsu$a;)Z forMergedIndexes
bxe net/minecraft/world/level/border/BorderStatus
	a GROWING
	b SHRINKING
	c STATIONARY
	d color
	e $VALUES
	a ()I getColor
bxg net/minecraft/world/level/border/package-info
net/minecraft/server/PathfinderGoalMoveTowardsRestriction net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/server/WorldGenFeaturePillagerOutpostConfiguration net/minecraft/world/level/levelgen/feature/PillagerOutpostConfiguration
	a probability
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeaturePillagerOutpostConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/PathfinderFlying net/minecraft/world/level/pathfinder/FlyNodeEvaluator
	a ()V done
	a (DDD)Lnet/minecraft/server/PathDestination; getGoal
	a (III)Lnet/minecraft/server/PathPoint; getNode
	a (Lnet/minecraft/server/EntityInsentient;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;IIILnet/minecraft/server/EntityInsentient;IIIZZ)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/EntityInsentient;)V prepare
	a ([Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)I getNeighbors
	b ()Lnet/minecraft/server/PathPoint; getStart
net/minecraft/server/WorldGenFeatureDefinedStructurePoolSingle net/minecraft/world/level/levelgen/feature/structures/SinglePoolElement
	a location
	b processors
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; getType
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/DefinedStructureProcessor; lambda$new$0
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/DefinedStructureProcessor;)Ljava/lang/Object; lambda$getDynamic$1
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Z)Ljava/util/List; getDataMarkers
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;)Z place
	a (Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;)Lnet/minecraft/server/DefinedStructureInfo; getSettings
net/minecraft/server/Path net/minecraft/world/level/pathfinder/BinaryHeap
	a heap
	b size
	a ()V clear
	a (I)V upHeap
	a (Lnet/minecraft/server/PathPoint;)Lnet/minecraft/server/PathPoint; insert
	a (Lnet/minecraft/server/PathPoint;F)V changeCost
	b ()Lnet/minecraft/server/PathPoint; peek
	b (I)V downHeap
	b (Lnet/minecraft/server/PathPoint;)V remove
	c ()Lnet/minecraft/server/PathPoint; pop
	d ()I size
	e ()Z isEmpty
	f ()[Lnet/minecraft/server/PathPoint; getHeap
dew$a net/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient
	a this$0
	b ingredient
	c x
	d y
	a ()I getX
	b ()I getY
	c ()Lnet/minecraft/server/ItemStack; getItem
net/minecraft/server/WorldGenMineshaftPieces$WorldGenMineshaftCross net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCrossing
	b direction
	c isTwoFloored
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/StructureBoundingBox; findCrossing
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIII)V placeSupportPillar
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/PacketStatusInStart net/minecraft/network/protocol/status/ServerboundStatusRequestPacket
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketStatusInListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/MobSpawnerCat net/minecraft/world/entity/npc/CatSpawner
	a nextTick
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/World;)I spawnCat
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I spawnInHut
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)I spawnInVillage
	a (Lnet/minecraft/server/WorldServer;ZZ)I tick
net/minecraft/server/PersistentStructureLegacy net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler
	a CURRENT_TO_LEGACY_MAP
	b LEGACY_TO_CURRENT_MAP
	c hasLegacyData
	d dataMap
	e indexMap
	f legacyKeys
	g currentKeys
	a (II)Z isUnhandledStructureStart
	a (IILjava/lang/String;)Z hasLegacyStart
	a (J)V removeIndex
	a (Ljava/lang/String;)Lnet/minecraft/server/PersistentIndexed; lambda$populateCaches$3
	a (Ljava/util/HashMap;)V lambda$static$1
	a (Lnet/minecraft/server/DimensionManager;Lnet/minecraft/server/WorldPersistentData;)Lnet/minecraft/server/PersistentStructureLegacy; getLegacyStructureHandler
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; updateFromLegacy
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/NBTTagCompound; updateStructureStart
	a (Lnet/minecraft/server/WorldPersistentData;)V populateCaches
	b (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/Long2ObjectMap; lambda$populateCaches$2
	b (Ljava/util/HashMap;)V lambda$static$0
net/minecraft/server/CompletionProviders net/minecraft/commands/synchronization/SuggestionProviders
	a ASK_SERVER
	b ALL_RECIPES
	c AVAILABLE_SOUNDS
	d SUMMONABLE_ENTITIES
	e PROVIDERS_BY_NAME
	f DEFAULT_NAME
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$4
	a (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lnet/minecraft/server/MinecraftKey; getName
	a (Lnet/minecraft/server/EntityTypes;)Lcom/mojang/brigadier/Message; lambda$null$3
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; getProvider
	a (Lnet/minecraft/server/MinecraftKey;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; register
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$2
	b (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; safelySwap
	c (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$1
	d (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
net/minecraft/server/SourceBlock net/minecraft/core/BlockSourceImpl
	a level
	b pos
	a ()D x
	b ()D y
	c ()D z
	d ()Lnet/minecraft/server/BlockPosition; getPos
	e ()Lnet/minecraft/server/IBlockData; getBlockState
	f ()Lnet/minecraft/server/Material; getMaterial
	g ()Lnet/minecraft/server/TileEntity; getEntity
	h ()Lnet/minecraft/server/World; getLevel
bye net/minecraft/world/level/chunk/package-info
net/minecraft/server/PacketPlayOutOpenWindowMerchant net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket
	a containerId
	b offers
	c villagerLevel
	d villagerXp
	e showProgress
	f canRestock
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/MerchantRecipeList; getOffers
	d ()I getVillagerLevel
	e ()I getVillagerXp
	f ()Z showProgress
	g ()Z canRestock
dkp$b net/minecraft/client/particle/BreakingItemParticle$SlimeProvider
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
byl net/minecraft/world/level/chunk/storage/package-info
dkp$a net/minecraft/client/particle/BreakingItemParticle$Provider
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleParamItem;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
abg$1 net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$1
	a $SwitchMap$net$minecraft$util$datafix$fixes$ChunkPalettedStorageFix$Direction$Axis
net/minecraft/server/ItemDye net/minecraft/world/item/DyeItem
	a ITEM_BY_COLOR
	b dyeColor
	a (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/ItemDye; byColor
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;)Z interactEnemy
	d ()Lnet/minecraft/server/EnumColor; getDyeColor
dkp$c net/minecraft/client/particle/BreakingItemParticle$SnowballProvider
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/RecipeSerializerComplex net/minecraft/world/item/crafting/SimpleRecipeSerializer
	u constructor
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
byt net/minecraft/world/level/dimension/end/package-info
net/minecraft/server/BlockPropertyTrackPosition net/minecraft/world/level/block/state/properties/RailShape
	k data
	l name
	m $VALUES
	a ()I getData
	b ()Ljava/lang/String; getName
	c ()Z isAscending
	m ()Ljava/lang/String; getSerializedName
net/minecraft/server/CustomFunctionCallbackTag net/minecraft/world/level/timers/FunctionTagCallback
	a tagId
	a (Ljava/lang/Object;Lnet/minecraft/server/CustomFunctionCallbackTimerQueue;J)V handle
	a (Lnet/minecraft/server/CustomFunctionCallbackTag;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/CustomFunctionCallbackTimerQueue;J)V handle
byu net/minecraft/world/level/dimension/package-info
net/minecraft/server/LootIntegerLimit net/minecraft/world/level/storage/loot/IntLimiter
	a min
	b max
	c op
	a (I)Lnet/minecraft/server/LootIntegerLimit; lowerBound
	a (II)Lnet/minecraft/server/LootIntegerLimit; clamp
	a (III)I lambda$new$3
	a (Lnet/minecraft/server/LootIntegerLimit;)Ljava/lang/Integer; access$100
	b (I)Lnet/minecraft/server/LootIntegerLimit; upperBound
	b (II)I lambda$new$2
	b (Lnet/minecraft/server/LootIntegerLimit;)Ljava/lang/Integer; access$200
	c (I)I lambda$new$0
	c (II)I lambda$new$1
dls$1 net/minecraft/client/particle/PlayerCloudParticle$1
net/minecraft/server/BlockPropertyRedstoneSide net/minecraft/world/level/block/state/properties/RedstoneSide
	d name
	e $VALUES
	m ()Ljava/lang/String; getSerializedName
dme$a net/minecraft/client/particle/TerrainParticle$Provider
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleParamBlock;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/WorldGenFeatureSeaGrass net/minecraft/world/level/levelgen/feature/SeagrassFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureSeaGrassConfiguration;)Z place
net/minecraft/server/SensorInteractableDoors net/minecraft/world/entity/ai/sensing/InteractableDoorsSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
ax$b net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance
	a item
	a (Lnet/minecraft/server/CriterionConditionItem;)Lax$b; filledBucket
	a (Lnet/minecraft/server/ItemStack;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/server/NBTTagFloat net/minecraft/nbt/FloatTag
	a ()B getId
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)V load
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTBase; copy
	c ()Lnet/minecraft/server/NBTTagFloat; copy
	d ()J getAsLong
	e ()I getAsInt
	f ()S getAsShort
	g ()B getAsByte
	h ()D getAsDouble
	i ()F getAsFloat
	j ()Ljava/lang/Number; getAsNumber
ax$a net/minecraft/advancements/critereon/FilledBucketTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/ItemStack;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
net/minecraft/server/NBTTagEnd net/minecraft/nbt/EndTag
	a ()B getId
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)V load
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTBase; copy
	c ()Lnet/minecraft/server/NBTTagEnd; copy
avi$d net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal
	a this$0
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
net/minecraft/server/CommandPublish net/minecraft/server/commands/PublishCommand
	a ERROR_FAILED
	b ERROR_ALREADY_PUBLISHED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I publish
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
bzu net/minecraft/world/level/levelgen/carver/package-info
avi$b net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal
	a this$0
	b copyOwnerTargeting
	a ()Z canUse
	c ()V start
avi$c net/minecraft/world/entity/monster/Vex$VexMoveControl
	i this$0
	a ()V tick
net/minecraft/server/BlockRedstoneTorch$RedstoneUpdateInfo net/minecraft/world/level/block/RedstoneTorchBlock$Toggle
	a pos
	b when
	a (Lnet/minecraft/server/BlockRedstoneTorch$RedstoneUpdateInfo;)J access$000
	b (Lnet/minecraft/server/BlockRedstoneTorch$RedstoneUpdateInfo;)Lnet/minecraft/server/BlockPosition; access$100
avi$a net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal
	a this$0
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
com/mojang/realmsclient/dto/WorldTemplate$a com/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType
	a WORLD_TEMPLATE
	b MINIGAME
	c ADVENTUREMAP
	d EXPERIENCE
	e INSPIRATION
	f $VALUES
net/minecraft/server/ContainerBlastFurnace net/minecraft/world/inventory/BlastFurnaceMenu
bj$a net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate
	a amplifier
	b duration
	c ambient
	d visible
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonObject;)Lbj$a; fromJson
	a (Lnet/minecraft/server/MobEffect;)Z matches
net/minecraft/server/ItemFishingRod net/minecraft/world/item/FishingRodItem
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$use$1
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)F lambda$new$0
	c ()I getEnchantmentValue
net/minecraft/server/EntityHanging net/minecraft/world/entity/decoration/HangingEntity
	b HANGING_ENTITY
	blockPosition pos
	e checkInterval
	a (I)D offs
	a (Lnet/minecraft/server/Entity;)V dropItem
	a (Lnet/minecraft/server/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/EnumBlockMirror;)F mirror
	a (Lnet/minecraft/server/EnumBlockRotation;)F rotate
	a (Lnet/minecraft/server/EnumMoveType;Lnet/minecraft/server/Vec3D;)V move
	a (Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityItem; spawnAtLocation
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aH ()Z isPickable
	aJ ()Z repositionEntityAfterLoad
	b (Lnet/minecraft/server/Entity;)Z lambda$static$0
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bI ()Lnet/minecraft/server/EnumDirection; getDirection
	c (DDD)V setPos
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	f (DDD)V push
	getBlockPosition ()Lnet/minecraft/server/BlockPosition; getPos
	getHangingHeight ()I getHeight
	getHangingWidth ()I getWidth
	h ()V tick
	playPlaceSound ()V playPlacementSound
	t (Lnet/minecraft/server/Entity;)Z skipAttackInteraction
	u_ ()V defineSynchedData
	updateBoundingBox ()V recalculateBoundingBox
	x_ ()V refreshDimensions
cpl$a net/minecraft/world/level/storage/loot/entries/EmptyLootItem$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEmpty; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
net/minecraft/server/WorldGenStage net/minecraft/world/level/levelgen/GenerationStep
net/minecraft/server/AreaTransformerIdentity net/minecraft/world/level/newbiome/layer/traits/DimensionOffset0Transformer
	a (I)I getParentX
	b (I)I getParentY
net/minecraft/server/WorldGenDecoratorNetherFire net/minecraft/world/level/levelgen/placement/nether/HellFireDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/LightEngineStorageArray net/minecraft/world/level/lighting/DataLayerStorageMap
	a map
	b lastSectionKeys
	c lastSections
	d cacheEnabled
	a (J)V copyDataLayer
	a (JLnet/minecraft/server/NibbleArray;)V setLayer
	b ()Lnet/minecraft/server/LightEngineStorageArray; copy
	b (J)Z hasLayer
	c ()V clearCache
	c (J)Lnet/minecraft/server/NibbleArray; getLayer
	d ()V disableCache
	d (J)Lnet/minecraft/server/NibbleArray; removeLayer
ag$b net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance
	a from
	b to
	a (Lnet/minecraft/server/DimensionManager;)Lag$b; changedDimensionTo
	a (Lnet/minecraft/server/DimensionManager;Lnet/minecraft/server/DimensionManager;)Lag$b; changedDimension
	b ()Lcom/google/gson/JsonElement; serializeToJson
	b (Lnet/minecraft/server/DimensionManager;)Lag$b; changedDimensionFrom
	b (Lnet/minecraft/server/DimensionManager;Lnet/minecraft/server/DimensionManager;)Z matches
	c ()Lag$b; changedDimension
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector7 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/ContainerWorkbench net/minecraft/world/inventory/CraftingMenu
	containerAccess access
	craftInventory craftSlots
	f player
	resultInventory resultSlots
	a (ILnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/InventoryCraftResult;)V slotChangedCraftingGrid
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$removed$1
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/IRecipe;)Z recipeMatches
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$quickMoveStack$2
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$slotsChanged$0
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()V clearCraftingContent
	f ()I getResultSlotIndex
	g ()I getGridWidth
	h ()I getGridHeight
	i ()I getSize
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector6 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXYRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
czz$a net/minecraft/client/gui/components/SubtitleOverlay$Subtitle
	a this$0
	b text
	c time
	d location
	a ()Ljava/lang/String; getText
	a (Lnet/minecraft/server/Vec3D;)V refresh
	b ()J getTime
	c ()Lnet/minecraft/server/Vec3D; getLocation
ag$a net/minecraft/advancements/critereon/ChangeDimensionTrigger$PlayerListeners
	a player
	b listeners
	a ()Z isEmpty
	a (Lnet/minecraft/server/DimensionManager;Lnet/minecraft/server/DimensionManager;)V trigger
	a (Lx$a;)V addListener
	b (Lx$a;)V removeListener
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector1 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleTopRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/ITickable net/minecraft/world/level/block/entity/TickableBlockEntity
net/minecraft/server/WorldGenLiquids net/minecraft/world/level/levelgen/feature/SpringFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureFlowingConfiguration;)Z place
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector5 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
dlb$1 net/minecraft/client/particle/FallingDustParticle$1
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector4 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYZRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/WorldGenCactus net/minecraft/world/level/levelgen/feature/CactusFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/PacketEncoder net/minecraft/network/PacketEncoder
	a LOGGER
	b MARKER
	c flow
	a (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/server/Packet;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector3 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleZRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/WorldGenFeatureDecoratorEmptyConfiguration net/minecraft/world/level/levelgen/feature/NoneDecoratorConfiguration
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureDecoratorEmptyConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector2 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
dls$b net/minecraft/client/particle/PlayerCloudParticle$SneezeProvider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
dls$a net/minecraft/client/particle/PlayerCloudParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldln; createParticle
net/minecraft/server/ItemEgg net/minecraft/world/item/EggItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/DataConverterFlattenState net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
net/minecraft/server/PacketPlayOutPlayerInfo$PlayerInfoData net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate
	a this$0
	b latency
	c gameMode
	d profile
	e displayName
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	b ()I getLatency
	c ()Lnet/minecraft/server/EnumGamemode; getGameMode
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/EnumChatFormat net/minecraft/ChatFormatting
	A isFormat
	B toString
	C id
	D color
	E $VALUES
	character code
	w FORMATTING_BY_NAME
	x STRIP_FORMATTING_PATTERN
	y name
	a ()C getChar
	a (C)Lnet/minecraft/server/EnumChatFormat; getByCode
	a (I)Lnet/minecraft/server/EnumChatFormat; getById
	a (Ljava/lang/String;)Ljava/lang/String; getLastColors
	a (Lnet/minecraft/server/EnumChatFormat;)Lnet/minecraft/server/EnumChatFormat; lambda$static$1
	a (ZZ)Ljava/util/Collection; getNames
	b ()I getId
	b (Ljava/lang/String;)Ljava/lang/String; stripFormatting
	b (Lnet/minecraft/server/EnumChatFormat;)Ljava/lang/String; lambda$static$0
	c (Ljava/lang/String;)Lnet/minecraft/server/EnumChatFormat; getByName
	d ()Z isColor
	d (Ljava/lang/String;)Ljava/lang/String; cleanName
	e ()Ljava/lang/Integer; getColor
	f ()Z shouldReset
	g ()Ljava/lang/String; getName
net/minecraft/server/WorldGenFeatureChorusPlant net/minecraft/world/level/levelgen/feature/ChorusPlantFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/EntitySize net/minecraft/world/entity/EntityDimensions
	c fixed
	a (F)Lnet/minecraft/server/EntitySize; scale
	a (FF)Lnet/minecraft/server/EntitySize; scale
	b (FF)Lnet/minecraft/server/EntitySize; scalable
	c (FF)Lnet/minecraft/server/EntitySize; fixed
dws$1 net/minecraft/client/renderer/texture/HttpTexture$1
	a this$0
	a (Ljava/io/InputStream;)V lambda$run$0
net/minecraft/server/LootTableInfo$Builder net/minecraft/world/level/storage/loot/LootContext$Builder
	a level
	b params
	c dynamicDrops
	d random
	e luck
	a ()Lnet/minecraft/server/WorldServer; getLevel
	a (F)Lnet/minecraft/server/LootTableInfo$Builder; withLuck
	a (J)Lnet/minecraft/server/LootTableInfo$Builder; withOptionalRandomSeed
	a (JLjava/util/Random;)Lnet/minecraft/server/LootTableInfo$Builder; withOptionalRandomSeed
	a (Ljava/util/Random;)Lnet/minecraft/server/LootTableInfo$Builder; withRandom
	a (Lnet/minecraft/server/LootContextParameter;)Ljava/lang/Object; getParameter
	a (Lnet/minecraft/server/MinecraftKey;Lcoy$b;)Lnet/minecraft/server/LootTableInfo$Builder; withDynamicDrop
	b (Lnet/minecraft/server/LootContextParameter;)Ljava/lang/Object; getOptionalParameter
	build (Lnet/minecraft/server/LootContextParameterSet;)Lnet/minecraft/server/LootTableInfo; create
	set (Lnet/minecraft/server/LootContextParameter;Ljava/lang/Object;)Lnet/minecraft/server/LootTableInfo$Builder; withParameter
	setOptional (Lnet/minecraft/server/LootContextParameter;Ljava/lang/Object;)Lnet/minecraft/server/LootTableInfo$Builder; withOptionalParameter
net/minecraft/server/WorldGenSurfaceEmpty net/minecraft/world/level/levelgen/surfacebuilders/NopeSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/ScheduleBuilder net/minecraft/world/entity/schedule/ScheduleBuilder
	a schedule
	b transitions
	a ()Lnet/minecraft/server/Schedule; build
	a (ILnet/minecraft/server/Activity;)Lnet/minecraft/server/ScheduleBuilder; changeActivityAt
	a (Laxr$a;)V lambda$build$1
	a (Laxr$a;Lnet/minecraft/server/ScheduleActivity;)V lambda$null$0
net/minecraft/server/ForcedChunk net/minecraft/world/level/ForcedChunksSavedData
	a chunks
	a ()Lit/unimi/dsi/fastutil/longs/LongSet; getChunks
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
net/minecraft/server/ArgumentNBTTag net/minecraft/commands/arguments/CompoundTagArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/ArgumentNBTTag; compoundTag
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/NBTTagCompound; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/NBTTagCompound; getCompoundTag
dny$e net/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g FLIP_DOWN
	h FLIP_UP
	i FLIP_NORTH
	j FLIP_SOUTH
	k FLIP_WEST
	l FLIP_EAST
	m shape
	n $VALUES
	a (Ldny$e;)I access$1000
cfo$c net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$Placer
	a maxDepth
	b factory
	c chunkGenerator
	d structureManager
	e pieces
	f random
	g placing
	a (Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/DefinedStructure$BlockInfo;)I lambda$tryPlacingChildren$0
	a (Lnet/minecraft/server/WorldGenFeaturePillagerOutpostPoolPiece;Ljava/util/concurrent/atomic/AtomicReference;II)V tryPlacingChildren
cfo$b net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceState
	a piece
	b free
	c boundsTop
	d depth
	a (Lcfo$b;)Lnet/minecraft/server/WorldGenFeaturePillagerOutpostPoolPiece; access$100
	b (Lcfo$b;)Ljava/util/concurrent/atomic/AtomicReference; access$200
	c (Lcfo$b;)I access$300
	d (Lcfo$b;)I access$400
net/minecraft/server/ServerPing$Serializer net/minecraft/network/protocol/status/ServerStatus$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/ServerPing; deserialize
	a (Lnet/minecraft/server/ServerPing;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
dbp$a$a net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry
	a this$1
	b key
	a (Ldbp$a$a;)Lnet/minecraft/server/MinecraftKey; access$100
cfo$a net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceFactory
net/minecraft/server/ItemEndCrystal net/minecraft/world/item/EndCrystalItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
net/minecraft/server/WorldGenDecoratorSolidTopNoise net/minecraft/world/level/levelgen/placement/TopSolidHeightMapNoiseBasedDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/WorldGenDecoratorNoiseConfiguration;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorNoiseConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/ChunkMapDistance net/minecraft/server/level/DistanceManager
	a LOGGER
	b PLAYER_TICKET_LEVEL
	c playersPerChunk
	currentTick ticketTickCounter
	e ticketTracker
	f naturalSpawnChunkCounter
	g playerTicketManager
	i ticketThrottler
	j ticketThrottlerInput
	k ticketThrottlerReleaser
	l ticketsToRelease
	m mainThreadExecutor
	pendingChunkUpdates chunksToUpdateFutures
	a (I)V updatePlayerTickets
	a (J)Z isChunkToRemove
	a (JILnet/minecraft/server/PlayerChunk;I)Lnet/minecraft/server/PlayerChunk; updateChunkScheduling
	a (JLcom/mojang/datafixers/util/Either;)V lambda$runAllUpdates$5
	a (Lit/unimi/dsi/fastutil/objects/ObjectSortedSet;)I getTicketLevelAt
	a (Ljava/lang/String;)V dumpTickets
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V updateChunkForced
	a (Lnet/minecraft/server/ChunkMapDistance;)Lit/unimi/dsi/fastutil/longs/Long2ObjectMap; access$000
	a (Lnet/minecraft/server/ChunkMapDistance;JLnet/minecraft/server/Ticket;)V access$800
	a (Lnet/minecraft/server/PlayerChunkMap;)Z runAllUpdates
	a (Lnet/minecraft/server/PlayerChunkMap;Lnet/minecraft/server/PlayerChunk;)V lambda$runAllUpdates$1
	a (Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/EntityPlayer;)V addPlayer
	a (Lnet/minecraft/server/Ticket;)Z lambda$runAllUpdates$2
	a (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V addTicket
	addTicket (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V addRegionTicket
	b ()I getNaturalSpawnChunkCount
	b (J)Lnet/minecraft/server/PlayerChunk; getChunk
	b (Lnet/minecraft/server/ChunkMapDistance;)J access$300
	b (Lnet/minecraft/server/ChunkMapDistance;JLnet/minecraft/server/Ticket;)V access$900
	b (Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/EntityPlayer;)V removePlayer
	b (Lnet/minecraft/server/Ticket;)Z lambda$purgeStaleTickets$0
	b (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V removeTicket
	c ()Ljava/lang/String; getDebugStatus
	c (J)Ljava/lang/String; getTicketDebugString
	c (Lnet/minecraft/server/ChunkMapDistance;)Lnet/minecraft/server/Mailbox; access$400
	d ()Lorg/apache/logging/log4j/Logger; access$100
	d (J)Z hasPlayersNearby
	d (Lnet/minecraft/server/ChunkMapDistance;)Lnet/minecraft/server/Mailbox; access$500
	e ()I access$200
	e (J)Lit/unimi/dsi/fastutil/objects/ObjectSortedSet; getTickets
	e (Lnet/minecraft/server/ChunkMapDistance;)Lnet/minecraft/server/ChunkTaskQueueSorter; access$600
	f ()V lambda$null$3
	f (J)Lit/unimi/dsi/fastutil/objects/ObjectSet; lambda$addPlayer$7
	f (Lnet/minecraft/server/ChunkMapDistance;)Ljava/util/concurrent/Executor; access$700
	g (J)Lit/unimi/dsi/fastutil/objects/ObjectSortedSet; lambda$getTickets$6
	g (Lnet/minecraft/server/ChunkMapDistance;)Lit/unimi/dsi/fastutil/longs/LongSet; access$1000
	h (J)V lambda$null$4
	h (Lnet/minecraft/server/ChunkMapDistance;)Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap; access$1100
	i (Lnet/minecraft/server/ChunkMapDistance;)Ljava/util/Set; access$1200
	purgeTickets ()V purgeStaleTickets
	removeTicket (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V removeRegionTicket
net/minecraft/server/SpawnerCreature net/minecraft/world/level/NaturalSpawner
	a LOGGER
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/EnumCreatureType;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BiomeBase$BiomeMeta; getRandomSpawnMobAt
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/BiomeBase$BiomeMeta;Lnet/minecraft/server/BlockPosition;)Z canSpawnMobAt
	a (Lnet/minecraft/server/EntityPositionTypes$Surface;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isSpawnPositionOk
	a (Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/World;Lnet/minecraft/server/Chunk;Lnet/minecraft/server/BlockPosition;)V spawnCategoryForChunk
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BiomeBase;IILjava/util/Random;)V spawnMobsForChunkGeneration
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z isValidEmptySpawnBlock
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/EntityTypes;II)Lnet/minecraft/server/BlockPosition; getTopNonCollidingPos
	getRandomPosition (Lnet/minecraft/server/World;Lnet/minecraft/server/Chunk;)Lnet/minecraft/server/BlockPosition; getRandomPosWithin
net/minecraft/server/PathfinderGoalWater net/minecraft/world/entity/ai/goal/TryFindWaterGoal
	a mob
	a ()Z canUse
	c ()V start
cqo$a net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetDamage; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetDamage;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/ChatComponentScore net/minecraft/network/chat/ScoreComponent
	b name
	c selector
	d objective
	e value
	a (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/lang/String; getEntityName
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatBaseComponent; resolve
	b (Ljava/lang/String;)V setValue
	b (Lnet/minecraft/server/CommandListenerWrapper;)V resolve
	d ()Ljava/lang/String; getContents
	g ()Lnet/minecraft/server/IChatBaseComponent; copy
	i ()Ljava/lang/String; getName
	j ()Lnet/minecraft/server/EntitySelector; getSelector
	k ()Ljava/lang/String; getObjective
	l ()Lnet/minecraft/server/ChatComponentScore; copy
dny$a net/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g corners
	h doNonCubicWeight
	i vert0Weights
	j vert1Weights
	k vert2Weights
	l vert3Weights
	m BY_FACING
	n $VALUES
	a (Ldny$a;)[Lnet/minecraft/server/EnumDirection; access$300
	a (Lnet/minecraft/server/EnumDirection;)Ldny$a; fromFacing
	a ([Ldny$a;)V lambda$static$0
	b (Ldny$a;)Z access$400
	c (Ldny$a;)[Ldny$e; access$900
	d (Ldny$a;)[Ldny$e; access$1100
	e (Ldny$a;)[Ldny$e; access$1200
	f (Ldny$a;)[Ldny$e; access$1300
bft$12 net/minecraft/world/item/enchantment/EnchantmentCategory$7
	a (Lnet/minecraft/server/Item;)Z canEnchant
net/minecraft/server/BiomeDesertHills net/minecraft/world/level/biome/DesertHillsBiome
dny$b net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace
	a this$0
	b brightness
	c lightmap
	a (IIII)I blend
	a (IIIIFFFF)I blend
	a (Ldny$b;)[I access$000
	a (Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;[FLjava/util/BitSet;)V calculate
	b (Ldny$b;)[F access$100
bft$11 net/minecraft/world/item/enchantment/EnchantmentCategory$6
	a (Lnet/minecraft/server/Item;)Z canEnchant
dny$c net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g vert0
	h vert1
	i vert2
	j vert3
	k BY_FACING
	l $VALUES
	a (Ldny$c;)I access$500
	a (Lnet/minecraft/server/EnumDirection;)Ldny$c; fromFacing
	a ([Ldny$c;)V lambda$static$0
	b (Ldny$c;)I access$600
	c (Ldny$c;)I access$700
	d (Ldny$c;)I access$800
bft$14 net/minecraft/world/item/enchantment/EnchantmentCategory$9
	a (Lnet/minecraft/server/Item;)Z canEnchant
dny$d net/minecraft/client/renderer/block/ModelBlockRenderer$Cache
	a enabled
	b colorCache
	c brightnessCache
	a ()V enable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;)I getLightColor
	b ()V disable
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IIBlockAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
	c ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap; lambda$new$1
	d ()Lit/unimi/dsi/fastutil/longs/Long2IntLinkedOpenHashMap; lambda$new$0
bft$13 net/minecraft/world/item/enchantment/EnchantmentCategory$8
	a (Lnet/minecraft/server/Item;)Z canEnchant
ek$1 net/minecraft/commands/synchronization/ArgumentTypes$1
bft$10 net/minecraft/world/item/enchantment/EnchantmentCategory$5
	a (Lnet/minecraft/server/Item;)Z canEnchant
net/minecraft/server/SoundEffects net/minecraft/sounds/SoundEvents
	BLOCK_ANVIL_BREAK ANVIL_BREAK
	BLOCK_ANVIL_DESTROY ANVIL_DESTROY
	BLOCK_ANVIL_FALL ANVIL_FALL
	BLOCK_ANVIL_HIT ANVIL_HIT
	BLOCK_ANVIL_LAND ANVIL_LAND
	BLOCK_ANVIL_PLACE ANVIL_PLACE
	BLOCK_ANVIL_STEP ANVIL_STEP
	BLOCK_ANVIL_USE ANVIL_USE
	BLOCK_BAMBOO_BREAK BAMBOO_BREAK
	BLOCK_BAMBOO_FALL BAMBOO_FALL
	BLOCK_BAMBOO_HIT BAMBOO_HIT
	BLOCK_BAMBOO_PLACE BAMBOO_PLACE
	BLOCK_BAMBOO_SAPLING_BREAK BAMBOO_SAPLING_BREAK
	BLOCK_BAMBOO_SAPLING_HIT BAMBOO_SAPLING_HIT
	BLOCK_BAMBOO_SAPLING_PLACE BAMBOO_SAPLING_PLACE
	BLOCK_BAMBOO_STEP BAMBOO_STEP
	BLOCK_BARREL_CLOSE BARREL_CLOSE
	BLOCK_BARREL_OPEN BARREL_OPEN
	BLOCK_BEACON_ACTIVATE BEACON_ACTIVATE
	BLOCK_BEACON_AMBIENT BEACON_AMBIENT
	BLOCK_BEACON_DEACTIVATE BEACON_DEACTIVATE
	BLOCK_BEACON_POWER_SELECT BEACON_POWER_SELECT
	BLOCK_BELL_RESONATE BELL_RESONATE
	BLOCK_BELL_USE BELL_BLOCK
	BLOCK_BLASTFURNACE_FIRE_CRACKLE BLASTFURNACE_FIRE_CRACKLE
	BLOCK_BREWING_STAND_BREW BREWING_STAND_BREW
	BLOCK_BUBBLE_COLUMN_BUBBLE_POP BUBBLE_COLUMN_BUBBLE_POP
	BLOCK_BUBBLE_COLUMN_UPWARDS_AMBIENT BUBBLE_COLUMN_UPWARDS_AMBIENT
	BLOCK_BUBBLE_COLUMN_UPWARDS_INSIDE BUBBLE_COLUMN_UPWARDS_INSIDE
	BLOCK_BUBBLE_COLUMN_WHIRLPOOL_AMBIENT BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
	BLOCK_BUBBLE_COLUMN_WHIRLPOOL_INSIDE BUBBLE_COLUMN_WHIRLPOOL_INSIDE
	BLOCK_CAMPFIRE_CRACKLE CAMPFIRE_CRACKLE
	BLOCK_CHEST_CLOSE CHEST_CLOSE
	BLOCK_CHEST_LOCKED CHEST_LOCKED
	BLOCK_CHEST_OPEN CHEST_OPEN
	BLOCK_CHORUS_FLOWER_DEATH CHORUS_FLOWER_DEATH
	BLOCK_CHORUS_FLOWER_GROW CHORUS_FLOWER_GROW
	BLOCK_COMPARATOR_CLICK COMPARATOR_CLICK
	BLOCK_COMPOSTER_EMPTY COMPOSTER_EMPTY
	BLOCK_COMPOSTER_FILL COMPOSTER_FILL
	BLOCK_COMPOSTER_FILL_SUCCESS COMPOSTER_FILL_SUCCESS
	BLOCK_COMPOSTER_READY COMPOSTER_READY
	BLOCK_CONDUIT_ACTIVATE CONDUIT_ACTIVATE
	BLOCK_CONDUIT_AMBIENT CONDUIT_AMBIENT
	BLOCK_CONDUIT_AMBIENT_SHORT CONDUIT_AMBIENT_SHORT
	BLOCK_CONDUIT_ATTACK_TARGET CONDUIT_ATTACK_TARGET
	BLOCK_CONDUIT_DEACTIVATE CONDUIT_DEACTIVATE
	BLOCK_CORAL_BLOCK_BREAK CORAL_BLOCK_BREAK
	BLOCK_CORAL_BLOCK_FALL CORAL_BLOCK_FALL
	BLOCK_CORAL_BLOCK_HIT CORAL_BLOCK_HIT
	BLOCK_CORAL_BLOCK_PLACE CORAL_BLOCK_PLACE
	BLOCK_CORAL_BLOCK_STEP CORAL_BLOCK_STEP
	BLOCK_CROP_BREAK CROP_BREAK
	BLOCK_DISPENSER_DISPENSE DISPENSER_DISPENSE
	BLOCK_DISPENSER_FAIL DISPENSER_FAIL
	BLOCK_DISPENSER_LAUNCH DISPENSER_LAUNCH
	BLOCK_ENCHANTMENT_TABLE_USE ENCHANTMENT_TABLE_USE
	BLOCK_ENDER_CHEST_CLOSE ENDER_CHEST_CLOSE
	BLOCK_ENDER_CHEST_OPEN ENDER_CHEST_OPEN
	BLOCK_END_GATEWAY_SPAWN END_GATEWAY_SPAWN
	BLOCK_END_PORTAL_FRAME_FILL END_PORTAL_FRAME_FILL
	BLOCK_END_PORTAL_SPAWN END_PORTAL_SPAWN
	BLOCK_FENCE_GATE_CLOSE FENCE_GATE_CLOSE
	BLOCK_FENCE_GATE_OPEN FENCE_GATE_OPEN
	BLOCK_FIRE_AMBIENT FIRE_AMBIENT
	BLOCK_FIRE_EXTINGUISH FIRE_EXTINGUISH
	BLOCK_FURNACE_FIRE_CRACKLE FURNACE_FIRE_CRACKLE
	BLOCK_GLASS_BREAK GLASS_BREAK
	BLOCK_GLASS_FALL GLASS_FALL
	BLOCK_GLASS_HIT GLASS_HIT
	BLOCK_GLASS_PLACE GLASS_PLACE
	BLOCK_GLASS_STEP GLASS_STEP
	BLOCK_GRASS_BREAK GRASS_BREAK
	BLOCK_GRASS_FALL GRASS_FALL
	BLOCK_GRASS_HIT GRASS_HIT
	BLOCK_GRASS_PLACE GRASS_PLACE
	BLOCK_GRASS_STEP GRASS_STEP
	BLOCK_GRAVEL_BREAK GRAVEL_BREAK
	BLOCK_GRAVEL_FALL GRAVEL_FALL
	BLOCK_GRAVEL_HIT GRAVEL_HIT
	BLOCK_GRAVEL_PLACE GRAVEL_PLACE
	BLOCK_GRAVEL_STEP GRAVEL_STEP
	BLOCK_GRINDSTONE_USE GRINDSTONE_USE
	BLOCK_IRON_DOOR_CLOSE IRON_DOOR_CLOSE
	BLOCK_IRON_DOOR_OPEN IRON_DOOR_OPEN
	BLOCK_IRON_TRAPDOOR_CLOSE IRON_TRAPDOOR_CLOSE
	BLOCK_IRON_TRAPDOOR_OPEN IRON_TRAPDOOR_OPEN
	BLOCK_LADDER_BREAK LADDER_BREAK
	BLOCK_LADDER_FALL LADDER_FALL
	BLOCK_LADDER_HIT LADDER_HIT
	BLOCK_LADDER_PLACE LADDER_PLACE
	BLOCK_LADDER_STEP LADDER_STEP
	BLOCK_LANTERN_BREAK LANTERN_BREAK
	BLOCK_LANTERN_FALL LANTERN_FALL
	BLOCK_LANTERN_HIT LANTERN_HIT
	BLOCK_LANTERN_PLACE LANTERN_PLACE
	BLOCK_LANTERN_STEP LANTERN_STEP
	BLOCK_LAVA_AMBIENT LAVA_AMBIENT
	BLOCK_LAVA_EXTINGUISH LAVA_EXTINGUISH
	BLOCK_LAVA_POP LAVA_POP
	BLOCK_LEVER_CLICK LEVER_CLICK
	BLOCK_LILY_PAD_PLACE LILY_PAD_PLACE
	BLOCK_METAL_BREAK METAL_BREAK
	BLOCK_METAL_FALL METAL_FALL
	BLOCK_METAL_HIT METAL_HIT
	BLOCK_METAL_PLACE METAL_PLACE
	BLOCK_METAL_PRESSURE_PLATE_CLICK_OFF METAL_PRESSURE_PLATE_CLICK_OFF
	BLOCK_METAL_PRESSURE_PLATE_CLICK_ON METAL_PRESSURE_PLATE_CLICK_ON
	BLOCK_METAL_STEP METAL_STEP
	BLOCK_NETHER_WART_BREAK NETHER_WART_BREAK
	BLOCK_NOTE_BLOCK_BANJO NOTE_BLOCK_BANJO
	BLOCK_NOTE_BLOCK_BASEDRUM NOTE_BLOCK_BASEDRUM
	BLOCK_NOTE_BLOCK_BASS NOTE_BLOCK_BASS
	BLOCK_NOTE_BLOCK_BELL NOTE_BLOCK_BELL
	BLOCK_NOTE_BLOCK_BIT NOTE_BLOCK_BIT
	BLOCK_NOTE_BLOCK_CHIME NOTE_BLOCK_CHIME
	BLOCK_NOTE_BLOCK_COW_BELL NOTE_BLOCK_COW_BELL
	BLOCK_NOTE_BLOCK_DIDGERIDOO NOTE_BLOCK_DIDGERIDOO
	BLOCK_NOTE_BLOCK_FLUTE NOTE_BLOCK_FLUTE
	BLOCK_NOTE_BLOCK_GUITAR NOTE_BLOCK_GUITAR
	BLOCK_NOTE_BLOCK_HARP NOTE_BLOCK_HARP
	BLOCK_NOTE_BLOCK_HAT NOTE_BLOCK_HAT
	BLOCK_NOTE_BLOCK_IRON_XYLOPHONE NOTE_BLOCK_IRON_XYLOPHONE
	BLOCK_NOTE_BLOCK_PLING NOTE_BLOCK_PLING
	BLOCK_NOTE_BLOCK_SNARE NOTE_BLOCK_SNARE
	BLOCK_NOTE_BLOCK_XYLOPHONE NOTE_BLOCK_XYLOPHONE
	BLOCK_PISTON_CONTRACT PISTON_CONTRACT
	BLOCK_PISTON_EXTEND PISTON_EXTEND
	BLOCK_PORTAL_AMBIENT PORTAL_AMBIENT
	BLOCK_PORTAL_TRAVEL PORTAL_TRAVEL
	BLOCK_PORTAL_TRIGGER PORTAL_TRIGGER
	BLOCK_PUMPKIN_CARVE PUMPKIN_CARVE
	BLOCK_REDSTONE_TORCH_BURNOUT REDSTONE_TORCH_BURNOUT
	BLOCK_SAND_BREAK SAND_BREAK
	BLOCK_SAND_FALL SAND_FALL
	BLOCK_SAND_HIT SAND_HIT
	BLOCK_SAND_PLACE SAND_PLACE
	BLOCK_SAND_STEP SAND_STEP
	BLOCK_SCAFFOLDING_BREAK SCAFFOLDING_BREAK
	BLOCK_SCAFFOLDING_FALL SCAFFOLDING_FALL
	BLOCK_SCAFFOLDING_HIT SCAFFOLDING_HIT
	BLOCK_SCAFFOLDING_PLACE SCAFFOLDING_PLACE
	BLOCK_SCAFFOLDING_STEP SCAFFOLDING_STEP
	BLOCK_SHULKER_BOX_CLOSE SHULKER_BOX_CLOSE
	BLOCK_SHULKER_BOX_OPEN SHULKER_BOX_OPEN
	BLOCK_SLIME_BLOCK_BREAK SLIME_BLOCK_BREAK
	BLOCK_SLIME_BLOCK_FALL SLIME_BLOCK_FALL
	BLOCK_SLIME_BLOCK_HIT SLIME_BLOCK_HIT
	BLOCK_SLIME_BLOCK_PLACE SLIME_BLOCK_PLACE
	BLOCK_SLIME_BLOCK_STEP SLIME_BLOCK_STEP
	BLOCK_SMOKER_SMOKE SMOKER_SMOKE
	BLOCK_SNOW_BREAK SNOW_BREAK
	BLOCK_SNOW_FALL SNOW_FALL
	BLOCK_SNOW_HIT SNOW_HIT
	BLOCK_SNOW_PLACE SNOW_PLACE
	BLOCK_SNOW_STEP SNOW_STEP
	BLOCK_STONE_BREAK STONE_BREAK
	BLOCK_STONE_BUTTON_CLICK_OFF STONE_BUTTON_CLICK_OFF
	BLOCK_STONE_BUTTON_CLICK_ON STONE_BUTTON_CLICK_ON
	BLOCK_STONE_FALL STONE_FALL
	BLOCK_STONE_HIT STONE_HIT
	BLOCK_STONE_PLACE STONE_PLACE
	BLOCK_STONE_PRESSURE_PLATE_CLICK_OFF STONE_PRESSURE_PLATE_CLICK_OFF
	BLOCK_STONE_PRESSURE_PLATE_CLICK_ON STONE_PRESSURE_PLATE_CLICK_ON
	BLOCK_STONE_STEP STONE_STEP
	BLOCK_SWEET_BERRY_BUSH_BREAK SWEET_BERRY_BUSH_BREAK
	BLOCK_SWEET_BERRY_BUSH_PLACE SWEET_BERRY_BUSH_PLACE
	BLOCK_TRIPWIRE_ATTACH TRIPWIRE_ATTACH
	BLOCK_TRIPWIRE_CLICK_OFF TRIPWIRE_CLICK_OFF
	BLOCK_TRIPWIRE_CLICK_ON TRIPWIRE_CLICK_ON
	BLOCK_TRIPWIRE_DETACH TRIPWIRE_DETACH
	BLOCK_WATER_AMBIENT WATER_AMBIENT
	BLOCK_WET_GRASS_BREAK WET_GRASS_BREAK
	BLOCK_WET_GRASS_FALL WET_GRASS_FALL
	BLOCK_WET_GRASS_HIT WET_GRASS_HIT
	BLOCK_WET_GRASS_PLACE WET_GRASS_PLACE
	BLOCK_WET_GRASS_STEP WET_GRASS_STEP
	BLOCK_WOODEN_BUTTON_CLICK_OFF WOODEN_BUTTON_CLICK_OFF
	BLOCK_WOODEN_BUTTON_CLICK_ON WOODEN_BUTTON_CLICK_ON
	BLOCK_WOODEN_DOOR_CLOSE WOODEN_DOOR_CLOSE
	BLOCK_WOODEN_DOOR_OPEN WOODEN_DOOR_OPEN
	BLOCK_WOODEN_PRESSURE_PLATE_CLICK_OFF WOODEN_PRESSURE_PLATE_CLICK_OFF
	BLOCK_WOODEN_PRESSURE_PLATE_CLICK_ON WOODEN_PRESSURE_PLATE_CLICK_ON
	BLOCK_WOODEN_TRAPDOOR_CLOSE WOODEN_TRAPDOOR_CLOSE
	BLOCK_WOODEN_TRAPDOOR_OPEN WOODEN_TRAPDOOR_OPEN
	BLOCK_WOOD_BREAK WOOD_BREAK
	BLOCK_WOOD_FALL WOOD_FALL
	BLOCK_WOOD_HIT WOOD_HIT
	BLOCK_WOOD_PLACE WOOD_PLACE
	BLOCK_WOOD_STEP WOOD_STEP
	BLOCK_WOOL_BREAK WOOL_BREAK
	BLOCK_WOOL_FALL WOOL_FALL
	BLOCK_WOOL_HIT WOOL_HIT
	BLOCK_WOOL_PLACE WOOL_PLACE
	BLOCK_WOOL_STEP WOOL_STEP
	ENCHANT_THORNS_HIT THORNS_HIT
	ENTITY_ARMOR_STAND_BREAK ARMOR_STAND_BREAK
	ENTITY_ARMOR_STAND_FALL ARMOR_STAND_FALL
	ENTITY_ARMOR_STAND_HIT ARMOR_STAND_HIT
	ENTITY_ARMOR_STAND_PLACE ARMOR_STAND_PLACE
	ENTITY_ARROW_HIT ARROW_HIT
	ENTITY_ARROW_HIT_PLAYER ARROW_HIT_PLAYER
	ENTITY_ARROW_SHOOT ARROW_SHOOT
	ENTITY_BAT_AMBIENT BAT_AMBIENT
	ENTITY_BAT_DEATH BAT_DEATH
	ENTITY_BAT_HURT BAT_HURT
	ENTITY_BAT_LOOP BAT_LOOP
	ENTITY_BAT_TAKEOFF BAT_TAKEOFF
	ENTITY_BLAZE_AMBIENT BLAZE_AMBIENT
	ENTITY_BLAZE_BURN BLAZE_BURN
	ENTITY_BLAZE_DEATH BLAZE_DEATH
	ENTITY_BLAZE_HURT BLAZE_HURT
	ENTITY_BLAZE_SHOOT BLAZE_SHOOT
	ENTITY_BOAT_PADDLE_LAND BOAT_PADDLE_LAND
	ENTITY_BOAT_PADDLE_WATER BOAT_PADDLE_WATER
	ENTITY_CAT_AMBIENT CAT_AMBIENT
	ENTITY_CAT_BEG_FOR_FOOD CAT_BEG_FOR_FOOD
	ENTITY_CAT_DEATH CAT_DEATH
	ENTITY_CAT_EAT CAT_EAT
	ENTITY_CAT_HISS CAT_HISS
	ENTITY_CAT_HURT CAT_HURT
	ENTITY_CAT_PURR CAT_PURR
	ENTITY_CAT_PURREOW CAT_PURREOW
	ENTITY_CAT_STRAY_AMBIENT CAT_STRAY_AMBIENT
	ENTITY_CHICKEN_AMBIENT CHICKEN_AMBIENT
	ENTITY_CHICKEN_DEATH CHICKEN_DEATH
	ENTITY_CHICKEN_EGG CHICKEN_EGG
	ENTITY_CHICKEN_HURT CHICKEN_HURT
	ENTITY_CHICKEN_STEP CHICKEN_STEP
	ENTITY_COD_AMBIENT COD_AMBIENT
	ENTITY_COD_DEATH COD_DEATH
	ENTITY_COD_FLOP COD_FLOP
	ENTITY_COD_HURT COD_HURT
	ENTITY_COW_AMBIENT COW_AMBIENT
	ENTITY_COW_DEATH COW_DEATH
	ENTITY_COW_HURT COW_HURT
	ENTITY_COW_MILK COW_MILK
	ENTITY_COW_STEP COW_STEP
	ENTITY_CREEPER_DEATH CREEPER_DEATH
	ENTITY_CREEPER_HURT CREEPER_HURT
	ENTITY_CREEPER_PRIMED CREEPER_PRIMED
	ENTITY_DOLPHIN_AMBIENT DOLPHIN_AMBIENT
	ENTITY_DOLPHIN_AMBIENT_WATER DOLPHIN_AMBIENT_WATER
	ENTITY_DOLPHIN_ATTACK DOLPHIN_ATTACK
	ENTITY_DOLPHIN_DEATH DOLPHIN_DEATH
	ENTITY_DOLPHIN_EAT DOLPHIN_EAT
	ENTITY_DOLPHIN_HURT DOLPHIN_HURT
	ENTITY_DOLPHIN_JUMP DOLPHIN_JUMP
	ENTITY_DOLPHIN_PLAY DOLPHIN_PLAY
	ENTITY_DOLPHIN_SPLASH DOLPHIN_SPLASH
	ENTITY_DOLPHIN_SWIM DOLPHIN_SWIM
	ENTITY_DONKEY_AMBIENT DONKEY_AMBIENT
	ENTITY_DONKEY_ANGRY DONKEY_ANGRY
	ENTITY_DONKEY_CHEST DONKEY_CHEST
	ENTITY_DONKEY_DEATH DONKEY_DEATH
	ENTITY_DONKEY_HURT DONKEY_HURT
	ENTITY_DRAGON_FIREBALL_EXPLODE DRAGON_FIREBALL_EXPLODE
	ENTITY_DROWNED_AMBIENT DROWNED_AMBIENT
	ENTITY_DROWNED_AMBIENT_WATER DROWNED_AMBIENT_WATER
	ENTITY_DROWNED_DEATH DROWNED_DEATH
	ENTITY_DROWNED_DEATH_WATER DROWNED_DEATH_WATER
	ENTITY_DROWNED_HURT DROWNED_HURT
	ENTITY_DROWNED_HURT_WATER DROWNED_HURT_WATER
	ENTITY_DROWNED_SHOOT DROWNED_SHOOT
	ENTITY_DROWNED_STEP DROWNED_STEP
	ENTITY_DROWNED_SWIM DROWNED_SWIM
	ENTITY_EGG_THROW EGG_THROW
	ENTITY_ELDER_GUARDIAN_AMBIENT ELDER_GUARDIAN_AMBIENT
	ENTITY_ELDER_GUARDIAN_AMBIENT_LAND ELDER_GUARDIAN_AMBIENT_LAND
	ENTITY_ELDER_GUARDIAN_CURSE ELDER_GUARDIAN_CURSE
	ENTITY_ELDER_GUARDIAN_DEATH ELDER_GUARDIAN_DEATH
	ENTITY_ELDER_GUARDIAN_DEATH_LAND ELDER_GUARDIAN_DEATH_LAND
	ENTITY_ELDER_GUARDIAN_FLOP ELDER_GUARDIAN_FLOP
	ENTITY_ELDER_GUARDIAN_HURT ELDER_GUARDIAN_HURT
	ENTITY_ELDER_GUARDIAN_HURT_LAND ELDER_GUARDIAN_HURT_LAND
	ENTITY_ENDERMAN_AMBIENT ENDERMAN_AMBIENT
	ENTITY_ENDERMAN_DEATH ENDERMAN_DEATH
	ENTITY_ENDERMAN_HURT ENDERMAN_HURT
	ENTITY_ENDERMAN_SCREAM ENDERMAN_SCREAM
	ENTITY_ENDERMAN_STARE ENDERMAN_STARE
	ENTITY_ENDERMAN_TELEPORT ENDERMAN_TELEPORT
	ENTITY_ENDERMITE_AMBIENT ENDERMITE_AMBIENT
	ENTITY_ENDERMITE_DEATH ENDERMITE_DEATH
	ENTITY_ENDERMITE_HURT ENDERMITE_HURT
	ENTITY_ENDERMITE_STEP ENDERMITE_STEP
	ENTITY_ENDER_DRAGON_AMBIENT ENDER_DRAGON_AMBIENT
	ENTITY_ENDER_DRAGON_DEATH ENDER_DRAGON_DEATH
	ENTITY_ENDER_DRAGON_FLAP ENDER_DRAGON_FLAP
	ENTITY_ENDER_DRAGON_GROWL ENDER_DRAGON_GROWL
	ENTITY_ENDER_DRAGON_HURT ENDER_DRAGON_HURT
	ENTITY_ENDER_DRAGON_SHOOT ENDER_DRAGON_SHOOT
	ENTITY_ENDER_EYE_DEATH ENDER_EYE_DEATH
	ENTITY_ENDER_EYE_LAUNCH ENDER_EYE_LAUNCH
	ENTITY_ENDER_PEARL_THROW ENDER_PEARL_THROW
	ENTITY_EVOKER_AMBIENT EVOKER_AMBIENT
	ENTITY_EVOKER_CAST_SPELL EVOKER_CAST_SPELL
	ENTITY_EVOKER_CELEBRATE EVOKER_CELEBRATE
	ENTITY_EVOKER_DEATH EVOKER_DEATH
	ENTITY_EVOKER_FANGS_ATTACK EVOKER_FANGS_ATTACK
	ENTITY_EVOKER_HURT EVOKER_HURT
	ENTITY_EVOKER_PREPARE_ATTACK EVOKER_PREPARE_ATTACK
	ENTITY_EVOKER_PREPARE_SUMMON EVOKER_PREPARE_SUMMON
	ENTITY_EVOKER_PREPARE_WOLOLO EVOKER_PREPARE_WOLOLO
	ENTITY_EXPERIENCE_BOTTLE_THROW EXPERIENCE_BOTTLE_THROW
	ENTITY_EXPERIENCE_ORB_PICKUP EXPERIENCE_ORB_PICKUP
	ENTITY_FIREWORK_ROCKET_BLAST FIREWORK_ROCKET_BLAST
	ENTITY_FIREWORK_ROCKET_BLAST_FAR FIREWORK_ROCKET_BLAST_FAR
	ENTITY_FIREWORK_ROCKET_LARGE_BLAST FIREWORK_ROCKET_LARGE_BLAST
	ENTITY_FIREWORK_ROCKET_LARGE_BLAST_FAR FIREWORK_ROCKET_LARGE_BLAST_FAR
	ENTITY_FIREWORK_ROCKET_LAUNCH FIREWORK_ROCKET_LAUNCH
	ENTITY_FIREWORK_ROCKET_SHOOT FIREWORK_ROCKET_SHOOT
	ENTITY_FIREWORK_ROCKET_TWINKLE FIREWORK_ROCKET_TWINKLE
	ENTITY_FIREWORK_ROCKET_TWINKLE_FAR FIREWORK_ROCKET_TWINKLE_FAR
	ENTITY_FISHING_BOBBER_RETRIEVE FISHING_BOBBER_RETRIEVE
	ENTITY_FISHING_BOBBER_SPLASH FISHING_BOBBER_SPLASH
	ENTITY_FISHING_BOBBER_THROW FISHING_BOBBER_THROW
	ENTITY_FISH_SWIM FISH_SWIM
	ENTITY_FOX_AGGRO FOX_AGGRO
	ENTITY_FOX_AMBIENT FOX_AMBIENT
	ENTITY_FOX_BITE FOX_BITE
	ENTITY_FOX_DEATH FOX_DEATH
	ENTITY_FOX_EAT FOX_EAT
	ENTITY_FOX_HURT FOX_HURT
	ENTITY_FOX_SCREECH FOX_SCREECH
	ENTITY_FOX_SLEEP FOX_SLEEP
	ENTITY_FOX_SNIFF FOX_SNIFF
	ENTITY_FOX_SPIT FOX_SPIT
	ENTITY_GENERIC_BIG_FALL GENERIC_BIG_FALL
	ENTITY_GENERIC_BURN GENERIC_BURN
	ENTITY_GENERIC_DEATH GENERIC_DEATH
	ENTITY_GENERIC_DRINK GENERIC_DRINK
	ENTITY_GENERIC_EAT GENERIC_EAT
	ENTITY_GENERIC_EXPLODE GENERIC_EXPLODE
	ENTITY_GENERIC_EXTINGUISH_FIRE GENERIC_EXTINGUISH_FIRE
	ENTITY_GENERIC_HURT GENERIC_HURT
	ENTITY_GENERIC_SMALL_FALL GENERIC_SMALL_FALL
	ENTITY_GENERIC_SPLASH GENERIC_SPLASH
	ENTITY_GENERIC_SWIM GENERIC_SWIM
	ENTITY_GHAST_AMBIENT GHAST_AMBIENT
	ENTITY_GHAST_DEATH GHAST_DEATH
	ENTITY_GHAST_HURT GHAST_HURT
	ENTITY_GHAST_SCREAM GHAST_SCREAM
	ENTITY_GHAST_SHOOT GHAST_SHOOT
	ENTITY_GHAST_WARN GHAST_WARN
	ENTITY_GUARDIAN_AMBIENT GUARDIAN_AMBIENT
	ENTITY_GUARDIAN_AMBIENT_LAND GUARDIAN_AMBIENT_LAND
	ENTITY_GUARDIAN_ATTACK GUARDIAN_ATTACK
	ENTITY_GUARDIAN_DEATH GUARDIAN_DEATH
	ENTITY_GUARDIAN_DEATH_LAND GUARDIAN_DEATH_LAND
	ENTITY_GUARDIAN_FLOP GUARDIAN_FLOP
	ENTITY_GUARDIAN_HURT GUARDIAN_HURT
	ENTITY_GUARDIAN_HURT_LAND GUARDIAN_HURT_LAND
	ENTITY_HORSE_AMBIENT HORSE_AMBIENT
	ENTITY_HORSE_ANGRY HORSE_ANGRY
	ENTITY_HORSE_ARMOR HORSE_ARMOR
	ENTITY_HORSE_BREATHE HORSE_BREATHE
	ENTITY_HORSE_DEATH HORSE_DEATH
	ENTITY_HORSE_EAT HORSE_EAT
	ENTITY_HORSE_GALLOP HORSE_GALLOP
	ENTITY_HORSE_HURT HORSE_HURT
	ENTITY_HORSE_JUMP HORSE_JUMP
	ENTITY_HORSE_LAND HORSE_LAND
	ENTITY_HORSE_SADDLE HORSE_SADDLE
	ENTITY_HORSE_STEP HORSE_STEP
	ENTITY_HORSE_STEP_WOOD HORSE_STEP_WOOD
	ENTITY_HOSTILE_BIG_FALL HOSTILE_BIG_FALL
	ENTITY_HOSTILE_DEATH HOSTILE_DEATH
	ENTITY_HOSTILE_HURT HOSTILE_HURT
	ENTITY_HOSTILE_SMALL_FALL HOSTILE_SMALL_FALL
	ENTITY_HOSTILE_SPLASH HOSTILE_SPLASH
	ENTITY_HOSTILE_SWIM HOSTILE_SWIM
	ENTITY_HUSK_AMBIENT HUSK_AMBIENT
	ENTITY_HUSK_CONVERTED_TO_ZOMBIE HUSK_CONVERTED_TO_ZOMBIE
	ENTITY_HUSK_DEATH HUSK_DEATH
	ENTITY_HUSK_HURT HUSK_HURT
	ENTITY_HUSK_STEP HUSK_STEP
	ENTITY_ILLUSIONER_AMBIENT ILLUSIONER_AMBIENT
	ENTITY_ILLUSIONER_CAST_SPELL ILLUSIONER_CAST_SPELL
	ENTITY_ILLUSIONER_DEATH ILLUSIONER_DEATH
	ENTITY_ILLUSIONER_HURT ILLUSIONER_HURT
	ENTITY_ILLUSIONER_MIRROR_MOVE ILLUSIONER_MIRROR_MOVE
	ENTITY_ILLUSIONER_PREPARE_BLINDNESS ILLUSIONER_PREPARE_BLINDNESS
	ENTITY_ILLUSIONER_PREPARE_MIRROR ILLUSIONER_PREPARE_MIRROR
	ENTITY_IRON_GOLEM_ATTACK IRON_GOLEM_ATTACK
	ENTITY_IRON_GOLEM_DEATH IRON_GOLEM_DEATH
	ENTITY_IRON_GOLEM_HURT IRON_GOLEM_HURT
	ENTITY_IRON_GOLEM_STEP IRON_GOLEM_STEP
	ENTITY_ITEM_BREAK ITEM_BREAK
	ENTITY_ITEM_FRAME_ADD_ITEM ITEM_FRAME_ADD_ITEM
	ENTITY_ITEM_FRAME_BREAK ITEM_FRAME_BREAK
	ENTITY_ITEM_FRAME_PLACE ITEM_FRAME_PLACE
	ENTITY_ITEM_FRAME_REMOVE_ITEM ITEM_FRAME_REMOVE_ITEM
	ENTITY_ITEM_FRAME_ROTATE_ITEM ITEM_FRAME_ROTATE_ITEM
	ENTITY_ITEM_PICKUP ITEM_PICKUP
	ENTITY_LEASH_KNOT_BREAK LEASH_KNOT_BREAK
	ENTITY_LEASH_KNOT_PLACE LEASH_KNOT_PLACE
	ENTITY_LIGHTNING_BOLT_IMPACT LIGHTNING_BOLT_IMPACT
	ENTITY_LIGHTNING_BOLT_THUNDER LIGHTNING_BOLT_THUNDER
	ENTITY_LINGERING_POTION_THROW LINGERING_POTION_THROW
	ENTITY_LLAMA_AMBIENT LLAMA_AMBIENT
	ENTITY_LLAMA_ANGRY LLAMA_ANGRY
	ENTITY_LLAMA_CHEST LLAMA_CHEST
	ENTITY_LLAMA_DEATH LLAMA_DEATH
	ENTITY_LLAMA_EAT LLAMA_EAT
	ENTITY_LLAMA_HURT LLAMA_HURT
	ENTITY_LLAMA_SPIT LLAMA_SPIT
	ENTITY_LLAMA_STEP LLAMA_STEP
	ENTITY_LLAMA_SWAG LLAMA_SWAG
	ENTITY_MAGMA_CUBE_DEATH MAGMA_CUBE_DEATH
	ENTITY_MAGMA_CUBE_DEATH_SMALL MAGMA_CUBE_DEATH_SMALL
	ENTITY_MAGMA_CUBE_HURT MAGMA_CUBE_HURT
	ENTITY_MAGMA_CUBE_HURT_SMALL MAGMA_CUBE_HURT_SMALL
	ENTITY_MAGMA_CUBE_JUMP MAGMA_CUBE_JUMP
	ENTITY_MAGMA_CUBE_SQUISH MAGMA_CUBE_SQUISH
	ENTITY_MAGMA_CUBE_SQUISH_SMALL MAGMA_CUBE_SQUISH_SMALL
	ENTITY_MINECART_INSIDE MINECART_INSIDE
	ENTITY_MINECART_RIDING MINECART_RIDING
	ENTITY_MOOSHROOM_CONVERT MOOSHROOM_CONVERT
	ENTITY_MOOSHROOM_EAT MOOSHROOM_EAT
	ENTITY_MOOSHROOM_MILK MOOSHROOM_MILK
	ENTITY_MOOSHROOM_SHEAR MOOSHROOM_SHEAR
	ENTITY_MOOSHROOM_SUSPICIOUS_MILK MOOSHROOM_MILK_SUSPICIOUSLY
	ENTITY_MULE_AMBIENT MULE_AMBIENT
	ENTITY_MULE_CHEST MULE_CHEST
	ENTITY_MULE_DEATH MULE_DEATH
	ENTITY_MULE_HURT MULE_HURT
	ENTITY_OCELOT_AMBIENT OCELOT_AMBIENT
	ENTITY_OCELOT_DEATH OCELOT_DEATH
	ENTITY_OCELOT_HURT OCELOT_HURT
	ENTITY_PAINTING_BREAK PAINTING_BREAK
	ENTITY_PAINTING_PLACE PAINTING_PLACE
	ENTITY_PANDA_AGGRESSIVE_AMBIENT PANDA_AGGRESSIVE_AMBIENT
	ENTITY_PANDA_AMBIENT PANDA_AMBIENT
	ENTITY_PANDA_BITE PANDA_BITE
	ENTITY_PANDA_CANT_BREED PANDA_CANT_BREED
	ENTITY_PANDA_DEATH PANDA_DEATH
	ENTITY_PANDA_EAT PANDA_EAT
	ENTITY_PANDA_HURT PANDA_HURT
	ENTITY_PANDA_PRE_SNEEZE PANDA_PRE_SNEEZE
	ENTITY_PANDA_SNEEZE PANDA_SNEEZE
	ENTITY_PANDA_STEP PANDA_STEP
	ENTITY_PANDA_WORRIED_AMBIENT PANDA_WORRIED_AMBIENT
	ENTITY_PARROT_AMBIENT PARROT_AMBIENT
	ENTITY_PARROT_DEATH PARROT_DEATH
	ENTITY_PARROT_EAT PARROT_EAT
	ENTITY_PARROT_FLY PARROT_FLY
	ENTITY_PARROT_HURT PARROT_HURT
	ENTITY_PARROT_IMITATE_BLAZE PARROT_IMITATE_BLAZE
	ENTITY_PARROT_IMITATE_CREEPER PARROT_IMITATE_CREEPER
	ENTITY_PARROT_IMITATE_DROWNED PARROT_IMITATE_DROWNED
	ENTITY_PARROT_IMITATE_ELDER_GUARDIAN PARROT_IMITATE_ELDER_GUARDIAN
	ENTITY_PARROT_IMITATE_ENDERMAN PARROT_IMITATE_ENDERMAN
	ENTITY_PARROT_IMITATE_ENDERMITE PARROT_IMITATE_ENDERMITE
	ENTITY_PARROT_IMITATE_ENDER_DRAGON PARROT_IMITATE_ENDER_DRAGON
	ENTITY_PARROT_IMITATE_EVOKER PARROT_IMITATE_EVOKER
	ENTITY_PARROT_IMITATE_GHAST PARROT_IMITATE_GHAST
	ENTITY_PARROT_IMITATE_GUARDIAN PARROT_IMITATE_GUARDIAN
	ENTITY_PARROT_IMITATE_HUSK PARROT_IMITATE_HUSK
	ENTITY_PARROT_IMITATE_ILLUSIONER PARROT_IMITATE_ILLUSIONER
	ENTITY_PARROT_IMITATE_MAGMA_CUBE PARROT_IMITATE_MAGMA_CUBE
	ENTITY_PARROT_IMITATE_PANDA PARROT_IMITATE_PANDA
	ENTITY_PARROT_IMITATE_PHANTOM PARROT_IMITATE_PHANTOM
	ENTITY_PARROT_IMITATE_PILLAGER PARROT_IMITATE_PILLAGER
	ENTITY_PARROT_IMITATE_POLAR_BEAR PARROT_IMITATE_POLAR_BEAR
	ENTITY_PARROT_IMITATE_RAVAGER PARROT_IMITATE_RAVAGER
	ENTITY_PARROT_IMITATE_SHULKER PARROT_IMITATE_SHULKER
	ENTITY_PARROT_IMITATE_SILVERFISH PARROT_IMITATE_SILVERFISH
	ENTITY_PARROT_IMITATE_SKELETON PARROT_IMITATE_SKELETON
	ENTITY_PARROT_IMITATE_SLIME PARROT_IMITATE_SLIME
	ENTITY_PARROT_IMITATE_SPIDER PARROT_IMITATE_SPIDER
	ENTITY_PARROT_IMITATE_STRAY PARROT_IMITATE_STRAY
	ENTITY_PARROT_IMITATE_VEX PARROT_IMITATE_VEX
	ENTITY_PARROT_IMITATE_VINDICATOR PARROT_IMITATE_VINDICATOR
	ENTITY_PARROT_IMITATE_WITCH PARROT_IMITATE_WITCH
	ENTITY_PARROT_IMITATE_WITHER PARROT_IMITATE_WITHER
	ENTITY_PARROT_IMITATE_WITHER_SKELETON PARROT_IMITATE_WITHER_SKELETON
	ENTITY_PARROT_IMITATE_WOLF PARROT_IMITATE_WOLF
	ENTITY_PARROT_IMITATE_ZOMBIE PARROT_IMITATE_ZOMBIE
	ENTITY_PARROT_IMITATE_ZOMBIE_PIGMAN PARROT_IMITATE_ZOMBIE_PIGMAN
	ENTITY_PARROT_IMITATE_ZOMBIE_VILLAGER PARROT_IMITATE_ZOMBIE_VILLAGER
	ENTITY_PARROT_STEP PARROT_STEP
	ENTITY_PHANTOM_AMBIENT PHANTOM_AMBIENT
	ENTITY_PHANTOM_BITE PHANTOM_BITE
	ENTITY_PHANTOM_DEATH PHANTOM_DEATH
	ENTITY_PHANTOM_FLAP PHANTOM_FLAP
	ENTITY_PHANTOM_HURT PHANTOM_HURT
	ENTITY_PHANTOM_SWOOP PHANTOM_SWOOP
	ENTITY_PIG_AMBIENT PIG_AMBIENT
	ENTITY_PIG_DEATH PIG_DEATH
	ENTITY_PIG_HURT PIG_HURT
	ENTITY_PIG_SADDLE PIG_SADDLE
	ENTITY_PIG_STEP PIG_STEP
	ENTITY_PILLAGER_AMBIENT PILLAGER_AMBIENT
	ENTITY_PILLAGER_CELEBRATE PILLAGER_CELEBRATE
	ENTITY_PILLAGER_DEATH PILLAGER_DEATH
	ENTITY_PILLAGER_HURT PILLAGER_HURT
	ENTITY_PLAYER_ATTACK_CRIT PLAYER_ATTACK_CRIT
	ENTITY_PLAYER_ATTACK_KNOCKBACK PLAYER_ATTACK_KNOCKBACK
	ENTITY_PLAYER_ATTACK_NODAMAGE PLAYER_ATTACK_NODAMAGE
	ENTITY_PLAYER_ATTACK_STRONG PLAYER_ATTACK_STRONG
	ENTITY_PLAYER_ATTACK_SWEEP PLAYER_ATTACK_SWEEP
	ENTITY_PLAYER_ATTACK_WEAK PLAYER_ATTACK_WEAK
	ENTITY_PLAYER_BIG_FALL PLAYER_BIG_FALL
	ENTITY_PLAYER_BREATH PLAYER_BREATH
	ENTITY_PLAYER_BURP PLAYER_BURP
	ENTITY_PLAYER_DEATH PLAYER_DEATH
	ENTITY_PLAYER_HURT PLAYER_HURT
	ENTITY_PLAYER_HURT_DROWN PLAYER_HURT_DROWN
	ENTITY_PLAYER_HURT_ON_FIRE PLAYER_HURT_ON_FIRE
	ENTITY_PLAYER_HURT_SWEET_BERRY_BUSH PLAYER_HURT_SWEET_BERRY_BUSH
	ENTITY_PLAYER_LEVELUP PLAYER_LEVELUP
	ENTITY_PLAYER_SMALL_FALL PLAYER_SMALL_FALL
	ENTITY_PLAYER_SPLASH PLAYER_SPLASH
	ENTITY_PLAYER_SPLASH_HIGH_SPEED PLAYER_SPLASH_HIGH_SPEED
	ENTITY_PLAYER_SWIM PLAYER_SWIM
	ENTITY_POLAR_BEAR_AMBIENT POLAR_BEAR_AMBIENT
	ENTITY_POLAR_BEAR_AMBIENT_BABY POLAR_BEAR_AMBIENT_BABY
	ENTITY_POLAR_BEAR_DEATH POLAR_BEAR_DEATH
	ENTITY_POLAR_BEAR_HURT POLAR_BEAR_HURT
	ENTITY_POLAR_BEAR_STEP POLAR_BEAR_STEP
	ENTITY_POLAR_BEAR_WARNING POLAR_BEAR_WARNING
	ENTITY_PUFFER_FISH_AMBIENT PUFFER_FISH_AMBIENT
	ENTITY_PUFFER_FISH_BLOW_OUT PUFFER_FISH_BLOW_OUT
	ENTITY_PUFFER_FISH_BLOW_UP PUFFER_FISH_BLOW_UP
	ENTITY_PUFFER_FISH_DEATH PUFFER_FISH_DEATH
	ENTITY_PUFFER_FISH_FLOP PUFFER_FISH_FLOP
	ENTITY_PUFFER_FISH_HURT PUFFER_FISH_HURT
	ENTITY_PUFFER_FISH_STING PUFFER_FISH_STING
	ENTITY_RABBIT_AMBIENT RABBIT_AMBIENT
	ENTITY_RABBIT_ATTACK RABBIT_ATTACK
	ENTITY_RABBIT_DEATH RABBIT_DEATH
	ENTITY_RABBIT_HURT RABBIT_HURT
	ENTITY_RABBIT_JUMP RABBIT_JUMP
	ENTITY_RAVAGER_AMBIENT RAVAGER_AMBIENT
	ENTITY_RAVAGER_ATTACK RAVAGER_ATTACK
	ENTITY_RAVAGER_CELEBRATE RAVAGER_CELEBRATE
	ENTITY_RAVAGER_DEATH RAVAGER_DEATH
	ENTITY_RAVAGER_HURT RAVAGER_HURT
	ENTITY_RAVAGER_ROAR RAVAGER_ROAR
	ENTITY_RAVAGER_STEP RAVAGER_STEP
	ENTITY_RAVAGER_STUNNED RAVAGER_STUNNED
	ENTITY_SALMON_AMBIENT SALMON_AMBIENT
	ENTITY_SALMON_DEATH SALMON_DEATH
	ENTITY_SALMON_FLOP SALMON_FLOP
	ENTITY_SALMON_HURT SALMON_HURT
	ENTITY_SHEEP_AMBIENT SHEEP_AMBIENT
	ENTITY_SHEEP_DEATH SHEEP_DEATH
	ENTITY_SHEEP_HURT SHEEP_HURT
	ENTITY_SHEEP_SHEAR SHEEP_SHEAR
	ENTITY_SHEEP_STEP SHEEP_STEP
	ENTITY_SHULKER_AMBIENT SHULKER_AMBIENT
	ENTITY_SHULKER_BULLET_HIT SHULKER_BULLET_HIT
	ENTITY_SHULKER_BULLET_HURT SHULKER_BULLET_HURT
	ENTITY_SHULKER_CLOSE SHULKER_CLOSE
	ENTITY_SHULKER_DEATH SHULKER_DEATH
	ENTITY_SHULKER_HURT SHULKER_HURT
	ENTITY_SHULKER_HURT_CLOSED SHULKER_HURT_CLOSED
	ENTITY_SHULKER_OPEN SHULKER_OPEN
	ENTITY_SHULKER_SHOOT SHULKER_SHOOT
	ENTITY_SHULKER_TELEPORT SHULKER_TELEPORT
	ENTITY_SILVERFISH_AMBIENT SILVERFISH_AMBIENT
	ENTITY_SILVERFISH_DEATH SILVERFISH_DEATH
	ENTITY_SILVERFISH_HURT SILVERFISH_HURT
	ENTITY_SILVERFISH_STEP SILVERFISH_STEP
	ENTITY_SKELETON_AMBIENT SKELETON_AMBIENT
	ENTITY_SKELETON_DEATH SKELETON_DEATH
	ENTITY_SKELETON_HORSE_AMBIENT SKELETON_HORSE_AMBIENT
	ENTITY_SKELETON_HORSE_AMBIENT_WATER SKELETON_HORSE_AMBIENT_WATER
	ENTITY_SKELETON_HORSE_DEATH SKELETON_HORSE_DEATH
	ENTITY_SKELETON_HORSE_GALLOP_WATER SKELETON_HORSE_GALLOP_WATER
	ENTITY_SKELETON_HORSE_HURT SKELETON_HORSE_HURT
	ENTITY_SKELETON_HORSE_JUMP_WATER SKELETON_HORSE_JUMP_WATER
	ENTITY_SKELETON_HORSE_STEP_WATER SKELETON_HORSE_STEP_WATER
	ENTITY_SKELETON_HORSE_SWIM SKELETON_HORSE_SWIM
	ENTITY_SKELETON_HURT SKELETON_HURT
	ENTITY_SKELETON_SHOOT SKELETON_SHOOT
	ENTITY_SKELETON_STEP SKELETON_STEP
	ENTITY_SLIME_ATTACK SLIME_ATTACK
	ENTITY_SLIME_DEATH SLIME_DEATH
	ENTITY_SLIME_DEATH_SMALL SLIME_DEATH_SMALL
	ENTITY_SLIME_HURT SLIME_HURT
	ENTITY_SLIME_HURT_SMALL SLIME_HURT_SMALL
	ENTITY_SLIME_JUMP SLIME_JUMP
	ENTITY_SLIME_JUMP_SMALL SLIME_JUMP_SMALL
	ENTITY_SLIME_SQUISH SLIME_SQUISH
	ENTITY_SLIME_SQUISH_SMALL SLIME_SQUISH_SMALL
	ENTITY_SNOWBALL_THROW SNOWBALL_THROW
	ENTITY_SNOW_GOLEM_AMBIENT SNOW_GOLEM_AMBIENT
	ENTITY_SNOW_GOLEM_DEATH SNOW_GOLEM_DEATH
	ENTITY_SNOW_GOLEM_HURT SNOW_GOLEM_HURT
	ENTITY_SNOW_GOLEM_SHOOT SNOW_GOLEM_SHOOT
	ENTITY_SPIDER_AMBIENT SPIDER_AMBIENT
	ENTITY_SPIDER_DEATH SPIDER_DEATH
	ENTITY_SPIDER_HURT SPIDER_HURT
	ENTITY_SPIDER_STEP SPIDER_STEP
	ENTITY_SPLASH_POTION_BREAK SPLASH_POTION_BREAK
	ENTITY_SPLASH_POTION_THROW SPLASH_POTION_THROW
	ENTITY_SQUID_AMBIENT SQUID_AMBIENT
	ENTITY_SQUID_DEATH SQUID_DEATH
	ENTITY_SQUID_HURT SQUID_HURT
	ENTITY_SQUID_SQUIRT SQUID_SQUIRT
	ENTITY_STRAY_AMBIENT STRAY_AMBIENT
	ENTITY_STRAY_DEATH STRAY_DEATH
	ENTITY_STRAY_HURT STRAY_HURT
	ENTITY_STRAY_STEP STRAY_STEP
	ENTITY_TNT_PRIMED TNT_PRIMED
	ENTITY_TROPICAL_FISH_AMBIENT TROPICAL_FISH_AMBIENT
	ENTITY_TROPICAL_FISH_DEATH TROPICAL_FISH_DEATH
	ENTITY_TROPICAL_FISH_FLOP TROPICAL_FISH_FLOP
	ENTITY_TROPICAL_FISH_HURT TROPICAL_FISH_HURT
	ENTITY_TURTLE_AMBIENT_LAND TURTLE_AMBIENT_LAND
	ENTITY_TURTLE_DEATH TURTLE_DEATH
	ENTITY_TURTLE_DEATH_BABY TURTLE_DEATH_BABY
	ENTITY_TURTLE_EGG_BREAK TURTLE_EGG_BREAK
	ENTITY_TURTLE_EGG_CRACK TURTLE_EGG_CRACK
	ENTITY_TURTLE_EGG_HATCH TURTLE_EGG_HATCH
	ENTITY_TURTLE_HURT TURTLE_HURT
	ENTITY_TURTLE_HURT_BABY TURTLE_HURT_BABY
	ENTITY_TURTLE_LAY_EGG TURTLE_LAY_EGG
	ENTITY_TURTLE_SHAMBLE TURTLE_SHAMBLE
	ENTITY_TURTLE_SHAMBLE_BABY TURTLE_SHAMBLE_BABY
	ENTITY_TURTLE_SWIM TURTLE_SWIM
	ENTITY_VEX_AMBIENT VEX_AMBIENT
	ENTITY_VEX_CHARGE VEX_CHARGE
	ENTITY_VEX_DEATH VEX_DEATH
	ENTITY_VEX_HURT VEX_HURT
	ENTITY_VILLAGER_AMBIENT VILLAGER_AMBIENT
	ENTITY_VILLAGER_CELEBRATE VILLAGER_CELEBRATE
	ENTITY_VILLAGER_DEATH VILLAGER_DEATH
	ENTITY_VILLAGER_HURT VILLAGER_HURT
	ENTITY_VILLAGER_NO VILLAGER_NO
	ENTITY_VILLAGER_TRADE VILLAGER_TRADE
	ENTITY_VILLAGER_WORK_ARMORER VILLAGER_WORK_ARMORER
	ENTITY_VILLAGER_WORK_BUTCHER VILLAGER_WORK_BUTCHER
	ENTITY_VILLAGER_WORK_CARTOGRAPHER VILLAGER_WORK_CARTOGRAPHER
	ENTITY_VILLAGER_WORK_CLERIC VILLAGER_WORK_CLERIC
	ENTITY_VILLAGER_WORK_FARMER VILLAGER_WORK_FARMER
	ENTITY_VILLAGER_WORK_FISHERMAN VILLAGER_WORK_FISHERMAN
	ENTITY_VILLAGER_WORK_FLETCHER VILLAGER_WORK_FLETCHER
	ENTITY_VILLAGER_WORK_LEATHERWORKER VILLAGER_WORK_LEATHERWORKER
	ENTITY_VILLAGER_WORK_LIBRARIAN VILLAGER_WORK_LIBRARIAN
	ENTITY_VILLAGER_WORK_MASON VILLAGER_WORK_MASON
	ENTITY_VILLAGER_WORK_SHEPHERD VILLAGER_WORK_SHEPHERD
	ENTITY_VILLAGER_WORK_TOOLSMITH VILLAGER_WORK_TOOLSMITH
	ENTITY_VILLAGER_WORK_WEAPONSMITH VILLAGER_WORK_WEAPONSMITH
	ENTITY_VILLAGER_YES VILLAGER_YES
	ENTITY_VINDICATOR_AMBIENT VINDICATOR_AMBIENT
	ENTITY_VINDICATOR_CELEBRATE VINDICATOR_CELEBRATE
	ENTITY_VINDICATOR_DEATH VINDICATOR_DEATH
	ENTITY_VINDICATOR_HURT VINDICATOR_HURT
	ENTITY_WANDERING_TRADER_AMBIENT WANDERING_TRADER_AMBIENT
	ENTITY_WANDERING_TRADER_DEATH WANDERING_TRADER_DEATH
	ENTITY_WANDERING_TRADER_DISAPPEARED WANDERING_TRADER_DISAPPEARED
	ENTITY_WANDERING_TRADER_DRINK_MILK WANDERING_TRADER_DRINK_MILK
	ENTITY_WANDERING_TRADER_DRINK_POTION WANDERING_TRADER_DRINK_POTION
	ENTITY_WANDERING_TRADER_HURT WANDERING_TRADER_HURT
	ENTITY_WANDERING_TRADER_NO WANDERING_TRADER_NO
	ENTITY_WANDERING_TRADER_REAPPEARED WANDERING_TRADER_REAPPEARED
	ENTITY_WANDERING_TRADER_TRADE WANDERING_TRADER_TRADE
	ENTITY_WANDERING_TRADER_YES WANDERING_TRADER_YES
	ENTITY_WITCH_AMBIENT WITCH_AMBIENT
	ENTITY_WITCH_CELEBRATE WITCH_CELEBRATE
	ENTITY_WITCH_DEATH WITCH_DEATH
	ENTITY_WITCH_DRINK WITCH_DRINK
	ENTITY_WITCH_HURT WITCH_HURT
	ENTITY_WITCH_THROW WITCH_THROW
	ENTITY_WITHER_AMBIENT WITHER_AMBIENT
	ENTITY_WITHER_BREAK_BLOCK WITHER_BREAK_BLOCK
	ENTITY_WITHER_DEATH WITHER_DEATH
	ENTITY_WITHER_HURT WITHER_HURT
	ENTITY_WITHER_SHOOT WITHER_SHOOT
	ENTITY_WITHER_SKELETON_AMBIENT WITHER_SKELETON_AMBIENT
	ENTITY_WITHER_SKELETON_DEATH WITHER_SKELETON_DEATH
	ENTITY_WITHER_SKELETON_HURT WITHER_SKELETON_HURT
	ENTITY_WITHER_SKELETON_STEP WITHER_SKELETON_STEP
	ENTITY_WITHER_SPAWN WITHER_SPAWN
	ENTITY_WOLF_AMBIENT WOLF_AMBIENT
	ENTITY_WOLF_DEATH WOLF_DEATH
	ENTITY_WOLF_GROWL WOLF_GROWL
	ENTITY_WOLF_HOWL WOLF_HOWL
	ENTITY_WOLF_HURT WOLF_HURT
	ENTITY_WOLF_PANT WOLF_PANT
	ENTITY_WOLF_SHAKE WOLF_SHAKE
	ENTITY_WOLF_STEP WOLF_STEP
	ENTITY_WOLF_WHINE WOLF_WHINE
	ENTITY_ZOMBIE_AMBIENT ZOMBIE_AMBIENT
	ENTITY_ZOMBIE_ATTACK_IRON_DOOR ZOMBIE_ATTACK_IRON_DOOR
	ENTITY_ZOMBIE_ATTACK_WOODEN_DOOR ZOMBIE_ATTACK_WOODEN_DOOR
	ENTITY_ZOMBIE_BREAK_WOODEN_DOOR ZOMBIE_BREAK_WOODEN_DOOR
	ENTITY_ZOMBIE_CONVERTED_TO_DROWNED ZOMBIE_CONVERTED_TO_DROWNED
	ENTITY_ZOMBIE_DEATH ZOMBIE_DEATH
	ENTITY_ZOMBIE_DESTROY_EGG ZOMBIE_DESTROY_EGG
	ENTITY_ZOMBIE_HORSE_AMBIENT ZOMBIE_HORSE_AMBIENT
	ENTITY_ZOMBIE_HORSE_DEATH ZOMBIE_HORSE_DEATH
	ENTITY_ZOMBIE_HORSE_HURT ZOMBIE_HORSE_HURT
	ENTITY_ZOMBIE_HURT ZOMBIE_HURT
	ENTITY_ZOMBIE_INFECT ZOMBIE_INFECT
	ENTITY_ZOMBIE_PIGMAN_AMBIENT ZOMBIE_PIGMAN_AMBIENT
	ENTITY_ZOMBIE_PIGMAN_ANGRY ZOMBIE_PIGMAN_ANGRY
	ENTITY_ZOMBIE_PIGMAN_DEATH ZOMBIE_PIGMAN_DEATH
	ENTITY_ZOMBIE_PIGMAN_HURT ZOMBIE_PIGMAN_HURT
	ENTITY_ZOMBIE_STEP ZOMBIE_STEP
	ENTITY_ZOMBIE_VILLAGER_AMBIENT ZOMBIE_VILLAGER_AMBIENT
	ENTITY_ZOMBIE_VILLAGER_CONVERTED ZOMBIE_VILLAGER_CONVERTED
	ENTITY_ZOMBIE_VILLAGER_CURE ZOMBIE_VILLAGER_CURE
	ENTITY_ZOMBIE_VILLAGER_DEATH ZOMBIE_VILLAGER_DEATH
	ENTITY_ZOMBIE_VILLAGER_HURT ZOMBIE_VILLAGER_HURT
	ENTITY_ZOMBIE_VILLAGER_STEP ZOMBIE_VILLAGER_STEP
	EVENT_RAID_HORN RAID_HORN
	ITEM_ARMOR_EQUIP_CHAIN ARMOR_EQUIP_CHAIN
	ITEM_ARMOR_EQUIP_DIAMOND ARMOR_EQUIP_DIAMOND
	ITEM_ARMOR_EQUIP_ELYTRA ARMOR_EQUIP_ELYTRA
	ITEM_ARMOR_EQUIP_GENERIC ARMOR_EQUIP_GENERIC
	ITEM_ARMOR_EQUIP_GOLD ARMOR_EQUIP_GOLD
	ITEM_ARMOR_EQUIP_IRON ARMOR_EQUIP_IRON
	ITEM_ARMOR_EQUIP_LEATHER ARMOR_EQUIP_LEATHER
	ITEM_ARMOR_EQUIP_TURTLE ARMOR_EQUIP_TURTLE
	ITEM_AXE_STRIP AXE_STRIP
	ITEM_BOOK_PAGE_TURN BOOK_PAGE_TURN
	ITEM_BOOK_PUT BOOK_PUT
	ITEM_BOTTLE_EMPTY BOTTLE_EMPTY
	ITEM_BOTTLE_FILL BOTTLE_FILL
	ITEM_BOTTLE_FILL_DRAGONBREATH BOTTLE_FILL_DRAGONBREATH
	ITEM_BUCKET_EMPTY BUCKET_EMPTY
	ITEM_BUCKET_EMPTY_FISH BUCKET_EMPTY_FISH
	ITEM_BUCKET_EMPTY_LAVA BUCKET_EMPTY_LAVA
	ITEM_BUCKET_FILL BUCKET_FILL
	ITEM_BUCKET_FILL_FISH BUCKET_FILL_FISH
	ITEM_BUCKET_FILL_LAVA BUCKET_FILL_LAVA
	ITEM_CHORUS_FRUIT_TELEPORT CHORUS_FRUIT_TELEPORT
	ITEM_CROP_PLANT CROP_PLANTED
	ITEM_CROSSBOW_HIT CROSSBOW_HIT
	ITEM_CROSSBOW_LOADING_END CROSSBOW_LOADING_END
	ITEM_CROSSBOW_LOADING_MIDDLE CROSSBOW_LOADING_MIDDLE
	ITEM_CROSSBOW_LOADING_START CROSSBOW_LOADING_START
	ITEM_CROSSBOW_QUICK_CHARGE_1 CROSSBOW_QUICK_CHARGE_1
	ITEM_CROSSBOW_QUICK_CHARGE_2 CROSSBOW_QUICK_CHARGE_2
	ITEM_CROSSBOW_QUICK_CHARGE_3 CROSSBOW_QUICK_CHARGE_3
	ITEM_CROSSBOW_SHOOT CROSSBOW_SHOOT
	ITEM_ELYTRA_FLYING ELYTRA_FLYING
	ITEM_FIRECHARGE_USE FIRECHARGE_USE
	ITEM_FLINTANDSTEEL_USE FLINTANDSTEEL_USE
	ITEM_HOE_TILL HOE_TILL
	ITEM_NETHER_WART_PLANT NETHER_WART_PLANTED
	ITEM_SHIELD_BLOCK SHIELD_BLOCK
	ITEM_SHIELD_BREAK SHIELD_BREAK
	ITEM_SHOVEL_FLATTEN SHOVEL_FLATTEN
	ITEM_SWEET_BERRIES_PICK_FROM_BUSH SWEET_BERRY_BUSH_PICK_BERRIES
	ITEM_TOTEM_USE TOTEM_USE
	ITEM_TRIDENT_HIT TRIDENT_HIT
	ITEM_TRIDENT_HIT_GROUND TRIDENT_HIT_GROUND
	ITEM_TRIDENT_RETURN TRIDENT_RETURN
	ITEM_TRIDENT_RIPTIDE_1 TRIDENT_RIPTIDE_1
	ITEM_TRIDENT_RIPTIDE_2 TRIDENT_RIPTIDE_2
	ITEM_TRIDENT_RIPTIDE_3 TRIDENT_RIPTIDE_3
	ITEM_TRIDENT_THROW TRIDENT_THROW
	ITEM_TRIDENT_THUNDER TRIDENT_THUNDER
	a (Ljava/lang/String;)Lnet/minecraft/server/SoundEffect; register
net/minecraft/server/WorldGenMineshaftPieces net/minecraft/world/level/levelgen/structure/MineShaftPieces
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;ILnet/minecraft/server/WorldGenMineshaft$Type;)Lcij$c; createRandomShaftPiece
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lcij$c; access$000
	b (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lcij$c; generateAndAddPiece
net/minecraft/server/WorldGenDecoratorFrequencyConfiguration net/minecraft/world/level/levelgen/placement/DecoratorFrequency
	a count
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
cqo$1 net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$1
net/minecraft/server/EntitySkeletonStray net/minecraft/world/entity/monster/Stray
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkStraySpawnRules
	b (Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityArrow; getArrow
	cH ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	l ()Lnet/minecraft/server/SoundEffect; getStepSound
net/minecraft/server/NBTTagLong net/minecraft/nbt/LongTag
	a ()B getId
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)V load
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTBase; copy
	c ()Lnet/minecraft/server/NBTTagLong; copy
	d ()J getAsLong
	e ()I getAsInt
	f ()S getAsShort
	g ()B getAsByte
	h ()D getAsDouble
	i ()F getAsFloat
	j ()Ljava/lang/Number; getAsNumber
cwy$a com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList
	a this$0
	a ()Z isEmpty
	a (I)Lcom/mojang/realmsclient/dto/WorldTemplate; get
	a (Lcom/mojang/realmsclient/dto/WorldTemplate;)V addEntry
	a (Lcwy$b;)Lcom/mojang/realmsclient/dto/WorldTemplate; lambda$getTemplates$0
	b ()Ljava/util/List; getTemplates
cwh$2 com/mojang/realmsclient/gui/screens/RealmsConfirmScreen$2
	a this$0
cwy$b com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry
	a template
	b this$0
	a (IIIILcom/mojang/realmsclient/dto/WorldTemplate;)V drawImage
	a (IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V drawIcons
	a (Lcom/mojang/realmsclient/dto/WorldTemplate;IIII)V renderWorldTemplateItem
cwh$1 com/mojang/realmsclient/gui/screens/RealmsConfirmScreen$1
	a this$0
net/minecraft/server/PacketPlayOutMultiBlockChange net/minecraft/network/protocol/game/ClientboundChunkBlocksUpdatePacket
	a chunkPos
	b updates
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/PacketPlayOutMultiBlockChange;)Lnet/minecraft/server/ChunkCoordIntPair; access$000
	b ()[Lnet/minecraft/server/PacketPlayOutMultiBlockChange$MultiBlockChangeInfo; getUpdates
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairsStraight net/minecraft/world/level/levelgen/structure/StrongholdPieces$StraightStairsDown
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairsStraight; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/InventoryCraftResult net/minecraft/world/inventory/ResultContainer
	b recipeUsed
	items itemStacks
	L_ ()V clearContent
	M_ ()I getContainerSize
	U_ ()Lnet/minecraft/server/IRecipe; getRecipeUsed
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IRecipe;)V setRecipeUsed
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	c ()Z isEmpty
	e ()V setChanged
net/minecraft/server/BlockTallPlantFlower net/minecraft/world/level/block/TallFlowerBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	b (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
net/minecraft/server/CircularTimer net/minecraft/util/FrameTimer
	a loggedTimes
	b logStart
	c logLength
	d logEnd
	a ()I getLogStart
	a (I)J getAverageDuration
	a (II)I scaleAverageDurationTo
	a (J)V logFrameDuration
	a (JII)I scaleSampleTo
	b ()I getLogEnd
	b (I)I wrapIndex
	c ()[J getLog
qm$13 net/minecraft/network/syncher/EntityDataSerializers$3
	a (Ljava/lang/Float;)Ljava/lang/Float; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Float;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Float; read
qm$14 net/minecraft/network/syncher/EntityDataSerializers$4
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Ljava/lang/String;)Ljava/lang/String; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/String;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/String; read
qm$11 net/minecraft/network/syncher/EntityDataSerializers$19
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntityPose; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/EntityPose;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/EntityPose; read
net/minecraft/server/DefinedStructureProcessorRotation net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor
	a integrity
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
net/minecraft/server/CommandSetBlock$Filter net/minecraft/server/commands/SetBlockCommand$Filter
net/minecraft/server/BehaviorInteractPlayer net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink
	a speed
	a (J)Z timedOut
	a (Lnet/minecraft/server/EntityVillager;)V followPlayer
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
qm$12 net/minecraft/network/syncher/EntityDataSerializers$2
	a (Ljava/lang/Integer;)Ljava/lang/Integer; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Integer;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Integer; read
qm$17 net/minecraft/network/syncher/EntityDataSerializers$7
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/ItemStack;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ItemStack; read
net/minecraft/server/BlockMelon net/minecraft/world/level/block/MelonBlock
	d ()Lnet/minecraft/server/BlockStem; getStem
	e ()Lnet/minecraft/server/BlockStemAttached; getAttachedStem
qm$18 net/minecraft/network/syncher/EntityDataSerializers$8
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Ljava/util/Optional;)Ljava/util/Optional; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/util/Optional;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/util/Optional; read
qm$15 net/minecraft/network/syncher/EntityDataSerializers$5
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IChatBaseComponent;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IChatBaseComponent; read
qm$16 net/minecraft/network/syncher/EntityDataSerializers$6
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Ljava/util/Optional;)Ljava/util/Optional; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/util/Optional;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/util/Optional; read
cpl$1 net/minecraft/world/level/storage/loot/entries/EmptyLootItem$1
ek$a net/minecraft/commands/synchronization/ArgumentTypes$Entry
	a clazz
	b serializer
	c name
qm$10 net/minecraft/network/syncher/EntityDataSerializers$18
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Ljava/util/OptionalInt;)Ljava/util/OptionalInt; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/util/OptionalInt;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/util/OptionalInt; read
net/minecraft/server/EnchantmentArrowKnockback net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/DataConverterColorlessShulkerEntity net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fix$0
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/LootTableRegistry net/minecraft/world/level/storage/loot/LootTables
	a LOGGER
	b GSON
	c tables
	a ()Ljava/util/Set; getIds
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)V lambda$apply$0
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/lang/String;Ljava/lang/String;)V lambda$apply$2
	a (Ljava/util/Map;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/LootCollector;Lcom/google/common/collect/ImmutableMap;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/LootTable;)V lambda$apply$1
	a (Lnet/minecraft/server/LootCollector;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/LootTable;Ljava/util/function/Function;)V validate
	a (Lnet/minecraft/server/LootTable;)Lcom/google/gson/JsonElement; serialize
	getLootTable (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootTable; get
vd$c net/minecraft/server/level/DistanceManager$PlayerTicketTracker
	d this$0
	e viewDistance
	f queueLevels
	g toUpdate
	a ()V runAllUpdates
	a (I)V updateViewDistance
	a (JII)V onLevelChange
	a (JIZZ)V onLevelChange
	a (JLnet/minecraft/server/Ticket;)V lambda$onLevelChange$5
	b (JI)V lambda$runAllUpdates$7
	b (JLnet/minecraft/server/Ticket;)V lambda$null$4
	c ()V lambda$null$0
	c (I)Z haveTicketFor
	c (JLnet/minecraft/server/Ticket;)V lambda$onLevelChange$2
	d (I)I lambda$onLevelChange$3
	d (J)I lambda$runAllUpdates$6
	d (JLnet/minecraft/server/Ticket;)V lambda$null$1
qm$19 net/minecraft/network/syncher/EntityDataSerializers$9
	a (Ljava/lang/Boolean;)Ljava/lang/Boolean; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Boolean;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Boolean; read
vd$b net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker
	a chunks
	b maxDistance
	c this$0
	a ()V runAllUpdates
	a (JI)V setLevel
	a (JII)V onLevelChange
	a (Ljava/lang/String;)V dumpChunks
	b (J)I getLevelFromSource
	c (J)I getLevel
	d (J)Z havePlayer
net/minecraft/server/WorldNBTStorage net/minecraft/world/level/storage/LevelStorage
	a fixerUpper
	b LOGGER
	baseDir worldDir
	f levelId
	g structureManager
	a (Lnet/minecraft/server/EntityHuman;)V save
	b (Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/NBTTagCompound; load
	e ()Ljava/lang/String; getLevelId
	f ()Lnet/minecraft/server/DefinedStructureManager; getStructureManager
	getDataFixer ()Lcom/mojang/datafixers/DataFixer; getFixerUpper
	getDirectory ()Ljava/io/File; getFolder
	getWorldData ()Lnet/minecraft/server/WorldData; prepareLevel
	h ()V initiateSession
	saveWorldData (Lnet/minecraft/server/WorldData;)V saveLevelData
	saveWorldData (Lnet/minecraft/server/WorldData;Lnet/minecraft/server/NBTTagCompound;)V saveLevelData
vd$a net/minecraft/server/level/DistanceManager$ChunkTicketTracker
	a this$0
	a (I)I runDistnaceUpdates
	a (JI)V setLevel
	b (J)I getLevelFromSource
	c (J)I getLevel
net/minecraft/server/VoxelShapeCube net/minecraft/world/phys/shapes/CubeVoxelShape
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;D)I findIndex
net/minecraft/server/FluidTypeWater net/minecraft/world/level/material/WaterFluid
	a ()Lnet/minecraft/server/TextureType; getRenderLayer
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/server/FluidType;)Z isSame
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V beforeDestroyingBlock
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Ljava/util/Random;)V animateTick
	b ()Lnet/minecraft/server/Item; getBucket
	b (Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/IBlockData; createLegacyBlock
	b (Lnet/minecraft/server/IWorldReader;)I getSlopeFindDistance
	c (Lnet/minecraft/server/IWorldReader;)I getDropOff
	d ()F getExplosionResistance
	e ()Lnet/minecraft/server/FluidType; getFlowing
	f ()Lnet/minecraft/server/FluidType; getSource
	g ()Z canConvertToSource
	j ()Lnet/minecraft/server/ParticleParam; getDripParticle
net/minecraft/server/WorldChunkManagerCheckerBoard net/minecraft/world/level/biome/CheckerboardBiomeSource
	c allowedBiomes
	d bitShift
	a (II)Lnet/minecraft/server/BiomeBase; getBiome
	a (III)Ljava/util/Set; getBiomesWithin
	a (IIIIZ)[Lnet/minecraft/server/BiomeBase; getBiomeBlock
	a (IIILjava/util/List;)Z containsOnly
	a (IIILjava/util/List;Ljava/util/Random;)Lnet/minecraft/server/BlockPosition; findBiome
	a (Lnet/minecraft/server/StructureGenerator;)Z canGenerateStructure
	b ()Ljava/util/Set; getSurfaceBlocks
	b (Lnet/minecraft/server/StructureGenerator;)Ljava/lang/Boolean; lambda$canGenerateStructure$0
avz$a net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal
	a trader
	b stopDistance
	c speedModifier
	d this$0
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;D)Z isTooFarAway
	d ()V stop
	e ()V tick
net/minecraft/server/BiomeExtremeHillsMutated net/minecraft/world/level/biome/GravellyMountainsBiome
net/minecraft/server/ContainerHorse net/minecraft/world/inventory/HorseInventoryMenu
	c horseContainer
	d horse
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()Lnet/minecraft/server/IInventory; getContainer
net/minecraft/server/CriterionTriggerNetherTravel net/minecraft/advancements/critereon/NetherTravelTrigger
	a ID
	b players
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Vec3D;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbl$b; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lx$a;)V removePlayerListener
net/minecraft/server/PacketLoginOutSetCompression net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket
	a compressionThreshold
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginOutListener;)V handle
	b ()I getCompressionThreshold
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
