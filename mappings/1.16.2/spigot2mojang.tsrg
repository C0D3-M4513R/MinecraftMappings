zy$b net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker
	a chunks
	b maxDistance
	c this$0
	a ()V runAllUpdates
	a (JI)V setLevel
	a (JII)V onLevelChange
	a (Ljava/lang/String;)V dumpChunks
	b (J)I getLevelFromSource
	c (J)I getLevel
	d (J)Z havePlayer
net/minecraft/server/PacketStatusListener net/minecraft/server/network/ServerStatusPacketListenerImpl
	a DISCONNECT_REASON
	d hasRequestedStatus
	minecraftServer server
	networkManager connection
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/PacketStatusInPing;)V handlePingRequest
	a (Lnet/minecraft/server/PacketStatusInStart;)V handleStatusRequest
net/minecraft/server/DataConverterSchemaV1486 net/minecraft/util/datafix/schemas/V1486
zy$a net/minecraft/server/level/DistanceManager$ChunkTicketTracker
	a this$0
	a (I)I runDistanceUpdates
	a (JI)V setLevel
	b (J)I getLevelFromSource
	c (J)I getLevel
zy$c net/minecraft/server/level/DistanceManager$PlayerTicketTracker
	d this$0
	e viewDistance
	f queueLevels
	g toUpdate
	a ()V runAllUpdates
	a (I)V updateViewDistance
	a (JII)V onLevelChange
	a (JIZZ)V onLevelChange
	a (JLnet/minecraft/server/Ticket;)V lambda$onLevelChange$5
	b (JI)V lambda$runAllUpdates$7
	b (JLnet/minecraft/server/Ticket;)V lambda$null$4
	c (I)Z haveTicketFor
	c (JLnet/minecraft/server/Ticket;)V lambda$onLevelChange$2
	d ()V lambda$null$0
	d (I)I lambda$onLevelChange$3
	d (J)I lambda$runAllUpdates$6
	d (JLnet/minecraft/server/Ticket;)V lambda$null$1
gw$23$1 net/minecraft/core/dispenser/DispenseItemBehavior$7$1
	b this$0
	a ()F getUncertainty
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityPotion;)V lambda$getProjectile$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
	b ()F getPower
net/minecraft/server/LootItemConditionRandomChance net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition
	a probability
	a (F)Ldbl$a; randomChance
	a (Lnet/minecraft/server/LootItemConditionRandomChance;)F access$000
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lnet/minecraft/server/LootItemConditionType; getType
	b (F)Lnet/minecraft/server/LootItemCondition; lambda$randomChance$0
net/minecraft/server/DataConverterSchemaV1483 net/minecraft/util/datafix/schemas/V1483
dyk$a net/minecraft/client/particle/SoulParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/CommandStopSound net/minecraft/server/commands/StopSoundCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$4
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/SoundCategory;Lnet/minecraft/server/MinecraftKey;)I stopSound
	a (Lnet/minecraft/server/SoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
	b (Lnet/minecraft/server/SoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
net/minecraft/server/WorldGenDecoratorEndGateway net/minecraft/world/level/levelgen/placement/EndGatewayPlacementDecorator
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/NBTTagInt net/minecraft/nbt/IntTag
	a TYPE
	a ()B getId
	a (I)Lnet/minecraft/server/NBTTagInt; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTTagType; getType
	c ()Lnet/minecraft/server/NBTBase; copy
	d ()Lnet/minecraft/server/NBTTagInt; copy
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
net/minecraft/server/DataConverterSchemaV1481 net/minecraft/util/datafix/schemas/V1481
net/minecraft/server/ServerPing net/minecraft/network/protocol/status/ServerStatus
	a description
	b players
	c version
	d favicon
	a ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	b ()Lnet/minecraft/server/ServerPing$ServerPingPlayerSample; getPlayers
	d ()Ljava/lang/String; getFavicon
	getServerData ()Lnet/minecraft/server/ServerPing$ServerData; getVersion
	setMOTD (Lnet/minecraft/server/IChatBaseComponent;)V setDescription
	setPlayerSample (Lnet/minecraft/server/ServerPing$ServerPingPlayerSample;)V setPlayers
	setServerInfo (Lnet/minecraft/server/ServerPing$ServerData;)V setVersion
net/minecraft/server/DataConverterLevelDataGeneratorOptions net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix
	a MAP
	a ()Ljava/lang/IllegalStateException; lambda$null$2
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; lambda$null$1
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object; lambda$convert$4
	a (Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$convert$6
	a (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; getLayerInfoFromString
	a (Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; convert
	a (Ljava/util/HashMap;)V lambda$static$0
	b (Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$null$5
	b (Ljava/lang/String;)Ljava/util/List; getLayersInfoFromString
net/minecraft/server/TileEntityCampfire net/minecraft/world/level/block/entity/CampfireBlockEntity
	cookingTimes cookingProgress
	cookingTotalTimes cookingTime
	Y_ ()V clearContent
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/RecipeCampfire;)Lnet/minecraft/server/ItemStack; lambda$cook$0
	a (Lnet/minecraft/server/ItemStack;)Ljava/util/Optional; getCookableRecipe
	a (Lnet/minecraft/server/ItemStack;I)Z placeFood
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	aj_ ()V tick
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; saveMetadataAndItems
	f ()V dowse
	h ()V cook
	j ()V makeParticles
	k ()V markUpdated
dby$a net/minecraft/world/level/timers/FunctionCallback$Serializer
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallback; deserialize
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/CustomFunctionCallback;)V serialize
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/CustomFunctionCallbackTimer;)V serialize
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallbackTimer; deserialize
ccz net/minecraft/world/level/block/entity/LidBlockEntity
	a (F)F getOpenNess
net/minecraft/server/WorldGenDecoratorLakeWater net/minecraft/world/level/levelgen/placement/LakeWaterPlacementDecorator
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorDungeonConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/BlockDiodeAbstract net/minecraft/world/level/block/DiodeBlock
	b SHAPE
	c POWERED
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isLocked
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z shouldTurnOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I getOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getAlternateSignalAt
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I getAlternateSignal
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I getInputSignal
	b_ (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	c (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z shouldPrioritize
	c (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V checkTickOnNeighbor
	d (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V updateNeighborsInFront
	g (Lnet/minecraft/server/IBlockData;)I getDelay
	h (Lnet/minecraft/server/IBlockData;)Z isAlternateInput
net/minecraft/server/WorldGenDecoratorDepthAverage net/minecraft/world/level/levelgen/placement/DepthAverageDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorHeightAverageConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/RayTrace$BlockCollisionOption net/minecraft/world/level/ClipContext$Block
	d shapeGetter
	e $VALUES
net/minecraft/server/ContainerHopper net/minecraft/world/inventory/HopperMenu
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()Lnet/minecraft/server/IInventory; getContainer
net/minecraft/server/BlockStepAbstract net/minecraft/world/level/block/SlabBlock
	a TYPE
	b WATERLOGGED
	c BOTTOM_AABB
	d TOP_AABB
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c_ (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
ejr$b net/minecraft/client/renderer/texture/Stitcher$Region
	a originX
	b originY
	c width
	d height
	e subSlots
	f holder
	a ()Lejr$a; getHolder
	a (Lejr$a;)Z add
	a (Ljava/util/function/Consumer;)V walk
	b ()I getX
	c ()I getY
cdl net/minecraft/world/level/block/entity/package-info
ejr$a net/minecraft/client/renderer/texture/Stitcher$Holder
	a spriteInfo
	b width
	c height
ejr$c net/minecraft/client/renderer/texture/Stitcher$SpriteLoader
net/minecraft/server/WorldGenFeatureDefinedStructureJigsawJunction net/minecraft/world/level/levelgen/feature/structures/JigsawJunction
	a sourceX
	b sourceGroundY
	c sourceZ
	d deltaY
	e destProjection
	a ()I getSourceX
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/server/WorldGenFeatureDefinedStructureJigsawJunction; deserialize
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; serialize
	b ()I getSourceGroundY
	c ()I getSourceZ
	d ()I getDeltaY
	e ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching; getDestProjection
dwt$2$1 net/minecraft/client/multiplayer/ServerStatusPinger$2$1
	a this$1
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V channelRead0
net/minecraft/server/LootValueBinomial net/minecraft/world/level/storage/loot/BinomialDistributionGenerator
	d n
	e p
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (IF)Lnet/minecraft/server/LootValueBinomial; binomial
	a (Ljava/util/Random;)I getInt
	a (Lnet/minecraft/server/LootValueBinomial;)I access$000
	b (Lnet/minecraft/server/LootValueBinomial;)F access$100
net/minecraft/server/BlockIceFrost net/minecraft/world/level/block/FrostedIceBlock
	a AGE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;I)Z fewerNeigboursThan
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z slightlyMelt
cdv net/minecraft/world/level/block/package-info
net/minecraft/server/PacketPlayOutRemoveEntityEffect net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket
	a entityId
	b effect
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getEntity
	b ()Lnet/minecraft/server/MobEffectList; getEffect
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
cdu net/minecraft/world/level/block/grower/package-info
net/minecraft/server/ScoreboardTeamBase net/minecraft/world/scores/Team
	allowFriendlyFire ()Z isAllowFriendlyFire
	getPlayerNameSet ()Ljava/util/Collection; getPlayers
	i ()Z canSeeFriendlyInvisibles
	isAlly (Lnet/minecraft/server/ScoreboardTeamBase;)Z isAlliedTo
	j ()Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility; getNameTagVisibility
	n ()Lnet/minecraft/server/EnumChatFormat; getColor
net/minecraft/server/BlockBannerWall net/minecraft/world/level/block/WallBannerBlock
	a FACING
	b SHAPES
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	i ()Ljava/lang/String; getDescriptionId
dyk$1 net/minecraft/client/particle/SoulParticle$1
net/minecraft/server/PathfinderGoalLookAtTradingPlayer net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal
	g villager
	a ()Z canUse
net/minecraft/server/BlockSkullWall net/minecraft/world/level/block/WallSkullBlock
	a FACING
	b AABBS
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	i ()Ljava/lang/String; getDescriptionId
cec net/minecraft/world/level/block/piston/package-info
net/minecraft/server/Particle net/minecraft/core/particles/ParticleType
	a overrideLimiter
	b deserializer
	c ()Z getOverrideLimiter
	d ()Lhf$a; getDeserializer
	e ()Lcom/mojang/serialization/Codec; codec
net/minecraft/server/AreaContextTransformed net/minecraft/world/level/newbiome/context/BigContext
	a ()J getMixedSeed
	a (II)I random
	a (IIII)I random
	a (JJ)V initRandom
	a (Lnet/minecraft/server/AreaTransformer8;)Lnet/minecraft/server/Area; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/Area;)Lnet/minecraft/server/Area; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;)Lnet/minecraft/server/Area; createResult
net/minecraft/server/BlockBeetroot net/minecraft/world/level/block/BeetrootBlock
	a AGE
	c SHAPE_BY_AGE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/World;)I getBonemealAgeIncrease
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c ()Lnet/minecraft/server/BlockStateInteger; getAgeProperty
	d ()I getMaxAge
	e ()Lnet/minecraft/server/IMaterial; getBaseSeedId
net/minecraft/server/DataConverterSchemaV1466 net/minecraft/util/datafix/schemas/V1466
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
ceh net/minecraft/world/level/block/state/package-info
net/minecraft/server/DataConverterSchemaV1460 net/minecraft/util/datafix/schemas/V1460
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$43
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$26
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$39
	a (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$32
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$45
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$42
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$25
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	b (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$30
	c ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$44
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$41
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$24
	d ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$37
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$40
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$23
	e ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$36
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$38
	e (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$22
	f ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$27
	f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$35
	f (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$21
	g (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$34
	g (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$20
	h (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$33
	h (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$19
	i (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$31
	i (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$18
	j (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$29
	j (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$17
	k (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$28
	k (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$16
	l (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$1
	l (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$15
	m (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	m (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$14
	n (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$13
	o (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$12
	p (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
	q (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
	r (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
	s (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
	t (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
	u (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
	v (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
	w (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	x (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	y (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
dbh$a net/minecraft/world/level/storage/loot/predicates/ExplosionCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionSurvivesExplosion;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionSurvivesExplosion; deserialize
cjv$a net/minecraft/world/level/levelgen/feature/JunglePyramidFeature$FeatureStart
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)V generatePieces
cel net/minecraft/world/level/block/state/pattern/package-info
net/minecraft/server/MapIcon$Type net/minecraft/world/level/saveddata/maps/MapDecoration$Type
	B icon
	C renderedOnFrame
	D mapColor
	E $VALUES
	a ()B getIcon
	a (B)Lnet/minecraft/server/MapIcon$Type; byIcon
	b ()Z isRenderedOnFrame
	c ()Z hasMapColor
	d ()I getMapColor
dlv$1 net/minecraft/client/gui/components/PlayerTabOverlay$1
cep net/minecraft/world/level/block/state/predicate/package-info
net/minecraft/server/EntityTypes net/minecraft/world/entity/EntityType
	be LOGGER
	bf factory
	bg category
	bh immuneTo
	bi serialize
	bj summon
	bk fireImmune
	bl canSpawnFarFromPlayer
	bm clientTrackingRange
	bn updateInterval
	bo descriptionId
	bp description
	bq lootTable
	br dimensions
	a ()Z canSerialize
	a (DDD)Lnet/minecraft/server/AxisAlignedBB; getAABB
	a (ILnet/minecraft/server/World;)Lnet/minecraft/server/Entity; create
	a (Ljava/lang/String;)Ljava/util/Optional; byString
	a (Ljava/lang/String;Lnet/minecraft/server/EntityTypes$Builder;)Lnet/minecraft/server/EntityTypes; register
	a (Lnet/minecraft/server/Entity;)Z lambda$getYOffset$0
	a (Lnet/minecraft/server/IBlockData;)Z isBlockDangerous
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/AxisAlignedBB;)D getYOffset
	a (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/Optional; by
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/Entity;)V lambda$create$2
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/World;)Ljava/util/Optional; create
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/World;Ljava/util/function/Function;)Lnet/minecraft/server/Entity; loadEntityRecursive
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/World;Ljava/util/function/Function;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Entity; lambda$loadEntityRecursive$4
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; create
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;Lnet/minecraft/server/NBTTagCompound;)V updateCustomEntityTag
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/Entity; create
	b ()Z canSummon
	b (Lnet/minecraft/server/NBTTagCompound;)V lambda$create$3
	b (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/World;)Ljava/util/Optional; loadStaticEntity
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/Entity; lambda$create$1
	c ()Z fireImmune
	createCreature (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumMobSpawn;ZZ)Lnet/minecraft/server/Entity; create
	d ()Z canSpawnFarFromPlayer
	e ()Lnet/minecraft/server/EnumCreatureType; getCategory
	f ()Ljava/lang/String; getDescriptionId
	g ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	getChunkRange ()I clientTrackingRange
	getName (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/MinecraftKey; getKey
	getUpdateInterval ()I updateInterval
	h ()Ljava/lang/String; toShortString
	i ()Lnet/minecraft/server/MinecraftKey; getDefaultLootTable
	isDeltaTracking ()Z trackDeltas
	j ()F getWidth
	k ()F getHeight
	l ()Lnet/minecraft/server/EntitySize; getDimensions
	spawnCreature (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumMobSpawn;ZZ)Lnet/minecraft/server/Entity; spawn
	spawnCreature (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumMobSpawn;ZZ)Lnet/minecraft/server/Entity; spawn
dxh$1 net/minecraft/client/particle/DripParticle$1
net/minecraft/server/CreativeModeTab net/minecraft/world/item/CreativeModeTab
	a TABS
	b TAB_BUILDING_BLOCKS
	c TAB_DECORATIONS
	d TAB_REDSTONE
	e TAB_TRANSPORTATION
	f TAB_MISC
	g TAB_SEARCH
	h TAB_FOOD
	i TAB_TOOLS
	j TAB_COMBAT
	k TAB_BREWING
	l TAB_MATERIALS
	m TAB_HOTBAR
	n TAB_INVENTORY
	o id
	p langId
	q displayName
	r recipeFolderName
	s backgroundSuffix
	t canScroll
	u showTitle
	v enchantmentCategories
	w iconItemStack
	a ()I getId
	a (Ljava/lang/String;)Lnet/minecraft/server/CreativeModeTab; setBackgroundSuffix
	a (Lnet/minecraft/server/EnchantmentSlotType;)Z hasEnchantmentCategory
	a (Lnet/minecraft/server/NonNullList;)V fillItemList
	a ([Lnet/minecraft/server/EnchantmentSlotType;)Lnet/minecraft/server/CreativeModeTab; setEnchantmentCategories
	b ()Ljava/lang/String; getRecipeFolderName
	b (Ljava/lang/String;)Lnet/minecraft/server/CreativeModeTab; setRecipeFolderName
	c ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	d ()Lnet/minecraft/server/ItemStack; getIconItem
	e ()Lnet/minecraft/server/ItemStack; makeIcon
	f ()Ljava/lang/String; getBackgroundSuffix
	g ()Z showTitle
	h ()Lnet/minecraft/server/CreativeModeTab; hideTitle
	i ()Z canScroll
	j ()Lnet/minecraft/server/CreativeModeTab; hideScroll
	k ()I getColumn
	l ()Z isTopRow
	m ()Z isAlignedRight
	n ()[Lnet/minecraft/server/EnchantmentSlotType; getEnchantmentCategories
net/minecraft/server/TileEntityFurnaceFurnace net/minecraft/world/level/block/entity/FurnaceBlockEntity
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
net/minecraft/server/BlockTarget net/minecraft/world/level/block/TargetBlock
	a OUTPUT_POWER
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/IBlockData;ILnet/minecraft/server/BlockPosition;I)V setOutputPower
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/Entity;)I updateRedstoneOutput
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/Vec3D;)I getRedstoneStrength
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/IProjectile;)V onProjectileHit
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b_ (Lnet/minecraft/server/IBlockData;)Z isSignalSource
net/minecraft/server/BlockStateList net/minecraft/world/level/block/state/StateDefinition
	a NAME_PATTERN
	b owner
	c propertiesByName
	d states
	a ()Lcom/google/common/collect/ImmutableList; getPossibleStates
	a (Lcef$b;Ljava/lang/Object;Lcom/mojang/serialization/MapCodec;Ljava/util/Map;Ljava/util/List;Ljava/util/List;)V lambda$new$3
	a (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Lnet/minecraft/server/IBlockState;)Lcom/mojang/serialization/MapCodec; appendPropertyCodec
	a (Ljava/lang/String;)Lnet/minecraft/server/IBlockState; getProperty
	a (Ljava/util/List;Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/util/List; lambda$null$1
	a (Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/IBlockDataHolder; lambda$new$0
	a (Lnet/minecraft/server/IBlockState;Lcom/mojang/datafixers/util/Pair;)Lnet/minecraft/server/IBlockDataHolder; lambda$appendPropertyCodec$5
	a (Lnet/minecraft/server/IBlockState;Ljava/util/List;)Ljava/util/stream/Stream; lambda$new$2
	a (Lnet/minecraft/server/IBlockState;Ljava/util/function/Supplier;)Lcfg$a; lambda$appendPropertyCodec$4
	a (Lnet/minecraft/server/IBlockState;Lnet/minecraft/server/IBlockDataHolder;)Lcom/mojang/datafixers/util/Pair; lambda$appendPropertyCodec$6
	d ()Ljava/util/Collection; getProperties
	e ()Ljava/util/regex/Pattern; access$000
	getBlock ()Ljava/lang/Object; getOwner
	getBlockData ()Lnet/minecraft/server/IBlockDataHolder; any
net/minecraft/server/RecipeRepair net/minecraft/world/item/crafting/RepairItemRecipe
	a (II)Z canCraftInDimensions
	a (Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lnet/minecraft/server/Enchantment;)V lambda$assemble$0
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
f com/mojang/math/Transformation
	a matrix
	b decomposed
	c translation
	d leftRotation
	e scale
	f rightRotation
	g IDENTITY
	a ()Lf; identity
	a (Lf;)Lf; compose
	a (Lnet/minecraft/server/Matrix4f;)Lcom/mojang/datafixers/util/Pair; toAffine
	a (Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Quaternion;Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Quaternion;)Lnet/minecraft/server/Matrix4f; compose
	b ()Lf; inverse
	c ()Lnet/minecraft/server/Matrix4f; getMatrix
	d ()Lnet/minecraft/server/Quaternion; getLeftRotation
	e ()V ensureDecomposed
	f ()Lf; lambda$static$0
bml$a net/minecraft/world/item/ProjectileWeaponItem$Type
	a BOW
	b CROSSBOW
	c $VALUES
net/minecraft/server/PacketPlayOutScoreboardObjective net/minecraft/network/protocol/game/ClientboundSetObjectivePacket
	a objectiveName
	b displayName
	c renderType
	d method
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/lang/String; getObjectiveName
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	d ()I getMethod
	e ()Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay; getRenderType
h com/mojang/math/Vector4f
	a x
	b y
	c z
	d w
	a ()F x
	a (FFFF)V set
	a (Lh;)F dot
	a (Lnet/minecraft/server/Matrix4f;)V transform
	a (Lnet/minecraft/server/Quaternion;)V transform
	a (Lnet/minecraft/server/Vector3fa;)V mul
	b ()F y
	c ()F z
	d ()F w
	e ()Z normalize
	f ()V perspectiveDivide
j net/minecraft/CharPredicate
	a ()Lj; negate
	a (C)Z lambda$negate$1
	a (Lj;)Lj; and
	a (Lj;C)Z lambda$or$2
	b (Lj;)Lj; or
	b (Lj;C)Z lambda$and$0
cfo net/minecraft/world/level/block/state/properties/package-info
net/minecraft/server/DataConverterSchemaV1470 net/minecraft/util/datafix/schemas/V1470
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
cfq net/minecraft/world/level/border/BorderStatus
	a GROWING
	b SHRINKING
	c STATIONARY
	d color
	e $VALUES
	a ()I getColor
cfs net/minecraft/world/level/border/package-info
r net/minecraft/FieldsAreNonnullByDefault
t net/minecraft/MethodsReturnNonnullByDefault
dsr$d net/minecraft/client/main/GameConfig$UserData
	a user
	b userProperties
	c profileProperties
	d proxy
dsr$c net/minecraft/client/main/GameConfig$ServerData
	a hostname
	b port
dsr$b net/minecraft/client/main/GameConfig$GameData
	a demo
	b launchVersion
	c versionType
	d disableMultiplayer
	e disableChat
net/minecraft/server/WorldGenFeatureConfiguration net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration
	k NONE
	an_ ()Ljava/util/stream/Stream; getFeatures
dsr$a net/minecraft/client/main/GameConfig$FolderData
	a gameDirectory
	b resourcePackDirectory
	c assetDirectory
	d assetIndex
	a ()Lejy; getAssetIndex
net/minecraft/server/TickListPriority net/minecraft/world/level/TickPriority
	h value
	i $VALUES
	a ()I getValue
	a (I)Lnet/minecraft/server/TickListPriority; byValue
net/minecraft/server/Statistic net/minecraft/stats/Stat
	o formatter
	p value
	q type
	a (I)Ljava/lang/String; format
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/String; locationToKey
	a (Lnet/minecraft/server/StatisticWrapper;Ljava/lang/Object;)Ljava/lang/String; buildName
	b ()Ljava/lang/Object; getValue
	getWrapper ()Lnet/minecraft/server/StatisticWrapper; getType
ms$1 net/minecraft/nbt/StringTag$1
	a ()Ljava/lang/String; getName
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagString; load
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; load
	c ()Z isValue
net/minecraft/server/WorldGenEndCityPieces$PieceGenerator net/minecraft/world/level/levelgen/structure/EndCityPieces$SectionGenerator
	a ()V init
	a (Lnet/minecraft/server/DefinedStructureManager;ILnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)Z generate
net/minecraft/server/MaterialMapColor net/minecraft/world/level/material/MaterialColor
	A COLOR_BLUE
	B COLOR_BROWN
	C COLOR_GREEN
	D COLOR_RED
	E COLOR_BLACK
	F GOLD
	G DIAMOND
	H LAPIS
	I EMERALD
	J PODZOL
	K NETHER
	L TERRACOTTA_WHITE
	M TERRACOTTA_ORANGE
	N TERRACOTTA_MAGENTA
	O TERRACOTTA_LIGHT_BLUE
	P TERRACOTTA_YELLOW
	Q TERRACOTTA_LIGHT_GREEN
	R TERRACOTTA_PINK
	S TERRACOTTA_GRAY
	T TERRACOTTA_LIGHT_GRAY
	U TERRACOTTA_CYAN
	V TERRACOTTA_PURPLE
	W TERRACOTTA_BLUE
	X TERRACOTTA_BROWN
	Y TERRACOTTA_GREEN
	Z TERRACOTTA_RED
	a MATERIAL_COLORS
	aa TERRACOTTA_BLACK
	ab CRIMSON_NYLIUM
	ac CRIMSON_STEM
	ad CRIMSON_HYPHAE
	ae WARPED_NYLIUM
	af WARPED_STEM
	ag WARPED_HYPHAE
	ah WARPED_WART_BLOCK
	aj id
	b NONE
	c GRASS
	d SAND
	e WOOL
	f FIRE
	g ICE
	h METAL
	i PLANT
	j SNOW
	k CLAY
	l DIRT
	m STONE
	n WATER
	o WOOD
	p QUARTZ
	q COLOR_ORANGE
	r COLOR_MAGENTA
	rgb col
	s COLOR_LIGHT_BLUE
	t COLOR_YELLOW
	u COLOR_LIGHT_GREEN
	v COLOR_PINK
	w COLOR_GRAY
	x COLOR_LIGHT_GRAY
	y COLOR_CYAN
	z COLOR_PURPLE
	a (I)I calculateRGBColor
ne$b net/minecraft/network/ConnectionProtocol$ProtocolBuilder
	a flows
	a (Lne$b;)Ljava/util/Map; access$200
	a (Lnet/minecraft/server/EnumProtocolDirection;Lne$a;)Lne$b; addFlow
ne$a net/minecraft/network/ConnectionProtocol$PacketSet
	a classToId
	b idToConstructor
	a ()Ljava/lang/Iterable; getAllPackets
	a (I)Lnet/minecraft/server/Packet; createPacket
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$new$0
	a (Ljava/lang/Class;)Ljava/lang/Integer; getId
	a (Ljava/lang/Class;Ljava/util/function/Supplier;)Lne$a; addPacket
biy$1 net/minecraft/world/inventory/LecternMenu$1
	a this$0
	d ()V setChanged
cgp net/minecraft/world/level/chunk/package-info
net/minecraft/server/HttpUtilities net/minecraft/util/HttpUtil
	a DOWNLOAD_EXECUTOR
	b LOGGER
	a ()I getAvailablePort
	a (Ljava/io/File;Ljava/lang/String;Ljava/util/Map;ILnet/minecraft/server/IProgressUpdate;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture; downloadTo
	a (Ljava/net/URL;Ljava/lang/String;ZLjava/net/Proxy;)Ljava/lang/String; performPost
	a (Ljava/net/URL;Ljava/util/Map;ZLjava/net/Proxy;)Ljava/lang/String; performPost
	a (Ljava/util/Map;)Ljava/lang/String; buildQuery
	a (Lnet/minecraft/server/IProgressUpdate;Ljava/lang/String;Ljava/net/Proxy;Ljava/util/Map;Ljava/io/File;I)Ljava/lang/Object; lambda$downloadTo$0
cgz net/minecraft/world/level/chunk/storage/package-info
net/minecraft/server/PacketLoginOutListener net/minecraft/network/protocol/login/ClientLoginPacketListener
	a (Lnet/minecraft/server/PacketLoginOutCustomPayload;)V handleCustomQuery
	a (Lnet/minecraft/server/PacketLoginOutDisconnect;)V handleDisconnect
	a (Lnet/minecraft/server/PacketLoginOutEncryptionBegin;)V handleHello
	a (Lnet/minecraft/server/PacketLoginOutSetCompression;)V handleCompression
	a (Lnet/minecraft/server/PacketLoginOutSuccess;)V handleGameProfile
net/minecraft/server/ItemBisected net/minecraft/world/item/DoubleHighBlockItem
	a (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/IBlockData;)Z placeBlock
eku$1 net/minecraft/client/resources/metadata/animation/AnimationMetadataSection$1
	a (II)Lcom/mojang/datafixers/util/Pair; getFrameSize
cfr$1 net/minecraft/world/level/border/WorldBorder$1
chf net/minecraft/world/level/dimension/package-info
che net/minecraft/world/level/dimension/end/package-info
net/minecraft/server/BlockLadder net/minecraft/world/level/block/LadderBlock
	b WATERLOGGED
	c EAST_AABB
	d WEST_AABB
	e SOUTH_AABB
	f NORTH_AABB
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z canAttachTo
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
eax$a net/minecraft/client/renderer/block/model/BlockModel$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; getOverrides
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Leax; deserialize
	a (Lcom/google/gson/JsonObject;)Z getAmbientOcclusion
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; parseTextureLocationOrReference
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; getElements
	b (Lcom/google/gson/JsonObject;)Ljava/util/Map; getTextureMap
	c (Lcom/google/gson/JsonObject;)Ljava/lang/String; getParentName
eag$1 net/minecraft/client/renderer/RenderType$1
eax$c net/minecraft/client/renderer/block/model/BlockModel$LoopException
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSimple net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleRoom
	p mainDesign
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
eax$b net/minecraft/client/renderer/block/model/BlockModel$GuiLight
	a FRONT
	b SIDE
	c name
	d $VALUES
	a ()Z lightLikeBlock
	a (Ljava/lang/String;)Leax$b; getByName
net/minecraft/server/DataConverterSchemaV1451 net/minecraft/util/datafix/schemas/V1451
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$0
cyd$a$1 net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess$1
	a val$lockPath
	b this$1
	a (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult; postVisitDirectory
	a (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; visitFile
net/minecraft/server/BlockGlass net/minecraft/world/level/block/GlassBlock
cyd$a$2 net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess$2
	a val$rootPath
	b val$stream
	c this$1
	a (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; visitFile
ce$a net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance
	a damage
	b entity
	a (Lav$a;)Lce$a; playerHurtEntity
	a (Lav$a;Lnet/minecraft/server/CriterionConditionEntity;)Lce$a; playerHurtEntity
	a (Lnet/minecraft/server/CriterionConditionDamage;)Lce$a; playerHurtEntity
	a (Lnet/minecraft/server/CriterionConditionDamage;Lnet/minecraft/server/CriterionConditionEntity;)Lce$a; playerHurtEntity
	a (Lnet/minecraft/server/CriterionConditionEntity;)Lce$a; playerHurtEntity
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/DamageSource;FFZ)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	c ()Lce$a; playerHurtEntity
net/minecraft/server/ServerPing$ServerPingPlayerSample$Serializer net/minecraft/network/protocol/status/ServerStatus$Players$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/ServerPing$ServerPingPlayerSample; deserialize
	a (Lnet/minecraft/server/ServerPing$ServerPingPlayerSample;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
nv$c net/minecraft/network/chat/HoverEvent$ItemStackInfo
	a item
	b count
	c tag
	d itemStack
	a ()Lnet/minecraft/server/ItemStack; getItemStack
	a (Lcom/google/gson/JsonElement;)Lnv$c; access$400
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnv$c; access$200
	a (Lnv$c;)Lcom/google/gson/JsonElement; access$300
	b ()Lcom/google/gson/JsonElement; serialize
	b (Lcom/google/gson/JsonElement;)Lnv$c; create
	b (Lnet/minecraft/server/IChatBaseComponent;)Lnv$c; create
nv$b net/minecraft/network/chat/HoverEvent$EntityTooltipInfo
	a type
	b id
	c name
	d linesCache
	a ()Lcom/google/gson/JsonElement; serialize
	a (Lcom/google/gson/JsonElement;)Lnv$b; create
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnv$b; create
	b ()Ljava/util/List; getTooltipLines
net/minecraft/server/ControllerMoveFlying net/minecraft/world/entity/ai/control/FlyingMoveControl
	i maxTurn
	j hoversInPlace
	a ()V tick
net/minecraft/server/BehaviorBedJump net/minecraft/world/entity/ai/behavior/JumpOnBed
	b speedModifier
	c targetBed
	d remainingTimeToReachBed
	e remainingJumps
	f remainingCooldownUntilNextJump
	a (J)Z timedOut
	a (Lnet/minecraft/server/EntityInsentient;)Ljava/util/Optional; getNearestBed
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BlockPosition;)V startWalkingTowardsBed
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z isBed
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BlockPosition;)V lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z nearBed
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V stop
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z onOrOverBed
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)Z canStillUse
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z onBedSurface
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	e (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z tiredOfWalking
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z tiredOfJumping
ne$1 net/minecraft/network/ConnectionProtocol$1
net/minecraft/server/EntityHoglin net/minecraft/world/entity/monster/hoglin/Hoglin
	bo SENSOR_TYPES
	bp MEMORY_TYPES
	bq DATA_IMMUNE_TO_ZOMBIFICATION
	br attackAnimationRemainingTicks
	conversionTicks timeInOverworld
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	M ()V sendDebugPackets
	N ()V customServerAiStep
	a (B)V handleEntityEvent
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/server/BehaviorController; makeBrain
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/SoundEffect;)V playSound
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	au ()Lnet/minecraft/server/SoundEffect; getSwimSound
	av ()Lnet/minecraft/server/SoundEffect; getSwimSplashSound
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bb ()D getPassengersRidingOffset
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkHoglinSpawnRules
	c (Lnet/minecraft/server/WorldServer;)V finishConversion
	cI ()Lnet/minecraft/server/BehaviorController; getBrain
	cJ ()Larc$b; brainProvider
	cU ()Z shouldDropExperience
	ct ()Lnet/minecraft/server/SoundCategory; getSoundSource
	d (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityLiving;)V blockedByShield
	eK ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eL ()Z isAdult
	eM ()I getAttackAnimationRemainingTicks
	eO ()Z canBeHunted
	eP ()Z canFallInLove
	eU ()F getMovementSpeed
	h (D)Z removeWhenFarAway
	k ()V aiStep
	k (Lnet/minecraft/server/ItemStack;)Z isFood
	m ()V ageBoundaryReached
	u (Z)V setCannotBeHunted
net/minecraft/server/ChatHexColor net/minecraft/network/chat/TextColor
	a LEGACY_FORMAT_TO_COLOR
	b NAMED_COLORS
	rgb value
	a ()I getValue
	a (I)Lnet/minecraft/server/ChatHexColor; fromRgb
	a (Ljava/lang/String;)Lnet/minecraft/server/ChatHexColor; parseColor
	a (Lnet/minecraft/server/ChatHexColor;)Ljava/lang/String; lambda$static$1
	a (Lnet/minecraft/server/EnumChatFormat;)Lnet/minecraft/server/ChatHexColor; fromLegacyFormat
	b ()Ljava/lang/String; serialize
	b (Lnet/minecraft/server/EnumChatFormat;)Lnet/minecraft/server/ChatHexColor; lambda$static$0
	c ()Ljava/lang/String; formatValue
net/minecraft/server/WorldGenFeatureDefinedStructurePools net/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType
	a SINGLE
	b LIST
	c FEATURE
	d EMPTY
	e LEGACY
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$0
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; register
net/minecraft/server/ArgumentEntitySummon net/minecraft/commands/arguments/EntitySummonArgument
	a ERROR_UNKNOWN_ENTITY
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentEntitySummon; id
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/MinecraftKey; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; getSummonableEntity
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; verifyCanSummon
	b (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$verifyCanSummon$1
net/minecraft/server/WorldGenFoilagePlacerAcacia net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer
	a CODEC
	a ()Lnet/minecraft/server/WorldGenFoilagePlacers; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	a (Ljava/util/Random;ILnet/minecraft/server/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;ILcni$b;IILjava/util/Set;ILnet/minecraft/server/StructureBoundingBox;)V createFoliage
cie net/minecraft/world/level/levelgen/carver/package-info
net/minecraft/server/ReportedException net/minecraft/ReportedException
	a report
	a ()Lnet/minecraft/server/CrashReport; getReport
net/minecraft/server/DebugReportGenerator net/minecraft/data/DataGenerator
	a LOGGER
	b inputFolders
	c outputFolder
	d providers
	a ()Ljava/util/Collection; getInputFolders
	a (Lnet/minecraft/server/DebugReportProvider;)V addProvider
	b ()Ljava/nio/file/Path; getOutputFolder
	c ()V run
bza$1 net/minecraft/world/level/block/RedStoneWireBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RedstoneSide
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$Mirror
cfr$d net/minecraft/world/level/border/WorldBorder$StaticBorderExtent
	a this$0
	b size
	c minX
	d minZ
	e maxX
	f maxZ
	g shape
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lcfq; getStatus
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Lcfr$a; update
	m ()Lnet/minecraft/server/VoxelShape; getCollisionShape
	n ()V updateBox
net/minecraft/server/PacketPlayInFlying$PacketPlayInPosition net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
cfr$c net/minecraft/world/level/border/WorldBorder$Settings
	a centerX
	b centerZ
	c damagePerBlock
	d safeZone
	e warningBlocks
	f warningTime
	g size
	h sizeLerpTime
	i sizeLerpTarget
	a ()D getCenterX
	a (Lcom/mojang/serialization/DynamicLike;Lcfr$c;)Lcfr$c; read
	a (Lnet/minecraft/server/NBTTagCompound;)V write
	b ()D getCenterZ
	c ()D getDamagePerBlock
	d ()D getSafeZone
	e ()I getWarningBlocks
	f ()I getWarningTime
	g ()D getSize
	h ()J getSizeLerpTime
	i ()D getSizeLerpTarget
cfr$b net/minecraft/world/level/border/WorldBorder$MovingBorderExtent
	a this$0
	b from
	c to
	d lerpEnd
	e lerpBegin
	f lerpDuration
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lcfq; getStatus
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Lcfr$a; update
	m ()Lnet/minecraft/server/VoxelShape; getCollisionShape
cfr$a net/minecraft/world/level/border/WorldBorder$BorderExtent
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lcfq; getStatus
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Lcfr$a; update
	m ()Lnet/minecraft/server/VoxelShape; getCollisionShape
mb$1 net/minecraft/nbt/ByteTag$1
	a ()Ljava/lang/String; getName
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagByte; load
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; load
	c ()Z isValue
net/minecraft/server/RecipeItemStack$Provider net/minecraft/world/item/crafting/Ingredient$Value
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
net/minecraft/server/WorldGenCarverWrapper net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver
	a DIRECT_CODEC
	b CODEC
	c LIST_CODEC
	d worldCarver
	e config
	a ()Lnet/minecraft/server/WorldGenCarverConfiguration; config
	a (Ljava/util/Random;II)Z isStartChunk
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;)Z carve
	a (Lnet/minecraft/server/WorldGenCarverWrapper;)Lnet/minecraft/server/WorldGenCarverAbstract; lambda$static$0
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStones net/minecraft/world/level/levelgen/structure/StrongholdPieces$SmoothStoneSelector
	a (Ljava/util/Random;IIIZ)V next
net/minecraft/server/WorldGenFeatureOceanRuin$Temperature net/minecraft/world/level/levelgen/structure/OceanRuinFeature$Type
	c CODEC
	d BY_NAME
	e name
	f $VALUES
	a ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenFeatureOceanRuin$Temperature; byName
	a (Lnet/minecraft/server/WorldGenFeatureOceanRuin$Temperature;)Lnet/minecraft/server/WorldGenFeatureOceanRuin$Temperature; lambda$static$0
	b ()Ljava/lang/String; getName
net/minecraft/server/WorldGenDecoratorEmpty net/minecraft/world/level/levelgen/placement/NopePlacementDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/GameRules$GameRuleVisitor net/minecraft/world/level/GameRules$GameRuleTypeVisitor
	a (Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleDefinition;)V visit
	b (Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleDefinition;)V visitBoolean
	c (Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleDefinition;)V visitInteger
net/minecraft/server/ArgumentItemPredicate net/minecraft/commands/arguments/item/ItemPredicateArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	a ()Lnet/minecraft/server/ArgumentItemPredicate; itemPredicate
	a (Lcom/mojang/brigadier/StringReader;)Lez$b; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; getItemPredicate
	a (Lez$a;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate; lambda$parse$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/ArgumentParserItemStack;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate; lambda$parse$2
net/minecraft/server/ArgumentNBTKey net/minecraft/commands/arguments/NbtPathArgument
	a ERROR_INVALID_NODE
	b ERROR_NOTHING_FOUND
	c EXAMPLES
	a ()Lnet/minecraft/server/ArgumentNBTKey; nbtPath
	a (C)Z isAllowedInUnquotedName
	a (Lcom/mojang/brigadier/StringReader;)Ldr$h; parse
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Ldr$i; readObjectNode
	a (Lcom/mojang/brigadier/StringReader;Z)Ldr$i; parseNode
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldr$h; getPath
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/function/Predicate; access$000
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTBase;)Z lambda$createTagPredicate$1
	b (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; readUnquotedName
	b (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/function/Predicate; createTagPredicate
bs$a net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance
	a victims
	b uniqueEntityTypes
	a (Ljava/util/Collection;I)Z matches
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lbs$a; crossbowKilled
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a ([Lbg$a;)Lbs$a; crossbowKilled
dzn$d net/minecraft/client/renderer/DimensionSpecialEffects$SkyType
	a NONE
	b NORMAL
	c END
	d $VALUES
net/minecraft/server/DataConverterSchemaV99 net/minecraft/util/datafix/schemas/V99
	a ADD_NAMES
	b LOGGER
	c ITEM_TO_BLOCKENTITY
	a ()Ljava/util/Map; access$000
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$21
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$34
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$33
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object; addNames
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$addNames$35
	a (Ljava/util/HashMap;)V lambda$static$32
	a (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$27
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$30
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$31
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$20
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerThrowableProjectile
	b (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$24
	c ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$29
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$28
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$19
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMinecart
	d ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$26
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$25
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$18
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$23
	e (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$17
	f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$22
	f (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$16
	g (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$14
	g (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$15
	h (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$12
	h (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$13
	i (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$3
	i (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
	j (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMinecart$2
	j (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
	k (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerThrowableProjectile$1
	k (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
	l (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	l (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
	m (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
	n (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
	o (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
	p (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
net/minecraft/server/ItemBed net/minecraft/world/item/BedItem
	a (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/IBlockData;)Z placeBlock
net/minecraft/server/PacketStatusInListener net/minecraft/network/protocol/status/ServerStatusPacketListener
	a (Lnet/minecraft/server/PacketStatusInPing;)V handlePingRequest
	a (Lnet/minecraft/server/PacketStatusInStart;)V handleStatusRequest
net/minecraft/server/PathfinderWater net/minecraft/world/level/pathfinder/SwimNodeEvaluator
	j allowBreaching
	a (DDD)Lnet/minecraft/server/PathDestination; getGoal
	a (III)Lnet/minecraft/server/PathPoint; getNode
	a (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;IIILnet/minecraft/server/EntityInsentient;IIIZZ)Lnet/minecraft/server/PathType; getBlockPathType
	a ([Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)I getNeighbors
	b ()Lnet/minecraft/server/PathPoint; getStart
	b (III)Lnet/minecraft/server/PathPoint; getWaterNode
	c (III)Lnet/minecraft/server/PathType; isFree
net/minecraft/server/BlockSlowSand net/minecraft/world/level/block/SoulSandBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getVisualShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getBlockSupportShape
dzn$b net/minecraft/client/renderer/DimensionSpecialEffects$NetherEffects
	a (II)Z isFoggyAt
	a (Lnet/minecraft/server/Vec3D;F)Lnet/minecraft/server/Vec3D; getBrightnessDependentFogColor
dzn$c net/minecraft/client/renderer/DimensionSpecialEffects$OverworldEffects
	a (II)Z isFoggyAt
	a (Lnet/minecraft/server/Vec3D;F)Lnet/minecraft/server/Vec3D; getBrightnessDependentFogColor
dzn$a net/minecraft/client/renderer/DimensionSpecialEffects$EndEffects
	a (FF)[F getSunriseColor
	a (II)Z isFoggyAt
	a (Lnet/minecraft/server/Vec3D;F)Lnet/minecraft/server/Vec3D; getBrightnessDependentFogColor
net/minecraft/server/PersistentBase net/minecraft/world/level/saveddata/SavedData
	a LOGGER
	c dirty
	a (Ljava/io/File;)V save
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Z)V setDirty
	b ()V setDirty
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c ()Z isDirty
net/minecraft/server/BlockFloorSign net/minecraft/world/level/block/StandingSignBlock
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
net/minecraft/server/ArgumentItemStack net/minecraft/commands/arguments/item/ItemArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/ArgumentItemStack; item
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ArgumentPredicateItemStack; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ArgumentPredicateItemStack; getItem
net/minecraft/server/StatisticManager net/minecraft/stats/StatsCounter
	a stats
	a (Lnet/minecraft/server/StatisticWrapper;Ljava/lang/Object;)I getValue
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Statistic;I)V increment
	getStatisticValue (Lnet/minecraft/server/Statistic;)I getValue
	setStatistic (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Statistic;I)V setValue
net/minecraft/server/InstantMobEffect net/minecraft/world/effect/InstantenousMobEffect
	a ()Z isInstantenous
	a (II)Z isDurationEffectTick
eag$a net/minecraft/client/renderer/RenderType$CompositeRenderType
	W INSTANCES
	X state
	Y hashCode
	Z outline
	aa isOutline
	C ()Leag$b; state
	a (Leag$a;)I access$500
	a (Leag$b;)V lambda$new$1
	a (Leag$b;Lnet/minecraft/server/MinecraftKey;)Leag; lambda$new$2
	b (Leag$a;)Leag$b; access$600
	b (Leag$b;)V lambda$new$0
	b (Ljava/lang/String;Ldfo;IIZZLeag$b;)Leag$a; access$000
	c (Ljava/lang/String;Ldfo;IIZZLeag$b;)Leag$a; memoize
	y ()Ljava/util/Optional; outline
	z ()Z isOutline
don$b net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList
	a this$0
	a (III)Z keyPressed
	a (Ldlc$a;)V setSelected
	a (Ldon$b$a;)V setSelected
	a (Ldon$b;)Ldjw; access$600
	b ()Z isFocused
net/minecraft/server/WorldGenDecoratorHeightmap net/minecraft/world/level/levelgen/placement/HeightmapDecorator
	a (Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;)Lnet/minecraft/server/HeightMap$Type; type
eag$b net/minecraft/client/renderer/RenderType$CompositeState
	a textureState
	b transparencyState
	c diffuseLightingState
	d shadeModelState
	e alphaState
	f depthTestState
	g cullState
	h lightmapState
	i overlayState
	j fogState
	k layeringState
	l outputState
	m texturingState
	n writeMaskState
	o lineState
	p outlineProperty
	q states
	a ()Leag$b$a; builder
	a (Leag$b;)Leag$c; access$300
	b (Leag$b;)Leaf$o; access$400
	c (Leag$b;)Leaf$c; access$700
	d (Leag$b;)Lcom/google/common/collect/ImmutableList; access$800
don$a net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetInfo
	a icon
	b name
	c settings
	a ()Lnet/minecraft/server/IChatBaseComponent; getName
net/minecraft/server/ItemPickaxe net/minecraft/world/item/PickaxeItem
	a DIGGABLES
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	b (Lnet/minecraft/server/IBlockData;)Z isCorrectToolForDrops
eag$c net/minecraft/client/renderer/RenderType$OutlineProperty
	a NONE
	b IS_OUTLINE
	c AFFECTS_OUTLINE
	d name
	e $VALUES
net/minecraft/server/EnumColor net/minecraft/world/item/DyeColor
	A $VALUES
	q BY_ID
	r BY_FIREWORK_COLOR
	s id
	t name
	u color
	v textureDiffuseColor
	w textureDiffuseColorBGR
	x textureDiffuseColors
	y fireworkColor
	z textColor
	a ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/EnumColor; byName
	a (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/EnumColor; lambda$static$2
	b (I)Lnet/minecraft/server/EnumColor; byFireworkColor
	b (Lnet/minecraft/server/EnumColor;)Ljava/lang/Integer; lambda$static$1
	c ()Ljava/lang/String; getName
	c (I)[Lnet/minecraft/server/EnumColor; lambda$static$0
	d ()I getTextureDiffuseColorBGR
	f ()Lnet/minecraft/server/MaterialMapColor; getMaterialColor
	fromColorIndex (I)Lnet/minecraft/server/EnumColor; byId
	getColor ()[F getTextureDiffuseColors
	getColorIndex ()I getId
	getFireworksColor ()I getFireworkColor
	h ()I getTextColor
net/minecraft/server/BlockWetSponge net/minecraft/world/level/block/WetSpongeBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
net/minecraft/server/EntityRabbit$ControllerJumpRabbit net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl
	b this$0
	c rabbit
	d canJump
	a (Z)V setCanJump
	b ()V tick
	c ()Z wantJump
	d ()Z canJump
ap$a net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance
	a potion
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/PotionRegistry;)Z matches
	c ()Lap$a; brewedPotion
net/minecraft/server/BehavorMove net/minecraft/world/entity/ai/behavior/MoveToTargetSink
	b remainingCooldown
	c path
	d lastTargetPos
	e speedModifier
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/MemoryTarget;)Z reachedTarget
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/MemoryTarget;J)Z tryComputePath
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)Z canStillUse
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V stop
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V start
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdChestCorridor net/minecraft/world/level/levelgen/structure/StrongholdPieces$ChestCorridor
	a hasPlacedChest
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdChestCorridor; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
cks net/minecraft/world/level/levelgen/feature/SimulatedFeature
	a (Lzz;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V simulate
net/minecraft/server/WorldGenFeatureEndPlatform net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature
	a PLATFORM_ORIGIN
	ab PLATFORM_ORIGIN_CHUNK
	a (IIII)I checkerboardDistance
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/BlockWitherSkullWall net/minecraft/world/level/block/WitherWallSkullBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
net/minecraft/server/BlockStemmed net/minecraft/world/level/block/StemGrownBlock
	c ()Lnet/minecraft/server/BlockStem; getStem
	d ()Lnet/minecraft/server/BlockStemAttached; getAttachedStem
cyq$c net/minecraft/world/level/storage/loot/GsonAdapterFactory$JsonAdapter
	a registry
	b elementName
	c typeKey
	d typeGetter
	e defaultType
cyq$b net/minecraft/world/level/storage/loot/GsonAdapterFactory$DefaultSerializer
	a (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
cyq$a net/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder
	a registry
	b elementName
	c typeKey
	d typeGetter
	e defaultType
	a ()Ljava/lang/Object; build
	a (Lnet/minecraft/server/LootSerializerType;Lcyq$b;)Lcyq$a; withDefaultSerializer
net/minecraft/server/AutoRecipeOutput net/minecraft/world/inventory/StackedContentsCompatible
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillStackedContents
net/minecraft/server/FeatureSizeTwoLayers net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize
	c CODEC
	d limit
	e lowerSize
	f upperSize
	a (II)I getSizeAtHeight
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lnet/minecraft/server/FeatureSizeTwoLayers;)Ljava/lang/Integer; lambda$null$2
	b ()Lnet/minecraft/server/FeatureSizeType; type
	b (Lnet/minecraft/server/FeatureSizeTwoLayers;)Ljava/lang/Integer; lambda$null$1
	c (Lnet/minecraft/server/FeatureSizeTwoLayers;)Ljava/lang/Integer; lambda$null$0
net/minecraft/server/PiglinAI net/minecraft/world/entity/monster/piglin/PiglinAi
	a BARTERING_ITEM
	b TIME_BETWEEN_HUNTS
	c RIDE_START_INTERVAL
	d RIDE_DURATION
	e RETREAT_DURATION
	f AVOID_ZOMBIFIED_DURATION
	g BABY_AVOID_NEMESIS_DURATION
	h FOOD_ITEMS
	A (Lnet/minecraft/server/EntityPiglin;)Z lambda$initCelebrateActivity$1
	a ()Lnet/minecraft/server/BehaviorGateSingle; createIdleLookBehaviors
	a (Lnet/minecraft/server/BehaviorController;)V initCoreActivity
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityPiglin;)V lambda$angerNearbyPiglins$4
	a (Lnet/minecraft/server/EntityHuman;Z)V angerNearbyPiglins
	a (Lnet/minecraft/server/EntityItem;)Lnet/minecraft/server/ItemStack; removeOneItemFromItemEntity
	a (Lnet/minecraft/server/EntityLiving;)Z isWearingGold
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/EntityLiving;)V lambda$wasHurtBy$5
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z wantsToDance
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityPiglinAbstract;)V lambda$broadcastRetreat$12
	a (Lnet/minecraft/server/EntityPiglin;)V initMemories
	a (Lnet/minecraft/server/EntityPiglin;Ljava/util/List;)V throwItems
	a (Lnet/minecraft/server/EntityPiglin;Ljava/util/List;Lnet/minecraft/server/Vec3D;)V throwItemsTowardPos
	a (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/Activity;)Lnet/minecraft/server/SoundEffect; getSoundForActivity
	a (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/BehaviorController;)Lnet/minecraft/server/BehaviorController; makeBrain
	a (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/Entity;)Z wantsToStopRiding
	a (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/EntityHuman;Ljava/util/List;)V throwItemsTowardPlayer
	a (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	a (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/EntityItem;)V pickUpItem
	a (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/EntityLiving;)V wasHurtBy
	a (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/ItemStack;)Z wantsToPickup
	a (Lnet/minecraft/server/EntityPiglin;Z)V stopHoldingOffHandItem
	a (Lnet/minecraft/server/EntityPiglinAbstract;)V broadcastUniversalAnger
	a (Lnet/minecraft/server/EntityPiglinAbstract;Lnet/minecraft/server/EntityHuman;)V lambda$null$9
	a (Lnet/minecraft/server/EntityPiglinAbstract;Lnet/minecraft/server/EntityLiving;)V maybeRetaliate
	a (Lnet/minecraft/server/EntityTypes;)Z isZombified
	a (Lnet/minecraft/server/Item;)Z isLovedItem
	a (ZLnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityPiglin;)Z lambda$angerNearbyPiglins$3
	b ()Lnet/minecraft/server/BehaviorGateSingle; createIdleMovementBehaviors
	b (Lnet/minecraft/server/BehaviorController;)V initIdleActivity
	b (Lnet/minecraft/server/EntityLiving;)Z isPlayerHoldingLovedItem
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$isNearestValidAttackTarget$2
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityPiglinAbstract;)V lambda$broadcastAngerTarget$8
	b (Lnet/minecraft/server/EntityPiglin;)V updateActivity
	b (Lnet/minecraft/server/EntityPiglin;Ljava/util/List;)V throwItemsTowardRandomPos
	b (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/Activity;)Lnet/minecraft/server/SoundEffect; lambda$getSoundForCurrentActivity$6
	b (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/BehaviorController;)V initFightActivity
	b (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/EntityLiving;)Z isNearestValidAttackTarget
	b (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/ItemStack;)Z canAdmire
	b (Lnet/minecraft/server/EntityPiglinAbstract;)Ljava/util/Optional; getNearestVisibleTargetablePlayer
	b (Lnet/minecraft/server/EntityPiglinAbstract;Lnet/minecraft/server/EntityLiving;)V broadcastAngerTarget
	b (Lnet/minecraft/server/Item;)Z isBarterCurrency
	c ()Lnet/minecraft/server/BehaviorWalkAway; avoidRepellent
	c (Lnet/minecraft/server/BehaviorController;)V initCelebrateActivity
	c (Lnet/minecraft/server/EntityLiving;)Z hasCrossbow
	c (Lnet/minecraft/server/EntityPiglin;)V cancelAdmiring
	c (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/EntityLiving;)V broadcastRetreat
	c (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/ItemStack;)V holdInOffhand
	c (Lnet/minecraft/server/EntityPiglinAbstract;)V dontKillAnyMoreHoglinsForAWhile
	c (Lnet/minecraft/server/EntityPiglinAbstract;Lnet/minecraft/server/EntityLiving;)V setAngerTarget
	c (Lnet/minecraft/server/Item;)Z isFood
	d ()Lnet/minecraft/server/BehaviorExpirableMemory; babyAvoidNemesis
	d (Lnet/minecraft/server/BehaviorController;)V initAdmireItemActivity
	d (Lnet/minecraft/server/EntityLiving;)V admireGoldItem
	d (Lnet/minecraft/server/EntityPiglin;)Ljava/util/Optional; getSoundForCurrentActivity
	d (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/EntityLiving;)V retreatFromNearestTarget
	d (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/ItemStack;)V putInInventory
	d (Lnet/minecraft/server/EntityPiglinAbstract;)Z isIdle
	d (Lnet/minecraft/server/EntityPiglinAbstract;Lnet/minecraft/server/EntityLiving;)V setAngerTargetToNearestTargetablePlayerIfFound
	e ()Lnet/minecraft/server/BehaviorExpirableMemory; avoidZombified
	e (Lnet/minecraft/server/BehaviorController;)V initRetreatActivity
	e (Lnet/minecraft/server/EntityLiving;)Z isAttackAllowed
	e (Lnet/minecraft/server/EntityPiglin;)Z hasAnyoneNearbyHuntedRecently
	e (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/EntityLiving;)V setAvoidTargetAndDontHuntForAWhile
	e (Lnet/minecraft/server/EntityPiglinAbstract;)Ljava/util/List; getAdultPiglins
	e (Lnet/minecraft/server/EntityPiglinAbstract;Lnet/minecraft/server/EntityLiving;)V setAngerTargetIfCloserThanCurrent
	f ()Lnet/minecraft/server/BehaviorRunSometimes; babySometimesRideBabyHoglin
	f (Lnet/minecraft/server/BehaviorController;)V initRideHoglinActivity
	f (Lnet/minecraft/server/EntityLiving;)Z seesPlayerHoldingLovedItem
	f (Lnet/minecraft/server/EntityPiglin;)V broadcastDontKillAnyMoreHoglinsForAWhile
	f (Lnet/minecraft/server/EntityPiglin;Lnet/minecraft/server/EntityLiving;)Z lambda$initFightActivity$0
	f (Lnet/minecraft/server/EntityPiglinAbstract;)Ljava/util/Optional; getAngerTarget
	g (Lnet/minecraft/server/EntityLiving;)Z doesntSeeAnyPlayerHoldingLovedItem
	g (Lnet/minecraft/server/EntityPiglin;)Ljava/util/Optional; getAvoidTarget
	g (Lnet/minecraft/server/EntityPiglinAbstract;)Z lambda$broadcastRetreat$11
	h (Lnet/minecraft/server/EntityLiving;)Z wasHurtRecently
	h (Lnet/minecraft/server/EntityPiglin;)Z isBabyRidingBaby
	h (Lnet/minecraft/server/EntityPiglinAbstract;)V lambda$broadcastUniversalAnger$10
	i (Lnet/minecraft/server/EntityPiglin;)Ljava/util/List; getBarterResponseItems
	i (Lnet/minecraft/server/EntityPiglinAbstract;)Z lambda$hasAnyoneNearbyHuntedRecently$7
	j (Lnet/minecraft/server/EntityPiglin;)Z isNearZombified
	k (Lnet/minecraft/server/EntityPiglin;)Ljava/util/Optional; findNearestValidAttackTarget
	l (Lnet/minecraft/server/EntityPiglin;)Z isNearAvoidTarget
	m (Lnet/minecraft/server/EntityPiglin;)Ljava/util/List; getVisibleAdultPiglins
	n (Lnet/minecraft/server/EntityPiglin;)V stopWalking
	o (Lnet/minecraft/server/EntityPiglin;)Z wantsToStopFleeing
	p (Lnet/minecraft/server/EntityPiglin;)Z piglinsEqualOrOutnumberHoglins
	q (Lnet/minecraft/server/EntityPiglin;)Z hoglinsOutnumberPiglins
	r (Lnet/minecraft/server/EntityPiglin;)Z seesPlayerHoldingWantedItem
	s (Lnet/minecraft/server/EntityPiglin;)V eat
	t (Lnet/minecraft/server/EntityPiglin;)Lnet/minecraft/server/Vec3D; getRandomNearbyPos
	u (Lnet/minecraft/server/EntityPiglin;)Z hasEatenRecently
	v (Lnet/minecraft/server/EntityPiglin;)Z isAdmiringItem
	w (Lnet/minecraft/server/EntityPiglin;)Z isNearRepellent
	x (Lnet/minecraft/server/EntityPiglin;)Z isAdmiringDisabled
	y (Lnet/minecraft/server/EntityPiglin;)Z isHoldingItemInOffHand
	z (Lnet/minecraft/server/EntityPiglin;)Z isNotHoldingLovedItemInOffHand
net/minecraft/server/ChunkConverter$Type net/minecraft/world/level/chunk/UpgradeData$BlockFixers
	f DIRECTIONS
	g $VALUES
net/minecraft/server/CriterionTriggerInventoryChanged net/minecraft/advancements/critereon/InventoryChangeTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lbn$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/ItemStack;)V trigger
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/ItemStack;III)V trigger
	a (Lnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/ItemStack;IIILbn$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/ItemBow net/minecraft/world/item/BowItem
	a (I)F getPowerForTime
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityHuman;)V lambda$releaseUsing$0
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	d ()I getDefaultProjectileRange
	d_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	e_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
net/minecraft/server/CriterionConditionDamageSource net/minecraft/advancements/critereon/DamageSourcePredicate
	a ANY
	b isProjectile
	c isExplosion
	d bypassesArmor
	e bypassesInvulnerability
	f bypassesMagic
	g isFire
	h isMagic
	i isLightning
	j directEntity
	k sourceEntity
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionDamageSource; fromJson
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; getOptionalBoolean
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V addOptionally
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DamageSource;)Z matches
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/DamageSource;)Z matches
mb$a net/minecraft/nbt/ByteTag$Cache
	a cache
	a ()[Lnet/minecraft/server/NBTTagByte; access$100
lp$1 net/minecraft/gametest/framework/MultipleTestTracker$1
	a val$listener
	b this$0
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V testStructureLoaded
	b (Lnet/minecraft/server/GameTestHarnessInfo;)V testPassed
	c (Lnet/minecraft/server/GameTestHarnessInfo;)V testFailed
cyq$1 net/minecraft/world/level/storage/loot/GsonAdapterFactory$1
net/minecraft/server/SystemUtils net/minecraft/Util
	a timeSource
	b NIL_UUID
	c WORKER_COUNT
	d BOOTSTRAP_EXECUTOR
	e BACKGROUND_EXECUTOR
	f IO_POOL
	g LOGGER
	a ()Ljava/util/stream/Collector; toMap
	a (ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z runWithRetries
	a (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; fetchChoiceType
	a (Lj;I)Ljava/lang/String; lambda$sanitizeName$7
	a (Ljava/io/File;Ljava/io/File;Ljava/io/File;)V safeReplaceFile
	a (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; findNextInIterable
	a (Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object; make
	a (Ljava/lang/Runnable;)Ljava/lang/Thread; lambda$makeIoExecutor$1
	a (Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable; name
	a (Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; makeExecutor
	a (Ljava/lang/String;II)I offsetByCodepoints
	a (Ljava/lang/String;Lj;)Ljava/lang/String; sanitizeName
	a (Ljava/lang/String;Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread; lambda$makeExecutor$0
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer; prefix
	a (Ljava/lang/String;Lnet/minecraft/server/MinecraftKey;)Ljava/lang/String; makeDescriptionId
	a (Ljava/lang/Thread;Ljava/lang/Throwable;)V onThreadException
	a (Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture; failedFuture
	a (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createDeleter
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createRenamer
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V safeReplaceFile
	a (Ljava/util/List;)Ljava/lang/Object; lastOf
	a (Ljava/util/List;Ljava/lang/Void;)Ljava/util/List; lambda$sequence$5
	a (Ljava/util/List;[Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V lambda$sequence$4
	a (Ljava/util/Optional;)Ljava/util/stream/Stream; toStream
	a (Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional; ifElse
	a (Ljava/util/concurrent/CompletableFuture;Ljava/util/List;ILjava/lang/Object;Ljava/lang/Throwable;)V lambda$null$3
	a (Ljava/util/concurrent/ExecutorService;)V shutdownExecutor
	a (Ljava/util/function/Consumer;Ljava/lang/String;Ljava/lang/String;)V lambda$prefix$6
	a (Ljava/util/function/Supplier;)Ljava/lang/Object; make
	a (Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult; fixedSize
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Object;)Ljava/lang/String; getPropertyName
	a ([ILjava/util/Random;)I getRandom
	a ([Ljava/lang/Object;Ljava/util/Random;)Ljava/lang/Object; getRandom
	a ([Ljava/util/function/BooleanSupplier;)Z executeInSequence
	b (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; doFetchChoiceType
	b (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; findPreviousInIterable
	b (Ljava/lang/String;)Z lambda$getVmArguments$2
	b (Ljava/lang/Throwable;)V throwAsRuntime
	b (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createFileDeletedCheck
	b (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V copyBetweenDirs
	b (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; sequence
	c (Ljava/lang/Throwable;)Ljava/lang/Throwable; pauseInIde
	c (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createFileCreatedCheck
	d (Ljava/lang/Throwable;)Ljava/lang/String; describeError
	e ()Ljava/util/concurrent/Executor; bootstrapExecutor
	f ()Ljava/util/concurrent/Executor; backgroundExecutor
	g ()Ljava/util/concurrent/Executor; ioPool
	getMonotonicMillis ()J getMillis
	getMonotonicNanos ()J getNanos
	getTimeMillis ()J getEpochMillis
	h ()V shutdownExecutors
	i ()Lnet/minecraft/server/SystemUtils$OS; getPlatform
	j ()Ljava/util/stream/Stream; getVmArguments
	k ()Lit/unimi/dsi/fastutil/Hash$Strategy; identityStrategy
	l ()V startTimerHackThread
	m ()Lorg/apache/logging/log4j/Logger; access$100
	n ()Ljava/util/concurrent/ExecutorService; makeIoExecutor
cln net/minecraft/world/level/levelgen/feature/blockplacers/package-info
deq$1 com/mojang/blaze3d/platform/NativeImage$1
gi$a net/minecraft/core/MappedRegistry$RegistryEntry
	a key
	b id
	c value
ecm$b net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk
	a UNCOMPILED
	b hasBlocks
	c hasLayer
	d isCompletelyEmpty
	e renderableBlockEntities
	f visibilitySet
	g transparencyState
	a ()Z hasNoRenderableLayers
	a (Leag;)Z isEmpty
	a (Lecm$b;)Ljava/util/Set; access$100
	a (Lecm$b;Ldfe$b;)Ldfe$b; access$902
	a (Lecm$b;Lecp;)Lecp; access$1002
	a (Lecm$b;Z)Z access$702
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)Z facesCanSeeEachother
	b ()Ljava/util/List; getRenderableBlockEntities
	b (Lecm$b;)Ljava/util/Set; access$800
	c (Lecm$b;)Ljava/util/List; access$1100
	d (Lecm$b;)Ldfe$b; access$900
ecm$a net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$ChunkTaskResult
	a SUCCESSFUL
	b CANCELLED
	c $VALUES
ecm$c net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk
	a compiled
	b bb
	c this$0
	d lastRebuildTask
	e lastResortTransparencyTask
	f globalBlockEntities
	g buffers
	h lastFrame
	i dirty
	j origin
	k relativeOrigins
	l playerChanged
	a ()Z hasAllNeighbors
	a (I)Z setFrame
	a (III)V setOrigin
	a (Ldfe;)V beginLayer
	a (Leag;)Ldfm; getBuffer
	a (Leag;Lecm;)Z resortTransparency
	a (Lecm$c;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; access$500
	a (Lecm$c;Ldfe;)V access$600
	a (Lecm$c;Ljava/util/Set;)V access$400
	a (Lecm;)V rebuildChunkAsync
	a (Ljava/util/Set;)V updateGlobalBlockEntities
	a (Lnet/minecraft/server/BlockPosition;)Z doesChunkExistAt
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPosition; getRelativeOrigin
	a (Z)V setDirty
	a ([Lnet/minecraft/server/BlockPosition$MutableBlockPosition;)V lambda$new$2
	b ()D getDistToPlayerSqr
	b (Leag;)Ldfm; lambda$new$1
	c ()Lecm$b; getCompiledChunk
	c (Leag;)Leag; lambda$new$0
	d ()V releaseBuffers
	e ()Lnet/minecraft/server/BlockPosition; getOrigin
	f ()V setNotDirty
	g ()Z isDirty
	h ()Z isDirtyFromPlayer
	i ()V cancelTasks
	j ()Lecm$c$a; createCompileTask
	k ()V compileSync
	l ()V reset
net/minecraft/server/PacketPlayOutRecipes$Action net/minecraft/network/protocol/game/ClientboundRecipePacket$State
	d $VALUES
net/minecraft/server/WorldGenFeatureNetherFossil net/minecraft/world/level/levelgen/structure/NetherFossilFeature
	a ()Lckx$a; getStartFactory
net/minecraft/server/TileEntity net/minecraft/world/level/block/entity/BlockEntity
	a LOGGER
	c blockState
	f remove
	g hasLoggedInvalidStateBefore
	position worldPosition
	tileType type
	world level
	a (Ljava/lang/String;)Lnet/minecraft/server/TileEntity; lambda$loadStatic$2
	a (Ljava/lang/String;Lnet/minecraft/server/TileEntityTypes;)Lnet/minecraft/server/TileEntity; lambda$loadStatic$0
	a (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/server/EnumBlockMirror;)V mirror
	a (Lnet/minecraft/server/EnumBlockRotation;)V rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;Lnet/minecraft/server/TileEntity;)Lnet/minecraft/server/TileEntity; lambda$loadStatic$1
	al_ ()V setRemoved
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; saveMetadata
	create (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/TileEntity; loadStatic
	f ()Ljava/lang/Object; lambda$logInvalidState$4
	getBlock ()Lnet/minecraft/server/IBlockData; getBlockState
	getPosition ()Lnet/minecraft/server/BlockPosition; getBlockPos
	getTileType ()Lnet/minecraft/server/TileEntityTypes; getType
	getWorld ()Lnet/minecraft/server/World; getLevel
	hasWorld ()Z hasLevel
	i ()D getViewDistance
	invalidateBlockCache ()V clearCache
	isFilteredNBT ()Z onlyOpCanSetNbt
	j ()Ljava/lang/String; lambda$fillCrashReportCategory$3
	r ()V clearRemoved
	setLocation (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V setLevelAndPosition
	setProperty (II)Z triggerEvent
	update ()V setChanged
	w ()V logInvalidState
net/minecraft/server/PathfinderGoalAvoidTarget net/minecraft/world/entity/ai/goal/AvoidEntityGoal
	a mob
	b toAvoid
	c maxDist
	d path
	e pathNav
	f avoidClass
	g avoidPredicate
	h predicateOnAvoidEntity
	i walkSpeedModifier
	j sprintSpeedModifier
	k avoidEntityTargeting
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLiving;)Z lambda$new$1
	b ()Z canContinueToUse
	b (Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/WorldGenSurfaceExtremeHills net/minecraft/world/level/levelgen/surfacebuilders/MountainSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPortalRoom net/minecraft/world/level/levelgen/structure/StrongholdPieces$PortalRoom
	a hasPlacedSpawner
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPortalRoom; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/CursorPosition net/minecraft/core/Cursor3D
	a originX
	b originY
	c originZ
	d width
	e height
	f depth
	g end
	h index
	i x
	j y
	k z
	a ()Z advance
	b ()I nextX
	c ()I nextY
	d ()I nextZ
	e ()I getNextType
net/minecraft/server/BlockPropertyWood net/minecraft/world/level/block/state/properties/WoodType
	a OAK
	b SPRUCE
	c BIRCH
	d ACACIA
	e JUNGLE
	f DARK_OAK
	g CRIMSON
	h WARPED
	i VALUES
	j name
	a ()Ljava/util/stream/Stream; values
	a (Lnet/minecraft/server/BlockPropertyWood;)Lnet/minecraft/server/BlockPropertyWood; register
	b ()Ljava/lang/String; name
net/minecraft/server/SensorPiglinSpecific net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z isValidRepellent
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z lambda$findNearestRepellent$0
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Ljava/util/Optional; findNearestRepellent
net/minecraft/server/DataWatcherSerializer net/minecraft/network/syncher/EntityDataSerializer
	a (I)Lnet/minecraft/server/DataWatcherObject; createAccessor
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
net/minecraft/server/DynamicOpsWrapper net/minecraft/resources/DelegatingOps
	a delegate
net/minecraft/server/DefinedStructureTestTrue net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
	b ()Lnet/minecraft/server/DefinedStructureTestTrue; lambda$static$0
net/minecraft/server/WorldGenDecorator net/minecraft/world/level/levelgen/placement/FeatureDecorator
	A END_ISLAND
	B DECORATED
	C COUNT_MULTILAYER
	D configuredCodec
	a NOPE
	b CHANCE
	c COUNT
	d COUNT_NOISE
	e COUNT_NOISE_BIASED
	f COUNT_EXTRA
	g SQUARE
	h HEIGHTMAP
	i HEIGHTMAP_SPREAD_DOUBLE
	j TOP_SOLID_HEIGHTMAP
	k HEIGHTMAP_WORLD_SURFACE
	l RANGE
	m RANGE_BIASED
	n RANGE_VERY_BIASED
	o DEPTH_AVERAGE
	p SPREAD_32_ABOVE
	q CARVING_MASK
	r FIRE
	s MAGMA
	t EMERALD_ORE
	u LAVA_LAKE
	v WATER_LAKE
	w GLOWSTONE
	x END_GATEWAY
	y DARK_OAK_TREE
	z ICEBERG
	a ()Lcom/mojang/serialization/Codec; configuredCodec
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenDecorator;)Lnet/minecraft/server/WorldGenDecorator; register
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;)Lnet/minecraft/server/WorldGenDecoratorConfigured; lambda$new$0
	b (Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;)Lnet/minecraft/server/WorldGenDecoratorConfigured; configured
cmx net/minecraft/world/level/levelgen/feature/configurations/package-info
cnc net/minecraft/world/level/levelgen/feature/featuresize/package-info
net/minecraft/server/CommandXp$Unit net/minecraft/server/commands/ExperienceCommand$Type
	c add
	d set
	e name
	f query
	g $VALUES
	a (Lnet/minecraft/server/CommandXp$Unit;)Ljava/util/function/ToIntFunction; access$000
	a (Lnet/minecraft/server/EntityPlayer;)I lambda$static$3
	a (Lnet/minecraft/server/EntityPlayer;Ljava/lang/Integer;)Z lambda$static$2
	b (Lnet/minecraft/server/EntityPlayer;)I lambda$static$1
	b (Lnet/minecraft/server/EntityPlayer;Ljava/lang/Integer;)Z lambda$static$0
net/minecraft/server/PacketPlayInSetJigsaw net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket
	a pos
	b name
	c target
	d pool
	e finalState
	f joint
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/MinecraftKey; getName
	d ()Lnet/minecraft/server/MinecraftKey; getTarget
	e ()Lnet/minecraft/server/MinecraftKey; getPool
	f ()Ljava/lang/String; getFinalState
	g ()Lnet/minecraft/server/TileEntityJigsaw$JointType; getJoint
net/minecraft/server/EnumItemRarity net/minecraft/world/item/Rarity
	e color
	f $VALUES
enm$a net/minecraft/client/sounds/SoundManager$Preparations
	a registry
	a (Lenm$a;)Ljava/util/Map; access$300
	a (Lenm$a;Lnet/minecraft/server/MinecraftKey;Lemj;Lnet/minecraft/server/IResourceManager;)V access$000
	a (Ljava/util/Map;Lenj;)V apply
	a (Lnet/minecraft/server/MinecraftKey;Lemj;Lnet/minecraft/server/IResourceManager;)V handleRegistration
cnp net/minecraft/world/level/levelgen/feature/package-info
cno net/minecraft/world/level/levelgen/feature/foliageplacers/package-info
net/minecraft/server/BlockConduit net/minecraft/world/level/block/ConduitBlock
	a WATERLOGGED
	b SHAPE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
aba$1 net/minecraft/server/network/ServerLoginPacketListenerImpl$1
	a this$0
	a ()Ljava/net/InetAddress; getAddress
cnx net/minecraft/world/level/levelgen/feature/stateproviders/package-info
net/minecraft/server/DataConverterBedItem net/minecraft/util/datafix/fixes/BedItemColorFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
net/minecraft/server/WeightedList net/minecraft/world/entity/ai/behavior/WeightedList
	a entries
	b random
	a ()Lnet/minecraft/server/WeightedList; shuffle
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/Object;)D lambda$shuffle$2
	a (Ljava/lang/Object;I)Lnet/minecraft/server/WeightedList; add
	a (Ljava/util/Random;)Lnet/minecraft/server/WeightedList; shuffle
	a (Ljava/util/Random;Laum$a;)V lambda$shuffle$1
	a (Lnet/minecraft/server/WeightedList;)Ljava/util/List; lambda$codec$0
	b ()Z isEmpty
	b (Ljava/util/Random;)Ljava/lang/Object; getOne
	c ()Ljava/util/stream/Stream; stream
	d ()Ljava/lang/Object; getOne
net/minecraft/server/AdvancementRequirements net/minecraft/advancements/RequirementsStrategy
	a (Ljava/util/Collection;)[[Ljava/lang/String; lambda$static$1
	b (Ljava/util/Collection;)[[Ljava/lang/String; lambda$static$0
dkj$a net/minecraft/client/User$Type
	a LEGACY
	b MOJANG
	c BY_NAME
	d name
	e $VALUES
	a (Ldkj$a;)Ljava/lang/String; lambda$static$0
	a (Ljava/lang/String;)Ldkj$a; byName
net/minecraft/server/WorldMapFrame net/minecraft/world/level/saveddata/maps/MapFrame
	a pos
	b rotation
	c entityId
	a ()Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/BlockPosition;)Ljava/lang/String; frameId
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/WorldMapFrame; load
	b ()Lnet/minecraft/server/BlockPosition; getPos
	c ()I getRotation
	d ()I getEntityId
	e ()Ljava/lang/String; getId
coi net/minecraft/world/level/levelgen/feature/structures/package-info
net/minecraft/server/AutoRecipeStackManager net/minecraft/world/entity/player/StackedContents
	a contents
	a ()V clear
	a (I)Lnet/minecraft/server/ItemStack; fromStackingIndex
	a (II)I take
	a (Lnet/minecraft/server/AutoRecipeStackManager;I)Z access$200
	a (Lnet/minecraft/server/AutoRecipeStackManager;II)I access$000
	a (Lnet/minecraft/server/IRecipe;ILit/unimi/dsi/fastutil/ints/IntList;)I getBiggestCraftableStack
	a (Lnet/minecraft/server/IRecipe;Lit/unimi/dsi/fastutil/ints/IntList;)Z canCraft
	a (Lnet/minecraft/server/IRecipe;Lit/unimi/dsi/fastutil/ints/IntList;I)Z canCraft
	a (Lnet/minecraft/server/ItemStack;)V accountSimpleStack
	a (Lnet/minecraft/server/ItemStack;I)V accountStack
	b (I)Z has
	b (II)V put
	b (Lnet/minecraft/server/AutoRecipeStackManager;II)V access$100
	b (Lnet/minecraft/server/IRecipe;Lit/unimi/dsi/fastutil/ints/IntList;)I getBiggestCraftableStack
	b (Lnet/minecraft/server/ItemStack;)V accountStack
	c (Lnet/minecraft/server/ItemStack;)I getStackingIndex
deq$a com/mojang/blaze3d/platform/NativeImage$Format
	a RGBA
	b RGB
	c LUMINANCE_ALPHA
	d LUMINANCE
	e components
	f glFormat
	g hasRed
	h hasGreen
	i hasBlue
	j hasLuminance
	k hasAlpha
	l redOffset
	m greenOffset
	n blueOffset
	o luminanceOffset
	p alphaOffset
	q supportedByStb
	r $VALUES
	a ()I components
	a (I)Ldeq$a; access$100
	a (Ldeq$a;)I access$000
	b ()V setPackPixelStoreState
	b (I)Ldeq$a; getStbFormat
	c ()V setUnpackPixelStoreState
	d ()I glFormat
	e ()Z hasAlpha
	f ()I alphaOffset
	g ()Z hasLuminanceOrAlpha
	h ()I luminanceOrAlphaOffset
	i ()Z supportedByStb
net/minecraft/server/MobEffectUtil net/minecraft/world/effect/MobEffectUtil
	a (Lnet/minecraft/server/EntityLiving;)Z hasDigSpeed
	a (Lnet/minecraft/server/MobEffect;F)Ljava/lang/String; formatDuration
	b (Lnet/minecraft/server/EntityLiving;)I getDigSpeedAmplification
	c (Lnet/minecraft/server/EntityLiving;)Z hasWaterBreathing
deq$b com/mojang/blaze3d/platform/NativeImage$InternalGlFormat
	a RGBA
	b RGB
	c LUMINANCE_ALPHA
	d LUMINANCE
	e INTENSITY
	f glFormat
	g $VALUES
	a ()I glFormat
net/minecraft/server/EntityInsentient net/minecraft/world/entity/Mob
	b DATA_MOB_FLAGS_ID
	bA restrictRadius
	bi jumpControl
	bo sensing
	bp handItems
	bq armorItems
	bt pathfindingMalus
	bx delayedLeashHolderId
	by leashInfoTag
	bz restrictCenter
	c bodyRotationControl
	dropChanceArmor armorDropChances
	dropChanceHand handDropChances
	e ambientSoundTime
	f xpReward
	goalTarget target
	lookController lookControl
	lootTableKey lootTable
	moveController moveControl
	persistent persistenceRequired
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	D ()I getAmbientSoundInterval
	F ()V playAmbientSound
	H ()V updateControlFlags
	L ()Z shouldDespawnInPeaceful
	M ()V sendDebugPackets
	O ()I getMaxHeadXRot
	a (B)V handleEntityEvent
	a (FFF)F rotlerp
	a (FLnet/minecraft/server/EnumItemSlot;)V enchantSpawnedArmor
	a (Lnet/minecraft/server/BlockPosition;)Z isWithinRestriction
	a (Lnet/minecraft/server/BlockPosition;I)V restrictTo
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/DamageSource;Z)V dropFromLootTable
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/Entity;FF)V lookAt
	a (Lnet/minecraft/server/Entity;Z)Z startRiding
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityInsentient;)V onOffspringSpawnedFromEgg
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interact
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)V maybeDisableShield
	a (Lnet/minecraft/server/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkMobSpawnRules
	a (Lnet/minecraft/server/EntityTypes;Z)Lnet/minecraft/server/EntityInsentient; convertTo
	a (Lnet/minecraft/server/EnumItemSlot;F)V setDropChance
	a (Lnet/minecraft/server/EnumItemSlot;I)Lnet/minecraft/server/Item; getEquipmentForSlot
	a (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;)Z checkSpawnRules
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/ItemProjectileWeapon;)Z canFireProjectileWeapon
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z canReplaceCurrentItem
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/PathType;)F getPathfindingMalus
	a (Lnet/minecraft/server/PathType;F)V setPathfindingMalus
	a (ZLnet/minecraft/server/DamageSource;)Lnet/minecraft/server/LootTableInfo$Builder; createLootContext
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	af ()V baseTick
	b (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentEnchantments
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityInsentient;)V lambda$checkAndHandleImportantInteractions$2
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/EntityItem;)V pickUpItem
	b (Lnet/minecraft/server/EnumItemSlot;)Lnet/minecraft/server/ItemStack; getItemBySlot
	b (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlotAndDropWhenKilled
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z canReplaceEqualItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/PathType;)Z canCutCorner
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	bM ()V removeAfterChangingDimensions
	bO ()I getMaxFallDistance
	blockEaten ()V ate
	bm ()Ljava/lang/Iterable; getHandSlots
	bn ()Ljava/lang/Iterable; getArmorSlots
	c (I)Z isMaxGroupSizeReached
	c (Ljava/lang/String;)Z lambda$canReplaceEqualItem$1
	c (Lnet/minecraft/server/DamageSource;)V playHurtSound
	c (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; checkAndHandleImportantInteractions
	c (Lnet/minecraft/server/EntityLiving;)Z canAttack
	c (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)Z isValidSlotForItem
	c (Lnet/minecraft/server/Tag;)V jumpInLiquid
	cH ()V checkDespawn
	canPickup (Lnet/minecraft/server/ItemStack;)Z canHoldItem
	canPickupLoot ()Z canPickUpLoot
	cr ()Z isControlledByLocalInstance
	d (I)V setDelayedLeashHolderId
	d (Ljava/lang/String;)Z lambda$canReplaceEqualItem$0
	d (Lnet/minecraft/server/EnumItemSlot;)V setGuaranteedDrop
	dO ()V serverAiStep
	dR ()Z isEffectiveAi
	dU ()Lnet/minecraft/server/EnumMainHand; getMainArm
	do ()Lnet/minecraft/server/MinecraftKey; getLootTable
	doSpawnEffect ()V spawnAnim
	e ()V defineSynchedData
	e (Lnet/minecraft/server/EnumItemSlot;)F getEquipmentDropChance
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	eA ()V tickLeash
	eG ()Z isSunBurnTick
	eH ()V removeFreeWill
	eI ()V restoreLeashFromSave
	eo ()I getMaxHeadYRot
	ep ()I getHeadRotSpeed
	er ()Z canBeControlledByRider
	ev ()Z isWithinRestriction
	ew ()Lnet/minecraft/server/BlockPosition; getRestrictCenter
	ex ()F getRestrictRadius
	ey ()V clearRestriction
	ez ()Z hasRestriction
	f (FF)F tickHeadTurn
	g (Lnet/minecraft/server/ItemStack;)Z equipItemIfPossible
	getControllerJump ()Lnet/minecraft/server/ControllerJump; getJumpControl
	getControllerLook ()Lnet/minecraft/server/ControllerLook; getLookControl
	getControllerMove ()Lnet/minecraft/server/ControllerMove; getMoveControl
	getEntitySenses ()Lnet/minecraft/server/EntitySenses; getSensing
	getExpValue (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	getGoalTarget ()Lnet/minecraft/server/EntityLiving; getTarget
	getMaxSpawnGroup ()I getMaxSpawnClusterSize
	getSoundAmbient ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	i (Lnet/minecraft/server/ItemStack;)Z wantsToPickUp
	initPathfinder ()V registerGoals
	isNoAI ()Z isNoAi
	isPersistent ()Z isPersistenceRequired
	isSpecialPersistence ()Z requiresCustomPersistence
	isTypeNotPersistent (D)Z removeWhenFarAway
	j ()V tick
	j (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumItemSlot; getEquipmentSlotForItem
	k ()V aiStep
	m ()V resetAmbientSoundTime
	mobTick ()V customServerAiStep
	p ()Lnet/minecraft/server/AttributeProvider$Builder; createMobAttributes
	prepare (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	q ()Z shouldPassengersInheritMalus
	q (F)V setSpeed
	r ()Lnet/minecraft/server/EntityAIBodyControl; createBodyControl
	setCanPickupLoot (Z)V setCanPickUpLoot
	setGoalTarget (Lnet/minecraft/server/EntityLiving;)V setTarget
	setLeashHolder (Lnet/minecraft/server/Entity;Z)V setLeashedTo
	setNoAI (Z)V setNoAi
	setPersistent ()V setPersistenceRequired
	t (F)V setZza
	u (F)V setYya
	unleash (ZZ)V dropLeash
	v (F)V setXxa
	w (F)V enchantSpawnedWeapon
deq$c com/mojang/blaze3d/platform/NativeImage$WriteCallback
	a output
	b exception
	a ()V throwIfException
net/minecraft/server/CrashReportSystemDetails net/minecraft/CrashReportCategory
	a report
	b title
	c entries
	d stackTrace
	a ()[Ljava/lang/StackTraceElement; getStacktrace
	a (DDD)Ljava/lang/String; formatLocation
	a (I)I fillInStackTrace
	a (III)Ljava/lang/String; formatLocation
	a (Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z validateStackTrace
	a (Ljava/lang/String;Ljava/lang/Object;)Lnet/minecraft/server/CrashReportSystemDetails; setDetail
	a (Ljava/lang/String;Ljava/lang/Throwable;)V setDetailError
	a (Ljava/lang/String;Lnet/minecraft/server/CrashReportCallable;)Lnet/minecraft/server/CrashReportSystemDetails; setDetail
	a (Ljava/lang/StringBuilder;)V getDetails
	a (Lnet/minecraft/server/BlockPosition;)Ljava/lang/String; formatLocation
	a (Lnet/minecraft/server/CrashReportSystemDetails;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V populateBlockDetails
	b (I)V trimStacktrace
	b (Lnet/minecraft/server/BlockPosition;)Ljava/lang/String; lambda$populateBlockDetails$0
aej$d net/minecraft/tags/Tag$Entry
	a (Lcom/google/gson/JsonArray;)V serializeTo
	a (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z build
dlm$1 net/minecraft/client/gui/components/DebugScreenOverlay$1
	a $SwitchMap$net$minecraft$core$Direction
aej$e net/minecraft/tags/Tag$Named
	a ()Lnet/minecraft/server/MinecraftKey; getName
aej$b net/minecraft/tags/Tag$BuilderEntry
	a entry
	b source
	a ()Laej$d; getEntry
	b ()Ljava/lang/String; getSource
net/minecraft/server/EnchantmentSoulSpeed net/minecraft/world/item/enchantment/SoulSpeedEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
	h ()Z isTradeable
	i ()Z isDiscoverable
net/minecraft/server/ArgumentMinecraftKeyRegistered net/minecraft/commands/arguments/ResourceLocationArgument
	a EXAMPLES
	b ERROR_UNKNOWN_ADVANCEMENT
	c ERROR_UNKNOWN_RECIPE
	d ERROR_UNKNOWN_PREDICATE
	e ERROR_UNKNOWN_ATTRIBUTE
	a ()Lnet/minecraft/server/ArgumentMinecraftKeyRegistered; id
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/MinecraftKey; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/Advancement; getAdvancement
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$getAttribute$5
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IRecipe; getRecipe
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	b (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$getRecipe$4
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/LootItemCondition; getPredicate
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/AttributeBase; getAttribute
	d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; getId
aej$c net/minecraft/tags/Tag$ElementEntry
	a id
	a (Lcom/google/gson/JsonArray;)V serializeTo
	a (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z build
net/minecraft/server/LazyInitVar net/minecraft/util/LazyLoadedValue
	a factory
	b value
	a ()Ljava/lang/Object; get
net/minecraft/server/IDyeable net/minecraft/world/item/DyeableLeatherItem
	a (Lnet/minecraft/server/ItemStack;)Z hasCustomColor
	a (Lnet/minecraft/server/ItemStack;I)V setColor
	a (Lnet/minecraft/server/ItemStack;Ljava/util/List;)Lnet/minecraft/server/ItemStack; dyeArmor
	b (Lnet/minecraft/server/ItemStack;)I getColor
	c (Lnet/minecraft/server/ItemStack;)V clearColor
aej$a net/minecraft/tags/Tag$Builder
	a entries
	a ()Laej$a; tag
	a (Laej$b;)Laej$a; add
	a (Laej$d;Ljava/lang/String;)Laej$a; add
	a (Lcom/google/gson/JsonElement;)Laej$d; parseEntry
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Laej$a; addFromJson
	a (Ljava/lang/Object;)V lambda$null$0
	a (Ljava/lang/String;Laej$d;)V lambda$addFromJson$2
	a (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Optional; build
	a (Ljava/util/function/Function;Ljava/util/function/Function;Laej$b;)Z lambda$getUnresolvedEntries$1
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/String;)Laej$a; addElement
	b ()Ljava/util/stream/Stream; getEntries
	b (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Stream; getUnresolvedEntries
	b (Lnet/minecraft/server/MinecraftKey;Ljava/lang/String;)Laej$a; addOptionalElement
	c ()Lcom/google/gson/JsonObject; serializeToJson
	c (Lnet/minecraft/server/MinecraftKey;Ljava/lang/String;)Laej$a; addTag
	d (Lnet/minecraft/server/MinecraftKey;Ljava/lang/String;)Laej$a; addOptionalTag
cor net/minecraft/world/level/levelgen/feature/treedecorators/package-info
aej$h net/minecraft/tags/Tag$TagEntry
	a id
	a (Lcom/google/gson/JsonArray;)V serializeTo
	a (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z build
dft$1 com/mojang/realmsclient/RealmsMainScreen$1
	a this$0
	a ()V lambda$run$2
	a (Ldhf;)V lambda$run$3
	b ()V lambda$run$1
	c ()V lambda$run$0
aej$f net/minecraft/tags/Tag$OptionalElementEntry
	a id
	a (Lcom/google/gson/JsonArray;)V serializeTo
	a (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z build
net/minecraft/server/BlockGrowingStem net/minecraft/world/level/block/GrowingPlantBodyBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Ljava/util/Optional; getHeadPos
	d ()Lnet/minecraft/server/Block; getBodyBlock
aej$g net/minecraft/tags/Tag$OptionalTagEntry
	a id
	a (Lcom/google/gson/JsonArray;)V serializeTo
	a (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z build
net/minecraft/server/TagRegistry net/minecraft/tags/TagManager
	blockTags blocks
	e tags
	entityTags entityTypes
	fluidTags fluids
	itemTags items
	a ()Lnet/minecraft/server/ITagRegistry; getTags
	a (Laca$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Ljava/util/Map$Entry;)Ljava/lang/String; lambda$null$0
	a (Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Void;)V lambda$reload$1
net/minecraft/server/NPC net/minecraft/world/entity/npc/Npc
net/minecraft/server/BehaviorStopAdmiring net/minecraft/world/entity/monster/piglin/StopHoldingItemIfNoLongerAdmiring
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityPiglin;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityPiglin;J)V start
net/minecraft/server/ScoreboardScore net/minecraft/world/scores/Score
	a SCORE_COMPARATOR
	b scoreboard
	c objective
	f locked
	g forceUpdate
	playerName owner
	score count
	a (Lnet/minecraft/server/ScoreboardScore;Lnet/minecraft/server/ScoreboardScore;)I lambda$static$0
	a (Z)V setLocked
	addScore (I)V add
	b (I)V remove
	c ()V reset
	f ()Lnet/minecraft/server/Scoreboard; getScoreboard
	g ()Z isLocked
	getPlayerName ()Ljava/lang/String; getOwner
	incrementScore ()V increment
net/minecraft/server/ArgumentEnchantment net/minecraft/commands/arguments/ItemEnchantmentArgument
	a ERROR_UNKNOWN_ENCHANTMENT
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentEnchantment; enchantment
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/Enchantment; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/Enchantment; getEnchantment
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$parse$1
net/minecraft/server/CriterionTriggerProperties net/minecraft/advancements/critereon/StatePropertiesPredicate
	a ANY
	b properties
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionTriggerProperties; fromJson
	a (Lcom/google/gson/JsonObject;Lcm$c;)V lambda$serializeToJson$1
	a (Ljava/lang/String;Lcom/google/gson/JsonElement;)Lcm$c; fromJson
	a (Lnet/minecraft/server/BlockStateList;Ljava/util/function/Consumer;)V checkState
	a (Lnet/minecraft/server/BlockStateList;Ljava/util/function/Consumer;Lcm$c;)V lambda$checkState$0
	a (Lnet/minecraft/server/BlockStateList;Lnet/minecraft/server/IBlockDataHolder;)Z matches
	a (Lnet/minecraft/server/Fluid;)Z matches
	a (Lnet/minecraft/server/IBlockData;)Z matches
	b (Lcom/google/gson/JsonElement;)Ljava/lang/String; getStringOrNull
cpa net/minecraft/world/level/levelgen/feature/trunkplacers/package-info
net/minecraft/server/MobEffectList net/minecraft/world/effect/MobEffect
	a attributeModifiers
	b category
	c color
	d descriptionId
	a (II)Z isDurationEffectTick
	a (ILnet/minecraft/server/AttributeModifier;)D getAttributeModifierValue
	a (Lnet/minecraft/server/AttributeBase;Ljava/lang/String;DLnet/minecraft/server/AttributeModifier$Operation;)Lnet/minecraft/server/MobEffectList; addAttributeModifier
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AttributeMapBase;I)V removeAttributeModifiers
	applyInstantEffect (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;Lnet/minecraft/server/EntityLiving;ID)V applyInstantenousEffect
	b ()Ljava/lang/String; getOrCreateDescriptionId
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AttributeMapBase;I)V addAttributeModifiers
	c ()Ljava/lang/String; getDescriptionId
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	e ()Lnet/minecraft/server/MobEffectInfo; getCategory
	fromId (I)Lnet/minecraft/server/MobEffectList; byId
	g ()Ljava/util/Map; getAttributeModifiers
	h ()Z isBeneficial
	isInstant ()Z isInstantenous
	tick (Lnet/minecraft/server/EntityLiving;I)V applyEffectTick
cpd net/minecraft/world/level/levelgen/flat/package-info
net/minecraft/server/DataConverterTileEntity net/minecraft/util/datafix/fixes/BlockEntityIdFix
	a ID_MAP
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$2
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$3
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$1
	a (Ljava/util/HashMap;)V lambda$static$0
cpe net/minecraft/world/level/levelgen/package-info
net/minecraft/server/BehaviorLookInteract net/minecraft/world/entity/ai/behavior/SetLookAndInteract
	b type
	c interactionRangeSqr
	d targetFilter
	e selfFilter
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/EntityLiving;)V lambda$null$3
	a (Lnet/minecraft/server/EntityLiving;)Z isMatchingTarget
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BehaviorController;Ljava/util/List;)V lambda$start$4
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$null$2
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityLiving;)Ljava/util/List; getVisibleEntities
	c (Lnet/minecraft/server/EntityLiving;)Z lambda$new$1
	d (Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
net/minecraft/server/PacketPlayInTileNBTQuery net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery
	a transactionId
	b pos
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getTransactionId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/BlockPosition; getPos
dxp$a net/minecraft/client/particle/HeartParticle$AngryVillagerProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
cef$b net/minecraft/world/level/block/state/StateDefinition$Factory
net/minecraft/server/WorldGenDecoratorCountNoise net/minecraft/world/level/levelgen/placement/CountNoiseDecorator
	a (Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$0
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorNoiseConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/CriterionTriggerEnchantedItem net/minecraft/advancements/critereon/EnchantedItemTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lba$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;I)V trigger
	a (Lnet/minecraft/server/ItemStack;ILba$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
dxp$b net/minecraft/client/particle/HeartParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
cef$a net/minecraft/world/level/block/state/StateDefinition$Builder
	a owner
	b properties
	a (Ljava/util/function/Function;Lcef$b;)Lnet/minecraft/server/BlockStateList; create
	a (Lnet/minecraft/server/IBlockState;)V validateProperty
	a ([Lnet/minecraft/server/IBlockState;)Lcef$a; add
net/minecraft/server/PathfinderGoalRandomSwim net/minecraft/world/entity/ai/goal/RandomSwimmingGoal
	g ()Lnet/minecraft/server/Vec3D; getPosition
net/minecraft/server/DataConverterBlockRename net/minecraft/util/datafix/fixes/BlockRenameFix
	a name
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Ljava/lang/String;)Ljava/lang/String; fixBlock
net/minecraft/server/WorldDimension net/minecraft/world/level/dimension/LevelStem
	THE_END END
	THE_NETHER NETHER
	a CODEC
	e BUILTIN_ORDER
	f type
	g generator
	a ()Ljava/util/function/Supplier; typeSupplier
	a (JLnet/minecraft/server/RegistryMaterials;)Z stable
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	a (Lnet/minecraft/server/RegistryMaterials;)Lnet/minecraft/server/RegistryMaterials; sortMap
	b ()Lnet/minecraft/server/DimensionManager; type
	c ()Lnet/minecraft/server/ChunkGenerator; generator
net/minecraft/server/CancelledPacketHandleException net/minecraft/server/RunningOnDifferentThreadException
	INSTANCE RUNNING_ON_DIFFERENT_THREAD
net/minecraft/server/WorldGenDesertWell net/minecraft/world/level/levelgen/feature/DesertWellFeature
	a IS_SAND
	ab sandSlab
	ac sandstone
	ad water
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/ContainerBrewingStand$SlotPotionBottle net/minecraft/world/inventory/BrewingStandMenu$PotionSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	b_ (Lnet/minecraft/server/ItemStack;)Z mayPlaceItem
enm$2 net/minecraft/client/sounds/SoundManager$2
	a $SwitchMap$net$minecraft$client$resources$sounds$Sound$Type
dmp$a net/minecraft/client/gui/components/toasts/TutorialToast$Icons
	a MOVEMENT_KEYS
	b MOUSE
	c TREE
	d RECIPE_BOOK
	e WOODEN_PLANKS
	f x
	g y
	h $VALUES
	a (Ldfj;Ldkt;II)V render
net/minecraft/server/WorldChunkManagerOverworld net/minecraft/world/level/biome/OverworldBiomeSource
	e CODEC
	f noiseBiomeLayer
	g POSSIBLE_BIOMES
	h seed
	i legacyBiomeInitLayer
	j largeBiomes
	k biomes
	a ()Lcom/mojang/serialization/Codec; codec
	a (J)Lnet/minecraft/server/WorldChunkManager; withSeed
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/ResourceKey;)Ljava/util/function/Supplier; lambda$new$6
	a (Lnet/minecraft/server/WorldChunkManagerOverworld;)Lnet/minecraft/server/IRegistry; lambda$null$3
	b (III)Lnet/minecraft/server/BiomeBase; getNoiseBiome
	b (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/ResourceKey;)Lnet/minecraft/server/BiomeBase; lambda$null$5
	b (Lnet/minecraft/server/WorldChunkManagerOverworld;)Ljava/lang/Boolean; lambda$null$2
	c (Lnet/minecraft/server/WorldChunkManagerOverworld;)Ljava/lang/Boolean; lambda$null$1
	d (Lnet/minecraft/server/WorldChunkManagerOverworld;)Ljava/lang/Long; lambda$null$0
vm$1 net/minecraft/server/Bootstrap$1
	a val$language
	b val$missing
	a (Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleDefinition;)V visit
enm$1 net/minecraft/client/sounds/SoundManager$1
dam$1 net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$1
net/minecraft/server/CustomFunctionData net/minecraft/server/ServerFunctionManager
	a TICK_FUNCTION_TAG
	b LOAD_FUNCTION_TAG
	d isInFunction
	e commandQueue
	f nestedCalls
	g ticking
	h postReload
	i library
	a (Ljava/util/Collection;Lnet/minecraft/server/MinecraftKey;)V executeTagFunctions
	a (Lnet/minecraft/server/CustomFunction;Lnet/minecraft/server/CommandListenerWrapper;)I execute
	a (Lnet/minecraft/server/CustomFunctionManager;)V replaceLibrary
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; get
	b ()I getCommandLimit
	b (Lnet/minecraft/server/CustomFunctionManager;)V postReload
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; getTag
	e ()Lnet/minecraft/server/CommandListenerWrapper; getGameLoopSender
	f ()Ljava/lang/Iterable; getFunctionNames
	g ()Ljava/lang/Iterable; getTagNames
	getCommandDispatcher ()Lcom/mojang/brigadier/CommandDispatcher; getDispatcher
net/minecraft/server/BlockChestAbstract net/minecraft/world/level/block/AbstractChestBlock
	a blockEntityType
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/DoubleBlockFinder$Result; combine
net/minecraft/server/PacketPlayOutMount net/minecraft/network/protocol/game/ClientboundSetPassengersPacket
	a vehicle
	b passengers
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()[I getPassengers
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getVehicle
azx$1 net/minecraft/world/entity/animal/Bee$1
	p this$0
	a (Lnet/minecraft/server/BlockPosition;)Z isStableDestination
	c ()V tick
net/minecraft/server/GameProfilerTick net/minecraft/util/profiling/SingleTickProfiler
	a LOGGER
	b realTime
	c saveThreshold
	d tick
	e location
	f profiler
	a ()Lnet/minecraft/server/GameProfilerFiller; startTick
	a (Ljava/lang/String;)Lnet/minecraft/server/GameProfilerTick; createTickProfiler
	a (Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerTick;)Lnet/minecraft/server/GameProfilerFiller; decorateFiller
	b ()V endTick
	c ()I lambda$startTick$0
dft$c com/mojang/realmsclient/RealmsMainScreen$HoveredElement
	a NONE
	b EXPIRED
	c LEAVE
	d CONFIGURE
	e $VALUES
dft$b com/mojang/realmsclient/RealmsMainScreen$Entry
	a this$0
net/minecraft/server/EntityIronGolem$CrackLevel net/minecraft/world/entity/animal/IronGolem$Crackiness
	e BY_DAMAGE
	f fraction
	g $VALUES
	a (F)Lnet/minecraft/server/EntityIronGolem$CrackLevel; byFraction
	a (Lnet/minecraft/server/EntityIronGolem$CrackLevel;)D lambda$static$0
net/minecraft/server/CommandGamemode net/minecraft/server/commands/GameModeCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lnet/minecraft/server/EnumGamemode;)I setMode
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EnumGamemode;)V logGamemodeChange
	a (Lnet/minecraft/server/EnumGamemode;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lnet/minecraft/server/EnumGamemode;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
dft$e com/mojang/realmsclient/RealmsMainScreen$PendingInvitesButton
	a this$0
	a (Ldft;Ldlg;)V lambda$new$0
	b (Ldfj;IIF)V renderButton
	d ()V tick
dft$d com/mojang/realmsclient/RealmsMainScreen$NewsButton
	a this$0
	a (Ldft;Ldlg;)V lambda$new$0
	b (Ldfj;IIF)V renderButton
dft$g com/mojang/realmsclient/RealmsMainScreen$ServerEntry
	b this$0
	c serverData
	a (DDI)Z mouseClicked
	a (Ldfj;II)V lambda$renderLegacy$0
	a (Ldfj;IIIIIIIZF)V render
	a (Ldft$g;)Ldgn; access$8700
	a (Ldgn;Ldfj;IIII)V renderMcoServerItem
	b (Ldgn;Ldfj;IIII)V renderLegacy
dft$f com/mojang/realmsclient/RealmsMainScreen$RealmSelectionList
	a this$0
	o showingMessage
	a ()V clear
	a (DDI)Z mouseClicked
	a (I)V selectItem
	a (IIDDI)V itemClicked
	a (III)Z keyPressed
	a (Ldft$b;)I addMessageEntry
	a (Ldlc$a;)V setSelected
	b ()Z isFocused
	b (Ldft$b;)V setSelected
	c ()I getMaxPosition
	d ()I getRowWidth
dft$i com/mojang/realmsclient/RealmsMainScreen$TrialEntry
	b this$0
	a (DDI)Z mouseClicked
	a (Ldfj;IIIII)V renderTrialItem
	a (Ldfj;IIIIIIIZF)V render
cqu net/minecraft/world/level/levelgen/placement/nether/package-info
net/minecraft/server/WorldGenIglooPiece net/minecraft/world/level/levelgen/structure/IglooPieces
	a STRUCTURE_LOCATION_IGLOO
	b STRUCTURE_LOCATION_LADDER
	c STRUCTURE_LOCATION_LABORATORY
	d PIVOTS
	e OFFSETS
	a ()Ljava/util/Map; access$000
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;)V addPieces
	b ()Ljava/util/Map; access$100
	c ()Lnet/minecraft/server/MinecraftKey; access$200
dft$h com/mojang/realmsclient/RealmsMainScreen$ShowPopupButton
	a this$0
	a (Ldft;Ldlg;)V lambda$new$0
	b (Ldfj;IIF)V renderButton
cqv net/minecraft/world/level/levelgen/placement/package-info
net/minecraft/server/DragonControllerLandingFly net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase
	b NEAR_EGG_TARGETING
	c currentPath
	d targetLocation
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
jj$a net/minecraft/data/recipes/SimpleCookingRecipeBuilder$Result
	a id
	b group
	c ingredient
	d result
	e experience
	f cookingTime
	g advancement
	h advancementId
	i serializer
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
azx$a net/minecraft/world/entity/animal/Bee$BaseBeeGoal
	a this$0
	a ()Z canUse
	b ()Z canContinueToUse
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
azx$b net/minecraft/world/entity/animal/Bee$BeeAttackGoal
	b this$0
	a ()Z canUse
	b ()Z canContinueToUse
azx$c net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal
	a ()Z canUse
	b ()Z canContinueToUse
	h ()Z beeCanTarget
azx$d net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal
	b this$0
	c ()V start
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
net/minecraft/server/TrunkPlacerFancy net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer
	a CODEC
	a ()Lnet/minecraft/server/TrunkPlacers; type
	a (II)Z trimBranches
	a (Lnet/minecraft/server/BlockPosition;)I getSteps
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EnumDirection$EnumAxis; getLogAxis
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;ILnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)V makeBranches
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;ILnet/minecraft/server/BlockPosition;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;ZLjava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Z makeLimb
	b (II)F treeShape
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
net/minecraft/server/FluidTypeLava net/minecraft/world/level/material/LavaFluid
	a ()Lnet/minecraft/server/Item; getBucket
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/server/FluidType;)Z isSame
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V fizz
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V beforeDestroyingBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/Fluid;)V spreadTo
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z hasFlammableNeighbours
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Lnet/minecraft/server/Fluid;)I getSpreadDelay
	b (Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/IBlockData; createLegacyBlock
	b (Lnet/minecraft/server/IWorldReader;)I getSlopeFindDistance
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isFlammable
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Ljava/util/Random;)V randomTick
	c ()F getExplosionResistance
	c (Lnet/minecraft/server/IWorldReader;)I getDropOff
	d ()Lnet/minecraft/server/FluidType; getFlowing
	e ()Lnet/minecraft/server/FluidType; getSource
	f ()Z canConvertToSource
	i ()Lnet/minecraft/server/ParticleParam; getDripParticle
	j ()Z isRandomlyTicking
net/minecraft/server/VoxelShapeCubeMerger net/minecraft/world/phys/shapes/DiscreteCubeMerger
	a result
	b firstSize
	c secondSize
	d gcd
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Ldcw$a;)Z forMergedIndexes
net/minecraft/server/BiomeSettingsGeneration net/minecraft/world/level/biome/BiomeGenerationSettings
	a LOGGER
	b EMPTY
	c CODEC
	d surfaceBuilder
	e carvers
	f features
	g structureStarts
	h flowerFeatures
	a ()Ljava/util/Collection; structures
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lnet/minecraft/server/BiomeSettingsGeneration;)Ljava/util/List; lambda$null$4
	a (Lnet/minecraft/server/StructureFeature;)Lnet/minecraft/server/StructureFeature; withBiomeConfig
	a (Lnet/minecraft/server/StructureFeature;Lnet/minecraft/server/StructureFeature;)Z lambda$withBiomeConfig$8
	a (Lnet/minecraft/server/StructureGenerator;)Z isValidStart
	a (Lnet/minecraft/server/StructureGenerator;Ljava/util/function/Supplier;)Z lambda$isValidStart$7
	a (Lnet/minecraft/server/WorldGenFeatureConfigured;)Z lambda$new$6
	a (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/List; getCarvers
	b ()Ljava/util/List; getFlowerFeatures
	b (Lnet/minecraft/server/BiomeSettingsGeneration;)Ljava/util/List; lambda$null$3
	c ()Ljava/util/List; features
	c (Lnet/minecraft/server/BiomeSettingsGeneration;)Ljava/util/Map; lambda$null$2
	d ()Ljava/util/function/Supplier; getSurfaceBuilder
	d (Lnet/minecraft/server/BiomeSettingsGeneration;)Ljava/util/function/Supplier; lambda$null$1
	e ()Lnet/minecraft/server/WorldGenSurfaceConfiguration; getSurfaceBuilderConfig
	f ()Lnet/minecraft/server/WorldGenSurfaceComposite; lambda$static$0
net/minecraft/server/WorldGenSurfaceComposite net/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder
	a DIRECT_CODEC
	b CODEC
	c surfaceBuilder
	d config
	a ()Lnet/minecraft/server/WorldGenSurfaceConfiguration; config
	a (J)V initNoise
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJ)V apply
	a (Lnet/minecraft/server/WorldGenSurfaceComposite;)Lnet/minecraft/server/WorldGenSurface; lambda$static$0
dft$a com/mojang/realmsclient/RealmsMainScreen$CloseButton
	a this$0
	a (Ldft;Ldlg;)V lambda$new$0
	b (Ldfj;IIF)V renderButton
cot$a net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer$FoliageCoords
	a attachment
	b branchBase
	a ()I getBranchBase
	a (Lcot$a;)Lcni$b; access$000
drf$a net/minecraft/client/gui/screens/packs/PackSelectionScreen$Watcher
	a watcher
	b packPath
	a ()Z pollForChanges
	a (Ljava/io/File;)Ldrf$a; create
	a (Ljava/nio/file/Path;)V watchDir
dam$a net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetTable; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetTable;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/BlockColumn net/minecraft/world/level/NoiseColumn
	a column
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
crw net/minecraft/world/level/levelgen/structure/package-info
net/minecraft/server/ITileInventory net/minecraft/world/MenuProvider
	getScoreboardDisplayName ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/GameTestHarnessTimeout net/minecraft/gametest/framework/GameTestTimeoutException
dft$3 com/mojang/realmsclient/RealmsMainScreen$3
	a this$0
azx$e net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal
	b this$0
	c travellingTicks
	d blacklistedTargets
	e lastPath
	f ticksStuck
	a ()Z canUse
	a (Lazx$e;)I access$300
	a (Lazx$e;Lnet/minecraft/server/BlockPosition;)Z access$4900
	a (Lnet/minecraft/server/BlockPosition;)Z pathfindDirectlyTowards
	b ()Z canContinueToUse
	b (Lazx$e;)Ljava/util/List; access$500
	b (Lnet/minecraft/server/BlockPosition;)Z isTargetBlacklisted
	c ()V start
	c (Lazx$e;)V access$5000
	c (Lnet/minecraft/server/BlockPosition;)V blacklistTarget
	d ()V stop
	d (Lnet/minecraft/server/BlockPosition;)Z hasReachedTarget
	e ()V tick
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
	j ()V clearBlacklist
	k ()V dropAndBlacklistHive
	l ()V dropHive
net/minecraft/server/FurnaceRecipe net/minecraft/world/item/crafting/SmeltingRecipe
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
dft$2 com/mojang/realmsclient/RealmsMainScreen$2
	a this$0
	a ()V lambda$run$0
	a (Ldhf;)V lambda$run$1
azx$f net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal
	b this$0
	c travellingTicks
	a ()Z canUse
	a (Lazx$f;)I access$400
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
	j ()Z wantsToGoToKnownFlower
dft$5 com/mojang/realmsclient/RealmsMainScreen$5
	a this$0
	a (Ldgn;)V lambda$run$0
	a (Ldhf;)V lambda$run$1
azx$g net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal
	b this$0
	e ()V tick
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
dft$4 com/mojang/realmsclient/RealmsMainScreen$4
	a this$0
azx$h net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal
	a this$0
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V alertOther
	b ()Z canContinueToUse
net/minecraft/server/PacketPlayOutScoreboardDisplayObjective net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket
	a slot
	b objectiveName
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getSlot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/lang/String; getObjectiveName
azx$i net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal
	b this$0
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)D lambda$findNearbyHivesWithSpace$2
	a (Lnet/minecraft/server/EntityBee;Lnet/minecraft/server/BlockPosition;)Z lambda$findNearbyHivesWithSpace$1
	a (Lnet/minecraft/server/VillagePlaceType;)Z lambda$findNearbyHivesWithSpace$0
	c ()V start
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
	j ()Ljava/util/List; findNearbyHivesWithSpace
net/minecraft/server/DataConverterMaterialId net/minecraft/util/datafix/fixes/ItemIdFix
	ID_MAPPING ITEM_NAMES
	a (I)Ljava/lang/String; getItem
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Pair; lambda$null$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$2
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	a (Ljava/lang/Integer;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
azx$j net/minecraft/world/entity/animal/Bee$BeeLookControl
	h this$0
	a ()V tick
	b ()Z resetXRotOnTick
azx$k net/minecraft/world/entity/animal/Bee$BeePollinateGoal
	b this$0
	c VALID_POLLINATION_BLOCKS
	d successfulPollinatingTicks
	e lastSoundPlayedTick
	f pollinating
	g hoverPos
	h pollinatingTicks
	a (Lazx$k;)Z access$600
	a (Ljava/util/function/Predicate;D)Ljava/util/Optional; findNearestBlock
	a (Lnet/minecraft/server/IBlockData;)Z lambda$new$0
	b (Lazx$k;)V access$800
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
	j ()Z hasPollinatedLongEnough
	k ()Z isPollinating
	l ()V stopPollinating
	m ()V setWantedPos
	n ()F getOffset
	o ()Ljava/util/Optional; findNearbyFlower
azx$l net/minecraft/world/entity/animal/Bee$BeeWanderGoal
	a this$0
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	g ()Lnet/minecraft/server/Vec3D; findPos
net/minecraft/server/PacketPlayInUseItem net/minecraft/network/protocol/game/ServerboundUseItemOnPacket
	a blockHit
	b hand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/EnumHand; getHand
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/MovingObjectPositionBlock; getHitResult
net/minecraft/server/PacketPlayOutUpdateAttributes$AttributeSnapshot net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot
	a this$0
	b attribute
	c base
	d modifiers
	a ()Lnet/minecraft/server/AttributeBase; getAttribute
	b ()D getBase
	c ()Ljava/util/Collection; getModifiers
net/minecraft/server/PlayerInteractManager net/minecraft/server/level/ServerPlayerGameMode
	c LOGGER
	currentTick gameTicks
	e previousGameModeForPlayer
	f isDestroyingBlock
	gamemode gameModeForPlayer
	h destroyPos
	j hasDelayedDestroy
	k delayedDestroyPos
	l delayedTickStart
	lastDigTick destroyProgressStart
	m lastSentState
	world level
	a ()V tick
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType;Ljava/lang/String;)V destroyAndAck
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType;Lnet/minecraft/server/EnumDirection;I)V handleBlockBreakAction
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; useItem
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; useItemOn
	a (Lnet/minecraft/server/EnumGamemode;Lnet/minecraft/server/EnumGamemode;)V setGameModeForPlayer
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;I)F incrementDestroyProgress
	a (Lnet/minecraft/server/WorldServer;)V setLevel
	b (Lnet/minecraft/server/EnumGamemode;)V updateGameMode
	breakBlock (Lnet/minecraft/server/BlockPosition;)Z destroyBlock
	c ()Lnet/minecraft/server/EnumGamemode; getPreviousGameModeForPlayer
	d ()Z isSurvival
	getGameMode ()Lnet/minecraft/server/EnumGamemode; getGameModeForPlayer
	setGameMode (Lnet/minecraft/server/EnumGamemode;)V setGameModeForPlayer
net/minecraft/server/WorldGenScatteredPiece net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece
	a width
	b height
	c depth
	d heightPosition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;I)Z updateAverageGroundHeight
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/PathfinderAbstract net/minecraft/world/level/pathfinder/NodeEvaluator
	a level
	b mob
	c nodes
	d entityWidth
	e entityHeight
	f entityDepth
	g canPassDoors
	h canOpenDoors
	i canFloat
	a ()V done
	a (DDD)Lnet/minecraft/server/PathDestination; getGoal
	a (III)Lnet/minecraft/server/PathPoint; getNode
	a (IIII)Lnet/minecraft/server/PathPoint; lambda$getNode$0
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/PathPoint; getNode
	a (Lnet/minecraft/server/ChunkCache;Lnet/minecraft/server/EntityInsentient;)V prepare
	a (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;IIILnet/minecraft/server/EntityInsentient;IIIZZ)Lnet/minecraft/server/PathType; getBlockPathType
	a (Z)V setCanPassDoors
	a ([Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)I getNeighbors
	b ()Lnet/minecraft/server/PathPoint; getStart
	b (Z)V setCanOpenDoors
	c ()Z canPassDoors
	c (Z)V setCanFloat
	d ()Z canOpenDoors
	e ()Z canFloat
dwm$1 net/minecraft/client/multiplayer/ClientPacketListener$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundRecipePacket$State
	b $SwitchMap$net$minecraft$network$protocol$game$ClientboundSetTitlesPacket$Type
	c $SwitchMap$net$minecraft$network$protocol$game$ClientboundPlayerInfoPacket$Action
	d $SwitchMap$net$minecraft$server$ServerScoreboard$Method
drx$1 net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$1
	a this$0
	c ()Lnet/minecraft/server/IChatMutableComponent; createNarrationMessage
net/minecraft/server/BlockCoralFanWallAbstract net/minecraft/world/level/block/BaseCoralWallFanBlock
	a FACING
	c SHAPES
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
net/minecraft/server/PotionBrewer net/minecraft/world/item/alchemy/PotionBrewing
	a POTION_MIXES
	b CONTAINER_MIXES
	c ALLOWED_CONTAINERS
	d ALLOWED_CONTAINER
	a ()V bootStrap
	a (Lnet/minecraft/server/Item;)V addContainer
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/Item;Lnet/minecraft/server/Item;)V addContainerRecipe
	a (Lnet/minecraft/server/ItemStack;)Z isIngredient
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z hasMix
	a (Lnet/minecraft/server/PotionRegistry;)Z isBrewablePotion
	a (Lnet/minecraft/server/PotionRegistry;Lnet/minecraft/server/Item;Lnet/minecraft/server/PotionRegistry;)V addMix
	b (Lnet/minecraft/server/ItemStack;)Z isContainerIngredient
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z hasContainerMix
	c (Lnet/minecraft/server/ItemStack;)Z isPotionIngredient
	c (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z hasPotionMix
	d (Lnet/minecraft/server/ItemStack;)Z lambda$static$0
	d (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; mix
net/minecraft/server/ServerPing$ServerPingPlayerSample net/minecraft/network/protocol/status/ServerStatus$Players
	a maxPlayers
	b numPlayers
	c sample
	a ()I getMaxPlayers
	a ([Lcom/mojang/authlib/GameProfile;)V setSample
	b ()I getNumPlayers
	c ()[Lcom/mojang/authlib/GameProfile; getSample
net/minecraft/server/ICrafting net/minecraft/world/inventory/ContainerListener
	a (Lnet/minecraft/server/Container;ILnet/minecraft/server/ItemStack;)V slotChanged
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/NonNullList;)V refreshContainer
net/minecraft/server/CommandTell net/minecraft/server/commands/MsgCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/IChatBaseComponent;)I sendMessage
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;)V lambda$sendMessage$2
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;)V lambda$sendMessage$1
net/minecraft/server/EntityTypes$Builder net/minecraft/world/entity/EntityType$Builder
	a factory
	b category
	c immuneTo
	d serialize
	e summon
	f fireImmune
	g canSpawnFarFromPlayer
	h clientTrackingRange
	i updateInterval
	j dimensions
	a ()Lnet/minecraft/server/EntityTypes$Builder; noSummon
	a (FF)Lnet/minecraft/server/EntityTypes$Builder; sized
	a (Laqb$b;Lnet/minecraft/server/EnumCreatureType;)Lnet/minecraft/server/EntityTypes$Builder; of
	a (Ljava/lang/String;)Lnet/minecraft/server/EntityTypes; build
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; lambda$createNothing$0
	a (Lnet/minecraft/server/EnumCreatureType;)Lnet/minecraft/server/EntityTypes$Builder; createNothing
	a ([Lnet/minecraft/server/Block;)Lnet/minecraft/server/EntityTypes$Builder; immuneTo
	b ()Lnet/minecraft/server/EntityTypes$Builder; noSave
	c ()Lnet/minecraft/server/EntityTypes$Builder; fireImmune
	d ()Lnet/minecraft/server/EntityTypes$Builder; canSpawnFarFromPlayer
	trackingRange (I)Lnet/minecraft/server/EntityTypes$Builder; clientTrackingRange
net/minecraft/server/WorldGenFeatureBlock net/minecraft/world/level/levelgen/feature/SimpleBlockFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureBlockConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
drx$4 net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$4
	a this$0
	c ()Lnet/minecraft/server/IChatMutableComponent; createNarrationMessage
	i ()Lnet/minecraft/server/IChatBaseComponent; getMessage
net/minecraft/server/RandomPositionGenerator net/minecraft/world/entity/ai/util/RandomPos
	a (Ljava/util/Random;IIILnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/BlockPosition; getRandomDelta
	a (Lnet/minecraft/server/BlockPosition;IILjava/util/function/Predicate;)Lnet/minecraft/server/BlockPosition; moveUpToAboveSolid
	a (Lnet/minecraft/server/EntityCreature;II)Lnet/minecraft/server/Vec3D; getPos
	a (Lnet/minecraft/server/EntityCreature;IIILnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/Vec3D; getAirPos
	a (Lnet/minecraft/server/EntityCreature;IIILnet/minecraft/server/Vec3D;ZDLjava/util/function/ToDoubleFunction;ZIIZ)Lnet/minecraft/server/Vec3D; generateRandomPos
	a (Lnet/minecraft/server/EntityCreature;IILjava/util/function/ToDoubleFunction;)Lnet/minecraft/server/Vec3D; getLandPos
	a (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; getLandPosTowards
	a (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/Vec3D; getPosTowards
	a (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/Vec3D;FII)Lnet/minecraft/server/Vec3D; getAboveLandPos
	a (Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/BlockPosition;)Z lambda$generateRandomPos$0
	b (Lnet/minecraft/server/EntityCreature;II)Lnet/minecraft/server/Vec3D; getLandPos
	b (Lnet/minecraft/server/EntityCreature;IIILnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/Vec3D; getAirPosTowards
	b (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; getPosTowards
	c (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; getPosAvoid
	d (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; getLandPosAvoid
drx$5 net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$5
	a $SwitchMap$net$minecraft$client$gui$screens$worldselection$CreateWorldScreen$SelectedGameMode
net/minecraft/server/PersistentCommandStorage net/minecraft/world/level/storage/CommandStorage
	a namespaces
	b storage
	a ()Ljava/util/stream/Stream; keys
	a (Ljava/lang/String;)Ljava/lang/String; createId
	a (Ljava/lang/String;Ljava/lang/String;)Lcxx$a; newStorage
	a (Ljava/util/Map$Entry;)Ljava/util/stream/Stream; lambda$keys$2
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/NBTTagCompound; get
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/NBTTagCompound;)V set
	b (Ljava/lang/String;Ljava/lang/String;)Lcxx$a; lambda$set$1
	c (Ljava/lang/String;Ljava/lang/String;)Lcxx$a; lambda$get$0
drx$2 net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$2
	a this$0
	c ()Lnet/minecraft/server/IChatMutableComponent; createNarrationMessage
	i ()Lnet/minecraft/server/IChatBaseComponent; getMessage
drx$3 net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$3
	a this$0
	i ()Lnet/minecraft/server/IChatBaseComponent; getMessage
dhj$a com/mojang/realmsclient/gui/RealmsWorldSlotButton$Action
	a NOTHING
	b SWITCH_SLOT
	c JOIN
	d $VALUES
cta net/minecraft/world/level/levelgen/structure/templatesystem/package-info
net/minecraft/server/EnumProtocolDirection net/minecraft/network/protocol/PacketFlow
	c $VALUES
	a ()Lnet/minecraft/server/EnumProtocolDirection; getOpposite
aek$1 net/minecraft/tags/TagCollection$1
	a val$tags
	b empty
	a ()Ljava/util/Map; getAllTags
	a (Lnet/minecraft/server/Tag;)Lnet/minecraft/server/MinecraftKey; getId
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; getTagOrEmpty
dxq$1 net/minecraft/client/particle/HugeExplosionParticle$1
net/minecraft/server/MovingObjectPositionEntity net/minecraft/world/phys/EntityHitResult
	b entity
	c ()Lnet/minecraft/server/MovingObjectPosition$EnumMovingObjectType; getType
dhj$b com/mojang/realmsclient/gui/RealmsWorldSlotButton$State
	a empty
	b minigame
	c action
	d isCurrentlyActiveSlot
	e slotName
	f imageId
	g image
	h actionPrompt
	a (Ldhj$b;)Z access$000
	b (Ldhj$b;)Ljava/lang/String; access$100
	c (Ldhj$b;)J access$200
	d (Ldhj$b;)Ljava/lang/String; access$300
	e (Ldhj$b;)Lnet/minecraft/server/IChatBaseComponent; access$400
net/minecraft/server/WorldGenFeatureBlockConfiguration net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration
	a CODEC
	b toPlace
	c placeOn
	d placeIn
	e placeUnder
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lnet/minecraft/server/WorldGenFeatureBlockConfiguration;)Ljava/util/List; lambda$null$3
	b (Lnet/minecraft/server/WorldGenFeatureBlockConfiguration;)Ljava/util/List; lambda$null$2
	c (Lnet/minecraft/server/WorldGenFeatureBlockConfiguration;)Ljava/util/List; lambda$null$1
	d (Lnet/minecraft/server/WorldGenFeatureBlockConfiguration;)Lnet/minecraft/server/IBlockData; lambda$null$0
net/minecraft/server/IChunkAccess net/minecraft/world/level/chunk/ChunkAccess
	a ()Lnet/minecraft/server/ChunkSection; getHighestSection
	a (II)Z isYSpaceEmpty
	a (Ljava/util/Map;)V setAllStarts
	a (Lnet/minecraft/server/Entity;)V addEntity
	a (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap; getOrCreateHeightmapUnprimed
	a (Lnet/minecraft/server/HeightMap$Type;[J)V setHeightmap
	a (Lnet/minecraft/server/NBTTagCompound;)V setBlockEntityNbt
	a (SI)V addPackedPostProcess
	a ([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList; getOrCreateOffsetList
	b ()I getHighestSectionPosition
	b (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/BlockPosition; getHeighestPosition
	b (Z)V setLightCorrect
	c ()Ljava/util/Set; getBlockEntitiesPos
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	e (Lnet/minecraft/server/BlockPosition;)V markPosForPostprocessing
	f ()Ljava/util/Collection; getHeightmaps
	getBiomeIndex ()Lnet/minecraft/server/BiomeStorage; getBiomes
	getChunkStatus ()Lnet/minecraft/server/ChunkStatus; getStatus
	getHighestBlock (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	h ()Ljava/util/Map; getAllStarts
	i (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbt
	isNeedsSaving ()Z isUnsaved
	j (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbtForSaving
	l ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
	m ()Ljava/util/stream/Stream; getLights
	n ()Lnet/minecraft/server/TickList; getBlockTicks
	o ()Lnet/minecraft/server/TickList; getLiquidTicks
	p ()Lnet/minecraft/server/ChunkConverter; getUpgradeData
	r ()Z isLightCorrect
	removeTileEntity (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	setLastSaved (J)V setLastSaveTime
	setNeedsSaving (Z)V setUnsaved
	setTileEntity (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	setType (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
net/minecraft/server/PacketPlayInTabComplete net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket
	a id
	b command
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/lang/String; getCommand
dbq$a net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionRandomChance;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionRandomChance; deserialize
dnc$a net/minecraft/client/gui/font/providers/BitmapProvider$Builder
	a texture
	b chars
	c height
	d ascent
	a (Lcom/google/gson/JsonObject;)Ldnc$a; fromJson
	a (Ldeq;IIII)I getActualGlyphWidth
	a (Lnet/minecraft/server/IResourceManager;)Lddy; create
dnc$b net/minecraft/client/gui/font/providers/BitmapProvider$Glyph
	a scale
	b image
	c offsetX
	d offsetY
	e width
	f height
	g advance
	h ascent
	a (II)V upload
	d ()I getPixelWidth
	e ()I getPixelHeight
	f ()Z isColored
	g ()F getOversample
	l ()F getBearingY
ctv net/minecraft/world/level/levelgen/surfacebuilders/package-info
net/minecraft/server/PathfinderGoalBreakDoor net/minecraft/world/entity/ai/goal/BreakDoorGoal
	a breakTime
	b lastBreakProgress
	c doorBreakTime
	g validDifficulties
	a ()Z canUse
	a (Lnet/minecraft/server/EnumDifficulty;)Z isValidDifficulty
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	f ()I getDoorBreakTime
net/minecraft/server/BehaviorCareer net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/VillagerProfession;)V lambda$start$3
	a (Lnet/minecraft/server/GlobalPos;Lnet/minecraft/server/WorldServer;)Ljava/util/Optional; lambda$start$0
	a (Lnet/minecraft/server/VillagePlaceType;)Ljava/util/Optional; lambda$start$2
	a (Lnet/minecraft/server/VillagePlaceType;Lnet/minecraft/server/VillagerProfession;)Z lambda$null$1
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
net/minecraft/server/EntityRabbit$GroupDataRabbit net/minecraft/world/entity/animal/Rabbit$RabbitGroupData
	a rabbitType
net/minecraft/server/ArgumentPosition net/minecraft/commands/arguments/coordinates/BlockPosArgument
	a ERROR_NOT_LOADED
	b ERROR_OUT_OF_WORLD
	c EXAMPLES
	a ()Lnet/minecraft/server/ArgumentPosition; blockPos
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/BlockPosition; getLoadedBlockPos
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/BlockPosition; getOrLoadBlockPos
net/minecraft/server/ItemMinecart net/minecraft/world/item/MinecartItem
	a DISPENSE_ITEM_BEHAVIOR
	b type
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemMinecart;)Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; access$000
dcc$a net/minecraft/world/level/timers/TimerQueue$Event
	a triggerTime
	b sequentialId
	c id
	d callback
dbq$1 net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$1
net/minecraft/server/NBTTagByteArray net/minecraft/nbt/ByteArrayTag
	a TYPE
	a ()B getId
	a (I)Lnet/minecraft/server/NBTTagByte; get
	a (ILnet/minecraft/server/NBTBase;)Z setTag
	a (ILnet/minecraft/server/NBTTagByte;)Lnet/minecraft/server/NBTTagByte; set
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (Ljava/util/List;)[B toArray
	b ()Lnet/minecraft/server/NBTTagType; getType
	b (I)Lnet/minecraft/server/NBTTagByte; remove
	b (ILnet/minecraft/server/NBTBase;)Z addTag
	b (ILnet/minecraft/server/NBTTagByte;)V add
	c ()Lnet/minecraft/server/NBTBase; copy
	c (I)Lnet/minecraft/server/NBTBase; remove
	c (ILnet/minecraft/server/NBTBase;)V add
	d (ILnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; set
	d_ ()B getElementType
	getBytes ()[B getAsByteArray
dph$c$2 net/minecraft/client/gui/screens/controls/ControlList$KeyEntry$2
	a val$this$0
	b val$name
	c this$1
	c ()Lnet/minecraft/server/IChatMutableComponent; createNarrationMessage
cuc net/minecraft/world/level/levelgen/synth/package-info
ceg$1 net/minecraft/world/level/block/state/StateHolder$1
	a (Ljava/util/Map$Entry;)Ljava/lang/String; apply
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/lang/String; getName
dph$c$1 net/minecraft/client/gui/screens/controls/ControlList$KeyEntry$1
	a val$this$0
	b val$key
	c val$name
	d this$1
	c ()Lnet/minecraft/server/IChatMutableComponent; createNarrationMessage
net/minecraft/server/BlockRotatable net/minecraft/world/level/block/RotatedPillarBlock
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
net/minecraft/server/WorldGenDecoratorDecpratedConfiguration net/minecraft/world/level/levelgen/placement/DecoratedDecoratorConfiguration
	a CODEC
	c outer
	d inner
	a ()Lnet/minecraft/server/WorldGenDecoratorConfigured; outer
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	b ()Lnet/minecraft/server/WorldGenDecoratorConfigured; inner
net/minecraft/server/WorldGenSurfaceMesaForest net/minecraft/world/level/levelgen/surfacebuilders/WoodedBadlandsSurfaceBuilder
	K WHITE_TERRACOTTA
	L ORANGE_TERRACOTTA
	M TERRACOTTA
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/Advancements net/minecraft/advancements/AdvancementList
	a LOGGER
	c roots
	d tasks
	e listener
	a ()V clear
	a (Ljava/util/Map;)V add
	a (Ljava/util/Set;)V remove
	a (Lnet/minecraft/server/Advancement;)V remove
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Advancement; get
	a (Lz$a;)V setListener
	b ()Ljava/lang/Iterable; getRoots
	c ()Ljava/util/Collection; getAllAdvancements
dyc$6 net/minecraft/client/particle/ParticleRenderType$6
	a (Ldfe;Lejv;)V begin
	a (Ldfl;)V end
cuq net/minecraft/world/level/lighting/package-info
cup net/minecraft/world/level/lighting/SpatialLongSet
	a map
boy$a$a net/minecraft/world/item/crafting/SingleItemRecipe$Serializer$SingleItemMaker
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdRightTurn net/minecraft/world/level/levelgen/structure/StrongholdPieces$RightTurn
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdRightTurn; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
cn$a net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance
	a entity
	a (Lbg$a;)Lcn$a; summonedEntity
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/LootTableInfo;)Z matches
czu$1 net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$1
net/minecraft/server/EntityEvoker net/minecraft/world/entity/monster/Evoker
	bo wololoTarget
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	N ()V customServerAiStep
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/EntityEvoker;)Lnet/minecraft/server/EntitySheep; access$300
	a (Lnet/minecraft/server/EntityEvoker;Lnet/minecraft/server/EntitySheep;)V access$900
	a (Lnet/minecraft/server/EntitySheep;)V setWololoTarget
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityEvoker;)Ljava/util/Random; access$400
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityEvoker;)Ljava/util/Random; access$500
	d (Lnet/minecraft/server/EntityEvoker;)Ljava/util/Random; access$600
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityEvoker;)Ljava/util/Random; access$700
	eK ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eL ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	eM ()Lnet/minecraft/server/SoundEffect; getCastingSoundEvent
	f (Lnet/minecraft/server/EntityEvoker;)Ljava/util/Random; access$800
	fg ()Lnet/minecraft/server/EntitySheep; getWololoTarget
	o ()V registerGoals
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
net/minecraft/server/WorldGenFeatureLakeConfiguration net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration
	a CODEC
	b state
	a (Lnet/minecraft/server/WorldGenFeatureLakeConfiguration;)Lnet/minecraft/server/IBlockData; lambda$static$0
net/minecraft/server/BlockMagma net/minecraft/world/level/block/MagmaBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V stepOn
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
cvb net/minecraft/world/level/material/package-info
net/minecraft/server/TagSet net/minecraft/tags/SetTag
	a closestCommonSuperType
	b valuesList
	c values
	a ()Lnet/minecraft/server/TagSet; empty
	a (Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class; findClosestAncestor
	a (Ljava/lang/Object;)Z contains
	a (Ljava/util/Set;)Lnet/minecraft/server/TagSet; create
	b ()Ljava/util/List; getValues
	c (Ljava/util/Set;)Ljava/lang/Class; findCommonSuperClass
net/minecraft/server/ItemLeash net/minecraft/world/item/LeadItem
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EnumInteractionResult; bindPlayerMobs
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
drx$a net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$OperationFailedException
cvf net/minecraft/world/level/newbiome/area/package-info
cvj net/minecraft/world/level/newbiome/context/package-info
net/minecraft/server/PacketPlayOutAttachEntity net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket
	a sourceId
	b destId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getSourceId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getDestId
net/minecraft/server/BiomeDecoratorGroups net/minecraft/data/worldgen/Features
	DESERT_WELL WELL
	cJ FOREST_FLOWER_FEATURES
	a ()Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$static$8
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenFeatureConfigured;)Lnet/minecraft/server/WorldGenFeatureConfigured; register
	b ()Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$static$7
	c ()Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$static$6
	d ()Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$static$5
	e ()Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$static$4
	f ()Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$static$3
	g ()Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$static$2
	h ()Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$static$1
	i ()Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$static$0
net/minecraft/server/MerchantWrapper net/minecraft/world/entity/npc/ClientSideMerchant
	a container
	b source
	c offers
	d xp
	a ()Lnet/minecraft/server/IInventory; getContainer
	a (Lnet/minecraft/server/MerchantRecipe;)V notifyTrade
	a (Lnet/minecraft/server/MerchantRecipeList;)V overrideOffers
	eL ()I getVillagerXp
	eM ()Lnet/minecraft/server/EntityHuman; getTradingPlayer
	eO ()Lnet/minecraft/server/MerchantRecipeList; getOffers
	eP ()Z showProgressBar
	eQ ()Lnet/minecraft/server/SoundEffect; getNotifyTradeSound
	eV ()Lnet/minecraft/server/World; getLevel
	f (Lnet/minecraft/server/EntityHuman;)V setTradingPlayer
	k (Lnet/minecraft/server/ItemStack;)V notifyTradeUpdated
	t (I)V overrideXp
net/minecraft/server/ItemAxe net/minecraft/world/item/AxeItem
	a STRIPABLES
	c DIGGABLE_MATERIALS
	d OTHER_DIGGABLE_BLOCKS
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemActionContext;Lnet/minecraft/server/EntityHuman;)V lambda$useOn$0
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)F getDestroySpeed
net/minecraft/server/ChunkTaskQueue net/minecraft/server/level/ChunkTaskPriorityQueue
	a PRIORITY_LEVEL_COUNT
	b taskQueue
	c firstQueue
	d name
	e acquired
	f maxTasks
	a ()Ljava/util/stream/Stream; pop
	a (I)Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap; lambda$new$0
	a (ILnet/minecraft/server/ChunkCoordIntPair;I)V resortChunkTasks
	a (J)Ljava/lang/Runnable; acquire
	a (JLjava/util/Optional;)Lcom/mojang/datafixers/util/Either; lambda$pop$6
	a (JZ)V release
	a (Ljava/util/Optional;)Z lambda$release$3
	a (Ljava/util/Optional;JI)V submit
	b ()Lit/unimi/dsi/fastutil/longs/LongSet; getAcquired
	b (J)Lcom/mojang/datafixers/util/Either; lambda$null$5
	c (J)V lambda$acquire$4
	d (J)Ljava/util/List; lambda$submit$2
	e (J)Ljava/util/List; lambda$resortChunkTasks$1
drx$b net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$SelectedGameMode
	a SURVIVAL
	b HARDCORE
	c CREATIVE
	d DEBUG
	e name
	f gameType
	g $VALUES
	a (Ldrx$b;)Ljava/lang/String; access$300
	b (Ldrx$b;)Lnet/minecraft/server/EnumGamemode; access$800
net/minecraft/server/StructureSettings net/minecraft/world/level/levelgen/StructureSettings
	a CODEC
	b DEFAULTS
	c DEFAULT_STRONGHOLD
	d structureConfig
	e stronghold
	a ()Ljava/util/Map; structureConfig
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/StructureGenerator;)Lnet/minecraft/server/StructureSettingsFeature; getConfig
	a (Lnet/minecraft/server/StructureSettings;)Ljava/util/Map; lambda$null$1
	b ()Lnet/minecraft/server/StructureSettingsStronghold; stronghold
	b (Lnet/minecraft/server/StructureSettings;)Ljava/util/Optional; lambda$null$0
cvt net/minecraft/world/level/newbiome/layer/LayerBiomes
dxq$a net/minecraft/client/particle/HugeExplosionParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dgx$a com/mojang/realmsclient/dto/Subscription$SubscriptionType
	a NORMAL
	b RECURRING
	c $VALUES
net/minecraft/server/WorldGenPackedIce1 net/minecraft/world/level/levelgen/feature/IcePatchFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureCircleConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/WorldGenPackedIce2 net/minecraft/world/level/levelgen/feature/IceSpikeFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/DataConverterGossip net/minecraft/util/datafix/fixes/GossipUUIDFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$3
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$null$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
net/minecraft/server/TileEntityEndGateway net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity
	a LOGGER
	c teleportCooldown
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (F)F getSpawnPercent
	a (Lnet/minecraft/server/BlockPosition;Z)V setExitPosition
	a (Lnet/minecraft/server/Chunk;)Lnet/minecraft/server/BlockPosition; findValidSpawnInChunk
	a (Lnet/minecraft/server/Entity;)Z canEntityTeleport
	a (Lnet/minecraft/server/EnumDirection;)Z shouldRenderFace
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;IZ)Lnet/minecraft/server/BlockPosition; findTallestBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Chunk; getChunk
	a (Lnet/minecraft/server/WorldServer;)V findExitPortal
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V createExitPortal
	a_ (II)Z triggerEvent
	aj_ ()V tick
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (F)F getCooldownPercent
	b (Lnet/minecraft/server/Entity;)V teleportEntity
	d ()Z isSpawning
	f ()Z isCoolingDown
	h ()V triggerCooldown
	i ()D getViewDistance
	j ()I getParticleAmount
	k ()Lnet/minecraft/server/BlockPosition; findExitPosition
net/minecraft/server/ItemShears net/minecraft/world/item/ShearsItem
	a (Lnet/minecraft/server/EntityLiving;)V lambda$mineBlock$0
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z mineBlock
	b (Lnet/minecraft/server/IBlockData;)Z isCorrectToolForDrops
net/minecraft/server/IFluidContainer net/minecraft/world/level/block/LiquidBlockContainer
	canPlace (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	place (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
net/minecraft/server/EntityItemFrame net/minecraft/world/entity/decoration/ItemFrame
	ITEM DATA_ITEM
	ag dropChance
	e LOGGER
	g DATA_ROTATION
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	Z ()V kill
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;)V dropItem
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interact
	a (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/server/EnumDirection;)V setDirection
	a (Lnet/minecraft/server/EnumMoveType;Lnet/minecraft/server/Vec3D;)V move
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (Lnet/minecraft/server/Entity;Z)V dropItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bf ()F getPickRadius
	c (Lnet/minecraft/server/ItemStack;)V removeFramedMap
	e ()V defineSynchedData
	g ()V recalculateBoundingBox
	h ()Z survives
	i ()I getWidth
	i (DDD)V push
	k ()I getHeight
	m ()V playPlacementSound
	q ()I getAnalogOutput
net/minecraft/server/CustomFunctionManager net/minecraft/server/ServerFunctionLibrary
	a LOGGER
	b PATH_PREFIX_LENGTH
	c PATH_SUFFIX_LENGTH
	d functions
	e tagsLoader
	f tags
	g functionCompilationLevel
	h dispatcher
	a ()Ljava/util/Map; getFunctions
	a (Laca$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/server/MinecraftKey;Ljava/util/concurrent/CompletableFuture;)V lambda$null$6
	a (Lcom/mojang/datafixers/util/Pair;)V lambda$reload$7
	a (Ljava/lang/String;)Z lambda$null$0
	a (Ljava/util/Map;Ljava/lang/Void;Ljava/lang/Throwable;)Ljava/util/Map; lambda$null$3
	a (Lnet/minecraft/server/IResourceManager;)Ljava/util/Collection; lambda$reload$1
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/concurrent/Executor;Ljava/util/Collection;)Ljava/util/concurrent/CompletionStage; lambda$reload$4
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;)Ljava/util/List; readLines
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/CustomFunction; lambda$null$2
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; getFunction
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/server/CustomFunction;Ljava/lang/Throwable;)Ljava/lang/Object; lambda$null$5
	b ()Lnet/minecraft/server/Tags; getTags
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; getTag
net/minecraft/server/PacketPlayOutKickDisconnect net/minecraft/network/protocol/game/ClientboundDisconnectPacket
	a reason
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/IChatBaseComponent; getReason
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/EntityGhast net/minecraft/world/entity/monster/Ghast
	b DATA_IS_CHARGING
	c explosionPower
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L ()Z shouldDespawnInPeaceful
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkGhastSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	ct ()Lnet/minecraft/server/SoundCategory; getSoundSource
	dF ()F getSoundVolume
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eJ ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eq ()I getMaxSpawnClusterSize
	getPower ()I getExplosionPower
	i (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$0
	m ()Z isCharging
	o ()V registerGoals
	t (Z)V setCharging
net/minecraft/server/NavigationGuardian net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation
	p allowBreaching
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
	a (Lnet/minecraft/server/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/server/Vec3D;)V doStuckDetection
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;III)Z canMoveDirectly
	b ()Lnet/minecraft/server/Vec3D; getTempMobPos
	c ()V tick
	d (Z)V setCanFloat
	l ()V followThePath
dan$1 net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$1
net/minecraft/server/WorldGenFeatureSwampHut net/minecraft/world/level/levelgen/feature/SwamplandHutFeature
	u SWAMPHUT_ENEMIES
	v SWAMPHUT_ANIMALS
	a ()Lckx$a; getStartFactory
	c ()Ljava/util/List; getSpecialEnemies
	j ()Ljava/util/List; getSpecialAnimals
net/minecraft/server/TileEntityShulkerBox net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity
	a SLOTS
	contents itemStacks
	i animationStatus
	j progress
	k progressOld
	l color
	m loadColorFromBlock
	viewingCount openCount
	Z_ ()I getContainerSize
	a (F)F getProgress
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	a (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/AxisAlignedBB; getBoundingBox
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/NonNullList;)V setItems
	a_ (II)Z triggerEvent
	aj_ ()V tick
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/AxisAlignedBB; getBoundingBox
	b_ (Lnet/minecraft/server/EntityHuman;)V stopOpen
	c (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/AxisAlignedBB; getTopBoundingBox
	c_ (Lnet/minecraft/server/EntityHuman;)V startOpen
	d (Lnet/minecraft/server/NBTTagCompound;)V loadFromTag
	e (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; saveToTag
	f ()Lnet/minecraft/server/NonNullList; getItems
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	h ()V updateAnimation
	j ()Lnet/minecraft/server/TileEntityShulkerBox$AnimationPhase; getAnimationStatus
	k ()Lnet/minecraft/server/EnumColor; getColor
	l ()Z isClosed
	m ()V moveCollidedEntities
	x ()V doNeighborUpdates
net/minecraft/server/WorldGenContext net/minecraft/world/level/newbiome/context/Context
	a (I)I nextRandom
	b ()Lnet/minecraft/server/NoiseGeneratorPerlin; getBiomeNoise
cwh net/minecraft/world/level/newbiome/layer/package-info
net/minecraft/server/BlockComposter$ContainerInput net/minecraft/world/level/block/ComposterBlock$InputContainer
	a state
	b level
	c pos
	d changed
	V_ ()I getMaxStackSize
	X_ ()V setChanged
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
net/minecraft/server/BiomeManager net/minecraft/world/level/biome/BiomeManager
	a noiseBiomeSource
	b biomeZoomSeed
	c zoomer
	a (DDD)Lnet/minecraft/server/BiomeBase; getNoiseBiomeAtPosition
	a (III)Lnet/minecraft/server/BiomeBase; getNoiseBiomeAtQuart
	a (J)J obfuscateSeed
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BiomeBase; getBiome
	a (Lnet/minecraft/server/WorldChunkManager;)Lnet/minecraft/server/BiomeManager; withDifferentSource
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BiomeBase; getNoiseBiomeAtPosition
net/minecraft/server/ItemSuspiciousStew net/minecraft/world/item/SuspiciousStewItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/MobEffectList;I)V saveMobEffect
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
net/minecraft/server/WorldGenCanyonOcean net/minecraft/world/level/levelgen/carver/UnderwaterCanyonWorldCarver
	a (Lnet/minecraft/server/IChunkAccess;IIIIIIII)Z hasWater
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;IIIIIIIILorg/apache/commons/lang3/mutable/MutableBoolean;)Z carveBlock
cwu net/minecraft/world/level/package-info
cwt net/minecraft/world/level/newbiome/layer/traits/package-info
bzj$1 net/minecraft/world/level/block/Rotation$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
net/minecraft/server/PacketPlayOutAbilities net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket
	a invulnerable
	b isFlying
	c canFly
	d instabuild
	e flyingSpeed
	f walkingSpeed
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Z isInvulnerable
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z isFlying
	d ()Z canFly
	e ()Z canInstabuild
	f ()F getFlyingSpeed
	g ()F getWalkingSpeed
net/minecraft/server/LootItemUser net/minecraft/world/level/storage/loot/LootContextUser
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/LootCollector;)V validate
net/minecraft/server/EntitySlime$ControllerMoveSlime net/minecraft/world/entity/monster/Slime$SlimeMoveControl
	i yRot
	j jumpDelay
	k slime
	l isAggressive
	a ()V tick
	a (D)V setWantedMovement
	a (FZ)V setDirection
net/minecraft/server/ItemLiquidUtil net/minecraft/world/item/ItemUtils
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; createFilledResult
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;Z)Lnet/minecraft/server/ItemStack; createFilledResult
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; useDrink
net/minecraft/server/ColorUtil net/minecraft/util/FastColor
net/minecraft/server/PacketPlayOutPlayerInfo net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket
	a action
	b entries
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/List; getEntries
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketPlayOutPlayerInfo$EnumPlayerInfoAction; getAction
net/minecraft/server/ExpirableMemory net/minecraft/world/entity/ai/memory/ExpirableValue
	a value
	b timeToLive
	a ()V tick
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$codec$3
	a (Ljava/lang/Object;)Lnet/minecraft/server/ExpirableMemory; of
	a (Ljava/lang/Object;J)Lnet/minecraft/server/ExpirableMemory; of
	a (Ljava/lang/Object;Ljava/util/Optional;)Lnet/minecraft/server/ExpirableMemory; lambda$null$2
	a (Lnet/minecraft/server/ExpirableMemory;)Ljava/util/Optional; lambda$null$1
	b ()J getTimeToLive
	b (Lnet/minecraft/server/ExpirableMemory;)Ljava/lang/Object; lambda$null$0
	c ()Ljava/lang/Object; getValue
	d ()Z hasExpired
	e ()Z canExpire
net/minecraft/server/MethodProfilerResult net/minecraft/util/profiling/ProfilerPathEntry
	a ()J getDuration
	b ()J getCount
	c ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; getCounters
dof$a net/minecraft/client/gui/screens/MenuScreens$ScreenConstructor
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/Containers;Ldjw;I)V fromPacket
net/minecraft/server/LootItemConditionTimeCheck net/minecraft/world/level/storage/loot/predicates/TimeCheck
	a period
	b value
	a (Lnet/minecraft/server/LootItemConditionTimeCheck;)Ljava/lang/Long; access$100
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	a (Lnet/minecraft/server/LootValueBounds;)Ldbt$a; time
	b ()Lnet/minecraft/server/LootItemConditionType; getType
	b (Lnet/minecraft/server/LootItemConditionTimeCheck;)Lnet/minecraft/server/LootValueBounds; access$200
net/minecraft/server/ShapeDetectorBlock net/minecraft/world/level/block/state/pattern/BlockInWorld
	a level
	b pos
	c loadChunks
	d state
	e entity
	f cachedEntity
	a ()Lnet/minecraft/server/IBlockData; getState
	a (Ljava/util/function/Predicate;)Ljava/util/function/Predicate; hasState
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$hasState$0
	a (Lnet/minecraft/server/IBlockData;)Ljava/util/function/Predicate; hasState
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$hasState$1
	b ()Lnet/minecraft/server/TileEntity; getEntity
	c ()Lnet/minecraft/server/IWorldReader; getLevel
	getPosition ()Lnet/minecraft/server/BlockPosition; getPos
net/minecraft/server/TagDataPack net/minecraft/tags/TagLoader
	a LOGGER
	b GSON
	c PATH_SUFFIX_LENGTH
	d idToValue
	e directory
	f name
	a (Ljava/lang/String;)Z lambda$null$0
	a (Ljava/util/Map;)Lnet/minecraft/server/Tags; load
	a (Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/server/MinecraftKey;Laej$a;)V lambda$load$4
	a (Lnet/minecraft/server/IResourceManager;)Ljava/util/Map; lambda$prepare$2
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; prepare
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/Object; lambda$load$3
	b (Lnet/minecraft/server/MinecraftKey;)Laej$a; lambda$null$1
aax$a net/minecraft/server/network/ServerConnectionListener$LatencySimulator
	a TIMER
	b delay
	c jitter
	d queuedMessages
	a (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V delayDownstream
	a (Lio/netty/util/Timeout;)V onTimeout
cxh net/minecraft/world/level/pathfinder/package-info
cxl net/minecraft/world/level/portal/package-info
mk$1 net/minecraft/nbt/LongArrayTag$1
	a ()Ljava/lang/String; getName
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagLongArray; load
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; load
cxn net/minecraft/world/level/redstone/package-info
cxm net/minecraft/world/level/redstone/Redstone
net/minecraft/server/BehaviorController net/minecraft/world/entity/ai/Brain
	a LOGGER
	b codec
	e availableBehaviorsByPriority
	g activityRequirements
	h activityMemoriesToEraseWhenStopped
	i coreActivities
	j activeActivities
	k defaultActivity
	l lastScheduleUpdate
	a ()Ljava/util/Map; getMemories
	a (ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList; createPriorityPairs
	a (JJ)V updateActivityFromSchedule
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; serializeStart
	a (Ljava/lang/Integer;)Ljava/util/Map; lambda$addActivityAndRemoveMemoriesWhenStopped$2
	a (Ljava/lang/Object;)Z isEmptyCollection
	a (Ljava/lang/Object;Ljava/lang/Object;)Z lambda$isMemoryValue$1
	a (Ljava/util/Collection;Ljava/util/Collection;)Larc$b; provider
	a (Ljava/util/List;)V setActiveActivityToFirstValid
	a (Ljava/util/Map$Entry;)Larc$a; lambda$memories$0
	a (Ljava/util/Set;)V setCoreActivities
	a (Lnet/minecraft/server/Activity;)V setActiveActivityIfPossible
	a (Lnet/minecraft/server/Activity;ILcom/google/common/collect/ImmutableList;)V addActivity
	a (Lnet/minecraft/server/Activity;ILcom/google/common/collect/ImmutableList;Lnet/minecraft/server/MemoryModuleType;)V addActivityAndRemoveMemoryWhenStopped
	a (Lnet/minecraft/server/Activity;Lcom/google/common/collect/ImmutableList;)V addActivity
	a (Lnet/minecraft/server/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V addActivityWithConditions
	a (Lnet/minecraft/server/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V addActivityAndRemoveMemoriesWhenStopped
	a (Lnet/minecraft/server/BehaviorController;)Ljava/util/stream/Stream; access$200
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/MemoryModuleType;Ljava/util/Optional;)V access$500
	a (Lnet/minecraft/server/MemoryModuleType;Ljava/lang/Object;J)V setMemoryWithExpiry
	a (Lnet/minecraft/server/MemoryModuleType;Lnet/minecraft/server/MemoryStatus;)Z checkMemory
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V tick
	b (Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec; codec
	b (Lnet/minecraft/server/Activity;)V setDefaultActivity
	b (Lnet/minecraft/server/MemoryModuleType;Ljava/lang/Object;)Z isMemoryValue
	b (Lnet/minecraft/server/MemoryModuleType;Ljava/util/Optional;)V setMemoryInternal
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V stopAll
	c ()Ljava/util/Set; getActiveActivities
	c (Lnet/minecraft/server/Activity;)Z isActive
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V tickSensors
	d ()Ljava/util/List; getRunningBehaviors
	d (Lnet/minecraft/server/Activity;)V setActiveActivity
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V startEachNonRunningBehavior
	e ()V useDefaultActivity
	e (Lnet/minecraft/server/Activity;)V eraseMemoriesForOtherActivitesThan
	e (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V tickEachRunningBehavior
	f ()Ljava/util/Optional; getActiveNonCoreActivity
	f (Lnet/minecraft/server/Activity;)Z activityRequirementsAreMet
	g ()V removeAllBehaviors
	g (Lnet/minecraft/server/Activity;)Ljava/util/Set; lambda$addActivityAndRemoveMemoriesWhenStopped$3
	h ()Lnet/minecraft/server/BehaviorController; copyWithoutBehaviors
	hasMemory (Lnet/minecraft/server/MemoryModuleType;)Z hasMemoryValue
	i ()Lorg/apache/logging/log4j/Logger; access$000
	j ()Ljava/util/stream/Stream; memories
	k ()V forgetOutdatedMemories
	removeMemory (Lnet/minecraft/server/MemoryModuleType;)V eraseMemory
net/minecraft/server/CommandDispatcher$ServerType net/minecraft/commands/Commands$CommandSelection
	d includeIntegrated
	e includeDedicated
	f $VALUES
	a (Lnet/minecraft/server/CommandDispatcher$ServerType;)Z access$000
	b (Lnet/minecraft/server/CommandDispatcher$ServerType;)Z access$100
net/minecraft/server/BlockRedstoneTorchWall net/minecraft/world/level/block/RedstoneWallTorchBlock
	b FACING
	c LIT
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z hasNeighborSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	i ()Ljava/lang/String; getDescriptionId
cxv net/minecraft/world/level/saveddata/maps/package-info
net/minecraft/server/ItemWaterLily net/minecraft/world/item/WaterLilyBlockItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
cxw net/minecraft/world/level/saveddata/package-info
dzw$a net/minecraft/client/renderer/LevelRenderer$RenderChunkInfo
	a this$0
	b chunk
	c sourceDirection
	d directions
	e step
	a (BLnet/minecraft/server/EnumDirection;)V setDirections
	a (Ldzw$a;)Lecm$c; access$000
	a (Lnet/minecraft/server/EnumDirection;)Z hasDirection
	b (Ldzw$a;)Lnet/minecraft/server/EnumDirection; access$200
	c (Ldzw$a;)I access$300
	d (Ldzw$a;)B access$400
net/minecraft/server/WorldGenFeatureCoral net/minecraft/world/level/levelgen/feature/CoralFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z placeFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
	b (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z placeCoralBlock
net/minecraft/server/CommandWorldBorder net/minecraft/server/commands/WorldBorderCommand
	a ERROR_SAME_CENTER
	b ERROR_SAME_SIZE
	c ERROR_TOO_SMALL
	d ERROR_TOO_BIG
	e ERROR_SAME_WARNING_TIME
	f ERROR_SAME_WARNING_DISTANCE
	g ERROR_SAME_DAMAGE_BUFFER
	h ERROR_SAME_DAMAGE_AMOUNT
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	a (Lnet/minecraft/server/CommandListenerWrapper;)I getSize
	a (Lnet/minecraft/server/CommandListenerWrapper;DJ)I setSize
	a (Lnet/minecraft/server/CommandListenerWrapper;F)I setDamageBuffer
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I setWarningTime
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Vec2F;)I setCenter
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	b (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	b (Lnet/minecraft/server/CommandListenerWrapper;F)I setDamageAmount
	b (Lnet/minecraft/server/CommandListenerWrapper;I)I setWarningDistance
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
dzw$b net/minecraft/client/renderer/LevelRenderer$TransparencyShaderException
net/minecraft/server/ItemShield net/minecraft/world/item/ShieldItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbni;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	d (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumColor; getColor
	d_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	e_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
	f (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; getDescriptionId
cyc net/minecraft/world/level/storage/LevelStorageException
net/minecraft/server/CriterionTriggerBredAnimals net/minecraft/advancements/critereon/BredAnimalsTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lao$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityAnimal;Lnet/minecraft/server/EntityAnimal;Lnet/minecraft/server/EntityAgeable;)V trigger
	a (Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/LootTableInfo;Lao$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
afn$1 net/minecraft/util/SortedArraySet$1
net/minecraft/server/BlockPropertyStructureMode net/minecraft/world/level/block/state/properties/StructureMode
	e name
	f displayName
	g $VALUES
	a ()Ljava/lang/String; getSerializedName
	b ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
crm$a net/minecraft/world/level/levelgen/structure/RuinedPortalPiece$Properties
	a CODEC
	b cold
	c mossiness
	d airPocket
	e overgrown
	f vines
	g replaceWithBlackstone
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$6
	a (Lcrm$a;)Ljava/lang/Boolean; lambda$null$5
	b (Lcrm$a;)Ljava/lang/Boolean; lambda$null$4
	c (Lcrm$a;)Ljava/lang/Boolean; lambda$null$3
	d (Lcrm$a;)Ljava/lang/Boolean; lambda$null$2
	e (Lcrm$a;)Ljava/lang/Float; lambda$null$1
	f (Lcrm$a;)Ljava/lang/Boolean; lambda$null$0
net/minecraft/server/DataConverterSpawnEgg net/minecraft/util/datafix/fixes/ItemSpawnEggFix
	ID_MAPPING ID_TO_ENTITY
	a ()Ljava/lang/IllegalStateException; lambda$null$5
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$6
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$null$3
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; lambda$null$4
	a ([Ljava/lang/String;)V lambda$static$0
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$null$2
	c (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$null$1
net/minecraft/server/BlockPortal net/minecraft/world/level/block/NetherPortalBlock
	b X_AXIS_AABB
	c Z_AXIS_AABB
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
net/minecraft/server/BlockAttachable net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z canAttach
	h (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumDirection; getConnectedDirection
hd$1 net/minecraft/core/particles/DustParticleOptions$1
	a (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParamRedstone; fromCommand
	a (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParamRedstone; fromNetwork
	b (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParam; fromCommand
	b (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParam; fromNetwork
net/minecraft/server/TileEntityJigsaw net/minecraft/world/level/block/entity/JigsawBlockEntity
	a name
	b target
	c pool
	g joint
	h finalState
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Ljava/lang/String;)V setFinalState
	a (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/TileEntityJigsaw$JointType; lambda$load$0
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/MinecraftKey;)V setName
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/TileEntityJigsaw$JointType;)V setJoint
	a (Lnet/minecraft/server/WorldServer;IZ)V generate
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/MinecraftKey;)V setTarget
	c (Lnet/minecraft/server/MinecraftKey;)V setPool
	d ()Lnet/minecraft/server/MinecraftKey; getName
	f ()Lnet/minecraft/server/MinecraftKey; getTarget
	g ()Lnet/minecraft/server/MinecraftKey; getPool
	h ()Ljava/lang/String; getFinalState
	j ()Lnet/minecraft/server/TileEntityJigsaw$JointType; getJoint
net/minecraft/server/PathfinderGoalRemoveBlock net/minecraft/world/entity/ai/goal/RemoveBlockGoal
	entity removerMob
	g blockToRemove
	i ticksSinceReachedGoal
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/BlockPosition; getPosWithBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playDestroyProgressSound
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V playBreakSound
	c ()V start
	d ()V stop
	e ()V tick
	n ()Z tryFindBlock
net/minecraft/server/Criterion net/minecraft/advancements/Criterion
	a trigger
	a ()Lnet/minecraft/server/CriterionInstance; getTrigger
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/Criterion; criterionFromJson
	a (Ljava/util/Map;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b ()Lcom/google/gson/JsonElement; serializeToJson
	b (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootDeserializationContext;)Ljava/util/Map; criteriaFromJson
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/Criterion; criterionFromNetwork
	c (Lnet/minecraft/server/PacketDataSerializer;)Ljava/util/Map; criteriaFromNetwork
dyc$1 net/minecraft/client/particle/ParticleRenderType$1
	a (Ldfe;Lejv;)V begin
	a (Ldfl;)V end
dyc$3 net/minecraft/client/particle/ParticleRenderType$3
	a (Ldfe;Lejv;)V begin
	a (Ldfl;)V end
net/minecraft/server/EnchantmentFire net/minecraft/world/item/enchantment/FireAspectEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
dyc$2 net/minecraft/client/particle/ParticleRenderType$2
	a (Ldfe;Lejv;)V begin
	a (Ldfl;)V end
dyc$5 net/minecraft/client/particle/ParticleRenderType$5
	a (Ldfe;Lejv;)V begin
	a (Ldfl;)V end
dyc$4 net/minecraft/client/particle/ParticleRenderType$4
	a (Ldfe;Lejv;)V begin
	a (Ldfl;)V end
net/minecraft/server/ItemNamedBlock net/minecraft/world/item/ItemNameBlockItem
	a ()Ljava/lang/String; getDescriptionId
net/minecraft/server/BlockRedstoneOre net/minecraft/world/level/block/RedStoneOreBlock
	a LIT
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V attack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V stepOn
	a_ (Lnet/minecraft/server/IBlockData;)Z isRandomlyTicking
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	playEffect (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V spawnParticles
net/minecraft/server/PathfinderGoalSwell net/minecraft/world/entity/ai/goal/SwellGoal
	a creeper
	b target
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/ServerPing$ServerData net/minecraft/network/protocol/status/ServerStatus$Version
	a name
	b protocol
	a ()Ljava/lang/String; getName
	getProtocolVersion ()I getProtocol
net/minecraft/server/IReloadListener net/minecraft/server/packs/resources/PreparableReloadListener
	a (Laca$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	c ()Ljava/lang/String; getName
net/minecraft/server/EntityLargeFireball net/minecraft/world/entity/projectile/LargeFireball
	yield explosionPower
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/MovingObjectPositionEntity;)V onHitEntity
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/CommandExceptionProvider net/minecraft/commands/BrigadierExceptions
	A DISPATCHER_PARSE_EXCEPTION
	a DOUBLE_TOO_SMALL
	b DOUBLE_TOO_BIG
	c FLOAT_TOO_SMALL
	d FLOAT_TOO_BIG
	e INTEGER_TOO_SMALL
	f INTEGER_TOO_BIG
	g LONG_TOO_SMALL
	h LONG_TOO_BIG
	i LITERAL_INCORRECT
	j READER_EXPECTED_START_OF_QUOTE
	k READER_EXPECTED_END_OF_QUOTE
	l READER_INVALID_ESCAPE
	m READER_INVALID_BOOL
	n READER_INVALID_INT
	o READER_EXPECTED_INT
	p READER_INVALID_LONG
	q READER_EXPECTED_LONG
	r READER_INVALID_DOUBLE
	s READER_EXPECTED_DOUBLE
	t READER_INVALID_FLOAT
	u READER_EXPECTED_FLOAT
	v READER_EXPECTED_BOOL
	w READER_EXPECTED_SYMBOL
	x DISPATCHER_UNKNOWN_COMMAND
	y DISPATCHER_UNKNOWN_ARGUMENT
	z DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$16
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$7
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$15
	b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$6
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$14
	c (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$5
	d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$13
	d (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	e (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$12
	e (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	f (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$11
	f (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	g (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$10
	g (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	h (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$9
	h (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	i (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$8
net/minecraft/server/WorldGenStage$Decoration net/minecraft/world/level/levelgen/GenerationStep$Decoration
	k $VALUES
net/minecraft/server/BlockCoralFanAbstract net/minecraft/world/level/block/BaseCoralFanBlock
	a AABB
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
net/minecraft/server/DataConverterBedBlock net/minecraft/util/datafix/fixes/BedBlockEntityInjecter
	a ()Ljava/lang/IllegalStateException; lambda$null$3
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$4
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	a (Lcom/mojang/serialization/Dynamic;)Ljava/lang/Integer; lambda$null$2
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$cap$1
dnc$1 net/minecraft/client/gui/font/providers/BitmapProvider$1
byx$1 net/minecraft/world/level/block/RailBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$Mirror
net/minecraft/server/RegistryBlocks net/minecraft/core/DefaultedRegistry
	bf defaultKey
	bg defaultValue
	a ()Lnet/minecraft/server/MinecraftKey; getDefaultKey
	a (I)Ljava/lang/Object; byId
	a (ILnet/minecraft/server/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; registerMapping
	a (Ljava/lang/Object;)I getId
	a (Ljava/util/Random;)Ljava/lang/Object; getRandom
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/Object; get
	b (Ljava/lang/Object;)Lnet/minecraft/server/MinecraftKey; getKey
	b (Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; getOptional
czt net/minecraft/world/level/storage/loot/entries/package-info
net/minecraft/server/StructureManager net/minecraft/world/level/StructureFeatureManager
	a level
	b worldGenSettings
	a ()Z shouldGenerateFeatures
	a (Ljava/lang/Long;)Lnet/minecraft/server/SectionPosition; lambda$startsForFeature$0
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructurePiece;)Z lambda$null$4
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureStart;)Z lambda$getStructureAt$3
	a (Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/StructureGenerator;)Lnet/minecraft/server/StructureStart; getStructureAt
	a (Lnet/minecraft/server/RegionLimitedWorldAccess;)Lnet/minecraft/server/StructureManager; forWorldGenRegion
	a (Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/StructureGenerator;)Ljava/util/stream/Stream; startsForFeature
	a (Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/StructureGenerator;JLnet/minecraft/server/IStructureAccess;)V addReferenceForFeature
	a (Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/StructureGenerator;Lnet/minecraft/server/IStructureAccess;)Lnet/minecraft/server/StructureStart; getStartForFeature
	a (Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/StructureGenerator;Lnet/minecraft/server/StructureStart;Lnet/minecraft/server/IStructureAccess;)V setStartForFeature
	a (Lnet/minecraft/server/StructureGenerator;Lnet/minecraft/server/SectionPosition;)Lnet/minecraft/server/StructureStart; lambda$startsForFeature$1
	a (Lnet/minecraft/server/StructureStart;)Z lambda$startsForFeature$2
	a (ZLnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureStart;)Z lambda$getStructureAt$5
byg$1 net/minecraft/world/level/block/NetherPortalBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	b $SwitchMap$net$minecraft$world$level$block$Rotation
afn$a net/minecraft/util/SortedArraySet$ArrayIterator
	a this$0
	b index
	c last
elp$a net/minecraft/client/resources/model/SimpleBakedModel$Builder
	a unculledFaces
	b culledFaces
	c overrides
	d hasAmbientOcclusion
	e particleIcon
	f usesBlockLight
	g isGui3d
	h transforms
	a ()Lelp$a; item
	a (Leas;)Lelp$a; addUnculledFace
	a (Leju;)Lelp$a; particle
	a (Lnet/minecraft/server/EnumDirection;Leas;)Lelp$a; addCulledFace
	b ()Lelg; build
net/minecraft/server/WorldGenFeatureRuinedPortal$Type net/minecraft/world/level/levelgen/feature/RuinedPortalFeature$Type
	h CODEC
	i BY_NAME
	j name
	k $VALUES
	a ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenFeatureRuinedPortal$Type; byName
	a (Lnet/minecraft/server/WorldGenFeatureRuinedPortal$Type;)Lnet/minecraft/server/WorldGenFeatureRuinedPortal$Type; lambda$static$0
	b ()Ljava/lang/String; getName
ly$1 net/minecraft/locale/Language$1
	a val$storage
	a (Ljava/lang/String;)Ljava/lang/String; getOrDefault
	a (Lnet/minecraft/server/FormattedStringEmpty;Lnet/minecraft/server/ChatModifier;Ljava/lang/String;)Ljava/util/Optional; lambda$null$0
	a (Lnet/minecraft/server/IChatFormatted;)Lnet/minecraft/server/FormattedString; getVisualOrder
	a (Lnet/minecraft/server/IChatFormatted;Lnet/minecraft/server/FormattedStringEmpty;)Z lambda$getVisualOrder$1
	b ()Z isDefaultRightToLeft
	b (Ljava/lang/String;)Z has
bk$a net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance
	a rod
	b entity
	c item
	a (Lnet/minecraft/server/CriterionConditionItem;Lnet/minecraft/server/CriterionConditionEntity;Lnet/minecraft/server/CriterionConditionItem;)Lbk$a; fishedItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;Ljava/util/Collection;)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
net/minecraft/server/PacketHandshakingInListener net/minecraft/network/protocol/handshake/ServerHandshakePacketListener
	a (Lnet/minecraft/server/PacketHandshakingInSetProtocol;)V handleIntention
net/minecraft/server/BlockNetherWart net/minecraft/world/level/block/NetherWartBlock
	b SHAPE_BY_AGE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a_ (Lnet/minecraft/server/IBlockData;)Z isRandomlyTicking
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
net/minecraft/server/NBTBase net/minecraft/nbt/Tag
	d SYNTAX_HIGHLIGHTING_KEY
	e SYNTAX_HIGHLIGHTING_STRING
	f SYNTAX_HIGHLIGHTING_NUMBER
	g SYNTAX_HIGHLIGHTING_NUMBER_TYPE
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	asString ()Ljava/lang/String; getAsString
	b ()Lnet/minecraft/server/NBTTagType; getType
	clone ()Lnet/minecraft/server/NBTBase; copy
	e_ ()V stripEmptyChildren
	getTypeId ()B getId
	l ()Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
net/minecraft/server/EntityWaterAnimal net/minecraft/world/entity/animal/WaterAnimal
	D ()I getAmbientSoundInterval
	a (I)V handleAirSupply
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	af ()V baseTick
	bU ()Z isPushedByFluid
	cL ()Z canBreatheUnderwater
	d (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	dB ()Lnet/minecraft/server/EnumMonsterType; getMobType
net/minecraft/server/BehaviorRaidReset net/minecraft/world/entity/ai/behavior/ResetRaidStatus
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/DataConverterSaddle net/minecraft/util/datafix/fixes/EntityHorseSaddleFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/CommandEffect net/minecraft/server/commands/EffectCommands
	a ERROR_GIVE_FAILED
	b ERROR_CLEAR_EVERYTHING_FAILED
	c ERROR_CLEAR_SPECIFIC_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I clearEffects
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/MobEffectList;)I clearEffect
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/MobEffectList;Ljava/lang/Integer;IZ)I giveEffect
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/Musics net/minecraft/sounds/Musics
	a MENU
	b CREATIVE
	c CREDITS
	d END_BOSS
	e END
	f UNDER_WATER
	g GAME
	a (Lnet/minecraft/server/SoundEffect;)Lnet/minecraft/server/Music; createGameMusic
net/minecraft/server/BehaviorRaid net/minecraft/world/entity/ai/behavior/SetRaidStatus
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
dct$b net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer
net/minecraft/server/BehaviorStrollRandomUnconstrained net/minecraft/world/entity/ai/behavior/RandomStroll
	b speedModifier
	c maxHorizontalDistance
	d maxVerticalDistance
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/MemoryTarget; lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
dct$a net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer
dcc$1 net/minecraft/world/level/timers/TimerQueue$1
net/minecraft/server/DispenseBehaviorProjectile net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior
	a ()F getUncertainty
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
net/minecraft/server/IBlockWaterlogged net/minecraft/world/level/block/SimpleWaterloggedBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/FluidType; takeLiquid
net/minecraft/server/EnchantmentDurability net/minecraft/world/item/enchantment/DigDurabilityEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/ItemStack;)Z canEnchant
	a (Lnet/minecraft/server/ItemStack;ILjava/util/Random;)Z shouldIgnoreDurabilityDrop
	b (I)I getMaxCost
net/minecraft/server/EntityEvokerFangs net/minecraft/world/entity/projectile/EvokerFangs
	b warmupDelayTicks
	c sentSpikeEvent
	d lifeTicks
	e clientSideAttackStarted
	f owner
	g ownerUUID
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (B)V handleEntityEvent
	a (F)F getAnimationProgress
	a (Lnet/minecraft/server/EntityLiving;)V setOwner
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityLiving;)V dealDamageTo
	e ()V defineSynchedData
	j ()V tick
ems$a net/minecraft/client/searchtree/ReloadableSearchTree$MergingUniqueIterator
	a firstIterator
	b secondIterator
	c orderT
net/minecraft/server/PackSource net/minecraft/server/packs/repository/PackSource
	a DEFAULT
	b BUILT_IN
	c WORLD
	d SERVER
	a ()Lnet/minecraft/server/PackSource; passThrough
	a (Ljava/lang/String;)Lnet/minecraft/server/PackSource; decorating
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; lambda$passThrough$0
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; lambda$decorating$1
net/minecraft/server/PacketPlayOutGameStateChange net/minecraft/network/protocol/game/ClientboundGameEventPacket
	a NO_RESPAWN_BLOCK_AVAILABLE
	b START_RAINING
	c STOP_RAINING
	d CHANGE_GAME_MODE
	e WIN_GAME
	f DEMO_EVENT
	g ARROW_HIT_PLAYER
	h RAIN_LEVEL_CHANGE
	i THUNDER_LEVEL_CHANGE
	j PUFFER_FISH_STING
	k GUARDIAN_ELDER_EFFECT
	l IMMEDIATE_RESPAWN
	m event
	n param
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lpq$a; getEvent
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()F getParam
cbf$1 net/minecraft/world/level/block/VineBlock$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
net/minecraft/server/DataConverterPotionId net/minecraft/util/datafix/fixes/ItemPotionFix
	a POTIONS
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a ([Ljava/lang/String;)V lambda$static$0
anm$a net/minecraft/util/profiling/ActiveProfiler$PathEntry
	a duration
	b count
	c counters
	a ()J getDuration
	a (Lanm$a;)J access$000
	a (Lanm$a;J)J access$002
	b ()J getCount
	b (Lanm$a;)J access$100
	b (Lanm$a;J)J access$102
	c ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; getCounters
	c (Lanm$a;)Lit/unimi/dsi/fastutil/objects/Object2LongOpenHashMap; access$200
dpz$c net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$SlotWrapper
	a target
	a ()I getMaxStackSize
	a (I)Lnet/minecraft/server/ItemStack; remove
	a (Ldpz$c;)Lnet/minecraft/server/Slot; access$100
	a (Lnet/minecraft/server/EntityHuman;)Z mayPickup
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/IInventory;I)Z isAt
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/Slot;)V swap
	b ()Z isActive
	b (Lnet/minecraft/server/ItemStack;)I getMaxStackSize
	c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
	d ()V setChanged
	d (Lnet/minecraft/server/ItemStack;)V set
	e ()Lnet/minecraft/server/ItemStack; getItem
	f ()Z hasItem
net/minecraft/server/BlockPropertyDoorHinge net/minecraft/world/level/block/state/properties/DoorHingeSide
	c $VALUES
	a ()Ljava/lang/String; getSerializedName
dpz$b net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$ItemPickerMenu
	c items
	a (F)V scrollTo
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	b (Lnet/minecraft/server/Slot;)Z canDragTo
	e ()Z canScroll
net/minecraft/server/DataConverterWolf net/minecraft/util/datafix/fixes/EntityWolfColorFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$0
dpz$a net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$CustomCreativeSlot
	a (Lnet/minecraft/server/EntityHuman;)Z mayPickup
cbw$1 net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity$1
	a this$0
	a ()I getCount
	a (I)I get
	a (II)V set
net/minecraft/server/TileEntityStructure net/minecraft/world/level/block/entity/StructureBlockEntity
	metadata metaData
	relativePosition structurePos
	size structureSize
	usageMode mode
	A ()F getIntegrity
	B ()J getSeed
	C ()Z detectSize
	D ()Z saveStructure
	E ()V unloadStructure
	F ()Z isStructureLoadable
	G ()Z isPowered
	H ()Z getShowAir
	I ()Z getShowBoundingBox
	J ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	K ()V updateBlockState
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (F)V setIntegrity
	a (J)V setSeed
	a (Ljava/util/List;)Ljava/util/List; filterRelatedCornerBlocks
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/List;)Lnet/minecraft/server/StructureBoundingBox; calculateEnclosingBoundingBox
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Ljava/util/List; getNearbyCornerBlocks
	a (Lnet/minecraft/server/EntityHuman;)Z usedBy
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/MinecraftKey;)V setStructureName
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/TileEntityStructure;)Z lambda$filterRelatedCornerBlocks$0
	a (Lnet/minecraft/server/WorldServer;)Z loadStructure
	a (Lnet/minecraft/server/WorldServer;Z)Z loadStructure
	a (Lnet/minecraft/server/WorldServer;ZLnet/minecraft/server/DefinedStructure;)Z loadStructure
	a (Z)V setIgnoreEntities
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (J)Ljava/util/Random; createRandom
	b (Ljava/lang/String;)V setMetaData
	b (Lnet/minecraft/server/BlockPosition;)V setStructurePos
	b (Lnet/minecraft/server/EnumBlockMirror;)V setMirror
	b (Lnet/minecraft/server/EnumBlockRotation;)V setRotation
	b (Z)Z saveStructure
	c (Lnet/minecraft/server/BlockPosition;)V setStructureSize
	c (Z)V setPowered
	d (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/StructureBoundingBox; getStructureBoundingBox
	d (Z)V setShowAir
	e (Z)V setShowBoundingBox
	f ()Ljava/lang/String; getStructurePath
	g ()Z hasStructureName
	getUsageMode ()Lnet/minecraft/server/BlockPropertyStructureMode; getMode
	h ()Lnet/minecraft/server/BlockPosition; getStructurePos
	i ()D getViewDistance
	j ()Lnet/minecraft/server/BlockPosition; getStructureSize
	k ()Lnet/minecraft/server/EnumBlockMirror; getMirror
	l ()Lnet/minecraft/server/EnumBlockRotation; getRotation
	m ()Ljava/lang/String; getMetaData
	setAuthor (Lnet/minecraft/server/EntityLiving;)V createdBy
	setUsageMode (Lnet/minecraft/server/BlockPropertyStructureMode;)V setMode
	y ()V nextMode
	z ()Z isIgnoreEntities
asc$1 net/minecraft/world/entity/ai/behavior/GateBehavior$1
net/minecraft/server/WorldGenFeatureBlueIce net/minecraft/world/level/levelgen/feature/BlueIceFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/RemoteControlListener net/minecraft/server/rcon/thread/RconThread
	d LOGGER
	e socket
	f rconPassword
	g clients
	h serverInterface
	a (Ljava/net/ServerSocket;)V closeSocket
	a (Lnet/minecraft/server/IMinecraftServer;)Lnet/minecraft/server/RemoteControlListener; create
	a (Lnet/minecraft/server/RemoteControlSession;)Z lambda$clearClients$0
	b ()V stop
	d ()V clearClients
net/minecraft/server/IWorldWriter net/minecraft/world/level/LevelWriter
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;II)Z setBlock
	a (Lnet/minecraft/server/BlockPosition;Z)Z removeBlock
	a (Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/Entity;)Z destroyBlock
	a (Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/Entity;I)Z destroyBlock
	addEntity (Lnet/minecraft/server/Entity;)Z addFreshEntity
	b (Lnet/minecraft/server/BlockPosition;Z)Z destroyBlock
	setTypeAndData (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)Z setBlock
cni$b net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment
	a foliagePos
	b radiusOffset
	c doubleTrunk
	a ()Lnet/minecraft/server/BlockPosition; foliagePos
	b ()I radiusOffset
	c ()Z doubleTrunk
cni$a net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$Factory
	a (IIII)Lnet/minecraft/server/WorldGenFoilagePlacer; create
net/minecraft/server/EnumRenderType net/minecraft/world/level/block/RenderShape
	d $VALUES
net/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility net/minecraft/world/scores/Team$Visibility
	e name
	f id
	g BY_NAME
	h $VALUES
	a ()[Ljava/lang/String; getAllNames
	a (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility; byName
	a (Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility;)Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility; lambda$static$1
	b ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	b (Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility;)Ljava/lang/String; lambda$static$0
net/minecraft/server/CombatMath net/minecraft/world/damagesource/CombatRules
	a (FF)F getDamageAfterMagicAbsorb
	a (FFF)F getDamageAfterAbsorb
net/minecraft/server/ContainerAnvil net/minecraft/world/inventory/AnvilMenu
	g LOGGER
	h repairItemCountCost
	levelCost cost
	renameText itemName
	a (Ljava/lang/String;)V setItemName
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$onTake$0
	a (Lnet/minecraft/server/IBlockData;)Z isValidBlock
	b (Lnet/minecraft/server/EntityHuman;Z)Z mayPickup
	d (I)I calculateIncreasedRepairCost
	e ()V createResult
	f ()I getCost
net/minecraft/server/HorseStyle net/minecraft/world/entity/animal/horse/Markings
	f BY_ID
	g id
	h $VALUES
	a ()I getId
	a (I)Lnet/minecraft/server/HorseStyle; byId
	b (I)[Lnet/minecraft/server/HorseStyle; lambda$static$0
net/minecraft/server/PacketPlayOutExplosion net/minecraft/network/protocol/game/ClientboundExplodePacket
	a x
	b y
	c z
	d power
	e toBlow
	f knockbackX
	g knockbackY
	h knockbackZ
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()F getKnockbackX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()F getKnockbackY
	d ()F getKnockbackZ
	e ()D getX
	f ()D getY
	g ()D getZ
	h ()F getPower
	i ()Ljava/util/List; getToBlow
net/minecraft/server/DefinedStructureProcessorJigsawReplacement net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
	b ()Lnet/minecraft/server/DefinedStructureProcessorJigsawReplacement; lambda$static$0
dzw$1 net/minecraft/client/renderer/LevelRenderer$1
djp$a net/minecraft/client/Game$Metrics
	a min
	b max
	c average
	d samples
eap$1 net/minecraft/client/renderer/block/BlockRenderDispatcher$1
	a $SwitchMap$net$minecraft$world$level$block$RenderShape
ebb$a net/minecraft/client/renderer/block/model/ItemOverride$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lebb; deserialize
	a (Lcom/google/gson/JsonObject;)Ljava/util/Map; getPredicates
aax$1 net/minecraft/server/network/ServerConnectionListener$1
	a this$0
aax$2 net/minecraft/server/network/ServerConnectionListener$2
	a this$0
net/minecraft/server/DataConverterSchemaV1510 net/minecraft/util/datafix/schemas/V1510
net/minecraft/server/BlockGravel net/minecraft/world/level/block/GravelBlock
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getDustColor
net/minecraft/server/BlockFenceGate net/minecraft/world/level/block/FenceGateBlock
	d Z_SHAPE
	e X_SHAPE
	f Z_SHAPE_LOW
	g X_SHAPE_LOW
	h Z_COLLISION_SHAPE
	i X_COLLISION_SHAPE
	j Z_OCCLUSION_SHAPE
	k X_OCCLUSION_SHAPE
	o Z_OCCLUSION_SHAPE_LOW
	p X_OCCLUSION_SHAPE_LOW
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z connectsToDirection
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
	h (Lnet/minecraft/server/IBlockData;)Z isWall
net/minecraft/server/PacketPlayOutEntity$PacketPlayOutRelEntityMoveLook net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/DataConverterEntityCatSplit net/minecraft/util/datafix/fixes/EntityCatSplitFix
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
cmw$a net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder
	a trunkProvider
	b leavesProvider
	c foliagePlacer
	d trunkPlacer
	e minimumSize
	f decorators
	g maxWaterDepth
	h ignoreVines
	i heightmap
	a ()Lcmw$a; ignoreVines
	a (I)Lcmw$a; maxWaterDepth
	a (Ljava/util/List;)Lcmw$a; decorators
	a (Lnet/minecraft/server/HeightMap$Type;)Lcmw$a; heightmap
	b ()Lnet/minecraft/server/WorldGenFeatureTreeConfiguration; build
net/minecraft/server/EnchantmentInfiniteArrows net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/CommandGamerule net/minecraft/server/commands/GameRuleCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/GameRules$GameRuleKey;)I access$000
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/GameRules$GameRuleKey;)I access$100
	b (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/GameRules$GameRuleKey;)I setRule
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/GameRules$GameRuleKey;)I queryRule
net/minecraft/server/IInventoryHolder net/minecraft/world/WorldlyContainerHolder
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IWorldInventory; getContainer
net/minecraft/server/GameRules$GameRuleValue net/minecraft/world/level/GameRules$Value
	a type
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	a (Lnet/minecraft/server/GameRules$GameRuleValue;Lnet/minecraft/server/MinecraftServer;)V setFrom
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V setFromArgument
	f ()Lnet/minecraft/server/GameRules$GameRuleValue; copy
	g ()Lnet/minecraft/server/GameRules$GameRuleValue; getSelf
	getIntValue ()I getCommandResult
	getValue ()Ljava/lang/String; serialize
	onChange (Lnet/minecraft/server/MinecraftServer;)V onChanged
	setValue (Ljava/lang/String;)V deserialize
net/minecraft/server/WorldInfo net/minecraft/world/level/storage/LevelSummary
	a settings
	b levelVersion
	c levelId
	d requiresConversion
	e locked
	f icon
	g info
	a ()Ljava/lang/String; getLevelId
	a (Lnet/minecraft/server/WorldInfo;)I compareTo
	b ()Ljava/lang/String; getLevelName
	c ()Ljava/io/File; getIcon
	d ()Z isRequiresConversion
	e ()J getLastPlayed
	f ()Lnet/minecraft/server/WorldSettings; getSettings
	g ()Lnet/minecraft/server/EnumGamemode; getGameMode
	h ()Z isHardcore
	i ()Z hasCheats
	j ()Lnet/minecraft/server/IChatMutableComponent; getWorldVersionName
	k ()Lnet/minecraft/server/LevelVersion; levelVersion
	l ()Z markVersionInList
	m ()Z askToOpenWorld
	n ()Z shouldBackup
	o ()Z isLocked
	p ()Lnet/minecraft/server/IChatBaseComponent; getInfo
	q ()Lnet/minecraft/server/IChatBaseComponent; createInfo
net/minecraft/server/Navigation net/minecraft/world/entity/ai/navigation/GroundPathNavigation
	p avoidSun
	D_ ()V trimPath
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
	a (IIIIIILnet/minecraft/server/Vec3D;DD)Z canWalkOn
	a (Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/PathType;)Z hasValidPathType
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;III)Z canMoveDirectly
	a (Z)V setCanOpenDoors
	b ()Lnet/minecraft/server/Vec3D; getTempMobPos
	b (IIIIIILnet/minecraft/server/Vec3D;DD)Z canWalkAbove
	b (Z)V setCanPassDoors
	c (Z)V setAvoidSun
	e ()Z canPassDoors
	f ()Z canOpenDoors
	t ()I getSurfaceY
net/minecraft/server/GenLayers$Type net/minecraft/world/level/newbiome/layer/Layers$Category
	q $VALUES
net/minecraft/server/BlockHoney net/minecraft/world/level/block/HoneyBlock
	a SHAPE
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)Z isSlidingDown
	a (Lnet/minecraft/server/Entity;)V showSlideParticles
	a (Lnet/minecraft/server/Entity;I)V showParticles
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/BlockPosition;)V maybeDoSlideAchievement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;F)V fallOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;)V maybeDoSlideEffects
	b (Lnet/minecraft/server/Entity;)V showJumpParticles
	c (Lnet/minecraft/server/Entity;)Z doesEntityDoHoneyBlockSlideEffects
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	d (Lnet/minecraft/server/Entity;)V doSlideMovement
net/minecraft/server/IAsyncTaskHandler net/minecraft/util/thread/BlockableEventLoop
	b name
	c LOGGER
	d pendingRunnables
	e blockingCount
	a (Ljava/lang/Object;)V tell
	a (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; submit
	awaitTasks (Ljava/util/function/BooleanSupplier;)V managedBlock
	b (Ljava/lang/Runnable;)Ljava/lang/Void; lambda$submitAsync$0
	bh ()I getPendingTasksCount
	bi ()Ljava/lang/String; name
	bj ()V dropAllTasks
	bl ()V waitForTasks
	canExecute (Ljava/lang/Runnable;)Z shouldRun
	executeAll ()V runAllTasks
	executeFuture (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; submitAsync
	executeNext ()Z pollTask
	executeSync (Ljava/lang/Runnable;)V executeBlocking
	executeTask (Ljava/lang/Runnable;)V doRunTask
	f (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; submit
	getThread ()Ljava/lang/Thread; getRunningThread
	h (Ljava/lang/Runnable;)V tell
	isMainThread ()Z isSameThread
	isNotMainThread ()Z scheduleExecutables
	postToMainThread (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
net/minecraft/server/HeightMap net/minecraft/world/level/levelgen/Heightmap
	a NOT_AIR
	b MATERIAL_MOTION_BLOCKING
	c data
	d isOpaque
	e chunk
	a ()[J getRawData
	a (I)I getFirstAvailable
	a (II)I getFirstAvailable
	a (III)V setHeight
	a (IIILnet/minecraft/server/IBlockData;)Z update
	a (Lnet/minecraft/server/IBlockData;)Z lambda$static$1
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/Set;)V primeHeightmaps
	a ([J)V setRawData
	b ()Ljava/util/function/Predicate; access$000
	b (II)I getHighestTaken
	b (Lnet/minecraft/server/IBlockData;)Z lambda$static$0
	c ()Ljava/util/function/Predicate; access$100
	c (II)I getIndex
net/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType
	c id
	d BY_ID
	e $VALUES
	a ()Ljava/lang/String; getId
	a (Ljava/lang/String;)Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay; byId
brb$1 net/minecraft/world/level/ChunkTickList$1
net/minecraft/server/WorldGenMegaTreeProvider net/minecraft/world/level/block/grower/AbstractMegaTreeGrower
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredMegaFeature
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;II)Z isTwoByTwoSapling
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z growTree
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;II)Z placeMega
net/minecraft/server/DataConverterAdvancement net/minecraft/util/datafix/fixes/AdvancementsFix
	a RENAMES
	a (Ljava/lang/String;)Ljava/lang/String; lambda$new$0
oz$1 net/minecraft/network/protocol/game/ClientboundBossEventPacket$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundBossEventPacket$Operation
net/minecraft/server/VoxelShapeCollisionEntity net/minecraft/world/phys/shapes/EntityCollisionContext
	a EMPTY
	b descending
	c entityBottom
	d heldItem
	e canStandOnFluid
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/FluidTypeFlowing;)Z canStandOnFluid
	a (Lnet/minecraft/server/FluidType;)Z lambda$new$1
	a (Lnet/minecraft/server/Item;)Z isHoldingItem
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/BlockPosition;Z)Z isAbove
	b ()Z isDescending
	b (Lnet/minecraft/server/FluidType;)Z lambda$static$0
net/minecraft/server/EnumAxisCycle net/minecraft/core/AxisCycle
	d AXIS_VALUES
	e VALUES
	f $VALUES
	a ()Lnet/minecraft/server/EnumAxisCycle; inverse
	a (DDDLnet/minecraft/server/EnumDirection$EnumAxis;)D cycle
	a (IIILnet/minecraft/server/EnumDirection$EnumAxis;)I cycle
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection$EnumAxis; cycle
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumAxisCycle; between
net/minecraft/server/CriterionTriggers net/minecraft/advancements/CriteriaTriggers
	A EFFECTS_CHANGED
	B USED_TOTEM
	C NETHER_TRAVEL
	D FISHING_ROD_HOOKED
	E CHANNELED_LIGHTNING
	F SHOT_CROSSBOW
	G KILLED_BY_CROSSBOW
	H RAID_WIN
	I BAD_OMEN
	J HONEY_BLOCK_SLIDE
	K BEE_NEST_DESTROYED
	L TARGET_BLOCK_HIT
	M ITEM_USED_ON_BLOCK
	N GENERATE_LOOT
	O ITEM_PICKED_UP_BY_ENTITY
	P PLAYER_INTERACTED_WITH_ENTITY
	Q CRITERIA
	a IMPOSSIBLE
	b PLAYER_KILLED_ENTITY
	c ENTITY_KILLED_PLAYER
	d ENTER_BLOCK
	e INVENTORY_CHANGED
	f RECIPE_UNLOCKED
	g PLAYER_HURT_ENTITY
	h ENTITY_HURT_PLAYER
	i ENCHANTED_ITEM
	j FILLED_BUCKET
	k BREWED_POTION
	l CONSTRUCT_BEACON
	m USED_ENDER_EYE
	n SUMMONED_ENTITY
	o BRED_ANIMALS
	p LOCATION
	q SLEPT_IN_BED
	r CURED_ZOMBIE_VILLAGER
	s TRADE
	t ITEM_DURABILITY_CHANGED
	u LEVITATION
	v CHANGED_DIMENSION
	w TICK
	x TAME_ANIMAL
	y PLACED_BLOCK
	z CONSUME_ITEM
	a ()Ljava/lang/Iterable; all
	a (Lnet/minecraft/server/CriterionTrigger;)Lnet/minecraft/server/CriterionTrigger; register
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/CriterionTrigger; getCriterion
dxh$q net/minecraft/client/particle/DripParticle$WaterFallProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dav net/minecraft/world/level/storage/loot/package-info
dxh$p net/minecraft/client/particle/DripParticle$ObsidianTearLandProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dau net/minecraft/world/level/storage/loot/functions/package-info
cue$a net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap
	a ()Lcue$a; copy
	b ()Lnet/minecraft/server/LightEngineStorageArray; copy
dxh$r net/minecraft/client/particle/DripParticle$WaterHangProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dlv$a net/minecraft/client/gui/components/PlayerTabOverlay$PlayerInfoComparator
	a (Ldwp;Ldwp;)I compare
dxh$i net/minecraft/client/particle/DripParticle$HoneyLandProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dxh$h net/minecraft/client/particle/DripParticle$HoneyHangProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dxh$k net/minecraft/client/particle/DripParticle$LavaHangProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dba net/minecraft/world/level/storage/loot/parameters/package-info
net/minecraft/server/RegistryLookupCodec net/minecraft/resources/RegistryLookupCodec
	a registryKey
	a (Lnet/minecraft/server/IRegistry;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder; encode
	a (Lnet/minecraft/server/ResourceKey;)Lnet/minecraft/server/RegistryLookupCodec; create
net/minecraft/server/EntityDolphin net/minecraft/world/entity/animal/Dolphin
	b ALLOWED_ITEMS
	bo MOISTNESS_LEVEL
	bp SWIM_WITH_PLAYER_TARGETING
	c TREASURE_POS
	d GOT_FISH
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	O ()I getMaxHeadXRot
	a (B)V handleEntityEvent
	a (I)V handleAirSupply
	a (Lnet/minecraft/server/EntityDolphin;)Ljava/util/Random; access$100
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/ParticleParam;)V addParticlesAroundSelf
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	au ()Lnet/minecraft/server/SoundEffect; getSwimSound
	av ()Lnet/minecraft/server/SoundEffect; getSwimSplashSound
	b (Lnet/minecraft/server/EntityDolphin;)Ljava/util/Random; access$200
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/EntityItem;)V pickUpItem
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkDolphinSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	bG ()I getMaxAirSupply
	c (Lnet/minecraft/server/EntityDolphin;)Ljava/util/Random; access$300
	c (Lnet/minecraft/server/EntityItem;)Z lambda$static$0
	cL ()Z canBreatheUnderwater
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	eM ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eN ()Z closeToNextPos
	eO ()Lnet/minecraft/server/PathfinderTargetCondition; access$400
	eo ()I getMaxHeadYRot
	g (Lnet/minecraft/server/Vec3D;)V travel
	getMoistness ()I getMoistnessLevel
	j ()V tick
	m (I)I increaseAirSupply
	n (Lnet/minecraft/server/Entity;)Z canRide
	o ()V registerGoals
	setMoistness (I)V setMoisntessLevel
dxh$j net/minecraft/client/particle/DripParticle$LavaFallProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dxh$m net/minecraft/client/particle/DripParticle$NectarFallProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dxh$l net/minecraft/client/particle/DripParticle$LavaLandProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/EntityOcelot net/minecraft/world/entity/animal/Ocelot
	bo TEMPT_INGREDIENT
	bp DATA_TRUSTING
	bq ocelotAvoidPlayersGoal
	br temptGoal
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	D ()I getAmbientSoundInterval
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	N ()V customServerAiStep
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityOcelot;)Z access$000
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityOcelot; getBreedOffspring
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkOcelotSpawnRules
	ce ()Lnet/minecraft/server/Vec3D; getLeashOffset
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eL ()V reassessTrustingGoals
	eN ()F getAttackDamage
	h (D)Z removeWhenFarAway
	k (Lnet/minecraft/server/ItemStack;)Z isFood
	o ()V registerGoals
	u (Z)V spawnTrustingParticles
dxh$o net/minecraft/client/particle/DripParticle$ObsidianTearHangProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dxh$n net/minecraft/client/particle/DripParticle$ObsidianTearFallProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/WorldGenSurface net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilder
	A SWAMP
	B BADLANDS
	C WOODED_BADLANDS
	D ERODED_BADLANDS
	E FROZEN_OCEAN
	F NETHER
	G NETHER_FOREST
	H SOUL_SAND_VALLEY
	I BASALT_DELTAS
	J NOPE
	K COARSE_DIRT
	L SAND
	M RED_SAND
	N WHITE_TERRACOTTA
	O MYCELIUM
	P SOUL_SAND
	Q NETHERRACK
	R ENDSTONE
	S CRIMSON_NYLIUM
	T WARPED_NYLIUM
	U NETHER_WART_BLOCK
	V WARPED_WART_BLOCK
	W BLACKSTONE
	X BASALT
	Y MAGMA
	Z configuredCodec
	a DIRT
	b GRASS_BLOCK
	c PODZOL
	d GRAVEL
	e STONE
	f CONFIG_PODZOL
	g CONFIG_GRAVEL
	h CONFIG_GRASS
	i CONFIG_STONE
	j CONFIG_COARSE_DIRT
	k CONFIG_DESERT
	l CONFIG_OCEAN_SAND
	m CONFIG_FULL_SAND
	n CONFIG_BADLANDS
	o CONFIG_MYCELIUM
	p CONFIG_HELL
	q CONFIG_SOUL_SAND_VALLEY
	r CONFIG_THEEND
	s CONFIG_CRIMSON_FOREST
	t CONFIG_WARPED_FOREST
	u CONFIG_BASALT_DELTAS
	v DEFAULT
	w MOUNTAIN
	x SHATTERED_SAVANNA
	y GRAVELLY_MOUNTAIN
	z GIANT_TREE_TAIGA
	a (J)V initNoise
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenSurface;)Lnet/minecraft/server/WorldGenSurface; register
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Lnet/minecraft/server/WorldGenSurfaceConfiguration;)Lnet/minecraft/server/WorldGenSurfaceComposite; configured
	d ()Lcom/mojang/serialization/Codec; configuredCodec
dxh$a net/minecraft/client/particle/DripParticle$CoolingDripHangParticle
	g ()V preMoveUpdate
dxh$c net/minecraft/client/particle/DripParticle$DripLandParticle
dxh$b net/minecraft/client/particle/DripParticle$DripHangParticle
	b fallingParticle
	g ()V preMoveUpdate
	h ()V postMoveUpdate
dxh$e net/minecraft/client/particle/DripParticle$FallingParticle
	h ()V postMoveUpdate
dxh$d net/minecraft/client/particle/DripParticle$FallAndLandParticle
	b landParticle
	h ()V postMoveUpdate
dxh$g net/minecraft/client/particle/DripParticle$HoneyFallProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dxh$f net/minecraft/client/particle/DripParticle$HoneyFallAndLandParticle
	h ()V postMoveUpdate
net/minecraft/server/HeightMap$Use net/minecraft/world/level/levelgen/Heightmap$Usage
	d $VALUES
net/minecraft/server/CommandTeam net/minecraft/server/commands/TeamCommand
	a ERROR_TEAM_ALREADY_EXISTS
	b ERROR_TEAM_NAME_TOO_LONG
	c ERROR_TEAM_ALREADY_EMPTY
	d ERROR_TEAM_ALREADY_NAME
	e ERROR_TEAM_ALREADY_COLOR
	f ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED
	g ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED
	h ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED
	i ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED
	j ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED
	k ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED
	l ERROR_TEAM_COLLISION_UNCHANGED
	A (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$28
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listTeams
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I createTeam
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/server/IChatBaseComponent;)I createTeam
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I leaveTeam
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;)I emptyTeam
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Ljava/util/Collection;)I joinTeam
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/EnumChatFormat;)I setColor
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/IChatBaseComponent;)I setDisplayName
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility;)I setNametagVisibility
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/ScoreboardTeamBase$EnumTeamPush;)I setCollision
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Z)I setFriendlySight
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$27
	b (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$1
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;)I deleteTeam
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/IChatBaseComponent;)I setPrefix
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility;)I setDeathMessageVisibility
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Z)I setFriendlyFire
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$26
	c (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;)I listMembers
	c (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/IChatBaseComponent;)I setSuffix
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$25
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$24
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$23
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$22
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$21
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	r (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	s (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	t (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	u (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	v (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	w (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	x (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	y (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	z (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
net/minecraft/server/EntityRabbit$PathfinderGoalRabbitAvoidTarget net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal
	i rabbit
	a ()Z canUse
net/minecraft/server/AbstractDragonController net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance
	a dragon
	a ()Z isSitting
	a (Lnet/minecraft/server/DamageSource;F)F onHurt
	a (Lnet/minecraft/server/EntityEnderCrystal;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DamageSource;Lnet/minecraft/server/EntityHuman;)V onCrystalDestroyed
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	e ()V end
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	h ()F getTurnSpeed
net/minecraft/server/EnchantmentFlameArrows net/minecraft/world/item/enchantment/ArrowFireEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
dbw net/minecraft/world/level/storage/package-info
dbv net/minecraft/world/level/storage/loot/predicates/package-info
dbx net/minecraft/world/level/storage/threaded/package-info
dae$1 net/minecraft/world/level/storage/loot/functions/LimitCount$1
net/minecraft/server/RecipeFireworksStar net/minecraft/world/item/crafting/FireworkStarRecipe
	a SHAPE_INGREDIENT
	b TRAIL_INGREDIENT
	c FLICKER_INGREDIENT
	d SHAPE_BY_ITEM
	e GUNPOWDER_INGREDIENT
	a (II)Z canCraftInDimensions
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	c ()Lnet/minecraft/server/ItemStack; getResultItem
net/minecraft/server/BehaviorGate net/minecraft/world/entity/ai/behavior/GateBehavior
	b exitErasedMemories
	c orderPolicy
	d runningPolicy
	e behaviors
	a (J)Z timedOut
	a (Lcom/mojang/datafixers/util/Pair;)V lambda$new$0
	a (Lnet/minecraft/server/Behavior;)Z lambda$toString$7
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;JLnet/minecraft/server/Behavior;)V lambda$stop$6
	b (Lnet/minecraft/server/Behavior;)Z lambda$stop$5
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;JLnet/minecraft/server/Behavior;)V lambda$tick$4
	c (Lnet/minecraft/server/Behavior;)Z lambda$tick$3
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;JLnet/minecraft/server/Behavior;)Z lambda$canStillUse$2
	d (Lnet/minecraft/server/Behavior;)Z lambda$canStillUse$1
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
cje$a net/minecraft/world/level/levelgen/feature/EndCityFeature$EndCityStart
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)V generatePieces
bai$l net/minecraft/world/entity/animal/Panda$PandaSneezeGoal
	a panda
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
bai$j net/minecraft/world/entity/animal/Panda$PandaRollGoal
	a panda
	C_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/server/BlockWaterLily net/minecraft/world/level/block/WaterlilyBlock
	a AABB
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
bai$k net/minecraft/world/entity/animal/Panda$PandaSitGoal
	a this$0
	b cooldown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/DefaultUncaughtExceptionHandler net/minecraft/DefaultUncaughtExceptionHandler
	a logger
jb$a net/minecraft/data/models/model/TexturedModel$Provider
	a (Ljava/util/function/Consumer;)Ljb$a; updateTexture
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/Block;)Ljb; lambda$updateTexture$0
	a (Lnet/minecraft/server/Block;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lnet/minecraft/server/MinecraftKey; createWithSuffix
	a (Lnet/minecraft/server/Block;Ljava/util/function/BiConsumer;)Lnet/minecraft/server/MinecraftKey; create
dcd net/minecraft/world/level/timers/package-info
net/minecraft/server/BehaviorPositionValidate net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi
	b memoryType
	c poiPredicate
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z poiDoesntExist
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z bedIsOccupied
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
ip$1 net/minecraft/data/models/blockstates/PropertyDispatch$1
dce net/minecraft/world/package-info
net/minecraft/server/WorldAccess net/minecraft/world/level/ServerLevelAccessor
	addAllEntities (Lnet/minecraft/server/Entity;)V addFreshEntityWithPassengers
	getMinecraftWorld ()Lnet/minecraft/server/WorldServer; getLevel
net/minecraft/server/CriterionConditionValue$IntegerRange net/minecraft/advancements/critereon/MinMaxBounds$Ints
	e ANY
	f minSq
	g maxSq
	a (I)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; exactly
	a (II)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; between
	a (J)Z matchesSqr
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; create
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; fromReader
	a (Ljava/lang/Integer;)Ljava/lang/Long; squareOpt
	b (I)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; atLeast
	b (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$fromReader$0
	c (I)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; atMost
	d (I)Z matches
net/minecraft/server/BlockSand net/minecraft/world/level/block/SandBlock
	a dustColor
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getDustColor
dcl net/minecraft/world/phys/package-info
net/minecraft/server/WorldGenSurfaceSavannaMutated net/minecraft/world/level/levelgen/surfacebuilders/ShatteredSavanaSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/EntityMinecartRideable net/minecraft/world/entity/vehicle/Minecart
	a (IIIZ)V activateMinecart
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interact
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
net/minecraft/server/ParticleParamBlock net/minecraft/core/particles/BlockParticleOption
	a DESERIALIZER
	b type
	c state
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToNetwork
	a (Lnet/minecraft/server/Particle;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/server/Particle;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ParticleParamBlock; lambda$codec$0
	a (Lnet/minecraft/server/ParticleParamBlock;)Lnet/minecraft/server/IBlockData; lambda$codec$1
	b ()Lnet/minecraft/server/Particle; getType
	c ()Lnet/minecraft/server/IBlockData; getState
net/minecraft/server/IRegistryWritable net/minecraft/core/WritableRegistry
	a (ILnet/minecraft/server/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; registerMapping
	a (Ljava/util/OptionalInt;Lnet/minecraft/server/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; registerOrOverride
	a (Lnet/minecraft/server/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; register
	e ()Z isEmpty
net/minecraft/server/EnchantmentProtection$DamageType net/minecraft/world/item/enchantment/ProtectionEnchantment$Type
	f name
	g minCost
	h levelCost
	i $VALUES
	a ()Ljava/lang/String; getName
	b ()I getMinCost
	c ()I getLevelCost
brb$a net/minecraft/world/level/ChunkTickList$ScheduledTick
	a pos
	b delay
	c priority
	d type
	a (Lbrb$a;)Ljava/lang/Object; access$100
net/minecraft/server/BlockMushroom net/minecraft/world/level/block/MushroomBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z growMushroom
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
bai$d net/minecraft/world/entity/animal/Panda$PandaBreedGoal
	d this$0
	e panda
	f unhappyCooldown
	a ()Z canUse
	h ()Z canFindBamboo
bai$e net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal
	a panda
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V alertOther
	b ()Z canContinueToUse
net/minecraft/server/SoundEffect net/minecraft/sounds/SoundEvent
	a CODEC
	b location
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Lnet/minecraft/server/SoundEffect;)Lnet/minecraft/server/MinecraftKey; lambda$static$0
bai$b net/minecraft/world/entity/animal/Panda$PandaAttackGoal
	b panda
	a ()Z canUse
net/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure net/minecraft/world/level/levelgen/feature/structures/StructurePoolElement
	a projection
	e CODEC
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; getType
	a (Ljava/lang/String;)Ljava/util/function/Function; legacy
	a (Ljava/lang/String;Lnet/minecraft/server/ProcessorList;)Ljava/util/function/Function; legacy
	a (Ljava/lang/String;Lnet/minecraft/server/ProcessorList;Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolSingle; lambda$single$8
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolSingle; lambda$single$6
	a (Ljava/util/List;)Ljava/util/function/Function; list
	a (Ljava/util/List;Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolList; lambda$list$12
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;Z)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/ProcessorList;)Lnet/minecraft/server/ProcessorList; lambda$null$7
	a (Lnet/minecraft/server/WorldGenFeatureConfigured;)Ljava/util/function/Function; feature
	a (Lnet/minecraft/server/WorldGenFeatureConfigured;Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolFeature; lambda$feature$10
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure; setProjection
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;Ljava/util/function/Function;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure; lambda$null$11
	b ()Lnet/minecraft/server/ProcessorList; lambda$null$5
	b (Ljava/lang/String;)Ljava/util/function/Function; single
	b (Ljava/lang/String;Lnet/minecraft/server/ProcessorList;)Ljava/util/function/Function; single
	b (Ljava/lang/String;Lnet/minecraft/server/ProcessorList;Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolLegacySingle; lambda$legacy$4
	b (Ljava/lang/String;Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolLegacySingle; lambda$legacy$2
	b (Lnet/minecraft/server/ProcessorList;)Lnet/minecraft/server/ProcessorList; lambda$null$3
	b (Lnet/minecraft/server/WorldGenFeatureConfigured;)Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$null$9
	b (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolEmpty; lambda$empty$0
	c ()Lnet/minecraft/server/ProcessorList; lambda$null$1
	d ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; projectionCodec
	e ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching; getProjection
	f ()I getGroundLevelDelta
	g ()Ljava/util/function/Function; empty
net/minecraft/server/LootContextParameterSets net/minecraft/world/level/storage/loot/parameters/LootContextParamSets
	BARTER PIGLIN_BARTER
	GENERIC ALL_PARAMS
	j ADVANCEMENT_ENTITY
	m REGISTRY
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/server/LootContextParameterSet; register
	a (Lnet/minecraft/server/LootContextParameterSet$Builder;)V lambda$static$11
	a (Lnet/minecraft/server/LootContextParameterSet;)Lnet/minecraft/server/MinecraftKey; getKey
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootContextParameterSet; get
	b (Lnet/minecraft/server/LootContextParameterSet$Builder;)V lambda$static$10
	c (Lnet/minecraft/server/LootContextParameterSet$Builder;)V lambda$static$9
	d (Lnet/minecraft/server/LootContextParameterSet$Builder;)V lambda$static$8
	e (Lnet/minecraft/server/LootContextParameterSet$Builder;)V lambda$static$7
	f (Lnet/minecraft/server/LootContextParameterSet$Builder;)V lambda$static$6
	g (Lnet/minecraft/server/LootContextParameterSet$Builder;)V lambda$static$5
	h (Lnet/minecraft/server/LootContextParameterSet$Builder;)V lambda$static$4
	i (Lnet/minecraft/server/LootContextParameterSet$Builder;)V lambda$static$3
	j (Lnet/minecraft/server/LootContextParameterSet$Builder;)V lambda$static$2
	k (Lnet/minecraft/server/LootContextParameterSet$Builder;)V lambda$static$1
	l (Lnet/minecraft/server/LootContextParameterSet$Builder;)V lambda$static$0
dcy net/minecraft/world/phys/shapes/IntPointRange
	a parts
	b origin
bai$c net/minecraft/world/entity/animal/Panda$PandaAvoidGoal
	i panda
	a ()Z canUse
net/minecraft/server/IHopper net/minecraft/world/level/block/entity/Hopper
	a INSIDE
	b ABOVE
	c SUCK
	A ()D getLevelZ
	aa_ ()Lnet/minecraft/server/VoxelShape; getSuckShape
	getWorld ()Lnet/minecraft/server/World; getLevel
	x ()D getLevelX
	z ()D getLevelY
bai$h net/minecraft/world/entity/animal/Panda$PandaMoveControl
	i panda
	a ()V tick
net/minecraft/server/WorldGenSurfaceNether net/minecraft/world/level/levelgen/surfacebuilders/NetherSurfaceBuilder
	a seed
	b decorationNoise
	c AIR
	d GRAVEL
	e SOUL_SAND
	a (J)V initNoise
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
bai$i net/minecraft/world/entity/animal/Panda$PandaPanicGoal
	g panda
	a ()Z canUse
	b ()Z canContinueToUse
net/minecraft/server/BlockPropertyPistonType net/minecraft/world/level/block/state/properties/PistonType
	c name
	d $VALUES
	a ()Ljava/lang/String; getSerializedName
bai$f net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal
	a panda
	b cooldown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
bai$g net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal
	g panda
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLiving;)V setTarget
	b ()Z canContinueToUse
	e ()V tick
net/minecraft/server/BlockDeadBush net/minecraft/world/level/block/DeadBushBlock
	a SHAPE
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
net/minecraft/server/BlockPropertyChestType net/minecraft/world/level/block/state/properties/ChestType
	d BY_ID
	e name
	f opposite
	g $VALUES
	a ()Ljava/lang/String; getSerializedName
	b ()Lnet/minecraft/server/BlockPropertyChestType; getOpposite
ddg net/minecraft/world/phys/shapes/package-info
ddf net/minecraft/world/phys/shapes/WorldRegionIndirectVoxelShape
	b x
	c y
	d z
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
anm$1 net/minecraft/util/profiling/ActiveProfiler$1
net/minecraft/server/SlotFurnaceResult net/minecraft/world/inventory/FurnaceResultSlot
	a player
	b removeCount
	a (I)Lnet/minecraft/server/ItemStack; remove
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/ItemStack;I)V onQuickCraft
	c (Lnet/minecraft/server/ItemStack;)V checkTakeAchievements
net/minecraft/server/WorldGenDecoratorHeight net/minecraft/world/level/levelgen/placement/BaseHeightmapDecorator
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
dae$a net/minecraft/world/level/storage/loot/functions/LimitCount$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionLimitCount; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionLimitCount;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/GlobalPos net/minecraft/core/GlobalPos
	a CODEC
	blockPosition pos
	dimensionManager dimension
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	create (Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/GlobalPos; of
	getBlockPosition ()Lnet/minecraft/server/BlockPosition; pos
	getDimensionManager ()Lnet/minecraft/server/ResourceKey; dimension
net/minecraft/server/TagStatic net/minecraft/tags/StaticTags
	a HELPERS
	a ()V resetAllToEmpty
	a (Lcom/google/common/collect/Multimap;Lnet/minecraft/server/ITagRegistry;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/TagUtil;)V lambda$getAllMissingTags$1
	a (Lnet/minecraft/server/ITagRegistry;)V resetAll
	a (Lnet/minecraft/server/ITagRegistry;Lnet/minecraft/server/TagUtil;)V lambda$resetAll$0
	a (Lnet/minecraft/server/MinecraftKey;Ljava/util/function/Function;)Lnet/minecraft/server/TagUtil; create
	a (Lnet/minecraft/server/TagUtil;)Z lambda$bootStrap$2
	b ()V bootStrap
	b (Lnet/minecraft/server/ITagRegistry;)Lcom/google/common/collect/Multimap; getAllMissingTags
net/minecraft/server/EnumResourcePackVersion net/minecraft/server/packs/repository/PackCompatibility
	d description
	e confirmation
	f $VALUES
	a ()Z isCompatible
	a (I)Lnet/minecraft/server/EnumResourcePackVersion; forFormat
	b ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	c ()Lnet/minecraft/server/IChatBaseComponent; getConfirmation
ddo net/minecraft/world/scores/criteria/package-info
net/minecraft/server/WorldGenFeatureDecoratorConfiguration net/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration
	b NONE
ddq com/mojang/blaze3d/Blaze3D
	a ()V youJustLostTheGame
	b ()D getTime
net/minecraft/server/CustomFunctionCallbackTimer net/minecraft/world/level/timers/TimerCallback
	a (Ljava/lang/Object;Lnet/minecraft/server/CustomFunctionCallbackTimerQueue;J)V handle
ddp net/minecraft/world/scores/package-info
dds com/mojang/blaze3d/audio/Library
	a LOGGER
	b device
	c context
	d EMPTY
	e staticChannels
	f streamingChannels
	g listener
	a ()V init
	a (Lddr;)V releaseChannel
	a (Ldds$c;)Lddr; acquireChannel
	b ()V cleanup
	c ()Lddt; getListener
	d ()Ljava/lang/String; getDebugString
	e ()Lorg/apache/logging/log4j/Logger; access$000
	f ()I getChannelCount
	g ()J tryOpenDevice
ddr com/mojang/blaze3d/audio/Channel
	a LOGGER
	b source
	c initialized
	d streamingBufferSize
	e stream
	a ()Lddr; create
	a (F)V setPitch
	a (I)V pumpBuffers
	a (Lddw;)V attachStaticBuffer
	a (Lene;)V attachBufferStream
	a (Ljavax/sound/sampled/AudioFormat;I)I calculateBufferSize
	a (Lnet/minecraft/server/Vec3D;)V setSelfPosition
	a (Z)V setLooping
	b ()V destroy
	b (F)V setVolume
	b (I)V lambda$pumpBuffers$1
	b (Z)V setRelative
	c ()V play
	c (F)V linearAttenuation
	c (I)V lambda$attachStaticBuffer$0
	d ()V pause
	e ()V unpause
	f ()V stop
	g ()Z stopped
	h ()V disableAttenuation
	i ()V updateStream
	j ()I getState
	k ()I removeProcessedBuffers
net/minecraft/server/WorldGenFossils net/minecraft/world/level/levelgen/feature/FossilFeature
	a SPINE_1
	ab SPINE_2
	ac SPINE_3
	ad SPINE_4
	ae SPINE_1_COAL
	af SPINE_2_COAL
	ag SPINE_3_COAL
	ah SPINE_4_COAL
	ai SKULL_1
	aj SKULL_2
	ak SKULL_3
	al SKULL_4
	am SKULL_1_COAL
	an SKULL_2_COAL
	ao SKULL_3_COAL
	ap SKULL_4_COAL
	aq fossils
	ar fossilsCoal
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/BlockBase$BlockData$Cache net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase$Cache
	a solidRender
	b collisionShape
	c largeCollisionShape
	d isCollisionShapeFullBlock
	e DIRECTIONS
	f SUPPORT_TYPE_COUNT
	g propagatesSkylightDown
	h lightBlock
	i occlusionShapes
	j faceSturdy
	a (Lnet/minecraft/server/BlockBase$BlockData$Cache;)Z access$2300
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Z lambda$new$0
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumBlockSupport;)Z isFaceSturdy
	b (Lnet/minecraft/server/BlockBase$BlockData$Cache;)I access$2400
	b (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumBlockSupport;)I getFaceSupportIndex
	c (Lnet/minecraft/server/BlockBase$BlockData$Cache;)[Lnet/minecraft/server/VoxelShape; access$2500
ddu com/mojang/blaze3d/audio/OggAudioStream
	a handle
	b audioFormat
	c input
	d buffer
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
	a (Lddu$a;)Z readFrame
	a (Ljava/nio/FloatBuffer;Lddu$a;)V convertMono
	a (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;Lddu$a;)V convertStereo
	b ()Ljava/nio/ByteBuffer; readAll
	c ()Z refillFromStream
	d ()V forwardBuffer
ddt com/mojang/blaze3d/audio/Listener
	a gain
	b position
	a ()Lnet/minecraft/server/Vec3D; getListenerPosition
	a (F)V setGain
	a (Lnet/minecraft/server/Vec3D;)V setListenerPosition
	a (Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Vector3fa;)V setListenerOrientation
	b ()F getGain
	c ()V reset
ddw com/mojang/blaze3d/audio/SoundBuffer
	a data
	b format
	c hasAlBuffer
	d alBuffer
	a ()Ljava/util/OptionalInt; getAlBuffer
	b ()V discardAlBuffer
	c ()Ljava/util/OptionalInt; releaseAlBuffer
ddv com/mojang/blaze3d/audio/OpenAlUtil
	a LOGGER
	a (I)Ljava/lang/String; alErrorToString
	a (JLjava/lang/String;)Z checkALCError
	a (Ljava/lang/String;)Z checkALError
	a (Ljavax/sound/sampled/AudioFormat;)I audioFormatToOpenAl
	b (I)Ljava/lang/String; alcErrorToString
cci$1 net/minecraft/world/level/block/entity/BrewingStandBlockEntity$1
	a this$0
	a ()I getCount
	a (I)I get
	a (II)V set
net/minecraft/server/WorldGenFeatureStructurePieceType net/minecraft/world/level/levelgen/feature/StructurePieceType
	A STRONGHOLD_RIGHT_TURN
	B STRONGHOLD_ROOM_CROSSING
	C STRONGHOLD_STAIRS_DOWN
	D STRONGHOLD_START
	E STRONGHOLD_STRAIGHT
	F STRONGHOLD_STRAIGHT_STAIRS_DOWN
	G JUNGLE_PYRAMID_PIECE
	H OCEAN_RUIN
	I IGLOO
	J RUINED_PORTAL
	K SWAMPLAND_HUT
	L DESERT_PYRAMID_PIECE
	M OCEAN_MONUMENT_BUILDING
	N OCEAN_MONUMENT_CORE_ROOM
	O OCEAN_MONUMENT_DOUBLE_X_ROOM
	P OCEAN_MONUMENT_DOUBLE_XY_ROOM
	Q OCEAN_MONUMENT_DOUBLE_Y_ROOM
	R OCEAN_MONUMENT_DOUBLE_YZ_ROOM
	S OCEAN_MONUMENT_DOUBLE_Z_ROOM
	T OCEAN_MONUMENT_ENTRY_ROOM
	U OCEAN_MONUMENT_PENTHOUSE
	V OCEAN_MONUMENT_SIMPLE_ROOM
	W OCEAN_MONUMENT_SIMPLE_TOP_ROOM
	X OCEAN_MONUMENT_WING_ROOM
	Y END_CITY_PIECE
	Z WOODLAND_MANSION_PIECE
	a MINE_SHAFT_CORRIDOR
	aa BURIED_TREASURE_PIECE
	ab SHIPWRECK_PIECE
	ac NETHER_FOSSIL
	ad JIGSAW
	b MINE_SHAFT_CROSSING
	c MINE_SHAFT_ROOM
	d MINE_SHAFT_STAIRS
	e NETHER_FORTRESS_BRIDGE_CROSSING
	f NETHER_FORTRESS_BRIDGE_END_FILLER
	g NETHER_FORTRESS_BRIDGE_STRAIGHT
	h NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS
	i NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY
	j NETHER_FORTRESS_CASTLE_ENTRANCE
	k NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING
	l NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN
	m NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR
	n NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN
	o NETHER_FORTRESS_CASTLE_STALK_ROOM
	p NETHER_FORTRESS_MONSTER_THRONE
	q NETHER_FORTRESS_ROOM_CROSSING
	r NETHER_FORTRESS_STAIRS_ROOM
	s NETHER_FORTRESS_START
	t STRONGHOLD_CHEST_CORRIDOR
	u STRONGHOLD_FILLER_CORRIDOR
	v STRONGHOLD_FIVE_CROSSING
	w STRONGHOLD_LEFT_TURN
	x STRONGHOLD_LIBRARY
	y STRONGHOLD_PORTAL_ROOM
	z STRONGHOLD_PRISON_HALL
	a (Lnet/minecraft/server/WorldGenFeatureStructurePieceType;Ljava/lang/String;)Lnet/minecraft/server/WorldGenFeatureStructurePieceType; setPieceId
ddy com/mojang/blaze3d/font/GlyphProvider
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (I)Lddz; getGlyph
ddx com/mojang/blaze3d/font/GlyphInfo
	a ()F getBearingX
	a (Z)F getAdvance
	b ()F getBoldOffset
	c ()F getShadowOffset
dz$c net/minecraft/commands/arguments/ScoreHolderArgument$Serializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/ArgumentScoreholder;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lnet/minecraft/server/ArgumentScoreholder;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ArgumentScoreholder; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
dql$1 net/minecraft/client/gui/screens/inventory/LecternScreen$1
	a this$0
	a (Lnet/minecraft/server/Container;II)V setContainerData
	a (Lnet/minecraft/server/Container;ILnet/minecraft/server/ItemStack;)V slotChanged
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/NonNullList;)V refreshContainer
net/minecraft/server/LootContextParameterSet net/minecraft/world/level/storage/loot/parameters/LootContextParamSet
	a required
	b all
	a (Lnet/minecraft/server/LootCollector;Lnet/minecraft/server/LootItemUser;)V validateUser
	a (Lnet/minecraft/server/LootContextParameter;)Z isAllowed
	b (Lnet/minecraft/server/LootContextParameter;)Ljava/lang/String; lambda$toString$0
	c ()Lnet/minecraft/server/LootContextParameterSet$Builder; builder
	getOptional ()Ljava/util/Set; getAllowed
dz$b net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult
	a selector
ddz com/mojang/blaze3d/font/RawGlyph
	a (II)V upload
	d ()I getPixelWidth
	e ()I getPixelHeight
	f ()Z isColored
	g ()F getOversample
	h ()F getLeft
	i ()F getRight
	j ()F getUp
	k ()F getDown
	l ()F getBearingY
dz$a net/minecraft/commands/arguments/ScoreHolderArgument$Result
net/minecraft/server/ChunkStatus net/minecraft/world/level/chunk/ChunkStatus
	n PRE_FEATURES
	o POST_FEATURES
	p PASSTHROUGH_LOAD_TASK
	q STATUS_BY_RANGE
	r RANGE_BY_STATUS
	s name
	t index
	u parent
	v generationTask
	w loadingTask
	x range
	y chunkType
	z heightmapsAfter
	a ()Ljava/util/List; getStatusList
	a (I)Lnet/minecraft/server/ChunkStatus; getStatus
	a (Lit/unimi/dsi/fastutil/ints/IntArrayList;)V lambda$static$16
	a (Ljava/lang/String;)Lnet/minecraft/server/ChunkStatus; byName
	a (Ljava/lang/String;Lnet/minecraft/server/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/server/ChunkStatus$Type;Lcfx$b;)Lnet/minecraft/server/ChunkStatus; register
	a (Ljava/lang/String;Lnet/minecraft/server/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/server/ChunkStatus$Type;Lcfx$b;Lcfx$c;)Lnet/minecraft/server/ChunkStatus; register
	a (Ljava/lang/String;Lnet/minecraft/server/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/server/ChunkStatus$Type;Lcfx$d;)Lnet/minecraft/server/ChunkStatus; registerSimple
	a (Lnet/minecraft/server/ChunkStatus;)I getDistance
	a (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/IChunkAccess;)Z isLighted
	a (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/LightEngineThreaded;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lightChunk
	a (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$14
	a (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$15
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$13
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; generate
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; load
	b ()I maxDistance
	b (Lnet/minecraft/server/ChunkStatus;)Z isOrAfter
	b (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$10
	b (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$11
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$12
	c ()I getIndex
	c (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$9
	c (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$8
	d ()Ljava/lang/String; getName
	d (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$2
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$7
	e ()Lnet/minecraft/server/ChunkStatus; getParent
	e (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$6
	f ()I getRange
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$5
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$4
	getType ()Lnet/minecraft/server/ChunkStatus$Type; getChunkType
	h ()Ljava/util/EnumSet; heightmapsAfter
	h (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$3
	i (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Ljava/util/List;Lnet/minecraft/server/IChunkAccess;)V lambda$static$1
net/minecraft/server/EnumProtocol net/minecraft/network/ConnectionProtocol
	e LOOKUP
	f PROTOCOL_BY_PACKET
	g id
	h flows
	i $VALUES
	a ()I getId
	a (I)Lnet/minecraft/server/EnumProtocol; getById
	a (Lnet/minecraft/server/EnumProtocol;Ljava/lang/Class;)V lambda$null$0
	a (Lnet/minecraft/server/EnumProtocol;Lnet/minecraft/server/EnumProtocolDirection;Lne$a;)V lambda$static$1
	a (Lnet/minecraft/server/EnumProtocolDirection;I)Lnet/minecraft/server/Packet; createPacket
	a (Lnet/minecraft/server/EnumProtocolDirection;Lnet/minecraft/server/Packet;)Ljava/lang/Integer; getPacketId
	a (Lnet/minecraft/server/Packet;)Lnet/minecraft/server/EnumProtocol; getProtocolForPacket
	b ()Lne$b; protocol
deb com/mojang/blaze3d/pipeline/RenderCall
net/minecraft/server/PersistentRaid net/minecraft/world/entity/raid/Raids
	b level
	c nextAvailableID
	d tick
	raids raidMap
	a ()V tick
	a (I)Lnet/minecraft/server/Raid; get
	a (Lnet/minecraft/server/DimensionManager;)Ljava/lang/String; getFileId
	a (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/Raid; createOrExtendRaid
	a (Lnet/minecraft/server/EntityRaider;Lnet/minecraft/server/Raid;)Z canJoinRaid
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Raid; getOrCreateRaid
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	e ()I getUniqueId
net/minecraft/server/EntityPanda$Gene net/minecraft/world/entity/animal/Panda$Gene
	h BY_ID
	i id
	j name
	k isRecessive
	l $VALUES
	a ()I getId
	a (I)Lnet/minecraft/server/EntityPanda$Gene; byId
	a (Ljava/lang/String;)Lnet/minecraft/server/EntityPanda$Gene; byName
	a (Ljava/util/Random;)Lnet/minecraft/server/EntityPanda$Gene; getRandom
	a (Lnet/minecraft/server/EntityPanda$Gene;Lnet/minecraft/server/EntityPanda$Gene;)Lnet/minecraft/server/EntityPanda$Gene; access$000
	b ()Ljava/lang/String; getName
	b (I)[Lnet/minecraft/server/EntityPanda$Gene; lambda$static$0
	b (Lnet/minecraft/server/EntityPanda$Gene;Lnet/minecraft/server/EntityPanda$Gene;)Lnet/minecraft/server/EntityPanda$Gene; getVariantFromGenes
dea com/mojang/blaze3d/font/TrueTypeGlyphProvider
	a fontMemory
	b font
	c oversample
	d skip
	e shiftX
	f shiftY
	g pointScale
	h ascent
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (I)Lddz; getGlyph
	a (Ldea;)F access$100
	b (I)Ldea$a; getGlyph
	b (Ldea;)F access$200
	c (I)Z lambda$getSupportedGlyphs$0
	c (Ldea;)F access$300
	d (Ldea;)F access$400
	e (Ldea;)Lorg/lwjgl/stb/STBTTFontinfo; access$500
	f (Ldea;)F access$600
ded com/mojang/blaze3d/pipeline/RenderTarget
	a width
	b height
	c viewWidth
	d viewHeight
	e useDepth
	f frameBufferId
	g clearChannels
	h filterMode
	i colorTextureId
	j depthBufferId
	a ()V destroyBuffers
	a (FFFF)V setClearColor
	a (I)V setFilterMode
	a (II)V blitToScreen
	a (IIZ)V resize
	a (Lded;)V copyDepthFrom
	a (Z)V bindWrite
	b ()V checkStatus
	b (IIZ)V createBuffers
	b (Z)V clear
	c ()V bindRead
	c (IIZ)V blitToScreen
	c (Z)V _bindWrite
	d ()V unbindRead
	d (IIZ)V _resize
	d (Z)V lambda$bindWrite$1
	e ()V unbindWrite
	e (IIZ)V _blitToScreen
	f ()I getColorTextureId
	f (IIZ)V lambda$blitToScreen$3
	g ()I getDepthTextureId
	g (IIZ)V lambda$resize$0
	h ()V lambda$unbindWrite$2
dec com/mojang/blaze3d/pipeline/RenderPipeline
	a renderCalls
	b recordingBuffer
	c processedBuffer
	d renderingBuffer
net/minecraft/server/DataConverterJigsawProperties net/minecraft/util/datafix/fixes/JigsawPropertiesFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
def com/mojang/blaze3d/platform/DebugMemoryUntracker
	a UNTRACK
	a ()Ljava/lang/invoke/MethodHandle; lambda$static$0
	a (J)V untrack
	a (Lorg/lwjgl/system/Pointer;)V untrack
dee com/mojang/blaze3d/platform/ClipboardManager
	a clipboardScratchBuffer
	a (JLjava/lang/String;)V setClipboard
	a (JLjava/nio/ByteBuffer;[B)V pushClipboard
	a (JLorg/lwjgl/glfw/GLFWErrorCallbackI;)Ljava/lang/String; getClipboard
net/minecraft/server/ArgumentDimension net/minecraft/commands/arguments/DimensionArgument
	a EXAMPLES
	b ERROR_INVALID_VALUE
	a ()Lnet/minecraft/server/ArgumentDimension; dimension
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/MinecraftKey; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/WorldServer; getDimension
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lnet/minecraft/server/ResourceKey;)Ljava/lang/String; lambda$static$0
deh com/mojang/blaze3d/platform/GlConst
	a GL_FRAMEBUFFER
	b GL_RENDERBUFFER
	c GL_COLOR_ATTACHMENT0
	d GL_DEPTH_ATTACHMENT
	e GL_FRAMEBUFFER_COMPLETE
	f GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
	g GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
	h GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
	i GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
deg com/mojang/blaze3d/platform/DisplayData
	a width
	b height
	c fullscreenWidth
	d fullscreenHeight
	e isFullscreen
dej com/mojang/blaze3d/platform/GlStateManager
	a MATRIX_BUFFER
	b ALPHA_TEST
	c LIGHTING
	d LIGHT_ENABLE
	e COLOR_MATERIAL
	f BLEND
	g DEPTH
	h FOG
	i CULL
	j POLY_OFFSET
	k COLOR_LOGIC
	l TEX_GEN
	m STENCIL
	n FLOAT_ARG_BUFFER
	o activeTexture
	p TEXTURES
	q shadeModel
	r RESCALE_NORMAL
	s COLOR_MASK
	t COLOR
	u fboMode
	v fboBlitMode
	A ()V _enableCull
	A (I)V _disableVertexAttribArray
	B ()V _disableCull
	B (I)Ljava/lang/String; _getString
	C ()V _enablePolygonOffset
	C (I)I _getInteger
	D ()V _disablePolygonOffset
	D (I)[Ldej$w; lambda$static$4
	E ()V _enableLineOffset
	E (I)Ldej$w; lambda$static$3
	F ()V _disableLineOffset
	F (I)[Ldej$c; lambda$static$2
	G ()V _enableColorLogicOp
	G (I)Ldej$c; lambda$static$1
	H ()V _disableColorLogicOp
	I ()V _enableTexture
	J ()V _disableTexture
	K ()I _genTexture
	L ()V _enableRescaleNormal
	M ()V _disableRescaleNormal
	N ()V _loadIdentity
	O ()V _pushMatrix
	P ()V _popMatrix
	Q ()V _clearCurrentColor
	R ()I _getError
	S ()Z supportsFramebufferBlit
	a ()V _pushLightingAttributes
	a (D)V _clearDepth
	a (DDD)V _scaled
	a (DDDDDD)V _ortho
	a (F)V _fogDensity
	a (FF)V _polygonOffset
	a (FFF)V _normal3f
	a (FFFF)V _blendColor
	a (I)V _enableLight
	a (IF)V _alphaFunc
	a (IFF)V _glMultiTexCoord2f
	a (II)V _colorMaterial
	a (IIF)V _texParameter
	a (III)V _texEnv
	a (IIII)V _blendFuncSeparate
	a (IIIII)V _glFramebufferTexture2D
	a (IIIIIIII)V _glCopyTexSubImage2D
	a (IIIIIIIIII)V _glBlitFrameBuffer
	a (IIIIIIIIJ)V _texSubImage2D
	a (IIIIIIIILjava/nio/IntBuffer;)V _texImage2D
	a (IIIIIILjava/nio/ByteBuffer;)V _readPixels
	a (IIIIJ)V _getTexImage
	a (IIIJ)V _texCoordPointer
	a (IIIZIJ)V _vertexAttribPointer
	a (IIJ)V _normalPointer
	a (IILjava/nio/FloatBuffer;)V _light
	a (ILjava/lang/CharSequence;)V glShaderSource
	a (ILjava/nio/ByteBuffer;I)V _glBufferData
	a (ILjava/nio/FloatBuffer;)V _lightModel
	a (ILjava/nio/IntBuffer;)V _glUniform1
	a (IZ)V _clear
	a (IZLjava/nio/FloatBuffer;)V _glUniformMatrix2
	a (I[F)V _fog
	a (Ldej$t;)V _enableTexGen
	a (Ldej$t;I)V _texGenMode
	a (Ldej$t;ILjava/nio/FloatBuffer;)V _texGenParam
	a (Ljava/nio/FloatBuffer;)V _multMatrix
	a (Lnet/minecraft/server/Matrix4f;)V _multMatrix
	a (Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Vector3fa;)V setupGuiFlatDiffuseLighting
	a (Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Matrix4f;)V setupLevelDiffuseLighting
	a (Lorg/lwjgl/opengl/GLCapabilities;)Ljava/lang/String; _init_fbo
	a (Z)V _depthMask
	a (ZZZZ)V _colorMask
	a ([I)V _genTextures
	b ()V _pushTextureAttributes
	b (DDD)V _translated
	b (F)V _fogStart
	b (FFF)V _scalef
	b (FFFF)V _clearColor
	b (I)V _depthFunc
	b (IF)V _pixelTransfer
	b (II)V _blendFunc
	b (III)V _texParameter
	b (IIII)V glBlendFuncSeparate
	b (IIIJ)V _vertexPointer
	b (ILjava/lang/CharSequence;)I _glGetUniformLocation
	b (ILjava/nio/FloatBuffer;)V _glUniform1
	b (ILjava/nio/IntBuffer;)V _glUniform2
	b (IZLjava/nio/FloatBuffer;)V _glUniformMatrix3
	b (Ldej$t;)V _disableTexGen
	b (Ljava/nio/FloatBuffer;)V lambda$static$0
	b (Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Vector3fa;)V setupGui3DDiffuseLighting
	b ([I)V _deleteTextures
	c ()V _popAttributes
	c (F)V _fogEnd
	c (FFF)V _translatef
	c (FFFF)V _rotatef
	c (I)V _blendEquation
	c (II)I glGetProgrami
	c (III)I _getTexLevelParameter
	c (IIII)V _viewport
	c (IIIJ)V _colorPointer
	c (ILjava/lang/CharSequence;)I _glGetAttribLocation
	c (ILjava/nio/FloatBuffer;)V _glUniform2
	c (ILjava/nio/IntBuffer;)V _glUniform3
	c (IZLjava/nio/FloatBuffer;)V _glUniformMatrix4
	c (Ldej$t;)Ldej$u; getTexGen
	d ()V _disableAlphaTest
	d (F)V _lineWidth
	d (FFFF)V _color4f
	d (I)V glDeleteShader
	d (II)V glAttachShader
	d (III)V _stencilFunc
	d (IIII)V color3arg
	d (ILjava/nio/FloatBuffer;)V _glUniform3
	d (ILjava/nio/IntBuffer;)V _glUniform4
	e ()V _enableAlphaTest
	e (FFFF)Ljava/nio/FloatBuffer; getBuffer
	e (I)I glCreateShader
	e (II)I glGetShaderi
	e (III)V _stencilOp
	e (ILjava/nio/FloatBuffer;)V _glUniform4
	f ()V _enableLighting
	f (I)V glCompileShader
	f (II)V _glUniform1i
	f (III)V _drawArrays
	f (ILjava/nio/FloatBuffer;)V _getMatrix
	g ()V _disableLighting
	g (I)V _glUseProgram
	g (II)V _glBindBuffer
	h ()V _enableColorMaterial
	h (I)V glDeleteProgram
	h (II)V _glBindFramebuffer
	i ()V _disableColorMaterial
	i (I)V glLinkProgram
	i (II)Ljava/lang/String; glGetShaderInfoLog
	j ()V _disableDepthTest
	j (I)V _glDeleteBuffers
	j (II)Ljava/lang/String; glGetProgramInfoLog
	k ()V _enableDepthTest
	k (I)V _glDeleteFramebuffers
	k (II)V setupOverlayColor
	l ()V _disableBlend
	l (I)I glCheckFramebufferStatus
	l (II)V _fogi
	m ()V _enableBlend
	m (I)V glActiveTexture
	m (II)V _polygonMode
	n ()I glCreateProgram
	n (I)V _glClientActiveTexture
	n (II)V _pixelStore
	o ()I _glGenBuffers
	o (I)V _fogMode
	o (II)V color1arg
	p ()I getFramebufferDepthTexture
	p (I)V _logicOp
	p (II)V alpha1arg
	q ()I glGenFramebuffers
	q (I)V _activeTexture
	r ()I getActiveTextureName
	r (I)V _deleteTexture
	s ()V setupOutline
	s (I)V _bindTexture
	t ()V teardownOutline
	t (I)V _shadeModel
	u ()V teardownOverlayColor
	u (I)V _stencilMask
	v ()V setupEndPortalTexGen
	v (I)V _clearStencil
	w ()V clearTexGen
	w (I)V _matrixMode
	x ()V mulTextureByProjModelView
	x (I)V _enableClientState
	y ()V _enableFog
	y (I)V _disableClientState
	z ()V _disableFog
	z (I)V _enableVertexAttribArray
dic$a com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$FrameButton
	a this$0
	b image
	b (Ldfj;IIF)V renderButton
dei com/mojang/blaze3d/platform/GlDebug
	a BYTE_BUFFER
	b FLOAT_BUFFER
	c INT_BUFFER
	d LOGGER
	e NEWLINE_JOINER
	f STATEMENT_JOINER
	g BY_ID
	h DEBUG_LEVELS
	i DEBUG_LEVELS_ARB
	j SAVED_STATES
	a (I)Ljava/lang/String; printUnknownToken
	a (IIIIIJJ)V printDebugLog
	a (ILjava/lang/String;)V setup
	a (IZ)V enableDebugCallback
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; lambda$setup$0
	b (I)Ljava/lang/String; sourceToString
	c (I)Ljava/lang/String; typeToString
	d (I)Ljava/lang/String; severityToString
del com/mojang/blaze3d/platform/InputConstants
	a UNKNOWN
	b glfwRawMouseMotionSupported
	c GLFW_RAW_MOUSE_MOTION
	a ()Z isRawMouseInputSupported
	a (II)Ldel$a; getKey
	a (JI)Z isKeyDown
	a (JIDD)V grabOrReleaseMouse
	a (JLorg/lwjgl/glfw/GLFWCursorPosCallbackI;Lorg/lwjgl/glfw/GLFWMouseButtonCallbackI;Lorg/lwjgl/glfw/GLFWScrollCallbackI;Lorg/lwjgl/glfw/GLFWDropCallbackI;)V setupMouseCallbacks
	a (JLorg/lwjgl/glfw/GLFWKeyCallbackI;Lorg/lwjgl/glfw/GLFWCharModsCallbackI;)V setupKeyboardCallbacks
	a (JZ)V updateRawMouseInput
	a (Ljava/lang/String;)Ldel$a; getKey
net/minecraft/server/SavedFile net/minecraft/world/level/storage/LevelResource
	ADVANCEMENTS PLAYER_ADVANCEMENTS_DIR
	DATAPACKS DATAPACK_DIR
	GENERATED GENERATED_DIR
	LEVEL_DAT LEVEL_DATA_FILE
	PLAYERDATA PLAYER_DATA_DIR
	PLAYERS PLAYER_OLD_DATA_DIR
	RESOURCES_ZIP MAP_RESOURCE_FILE
	STATS PLAYER_STATS_DIR
	j id
	a ()Ljava/lang/String; getId
net/minecraft/server/EntityLlama net/minecraft/world/entity/animal/horse/Llama
	bA didSpit
	bB caravanHead
	bC caravanTail
	bw FOOD_ITEMS
	bx DATA_STRENGTH_ID
	by DATA_SWAG_ID
	bz DATA_VARIANT_ID
	A (Z)V setDidSpit
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L_ ()Z isSaddleable
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/EntityLlama;)V joinCaravan
	a (Lnet/minecraft/server/EntityLlama;Z)V access$200
	a (Lnet/minecraft/server/EnumColor;)V setSwag
	a (Lnet/minecraft/server/IInventory;)V containerChanged
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityLlama;)Z access$100
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityLlama; getBreedOffspring
	bb ()D getPassengersRidingOffset
	c (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Z handleEating
	ce ()Lnet/minecraft/server/Vec3D; getLeashOffset
	dH ()Z isImmobile
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eJ ()D followLeashSpeed
	eN ()I getInventorySize
	eO ()V playChestEquipsSound
	eU ()I getInventoryColumns
	er ()Z canBeControlledByRider
	fA ()V leaveCaravan
	fB ()Z hasCaravanTail
	fC ()Z inCaravan
	fD ()Lnet/minecraft/server/EntityLlama; getCaravanHead
	fE ()V setRandomStrength
	fe ()V updateContainerEquipment
	fg ()Lnet/minecraft/server/SoundEffect; getEatingSound
	fh ()Lnet/minecraft/server/SoundEffect; getAngrySound
	fj ()I getMaxTemper
	fk ()V followMommy
	fl ()Z canEatGrass
	fm ()V makeMad
	fs ()Z canWearArmor
	ft ()Z isWearingArmor
	fu ()Z isTraderLlama
	fw ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	fy ()Lnet/minecraft/server/EnumColor; getSwag
	fz ()Lnet/minecraft/server/EntityLlama; makeBabyLlama
	i (Lnet/minecraft/server/EntityLiving;)V spit
	k (Lnet/minecraft/server/Entity;)V positionRider
	k (Lnet/minecraft/server/ItemStack;)Z isFood
	l (Lnet/minecraft/server/ItemStack;)Z isArmor
	m (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumColor; getDyeColor
	o ()V registerGoals
dek com/mojang/blaze3d/platform/GlUtil
	a ()Ljava/lang/String; getVendor
	a (I)Ljava/nio/ByteBuffer; allocateMemory
	a (Ldet;)V populateSnooperWithOpenGL
	a (Ljava/nio/Buffer;)V freeMemory
	b ()Ljava/lang/String; getCpuInfo
	c ()Ljava/lang/String; getRenderer
	d ()Ljava/lang/String; getOpenGLVersion
den com/mojang/blaze3d/platform/MemoryTracker
	a (I)Ljava/nio/ByteBuffer; createByteBuffer
	b (I)Ljava/nio/FloatBuffer; createFloatBuffer
dem com/mojang/blaze3d/platform/Lighting
	a DIFFUSE_LIGHT_0
	b DIFFUSE_LIGHT_1
	c NETHER_DIFFUSE_LIGHT_0
	d NETHER_DIFFUSE_LIGHT_1
	a ()V turnBackOn
	a (Lnet/minecraft/server/Matrix4f;)V setupNetherLevel
	b ()V turnOff
	b (Lnet/minecraft/server/Matrix4f;)V setupLevel
	c ()V setupForFlatItems
	d ()V setupFor3DItems
dic$b com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetType
	a NONE
	b GENERATE
	c UPLOAD
	d ADVENTURE
	e SURVIVAL_SPAWN
	f EXPERIENCE
	g INSPIRATION
	h $VALUES
dep com/mojang/blaze3d/platform/MonitorCreator
dic$c com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetWorldInfo
	a seed
	b levelType
	c generateStructures
	a (Ldic$c;)Ljava/lang/String; access$600
	b (Ldic$c;)I access$700
	c (Ldic$c;)Z access$800
deo com/mojang/blaze3d/platform/Monitor
	a monitor
	b videoModes
	c currentMode
	d x
	e y
	a ()V refreshVideoModes
	a (I)Ldev; getMode
	a (Ldev;)I getVideoModeIndex
	a (Ljava/util/Optional;)Ldev; getPreferredVidMode
	b ()Ldev; getCurrentMode
	c ()I getX
	d ()I getY
	e ()I getModeCount
	f ()J getMonitor
der com/mojang/blaze3d/platform/PngInfo
	a width
	b height
	a (Ljava/io/InputStream;)Lder$a; createCallbacks
deq com/mojang/blaze3d/platform/NativeImage
	a LOGGER
	b OPEN_OPTIONS
	c format
	d width
	e height
	f useStbFree
	g pixels
	h size
	a ()I getWidth
	a (I)I getA
	a (II)I getPixelRGBA
	a (III)V setPixelRGBA
	a (IIII)I combine
	a (IIIII)V fillRect
	a (IIIIIIIZZ)V upload
	a (IIIIIIIZZZZ)V upload
	a (IIIIIIZZ)V copyRect
	a (IIIILdeq;)V resizeSubRectTo
	a (IIIZ)V upload
	a (IZ)V downloadTexture
	a (Ldeq$a;Ljava/io/InputStream;)Ldeq; read
	a (Ldeq$a;Ljava/nio/ByteBuffer;)Ldeq; read
	a (Ldeq;)V copyFrom
	a (Ljava/io/File;)V writeToFile
	a (Ljava/io/InputStream;)Ldeq; read
	a (Ljava/lang/String;)Ldeq; fromBase64
	a (Ljava/nio/ByteBuffer;)Ldeq; read
	a (Ljava/nio/channels/WritableByteChannel;)Z writeToChannel
	a (Ljava/nio/file/Path;)V writeToFile
	a (Lorg/lwjgl/stb/STBTTFontinfo;IIIFFFFII)V copyFromFont
	a (Z)V setClamp
	a (ZZ)V setFilter
	b ()I getHeight
	b (I)I getR
	b (II)B getLuminanceOrAlpha
	b (IIIIIIIZZZZ)V _upload
	c ()Ldeq$a; format
	c (I)I getG
	c (IIIIIIIZZZZ)V lambda$upload$0
	d ()[I makePixelArray
	d (I)I getB
	e ()[B asByteArray
	f ()V flipY
	g ()V untrack
	h ()V checkAllocated
det com/mojang/blaze3d/platform/SnooperAccess
des com/mojang/blaze3d/platform/ScreenManager
	a monitors
	b monitorCreator
	a ()V shutdown
	a (III)I clamp
	a (J)Ldeo; getMonitor
	a (JI)V onMonitorChange
	a (Ldew;)Ldeo; findBestMonitor
ip$b net/minecraft/data/models/blockstates/PropertyDispatch$C2
	a property1
	b property2
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Lir;)Lip$b; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lip$b; select
	a (Ljava/lang/Comparable;Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V lambda$null$2
	a (Ljava/util/function/BiFunction;)Lip; generate
	a (Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V lambda$generateList$3
	b ()Ljava/util/List; getDefinedProperties
	b (Ljava/lang/Comparable;Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V lambda$null$0
	b (Ljava/util/function/BiFunction;)Lip; generateList
	b (Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V lambda$generate$1
dev com/mojang/blaze3d/platform/VideoMode
	a width
	b height
	c redBits
	d greenBits
	e blueBits
	f refreshRate
	g PATTERN
	a ()I getWidth
	a (Ljava/lang/String;)Ljava/util/Optional; read
	b ()I getHeight
	c ()I getRedBits
	d ()I getGreenBits
	e ()I getBlueBits
	f ()I getRefreshRate
	g ()Ljava/lang/String; write
net/minecraft/server/PacketPlayInEntityNBTQuery net/minecraft/network/protocol/game/ServerboundEntityTagQuery
	a transactionId
	b entityId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getTransactionId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getEntityId
ip$a net/minecraft/data/models/blockstates/PropertyDispatch$C1
	a property1
	a (Ljava/lang/Comparable;Lir;)Lip$a; select
	a (Ljava/lang/Comparable;Ljava/util/List;)Lip$a; select
	a (Ljava/util/function/Function;)Lip; generate
	a (Ljava/util/function/Function;Ljava/lang/Comparable;)V lambda$generateList$1
	b ()Ljava/util/List; getDefinedProperties
	b (Ljava/util/function/Function;)Lip; generateList
	b (Ljava/util/function/Function;Ljava/lang/Comparable;)V lambda$generate$0
deu com/mojang/blaze3d/platform/TextureUtil
	a LOGGER
	a ()I generateTextureId
	a (I)V releaseTextureId
	a (III)V prepareImage
	a (IIII)V prepareImage
	a (Ldeq$b;III)V prepareImage
	a (Ldeq$b;IIII)V prepareImage
	a (Ljava/io/InputStream;)Ljava/nio/ByteBuffer; readResource
	a (Ljava/nio/IntBuffer;II)V initTexture
	b (I)V bind
	b (Ljava/io/InputStream;)Ljava/lang/String; readResourceAsString
ip$d net/minecraft/data/models/blockstates/PropertyDispatch$C4
	a property1
	b property2
	c property3
	d property4
	a (Lip$g;)Lip; generate
	a (Lip$g;Ljava/lang/Comparable;)V lambda$generateList$7
	a (Ljava/lang/Comparable;Lip$g;Ljava/lang/Comparable;)V lambda$null$6
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$g;Ljava/lang/Comparable;)V lambda$null$5
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$g;Ljava/lang/Comparable;)V lambda$null$4
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lir;)Lip$d; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lip$d; select
	b ()Ljava/util/List; getDefinedProperties
	b (Lip$g;)Lip; generateList
	b (Lip$g;Ljava/lang/Comparable;)V lambda$generate$3
	b (Ljava/lang/Comparable;Lip$g;Ljava/lang/Comparable;)V lambda$null$2
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$g;Ljava/lang/Comparable;)V lambda$null$1
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$g;Ljava/lang/Comparable;)V lambda$null$0
dex com/mojang/blaze3d/platform/WindowEventHandler
	a ()V resizeDisplay
	a (Z)V setWindowActive
	b ()V cursorEntered
net/minecraft/server/WorldGenFeatureConfigurationChance net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration
	b CODEC
	c probability
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lnet/minecraft/server/WorldGenFeatureConfigurationChance;)Ljava/lang/Float; lambda$null$0
ip$c net/minecraft/data/models/blockstates/PropertyDispatch$C3
	a property1
	b property2
	c property3
	a (Lip$h;)Lip; generate
	a (Lip$h;Ljava/lang/Comparable;)V lambda$generateList$5
	a (Ljava/lang/Comparable;Lip$h;Ljava/lang/Comparable;)V lambda$null$4
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$h;Ljava/lang/Comparable;)V lambda$null$3
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lir;)Lip$c; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lip$c; select
	b ()Ljava/util/List; getDefinedProperties
	b (Lip$h;)Lip; generateList
	b (Lip$h;Ljava/lang/Comparable;)V lambda$generate$2
	b (Ljava/lang/Comparable;Lip$h;Ljava/lang/Comparable;)V lambda$null$1
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$h;Ljava/lang/Comparable;)V lambda$null$0
dew com/mojang/blaze3d/platform/Window
	a LOGGER
	b defaultErrorCallback
	c eventHandler
	d screenManager
	e window
	f windowedX
	g windowedY
	h windowedWidth
	i windowedHeight
	j preferredFullscreenVideoMode
	k fullscreen
	l actuallyFullscreen
	m x
	n y
	o width
	p height
	q framebufferWidth
	r framebufferHeight
	s guiScaledWidth
	t guiScaledHeight
	u guiScale
	v errorSection
	w dirty
	x framerateLimit
	y vsync
	a ()I getRefreshRate
	a (D)V setGuiScale
	a (I)V setFramerateLimit
	a (IJ)V defaultErrorCallback
	a (IZ)I calculateScale
	a (JII)V onMove
	a (JZ)V onFocus
	a (Ljava/io/InputStream;Ljava/io/InputStream;)V setIcon
	a (Ljava/io/InputStream;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;)Ljava/nio/ByteBuffer; readIconPixels
	a (Ljava/lang/String;)V setErrorSection
	a (Ljava/util/Optional;)V setPreferredFullscreenVideoMode
	a (Ljava/util/function/BiConsumer;)V checkGlfwError
	a (Z)V updateVsync
	b ()Z shouldClose
	b (I)V setWidth
	b (IJ)V bootCrash
	b (JII)V onFramebufferResize
	b (JZ)V onEnter
	b (Ljava/lang/String;)V setTitle
	b (Z)V updateRawMouseInput
	c ()V setDefaultErrorCallback
	c (I)V setHeight
	c (JII)V onResize
	c (Z)V updateFullscreen
	d ()I getFramerateLimit
	e ()V updateDisplay
	f ()Ljava/util/Optional; getPreferredFullscreenVideoMode
	g ()V changeFullscreenVideoMode
	h ()V toggleFullScreen
	i ()J getWindow
	j ()Z isFullscreen
	k ()I getWidth
	l ()I getHeight
	m ()I getScreenWidth
	n ()I getScreenHeight
	o ()I getGuiScaledWidth
	p ()I getGuiScaledHeight
	q ()I getX
	r ()I getY
	s ()D getGuiScale
	t ()Ldeo; findBestMonitor
	u ()V setBootErrorCallback
	v ()V refreshFramebufferSize
	w ()V setMode
net/minecraft/server/EntityHorse net/minecraft/world/entity/animal/horse/Horse
	bw ARMOR_MODIFIER_UUID
	bx DATA_ID_TYPE_VARIANT
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/IInventory;)V containerChanged
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/SoundEffectType;)V playGallopSound
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()V randomizeAttributes
	eL ()Lnet/minecraft/server/ItemStack; getArmor
	fe ()V updateContainerEquipment
	fg ()Lnet/minecraft/server/SoundEffect; getEatingSound
	fh ()Lnet/minecraft/server/SoundEffect; getAngrySound
	fs ()Z canWearArmor
	getColor ()Lnet/minecraft/server/HorseColor; getVariant
	getStyle ()Lnet/minecraft/server/HorseStyle; getMarkings
	getVariantRaw ()I getTypeVariant
	l (Lnet/minecraft/server/ItemStack;)Z isArmor
	m (Lnet/minecraft/server/ItemStack;)V setArmor
	n (Lnet/minecraft/server/ItemStack;)V setArmorEquipment
	setVariant (Lnet/minecraft/server/HorseColor;Lnet/minecraft/server/HorseStyle;)V setVariantAndMarkings
	setVariantRaw (I)V setTypeVariant
ip$f net/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; apply
dez com/mojang/blaze3d/shaders/BlendMode
	a lastApplied
	b srcColorFactor
	c srcAlphaFactor
	d dstColorFactor
	e dstAlphaFactor
	f blendFunc
	g separateBlend
	h opaque
	a ()V apply
	a (Ljava/lang/String;)I stringToBlendFunc
	b ()Z isOpaque
	b (Ljava/lang/String;)I stringToBlendFactor
net/minecraft/server/PacketPlayInChat net/minecraft/network/protocol/game/ServerboundChatPacket
	a message
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Ljava/lang/String; getMessage
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
ip$e net/minecraft/data/models/blockstates/PropertyDispatch$C5
	a property1
	b property2
	c property3
	d property4
	e property5
	a (Lip$f;)Lip; generate
	a (Lip$f;Ljava/lang/Comparable;)V lambda$generateList$9
	a (Ljava/lang/Comparable;Lip$f;Ljava/lang/Comparable;)V lambda$null$8
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$f;Ljava/lang/Comparable;)V lambda$null$7
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$f;Ljava/lang/Comparable;)V lambda$null$6
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$f;Ljava/lang/Comparable;)V lambda$null$5
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lir;)Lip$e; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lip$e; select
	b ()Ljava/util/List; getDefinedProperties
	b (Lip$f;)Lip; generateList
	b (Lip$f;Ljava/lang/Comparable;)V lambda$generate$4
	b (Ljava/lang/Comparable;Lip$f;Ljava/lang/Comparable;)V lambda$null$3
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$f;Ljava/lang/Comparable;)V lambda$null$2
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$f;Ljava/lang/Comparable;)V lambda$null$1
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lip$f;Ljava/lang/Comparable;)V lambda$null$0
dey com/mojang/blaze3d/shaders/AbstractUniform
	a (F)V set
	a (FF)V set
	a (FFF)V set
	a (FFFF)V set
	a (IIII)V setSafe
	a (Lnet/minecraft/server/Matrix4f;)V set
	a ([F)V set
	b (FFFF)V setSafe
ip$h net/minecraft/data/models/blockstates/PropertyDispatch$TriFunction
ip$g net/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; apply
net/minecraft/server/PlayerChunkMap net/minecraft/server/level/ChunkMap
	A unloadQueue
	GOLDEN_TICKET MAX_CHUNK_DISTANCE
	c LOGGER
	chunkDistanceManager distanceManager
	chunkGenerator generator
	definedStructureManager structureManager
	executor mainThreadExecutor
	l overworldDataStorage
	loadedChunks entitiesInLevel
	m poiManager
	mailboxMain mainThreadMailbox
	mailboxWorldGen worldgenMailbox
	p queueSorter
	pendingUnload pendingUnloads
	trackedEntities entityMap
	u tickingGenerated
	unloadQueue toDrop
	updatingChunks updatingChunkMap
	updatingChunksModified modified
	visibleChunks visibleChunkMap
	w storageFolder
	world level
	worldLoadListener progressListener
	z chunkTypeCache
	a ()Lnet/minecraft/server/LightEngineThreaded; getLightEngine
	a (IIILjava/util/List;)Lcom/mojang/datafixers/util/Either; lambda$getChunkRangeFuture$1
	a (JILnet/minecraft/server/PlayerChunk;I)Lnet/minecraft/server/PlayerChunk; updateChunkScheduling
	a (JLnet/minecraft/server/PlayerChunk;)V scheduleUnload
	a (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$unpackTicks$37
	a (Ljava/io/Writer;)V dumpChunks
	a (Ljava/util/List;)Lcom/mojang/datafixers/util/Either; lambda$null$29
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String; printFuture
	a (Lnet/minecraft/server/Chunk;)Ljava/util/concurrent/CompletableFuture; packTicks
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/lang/String; getChunkDebugData
	a (Lnet/minecraft/server/ChunkCoordIntPair;II)I checkerboardDistance
	a (Lnet/minecraft/server/ChunkCoordIntPair;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture; getChunkRangeFuture
	a (Lnet/minecraft/server/ChunkCoordIntPair;I[Lnet/minecraft/server/Packet;Lnet/minecraft/server/EntityPlayer;)V lambda$setViewDistance$39
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lcom/mojang/datafixers/util/Either;)V lambda$postProcess$34
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/Chunk;)Lcom/mojang/datafixers/util/Either; lambda$null$33
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkStatus$Type;)B markPosition
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/Entity;)D euclideanDistanceSquared
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/EntityPlayer;)Z lambda$noPlayersCloseForSpawning$45
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/EntityPlayer;Z)I access$700
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/PlayerChunk$Failure;)Ljava/util/concurrent/CompletableFuture; lambda$null$19
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/PlayerChunk;Lnet/minecraft/server/ChunkStatus;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletionStage; lambda$scheduleChunkGeneration$20
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/PlayerChunk;Lnet/minecraft/server/ChunkStatus;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; lambda$null$18
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)Ljava/util/stream/Stream; getPlayers
	a (Lnet/minecraft/server/ChunkCoordIntPair;ZLnet/minecraft/server/EntityPlayer;)Z lambda$getPlayers$46
	a (Lnet/minecraft/server/ChunkStatus;)Ljava/lang/String; lambda$scheduleChunkGeneration$16
	a (Lnet/minecraft/server/ChunkStatus;I)Lnet/minecraft/server/ChunkStatus; getDependencyStatus
	a (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/PlayerChunk;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletionStage; lambda$schedule$13
	a (Lnet/minecraft/server/EntityPlayer;Z)V updatePlayerStatus
	a (Lnet/minecraft/server/EntityPlayer;[Lnet/minecraft/server/Packet;Lnet/minecraft/server/Chunk;)V playerLoadedChunk
	a (Lnet/minecraft/server/PlayerChunk$Failure;)Ljava/lang/String; lambda$printFuture$44
	a (Lnet/minecraft/server/PlayerChunk;)Ljava/util/concurrent/CompletableFuture; postProcess
	a (Lnet/minecraft/server/PlayerChunk;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$protoChunkToFullChunk$26
	a (Lnet/minecraft/server/PlayerChunk;Ljava/lang/Runnable;)V lambda$unpackTicks$38
	a (Lnet/minecraft/server/PlayerChunk;Ljava/lang/Void;Ljava/lang/Throwable;)V lambda$scheduleUnload$11
	a (Lnet/minecraft/server/PlayerChunk;Ljava/util/concurrent/CompletableFuture;JLnet/minecraft/server/IChunkAccess;)V lambda$scheduleUnload$10
	a (Lnet/minecraft/server/PlayerChunk;Lnet/minecraft/server/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; schedule
	a (Lnet/minecraft/server/PlayerChunk;Lnet/minecraft/server/IChunkAccess;)Lnet/minecraft/server/IChunkAccess; lambda$null$25
	a (Lnet/minecraft/server/PlayerChunkMap;)Lit/unimi/dsi/fastutil/longs/LongSet; access$300
	a (Lnet/minecraft/server/PlayerChunkMap;JILnet/minecraft/server/PlayerChunk;I)Lnet/minecraft/server/PlayerChunk; access$400
	a (Lorg/apache/commons/lang3/mutable/MutableBoolean;Lnet/minecraft/server/IChunkAccess;)V lambda$saveAllChunks$7
	a ([Lnet/minecraft/server/Packet;Lnet/minecraft/server/Chunk;Lnet/minecraft/server/EntityPlayer;)V lambda$null$32
	b ()Z promoteChunkMap
	b (I)Lnet/minecraft/server/ChunkStatus; lambda$postProcess$28
	b (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$postProcess$30
	b (Ljava/util/List;)Lnet/minecraft/server/Chunk; lambda$null$3
	b (Ljava/util/function/BooleanSupplier;)V processUnloads
	b (Lnet/minecraft/server/Chunk;)V lambda$packTicks$47
	b (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; getEntityTickingRangeFuture
	b (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/Entity;)I checkerboardDistance
	b (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/EntityPlayer;Z)I checkerboardDistance
	b (Lnet/minecraft/server/ChunkStatus;I)Lnet/minecraft/server/ChunkStatus; lambda$scheduleChunkGeneration$15
	b (Lnet/minecraft/server/EntityPlayer;)Z skipPlayer
	b (Lnet/minecraft/server/IChunkAccess;)Ljava/util/Optional; lambda$dumpChunks$40
	b (Lnet/minecraft/server/PlayerChunk;)Ljava/util/concurrent/CompletableFuture; unpackTicks
	b (Lnet/minecraft/server/PlayerChunk;Ljava/lang/Runnable;)V lambda$postProcess$35
	b (Lnet/minecraft/server/PlayerChunk;Lnet/minecraft/server/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; scheduleChunkGeneration
	b (Lnet/minecraft/server/PlayerChunk;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$null$17
	b (Lnet/minecraft/server/PlayerChunkMap;)Lnet/minecraft/server/WorldServer; access$500
	broadcastIncludingSelf (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Packet;)V broadcastAndSend
	c ()I getTickingGenerated
	c (I)Lnet/minecraft/server/ChunkStatus; lambda$getEntityTickingRangeFuture$2
	c (J)Ljava/util/function/IntSupplier; getChunkQueueLevel
	c (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$getEntityTickingRangeFuture$4
	c (Lnet/minecraft/server/Chunk;)Ljava/lang/String; lambda$printFuture$43
	c (Lnet/minecraft/server/ChunkCoordIntPair;)V releaseLightTicket
	c (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/SectionPosition; updatePlayerPos
	c (Lnet/minecraft/server/IChunkAccess;)Lnet/minecraft/server/Chunk; lambda$null$36
	c (Lnet/minecraft/server/PlayerChunk;)Ljava/util/concurrent/CompletableFuture; protoChunkToFullChunk
	c (Lnet/minecraft/server/PlayerChunk;Ljava/lang/Runnable;)V lambda$postProcess$31
	c (Lnet/minecraft/server/PlayerChunk;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$null$12
	c (Lnet/minecraft/server/PlayerChunkMap;)I access$600
	d ()I size
	d (J)I lambda$getChunkQueueLevel$0
	d (Lnet/minecraft/server/Chunk;)Ljava/lang/Integer; lambda$dumpChunks$42
	d (Lnet/minecraft/server/IChunkAccess;)Z lambda$saveAllChunks$6
	d (Lnet/minecraft/server/PlayerChunk;)Lnet/minecraft/server/PlayerChunk$State; lambda$null$24
	d (Lnet/minecraft/server/PlayerChunk;Ljava/lang/Runnable;)V lambda$protoChunkToFullChunk$27
	e ()Lzs$a; getDistanceManager
	e (Lnet/minecraft/server/Chunk;)Ljava/lang/Integer; lambda$dumpChunks$41
	e (Lnet/minecraft/server/PlayerChunk;)V lambda$saveAllChunks$9
	e (Lnet/minecraft/server/PlayerChunk;Ljava/lang/Runnable;)V lambda$scheduleChunkGeneration$21
	f ()Ljava/lang/Iterable; getChunks
	f (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; scheduleChunkLoad
	f (Lnet/minecraft/server/PlayerChunk;)Lnet/minecraft/server/IChunkAccess; lambda$saveAllChunks$5
	g ()V tick
	g (Lnet/minecraft/server/ChunkCoordIntPair;)V markPositionReplaceable
	getUpdatingChunk (J)Lnet/minecraft/server/PlayerChunk; getUpdatingChunkIfPresent
	getVisibleChunk (J)Lnet/minecraft/server/PlayerChunk; getVisibleChunkIfPresent
	h ()Lnet/minecraft/server/VillagePlace; getPoiManager
	h (Lnet/minecraft/server/ChunkCoordIntPair;)Z isExistingChunkFull
	isOutsideOfRange (Lnet/minecraft/server/ChunkCoordIntPair;)Z noPlayersCloseForSpawning
	j ()Z lambda$saveAllChunks$8
	j (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/lang/String; lambda$releaseLightTicket$23
	k (Lnet/minecraft/server/ChunkCoordIntPair;)V lambda$releaseLightTicket$22
	l (Lnet/minecraft/server/ChunkCoordIntPair;)Lcom/mojang/datafixers/util/Either; lambda$scheduleChunkLoad$14
	movePlayer (Lnet/minecraft/server/EntityPlayer;)V move
	readChunkData (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/NBTTagCompound; readChunk
	save (Z)V saveAllChunks
	saveChunk (Lnet/minecraft/server/IChunkAccess;)Z save
	sendChunk (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ChunkCoordIntPair;[Lnet/minecraft/server/Packet;ZZ)V updateChunkTracking
	unloadChunks (Ljava/util/function/BooleanSupplier;)V tick
dfa com/mojang/blaze3d/shaders/Effect
	a ()I getId
	b ()V markDirty
	c ()Ldfb; getVertexProgram
	d ()Ldfb; getFragmentProgram
net/minecraft/server/PathfinderGoalPerch net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal
	a entity
	b owner
	c isSittingOnShoulder
	C_ ()Z isInterruptable
	a ()Z canUse
	c ()V start
	e ()V tick
net/minecraft/server/RegionFile$ChunkBuffer net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer
	a this$0
	b pos
dfc com/mojang/blaze3d/shaders/ProgramManager
	a LOGGER
	a ()I createProgram
	a (I)V glUseProgram
	a (Ldfa;)V releaseProgram
	b (Ldfa;)V linkProgram
dfb com/mojang/blaze3d/shaders/Program
	a type
	b name
	c id
	d references
	a ()V close
	a (Ldfa;)V attachToEffect
	a (Ldfb$a;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Ldfb; compileShader
	b ()Ljava/lang/String; getName
dfe com/mojang/blaze3d/vertex/BufferBuilder
	g LOGGER
	h buffer
	i vertexCounts
	j lastRenderedCountIndex
	k totalRenderedBytes
	l nextElementByte
	m totalUploadedBytes
	n vertices
	o currentElement
	p elementIndex
	q mode
	r format
	s fastFormat
	t fullFormat
	u building
	a ()V ensureVertexCapacity
	a (FFF)V sortQuads
	a (FFFFFFFFFIIFFF)V vertex
	a (IB)V putByte
	a (IF)V putFloat
	a (IIII)Ldfn; color
	a (ILdfo;)V begin
	a (IS)V putShort
	a (Ldfe$b;)V restoreState
	a (Ldfo;)V switchFormat
	a (Ljava/nio/FloatBuffer;FFFII)F getQuadDistanceFromPlayer
	a (Ljava/nio/FloatBuffer;I)V limitToVertex
	a ([FII)I lambda$sortQuads$0
	b ()Ldfe$b; getState
	c ()V end
	c (I)V ensureCapacity
	d ()V endVertex
	d (I)I roundUp
	e ()V nextElement
	f ()Lcom/mojang/datafixers/util/Pair; popNextBuffer
	g ()V clear
	h ()V discard
	i ()Ldfp; currentElement
	j ()Z building
dfd com/mojang/blaze3d/shaders/Uniform
	a LOGGER
	b location
	c count
	d type
	e intValues
	f floatValues
	g name
	h dirty
	i parent
	a ()Ljava/lang/String; getName
	a (F)V set
	a (FF)V set
	a (FFF)V set
	a (FFFF)V set
	a (I)V setLocation
	a (II)V uploadInteger
	a (IIII)V setSafe
	a (ILjava/lang/CharSequence;)I glGetUniformLocation
	a (Ljava/lang/String;)I getTypeFromString
	a (Lnet/minecraft/server/Matrix4f;)V set
	a ([F)V set
	b ()V upload
	b (FFFF)V setSafe
	b (ILjava/lang/CharSequence;)I glGetAttribLocation
	c ()V markDirty
	d ()V uploadAsInteger
	e ()V uploadAsFloat
	f ()V uploadAsMatrix
eaf$r net/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard
	V writeColor
	W writeDepth
	a (ZZ)V lambda$new$1
	b (ZZ)V lambda$new$0
dfg com/mojang/blaze3d/vertex/BufferVertexConsumer
	a (DDD)Ldfn; vertex
	a (F)B normalIntValue
	a (FF)Ldfn; uv
	a (IB)V putByte
	a (IF)V putFloat
	a (II)Ldfn; overlayCoords
	a (IIII)Ldfn; color
	a (IS)V putShort
	a (SSI)Ldfn; uvShort
	b (FFF)Ldfn; normal
	b (II)Ldfn; uv2
	e ()V nextElement
	i ()Ldfp; currentElement
dff com/mojang/blaze3d/vertex/BufferUploader
	a (Ldfe;)V end
	a (Ljava/nio/ByteBuffer;ILdfo;I)V _end
	b (Ldfe;)V lambda$end$0
dfi com/mojang/blaze3d/vertex/DefaultedVertexConsumer
	a defaultColorSet
	b defaultR
	c defaultG
	d defaultB
	e defaultA
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
dfh com/mojang/blaze3d/vertex/DefaultVertexFormat
	a ELEMENT_POSITION
	b ELEMENT_COLOR
	c ELEMENT_UV0
	d ELEMENT_UV1
	e ELEMENT_UV2
	f ELEMENT_NORMAL
	g ELEMENT_PADDING
	h BLOCK
	i NEW_ENTITY
	j PARTICLE
	k POSITION
	l POSITION_COLOR
	m POSITION_COLOR_LIGHTMAP
	n POSITION_TEX
	o POSITION_COLOR_TEX
	p POSITION_TEX_COLOR
	q POSITION_COLOR_TEX_LIGHTMAP
	r POSITION_TEX_LIGHTMAP_COLOR
	s POSITION_TEX_COLOR_NORMAL
eaf$n net/minecraft/client/renderer/RenderStateShard$ShadeModelStateShard
	V smooth
	a (Z)V lambda$new$0
	c ()V lambda$new$1
dfk com/mojang/blaze3d/vertex/SheetedDecalTextureGenerator
	g delegate
	h cameraInversePose
	i normalInversePose
	j x
	k y
	l z
	m overlayU
	n overlayV
	o lightCoords
	p nx
	q ny
	r nz
	a ()V resetState
	a (DDD)Ldfn; vertex
	a (FF)Ldfn; uv
	a (II)Ldfn; overlayCoords
	a (IIII)Ldfn; color
	b (FFF)Ldfn; normal
	b (II)Ldfn; uv2
	d ()V endVertex
eaf$o net/minecraft/client/renderer/RenderStateShard$TextureStateShard
	V texture
	W blur
	X mipmap
	a (Lnet/minecraft/server/MinecraftKey;ZZ)V lambda$new$0
	c ()Ljava/util/Optional; texture
	d ()V lambda$new$3
	e ()V lambda$new$2
	f ()V lambda$new$1
dfj com/mojang/blaze3d/vertex/PoseStack
	a poseStack
	a ()V pushPose
	a (DDD)V translate
	a (FFF)V scale
	a (Ljava/util/ArrayDeque;)V lambda$new$0
	a (Lnet/minecraft/server/Quaternion;)V mulPose
	b ()V popPose
	c ()Ldfj$a; last
	d ()Z clear
eaf$p net/minecraft/client/renderer/RenderStateShard$TexturingStateShard
dfm com/mojang/blaze3d/vertex/VertexBuffer
	a id
	b format
	c vertexCount
	a ()V bind
	a (Ldfe;)V upload
	a (Ljava/lang/Integer;)V lambda$new$0
	a (Ljava/lang/Runnable;)V lambda$uploadLater$4
	a (Lnet/minecraft/server/Matrix4f;I)V draw
	b ()V unbind
	b (Ldfe;)Ljava/util/concurrent/CompletableFuture; uploadLater
	c ()Ljava/lang/Integer; lambda$unbind$5
	c (Ldfe;)V upload_
	d ()Ljava/lang/Integer; lambda$bind$1
	d (Ldfe;)V lambda$uploadLater$3
	e (Ldfe;)V lambda$upload$2
net/minecraft/server/WorldGenBlockPlacers net/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType
	a SIMPLE_BLOCK_PLACER
	b DOUBLE_PLANT_PLACER
	c COLUMN_PLACER
	d codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/WorldGenBlockPlacers; register
eaf$q net/minecraft/client/renderer/RenderStateShard$TransparencyStateShard
dfl com/mojang/blaze3d/vertex/Tesselator
	a builder
	b INSTANCE
	a ()Ldfl; getInstance
	b ()V end
	c ()Ldfe; getBuilder
eaf$j net/minecraft/client/renderer/RenderStateShard$OffsetTexturingStateShard
	V uOffset
	W vOffset
	a (FF)V lambda$new$0
	c ()V lambda$new$1
dfo com/mojang/blaze3d/vertex/VertexFormat
	a elements
	b offsets
	c vertexSize
	a ()I getIntegerSize
	a (J)V setupBufferState
	b ()I getVertexSize
	b (J)V lambda$setupBufferState$0
	c ()Lcom/google/common/collect/ImmutableList; getElements
	d ()V clearBufferState
net/minecraft/server/DedicatedPlayerList net/minecraft/server/dedicated/DedicatedPlayerList
	a LOGGER
	A ()V saveOps
	B ()V loadWhiteList
	C ()V saveWhiteList
	a ()V reloadWhiteList
	a (Lcom/mojang/authlib/GameProfile;)V op
	a (Z)V setUsingWhiteList
	b (Lcom/mojang/authlib/GameProfile;)V deop
	c ()Lnet/minecraft/server/MinecraftServer; getServer
	c (Lcom/mojang/authlib/GameProfile;)V blackList
	d (Lcom/mojang/authlib/GameProfile;)V whiteList
	e (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	f (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	v ()V saveIpBanList
	w ()V saveUserBanList
	x ()V loadIpBanList
	y ()V loadUserBanList
	z ()V loadOps
eaf$k net/minecraft/client/renderer/RenderStateShard$OutputStateShard
dfn com/mojang/blaze3d/vertex/VertexConsumer
	f LOGGER
	a (DDD)Ldfn; vertex
	a (FF)Ldfn; uv
	a (FFFF)Ldfn; color
	a (FFFFFFFFFIIFFF)V vertex
	a (I)Ldfn; uv2
	a (II)Ldfn; overlayCoords
	a (IIII)Ldfn; color
	a (Ldfj$a;Leas;FFFII)V putBulkData
	a (Ldfj$a;Leas;[FFFF[IIZ)V putBulkData
	a (Lnet/minecraft/server/Matrix3f;FFF)Ldfn; normal
	a (Lnet/minecraft/server/Matrix4f;FFF)Ldfn; vertex
	b (FFF)Ldfn; normal
	b (I)Ldfn; overlayCoords
	b (II)Ldfn; uv2
	b (IIII)V defaultColor
	d ()V endVertex
	k ()V unsetDefaultColor
eaf$l net/minecraft/client/renderer/RenderStateShard$OverlayStateShard
	a (Z)V lambda$new$1
	b (Z)V lambda$new$0
dfq com/mojang/blaze3d/vertex/VertexMultiConsumer
	a (Ldfn;Ldfn;)Ldfn; create
eaf$m net/minecraft/client/renderer/RenderStateShard$PortalTexturingStateShard
	V iteration
	a (I)V lambda$new$0
	c ()V lambda$new$1
dfp com/mojang/blaze3d/vertex/VertexFormatElement
	a LOGGER
	b type
	c usage
	d index
	e count
	f byteSize
	a ()Ldfp$a; getType
	a (ILdfp$b;)Z supportsUsage
	a (JI)V setupBufferState
	b ()Ldfp$b; getUsage
	c ()I getIndex
	d ()I getByteSize
	e ()V clearBufferState
eaf$f net/minecraft/client/renderer/RenderStateShard$FogStateShard
dfs com/mojang/realmsclient/KeyCombo
	a chars
	b matchIndex
	c onCompletion
	a ()V reset
	a (C)Z keyPressed
eaf$g net/minecraft/client/renderer/RenderStateShard$LayeringStateShard
dfr com/mojang/math/Vector3d
	a x
	b y
	c z
eaf$h net/minecraft/client/renderer/RenderStateShard$LightmapStateShard
	a (Z)V lambda$new$1
	b (Z)V lambda$new$0
dfu com/mojang/realmsclient/Unit
	a B
	b KB
	c MB
	d GB
	e $VALUES
	a (J)Ldfu; getLargest
	a (JLdfu;)D convertTo
	b (J)Ljava/lang/String; humanReadable
	b (JLdfu;)Ljava/lang/String; humanReadable
eaf$i net/minecraft/client/renderer/RenderStateShard$LineStateShard
	V width
	a (Ljava/util/OptionalDouble;)V lambda$new$1
	b (Ljava/util/OptionalDouble;)V lambda$new$0
dft com/mojang/realmsclient/RealmsMainScreen
	A DARKEN_LOCATION
	B CROSS_ICON_LOCATION
	C TRIAL_ICON_LOCATION
	D BUTTON_LOCATION
	E NO_PENDING_INVITES_TEXT
	F PENDING_INVITES_TEXT
	G TRIAL_MESSAGE_LINES
	H SERVER_UNITIALIZED_TEXT
	I SUBSCRIPTION_EXPIRED_TEXT
	J SUBSCRIPTION_RENEW_TEXT
	K TRIAL_EXPIRED_TEXT
	L SUBSCRIPTION_CREATE_TEXT
	M SELECT_MINIGAME_PREFIX
	N POPUP_TEXT
	O SERVER_EXPIRED_TOOLTIP
	P SERVER_EXPIRES_SOON_TOOLTIP
	Q SERVER_EXPIRES_IN_DAY_TOOLTIP
	R SERVER_OPEN_TOOLTIP
	S SERVER_CLOSED_TOOLTIP
	T LEAVE_SERVER_TOOLTIP
	U CONFIGURE_SERVER_TOOLTIP
	V SERVER_INFO_TOOLTIP
	W NEWS_TOOLTIP
	X teaserImages
	Y REALMS_DATA_FETCHER
	Z overrideConfigure
	a LOGGER
	aA hasUnreadNews
	aB newsLink
	aC carouselIndex
	aD carouselTick
	aE hasSwitchedCarouselImage
	aF keyCombos
	aG clicks
	aH connectLock
	aI formattedPopup
	aJ hoveredElement
	aK showPopupButton
	aL pendingInvitesButton
	aM newsButton
	aN createTrialButton
	aO buyARealmButton
	aP closeButton
	aa lastScrollYPosition
	ab hasParentalConsent
	ac checkedParentalConsent
	ad checkedClientCompatability
	ae realmsGenericErrorScreen
	af regionsPinged
	ag inviteNarrationLimiter
	ah dontSetConnectedToRealms
	ai lastScreen
	aj realmSelectionList
	ak selectedServerId
	al playButton
	am backButton
	an renewButton
	ao configureButton
	ap leaveButton
	aq toolTip
	ar realmsServers
	as numberOfPendingInvites
	at animTick
	au hasFetchedServers
	av popupOpenedByUser
	aw justClosedPopup
	ax trialsAvailable
	ay createdTrial
	az showingPopup
	b ON_ICON_LOCATION
	c OFF_ICON_LOCATION
	p EXPIRED_ICON_LOCATION
	q EXPIRES_SOON_ICON_LOCATION
	r LEAVE_ICON_LOCATION
	s INVITATION_ICONS_LOCATION
	t INVITE_ICON_LOCATION
	u WORLDICON_LOCATION
	v LOGO_LOCATION
	w CONFIGURE_LOCATION
	x QUESTIONMARK_LOCATION
	y NEWS_LOCATION
	z POPUP_LOCATION
	A (Ldft;)Ldjw; access$4200
	B ()Z shouldShowMessageInList
	B (Ldft;)I access$4300
	C ()Z hasParentalConsent
	C (Ldft;)Ldkr; access$4400
	D ()Z shouldShowPopupButton
	D (Ldft;)Ldkr; access$5400
	E ()V pingRegions
	E (Ldft;)Ldkr; access$5500
	F ()Ljava/util/List; getOwnedNonExpiredWorldIds
	F (Ldft;)Ldkr; access$5600
	G ()V onRenew
	G (Ldft;)Ldjw; access$5900
	H ()V checkClientCompatability
	H (Ldft;)Ldkr; access$6400
	I ()V checkUnreadNews
	I (Ldft;)Ldkr; access$6500
	J ()V checkParentalConsent
	J (Ldft;)Ldkr; access$6600
	K ()V switchToStage
	K (Ldft;)Ldkr; access$6700
	L ()V switchToLocal
	L (Ldft;)Ldkr; access$6900
	M ()V switchToProd
	M (Ldft;)Ldkr; access$7000
	N ()V stopRealmsFetcher
	N (Ldft;)Ldkr; access$7100
	O ()V saveListScrollPosition
	O (Ldft;)Ldkr; access$7200
	P ()V onClosePopup
	P (Ldft;)Ldkr; access$7300
	Q ()I popupX0
	Q (Ldft;)Ldkr; access$7400
	R ()I popupY0
	R (Ldft;)I access$7500
	S ()V lambda$pingRegions$10
	S (Ldft;)Z access$7800
	T ()V lambda$init$2
	T (Ldft;)Ljava/lang/String; access$8000
	U ()V lambda$init$1
	U (Ldft;)Z access$3200
	V ()V lambda$init$0
	V (Ldft;)I access$8200
	W (Ldft;)I access$8300
	X (Ldft;)Ldjw; access$8500
	Y (Ldft;)V access$8600
	a (CI)Z charTyped
	a (CLdfs;)V lambda$charTyped$12
	a (DD)Z isOutsidePopup
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (J)Ldgn; findServer
	a (Ldfj;II)V drawRealmsLogo
	a (Ldfj;IIF)V render
	a (Ldfj;IIIIZ)V renderMoreInfo
	a (Ldfj;IIIIZZ)V drawInvitationPendingIcon
	a (Ldfj;IIZIIZZ)V renderNews
	a (Ldfj;Ljava/util/List;II)V renderMousehoverTooltip
	a (Ldft$b;)Z lambda$removeServer$11
	a (Ldft;)Ldoq; access$200
	a (Ldft;I)I access$2802
	a (Ldft;J)Ldgn; access$2200
	a (Ldft;Ldfj;IIII)V access$4600
	a (Ldft;Ldfj;IIIII)V access$4900
	a (Ldft;Ldfj;IIIIZ)V access$8100
	a (Ldft;Ldfj;IIIIZZ)V access$7600
	a (Ldft;Ldfj;IIZIIZZ)V access$7900
	a (Ldft;Ldft$c;)Ldft$c; access$3302
	a (Ldft;Ldgn;)V access$2600
	a (Ldft;Ldlg;)V access$7700
	a (Ldft;Z)Z access$3202
	a (Ldft;[Lnet/minecraft/server/IChatBaseComponent;)V access$5700
	a (Ldgn;)V updateButtonStates
	a (Ldgn;Ldoq;)V play
	a (Ldlg;)V pendingButtonPress
	a (Ldoq;)Ldoq; access$102
	a (Lnet/minecraft/server/IResourceManager;)V updateTeaserImages
	a (Lnet/minecraft/server/MinecraftKey;)Z lambda$updateTeaserImages$14
	a (Z)Z access$602
	a ([Lnet/minecraft/server/IChatBaseComponent;)V setTooltip
	aq_ ()Z shouldShowPopup
	ar_ ()V removeSelection
	b ()V init
	b (Ldfj;)V renderLocal
	b (Ldfj;II)V drawPopup
	b (Ldfj;IIIII)V drawExpiring
	b (Ldft;)Ldjw; access$300
	b (Ldft;J)J access$2102
	b (Ldft;Ldfj;IIII)V access$4700
	b (Ldft;Ldgn;)V access$3000
	b (Ldft;Z)Z access$7802
	b (Ldgn;)Z shouldPlayButtonBeActive
	b (Ldlg;)V lambda$addButtons$9
	b (Ljava/lang/String;)Z lambda$updateTeaserImages$13
	b (Z)Z access$1402
	c ()V addButtons
	c (DD)Z inPendingInvitationArea
	c (Ldfj;)V renderStage
	c (Ldfj;IIII)V drawExpired
	c (Ldft;)Ldjw; access$400
	c (Ldft;Ldfj;IIII)V access$5000
	c (Ldft;Ldgn;)V access$3400
	c (Ldgn;)Z shouldRenewButtonBeActive
	c (Ldlg;)V lambda$addButtons$8
	c (Z)Z access$1602
	d ()V tick
	d (Ldfj;IIII)V drawOpen
	d (Ldft;)V access$500
	d (Ldft;Ldfj;IIII)V access$5200
	d (Ldft;Ldgn;)V access$3500
	d (Ldgn;)Z shouldConfigureButtonBeVisible
	d (Ldlg;)V lambda$addButtons$7
	d (Z)V leaveServer
	e ()V removed
	e (Ldfj;IIII)V drawClose
	e (Ldft;)Ldjw; access$800
	e (Ldft;Ldfj;IIII)V access$5300
	e (Ldft;Ldgn;)Z access$4800
	e (Ldgn;)Z shouldLeaveButtonBeVisible
	e (Ldlg;)V lambda$addButtons$6
	f (Ldfj;IIII)V drawLeave
	f (Ldft;)Ldjw; access$900
	f (Ldgn;)V configureClicked
	f (Ldlg;)V lambda$addButtons$5
	g ()Ldft; newScreen
	g (Ldfj;IIII)V drawConfigure
	g (Ldft;)Ldjw; access$1000
	g (Ldgn;)V leaveClicked
	g (Ldlg;)V lambda$addButtons$4
	h ()Lorg/apache/logging/log4j/Logger; access$700
	h (Ldft;)Ldjw; access$1100
	h (Ldgn;)V removeServer
	h (Ldlg;)V lambda$addButtons$3
	i ()Ldoq; access$100
	i (Ldft;)Ldjw; access$1200
	i (Ldgn;)Z isSelfOwnedServer
	j ()Ldhi; access$2000
	j (Ldft;)Ldjw; access$1300
	j (Ldgn;)Z isSelfOwnedNonExpiredServer
	k ()Ljava/util/List; access$3800
	k (Ldft;)Ldjw; access$1500
	l ()Lnet/minecraft/server/MinecraftKey; access$4100
	l (Ldft;)Ldjw; access$1700
	m ()Lnet/minecraft/server/IChatBaseComponent; access$4500
	m (Ldft;)Ldjw; access$1800
	n ()Z access$5100
	n (Ldft;)Ldjw; access$1900
	o ()Lnet/minecraft/server/MinecraftKey; access$5800
	o (Ldft;)J access$2100
	p ()Lnet/minecraft/server/IChatBaseComponent; access$6000
	p (Ldft;)Ldjw; access$2300
	q ()Lnet/minecraft/server/IChatBaseComponent; access$6100
	q (Ldft;)Ldjw; access$2400
	r ()Lnet/minecraft/server/IChatBaseComponent; access$6200
	r (Ldft;)Ldjw; access$2500
	s ()Lnet/minecraft/server/IChatBaseComponent; access$6300
	s (Ldft;)Ldft$f; access$2700
	t ()Lnet/minecraft/server/IChatBaseComponent; access$6800
	t (Ldft;)I access$2800
	u ()Lnet/minecraft/server/MinecraftKey; access$8400
	u (Ldft;)Ljava/util/List; access$2900
	v (Ldft;)Ldlg; access$3100
	w (Ldft;)Ldft$c; access$3300
	x (Ldft;)V access$3600
	y (Ldft;)Ldkr; access$3900
	z (Ldft;)Ldjw; access$4000
eaf$b net/minecraft/client/renderer/RenderStateShard$BooleanStateShard
	V enabled
dfw com/mojang/realmsclient/client/FileUpload
	a LOGGER
	b file
	c worldId
	d slotId
	e uploadInfo
	f sessionId
	g username
	h clientVersion
	i uploadStatus
	j cancelled
	k uploadTask
	l requestConfig
	a ()V cancel
	a (I)Ldil; requestUpload
	a (JI)Z shouldRetry
	a (Ljava/util/function/Consumer;)V upload
	a (Lorg/apache/http/HttpResponse;)J getRetryDelaySeconds
	a (Lorg/apache/http/HttpResponse;Ldil$a;)V handleResponse
	a (Lorg/apache/http/client/methods/HttpPost;)V setupRequest
	a (Lorg/apache/http/client/methods/HttpPost;Lorg/apache/http/impl/client/CloseableHttpClient;)V cleanup
	b ()Z isFinished
	b (JI)Ldil; retryUploadAfter
	c ()Ldil; lambda$upload$0
eaf$c net/minecraft/client/renderer/RenderStateShard$CullStateShard
	a (Z)V lambda$new$1
	b (Z)V lambda$new$0
dfv com/mojang/realmsclient/client/FileDownload
	a LOGGER
	b cancelled
	c finished
	d error
	e extracting
	f tempFile
	g resourcePackPath
	h request
	i currentThread
	j requestConfig
	k INVALID_FILE_NAMES
	a ()V cancel
	a (Ldfv;)Z access$000
	a (Ldfv;Ljava/lang/String;Ljava/io/File;Lnet/minecraft/server/Convertable;)V access$300
	a (Ldfv;Z)Z access$202
	a (Ldha;Ldhs$a;Ljava/lang/String;Lnet/minecraft/server/Convertable;)V lambda$download$0
	a (Ldha;Ljava/lang/String;Ldhs$a;Lnet/minecraft/server/Convertable;)V download
	a (Ljava/io/File;)V deletePlayerTag
	a (Ljava/lang/String;)J contentLength
	a (Ljava/lang/String;Ljava/io/File;Lnet/minecraft/server/Convertable;)V untarGzipArchive
	b ()Z isFinished
	b (Ldfv;)Z access$100
	b (Ldfv;Z)Z access$102
	b (Ljava/lang/String;)Ljava/lang/String; findAvailableFolderName
	c ()Z isError
	c (Ldfv;)Ljava/io/File; access$500
	c (Ldfv;Z)Z access$602
	d ()Z isExtracting
	e ()Lorg/apache/logging/log4j/Logger; access$400
eaf$d net/minecraft/client/renderer/RenderStateShard$DepthTestStateShard
	V functionName
	W function
	a (I)V lambda$new$1
	b (I)V lambda$new$0
dfy com/mojang/realmsclient/client/RealmsClient
	a currentEnvironment
	b initialized
	c LOGGER
	d sessionId
	e username
	f GSON
	a ()Ldfy; create
	a (IILdgn$c;)Ldhc; fetchWorldTemplates
	a (J)Ldgn; getOwnWorld
	a (JI)Z switchSlot
	a (JILdgt;)V updateSlot
	a (JLjava/lang/String;)V uninvite
	a (JLjava/lang/String;Ljava/lang/Integer;Z)Ljava/lang/Boolean; resetWorldWithSeed
	a (JLjava/lang/String;Ljava/lang/String;)V initializeWorld
	a (Ldgb;)Ljava/lang/String; execute
	a (Ldgj;)V sendPingResults
	a (Ljava/lang/String;)V acceptInvitation
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; url
	b ()V switchToStage
	b (J)Ldgo; join
	b (JI)Ldha; requestDownloadInfo
	b (JLjava/lang/String;)Ldgn; invite
	b (JLjava/lang/String;Ljava/lang/String;)V update
	b (Ljava/lang/String;)V rejectInvitation
	c ()V switchToProd
	c (J)V uninviteMyselfFrom
	c (JLjava/lang/String;)V restoreWorld
	c (Ljava/lang/String;)Ljava/lang/String; url
	d ()V switchToLocal
	d (J)Ldge; backupsFor
	d (JLjava/lang/String;)Ljava/lang/Boolean; putIntoMinigameMode
	e ()Ldgp; listWorlds
	e (J)Ljava/lang/Boolean; open
	e (JLjava/lang/String;)Ldgg; op
	f ()Ldgs; getLiveStats
	f (J)Ljava/lang/Boolean; close
	f (JLjava/lang/String;)Ldgg; deop
	g ()Ljava/lang/Boolean; mcoEnabled
	g (J)Ldgx; subscriptionFor
	g (JLjava/lang/String;)Ljava/lang/Boolean; resetWorldWithTemplate
	h ()Ljava/lang/Boolean; stageAvailable
	h (J)V deleteWorld
	h (JLjava/lang/String;)Ldgy; requestUploadInfo
	i ()Ldfy$a; clientCompatible
	j ()I pendingInvitesCount
	k ()Ldgi; pendingInvites
	l ()V agreeToTos
	m ()Ldgm; getNews
	n ()Ljava/lang/Boolean; trialAvailable
eaf$e net/minecraft/client/renderer/RenderStateShard$DiffuseLightingStateShard
	a (Z)V lambda$new$1
	b (Z)V lambda$new$0
dfx com/mojang/realmsclient/client/Ping
	a ()Ljava/util/List; pingAllRegions
	a (Ljava/lang/String;)I ping
	a (Ljava/net/Socket;)V close
	a ([Ldfx$a;)Ljava/util/List; ping
	b ()J now
net/minecraft/server/NBTTagByte net/minecraft/nbt/ByteTag
	a TYPE
	b ZERO
	c ONE
	a ()B getId
	a (B)Lnet/minecraft/server/NBTTagByte; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (Z)Lnet/minecraft/server/NBTTagByte; valueOf
	b ()Lnet/minecraft/server/NBTTagType; getType
	c ()Lnet/minecraft/server/NBTBase; copy
	d ()Lnet/minecraft/server/NBTTagByte; copy
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
dic$1 com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$1
	a this$0
	a (Ldhc;Ldhc;Ldhc;Ldhc;)V lambda$run$0
dfz com/mojang/realmsclient/client/RealmsClientConfig
	a proxy
	a ()Ljava/net/Proxy; getProxy
	a (Ljava/net/Proxy;)V setProxy
crc$a net/minecraft/world/level/levelgen/structure/JunglePyramidPiece$MossStoneSelector
	a (Ljava/util/Random;IIIZ)V next
net/minecraft/server/ContainerEnchantTable net/minecraft/world/inventory/EnchantmentMenu
	containerAccess access
	enchantments enchantClue
	h random
	i enchantmentSeed
	levels levelClue
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;I)Z clickMenuButton
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$removed$2
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/ItemStack;II)Ljava/util/List; getEnchantmentList
	a (Lnet/minecraft/server/ItemStack;ILnet/minecraft/server/EntityHuman;ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$clickMenuButton$1
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$slotsChanged$0
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()I getGoldCount
	f ()I getEnchantmentSeed
eaf$a net/minecraft/client/renderer/RenderStateShard$AlphaStateShard
	V cutoff
	a (F)V lambda$new$0
	c ()V lambda$new$1
net/minecraft/server/BlockPropertySlabType net/minecraft/world/level/block/state/properties/SlabType
	d name
	e $VALUES
	a ()Ljava/lang/String; getSerializedName
dic$2 com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$2
	a $SwitchMap$com$mojang$realmsclient$dto$WorldTemplate$WorldTemplateType
	b $SwitchMap$com$mojang$realmsclient$gui$screens$RealmsResetWorldScreen$ResetType
dgb com/mojang/realmsclient/client/Request
	a connection
	b url
	c connected
	a ()I getRetryAfterHeader
	a (Ljava/io/InputStream;)Ljava/lang/String; read
	a (Ljava/lang/String;)Ldgb; get
	a (Ljava/lang/String;II)Ldgb; get
	a (Ljava/lang/String;Ljava/lang/String;)V cookie
	a (Ljava/lang/String;Ljava/lang/String;II)Ldgb; post
	a (Ljava/net/HttpURLConnection;)I getRetryAfterHeader
	a (Ljava/net/HttpURLConnection;Ljava/lang/String;)Ljava/lang/String; getHeader
	a (Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V cookie
	b ()I responseCode
	b (Ljava/lang/String;)Ldgb; delete
	b (Ljava/lang/String;Ljava/lang/String;)Ldgb; post
	b (Ljava/lang/String;Ljava/lang/String;II)Ldgb; put
	c ()Ljava/lang/String; text
	c (Ljava/lang/String;)Ljava/lang/String; getHeader
	c (Ljava/lang/String;Ljava/lang/String;)Ldgb; put
	d ()Ldgb; connect
	e ()Ldgb; doConnect
	f ()V dispose
dga com/mojang/realmsclient/client/RealmsError
	a LOGGER
	b errorMessage
	c errorCode
	a ()Ljava/lang/String; getErrorMessage
	a (Ljava/lang/String;)Ldga; create
	b ()I getErrorCode
dgd com/mojang/realmsclient/dto/Backup
	a backupId
	b lastModifiedDate
	c size
	d metadata
	e changeList
	f LOGGER
	g uploadedVersion
	a ()Z isUploadedVersion
	a (Lcom/google/gson/JsonElement;)Ldgd; parse
	a (Ljava/lang/String;)Ljava/lang/String; format
	a (Z)V setUploadedVersion
dgc com/mojang/realmsclient/client/UploadStatus
	a bytesWritten
	b totalBytes
dgf com/mojang/realmsclient/dto/GuardedSerializer
	a gson
	a (Ldgv;)Ljava/lang/String; toJson
	a (Ljava/lang/String;Ljava/lang/Class;)Ldgv; fromJson
dge com/mojang/realmsclient/dto/BackupList
	a backups
	b LOGGER
	a (Ljava/lang/String;)Ldge; parse
dgh com/mojang/realmsclient/dto/PendingInvite
	a invitationId
	b worldName
	c worldOwnerName
	d worldOwnerUuid
	e date
	f LOGGER
	a (Lcom/google/gson/JsonObject;)Ldgh; parse
net/minecraft/server/PacketPlayOutBlockAction net/minecraft/network/protocol/game/ClientboundBlockEventPacket
	a pos
	b b0
	c b1
	d block
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getB0
	d ()I getB1
	e ()Lnet/minecraft/server/Block; getBlock
net/minecraft/server/BlockCoralPlant net/minecraft/world/level/block/CoralPlantBlock
	a SHAPE
	c deadBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
dgg com/mojang/realmsclient/dto/Ops
	a ops
	a (Ljava/lang/String;)Ldgg; parse
dgj com/mojang/realmsclient/dto/PingResult
	a pingResults
	b worldIds
dgi com/mojang/realmsclient/dto/PendingInvitesList
	a pendingInvites
	b LOGGER
	a (Ljava/lang/String;)Ldgi; parse
net/minecraft/server/ResourcePackFile net/minecraft/server/packs/FilePackResources
	b SPLITTER
	c zipFile
	a (Ljava/lang/String;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	b ()Ljava/util/zip/ZipFile; getOrCreateZipFile
	c (Ljava/lang/String;)Z hasResource
dxx$1 net/minecraft/client/particle/NoteParticle$1
dgl com/mojang/realmsclient/dto/RealmsDescriptionDto
	a name
	b description
dgk com/mojang/realmsclient/dto/PlayerInfo
	a name
	b uuid
	c operator
	d accepted
	e online
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)V setName
	a (Z)V setOperator
	b ()Ljava/lang/String; getUuid
	b (Ljava/lang/String;)V setUuid
	b (Z)V setAccepted
	c ()Z isOperator
	c (Z)V setOnline
	d ()Z getAccepted
	e ()Z getOnline
dgn com/mojang/realmsclient/dto/RealmsServer
	a id
	b remoteSubscriptionId
	c name
	d motd
	e state
	f owner
	g ownerUUID
	h players
	i slots
	j expired
	k expiredTrial
	l daysLeft
	m worldType
	n activeSlot
	o minigameName
	p minigameId
	q minigameImage
	r serverPing
	s LOGGER
	a ()Ljava/lang/String; getDescription
	a (I)Ljava/lang/String; getWorldName
	a (Lcom/google/gson/JsonArray;)Ljava/util/List; parseInvited
	a (Lcom/google/gson/JsonObject;)Ldgn; parse
	a (Ldgk;Ldgk;)I lambda$sortInvited$0
	a (Ldgn;)V sortInvited
	a (Ldgr;)V updateServerPing
	a (Ljava/lang/String;)V setName
	a (Ljava/util/Map;)Ljava/util/Map; cloneSlots
	b ()Ljava/lang/String; getName
	b (Lcom/google/gson/JsonArray;)Ljava/util/Map; parseSlots
	b (Ljava/lang/String;)V setDescription
	c ()Ljava/lang/String; getMinigameName
	c (Ljava/lang/String;)Ldgn; parse
	d ()Ldgn; clone
	d (Ljava/lang/String;)Ldgn$b; getState
	e ()Ljava/util/Map; createEmptySlots
	e (Ljava/lang/String;)Ldgn$c; getWorldType
dyj$a net/minecraft/client/particle/SmokeParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dgm com/mojang/realmsclient/dto/RealmsNews
	a newsLink
	b LOGGER
	a (Ljava/lang/String;)Ldgm; parse
dgp com/mojang/realmsclient/dto/RealmsServerList
	a servers
	b LOGGER
	a (Ljava/lang/String;)Ldgp; parse
net/minecraft/server/ArgumentScoreboardCriteria net/minecraft/commands/arguments/ObjectiveCriteriaArgument
	a ERROR_INVALID_VALUE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentScoreboardCriteria; criteria
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IScoreboardCriteria; parse
	a (Lcom/mojang/brigadier/StringReader;ILjava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$parse$1
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IScoreboardCriteria; getCriteria
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/StatisticWrapper;Ljava/lang/Object;)Ljava/lang/String; getName
dgo com/mojang/realmsclient/dto/RealmsServerAddress
	a address
	b resourcePackUrl
	c resourcePackHash
	d LOGGER
	a (Ljava/lang/String;)Ldgo; parse
dgr com/mojang/realmsclient/dto/RealmsServerPlayerList
	a serverId
	b players
	c LOGGER
	d JSON_PARSER
	a (Lcom/google/gson/JsonArray;)Ljava/util/List; parsePlayers
	a (Lcom/google/gson/JsonObject;)Ldgr; parse
cf$a net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance
	a item
	b entity
	a (Lbg$b;Lbq$a;Lbg$b;)Lcf$a; itemUsedOnEntity
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
dgq com/mojang/realmsclient/dto/RealmsServerPing
	a nrOfPlayers
	b playerList
dgt com/mojang/realmsclient/dto/RealmsWorldOptions
	a pvp
	b spawnAnimals
	c spawnMonsters
	d spawnNPCs
	e spawnProtection
	f commandBlocks
	g forceGameMode
	h difficulty
	i gameMode
	j slotName
	k templateId
	l templateImage
	m adventureMap
	n empty
	o DEFAULT_TEMPLATE_IMAGE
	a ()Ldgt; createDefaults
	a (I)Ljava/lang/String; getSlotName
	a (Lcom/google/gson/JsonObject;)Ldgt; parse
	a (Z)V setEmpty
	b ()Ldgt; createEmptyDefaults
	b (I)Ljava/lang/String; getDefaultSlotName
	c ()Ljava/lang/String; toJson
	d ()Ldgt; clone
dgs com/mojang/realmsclient/dto/RealmsServerPlayerLists
	a servers
	b LOGGER
	a (Ljava/lang/String;)Ldgs; parse
dgv com/mojang/realmsclient/dto/ReflectionBasedSerialization
net/minecraft/server/WorldGenFeatureBastionBridge net/minecraft/data/worldgen/BastionBridgePools
	a ()V bootstrap
net/minecraft/server/PathfinderGoalPanic net/minecraft/world/entity/ai/goal/PanicGoal
	a mob
	b speedModifier
	c posX
	d posY
	e posZ
	f isRunning
	a ()Z canUse
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/Entity;II)Lnet/minecraft/server/BlockPosition; lookForWater
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	g ()Z findRandomPosition
	h ()Z isRunning
dgu com/mojang/realmsclient/dto/RealmsWorldResetDto
	a seed
	b worldTemplateId
	c levelType
	d generateStructures
dgx com/mojang/realmsclient/dto/Subscription
	a startDate
	b daysLeft
	c type
	d LOGGER
	a (Ljava/lang/String;)Ldgx; parse
	b (Ljava/lang/String;)Ldgx$a; typeFrom
dgw com/mojang/realmsclient/dto/RegionPingResult
	a regionName
	b ping
	a ()I ping
net/minecraft/server/DataConverterIglooMetadataRemoval net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$removeIglooPieces$2
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; removeIglooPieces
	b (Ljava/util/stream/Stream;)Ljava/lang/Boolean; lambda$fixTag$0
	c (Lcom/mojang/serialization/Dynamic;)Z isIglooPiece
	d (Lcom/mojang/serialization/Dynamic;)Z lambda$null$1
dgz com/mojang/realmsclient/dto/ValueObject
	a (Ljava/lang/reflect/Field;)Ljava/lang/String; getName
	b (Ljava/lang/reflect/Field;)Z isStatic
net/minecraft/server/CommandDatapack net/minecraft/server/commands/DataPackCommand
	a ERROR_UNKNOWN_PACK
	b ERROR_PACK_ALREADY_ENABLED
	c ERROR_PACK_ALREADY_DISABLED
	d SELECTED_PACKS
	e UNSELECTED_PACKS
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$5
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lnet/minecraft/server/ResourcePackLoader; getPack
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lnet/minecraft/server/ResourcePackLoader;)V lambda$null$12
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	a (Ljava/util/Collection;Ljava/lang/String;)Z lambda$null$4
	a (Ljava/util/Collection;Lnet/minecraft/server/ResourcePackLoader;)Z lambda$listAvailablePacks$21
	a (Ljava/util/List;Lnet/minecraft/server/ResourcePackLoader;)V lambda$null$15
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listPacks
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ResourcePackLoader;)I disablePack
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ResourcePackLoader;Lwn$a;)I enablePack
	a (Lnet/minecraft/server/ResourcePackLoader;)Lnet/minecraft/server/IChatBaseComponent; lambda$listEnabledPacks$23
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$3
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lnet/minecraft/server/ResourcePackLoader;)V lambda$null$10
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/util/List;Lnet/minecraft/server/ResourcePackLoader;)V lambda$null$8
	b (Lnet/minecraft/server/CommandListenerWrapper;)I listAvailablePacks
	b (Lnet/minecraft/server/ResourcePackLoader;)Lnet/minecraft/server/IChatBaseComponent; lambda$listAvailablePacks$22
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	c (Lnet/minecraft/server/CommandListenerWrapper;)I listEnabledPacks
	c (Lnet/minecraft/server/ResourcePackLoader;)Lnet/minecraft/server/ResourcePackLoader; lambda$null$7
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	d (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$6
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
dgy com/mojang/realmsclient/dto/UploadInfo
	a LOGGER
	b URI_SCHEMA_PATTERN
	c worldClosed
	d token
	e uploadEndpoint
	a ()Ljava/lang/String; getToken
	a (II)I selectPortOrDefault
	a (Ljava/lang/String;)Ldgy; parse
	a (Ljava/lang/String;I)Ljava/net/URI; assembleUri
	a (Ljava/lang/String;Ljava/util/regex/Matcher;)Ljava/lang/String; ensureEndpointSchema
	b ()Ljava/net/URI; getUploadEndpoint
	b (Ljava/lang/String;)Ljava/lang/String; createRequest
	c ()Z isWorldClosed
dbg$1 net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$1
net/minecraft/server/AdvancementFrameType net/minecraft/advancements/FrameType
	d name
	e texture
	f chatColor
	g displayName
	h $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/AdvancementFrameType; byName
	b ()I getTexture
	c ()Lnet/minecraft/server/EnumChatFormat; getChatColor
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/EntityGhast$PathfinderGoalGhastMoveTowardsTarget net/minecraft/world/entity/monster/Ghast$GhastLookGoal
	a ghast
	a ()Z canUse
	e ()V tick
dha com/mojang/realmsclient/dto/WorldDownload
	a downloadLink
	b resourcePackUrl
	c resourcePackHash
	d LOGGER
	a (Ljava/lang/String;)Ldha; parse
dhc com/mojang/realmsclient/dto/WorldTemplatePaginatedList
	a templates
	b page
	c size
	d total
	e LOGGER
	a (Ljava/lang/String;)Ldhc; parse
dhb com/mojang/realmsclient/dto/WorldTemplate
	a id
	b name
	c version
	d author
	e link
	f image
	g trailer
	h recommendedPlayers
	i type
	j LOGGER
	a (Lcom/google/gson/JsonObject;)Ldhb; parse
dhe com/mojang/realmsclient/exception/RealmsHttpException
dhd com/mojang/realmsclient/exception/RealmsDefaultUncaughtExceptionHandler
	a logger
dhg com/mojang/realmsclient/exception/RetryCallException
	e delaySeconds
net/minecraft/server/LightEngineBlock net/minecraft/world/level/lighting/BlockLightEngine
	e DIRECTIONS
	f pos
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	b (JJI)I computeLevelFromNeighbor
	d (J)I getLightEmission
dhf com/mojang/realmsclient/exception/RealmsServiceException
	a httpResultCode
	b httpResponseContent
	c errorCode
	d errorMsg
net/minecraft/server/ResourcePackAbstract net/minecraft/server/packs/AbstractPackResources
	a file
	b LOGGER
	a ()Ljava/lang/String; getName
	a (Ljava/io/File;Ljava/io/File;)Ljava/lang/String; getRelativePath
	a (Ljava/lang/String;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	a (Lnet/minecraft/server/ResourcePackMetaParser;Ljava/io/InputStream;)Ljava/lang/Object; getMetadataFromStream
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	b (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Ljava/lang/String;)Z hasResource
	c (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/lang/String; getPathFromLocation
	d (Ljava/lang/String;)V logWarning
dhi com/mojang/realmsclient/gui/RealmsDataFetcher
	a LOGGER
	b scheduler
	c stopped
	d serverListUpdateTask
	e pendingInviteUpdateTask
	f trialAvailabilityTask
	g liveStatsTask
	h unreadNewsTask
	i removedServers
	j servers
	k livestats
	l pendingInvitesCount
	m trialAvailable
	n hasUnreadNews
	o newsLink
	p serverListScheduledFuture
	q pendingInviteScheduledFuture
	r trialAvailableScheduledFuture
	s liveStatsScheduledFuture
	t unreadNewsScheduledFuture
	u fetchStatus
	a ()Z isStopped
	a (Ldgn;)V removeItem
	a (Ldhi$d;)Z isFetchedSinceLastTry
	a (Ldhi;)Z access$500
	a (Ldhi;I)I access$902
	a (Ldhi;Ldgs;)Ldgs; access$1102
	a (Ldhi;Ljava/lang/String;)Ljava/lang/String; access$1302
	a (Ldhi;Ljava/util/List;)V access$600
	a (Ldhi;Z)Z access$1002
	a (Ljava/util/List;)V setServers
	b ()V init
	b (Ldhi;)Ljava/util/Map; access$700
	b (Ldhi;Z)Z access$1202
	c ()V initWithSpecificTaskList
	d ()V markClean
	e ()V forceUpdate
	f ()Ljava/util/List; getServers
	g ()I getPendingInvitesCount
	h ()Z isTrialAvailable
	i ()Ldgs; getLivestats
	j ()Z hasUnreadNews
	k ()Ljava/lang/String; newsLink
	l ()V stop
	m ()Lorg/apache/logging/log4j/Logger; access$800
	n ()V scheduleTasks
	o ()V cancelTasks
	p ()Z isActive
dhh com/mojang/realmsclient/gui/ErrorCallback
	a (Ljava/lang/String;)V error
	a (Lnet/minecraft/server/IChatBaseComponent;)V error
dhk com/mojang/realmsclient/gui/RowButton
	a width
	b height
	c xOffset
	d yOffset
	a ()I getRight
	a (I)V onClick
	a (Ldfj;IIII)V drawForRowAt
	a (Ldfj;IIZ)V draw
	a (Ldfj;Ljava/util/List;Leof;IIII)V drawButtonsInRow
	a (Leof;Ldls$a;Ljava/util/List;IDD)V rowButtonMouseClicked
	b ()I getBottom
net/minecraft/server/BlockStatePredicate net/minecraft/world/level/block/state/predicate/BlockStatePredicate
	a ANY
	b definition
	c properties
	a (Lnet/minecraft/server/Block;)Lnet/minecraft/server/BlockStatePredicate; forBlock
	a (Lnet/minecraft/server/BlockStateList;)Lnet/minecraft/server/BlockStatePredicate; forDefinition
	a (Lnet/minecraft/server/IBlockData;)Z test
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;Ljava/util/function/Predicate;)Z applies
	a (Lnet/minecraft/server/IBlockState;Ljava/util/function/Predicate;)Lnet/minecraft/server/BlockStatePredicate; where
	b (Lnet/minecraft/server/IBlockData;)Z lambda$static$0
dhj com/mojang/realmsclient/gui/RealmsWorldSlotButton
	A slotIndex
	B animTick
	C state
	a SLOT_FRAME_LOCATION
	b EMPTY_SLOT_LOCATION
	c DEFAULT_WORLD_SLOT_1
	d DEFAULT_WORLD_SLOT_2
	e DEFAULT_WORLD_SLOT_3
	v SLOT_ACTIVE_TOOLTIP
	w SWITCH_TO_MINIGAME_SLOT_TOOLTIP
	x SWITCH_TO_WORLD_SLOT_TOOLTIP
	y serverDataProvider
	z toolTipSetter
	a ()Ldhj$b; getState
	a (Ldfj;IIIIZLjava/lang/String;IJLjava/lang/String;ZZLdhj$a;Lnet/minecraft/server/IChatBaseComponent;)V drawSlotFrame
	a (Ldgn;Ljava/lang/String;ZZLdhj$a;)Lcom/mojang/datafixers/util/Pair; getTooltipAndNarration
	a (Ldgn;ZZ)Ldhj$a; getAction
	b (Ldfj;IIF)V renderButton
	d ()V tick
net/minecraft/server/PacketPlayOutEntityVelocity net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket
	a id
	b xa
	c ya
	d za
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getXa
	d ()I getYa
	e ()I getZa
dhm com/mojang/realmsclient/gui/screens/RealmsBackupScreen
	A downloadButton
	B restoreButton
	C changesButton
	D noBackups
	E serverData
	F titleLabel
	a LOGGER
	b PLUS_ICON_LOCATION
	c RESTORE_ICON_LOCATION
	p RESTORE_TOOLTIP
	q HAS_CHANGES_TOOLTIP
	r TITLE
	s NO_BACKUPS_LABEL
	t lastScrollPosition
	u lastScreen
	v backups
	w toolTip
	x backupObjectSelectionList
	y selectedBackup
	z slotId
	a ()Lorg/apache/logging/log4j/Logger; access$200
	a (I)I access$802
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldfj;Lnet/minecraft/server/IChatBaseComponent;II)V renderMousehoverTooltip
	a (Ldgd;Ljava/lang/String;)V addToChangeList
	a (Ldhm;)Ldgn; access$000
	a (Ldhm;I)I access$702
	a (Ldhm;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$402
	a (Ldhm;Ljava/util/List;)Ljava/util/List; access$302
	a (Ldhm;Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; access$1502
	a (Ldlg;)V lambda$init$3
	b ()V init
	b (I)V restoreClicked
	b (Ldhm;)Ldjw; access$100
	b (Ldhm;I)V access$900
	b (Ldlg;)V lambda$init$2
	c ()Lnet/minecraft/server/MinecraftKey; access$1300
	c (Ldhm;)Ljava/util/List; access$300
	c (Ldlg;)V lambda$init$1
	c (Z)V lambda$downloadClicked$5
	d (Ldhm;)Ldhm$a; access$500
	d (Ldlg;)V lambda$init$0
	d (Z)V lambda$restoreClicked$4
	e (Ldhm;)V access$600
	f ()Lnet/minecraft/server/IChatBaseComponent; access$1600
	f (Ldhm;)V access$1000
	g ()Lnet/minecraft/server/MinecraftKey; access$1700
	g (Ldhm;)Ldkr; access$1100
	h ()Lnet/minecraft/server/IChatBaseComponent; access$1900
	h (Ldhm;)Ldkr; access$1200
	i ()V generateChangeList
	i (Ldhm;)Ldjw; access$1400
	j (Ldhm;)Ldjw; access$1800
	k ()V updateButtonStates
	l ()Z shouldChangesButtonBeVisible
	m ()Z shouldRestoreButtonBeVisible
	n ()V downloadClicked
	o ()V downloadWorldData
	p ()V restore
ckx$a net/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory
dhl com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen
	a lastScreen
	b backup
	c backupInfoList
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldhl;)Ldjw; access$000
	a (Ldhl;Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; access$100
	a (Ldlg;)V lambda$init$0
	a (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; checkForSpecificMetadata
	b ()V init
	b (Ldhl;)Ldgd; access$200
	b (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; gameDifficultyMetadata
	c (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; gameModeMetadata
	d ()V tick
	e ()V removed
dho com/mojang/realmsclient/gui/screens/RealmsClientOutdatedScreen
	a OUTDATED_TITLE
	b OUTDATED_MESSAGES
	c INCOMPATIBLE_TITLE
	p INCOMPATIBLE_MESSAGES
	q lastScreen
	r outdated
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$0
	b ()V init
dhn com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen
	a LOGGER
	b lastScreen
	c mainScreen
	p serverData
	q serverId
	r header
	s message
	t leftX
	u rightX
	v slotsThatHasBeenDownloaded
	w animTick
	a ()V doSwitchOrReset
	a (I)I getFramePositionX
	a (III)Z keyPressed
	a (ILdlg;)V lambda$addButtons$6
	a (IZ)V lambda$downloadWorld$11
	a (J)V fetchServerData
	a (Ldfj;IIF)V render
	a (Ldfj;IIIIZLjava/lang/String;IJLjava/lang/String;Z)V drawSlotFrame
	a (Ldlg;)V lambda$init$0
	b ()V init
	b (I)V downloadWorld
	b (ILdlg;)V lambda$addButtons$4
	b (IZ)V lambda$null$3
	b (J)V lambda$fetchServerData$7
	c (ILdlg;)V lambda$addButtons$2
	d ()V tick
	e ()V removed
	i ()V addButtons
	k ()V backButtonClicked
	l ()Z isMinigame
	m ()V lambda$doSwitchOrReset$10
	n ()V lambda$null$9
	o ()V lambda$null$8
	p ()V lambda$null$5
	r ()V lambda$null$1
dhq com/mojang/realmsclient/gui/screens/RealmsConfirmScreen
	a callback
	b title1
	c title2
	p delayTicker
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	b ()V init
	b (Ldlg;)V lambda$init$0
	d ()V tick
dhp com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen
	A lastScreen
	B serverData
	C serverId
	D leftX
	E rightX
	F playersButton
	G settingsButton
	H subscriptionButton
	I optionsButton
	J backupButton
	K resetWorldButton
	L switchMinigameButton
	M stateChanged
	N animTick
	O clicks
	a LOGGER
	b ON_ICON_LOCATION
	c OFF_ICON_LOCATION
	p EXPIRED_ICON_LOCATION
	q EXPIRES_SOON_ICON_LOCATION
	r TITLE
	s WORLD_TITLE
	t MINIGAME_PREFIX
	u SERVER_EXPIRED_TOOLTIP
	v SERVER_EXPIRING_SOON_TOOLTIP
	w SERVER_EXPIRING_IN_DAY_TOOLTIP
	x SERVER_OPEN_TOOLTIP
	y SERVER_CLOSED_TOOLTIP
	z toolTip
	B ()V lambda$null$6
	a ()V stateChanged
	a (I)V addSlotButton
	a (III)Z keyPressed
	a (ILdgn;)V switchToFullSlot
	a (ILdlg;)V lambda$addSlotButton$12
	a (J)V fetchServerData
	a (Ldfj;IIF)V render
	a (Ldfj;Lnet/minecraft/server/IChatBaseComponent;II)V renderMousehoverTooltip
	a (Ldgn;)V joinRealm
	a (Ldgn;IZ)V lambda$switchToEmptySlot$19
	a (Ldgt;)V saveSlotSettings
	a (Ldhb;)V callback
	a (Ldhf;)V lambda$null$13
	a (Ldlg;)V hide
	a (Ldoq;)V closeTheWorld
	a (Ljava/lang/String;Ljava/lang/String;)V saveSettings
	a (Lnet/minecraft/server/IChatBaseComponent;)V lambda$addSlotButton$11
	a (ZLdoq;)V openTheWorld
	b ()V init
	b (I)I leftButton
	b (II)I centerButton
	b (ILdgn;)V switchToEmptySlot
	b (J)V lambda$fetchServerData$14
	b (Ldfj;IIIII)V drawExpiring
	b (Ldgn;IZ)V lambda$switchToFullSlot$16
	b (Ldlg;)V show
	c ()Ldhp; getNewScreen
	c (I)I frame
	c (Ldfj;IIII)V drawServerStatus
	c (Ldlg;)V lambda$init$9
	d ()V tick
	d (Ldfj;IIII)V drawExpired
	d (Ldlg;)V lambda$init$8
	e ()V removed
	e (Ldfj;IIII)V drawOpen
	e (Ldlg;)V lambda$init$5
	f (Ldfj;IIII)V drawClose
	f (Ldlg;)V lambda$init$4
	g (Ldlg;)V lambda$init$3
	h (Ldlg;)V lambda$init$2
	i ()V backButtonClicked
	i (Ldlg;)V lambda$init$1
	j (Ldlg;)V lambda$init$0
	k ()V disableButtons
	l ()V switchToMinigame
	m ()Z isMinigame
	n ()V hideRegularButtons
	o ()V hideMinigameButtons
	p ()V lambda$null$18
	r ()V lambda$null$17
	s ()V lambda$null$15
	t ()Ldgn; lambda$addSlotButton$10
	u ()V lambda$null$7
dhs com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen
	A finished
	B extracting
	C previousWrittenBytes
	D previousTimeSnapshot
	E bytesPersSecond
	F animTick
	G DOTS
	H dotIndex
	I checked
	J callback
	a LOGGER
	b DOWNLOAD_LOCK
	c lastScreen
	p worldDownload
	q downloadTitle
	r narrationRateLimiter
	s cancelButton
	t worldName
	u downloadStatus
	v errorMessage
	w status
	x progress
	y cancelled
	z showDots
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldfj;J)V drawDownloadSpeed0
	a (Ldlg;)V lambda$init$0
	b ()V init
	b (Ldfj;)V drawDots
	b (Ljava/lang/String;)J getContentLength
	c (Ldfj;)V drawProgressBar
	c (Z)V lambda$checkDownloadSize$1
	d ()V tick
	d (Ldfj;)V drawDownloadSpeed
	i ()V checkDownloadSize
	k ()V backButtonClicked
	l ()V downloadSave
	m ()V downloadCancelled
	n ()V lambda$downloadSave$2
net/minecraft/server/WorldGenFeatureRandom2 net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration
	a CODEC
	b features
	a (Ljava/util/function/Supplier;)Ljava/util/stream/Stream; lambda$getFeatures$1
	a (Lnet/minecraft/server/WorldGenFeatureRandom2;)Ljava/util/List; lambda$static$0
	an_ ()Ljava/util/stream/Stream; getFeatures
net/minecraft/server/ResourceKeyInvalidException net/minecraft/ResourceLocationException
dhr com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen
	a NAME_LABEL
	b DESCRIPTION_LABEL
	c server
	p lastScreen
	q nameBox
	r descriptionBox
	s createButton
	t createRealmLabel
	a (CI)Z charTyped
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	b ()V init
	b (Ldlg;)V lambda$init$0
	d ()V tick
	e ()V removed
	i ()V createWorld
	k ()Z valid
	l ()V lambda$createWorld$3
	m ()V lambda$createWorld$2
dhu com/mojang/realmsclient/gui/screens/RealmsInviteScreen
	a LOGGER
	b NAME_LABEL
	c NO_SUCH_PLAYER_ERROR_TEXT
	p profileName
	q serverData
	r configureScreen
	s lastScreen
	t errorMsg
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	a (Lnet/minecraft/server/IChatBaseComponent;)V showError
	b ()V init
	b (Ldlg;)V lambda$init$0
	d ()V tick
	e ()V removed
	i ()V onInvite
dht com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen
	a nextScreen
	b line1
	c line2
	a (Ldfj;IIF)V render
	a (Ldhf;)V errorMessage
	a (Ldlg;)V lambda$init$0
	a (Lnet/minecraft/server/IChatBaseComponent;)V errorMessage
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;)V errorMessage
	b ()V init
enm$a$1 net/minecraft/client/sounds/SoundManager$Preparations$1
	a val$soundLocation
	b val$sound
	c this$0
	a ()Lemi; getSound
	a (Lenj;)V preloadIfRequired
	e ()I getWeight
	k ()Ljava/lang/Object; getSound
dhw com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen
	a SYMBOLS
	b LOGGER
	c lastScreen
	p title
	q errorMessage
	r aborted
	s animTicks
	t task
	u buttonLength
	a ()Z aborted
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$error$1
	a (Lnet/minecraft/server/IChatBaseComponent;)V error
	b ()V init
	b (Ldlg;)V lambda$init$0
	b (Lnet/minecraft/server/IChatBaseComponent;)V setTitle
	d ()V tick
	i ()V cancelOrBackButtonClicked
	k ()V buttonsClear
dhv com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen
	a callback
	b type
	c line2
	p line3
	q yesNoQuestion
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$2
	b ()V init
	b (Ldlg;)V lambda$init$1
	c (Ldlg;)V lambda$init$0
dhy com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen
	a MESSAGE
	b nextScreen
	c messageLines
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$2
	b ()V init
	b (Ldlg;)V lambda$init$1
	c (Ldlg;)V lambda$init$0
dhx com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen
	a INVITE_ICON_LOCATION
	b TRIAL_ICON_LOCATION
	c NEWS_ICON_LOCATION
	p REALMS_DATA_FETCHER
	q numberOfPendingInvites
	r checkedMcoAvailability
	s trialAvailable
	t validClient
	u hasUnreadNews
	a (Ldfj;II)V drawIcons
	a (Ldfj;IIF)V render
	a (Z)Z access$002
	b ()V init
	b (Z)Z access$102
	d ()V tick
	e ()V removed
	i ()Z getRealmsNotificationsEnabled
	k ()Z inTitleScreen
	l ()V checkIfMcoEnabled
net/minecraft/server/TileEntityLightDetector net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity
	aj_ ()V tick
dhz com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen
	a LOGGER
	b ACCEPT_ICON_LOCATION
	c REJECT_ICON_LOCATION
	p NO_PENDING_INVITES_TEXT
	q ACCEPT_INVITE_TOOLTIP
	r REJECT_INVITE_TOOLTIP
	s lastScreen
	t toolTip
	u loaded
	v pendingInvitationSelectionList
	w titleLabel
	x selectedInvite
	y acceptButton
	z rejectButton
	a ()Lorg/apache/logging/log4j/Logger; access$100
	a (I)V updateList
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldfj;Lnet/minecraft/server/IChatBaseComponent;II)V renderMousehoverTooltip
	a (Ldhz;)Ldjw; access$000
	a (Ldhz;I)V access$600
	a (Ldhz;Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; access$1202
	a (Ldhz;Z)Z access$202
	a (Ldlg;)V lambda$init$2
	b ()V init
	b (I)V reject
	b (Ldhz;)Ldhz$b; access$300
	b (Ldhz;I)I access$802
	b (Ldlg;)V lambda$init$1
	c ()Lnet/minecraft/server/MinecraftKey; access$1000
	c (I)V accept
	c (Ldhz;)Ldjw; access$500
	c (Ldhz;I)V access$1400
	c (Ldlg;)V lambda$init$0
	d (Ldhz;)Ldjw; access$700
	d (Ldhz;I)V access$1800
	e (Ldhz;)V access$900
	f ()Lnet/minecraft/server/IChatBaseComponent; access$1300
	f (Ldhz;)Ldjw; access$1100
	g ()Lnet/minecraft/server/MinecraftKey; access$1500
	g (Ldhz;)Ldjw; access$1600
	h ()Lnet/minecraft/server/IChatBaseComponent; access$1700
	h (Ldhz;)Ldkr; access$1900
	i ()V updateButtonStates
	i (Ldhz;)Ldkr; access$2000
	j (Ldhz;)Ldkr; access$2100
	k (I)Z shouldAcceptAndRejectButtonBeVisible
net/minecraft/server/LootContextParameters net/minecraft/world/level/storage/loot/parameters/LootContextParams
	a (Ljava/lang/String;)Lnet/minecraft/server/LootContextParameter; create
net/minecraft/server/CommandSetWorldSpawn net/minecraft/server/commands/SetWorldSpawnCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;F)I setSpawn
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/LootSerializationContext net/minecraft/advancements/critereon/SerializationContext
	a INSTANCE
	b predicateGson
	a ([Lnet/minecraft/server/LootItemCondition;)Lcom/google/gson/JsonElement; serializeConditions
net/minecraft/server/MinecraftServerBeans net/minecraft/util/monitoring/jmx/MinecraftServerStatistics
	a LOGGER
	b server
	c mBeanInfo
	d attributeDescriptionByName
	a ()F getAverageTickTime
	a (I)[Ljavax/management/MBeanAttributeInfo; lambda$new$2
	a (Lank$a;)Ljavax/management/Attribute; lambda$getAttributes$3
	a (Ljava/lang/Object;)Ljavax/management/MBeanAttributeInfo; lambda$new$1
	a (Lnet/minecraft/server/MinecraftServer;)V registerJmxMonitoring
	b ()[J getTickTimes
	b (Lank$a;)Ljava/lang/String; lambda$new$0
net/minecraft/server/ItemBucket net/minecraft/world/item/BucketItem
	fluidType content
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playEmptySound
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/MovingObjectPositionBlock;)Z emptyBucket
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ItemStack; getEmptySuccessItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)V checkExtraContent
net/minecraft/server/RegionFileBitSet net/minecraft/world/level/chunk/storage/RegionBitmap
	a used
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getUsed
	a (I)I allocate
	a (II)V force
	b (II)V free
net/minecraft/server/BlockActionData net/minecraft/world/level/BlockEventData
	a pos
	b block
	c paramA
	d paramB
	a ()Lnet/minecraft/server/BlockPosition; getPos
	b ()Lnet/minecraft/server/Block; getBlock
	c ()I getParamA
	d ()I getParamB
dib com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen
	a SEED_LABEL
	b LEVEL_TYPES
	c lastScreen
	p titleLabel
	q seedEdit
	r generateStructures
	s levelTypeIndex
	t buttonTitle
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$3
	b ()V init
	b (Ldlg;)V lambda$init$2
	c (Ldlg;)V lambda$init$1
	d ()V tick
	d (Ldlg;)V lambda$init$0
	e ()V removed
	i ()Lnet/minecraft/server/IChatBaseComponent; levelTypeTitle
	k ()Lnet/minecraft/server/IChatBaseComponent; generateStructuresTitle
dia com/mojang/realmsclient/gui/screens/RealmsPlayerScreen
	A columnWidth
	B column2X
	C removeButton
	D opdeopButton
	E selectedInvitedIndex
	F selectedInvited
	G player
	H stateChanged
	I titleLabel
	J hoveredUserAction
	a LOGGER
	b OP_ICON_LOCATION
	c USER_ICON_LOCATION
	p CROSS_ICON_LOCATION
	q OPTIONS_BACKGROUND
	r NORMAL_USER_TOOLTIP
	s OP_TOOLTIP
	t REMOVE_ENTRY_TOOLTIP
	u INVITED_LABEL
	v toolTip
	w lastScreen
	x serverData
	y invitedObjectSelectionList
	z column1X
	a (I)I access$100
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldfj;Lnet/minecraft/server/IChatBaseComponent;II)V renderMousehoverTooltip
	a (Ldgg;)V updateOps
	a (Ldia;)I access$000
	a (Ldia;I)V access$700
	a (Ldia;Ldfj;IIII)V access$1300
	a (Ldlg;)V lambda$init$3
	b ()V init
	b (I)I access$200
	b (Ldia;)I access$400
	b (Ldia;I)V access$800
	b (Ldia;Ldfj;IIII)V access$1400
	b (Ldlg;)V lambda$init$2
	c (I)I access$300
	c (Ldfj;IIII)V drawRemoveIcon
	c (Ldia;)Ldgn; access$500
	c (Ldia;I)V access$900
	c (Ldia;Ldfj;IIII)V access$1500
	c (Ldlg;)V lambda$init$1
	c (Z)V lambda$uninvite$4
	d (Ldfj;IIII)V drawOpped
	d (Ldia;)Ldia$c; access$600
	d (Ldia;I)I access$1002
	d (Ldlg;)V lambda$init$0
	e ()V removed
	e (Ldfj;IIII)V drawNormal
	e (Ldia;)V access$1100
	f (Ldia;)Ldkr; access$1200
	i ()V updateButtonStates
	k ()V backButtonClicked
	k (I)Z shouldRemoveAndOpdeopButtonBeVisible
	l (I)V op
	m (I)V deop
	n (I)V uninvite
	o (I)V deleteFromInvitedList
net/minecraft/server/EntityTropicalFish net/minecraft/world/entity/animal/TropicalFish
	b COMMON_VARIANTS
	bo PATTERN_A_TEXTURE_LOCATIONS
	bp PATTERN_B_TEXTURE_LOCATIONS
	bq isSchool
	c DATA_ID_TYPE_VARIANT
	d BASE_TEXTURE_LOCATIONS
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityTropicalFish$Variant;Lnet/minecraft/server/EnumColor;Lnet/minecraft/server/EnumColor;)I calculateVariant
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	b (I)Ljava/lang/String; getPredefinedName
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (I)Z isMaxGroupSizeReached
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/ItemStack; getBucketItemStack
	eM ()Lnet/minecraft/server/SoundEffect; getFlopSound
	eV ()[F getBaseColor
	eW ()[F getPatternColor
	eX ()I getBaseVariant
	eY ()Lnet/minecraft/server/MinecraftKey; getPatternTextureLocation
	eZ ()Lnet/minecraft/server/MinecraftKey; getBaseTextureLocation
	k (Lnet/minecraft/server/ItemStack;)V saveToBucketTag
	s (I)Lnet/minecraft/server/EnumColor; getBaseColor
	t (I)Lnet/minecraft/server/EnumColor; getPatternColor
	u (I)Ljava/lang/String; getFishTypeName
	w (I)I getBaseVariant
	x (I)I getBaseColorIdx
	y (I)I getPatternColorIdx
	z (I)I getPatternVariant
did com/mojang/realmsclient/gui/screens/RealmsScreenWithCallback
	a (Ldhb;)V callback
dic com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen
	A NEW_WORLD_LOCATION
	B EXPERIENCE_LOCATION
	C INSPIRATION_LOCATION
	D templates
	E adventuremaps
	F experiences
	G inspirations
	H typeToReset
	I worldInfoToReset
	J worldTemplateToReset
	K resetTitle
	L resetWorldRunnable
	M callback
	a slot
	b LOGGER
	c lastScreen
	p serverData
	q titleLabel
	r subtitleLabel
	s title
	t subtitle
	u buttonTitle
	v subtitleColor
	w SLOT_FRAME_LOCATION
	x UPLOAD_LOCATION
	y ADVENTURE_MAP_LOCATION
	z SURVIVAL_SPAWN_LOCATION
	a ()Lorg/apache/logging/log4j/Logger; access$100
	a (I)V setSlot
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldfj;IILnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/MinecraftKey;ZZ)V drawFrame
	a (Ldhb;)V callback
	a (Ldic$c;)V resetWorld
	a (Ldic;)Ldjw; access$000
	a (Ldic;Ldfj;IILnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/MinecraftKey;ZZ)V access$900
	a (Ldic;Ldhc;)Ldhc; access$202
	a (Ldlg;)V lambda$init$6
	a (Ljava/lang/Runnable;)V switchSlot
	a (Ljava/lang/String;Ldhb;IZ)V resetWorld
	a (Lnet/minecraft/server/IChatBaseComponent;)V setResetTitle
	b ()V init
	b (I)I frame
	b (Ldhb;)V resetWorldWithTemplate
	b (Ldic$c;)V triggerResetWorld
	b (Ldic;Ldhc;)Ldhc; access$302
	b (Ldlg;)V lambda$init$5
	c (Ldic;Ldhc;)Ldhc; access$402
	c (Ldlg;)V lambda$init$4
	d (Ldic;Ldhc;)Ldhc; access$502
	d (Ldlg;)V lambda$init$3
	e ()V removed
	e (Ldlg;)V lambda$init$2
	f (Ldlg;)V lambda$init$1
	g (Ldlg;)V lambda$init$0
	i ()V switchSlot
	k ()V lambda$switchSlot$7
dif com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen
	A currentLink
	B worldType
	C clicks
	D warning
	E warningURL
	F displayWarning
	G hoverWarning
	H noTemplatesMessage
	a LOGGER
	b LINK_ICON
	c TRAILER_ICON
	p SLOT_FRAME_LOCATION
	q PUBLISHER_LINK_TOOLTIP
	r TRAILER_LINK_TOOLTIP
	s lastScreen
	t worldTemplateObjectSelectionList
	u selectedTemplate
	v title
	w selectButton
	x trailerButton
	y publisherButton
	z toolTip
	a ()Lorg/apache/logging/log4j/Logger; access$200
	a (DDI)Z mouseClicked
	a (I)I access$600
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldfj;IILjava/util/List;)V renderMultilineMessage
	a (Ldfj;Lnet/minecraft/server/IChatBaseComponent;II)V renderMousehoverTooltip
	a (Ldhc;)V fetchTemplatesAsync
	a (Ldhc;Ldfy;)Lcom/mojang/datafixers/util/Either; fetchTemplates
	a (Ldif;)Ldjw; access$100
	a (Ldif;I)I access$802
	a (Ldif;Ldhc;Ldfy;)Lcom/mojang/datafixers/util/Either; access$000
	a (Ldif;Ljava/lang/String;)Ljava/lang/String; access$702
	a (Ldif;Ljava/util/List;)Ljava/util/List; access$402
	a (Ldif;Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; access$2502
	a (Ldir$b;)I lambda$renderMultilineMessage$4
	a (Ldlg;)V lambda$init$3
	a (Lnet/minecraft/server/IChatBaseComponent;)V setTitle
	a ([Lnet/minecraft/server/IChatBaseComponent;)V setWarning
	b ()V init
	b (Ldif;)Ldif$b; access$300
	b (Ldif;I)I access$1002
	b (Ldlg;)V lambda$init$2
	c ()Lnet/minecraft/server/MinecraftKey; access$1700
	c (Ldif;)Z access$500
	c (Ldlg;)V lambda$init$1
	d ()V tick
	d (Ldif;)Ljava/lang/String; access$700
	d (Ldlg;)V lambda$init$0
	e (Ldif;)I access$800
	f ()Lnet/minecraft/server/MinecraftKey; access$2100
	f (Ldif;)V access$900
	g ()Lnet/minecraft/server/MinecraftKey; access$2300
	g (Ldif;)V access$1100
	h ()Lnet/minecraft/server/IChatBaseComponent; access$2600
	h (Ldif;)Ldkr; access$1300
	i ()Lnet/minecraft/server/IChatBaseComponent; access$2700
	i (Ldif;)Ldkr; access$1400
	j (Ldif;)Ldkr; access$1500
	k ()V updateButtonStates
	k (Ldif;)Ldkr; access$1600
	l ()Z shouldSelectButtonBeActive
	l (Ldif;)Ldjw; access$1800
	m ()Z shouldPublisherBeVisible
	m (Ldif;)Ldkr; access$1900
	n ()Ldhb; getSelectedTemplate
	n (Ldif;)Ldkr; access$2000
	o ()Z shouldTrailerBeVisible
	o (Ldif;)Ldjw; access$2200
	p ()V backButtonClicked
	p (Ldif;)Ldjw; access$2400
	r ()V selectTemplate
	s ()Z hasValidTemplate
	t ()V onTrailer
	u ()V onPublish
die com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen
	A subtitleLabel
	B noWorldsLabel
	C callback
	a LOGGER
	b WORLD_TEXT
	c REQUIRES_CONVERSION_TEXT
	p HARDCORE_TEXT
	q CHEATS_TEXT
	r DATE_FORMAT
	s lastScreen
	t worldId
	u slotId
	v uploadButton
	w levelList
	x selectedWorld
	y worldSelectionList
	z titleLabel
	a ()Lnet/minecraft/server/IChatBaseComponent; access$600
	a (I)I access$000
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldie;)Ljava/util/List; access$100
	a (Ldie;I)I access$402
	a (Ldlg;)V lambda$init$2
	a (Lnet/minecraft/server/WorldInfo;)Ljava/lang/String; access$200
	a (Lnet/minecraft/server/WorldInfo;Lnet/minecraft/server/WorldInfo;)I lambda$loadLevelList$0
	b ()V init
	b (Ldie;)Ldlg; access$500
	b (Ldlg;)V lambda$init$1
	b (Lnet/minecraft/server/WorldInfo;)Lnet/minecraft/server/IChatBaseComponent; access$300
	c ()Lnet/minecraft/server/IChatBaseComponent; access$700
	c (Ldie;)I access$400
	c (Lnet/minecraft/server/WorldInfo;)Lnet/minecraft/server/IChatBaseComponent; gameModeName
	d (Ldie;)Ldie$b; access$900
	d (Lnet/minecraft/server/WorldInfo;)Ljava/lang/String; formatLastPlayed
	e ()V removed
	e (Ldie;)Ldkr; access$1100
	f ()Lnet/minecraft/server/IChatBaseComponent; access$800
	f (Ldie;)Ldkr; access$1200
	g ()Lnet/minecraft/server/IChatBaseComponent; access$1000
	g (Ldie;)Ldkr; access$1300
	i ()V loadLevelList
	k ()V upload
net/minecraft/server/TickList net/minecraft/world/level/TickList
	a ()I size
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;I)V scheduleTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
dih com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen
	A difficulty
	B gameMode
	C pvp
	D spawnNPCs
	E spawnAnimals
	F spawnMonsters
	G spawnProtection
	H commandBlocks
	I forceGameMode
	J pvpButton
	K spawnAnimalsButton
	L spawnMonstersButton
	M spawnNPCsButton
	N spawnProtectionButton
	O commandBlocksButton
	P forceGameModeButton
	Q titleLabel
	R warningLabel
	a DIFFICULTIES
	b GAME_MODES
	c parent
	p TEXT_ON
	q TEXT_OFF
	r GAME_MODE_LABEL
	s NAME_LABEL
	t nameEdit
	u column1X
	v columnWidth
	w column2X
	x options
	y worldType
	z activeSlot
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldih;)Ldih$a; access$000
	a (Ldih;Ljava/lang/Integer;)Ljava/lang/Integer; access$102
	a (Ldlg;)V lambda$init$9
	b ()V init
	b (Ldih;)Ljava/lang/Integer; access$100
	b (Ldlg;)V lambda$init$8
	c (Ldlg;)V lambda$init$7
	c (Z)Lnet/minecraft/server/IChatBaseComponent; getOnOff
	d ()V tick
	d (Ldlg;)V lambda$init$6
	e ()V removed
	e (Ldlg;)V lambda$init$5
	f (Ldlg;)V lambda$init$4
	g (Ldlg;)V lambda$init$3
	h (Ldlg;)V lambda$init$2
	i ()Lnet/minecraft/server/IChatBaseComponent; difficultyTitle
	i (Ldlg;)V lambda$init$1
	j (Ldlg;)V lambda$init$0
	k ()Lnet/minecraft/server/IChatBaseComponent; gameModeTitle
	l ()Lnet/minecraft/server/IChatBaseComponent; pvpTitle
	m ()Lnet/minecraft/server/IChatBaseComponent; spawnAnimalsTitle
	n ()Lnet/minecraft/server/IChatBaseComponent; spawnMonstersTitle
	o ()Lnet/minecraft/server/IChatBaseComponent; spawnNPCsTitle
	p ()Lnet/minecraft/server/IChatBaseComponent; commandBlocksTitle
	r ()Lnet/minecraft/server/IChatBaseComponent; forceGameModeTitle
	s ()Ljava/lang/String; getSlotName
	t ()V saveSettings
dig com/mojang/realmsclient/gui/screens/RealmsSettingsScreen
	a NAME_LABEL
	b DESCRIPTION_LABEL
	c configureWorldScreen
	p serverData
	q doneButton
	r descEdit
	s nameEdit
	t titleLabel
	a ()V save
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$3
	b ()V init
	b (Ldlg;)V lambda$init$1
	c (Ldlg;)V lambda$init$0
	c (Z)V lambda$null$2
	d ()V tick
	e ()V removed
dij com/mojang/realmsclient/gui/screens/RealmsTermsScreen
	a LOGGER
	b TITLE
	c TERMS_STATIC_TEXT
	p TERMS_LINK_TEXT
	q lastScreen
	r mainScreen
	s realmsServer
	t onLink
	u realmsToSUrl
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	b ()V init
	b (Ldlg;)V lambda$init$0
	e ()V removed
	i ()V agreedToTos
dii com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen
	A daysLeft
	B startDate
	C type
	a LOGGER
	b SUBSCRIPTION_TITLE
	c SUBSCRIPTION_START_LABEL
	p TIME_LEFT_LABEL
	q DAYS_LEFT_LABEL
	r SUBSCRIPTION_EXPIRED_TEXT
	s SUBSCRIPTION_LESS_THAN_A_DAY_TEXT
	t MONTH_SUFFIX
	u MONTHS_SUFFIX
	v DAY_SUFFIX
	w DAYS_SUFFIX
	x lastScreen
	y serverData
	z mainScreen
	a ()Lorg/apache/logging/log4j/Logger; access$100
	a (I)Lnet/minecraft/server/IChatBaseComponent; daysLeftPresentation
	a (III)Z keyPressed
	a (J)V getSubscription
	a (Ldfj;IIF)V render
	a (Ldii;)Ldgn; access$000
	a (Ldlg;)V lambda$init$2
	b ()V init
	b (J)Ljava/lang/String; localPresentation
	b (Ldii;)Ldjw; access$200
	b (Ldlg;)V lambda$init$1
	c (Ldii;)Ldoq; access$300
	c (Ldlg;)V lambda$init$0
	c (Z)V deleteRealm
	d (Ldii;)Ldjw; access$400
	e ()V removed
net/minecraft/server/EntityMinecartContainer net/minecraft/world/entity/vehicle/AbstractMinecartContainer
	c dropEquipment
	items itemStacks
	X_ ()V setChanged
	Y_ ()V clearContent
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/DamageSource;)V destroy
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interact
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	a_ (Z)V setDropContainerContent
	ac ()V remove
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/Entity; changeDimension
	c ()Z isEmpty
	d (Lnet/minecraft/server/EntityHuman;)V unpackLootTable
	i ()V applyNaturalSlowdown
dil com/mojang/realmsclient/gui/screens/UploadResult
	a statusCode
	b errorMessage
net/minecraft/server/CriterionTriggerUsedTotem net/minecraft/advancements/critereon/UsedTotemTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lct$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;)V trigger
	a (Lnet/minecraft/server/ItemStack;Lct$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
dik com/mojang/realmsclient/gui/screens/RealmsUploadScreen
	A uploadFinished
	B showDots
	C uploadStarted
	D backButton
	E cancelButton
	F tickCount
	G previousWrittenBytes
	H previousTimeSnapshot
	I bytesPersSecond
	J callback
	a LOGGER
	b UPLOAD_LOCK
	c DOTS
	p VERIFYING_TEXT
	q lastScreen
	r selectedLevel
	s worldId
	t slotId
	u uploadStatus
	v narrationRateLimiter
	w errorMessage
	x status
	y progress
	z cancelled
	a (III)Z keyPressed
	a (JLdil;)V lambda$null$3
	a (Ldfj;IIF)V render
	a (Ldfj;J)V drawUploadSpeed0
	a (Ldlg;)V lambda$init$1
	a (Ljava/io/File;)Z verify
	a (Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;Ljava/lang/String;Z)V addFileToTarGz
	a ([Lnet/minecraft/server/IChatBaseComponent;)V setErrorMessage
	b ()V init
	b (Ldfj;)V drawDots
	b (Ldlg;)V lambda$init$0
	b (Ljava/io/File;)Ljava/io/File; tarGzipArchive
	c (Ldfj;)V drawProgressBar
	d ()V tick
	d (Ldfj;)V drawUploadSpeed
	e ()V removed
	i ()V onBack
	k ()V onCancel
	l ()V upload
	m ()V uploadCancelled
	n ()V lambda$upload$4
	o ()V lambda$init$2
din com/mojang/realmsclient/util/RealmsPersistence
	a GSON
	a ()Ldin$a; readFile
	a (Ldin$a;)V writeFile
	b ()Ljava/io/File; getPathToData
dim com/mojang/realmsclient/util/JsonUtils
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/util/Date; getDateOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;I)I getIntOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;J)J getLongOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; getStringOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Z)Z getBooleanOr
dip com/mojang/realmsclient/util/RealmsUtil
	a gameProfileCache
	b AUTHENTICATION_SERVICE
	c SESSION_SERVICE
	a ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; access$000
	a (J)Ljava/lang/String; convertToAgePresentation
	a (Ljava/lang/String;)Ljava/lang/String; uuidToName
	a (Ljava/util/Date;)Ljava/lang/String; convertToAgePresentationFromInstant
	b (Ljava/lang/String;)Ljava/util/Map; getTextures
net/minecraft/server/DefinedStructureStructureProcessorType net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType
	a BLOCK_IGNORE
	b BLOCK_ROT
	c GRAVITY
	d JIGSAW_REPLACEMENT
	e RULE
	f NOP
	g BLOCK_AGE
	h BLACKSTONE_REPLACE
	i LAVA_SUBMERGED_BLOCK
	j SINGLE_CODEC
	k LIST_OBJECT_CODEC
	l DIRECT_CODEC
	m LIST_CODEC
	a (Lcom/mojang/datafixers/util/Either;)Lnet/minecraft/server/ProcessorList; lambda$static$2
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$3
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/DefinedStructureStructureProcessorType; register
	a (Lnet/minecraft/server/ProcessorList;)Lnet/minecraft/server/ProcessorList; lambda$null$1
	b (Lnet/minecraft/server/ProcessorList;)Lnet/minecraft/server/ProcessorList; lambda$null$0
dio com/mojang/realmsclient/util/RealmsTextureManager
	a TEXTURES
	b SKIN_FETCH_STATUS
	c FETCHED_SKINS
	d LOGGER
	e TEMPLATE_ICON_LOCATION
	a ()Lorg/apache/logging/log4j/Logger; access$100
	a (Ljava/lang/String;)V bindFace
	a (Ljava/lang/String;Ljava/lang/Runnable;)V withBoundFace
	a (Ljava/lang/String;Ljava/lang/String;)V bindWorldTemplate
	a (Ljava/util/UUID;)V bindDefaultFace
	b ()Ljava/util/Map; access$200
	b (Ljava/lang/String;Ljava/lang/String;)I getTextureId
	c ()Ljava/util/Map; access$300
dir com/mojang/realmsclient/util/TextRenderingUtils
	a (Ljava/lang/String;)Ljava/util/List; lineBreak
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; split
	a (Ljava/lang/String;Ljava/util/List;)Ljava/util/List; decompose
	a (Ljava/lang/String;[Ldir$b;)Ljava/util/List; decompose
	a (Ljava/util/List;Ljava/util/List;)Ljava/util/List; insertLinks
diq com/mojang/realmsclient/util/SkinProcessor
	a pixels
	b width
	c height
	a (IIII)V doLegacyTransparencyHack
	a (Ljava/awt/image/BufferedImage;)Ljava/awt/image/BufferedImage; process
	b (IIII)V setNoAlpha
net/minecraft/server/WorldGenEndGatewayConfiguration net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration
	a CODEC
	b exit
	c exact
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/WorldGenEndGatewayConfiguration; knownExit
	a (Lnet/minecraft/server/WorldGenEndGatewayConfiguration;)Ljava/lang/Boolean; lambda$null$1
	b ()Lnet/minecraft/server/WorldGenEndGatewayConfiguration; delayedExitSearch
	b (Lnet/minecraft/server/WorldGenEndGatewayConfiguration;)Ljava/util/Optional; lambda$null$0
	c ()Ljava/util/Optional; getExit
	d ()Z isExitExact
dit com/mojang/realmsclient/util/task/CloseServerTask
	c serverData
	d configureScreen
dis com/mojang/realmsclient/util/UploadTokenCache
	a TOKEN_CACHE
	a (J)Ljava/lang/String; get
	a (JLjava/lang/String;)V put
	b (J)V invalidate
dpp$e net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconSpriteScreenButton
	a iconX
	b iconY
	a (Ldfj;)V renderIcon
div com/mojang/realmsclient/util/task/DownloadTask
	c worldId
	d slot
	e lastScreen
	f downloadName
	a (Z)V lambda$run$0
bc$a net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance
	a block
	b state
	a (Lnet/minecraft/server/Block;)Lbc$a; entersBlock
	a (Lnet/minecraft/server/IBlockData;)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
net/minecraft/server/ICommandListener net/minecraft/commands/CommandSource
	DUMMY NULL
	shouldBroadcastCommands ()Z shouldInformAdmins
	shouldSendFailure ()Z acceptsFailure
	shouldSendSuccess ()Z acceptsSuccess
dpp$d net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconScreenButton
	a selected
	a ()Z isSelected
	a (Ldfj;)V renderIcon
	b (Ldfj;IIF)V renderButton
	e (Z)V setSelected
diu com/mojang/realmsclient/util/task/ConnectTask
	c realmsConnect
	d address
	a ()V abortTask
	b ()V tick
dix com/mojang/realmsclient/util/task/LongRunningTask
	a LOGGER
	b longRunningMcoTaskScreen
	a ()V abortTask
	a (I)V pause
	a (Ldhw;)V setScreen
	a (Ldjw;Ldoq;)V lambda$setScreen$0
	a (Ldoq;)V setScreen
	a (Lnet/minecraft/server/IChatBaseComponent;)V error
	b ()V tick
	b (Lnet/minecraft/server/IChatBaseComponent;)V setTitle
	c ()Z aborted
	d ()V init
diw com/mojang/realmsclient/util/task/GetServerDetailsTask
	c server
	d lastScreen
	e mainScreen
	f connectLock
	a (Ldgo;)V lambda$null$1
	a (Ldgo;Z)V lambda$run$2
	a (Ljava/lang/Throwable;)Ljava/lang/Void; lambda$null$0
	b (I)V sleep
dpp$a net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconCancelButton
	a this$0
	a (Ldfj;II)V renderToolTip
	b ()V onPress
diz com/mojang/realmsclient/util/task/ResettingWorldTask
	c seed
	d worldTemplate
	e levelType
	f generateStructures
	g serverId
	h title
	i callback
diy com/mojang/realmsclient/util/task/OpenServerTask
	c serverData
	d returnScreen
	e join
	f mainScreen
dpp$c net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconPowerButton
	a this$0
	b effect
	c sprite
	d isPrimary
	e tooltip
	a (Ldfj;)V renderIcon
	a (Ldfj;II)V renderToolTip
	a (Lnet/minecraft/server/MobEffectList;Z)Lnet/minecraft/server/IChatBaseComponent; createTooltip
	b ()V onPress
dpp$b net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconConfirmButton
	a this$0
	a (Ldfj;II)V renderToolTip
	b ()V onPress
net/minecraft/server/LootItemConditionEntityProperty net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition
	a predicate
	b entityTarget
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lbg$a;Lnet/minecraft/server/LootTableInfo$EntityTarget;)Lnet/minecraft/server/LootItemCondition; lambda$hasProperties$0
	a (Lnet/minecraft/server/CriterionConditionEntity;Lnet/minecraft/server/LootTableInfo$EntityTarget;)Lnet/minecraft/server/LootItemCondition; lambda$hasProperties$1
	a (Lnet/minecraft/server/LootItemConditionEntityProperty;)Lnet/minecraft/server/CriterionConditionEntity; access$000
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;)Ldbl$a; entityPresent
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;Lbg$a;)Ldbl$a; hasProperties
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;Lnet/minecraft/server/CriterionConditionEntity;)Ldbl$a; hasProperties
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lnet/minecraft/server/LootItemConditionType; getType
	b (Lnet/minecraft/server/LootItemConditionEntityProperty;)Lnet/minecraft/server/LootTableInfo$EntityTarget; access$100
dja com/mojang/realmsclient/util/task/RestoreTask
	c backup
	d worldId
	e lastScreen
net/minecraft/server/MemoryStatus net/minecraft/world/entity/ai/memory/MemoryStatus
	d $VALUES
djw$b net/minecraft/client/Minecraft$ServerStem
	a packRepository
	b serverResources
	c worldData
	a ()Lnet/minecraft/server/ResourcePackRepository; packRepository
	b ()Lnet/minecraft/server/DataPackResources; serverResources
	c ()Lnet/minecraft/server/SaveData; worldData
djc com/mojang/realmsclient/util/task/SwitchSlotTask
	c worldId
	d slot
	e callback
net/minecraft/server/VoxelShapeDiscreteSlice net/minecraft/world/phys/shapes/SubShape
	d parent
	e startX
	f startY
	g startZ
	h endX
	i endY
	j endZ
	a (IIIZZ)V setFull
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)I firstFull
	b (III)Z isFull
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)I lastFull
net/minecraft/server/ScoreboardTeam net/minecraft/world/scores/PlayerTeam
	a scoreboard
	b name
	c players
	d displayName
	e playerPrefix
	f playerSuffix
	g allowFriendlyFire
	h seeFriendlyInvisibles
	i nameTagVisibility
	j deathMessageVisibility
	k color
	l collisionRule
	m displayNameStyle
	a ()Lnet/minecraft/server/Scoreboard; getScoreboard
	a (I)V unpackOptions
	a (Lnet/minecraft/server/ScoreboardTeamBase;Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatMutableComponent; formatNameForTeam
	b ()Ljava/lang/String; getName
	d ()Lnet/minecraft/server/IChatMutableComponent; getFormattedDisplayName
	d (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatMutableComponent; getFormattedName
	g ()Ljava/util/Collection; getPlayers
	getPrefix ()Lnet/minecraft/server/IChatBaseComponent; getPlayerPrefix
	getSuffix ()Lnet/minecraft/server/IChatBaseComponent; getPlayerSuffix
	h ()Z isAllowFriendlyFire
	k ()Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility; getDeathMessageVisibility
	l ()Lnet/minecraft/server/ScoreboardTeamBase$EnumTeamPush; getCollisionRule
	packOptionData ()I packOptions
	setCanSeeFriendlyInvisibles (Z)V setSeeFriendlyInvisibles
	setPrefix (Lnet/minecraft/server/IChatBaseComponent;)V setPlayerPrefix
	setSuffix (Lnet/minecraft/server/IChatBaseComponent;)V setPlayerSuffix
net/minecraft/server/PacketPlayOutTitle net/minecraft/network/protocol/game/ClientboundSetTitlesPacket
	a type
	b text
	c fadeInTime
	d stayTime
	e fadeOutTime
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/PacketPlayOutTitle$EnumTitleAction; getType
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/IChatBaseComponent; getText
	d ()I getFadeInTime
	e ()I getStayTime
	f ()I getFadeOutTime
djw$a net/minecraft/client/Minecraft$ExperimentalDialogType
	a NONE
	b CREATE
	c BACKUP
	d $VALUES
djb com/mojang/realmsclient/util/task/SwitchMinigameTask
	c worldId
	d worldTemplate
	e lastScreen
net/minecraft/server/MovingObjectPosition$EnumMovingObjectType net/minecraft/world/phys/HitResult$Type
	d $VALUES
dje net/minecraft/client/AmbientOcclusionStatus
	a OFF
	b MIN
	c MAX
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Ldje; byId
	b ()Ljava/lang/String; getKey
	b (I)[Ldje; lambda$static$0
net/minecraft/server/WorldGenFeatureChanceDecoratorRangeConfiguration net/minecraft/world/level/levelgen/feature/configurations/RangeDecoratorConfiguration
	a CODEC
	c bottomOffset
	d topOffset
	e maximum
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lnet/minecraft/server/WorldGenFeatureChanceDecoratorRangeConfiguration;)Ljava/lang/Integer; lambda$null$2
	b (Lnet/minecraft/server/WorldGenFeatureChanceDecoratorRangeConfiguration;)Ljava/lang/Integer; lambda$null$1
	c (Lnet/minecraft/server/WorldGenFeatureChanceDecoratorRangeConfiguration;)Ljava/lang/Integer; lambda$null$0
djd com/mojang/realmsclient/util/task/WorldCreationTask
	c name
	d motd
	e worldId
	f lastScreen
djg net/minecraft/client/BooleanOption
	X getter
	Y setter
	a (Ldka;)V toggle
	a (Ldka;III)Ldle; createButton
	a (Ldka;Ldlg;)V lambda$createButton$0
	a (Ldka;Ljava/lang/String;)V set
	a (Ldka;Z)V set
	b (Ldka;)Z get
	c (Ldka;)Lnet/minecraft/server/IChatBaseComponent; getMessage
net/minecraft/server/ScoreboardServer$Action net/minecraft/server/ServerScoreboard$Method
	c $VALUES
djf net/minecraft/client/AttackIndicatorStatus
	a OFF
	b CROSSHAIR
	c HOTBAR
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Ldjf; byId
	b ()Ljava/lang/String; getKey
	b (I)[Ldjf; lambda$static$0
bt$a net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance
	a entityPredicate
	b killingBlow
	a (Lbg$a;)Lbt$a; playerKilledEntity
	a (Lbg$a;Law$a;)Lbt$a; playerKilledEntity
	a (Lbg$a;Lnet/minecraft/server/CriterionConditionDamageSource;)Lbt$a; playerKilledEntity
	a (Lnet/minecraft/server/CriterionConditionEntity;)Lbt$a; playerKilledEntity
	a (Lnet/minecraft/server/CriterionConditionEntity;Law$a;)Lbt$a; playerKilledEntity
	a (Lnet/minecraft/server/CriterionConditionEntity;Lnet/minecraft/server/CriterionConditionDamageSource;)Lbt$a; playerKilledEntity
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/DamageSource;)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	b (Lbg$a;)Lbt$a; entityKilledPlayer
	b (Lbg$a;Law$a;)Lbt$a; entityKilledPlayer
	b (Lbg$a;Lnet/minecraft/server/CriterionConditionDamageSource;)Lbt$a; entityKilledPlayer
	b (Lnet/minecraft/server/CriterionConditionEntity;)Lbt$a; entityKilledPlayer
	b (Lnet/minecraft/server/CriterionConditionEntity;Law$a;)Lbt$a; entityKilledPlayer
	b (Lnet/minecraft/server/CriterionConditionEntity;Lnet/minecraft/server/CriterionConditionDamageSource;)Lbt$a; entityKilledPlayer
	c ()Lbt$a; playerKilledEntity
	d ()Lbt$a; entityKilledPlayer
dji net/minecraft/client/CameraType
	a FIRST_PERSON
	b THIRD_PERSON_BACK
	c THIRD_PERSON_FRONT
	d VALUES
	e firstPerson
	f mirrored
	g $VALUES
	a ()Z isFirstPerson
	b ()Z isMirrored
	c ()Ldji; cycle
djh net/minecraft/client/Camera
	a initialized
	b level
	c entity
	d position
	e blockPosition
	f forwards
	g up
	h left
	i xRot
	j yRot
	k rotation
	l detached
	m mirror
	n eyeHeight
	o eyeHeightOld
	a ()V tick
	a (D)D getMaxZoom
	a (DDD)V move
	a (FF)V setRotation
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/Entity;ZZF)V setup
	a (Lnet/minecraft/server/Vec3D;)V setPosition
	b ()Lnet/minecraft/server/Vec3D; getPosition
	b (DDD)V setPosition
	c ()Lnet/minecraft/server/BlockPosition; getBlockPosition
	d ()F getXRot
	e ()F getYRot
	f ()Lnet/minecraft/server/Quaternion; rotation
	g ()Lnet/minecraft/server/Entity; getEntity
	h ()Z isInitialized
	i ()Z isDetached
	j ()Z isMirror
	k ()Lnet/minecraft/server/Fluid; getFluidInCamera
	l ()Lnet/minecraft/server/Vector3fa; getLookVector
	m ()Lnet/minecraft/server/Vector3fa; getUpVector
	n ()Lnet/minecraft/server/Vector3fa; getLeftVector
	o ()V reset
djk net/minecraft/client/CloudStatus
	a OFF
	b FAST
	c FANCY
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Ldjk; byId
	b ()Ljava/lang/String; getKey
	b (I)[Ldjk; lambda$static$0
net/minecraft/server/LightEngineSky net/minecraft/world/level/lighting/SkyLightEngine
	e DIRECTIONS
	f HORIZONTALS
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (J)Ljava/lang/String; getDebugData
	b (JJI)I computeLevelFromNeighbor
	f (J)V checkNode
djj net/minecraft/client/ClientRecipeBook
	c LOGGER
	d collectionsByTab
	e allCollections
	a (Ldkd;)Ljava/util/List; getCollection
	a (Ljava/lang/Iterable;)V setupCollections
	a (Ljava/util/Map;Lcom/google/common/collect/ImmutableList$Builder;Ldkd;Ljava/util/List;)V lambda$setupCollections$0
	a (Ljava/util/Map;Ldkd;)Ljava/util/stream/Stream; lambda$null$1
	a (Ljava/util/Map;Ldkd;Ljava/util/List;)V lambda$setupCollections$2
	b ()Ljava/util/List; getCollections
	b (Ldkd;)Ljava/util/List; lambda$categorizeAndGroupRecipes$4
	b (Ljava/lang/Iterable;)Ljava/util/Map; categorizeAndGroupRecipes
	c (Ldkd;)Ljava/util/List; lambda$categorizeAndGroupRecipes$3
	g (Lnet/minecraft/server/IRecipe;)Ldkd; getCategory
	h (Lnet/minecraft/server/IRecipe;)Ljava/lang/Object; lambda$getCategory$5
djm net/minecraft/client/CycleOption
	X setter
	Y toString
	a (Ldka;I)V toggle
	a (Ldka;III)Ldle; createButton
	a (Ldka;Ldlg;)V lambda$createButton$0
	c (Ldka;)Lnet/minecraft/server/IChatBaseComponent; getMessage
djl net/minecraft/client/ComponentCollector
	a parts
	a ()Lnet/minecraft/server/IChatFormatted; getResult
	a (Lnet/minecraft/server/IChatFormatted;)V append
	b ()Lnet/minecraft/server/IChatFormatted; getResultOrEmpty
	c ()V reset
djo net/minecraft/client/FullscreenResolutionProgressOption
	a (Ldeo;Ldev;)Ljava/lang/Double; lambda$null$0
	a (Ldeo;Ldew;Ldka;)Ljava/lang/Double; lambda$new$1
	a (Ldeo;Ldew;Ldka;Ljava/lang/Double;)V lambda$new$2
	a (Ldeo;Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$new$3
net/minecraft/server/CriterionConditionValue$FloatRange net/minecraft/advancements/critereon/MinMaxBounds$Floats
	e ANY
	f minSq
	g maxSq
	a (D)Z matchesSqr
	a (F)Lnet/minecraft/server/CriterionConditionValue$FloatRange; exactly
	a (FF)Lnet/minecraft/server/CriterionConditionValue$FloatRange; between
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/Float;Ljava/lang/Float;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; create
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; fromReader
	a (Ljava/lang/Float;)Ljava/lang/Double; squareOpt
	b (F)Lnet/minecraft/server/CriterionConditionValue$FloatRange; atLeast
	b (Ljava/lang/Float;)Ljava/lang/Float; lambda$fromReader$0
	c (F)Lnet/minecraft/server/CriterionConditionValue$FloatRange; atMost
	d (F)Z matches
djn net/minecraft/client/DebugQueryHandler
	a connection
	b transactionId
	c callback
	a (ILjava/util/function/Consumer;)V queryEntityTag
	a (ILnet/minecraft/server/NBTTagCompound;)Z handleResponse
	a (Ljava/util/function/Consumer;)I startTransaction
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Consumer;)V queryBlockEntityTag
bec$a net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
djq net/minecraft/client/GraphicsStatus
	a FAST
	b FANCY
	c FABULOUS
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Ldjq; byId
	b ()Ljava/lang/String; getKey
	b (I)[Ldjq; lambda$static$0
	c ()Ldjq; cycleNext
bec$b net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal
	a ()Z canUse
	c ()V start
djp net/minecraft/client/Game
	a minecraft
	b launcher
	c listener
	a ()V onStartGameSession
	b ()V onLeaveGameSession
bec$c net/minecraft/world/entity/monster/Vindicator$VindicatorMeleeAttackGoal
	b this$0
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
djs net/minecraft/client/HotbarManager
	a LOGGER
	b optionsFile
	c fixerUpper
	d hotbars
	e loaded
	a ()V save
	a (I)Ldzg; get
	b ()V load
djr net/minecraft/client/GuiMessage
	a addedTime
	b message
	c id
	a ()Ljava/lang/Object; getMessage
	b ()I getAddedTime
	c ()I getId
dju net/minecraft/client/KeyboardHandler
	a minecraft
	b sendRepeatsToGui
	c clipboardManager
	d debugCrashKeyTime
	e debugCrashKeyReportedTime
	f debugCrashKeyReportedCount
	g handledDebugKey
	a ()Ljava/lang/String; getClipboard
	a (I)Z handleChunkDebugKeys
	a (IJ)V lambda$getClipboard$11
	a (I[ZLdme;III)V lambda$keyPress$4
	a (J)V setup
	a (JII)V charTyped
	a (JIIII)V keyPress
	a (Ldmf;CI)V lambda$charTyped$6
	a (Ldmf;II)V lambda$charTyped$5
	a (Ljava/lang/String;)V setClipboard
	a (Ljava/lang/String;[Ljava/lang/Object;)V debugFeedbackTranslated
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/NBTTagCompound;)V copyCreateBlockCommand
	a (Lnet/minecraft/server/IChatBaseComponent;)V lambda$keyPress$3
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/Entity;Lnet/minecraft/server/NBTTagCompound;)V lambda$copyRecreateCommand$1
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/NBTTagCompound;)V copyCreateEntityCommand
	a (Z)V setSendRepeatsToGui
	a (ZZ)V copyRecreateCommand
	b ()V tick
	b (I)Z handleDebugKeys
	b (JII)V lambda$setup$10
	b (JIIII)V lambda$setup$8
	b (Ljava/lang/String;[Ljava/lang/Object;)V debugWarningTranslated
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/NBTTagCompound;)V lambda$copyRecreateCommand$0
	b (Lnet/minecraft/server/IChatBaseComponent;)V lambda$null$2
	c (JII)V lambda$null$9
	c (JIIII)V lambda$null$7
	c (Ljava/lang/String;[Ljava/lang/Object;)V debugFeedback
djt net/minecraft/client/KeyMapping
	a ALL
	b MAP
	c CATEGORIES
	d CATEGORY_SORT_ORDER
	e name
	f defaultKey
	g category
	h key
	i isDown
	j clickCount
	a ()V setAll
	a (I)Z matchesMouse
	a (II)Z matches
	a (Ldel$a;)V click
	a (Ldel$a;Z)V set
	a (Ldjt;)I compareTo
	a (Ljava/lang/String;)Ljava/util/function/Supplier; createNameSupplier
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Z)V setDown
	b ()V releaseAll
	b (Ldel$a;)V setKey
	b (Ldjt;)Z same
	b (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; lambda$createNameSupplier$1
	c ()V resetMapping
	d ()Z isDown
	e ()Ljava/lang/String; getCategory
	f ()Z consumeClick
	g ()Ljava/lang/String; getName
	h ()Ldel$a; getDefaultKey
	i ()Z isUnbound
	j ()Lnet/minecraft/server/IChatBaseComponent; getTranslatedKeyMessage
	k ()Z isDefault
	l ()Ljava/lang/String; saveString
	m ()V release
net/minecraft/server/ItemSpade net/minecraft/world/item/ShovelItem
	a FLATTENABLES
	c DIGGABLES
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemActionContext;Lnet/minecraft/server/EntityHuman;)V lambda$useOn$0
	b (Lnet/minecraft/server/IBlockData;)Z isCorrectToolForDrops
djw net/minecraft/client/Minecraft
	A fpsString
	B wireframe
	C chunkPath
	D chunkVisibility
	E smartCull
	F instance
	G LOGGER
	H RESOURCE_RELOAD_INITIAL_TASK
	I resourcePackDirectory
	J profileProperties
	K textureManager
	L fixerUpper
	M virtualScreen
	N window
	O timer
	P snooper
	Q renderBuffers
	R entityRenderDispatcher
	S itemRenderer
	T itemInHandRenderer
	U searchRegistry
	V user
	W progressListener
	X hotbarManager
	Y launchedVersion
	Z versionType
	a ON_OSX
	aA tutorial
	aB singleplayerServer
	aC currentServer
	aD pendingConnection
	aE isLocalServer
	aF rightClickDelay
	aG pause
	aH pausePartialTick
	aI lastNanoTime
	aJ lastTime
	aK frames
	aL connectedToRealms
	aM gameThread
	aN running
	aO delayedCrash
	aP fps
	aQ windowActive
	aR progressTasks
	aS pendingReload
	aT profiler
	aU fpsPieRenderTicks
	aV fpsPieProfiler
	aW fpsPieResults
	aX debugPath
	aa proxy
	ab levelSource
	ac is64bit
	ad demo
	ae allowsMultiplayer
	af allowsChat
	ag resourceManager
	ah clientPackSource
	ai resourcePackRepository
	aj languageManager
	ak blockColors
	al itemColors
	am mainRenderTarget
	an soundManager
	ao musicManager
	ap fontManager
	aq splashManager
	ar gpuWarnlistManager
	as minecraftSessionService
	at skinManager
	au modelManager
	av blockRenderer
	aw paintingTextures
	ax mobEffectTextures
	ay toast
	az game
	b DEFAULT_FONT
	c UNIFORM_FONT
	d ALT_FONT
	e levelRenderer
	f particleEngine
	g font
	h gameRenderer
	i debugRenderer
	j gui
	k options
	l mouseHandler
	m keyboardHandler
	n gameDirectory
	o frameTimer
	p reserve
	q gameMode
	r level
	s player
	t cameraEntity
	u crosshairPickEntity
	v hitResult
	w missTime
	x noRender
	y screen
	z overlay
	A ()Z useAmbientOcclusion
	B ()Ldjw; getInstance
	C ()Ljava/util/concurrent/CompletableFuture; delayTextureReload
	D ()Ldwr; getCurrentServer
	E ()Z isLocalServer
	F ()Z hasSingleplayerServer
	G ()Lemy; getSingleplayerServer
	H ()Lnet/minecraft/server/MojangStatisticsGenerator; getSnooper
	I ()Ldkj; getUser
	J ()Lcom/mojang/authlib/properties/PropertyMap; getProfileProperties
	K ()Ljava/net/Proxy; getProxy
	L ()Lejv; getTextureManager
	M ()Lnet/minecraft/server/IResourceManager; getResourceManager
	N ()Lnet/minecraft/server/ResourcePackRepository; getResourcePackRepository
	O ()Lejz; getClientPackSource
	P ()Ljava/io/File; getResourcePackDirectory
	Q ()Lekr; getLanguageManager
	R ()Z is64Bit
	S ()Z isPaused
	T ()Z isSnooperEnabled
	U ()Ldzs; getGpuWarnlistManager
	V ()Lenm; getSoundManager
	W ()Lnet/minecraft/server/Music; getSituationalMusic
	X ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
	Y ()Lekk; getSkinManager
	Z ()Lnet/minecraft/server/Entity; getCameraEntity
	a ()V resizeDisplay
	a (I)V debugFpsMeterKeyPress
	a (IJ)V onFullscreenError
	a (Ldfj;Lnet/minecraft/server/MethodProfilerResults;)V renderFpsMeter
	a (Ldjw$a;Ljava/lang/String;ZLjava/lang/Runnable;)V displayExperimentalConfirmationDialog
	a (Ldka;)Ljava/lang/String; lambda$fillReport$34
	a (Ldok;)V setOverlay
	a (Ldoq;)V setScreen
	a (Ldrq;)Ljava/util/stream/Stream; lambda$createSearchTrees$15
	a (Ldwl;)V setLevel
	a (Ldwr;)V setCurrentServer
	a (Lekr;)Ljava/lang/String; lambda$fillReport$35
	a (Lekr;Ljava/lang/String;Ldka;Lnet/minecraft/server/CrashReport;)V fillReport
	a (Lems;Lemr;Lnet/minecraft/server/ItemStack;)V lambda$createSearchTrees$9
	a (Lemt$a;)Lemq; getSearchTree
	a (Ljava/io/File;II)Lnet/minecraft/server/IChatBaseComponent; grabPanoramixScreenshot
	a (Ljava/io/File;IIII)Lnet/minecraft/server/IChatBaseComponent; grabHugeScreenshot
	a (Ljava/io/File;Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; lambda$grabHugeScreenshot$39
	a (Ljava/lang/Runnable;Ljava/lang/String;Z)V lambda$displayExperimentalConfirmationDialog$30
	a (Ljava/lang/String;)V loadLevel
	a (Ljava/lang/String;Ljava/lang/Runnable;ZZ)V lambda$displayExperimentalConfirmationDialog$29
	a (Ljava/lang/String;Lnet/minecraft/server/IRegistryCustom$Dimension;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;Ldjw$a;)V lambda$doLoadLevel$24
	a (Ljava/lang/String;Lnet/minecraft/server/IRegistryCustom$Dimension;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;Z)V lambda$doLoadLevel$25
	a (Ljava/lang/String;Lnet/minecraft/server/IRegistryCustom$Dimension;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;ZLdjw$a;)V doLoadLevel
	a (Ljava/lang/String;Lnet/minecraft/server/WorldSettings;Lnet/minecraft/server/IRegistryCustom$Dimension;Lnet/minecraft/server/GeneratorSettings;)V createLevel
	a (Ljava/lang/String;ZLjava/util/function/Supplier;Lnet/minecraft/server/IResourcePack;Lnet/minecraft/server/ResourcePackInfo;Lnet/minecraft/server/ResourcePackLoader$Position;Lnet/minecraft/server/PackSource;)Lnet/minecraft/server/ResourcePackLoader; createClientPackAdapter
	a (Ljava/lang/Throwable;)V rollbackResourcePacks
	a (Ljava/lang/Throwable;Lnet/minecraft/server/IChatBaseComponent;)V clearResourcePacksOnError
	a (Ljava/util/Optional;)V lambda$new$2
	a (Ljava/util/UUID;)Z isBlocked
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage; lambda$delayTextureReload$36
	a (Ljava/util/concurrent/CompletableFuture;Ljava/util/Optional;)V lambda$reloadResourcePacks$17
	a (Lnet/minecraft/server/Convertable$ConversionSession;)Lnet/minecraft/server/DataPackConfiguration; loadDataPacks
	a (Lnet/minecraft/server/Convertable$ConversionSession;Lnet/minecraft/server/IRegistryCustom$Dimension;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/DataPackConfiguration;)Lnet/minecraft/server/SaveData; loadWorldData
	a (Lnet/minecraft/server/CrashReport;)V delayCrash
	a (Lnet/minecraft/server/Entity;)V setCameraEntity
	a (Lnet/minecraft/server/IChatBaseComponent;)V lambda$grabPanoramixScreenshot$37
	a (Lnet/minecraft/server/IRecipe;)Lnet/minecraft/server/MinecraftKey; lambda$null$14
	a (Lnet/minecraft/server/IRegistryCustom$Dimension;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;ZLnet/minecraft/server/Convertable$ConversionSession;)Ldjw$b; makeServerStem
	a (Lnet/minecraft/server/IRegistryCustom$Dimension;Lnet/minecraft/server/Convertable$ConversionSession;Ldjw$b;Lnet/minecraft/server/SaveData;Lcom/mojang/authlib/minecraft/MinecraftSessionService;Lcom/mojang/authlib/GameProfileRepository;Lnet/minecraft/server/UserCache;Ljava/lang/Thread;)Lemy; lambda$doLoadLevel$27
	a (Lnet/minecraft/server/IRegistryCustom$Dimension;Lnet/minecraft/server/GeneratorSettings;Lnet/minecraft/server/WorldSettings;Lnet/minecraft/server/Convertable$ConversionSession;Lnet/minecraft/server/IRegistryCustom$Dimension;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/DataPackConfiguration;)Lnet/minecraft/server/SaveData; lambda$createLevel$23
	a (Lnet/minecraft/server/ItemStack;)Ljava/util/stream/Stream; lambda$createSearchTrees$8
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/TileEntity;)Lnet/minecraft/server/ItemStack; addCustomNbtData
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/util/function/Function; getTextureAtlas
	a (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooper
	a (Lnet/minecraft/server/RegistryReadOps;Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/DataResult; lambda$null$22
	a (Lnet/minecraft/server/WorldSettings;Lnet/minecraft/server/Convertable$ConversionSession;)Lnet/minecraft/server/DataPackConfiguration; lambda$createLevel$21
	a (Z)V setWindowActive
	a (ZLnet/minecraft/server/GameProfilerTick;)V startProfilers
	aA ()Z renderOnThread
	aB ()Ldew; getWindow
	aC ()Leae; renderBuffers
	aD ()Ljava/lang/String; createTitle
	aE ()V createSearchTrees
	aF ()Z checkIs64Bit
	aG ()V selfTest
	aH ()Z shouldRenderFpsPie
	aI ()I getFramerateLimit
	aJ ()V startAttack
	aK ()V startUseItem
	aL ()V handleKeybinds
	aM ()V pickBlock
	aN ()Ljava/lang/String; getCurrentSnooperAction
	aO ()Ljava/lang/String; lambda$fillReport$33
	aP ()Ljava/lang/String; lambda$fillReport$32
	aQ ()Z lambda$tick$20
	aR ()V lambda$tick$19
	aS ()V lambda$null$1
	aT ()I lambda$new$0
	aa ()Leap; getBlockRenderer
	ab ()Leel; getEntityRenderDispatcher
	ac ()Lefg; getItemRenderer
	ad ()Ldzu; getItemInHandRenderer
	ae ()I getAverageFps
	af ()Lnet/minecraft/server/CircularTimer; getFrameTimer
	ag ()Z isConnectedToRealms
	ah ()Lcom/mojang/datafixers/DataFixer; getFixerUpper
	ai ()F getFrameTime
	aj ()F getDeltaFrameTime
	ak ()Ldkl; getBlockColors
	al ()Z showOnlyReducedInfo
	am ()Ldmo; getToasts
	an ()Lenw; getTutorial
	ao ()Z isWindowActive
	ap ()Ldjs; getHotbarManager
	aq ()Lell; getModelManager
	ar ()Lekj; getPaintingTextures
	as ()Lekh; getMobEffectTextures
	at ()Lnet/minecraft/server/GameProfilerFiller; getProfiler
	av ()Ljava/lang/Thread; getRunningThread
	aw ()Ldjp; getGame
	ax ()Laat; getProgressListener
	ay ()Lekl; getSplashManager
	az ()Ldok; getOverlay
	b ()V cursorEntered
	b (I)V updateMaxMipLevel
	b (Ldoq;)V clearLevel
	b (Ldrq;)Ljava/util/stream/Stream; lambda$createSearchTrees$13
	b (Ldwl;)V updateLevelInEngines
	b (Ljava/io/File;Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; lambda$grabPanoramixScreenshot$38
	b (Ljava/lang/String;)V openChatScreen
	b (Ljava/util/concurrent/CompletableFuture;)V lambda$runTick$18
	b (Ljava/util/function/Supplier;)Ljava/util/function/Supplier; adaptV3
	b (Lnet/minecraft/server/CrashReport;)V crash
	b (Lnet/minecraft/server/Entity;)Z shouldEntityAppearGlowing
	b (Lnet/minecraft/server/IChatBaseComponent;)V lambda$doLoadLevel$28
	b (Lnet/minecraft/server/IRecipe;)Ljava/util/stream/Stream; lambda$null$10
	b (Lnet/minecraft/server/ItemStack;)Ljava/util/stream/Stream; lambda$createSearchTrees$7
	b (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooperInitial
	b (Z)V selectMainFont
	b (ZLnet/minecraft/server/GameProfilerTick;)V finishProfilers
	c ()V updateTitle
	c (I)Lnet/minecraft/server/WorldLoadListener; lambda$null$26
	c (Ldoq;)V forceSetScreen
	c (Ljava/lang/String;)Ljava/lang/String; lambda$fillReport$31
	c (Ljava/util/concurrent/CompletableFuture;)V lambda$null$16
	c (Ljava/util/function/Supplier;)Ljava/util/function/Supplier; adaptV4
	c (Lnet/minecraft/server/CrashReport;)Lnet/minecraft/server/CrashReport; fillReport
	c (Lnet/minecraft/server/IChatBaseComponent;)Ljava/lang/String; lambda$null$11
	c (Lnet/minecraft/server/ItemStack;)Ljava/util/stream/Stream; lambda$createSearchTrees$6
	c (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooperWithOpenGL
	c (Z)V pauseGame
	d ()Z isProbablyModded
	d (Ldoq;)V updateScreenAndTick
	d (Ljava/lang/Runnable;)Z shouldRun
	d (Ljava/lang/String;)Z lambda$null$12
	d (Ljava/util/function/Supplier;)Lnet/minecraft/server/IResourcePack; lambda$adaptV4$41
	d (Lnet/minecraft/server/IChatBaseComponent;)Ljava/lang/String; lambda$null$4
	d (Z)V setConnectedToRealms
	e ()V run
	e (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	e (Ljava/lang/String;)Z lambda$null$5
	e (Ljava/util/function/Supplier;)Lnet/minecraft/server/IResourcePack; lambda$adaptV3$40
	e (Lnet/minecraft/server/IChatBaseComponent;)V lambda$clearResourcePacksOnError$3
	e (Z)V runTick
	f ()Lded; getMainRenderTarget
	f (Z)V continueAttack
	g ()Ljava/lang/String; getLaunchedVersion
	h ()Ljava/lang/String; getVersionType
	i ()Z isEnforceUnicode
	j ()Ljava/util/concurrent/CompletableFuture; reloadResourcePacks
	k ()Lnet/minecraft/server/Convertable; getLevelSource
	l ()V destroy
	m ()V emergencySave
	n ()V stop
	o ()Z isRunning
	p ()Lenh; getMusicManager
	q ()V tick
	r ()V clearLevel
	s ()Z allowsMultiplayer
	t ()Z allowsChat
	u ()Z isDemo
	v ()Ldwm; getConnection
	w ()Z renderNames
	x ()Z useFancyGraphics
	z ()Z useShaderTransparency
djv net/minecraft/client/LogaritmicProgressOption
	a (D)D toPct
	b (D)D toValue
net/minecraft/server/WorldGenFeatureReplaceBlock net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureReplaceBlockConfiguration;)Z place
djy net/minecraft/client/NarratorStatus
	a OFF
	b ALL
	c CHAT
	d SYSTEM
	e BY_ID
	f id
	g name
	h $VALUES
	a ()I getId
	a (I)Ldjy; byId
	b ()Lnet/minecraft/server/IChatBaseComponent; getName
	b (I)[Ldjy; lambda$static$0
djx net/minecraft/client/MouseHandler
	a minecraft
	b isLeftPressed
	c isMiddlePressed
	d isRightPressed
	e xpos
	f ypos
	g fakeRightMouse
	h activeButton
	i ignoreFirstMove
	j clickDepth
	k mousePressedTime
	l smoothTurnX
	m smoothTurnY
	n accumulatedDX
	o accumulatedDY
	p accumulatedScroll
	q lastMouseEventTime
	r mouseGrabbed
	a ()V turnPlayer
	a (J)V setup
	a (JDD)V onScroll
	a (JIII)V onPress
	a (JIJ)V lambda$setup$9
	a (JLjava/util/List;)V onDrop
	a (J[Ljava/nio/file/Path;)V lambda$null$8
	a (Ldmf;DD)V lambda$onMove$10
	a (Ldmf;DDDD)V lambda$onMove$11
	a ([ZDDI)V lambda$onPress$1
	b ()Z isLeftPressed
	b (JDD)V onMove
	b (JIII)V lambda$setup$5
	b ([ZDDI)V lambda$onPress$0
	c ()Z isMiddlePressed
	c (JDD)V lambda$setup$7
	c (JIII)V lambda$null$4
	d ()Z isRightPressed
	d (JDD)V lambda$null$6
	e ()D xpos
	e (JDD)V lambda$setup$3
	f ()D ypos
	f (JDD)V lambda$null$2
	g ()V setIgnoreFirstMove
	h ()Z isMouseGrabbed
	i ()V grabMouse
	j ()V releaseMouse
	k ()V cursorEntered
djz net/minecraft/client/Option
	A NARRATOR
	B PARTICLES
	C RENDER_CLOUDS
	D TEXT_BACKGROUND
	E AUTO_JUMP
	F AUTO_SUGGESTIONS
	G CHAT_COLOR
	H CHAT_LINKS
	I CHAT_LINKS_PROMPT
	J DISCRETE_MOUSE_SCROLL
	K ENABLE_VSYNC
	L ENTITY_SHADOWS
	M FORCE_UNICODE_FONT
	N INVERT_MOUSE
	O REALMS_NOTIFICATIONS
	P REDUCED_DEBUG_INFO
	Q SHOW_SUBTITLES
	R SNOOPER_ENABLED
	S TOGGLE_CROUCH
	T TOGGLE_SPRINT
	U TOUCHSCREEN
	V USE_FULLSCREEN
	W VIEW_BOBBING
	X ACCESSIBILITY_TOOLTIP_FOV_EFFECT
	Y ACCESSIBILITY_TOOLTIP_SCREEN_EFFECT
	Z GRAPHICS_TOOLTIP_FAST
	a BIOME_BLEND_RADIUS
	aa GRAPHICS_TOOLTIP_FABULOUS
	ab GRAPHICS_TOOLTIP_FANCY
	ac caption
	ad toolTip
	b CHAT_HEIGHT_FOCUSED
	c CHAT_HEIGHT_UNFOCUSED
	d CHAT_OPACITY
	e CHAT_SCALE
	f CHAT_WIDTH
	g CHAT_LINE_SPACING
	h CHAT_DELAY
	i FOV
	j FOV_EFFECTS_SCALE
	k SCREEN_EFFECTS_SCALE
	l FRAMERATE_LIMIT
	m GAMMA
	n MIPMAP_LEVELS
	o MOUSE_WHEEL_SENSITIVITY
	p RAW_MOUSE_INPUT
	q RENDER_DISTANCE
	r ENTITY_DISTANCE_SCALING
	s SENSITIVITY
	t TEXT_BACKGROUND_OPACITY
	u AMBIENT_OCCLUSION
	v ATTACK_INDICATOR
	w CHAT_VISIBILITY
	x GRAPHICS
	y GUI_SCALE
	z MAIN_HAND
	A (Ldka;)Ljava/lang/Double; lambda$static$33
	B (Ldka;)Ljava/lang/Double; lambda$static$30
	C (Ldka;)Ljava/lang/Double; lambda$static$27
	D (Ldka;)Ljava/lang/Double; lambda$static$24
	E (Ldka;)Ljava/lang/Double; lambda$static$21
	F (Ldka;)Ljava/lang/Double; lambda$static$18
	G (Ldka;)Ljava/lang/Double; lambda$static$15
	H (Ldka;)Ljava/lang/Double; lambda$static$12
	I (Ldka;)Ljava/lang/Double; lambda$static$9
	J (Ldka;)Ljava/lang/Double; lambda$static$6
	K (Ldka;)Ljava/lang/Double; lambda$static$3
	L (Ldka;)Ljava/lang/Double; lambda$static$0
	a ()Lnet/minecraft/server/IChatBaseComponent; getCaption
	a (I)Lnet/minecraft/server/IChatBaseComponent; pixelValueLabel
	a (Ldka;)Z lambda$static$115
	a (Ldka;III)Ldle; createButton
	a (Ldka;Ldjm;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$110
	a (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$58
	a (Ldka;Ljava/lang/Boolean;)V lambda$static$116
	a (Ldka;Ljava/lang/Double;)V lambda$static$57
	a (Ldka;Ljava/lang/Integer;)V lambda$static$109
	a (Ljava/util/List;)V setTooltip
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; genericValueLabel
	b ()Ljava/util/Optional; getTooltip
	b (I)Lnet/minecraft/server/IChatBaseComponent; percentAddValueLabel
	b (Ldka;)Z lambda$static$113
	b (Ldka;Ldjm;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$108
	b (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$55
	b (Ldka;Ljava/lang/Boolean;)V lambda$static$114
	b (Ldka;Ljava/lang/Double;)V lambda$static$54
	b (Ldka;Ljava/lang/Integer;)V lambda$static$107
	c (D)Lnet/minecraft/server/IChatBaseComponent; percentValueLabel
	c (I)Lnet/minecraft/server/IChatBaseComponent; genericValueLabel
	c (Ldka;)Lnet/minecraft/server/IChatBaseComponent; getMessage
	c (Ldka;Ldjm;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$78
	c (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$52
	c (Ldka;Ljava/lang/Boolean;)V lambda$static$112
	c (Ldka;Ljava/lang/Double;)V lambda$static$51
	c (Ldka;Ljava/lang/Integer;)V lambda$static$77
	d (Ldka;)Z lambda$static$111
	d (Ldka;Ldjm;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$76
	d (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$49
	d (Ldka;Ljava/lang/Boolean;)V lambda$static$106
	d (Ldka;Ljava/lang/Double;)V lambda$static$48
	d (Ldka;Ljava/lang/Integer;)V lambda$static$75
	e (Ldka;)Z lambda$static$105
	e (Ldka;Ldjm;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$74
	e (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$44
	e (Ldka;Ljava/lang/Boolean;)V lambda$static$104
	e (Ldka;Ljava/lang/Double;)V lambda$static$43
	e (Ldka;Ljava/lang/Integer;)V lambda$static$73
	f (Ldka;)Z lambda$static$103
	f (Ldka;Ldjm;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$72
	f (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$41
	f (Ldka;Ljava/lang/Boolean;)V lambda$static$102
	f (Ldka;Ljava/lang/Double;)V lambda$static$40
	f (Ldka;Ljava/lang/Integer;)V lambda$static$71
	g (Ldka;)Z lambda$static$101
	g (Ldka;Ldjm;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$70
	g (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$38
	g (Ldka;Ljava/lang/Boolean;)V lambda$static$100
	g (Ldka;Ljava/lang/Double;)V lambda$static$37
	g (Ldka;Ljava/lang/Integer;)V lambda$static$69
	h (Ldka;)Z lambda$static$99
	h (Ldka;Ldjm;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$68
	h (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$35
	h (Ldka;Ljava/lang/Boolean;)V lambda$static$98
	h (Ldka;Ljava/lang/Double;)V lambda$static$34
	h (Ldka;Ljava/lang/Integer;)V lambda$static$67
	i (Ldka;)Z lambda$static$97
	i (Ldka;Ldjm;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$66
	i (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$32
	i (Ldka;Ljava/lang/Boolean;)V lambda$static$96
	i (Ldka;Ljava/lang/Double;)V lambda$static$31
	i (Ldka;Ljava/lang/Integer;)V lambda$static$65
	j (Ldka;)Z lambda$static$95
	j (Ldka;Ldjm;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$64
	j (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$29
	j (Ldka;Ljava/lang/Boolean;)V lambda$static$94
	j (Ldka;Ljava/lang/Double;)V lambda$static$28
	j (Ldka;Ljava/lang/Integer;)V lambda$static$63
	k (Ldka;)Z lambda$static$93
	k (Ldka;Ldjm;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$62
	k (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$26
	k (Ldka;Ljava/lang/Boolean;)V lambda$static$92
	k (Ldka;Ljava/lang/Double;)V lambda$static$25
	k (Ldka;Ljava/lang/Integer;)V lambda$static$61
	l (Ldka;)Z lambda$static$91
	l (Ldka;Ldjm;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$60
	l (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$23
	l (Ldka;Ljava/lang/Boolean;)V lambda$static$90
	l (Ldka;Ljava/lang/Double;)V lambda$static$22
	l (Ldka;Ljava/lang/Integer;)V lambda$static$59
	m (Ldka;)Z lambda$static$89
	m (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$20
	m (Ldka;Ljava/lang/Boolean;)V lambda$static$88
	m (Ldka;Ljava/lang/Double;)V lambda$static$19
	n (Ldka;)Z lambda$static$87
	n (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$17
	n (Ldka;Ljava/lang/Boolean;)V lambda$static$86
	n (Ldka;Ljava/lang/Double;)V lambda$static$16
	o (Ldka;)Z lambda$static$85
	o (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$14
	o (Ldka;Ljava/lang/Boolean;)V lambda$static$84
	o (Ldka;Ljava/lang/Double;)V lambda$static$13
	p (Ldka;)Z lambda$static$83
	p (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$11
	p (Ldka;Ljava/lang/Boolean;)V lambda$static$82
	p (Ldka;Ljava/lang/Double;)V lambda$static$10
	q (Ldka;)Z lambda$static$81
	q (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$8
	q (Ldka;Ljava/lang/Boolean;)V lambda$static$80
	q (Ldka;Ljava/lang/Double;)V lambda$static$7
	r (Ldka;)Z lambda$static$79
	r (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$5
	r (Ldka;Ljava/lang/Boolean;)V lambda$static$46
	r (Ldka;Ljava/lang/Double;)V lambda$static$4
	s (Ldka;)Ljava/lang/Double; lambda$static$56
	s (Ldka;Ldkc;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$2
	s (Ldka;Ljava/lang/Double;)V lambda$static$1
	t (Ldka;)Ljava/lang/Double; lambda$static$53
	u (Ldka;)Ljava/lang/Double; lambda$static$50
	v (Ldka;)Ljava/lang/Double; lambda$static$47
	w (Ldka;)Z lambda$static$45
	x (Ldka;)Ljava/lang/Double; lambda$static$42
	y (Ldka;)Ljava/lang/Double; lambda$static$39
	z (Ldka;)Ljava/lang/Double; lambda$static$36
net/minecraft/server/PacketPlayInRecipeSettings net/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket
	a bookType
	b isOpen
	c isFiltering
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/RecipeBookType; getBookType
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z isOpen
	d ()Z isFiltering
net/minecraft/server/IWorldReader net/minecraft/world/level/LevelReader
	A (Lnet/minecraft/server/BlockPosition;)Z isWaterAt
	a (III)Lnet/minecraft/server/BiomeBase; getUncachedNoiseBiome
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	areChunksLoadedBetween (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Z hasChunksAt
	b (III)Lnet/minecraft/server/BiomeBase; getNoiseBiome
	c ()I getSkyDarken
	c (II)Lnet/minecraft/server/IBlockAccess; getChunkForCollisions
	c (Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/stream/Stream; getBlockStatesIfLoaded
	c (Lnet/minecraft/server/BlockPosition;I)I getMaxLocalRawBrightness
	c (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	containsLiquid (Lnet/minecraft/server/AxisAlignedBB;)Z containsAnyLiquid
	d ()Lnet/minecraft/server/BiomeManager; getBiomeManager
	getChunkAt (II)Lnet/minecraft/server/IChunkAccess; getChunk
	getChunkAt (IILnet/minecraft/server/ChunkStatus;)Lnet/minecraft/server/IChunkAccess; getChunk
	getChunkAt (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	getDimensionManager ()Lnet/minecraft/server/DimensionManager; dimensionType
	getHighestBlockYAt (Lnet/minecraft/server/HeightMap$Type;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; getHeightmapPos
	getLightLevel (Lnet/minecraft/server/BlockPosition;)I getMaxLocalRawBrightness
	isAreaLoaded (IIIIII)Z hasChunksAt
	isChunkLoaded (II)Z hasChunk
	isEmpty (Lnet/minecraft/server/BlockPosition;)Z isEmptyBlock
	isLoaded (Lnet/minecraft/server/BlockPosition;)Z hasChunkAt
	s_ ()Z isClientSide
	x (Lnet/minecraft/server/BlockPosition;)Z canSeeSkyFromBelowWater
	y (Lnet/minecraft/server/BlockPosition;)F getBrightness
	z (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IChunkAccess; getChunk
net/minecraft/server/DataBitsPacked net/minecraft/util/datafix/PackedBitStorage
	a data
	b bits
	c mask
	d size
	a ()[J getRaw
	a (I)I get
	a (II)V set
	b ()I getBits
dkb net/minecraft/client/ParticleStatus
	a ALL
	b DECREASED
	c MINIMAL
	d BY_ID
	e id
	f key
	g $VALUES
	a ()Ljava/lang/String; getKey
	a (I)Ldkb; byId
	b ()I getId
	b (I)[Ldkb; lambda$static$0
net/minecraft/server/EntityEnderDragon net/minecraft/world/entity/boss/enderdragon/EnderDragon
	PHASE DATA_PHASE
	bA tail1
	bB tail2
	bC tail3
	bD wing1
	bE wing2
	bF dragonFight
	bG phaseManager
	bH growlTime
	bI sittingDamageReceived
	bJ nodes
	bK nodeAdjacency
	bL openSet
	bo head
	bp oFlapTime
	bq flapTime
	br inWall
	bt yRotA
	bv LOGGER
	bw CRYSTAL_DESTROY_TARGETING
	by neck
	bz body
	c positions
	children subEntities
	currentEnderCrystal nearestCrystal
	d posPointer
	deathAnimationTicks dragonDeathTime
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	Z ()V kill
	a (I)V dropExperience
	a (IF)[D getLatencyPos
	a (IILnet/minecraft/server/PathPoint;)Lnet/minecraft/server/PathEntity; findPath
	a (I[D[D)F getHeadPartYOffset
	a (Ljava/util/List;)V knockBack
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityComplexPart;DDD)V tickPart
	a (Lnet/minecraft/server/EntityComplexPart;Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityEnderCrystal;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DamageSource;)V onCrystalDestroyed
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)Lnet/minecraft/server/PathEntity; reconstructPath
	aS ()Z isPickable
	b (Ljava/util/List;)V hurt
	b (Lnet/minecraft/server/AxisAlignedBB;)Z checkWalls
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bN ()Z canChangeDimensions
	c (Lnet/minecraft/server/MobEffect;)Z addEffect
	cH ()V checkDespawn
	cT ()V tickDeath
	ct ()Lnet/minecraft/server/SoundCategory; getSoundSource
	dF ()F getSoundVolume
	dealDamage (Lnet/minecraft/server/DamageSource;F)Z reallyHurt
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eI ()I findClosestNode
	eJ ()[Lnet/minecraft/server/EntityComplexPart; getSubEntities
	eM ()F getHeadYOffset
	eN ()V checkCrystals
	getDragonControllerManager ()Lnet/minecraft/server/DragonControllerManager; getPhaseManager
	getEnderDragonBattle ()Lnet/minecraft/server/EnderDragonBattle; getDragonFight
	i (D)F rotWrap
	k ()V aiStep
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	n (Lnet/minecraft/server/Entity;)Z canRide
	p (DDD)I findClosestNode
	x (F)Lnet/minecraft/server/Vec3D; getHeadLookVector
dka net/minecraft/client/Options
	A mipmapLevels
	B useNativeTransport
	C attackIndicator
	D tutorialStep
	E biomeBlendRadius
	F mouseWheelSensitivity
	G rawMouseInput
	H glDebugVerbosity
	I autoJump
	J autoSuggestions
	K chatColors
	L chatLinks
	M chatLinksPrompt
	N enableVsync
	O entityShadows
	P forceUnicodeFont
	Q invertYMouse
	R discreteMouseScroll
	S realmsNotifications
	T reducedDebugInfo
	U snooperEnabled
	V showSubtitles
	W backgroundForChatOnly
	X touchscreen
	Y fullscreen
	Z bobView
	a sensitivity
	aA keySaveHotbarActivator
	aB keyLoadHotbarActivator
	aC keyMappings
	aD minecraft
	aE difficulty
	aF hideGui
	aG renderDebug
	aH renderDebugCharts
	aI renderFpsChart
	aJ lastMpIp
	aK smoothCamera
	aL fov
	aM screenEffectScale
	aN fovEffectScale
	aO gamma
	aP guiScale
	aQ particles
	aR narratorStatus
	aS languageCode
	aT syncWrites
	aU LOGGER
	aV GSON
	aW RESOURCE_PACK_TYPE
	aX OPTION_SPLITTER
	aY modelParts
	aZ sourceVolumes
	aa toggleCrouch
	ab toggleSprint
	ac skipMultiplayerWarning
	ad keyUp
	ae keyLeft
	af keyDown
	ag keyRight
	ah keyJump
	ai keyShift
	aj keySprint
	ak keyInventory
	al keySwapOffhand
	am keyDrop
	an keyUse
	ao keyAttack
	ap keyPickItem
	aq keyChat
	ar keyPlayerList
	as keyCommand
	at keyScreenshot
	au keyTogglePerspective
	av keySmoothCamera
	aw keyFullscreen
	ax keySpectatorOutlines
	ay keyAdvancements
	az keyHotbarSlots
	b renderDistance
	ba optionsFile
	bb cameraType
	c entityDistanceScaling
	d framerateLimit
	e renderClouds
	f graphicsMode
	g ambientOcclusion
	h resourcePacks
	i incompatibleResourcePacks
	j chatVisibility
	k chatOpacity
	l chatLineSpacing
	m textBackgroundOpacity
	n fullscreenVideoModeString
	o hideServerAddress
	p advancedItemTooltips
	q pauseOnLostFocus
	r mainHand
	s overrideWidth
	t overrideHeight
	u heldItemTooltips
	v chatScale
	w chatWidth
	x chatHeightUnfocused
	y chatHeightFocused
	z chatDelay
	a ()V load
	a (F)F getBackgroundOpacity
	a (I)I getBackgroundColor
	a (Lbfu;)V toggleModelPart
	a (Lbfu;Z)V setModelPart
	a (Ldji;)V setCameraType
	a (Ldjt;Ldel$a;)V setKey
	a (Ljava/lang/String;)F readFloat
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; dataFix
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;)V lambda$load$2
	a (Lnet/minecraft/server/ResourcePackRepository;)V loadSelectedResourcePacks
	a (Lnet/minecraft/server/SoundCategory;)F getSoundSourceVolume
	a (Lnet/minecraft/server/SoundCategory;F)V setSoundCategoryVolume
	b ()V save
	b (F)I getBackgroundColor
	c ()V broadcastOptions
	d ()Ljava/util/Set; getModelParts
	e ()Ldjk; getCloudsType
	f ()Z useNativeTransport
	g ()Ldji; getCameraType
	h ()Z lambda$new$1
	i ()Z lambda$new$0
dkd net/minecraft/client/RecipeBookCategories
	a CRAFTING_SEARCH
	b CRAFTING_BUILDING_BLOCKS
	c CRAFTING_REDSTONE
	d CRAFTING_EQUIPMENT
	e CRAFTING_MISC
	f FURNACE_SEARCH
	g FURNACE_FOOD
	h FURNACE_BLOCKS
	i FURNACE_MISC
	j BLAST_FURNACE_SEARCH
	k BLAST_FURNACE_BLOCKS
	l BLAST_FURNACE_MISC
	m SMOKER_SEARCH
	n SMOKER_FOOD
	o STONECUTTER
	p SMITHING
	q CAMPFIRE
	r UNKNOWN
	s SMOKER_CATEGORIES
	t BLAST_FURNACE_CATEGORIES
	u FURNACE_CATEGORIES
	v CRAFTING_CATEGORIES
	w AGGREGATE_CATEGORIES
	x itemIcons
	y $VALUES
	a ()Ljava/util/List; getIconItems
	a (Lnet/minecraft/server/RecipeBookType;)Ljava/util/List; getCategories
dkc net/minecraft/client/ProgressOption
	X steps
	Y minValue
	Z maxValue
	aa getter
	ab setter
	ac toString
	a (D)D toPct
	a (F)V setMaxValue
	a (Ldka;)D get
	a (Ldka;D)V set
	a (Ldka;III)Ldle; createButton
	b (D)D toValue
	c ()D getMinValue
	c (Ldka;)Lnet/minecraft/server/IChatBaseComponent; getMessage
	d ()D getMaxValue
	d (D)D clamp
dkf net/minecraft/client/Session
	a players
	b isRemoteServer
	c difficulty
	d gameMode
	e id
net/minecraft/server/NBTTagLongArray net/minecraft/nbt/LongArrayTag
	a TYPE
	b data
	a ()B getId
	a (I)Lnet/minecraft/server/NBTTagLong; get
	a (ILnet/minecraft/server/NBTBase;)Z setTag
	a (ILnet/minecraft/server/NBTTagLong;)Lnet/minecraft/server/NBTTagLong; set
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (Ljava/util/List;)[J toArray
	b ()Lnet/minecraft/server/NBTTagType; getType
	b (I)Lnet/minecraft/server/NBTTagLong; remove
	b (ILnet/minecraft/server/NBTBase;)Z addTag
	b (ILnet/minecraft/server/NBTTagLong;)V add
	c ()Lnet/minecraft/server/NBTBase; copy
	c (I)Lnet/minecraft/server/NBTBase; remove
	c (ILnet/minecraft/server/NBTBase;)V add
	d ()Lnet/minecraft/server/NBTTagLongArray; copy
	d (ILnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; set
	d_ ()B getElementType
	getLongs ()[J getAsLongArray
dke net/minecraft/client/Screenshot
	a LOGGER
	b DATE_FORMAT
	c rowHeight
	d outputStream
	e bytes
	f width
	g height
	h file
	a ()V saveRow
	a (IILded;)Ldeq; takeScreenshot
	a (Ldeq;Ljava/io/File;Ljava/util/function/Consumer;)V lambda$_grab$2
	a (Ljava/io/File;)Ljava/io/File; getFile
	a (Ljava/io/File;IILded;Ljava/util/function/Consumer;)V grab
	a (Ljava/io/File;Ljava/lang/String;IILded;Ljava/util/function/Consumer;)V grab
	a (Ljava/io/File;Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; lambda$null$1
	a (Ljava/nio/ByteBuffer;IIII)V addRegion
	b ()Ljava/io/File; close
	b (Ljava/io/File;Ljava/lang/String;IILded;Ljava/util/function/Consumer;)V _grab
	c (Ljava/io/File;Ljava/lang/String;IILded;Ljava/util/function/Consumer;)V lambda$grab$0
dkh net/minecraft/client/Timer
	a partialTick
	b tickDelta
	c lastMs
	d msPerTick
	a (J)I advanceTime
aq$a net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance
	a from
	b to
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/ResourceKey;)Laq$a; changedDimensionTo
	a (Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/ResourceKey;)Laq$a; changedDimension
	b (Lnet/minecraft/server/ResourceKey;)Laq$a; changedDimensionFrom
	b (Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/ResourceKey;)Z matches
	c ()Laq$a; changedDimension
net/minecraft/server/ItemSnowball net/minecraft/world/item/SnowballItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
dkg net/minecraft/client/StringSplitter
	a widthProvider
	a (Ldkg$e;Lnet/minecraft/server/ChatModifier;Ljava/lang/String;)Ljava/util/Optional; lambda$componentStyleAtWidth$4
	a (Ldkg$e;Lorg/apache/commons/lang3/mutable/MutableObject;ILnet/minecraft/server/ChatModifier;I)Z lambda$componentStyleAtWidth$5
	a (Ldkg;)Ldkg$f; access$000
	a (Ljava/lang/String;)F stringWidth
	a (Ljava/lang/String;IIZ)I getWordPosition
	a (Ljava/lang/String;ILnet/minecraft/server/ChatModifier;)I plainIndexAtWidth
	a (Ljava/lang/String;ILnet/minecraft/server/ChatModifier;ZLdkg$d;)V splitLines
	a (Ljava/util/List;Ljava/lang/String;Lnet/minecraft/server/ChatModifier;II)V lambda$splitLines$6
	a (Ljava/util/List;Lnet/minecraft/server/ChatModifier;Ljava/lang/String;)Ljava/util/Optional; lambda$splitLines$9
	a (Ljava/util/List;Lnet/minecraft/server/IChatFormatted;Ljava/lang/Boolean;)V lambda$splitLines$7
	a (Ljava/util/List;Lnet/minecraft/server/IChatFormatted;Lnet/minecraft/server/IChatFormatted;Ljava/lang/Boolean;)V lambda$splitLines$8
	a (Lnet/minecraft/server/FormattedString;)F stringWidth
	a (Lnet/minecraft/server/FormattedString;I)Lnet/minecraft/server/ChatModifier; componentStyleAtWidth
	a (Lnet/minecraft/server/IChatFormatted;)F stringWidth
	a (Lnet/minecraft/server/IChatFormatted;I)Lnet/minecraft/server/ChatModifier; componentStyleAtWidth
	a (Lnet/minecraft/server/IChatFormatted;ILnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/IChatFormatted; headByWidth
	a (Lnet/minecraft/server/IChatFormatted;ILnet/minecraft/server/ChatModifier;Ljava/util/function/BiConsumer;)V splitLines
	a (Lnet/minecraft/server/IChatFormatted;ILnet/minecraft/server/ChatModifier;Lnet/minecraft/server/IChatFormatted;)Ljava/util/List; splitLines
	a (Lorg/apache/commons/lang3/mutable/MutableFloat;ILnet/minecraft/server/ChatModifier;I)Z lambda$stringWidth$2
	a (Lorg/apache/commons/lang3/mutable/MutableFloat;ILorg/apache/commons/lang3/mutable/MutableInt;ILnet/minecraft/server/ChatModifier;I)Z lambda$plainTailByWidth$3
	b (Ljava/lang/String;ILnet/minecraft/server/ChatModifier;)Ljava/lang/String; plainHeadByWidth
	b (Lnet/minecraft/server/IChatFormatted;ILnet/minecraft/server/ChatModifier;)Ljava/util/List; splitLines
	b (Lorg/apache/commons/lang3/mutable/MutableFloat;ILnet/minecraft/server/ChatModifier;I)Z lambda$stringWidth$1
	c (Ljava/lang/String;ILnet/minecraft/server/ChatModifier;)Ljava/lang/String; plainTailByWidth
	c (Lorg/apache/commons/lang3/mutable/MutableFloat;ILnet/minecraft/server/ChatModifier;I)Z lambda$stringWidth$0
	d (Ljava/lang/String;ILnet/minecraft/server/ChatModifier;)I formattedIndexByWidth
	e (Ljava/lang/String;ILnet/minecraft/server/ChatModifier;)Ljava/lang/String; formattedHeadByWidth
	f (Ljava/lang/String;ILnet/minecraft/server/ChatModifier;)I findLineBreak
	g (Ljava/lang/String;ILnet/minecraft/server/ChatModifier;)Ljava/util/List; splitLines
dkj net/minecraft/client/User
	a name
	b uuid
	c accessToken
	d type
	a ()Ljava/lang/String; getSessionId
	b ()Ljava/lang/String; getUuid
	c ()Ljava/lang/String; getName
	d ()Ljava/lang/String; getAccessToken
	e ()Lcom/mojang/authlib/GameProfile; getGameProfile
	f ()Ldkj$a; getType
dki net/minecraft/client/ToggleKeyMapping
	a needsToggle
	a (Z)V setDown
dkl net/minecraft/client/color/block/BlockColors
	a blockColors
	b coloringStates
	a ()Ldkl; createDefault
	a (Ldkk;[Lnet/minecraft/server/Block;)V register
	a (Ljava/util/Set;[Lnet/minecraft/server/Block;)V addColoringStates
	a (Lnet/minecraft/server/Block;)Ljava/util/Set; getColoringProperties
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;I)I getColor
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getColor
	a (Lnet/minecraft/server/IBlockState;[Lnet/minecraft/server/Block;)V addColoringState
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$10
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$9
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$8
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$7
	f (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$6
	g (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$5
	h (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$4
	i (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$3
	j (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$2
	k (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$1
	l (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;I)I lambda$createDefault$0
net/minecraft/server/WorldGenFeatureTree net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator
	c CODEC
	a ()Lnet/minecraft/server/WorldGenFeatureTrees; type
	a (Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V place
	a (Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockStateBoolean;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V placeVine
	a (Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V setBlock
net/minecraft/server/WorldGenFeatureCircleConfiguration net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration
	a CODEC
	b state
	c radius
	d halfHeight
	e targets
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lnet/minecraft/server/WorldGenFeatureCircleConfiguration;)Ljava/util/List; lambda$null$3
	b (Lnet/minecraft/server/WorldGenFeatureCircleConfiguration;)Ljava/lang/Integer; lambda$null$2
	c (Lnet/minecraft/server/WorldGenFeatureCircleConfiguration;)Lnet/minecraft/server/IntSpread; lambda$null$1
	d (Lnet/minecraft/server/WorldGenFeatureCircleConfiguration;)Lnet/minecraft/server/IBlockData; lambda$null$0
net/minecraft/server/ArgumentAnchor net/minecraft/commands/arguments/EntityAnchorArgument
	a EXAMPLES
	b ERROR_INVALID
	a ()Lnet/minecraft/server/ArgumentAnchor; anchor
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ArgumentAnchor$Anchor; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ArgumentAnchor$Anchor; getAnchor
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
dkk net/minecraft/client/color/block/BlockColor
dkn net/minecraft/client/color/block/package-info
net/minecraft/server/DragonControllerLanding net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase
	b targetLocation
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	h ()F getTurnSpeed
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
dkm net/minecraft/client/color/block/BlockTintCache
	a latestChunkOnThread
	b cache
	c lock
	a ()V invalidateAll
	a (II)V invalidateForChunk
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/IntSupplier;)I getColor
	b ()Ldkm$a; lambda$new$0
	b (II)[I findOrCreateChunkCache
dkp net/minecraft/client/color/item/ItemColors
	a itemColors
	a (Ldkl;)Ldkp; createDefault
	a (Ldkl;Lnet/minecraft/server/ItemStack;I)I lambda$createDefault$5
	a (Ldko;[Lnet/minecraft/server/IMaterial;)V register
	a (Lnet/minecraft/server/ItemMonsterEgg;Lnet/minecraft/server/ItemStack;I)I lambda$createDefault$4
	a (Lnet/minecraft/server/ItemStack;I)I getColor
	b (Lnet/minecraft/server/ItemStack;I)I lambda$createDefault$7
	c (Lnet/minecraft/server/ItemStack;I)I lambda$createDefault$6
	d (Lnet/minecraft/server/ItemStack;I)I lambda$createDefault$3
	e (Lnet/minecraft/server/ItemStack;I)I lambda$createDefault$2
	f (Lnet/minecraft/server/ItemStack;I)I lambda$createDefault$1
	g (Lnet/minecraft/server/ItemStack;I)I lambda$createDefault$0
boq$1 net/minecraft/world/item/crafting/RecipeType$1
	h val$name
bix$1 net/minecraft/world/inventory/ItemCombinerMenu$1
	a this$0
	X_ ()V setChanged
dko net/minecraft/client/color/item/ItemColor
crc$1 net/minecraft/world/level/levelgen/structure/JunglePyramidPiece$1
bix$2 net/minecraft/world/inventory/ItemCombinerMenu$2
	a this$0
	a (Lnet/minecraft/server/EntityHuman;)Z mayPickup
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
net/minecraft/server/CommandFunction net/minecraft/server/commands/FunctionCommand
	a SUGGEST_FUNCTION
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I runFunction
dom$a net/minecraft/client/gui/screens/PopupScreen$ButtonOption
	a message
	b onPress
	a (Ldom$a;)Lnet/minecraft/server/IChatBaseComponent; access$000
	b (Ldom$a;)Ldlg$a; access$100
dkr net/minecraft/client/gui/Font
	a lineHeight
	b random
	c SHADOW_OFFSET
	d fonts
	e splitter
	a ()Z isBidirectional
	a (I)I adjustColor
	a (ILnet/minecraft/server/ChatModifier;)F lambda$new$0
	a (Ldfj;Ljava/lang/String;FFI)I drawShadow
	a (Ldfj;Ljava/lang/String;FFIZ)I drawShadow
	a (Ldfj;Lnet/minecraft/server/FormattedString;FFI)I drawShadow
	a (Ldfj;Lnet/minecraft/server/IChatBaseComponent;FFI)I drawShadow
	a (Ldkr;Ldmw;ZZFFFLnet/minecraft/server/Matrix4f;Ldfn;FFFFI)V access$100
	a (Ldkr;Lnet/minecraft/server/MinecraftKey;)Ldmt; access$000
	a (Ldmw;ZZFFFLnet/minecraft/server/Matrix4f;Ldfn;FFFFI)V renderChar
	a (Ljava/lang/String;)Ljava/lang/String; bidirectionalShaping
	a (Ljava/lang/String;FFILnet/minecraft/server/Matrix4f;ZZ)I drawInternal
	a (Ljava/lang/String;FFIZLnet/minecraft/server/Matrix4f;Ldzy;ZII)I drawInBatch
	a (Ljava/lang/String;FFIZLnet/minecraft/server/Matrix4f;Ldzy;ZIIZ)I drawInBatch
	a (Ljava/lang/String;I)Ljava/lang/String; plainSubstrByWidth
	a (Ljava/lang/String;IZ)Ljava/lang/String; plainSubstrByWidth
	a (Lnet/minecraft/server/FormattedString;)I width
	a (Lnet/minecraft/server/FormattedString;FFILnet/minecraft/server/Matrix4f;Z)I drawInternal
	a (Lnet/minecraft/server/FormattedString;FFIZLnet/minecraft/server/Matrix4f;Ldzy;ZII)I drawInBatch
	a (Lnet/minecraft/server/IChatBaseComponent;FFIZLnet/minecraft/server/Matrix4f;Ldzy;ZII)I drawInBatch
	a (Lnet/minecraft/server/IChatFormatted;)I width
	a (Lnet/minecraft/server/IChatFormatted;I)Lnet/minecraft/server/IChatFormatted; substrByWidth
	a (Lnet/minecraft/server/IChatFormatted;IIII)V drawWordWrap
	a (Lnet/minecraft/server/MinecraftKey;)Ldmt; getFontSet
	b ()Ldkg; getSplitter
	b (Ldfj;Ljava/lang/String;FFI)I draw
	b (Ldfj;Lnet/minecraft/server/FormattedString;FFI)I draw
	b (Ldfj;Lnet/minecraft/server/IChatBaseComponent;FFI)I draw
	b (Ljava/lang/String;)I width
	b (Ljava/lang/String;FFIZLnet/minecraft/server/Matrix4f;Ldzy;ZII)F renderText
	b (Ljava/lang/String;FFIZLnet/minecraft/server/Matrix4f;Ldzy;ZIIZ)I drawInternal
	b (Ljava/lang/String;I)I wordWrapHeight
	b (Lnet/minecraft/server/FormattedString;FFIZLnet/minecraft/server/Matrix4f;Ldzy;ZII)I drawInternal
	b (Lnet/minecraft/server/IChatFormatted;I)Ljava/util/List; split
	c (Lnet/minecraft/server/FormattedString;FFIZLnet/minecraft/server/Matrix4f;Ldzy;ZII)F renderText
dkq net/minecraft/client/color/item/package-info
net/minecraft/server/PacketPlayOutEntity net/minecraft/network/protocol/game/ClientboundMoveEntityPacket
	a entityId
	b xa
	c ya
	d za
	e yRot
	f xRot
	g onGround
	h hasRot
	i hasPos
	a (D)J entityToPacket
	a (J)D packetToEntity
	a (JJJ)Lnet/minecraft/server/Vec3D; packetToEntity
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; updateEntityPosition
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getEntity
	b ()S getXa
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()S getYa
	d ()S getZa
	e ()B getyRot
	f ()B getxRot
	g ()Z hasRotation
	h ()Z hasPosition
	i ()Z isOnGround
net/minecraft/server/LootItemFunctionCopyNBT net/minecraft/world/level/storage/loot/functions/CopyNbtFunction
	a source
	b operations
	d ENTITY_GETTER
	e BLOCK_ENTITY_GETTER
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ljava/lang/String;)Ldr$h; access$000
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/NBTBase;Lczy$b;)V lambda$run$0
	a (Lnet/minecraft/server/LootItemFunctionCopyNBT$Source;)Lczy$a; copyData
	a (Lnet/minecraft/server/LootItemFunctionCopyNBT;)Lnet/minecraft/server/LootItemFunctionCopyNBT$Source; access$800
	a (Lnet/minecraft/server/TileEntity;)Lnet/minecraft/server/NBTBase; lambda$static$1
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
	b (Ljava/lang/String;)Ldr$h; compileNbtPath
	b (Lnet/minecraft/server/LootItemFunctionCopyNBT;)Ljava/util/List; access$900
	c ()Ljava/util/function/Function; access$600
	d ()Ljava/util/function/Function; access$700
dkt net/minecraft/client/gui/GuiComponent
	a blitOffset
	f BACKGROUND_LOCATION
	g STATS_ICON_LOCATION
	h GUI_ICONS_LOCATION
	a (IILjava/util/function/BiConsumer;)V blitOutlineBlack
	a (Ldfj;IIFFIIII)V blit
	a (Ldfj;IIIFFIIII)V blit
	a (Ldfj;IIII)V hLine
	a (Ldfj;IIIIFFIIII)V blit
	a (Ldfj;IIIII)V fill
	a (Ldfj;IIIIII)V fillGradient
	a (Ldfj;IIIIIIIFFII)V innerBlit
	a (Ldfj;IIIIILeju;)V blit
	a (Ldfj;Ldkr;Ljava/lang/String;III)V drawCenteredString
	a (Ldfj;Ldkr;Lnet/minecraft/server/FormattedString;III)V drawCenteredString
	a (Ldfj;Ldkr;Lnet/minecraft/server/IChatBaseComponent;III)V drawCenteredString
	a (Lnet/minecraft/server/Matrix4f;IIIII)V innerFill
	a (Lnet/minecraft/server/Matrix4f;IIIIIFFFF)V innerBlit
	a (Lnet/minecraft/server/Matrix4f;Ldfe;IIIIIII)V fillGradient
	b (Ldfj;IIII)V vLine
	b (Ldfj;IIIIII)V blit
	b (Ldfj;Ldkr;Ljava/lang/String;III)V drawString
	b (Ldfj;Ldkr;Lnet/minecraft/server/FormattedString;III)V drawString
	b (Ldfj;Ldkr;Lnet/minecraft/server/IChatBaseComponent;III)V drawString
	d (I)V setBlitOffset
	v ()I getBlitOffset
net/minecraft/server/BlockCoral net/minecraft/world/level/block/CoralBlock
	a deadBlock
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z scanForWater
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
dks net/minecraft/client/gui/Gui
	A titleFadeInTime
	B titleStayTime
	C titleFadeOutTime
	D lastHealth
	E displayHealth
	F lastHealthTime
	G healthBlinkTime
	H screenWidth
	I screenHeight
	J chatListeners
	a vignetteBrightness
	b VIGNETTE_LOCATION
	c WIDGETS_LOCATION
	d PUMPKIN_BLUR_LOCATION
	e DEMO_EXPIRED_TEXT
	i random
	j minecraft
	k itemRenderer
	l chat
	m tickCount
	n overlayMessageString
	o overlayMessageTime
	p animateOverlayMessageColor
	q toolHighlightTimer
	r lastToolHighlight
	s debugScreen
	t subtitleOverlay
	u spectatorGui
	v tabList
	w bossOverlay
	x titleTime
	y title
	z subtitle
	a ()V resetTitleTimes
	a (F)V renderPortalOverlay
	a (FLdfj;)V renderHotbar
	a (I)I getVisibleVehicleHeartRows
	a (IIFLnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)V renderSlot
	a (Ldfj;)V renderEffects
	a (Ldfj;F)V render
	a (Ldfj;I)V renderJumpMeter
	a (Ldfj;Ldkr;III)V drawBackdrop
	a (Ldfj;Lnet/minecraft/server/ScoreboardObjective;)V displayScoreboardSidebar
	a (Leju;FLdfj;II)V lambda$renderEffects$0
	a (Lnet/minecraft/server/ChatMessageType;Lnet/minecraft/server/IChatBaseComponent;Ljava/util/UUID;)V handleChat
	a (Lnet/minecraft/server/Entity;)V updateVignetteBrightness
	a (Lnet/minecraft/server/EntityLiving;)I getVehicleMaxHearts
	a (Lnet/minecraft/server/IChatBaseComponent;)V setNowPlaying
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;III)V setTitles
	a (Lnet/minecraft/server/IChatBaseComponent;Z)V setOverlayMessage
	a (Lnet/minecraft/server/MovingObjectPosition;)Z canRenderCrosshairForSpectator
	a (Lnet/minecraft/server/ScoreboardScore;)Z lambda$displayScoreboardSidebar$1
	b ()V tick
	b (Ldfj;)V renderSelectedItemName
	b (Ldfj;I)V renderExperienceBar
	b (Lnet/minecraft/server/Entity;)V renderVignette
	c ()Ldlh; getChat
	c (Ldfj;)V renderDemoOverlay
	d ()I getGuiTicks
	d (Ldfj;)V renderCrosshair
	e ()Ldkr; getFont
	e (Ldfj;)V renderPlayerHealth
	f ()Ldmi; getSpectatorGui
	f (Ldfj;)V renderVehicleHealth
	g ()Ldlv; getTabList
	h ()V onDisconnected
	i ()Ldlf; getBossOverlay
	j ()V clearCache
	k ()Lnet/minecraft/server/EntityHuman; getCameraPlayer
	l ()Lnet/minecraft/server/EntityLiving; getPlayerVehicleWithHealth
	m ()V renderPumpkin
dkv net/minecraft/client/gui/chat/ChatListener
	a (Lnet/minecraft/server/ChatMessageType;Lnet/minecraft/server/IChatBaseComponent;Ljava/util/UUID;)V handle
dku net/minecraft/client/gui/MapRenderer
	a MAP_ICONS_LOCATION
	b MAP_ICONS
	c textureManager
	d maps
	a ()V resetData
	a (Ldfj;Ldzy;Lnet/minecraft/server/WorldMap;ZI)V render
	a (Ldku$a;)Lnet/minecraft/server/WorldMap; getData
	a (Ldku;)Lejv; access$400
	a (Ljava/lang/String;)Ldku$a; getMapInstanceIfExists
	a (Lnet/minecraft/server/WorldMap;)V update
	b ()Leag; access$500
	b (Lnet/minecraft/server/WorldMap;)Ldku$a; getMapInstance
net/minecraft/server/DataConverterRemoveGolemGossip net/minecraft/util/datafix/fixes/RemoveGolemGossipFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixValue
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixValue$1
	b (Lcom/mojang/serialization/Dynamic;)Z lambda$null$0
fx$2 net/minecraft/core/BlockPos$2
	a val$originZ
	b val$maxDepth
	c val$reachX
	d val$reachY
	e val$reachZ
	f val$originX
	g val$originY
	h cursor
	i currentDepth
	j maxX
	k maxY
	l x
	m y
	n zMirror
	a ()Lnet/minecraft/server/BlockPosition; computeNext
dkx net/minecraft/client/gui/chat/OverlayChatListener
	a minecraft
	a (Lnet/minecraft/server/ChatMessageType;Lnet/minecraft/server/IChatBaseComponent;Ljava/util/UUID;)V handle
net/minecraft/server/ItemItemFrame net/minecraft/world/item/ItemFrameItem
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)Z mayPlace
fx$3 net/minecraft/core/BlockPos$3
	a val$end
	b val$width
	c val$height
	d val$minX
	e val$minY
	f val$minZ
	g cursor
	h index
	a ()Lnet/minecraft/server/BlockPosition; computeNext
dkw net/minecraft/client/gui/chat/NarratorChatListener
	a NO_TITLE
	b INSTANCE
	c LOGGER
	d narrator
	a ()Z isActive
	a (Ldjy;)V updateNarratorStatus
	a (Ljava/lang/String;)V sayNow
	a (Lnet/minecraft/server/ChatMessageType;Lnet/minecraft/server/IChatBaseComponent;Ljava/util/UUID;)V handle
	a (ZLjava/lang/String;)V doSay
	b ()V clear
	c ()V destroy
	d ()Ldjy; getStatus
fx$4 net/minecraft/core/BlockPos$4
	a val$firstDirection
	b val$secondDirection
	c val$center
	d val$radius
	e directions
	f cursor
	g legs
	h leg
	i legSize
	j legIndex
	k lastX
	l lastY
	m lastZ
	a ()Lnet/minecraft/server/BlockPosition$MutableBlockPosition; computeNext
dkz net/minecraft/client/gui/chat/package-info
net/minecraft/server/CommandRecipe net/minecraft/server/commands/RecipeCommand
	a ERROR_GIVE_FAILED
	b ERROR_TAKE_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Ljava/util/Collection;)I giveRecipes
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Ljava/util/Collection;)I takeRecipes
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
fx$5 net/minecraft/core/BlockPos$5
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$core$Direction$Axis
dky net/minecraft/client/gui/chat/StandardChatListener
	a minecraft
	a (Lnet/minecraft/server/ChatMessageType;Lnet/minecraft/server/IChatBaseComponent;Ljava/util/UUID;)V handle
bss$f$2 net/minecraft/world/level/biome/Biome$TemperatureModifier$2
	a (Lnet/minecraft/server/BlockPosition;F)F modifyTemperature
bss$f$1 net/minecraft/world/level/biome/Biome$TemperatureModifier$1
	a (Lnet/minecraft/server/BlockPosition;F)F modifyTemperature
dla net/minecraft/client/gui/components/AbstractButton
	a (DD)V onClick
	a (III)Z keyPressed
	b ()V onPress
dlc net/minecraft/client/gui/components/AbstractSelectionList
	a children
	b minecraft
	c itemHeight
	d width
	e height
	i y0
	j y1
	k x1
	l x0
	m centerListVertically
	n headerHeight
	o scrollAmount
	p renderSelection
	q renderHeader
	r scrolling
	s selected
	a (D)V setScrollAmount
	a (DD)Ldlc$a; getEntryAtPosition
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (I)V scroll
	a (II)V clickedHeader
	a (III)Z keyPressed
	a (IIII)V updateSize
	a (Ldfj;)V renderBackground
	a (Ldfj;II)V renderDecorations
	a (Ldfj;IIF)V render
	a (Ldfj;IIIIF)V renderList
	a (Ldfj;IILdfl;)V renderHeader
	a (Ldlc$a;)V setSelected
	a (Ldlc$b;)V moveSelection
	a (Ldlc$b;Ljava/util/function/Predicate;)V moveSelection
	a (Ldlc;Ldlc$a;)V access$200
	a (Ljava/util/Collection;)V replaceEntries
	a (Z)V setRenderSelection
	a (ZI)V setRenderHeader
	av_ ()Ljava/util/List; children
	aw_ ()Ldmf; getFocused
	b ()Z isFocused
	b (DD)Z isMouseOver
	b (DDI)V updateScrollingState
	b (I)I getRowBottom
	b (Ldlc$a;)I addEntry
	c ()I getMaxPosition
	c (DDI)Z mouseReleased
	c (Ldlc$a;)V centerScrollOn
	d ()I getRowWidth
	d (Ldlc$a;)V ensureVisible
	e ()I getScrollbarPosition
	e (I)Ldlc$a; getEntry
	e (Ldlc$a;)Z removeEntry
	f ()I getMaxScroll
	f (I)Z isSelectedItem
	f (Ldlc$a;)V bindEntryToSelf
	g (I)V setLeftPos
	g (Ldlc$a;)Z lambda$moveSelection$0
	h ()Ldlc$a; getSelected
	h (I)I getRowTop
	i ()Ldlc$a; getFocused
	i (I)Ldlc$a; remove
	k ()V clearEntries
	l ()I getItemCount
	m ()D getScrollAmount
	n ()I getScrollBottom
	o ()V refreshSelection
	p ()I getRowLeft
dlb net/minecraft/client/gui/components/AbstractOptionSliderButton
	a options
net/minecraft/server/WeightedRandom net/minecraft/util/WeighedRandom
	a (Ljava/util/List;)I getTotalWeight
	a (Ljava/util/List;I)Lnet/minecraft/server/WeightedRandom$WeightedRandomChoice; getWeightedItem
	a (Ljava/util/Random;Ljava/util/List;)Lnet/minecraft/server/WeightedRandom$WeightedRandomChoice; getRandomItem
	a (Ljava/util/Random;Ljava/util/List;I)Lnet/minecraft/server/WeightedRandom$WeightedRandomChoice; getRandomItem
dle net/minecraft/client/gui/components/AbstractWidget
	a message
	b wasHovered
	c focused
	i WIDGETS_LOCATION
	j width
	k height
	l x
	m y
	n isHovered
	o active
	p visible
	q alpha
	r nextNarration
	a (DD)V onClick
	a (DDDD)V onDrag
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (F)V setAlpha
	a (I)Z isValidClickButton
	a (Ldfj;II)V renderToolTip
	a (Ldfj;IIF)V render
	a (Ldfj;Ldjw;II)V renderBg
	a (Lenm;)V playDownSound
	a (Lnet/minecraft/server/IChatBaseComponent;)V setMessage
	a (Z)I getYImage
	a_ (DD)V onRelease
	b (DD)Z isMouseOver
	b (I)V setWidth
	b (Ldfj;IIF)V renderButton
	c ()Lnet/minecraft/server/IChatMutableComponent; createNarrationMessage
	c (DD)Z clicked
	c (DDI)Z mouseReleased
	c (I)V queueNarration
	c (Z)V onFocusedChanged
	c_ (Z)Z changeFocus
	d (Z)V setFocused
	e ()I getHeight
	f ()V narrate
	g ()Z isHovered
	h ()I getWidth
	i ()Lnet/minecraft/server/IChatBaseComponent; getMessage
	j ()Z isFocused
net/minecraft/server/Containers net/minecraft/world/inventory/MenuType
	GENERIC_3X3 GENERIC_3x3
	GENERIC_9X1 GENERIC_9x1
	GENERIC_9X2 GENERIC_9x2
	GENERIC_9X3 GENERIC_9x3
	GENERIC_9X4 GENERIC_9x4
	GENERIC_9X5 GENERIC_9x5
	GENERIC_9X6 GENERIC_9x6
	y constructor
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; create
	a (Ljava/lang/String;Lnet/minecraft/server/Containers$Supplier;)Lnet/minecraft/server/Containers; register
	b (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerLectern; lambda$static$0
dld net/minecraft/client/gui/components/AbstractSliderButton
	b value
	a ()V applyValue
	a (D)V setValueFromMouse
	a (DD)V onClick
	a (DDDD)V onDrag
	a (III)Z keyPressed
	a (Ldfj;Ldjw;II)V renderBg
	a (Lenm;)V playDownSound
	a (Z)I getYImage
	a_ (DD)V onRelease
	b ()V updateMessage
	b (D)V setValue
	c ()Lnet/minecraft/server/IChatMutableComponent; createNarrationMessage
dlg net/minecraft/client/gui/components/Button
	s NO_TOOLTIP
	t onPress
	u onTooltip
	a (Ldfj;II)V renderToolTip
	a (Ldlg;Ldfj;II)V lambda$static$0
	b ()V onPress
	b (Ldfj;IIF)V renderButton
dlf net/minecraft/client/gui/components/BossHealthOverlay
	a GUI_BARS_LOCATION
	b minecraft
	c events
	a ()V reset
	a (Ldfj;)V render
	a (Ldfj;IILnet/minecraft/server/BossBattle;)V drawBar
	a (Lnet/minecraft/server/PacketPlayOutBoss;)V update
	b ()Z hasBoss
	c ()Z shouldPlayMusic
	d ()Z shouldDarkenScreen
	e ()Z shouldCreateWorldFog
buj$1 net/minecraft/world/level/block/BellBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$BellAttachType
lq$1 net/minecraft/gametest/framework/StructureUtils$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
dli net/minecraft/client/gui/components/Checkbox
	a TEXTURE
	b selected
	c showLabel
	a ()Z selected
	b ()V onPress
	b (Ldfj;IIF)V renderButton
dlh net/minecraft/client/gui/components/ChatComponent
	a LOGGER
	b minecraft
	c recentChat
	d allMessages
	e trimmedMessages
	i chatQueue
	j chatScrollbarPos
	k newMessageSinceScroll
	l lastMessage
	a ()V rescaleChat
	a (D)V scrollChat
	a (DD)Z handleChatQueueClicked
	a (I)D getTimeFactor
	a (ILdjr;)Z lambda$removeById$1
	a (Ldfj;I)V render
	a (Ljava/lang/String;)V addRecentChat
	a (Lnet/minecraft/server/IChatBaseComponent;)V addMessage
	a (Lnet/minecraft/server/IChatBaseComponent;I)V addMessage
	a (Lnet/minecraft/server/IChatBaseComponent;IIZ)V addMessage
	a (Z)V clearMessages
	b ()Ljava/util/List; getRecentChat
	b (D)I getWidth
	b (DD)Lnet/minecraft/server/ChatModifier; getClickedComponentStyleAt
	b (I)V removeById
	b (ILdjr;)Z lambda$removeById$0
	b (Lnet/minecraft/server/IChatBaseComponent;)V enqueueMessage
	c ()V resetChatScroll
	c (D)I getHeight
	d ()I getWidth
	e ()I getHeight
	f ()D getScale
	g ()I getLinesPerPage
	h ()Z isChatHidden
	i ()Z isChatFocused
	j ()J getChatRateMillis
	k ()V processPendingMessages
dlk net/minecraft/client/gui/components/ComponentRenderUtils
	a INDENT
	a (Ldjl;Lnet/minecraft/server/ChatModifier;Ljava/lang/String;)Ljava/util/Optional; lambda$wrapComponents$0
	a (Ljava/lang/String;)Ljava/lang/String; stripColor
	a (Ljava/util/List;Lnet/minecraft/server/IChatFormatted;Ljava/lang/Boolean;)V lambda$wrapComponents$1
	a (Lnet/minecraft/server/IChatFormatted;ILdkr;)Ljava/util/List; wrapComponents
dlj net/minecraft/client/gui/components/CommandSuggestions
	a WHITESPACE_PATTERN
	b UNPARSED_STYLE
	c LITERAL_STYLE
	d ARGUMENT_STYLES
	e minecraft
	f screen
	g input
	h font
	i commandsOnly
	j onlyShowIfCursorPastError
	k lineStartOffset
	l suggestionLineLimit
	m anchorToBottom
	n fillColor
	o commandUsage
	p commandUsagePosition
	q commandUsageWidth
	r currentParse
	s pendingSuggestions
	t suggestions
	u allowSuggestions
	v keepSuggestions
	a ()V updateCommandInfo
	a (D)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;I)Lnet/minecraft/server/FormattedString; formatText
	a (Lcom/mojang/brigadier/exceptions/CommandSyntaxException;)Lnet/minecraft/server/FormattedString; getExceptionMessage
	a (Lcom/mojang/brigadier/suggestion/Suggestions;)Ljava/util/List; sortSuggestions
	a (Ldfj;II)V render
	a (Ldlj;)Z access$200
	a (Ldlj;Ldlj$a;)Ldlj$a; access$1202
	a (Ldlj;Z)Z access$1102
	a (Ljava/lang/String;)I getLastWordIndex
	a (Ljava/lang/String;I)Lnet/minecraft/server/FormattedString; formatChat
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; access$1000
	a (Lnet/minecraft/server/EnumChatFormat;)V fillNodeUsage
	a (Z)V setAllowSuggestions
	b ()Ljava/lang/String; getNarrationMessage
	b (Ldlj;)I access$300
	b (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; calculateSuggestionSuffix
	b (Z)V showSuggestions
	c ()V updateUsageInfo
	c (Ldlj;)Ldln; access$400
	d ()V lambda$updateCommandInfo$0
	d (Ldlj;)I access$500
	e (Ldlj;)Ldkr; access$600
	f (Ldlj;)Ldoq; access$700
	g (Ldlj;)Ldjw; access$800
	h (Ldlj;)I access$900
dlm net/minecraft/client/gui/components/DebugScreenOverlay
	a HEIGHTMAP_NAMES
	b minecraft
	c font
	d block
	e liquid
	i lastPos
	j clientChunk
	k serverChunk
	a ()V clearChunkCache
	a (IIF)I colorLerp
	a (IIII)I getSampleColor
	a (J)J bytesToMegabytes
	a (Lcom/mojang/datafixers/util/Either;)Lnet/minecraft/server/Chunk; lambda$getServerChunk$5
	a (Ldfj;)V render
	a (Ldfj;Lnet/minecraft/server/CircularTimer;IIZ)V drawChart
	a (Lemy;)Ljava/util/Optional; lambda$getLevel$2
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lnet/minecraft/server/EnumCreatureType;)Ljava/lang/String; lambda$getGameInformation$1
	a (Ljava/util/EnumMap;)V lambda$static$0
	a (Ljava/util/Map$Entry;)Ljava/lang/String; getPropertyValueString
	a (Lnet/minecraft/server/IChunkAccess;)Lnet/minecraft/server/Chunk; lambda$null$3
	a (Lnet/minecraft/server/PlayerChunk$Failure;)Lnet/minecraft/server/Chunk; lambda$null$4
	b ()Ljava/util/List; getGameInformation
	b (Ldfj;)V drawGameInformation
	c ()Ljava/util/List; getSystemInformation
	c (Ldfj;)V drawSystemInformation
	d ()Lnet/minecraft/server/WorldServer; getServerLevel
	e ()Ljava/lang/String; getServerChunkStats
	f ()Lnet/minecraft/server/World; getLevel
	g ()Lnet/minecraft/server/Chunk; getServerChunk
	h ()Lnet/minecraft/server/Chunk; getClientChunk
eaw$a net/minecraft/client/renderer/block/model/BlockFaceUV$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Leaw; deserialize
	a (Lcom/google/gson/JsonObject;)I getRotation
	b (Lcom/google/gson/JsonObject;)[F getUVs
dll net/minecraft/client/gui/components/ContainerObjectSelectionList
	c_ (Z)Z changeFocus
	f (I)Z isSelectedItem
dlo net/minecraft/client/gui/components/ImageButton
	a resourceLocation
	b xTexStart
	c yTexStart
	d yDiffTex
	e textureWidth
	v textureHeight
	a (II)V setPosition
	b (Ldfj;IIF)V renderButton
dln net/minecraft/client/gui/components/EditBox
	A suggestion
	B responder
	C filter
	D formatter
	a font
	b value
	c maxLength
	d frame
	e bordered
	s canLoseFocus
	t isEditable
	u shiftPressed
	v displayPos
	w cursorPos
	x highlightPos
	y textColor
	z textColorUneditable
	a ()V tick
	a (CI)Z charTyped
	a (DDI)Z mouseClicked
	a (II)I getWordPosition
	a (III)Z keyPressed
	a (IIII)V renderHighlight
	a (IIZ)I getWordPosition
	a (Ljava/lang/String;)V setValue
	a (Ljava/lang/String;Ljava/lang/Integer;)Lnet/minecraft/server/FormattedString; lambda$new$0
	a (Ljava/util/function/BiFunction;)V setFormatter
	a (Ljava/util/function/Consumer;)V setResponder
	a (Ljava/util/function/Predicate;)V setFilter
	b ()Ljava/lang/String; getValue
	b (DD)Z isMouseOver
	b (Ldfj;IIF)V renderButton
	b (Ljava/lang/String;)V insertText
	c ()Lnet/minecraft/server/IChatMutableComponent; createNarrationMessage
	c (Ljava/lang/String;)V setSuggestion
	c (Z)V onFocusedChanged
	c_ (Z)Z changeFocus
	d ()Ljava/lang/String; getHighlighted
	d (Ljava/lang/String;)V onValueChange
	e (I)V deleteWords
	e (Z)V setFocus
	f (I)V deleteChars
	f (Z)V setBordered
	g (I)I getWordPosition
	g (Z)V setEditable
	h (I)V moveCursor
	h (Z)V setCanLoseFocus
	i (I)V moveCursorTo
	i (Z)V setVisible
	j (I)V setCursorPosition
	k ()V moveCursorToStart
	k (I)V setMaxLength
	l ()V moveCursorToEnd
	l (I)V setTextColor
	m ()Z canConsumeInput
	m (I)V setTextColorUneditable
	n ()I getCursorPosition
	n (I)V setHighlightPos
	o ()I getInnerWidth
	o (I)I getScreenX
	p ()Z isVisible
	p (I)V setX
	q ()I getMaxLength
	q (I)V deleteText
	r ()Z isBordered
	r (I)I getCursorPos
	s ()Z isEditable
dlq net/minecraft/client/gui/components/LockIconButton
	a locked
	a ()Z isLocked
	b (Ldfj;IIF)V renderButton
	c ()Lnet/minecraft/server/IChatMutableComponent; createNarrationMessage
	e (Z)V setLocked
net/minecraft/server/BlockVine net/minecraft/world/level/block/VineBlock
	f PROPERTY_BY_DIRECTION
	g UP_AABB
	h WEST_AABB
	i EAST_AABB
	j NORTH_AABB
	k SOUTH_AABB
	o shapesCache
	a (Lcef$a;)V createBlockStateDefinition
	a (Ljava/util/Map$Entry;)Z lambda$static$0
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z canSpread
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isAcceptableNeighbour
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Lnet/minecraft/server/IBlockData; copyRandomFaces
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z canSupportAtFace
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	canSpread (Lnet/minecraft/server/IBlockData;)Z hasHorizontalConnection
	g (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getUpdatedState
	getDirection (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockStateBoolean; getPropertyForFace
	h (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/VoxelShape; calculateShape
	l (Lnet/minecraft/server/IBlockData;)Z hasFaces
	m (Lnet/minecraft/server/IBlockData;)I countFaces
net/minecraft/server/BehaviorCrossbowAttack net/minecraft/world/entity/ai/behavior/CrossbowAttack
	b attackDelay
	c crossbowState
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V crossbowAttack
	a (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityLiving; getAttackTarget
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)Z canStillUse
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	b (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V lookAtTarget
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V tick
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
dlp net/minecraft/client/gui/components/LerpingBossEvent
	h targetPercent
	i setTime
	a (F)V setPercent
	a (Lnet/minecraft/server/PacketPlayOutBoss;)V update
	k ()F getPercent
dls net/minecraft/client/gui/components/ObjectSelectionList
	a inFocus
	c_ (Z)Z changeFocus
net/minecraft/server/GameTestHarnessTestFunction net/minecraft/gametest/framework/TestFunction
	a batchName
	b testName
	c structureName
	d required
	e function
	f maxTicks
	g setupTicks
	h rotation
	a ()Ljava/lang/String; getTestName
	a (Lnet/minecraft/server/GameTestHarnessHelper;)V run
	b ()Ljava/lang/String; getStructureName
	c ()I getMaxTicks
	d ()Z isRequired
	e ()Ljava/lang/String; getBatchName
	f ()J getSetupTicks
	g ()Lnet/minecraft/server/EnumBlockRotation; getRotation
dlr net/minecraft/client/gui/components/MultiLineLabel
	a EMPTY
	a ()I getLineCount
	a (Ldfj;II)I renderCentered
	a (Ldfj;IIII)I renderCentered
	a (Ldkr;Ljava/util/List;)Ldlr; create
	a (Ldkr;Lnet/minecraft/server/FormattedString;)Ldlr$a; lambda$create$3
	a (Ldkr;Lnet/minecraft/server/IChatFormatted;I)Ldlr; create
	a (Ldkr;Lnet/minecraft/server/IChatFormatted;II)Ldlr; create
	a (Ldkr;[Lnet/minecraft/server/IChatBaseComponent;)Ldlr; create
	b (Ldfj;IIII)I renderLeftAligned
	b (Ldkr;Ljava/util/List;)Ldlr; createFixed
	b (Ldkr;Lnet/minecraft/server/FormattedString;)Ldlr$a; lambda$create$2
	c (Ldfj;IIII)I renderLeftAlignedNoShadow
	c (Ldkr;Lnet/minecraft/server/FormattedString;)Ldlr$a; lambda$create$1
	d (Ldkr;Lnet/minecraft/server/FormattedString;)Ldlr$a; lambda$create$0
dlu net/minecraft/client/gui/components/OptionsList
	a (Ldjz;)I addBig
	a (Ldjz;Ldjz;)V addSmall
	a ([Ldjz;)V addSmall
	b (Ldjz;)Ldle; findOption
	c (DD)Ljava/util/Optional; getMouseOver
	d ()I getRowWidth
	e ()I getScrollbarPosition
dlt net/minecraft/client/gui/components/OptionButton
	a option
	a ()Ldjz; getOption
	d ()Ljava/util/Optional; getTooltip
dlw net/minecraft/client/gui/components/SliderButton
	c option
	a ()V applyValue
	b ()V updateMessage
	d ()Ljava/util/Optional; getTooltip
net/minecraft/server/WorldGenSurfaceTaigaMega net/minecraft/world/level/levelgen/surfacebuilders/GiantTreeTaigaSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
fx$1 net/minecraft/core/BlockPos$1
	a nextPos
	b counter
	c val$limit
	d val$minX
	e val$random
	f val$width
	g val$minY
	h val$height
	i val$minZ
	j val$depth
	a ()Lnet/minecraft/server/BlockPosition; computeNext
dlv net/minecraft/client/gui/components/PlayerTabOverlay
	a PLAYER_ORDERING
	b minecraft
	c gui
	d footer
	e header
	i visibilityId
	j visible
	a ()V reset
	a (Ldfj;IIILdwp;)V renderPingIcon
	a (Ldfj;ILnet/minecraft/server/Scoreboard;Lnet/minecraft/server/ScoreboardObjective;)V render
	a (Ldwp;)Lnet/minecraft/server/IChatBaseComponent; getNameForDisplay
	a (Ldwp;Lnet/minecraft/server/IChatMutableComponent;)Lnet/minecraft/server/IChatBaseComponent; decorateName
	a (Lnet/minecraft/server/IChatBaseComponent;)V setFooter
	a (Lnet/minecraft/server/ScoreboardObjective;ILjava/lang/String;IILdwp;Ldfj;)V renderTablistScore
	a (Z)V setVisible
	b (Lnet/minecraft/server/IChatBaseComponent;)V setHeader
dly net/minecraft/client/gui/components/SubtitleOverlay
	a minecraft
	b subtitles
	c isListening
	a (Ldfj;)V render
	a (Leml;Lenn;)V onPlaySound
dlx net/minecraft/client/gui/components/StateSwitchingButton
	a resourceLocation
	b isStateTriggered
	c xTexStart
	d yTexStart
	e xDiffTex
	s yDiffTex
	a ()Z isStateTriggered
	a (II)V setPosition
	a (IIIILnet/minecraft/server/MinecraftKey;)V initTextureValues
	b (Ldfj;IIF)V renderButton
	e (Z)V setStateTriggered
net/minecraft/server/PacketPlayInFlying$PacketPlayInLook net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/MethodProfilerResultsFilled net/minecraft/util/profiling/FilledProfileResults
	a LOGGER
	b EMPTY
	c SPLITTER
	d COUNTER_ENTRY_COMPARATOR
	e entries
	f startTimeNano
	g startTimeTicks
	h endTimeNano
	i endTimeTicks
	j tickDuration
	a ()J getStartTimeNano
	a (IILjava/lang/StringBuilder;Ljava/util/Map$Entry;)V lambda$appendCounterResults$5
	a (ILjava/lang/String;Lanp$a;ILjava/lang/StringBuilder;)V appendCounterResults
	a (ILjava/lang/String;Ljava/lang/StringBuilder;)V appendProfilerResults
	a (JI)Ljava/lang/String; getProfilerResults
	a (Lanp$a;)J lambda$static$0
	a (Ljava/io/File;)Z saveResults
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	a (Ljava/lang/String;Ljava/lang/String;)Z isDirectChild
	a (Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder; indentLine
	a (Ljava/lang/StringBuilder;ILjava/lang/String;Lanp$a;)V lambda$appendCounters$6
	a (Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Long;)V lambda$appendProfilerResults$4
	a (Ljava/util/Map;Ljava/lang/String;Lnet/minecraft/server/MethodProfilerResult;)V lambda$getCounterValues$3
	a (Ljava/util/Map;Ljava/lang/StringBuilder;I)V appendCounters
	a (Ljava/util/Map;Ljava/util/List;Ljava/lang/String;Ljava/lang/Long;)V lambda$null$2
	b ()I getStartTimeTicks
	c ()J getEndTimeNano
	c (Ljava/lang/String;)Lnet/minecraft/server/MethodProfilerResult; getEntry
	d ()I getEndTimeTicks
	d (Ljava/lang/String;)Lanp$a; lambda$null$1
	e ()Ljava/lang/String; getProfilerResults
	f ()I getTickDuration
	h ()Ljava/util/Map; getCounterValues
	i ()Ljava/lang/String; getComment
dlz net/minecraft/client/gui/components/TickableWidget
	d ()V tick
net/minecraft/server/Slot net/minecraft/world/inventory/Slot
	e x
	f y
	index slot
	inventory container
	rawSlotIndex index
	a (I)Lnet/minecraft/server/ItemStack; remove
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/IInventory;I)Z isAt
	a (Lnet/minecraft/server/ItemStack;I)V onQuickCraft
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)V onQuickCraft
	a (Lnet/minecraft/server/Slot;)V swap
	b ()Z isActive
	b (I)V onSwapCraft
	c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
	c (Lnet/minecraft/server/ItemStack;)V checkTakeAchievements
	d ()V setChanged
	isAllowed (Lnet/minecraft/server/EntityHuman;)Z mayPickup
	isAllowed (Lnet/minecraft/server/ItemStack;)Z mayPlace
dmb net/minecraft/client/gui/components/VolumeSlider
	c source
	a ()V applyValue
	b ()V updateMessage
dma net/minecraft/client/gui/components/TooltipAccessor
	d ()Ljava/util/Optional; getTooltip
net/minecraft/server/DataConverterHorse net/minecraft/util/datafix/fixes/EntityHorseSplitFix
	a ()Ljava/lang/IllegalStateException; lambda$fix$0
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
net/minecraft/server/BlockFletchingTable net/minecraft/world/level/block/FletchingTableBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
dmd net/minecraft/client/gui/components/events/AbstractContainerEventHandler
	a focused
	b isDragging
	a (Ldmf;)V setFocused
	aw_ ()Ldmf; getFocused
	ax_ ()Z isDragging
	b_ (Z)V setDragging
dmc net/minecraft/client/gui/components/Widget
	a (Ldfj;IIF)V render
net/minecraft/server/WorldGenDecoratorFrequencyExtraChanceConfiguration net/minecraft/world/level/levelgen/placement/FrequencyWithExtraChanceDecoratorConfiguration
	a CODEC
	c count
	d extraChance
	e extraCount
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lnet/minecraft/server/WorldGenDecoratorFrequencyExtraChanceConfiguration;)Ljava/lang/Integer; lambda$null$2
	b (Lnet/minecraft/server/WorldGenDecoratorFrequencyExtraChanceConfiguration;)Ljava/lang/Float; lambda$null$1
	c (Lnet/minecraft/server/WorldGenDecoratorFrequencyExtraChanceConfiguration;)Ljava/lang/Integer; lambda$null$0
emi$a net/minecraft/client/resources/sounds/Sound$Type
	a FILE
	b SOUND_EVENT
	c name
	d $VALUES
	a (Ljava/lang/String;)Lemi$a; getByName
dmf net/minecraft/client/gui/components/events/GuiEventListener
	a (CI)Z charTyped
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (III)Z keyPressed
	b (DD)Z isMouseOver
	b (III)Z keyReleased
	c (DDI)Z mouseReleased
	c_ (Z)Z changeFocus
	e (DD)V mouseMoved
dme net/minecraft/client/gui/components/events/ContainerEventHandler
	a (CI)Z charTyped
	a (DDD)Z mouseScrolled
	a (DDDLdmf;)Z lambda$mouseScrolled$1
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (DDILdmf;)Z lambda$mouseReleased$0
	a (III)Z keyPressed
	a (Ldmf;)V setFocused
	av_ ()Ljava/util/List; children
	aw_ ()Ldmf; getFocused
	ax_ ()Z isDragging
	b (III)Z keyReleased
	b (Ldmf;)V setInitialFocus
	b_ (Z)V setDragging
	c (DDI)Z mouseReleased
	c (Ldmf;)V magicalSpecialHackyFocus
	c_ (Z)Z changeFocus
	d (DD)Ljava/util/Optional; getChildAt
net/minecraft/server/DispenseBehaviorShears net/minecraft/core/dispenser/ShearsDispenseItemBehavior
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z tryShearBeehive
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z tryShearLivingEntity
net/minecraft/server/CommandClone$Mode net/minecraft/server/commands/CloneCommands$Mode
	d canOverlap
	e $VALUES
	a ()Z canOverlap
dmh net/minecraft/client/gui/components/package-info
net/minecraft/server/BlockFurnace net/minecraft/world/level/block/AbstractFurnaceBlock
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V openContainer
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
dmg net/minecraft/client/gui/components/events/package-info
net/minecraft/server/BlockCake net/minecraft/world/level/block/CakeBlock
	b SHAPE_BY_BITE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/EnumInteractionResult; eat
	a (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
dmj net/minecraft/client/gui/components/spectator/package-info
net/minecraft/server/PacketLoginOutDisconnect net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket
	a reason
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginOutListener;)V handle
	b ()Lnet/minecraft/server/IChatBaseComponent; getReason
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
dmi net/minecraft/client/gui/components/spectator/SpectatorGui
	a SPECTATOR_LOCATION
	b WIDGETS_LOCATION
	c minecraft
	d lastSelectionTime
	e menu
	a ()Z isMenuActive
	a (D)V onMouseScrolled
	a (I)V onHotbarSelected
	a (Ldfj;)V renderTooltip
	a (Ldfj;F)V renderHotbar
	a (Ldfj;FIILdsm;)V renderPage
	a (Ldfj;IIFFLdsk;)V renderSlot
	a (Ldsi;)V onSpectatorMenuClosed
	b ()V onMouseMiddleClick
	c ()F getHotbarAlpha
dml net/minecraft/client/gui/components/toasts/RecipeToast
	c TITLE_TEXT
	d DESCRIPTION_TEXT
	e recipes
	f lastChanged
	g changed
	a (Ldfj;Ldmo;J)Ldmn$a; render
	a (Ldmo;Lnet/minecraft/server/IRecipe;)V addOrUpdate
	a (Lnet/minecraft/server/IRecipe;)V addItem
dmk net/minecraft/client/gui/components/toasts/AdvancementToast
	c advancement
	d playedSound
	a (Ldfj;Ldmo;J)Ldmn$a; render
dmn net/minecraft/client/gui/components/toasts/Toast
	a TEXTURE
	b NO_TOKEN
	a ()I width
	a (Ldfj;Ldmo;J)Ldmn$a; render
	c ()Ljava/lang/Object; getToken
	d ()I height
dmm net/minecraft/client/gui/components/toasts/SystemToast
	c id
	d title
	e messageLines
	f lastChanged
	g changed
	h width
	a ()I width
	a (Ldfj;Ldmo;IIII)V renderBackgroundRow
	a (Ldfj;Ldmo;J)Ldmn$a; render
	a (Ldjw;Ldmm$a;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;)Ldmm; multiline
	a (Ldjw;Ljava/lang/String;)V onWorldAccessFailure
	a (Ldmo;Ldmm$a;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;)V add
	a (Lnet/minecraft/server/IChatBaseComponent;)Lcom/google/common/collect/ImmutableList; nullToEmpty
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;)V reset
	b ()Ldmm$a; getToken
	b (Ldjw;Ljava/lang/String;)V onWorldDeleteFailure
	b (Ldmo;Ldmm$a;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;)V addOrUpdate
	c ()Ljava/lang/Object; getToken
	c (Ldjw;Ljava/lang/String;)V onPackCopyFailure
dmp net/minecraft/client/gui/components/toasts/TutorialToast
	c icon
	d title
	e message
	f visibility
	g lastProgressTime
	h lastProgress
	i progress
	j progressable
	a (F)V updateProgress
	a (Ldfj;Ldmo;J)Ldmn$a; render
	b ()V hide
net/minecraft/server/ArgumentParticle net/minecraft/commands/arguments/ParticleArgument
	a ERROR_UNKNOWN_PARTICLE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentParticle; particle
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParam; parse
	a (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/server/Particle;)Lnet/minecraft/server/ParticleParam; readParticle
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ParticleParam; getParticle
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$readParticle$1
	b (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParam; readParticle
dmo net/minecraft/client/gui/components/toasts/ToastComponent
	a minecraft
	b visible
	c queued
	a ()V clear
	a (Ldfj;)V render
	a (Ldmn;)V addToast
	a (Ldmo;)Ldjw; access$100
	a (Ljava/lang/Class;Ljava/lang/Object;)Ldmn; getToast
	b ()Ldjw; getMinecraft
dmr net/minecraft/client/gui/font/AllMissingGlyphProvider
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (I)Lddz; getGlyph
dmq net/minecraft/client/gui/components/toasts/package-info
net/minecraft/server/ContainerCartography net/minecraft/world/inventory/CartographyTableMenu
	containerAccess access
	e lastSoundTime
	inventory container
	resultInventory resultContainer
	a (Lnet/minecraft/server/ContainerCartography;)J access$000
	a (Lnet/minecraft/server/ContainerCartography;J)J access$002
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$removed$1
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)V setupResultSlot
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$setupResultSlot$0
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
dmt net/minecraft/client/gui/font/FontSet
	a SPACE_GLYPH
	b SPACE_INFO
	c RANDOM
	d textureManager
	e name
	f missingGlyph
	g whiteGlyph
	h providers
	i glyphs
	j glyphInfos
	k glyphsByWidth
	l textures
	a ()Ldmw; whiteGlyph
	a (I)Lddx; getGlyphInfo
	a (Lddx;)Ldmw; getRandomGlyph
	a (Lddz;)Ldmw; stitch
	a (Ljava/util/List;)V reload
	a (Ljava/util/List;Ljava/util/Set;I)V lambda$reload$2
	b ()V closeProviders
	b (I)Ldmw; getGlyph
	c ()V closeTextures
	c (I)Lddz; getRaw
	d ()F lambda$static$0
	d (I)Ldmw; lambda$getGlyph$4
	e (I)Lddx; lambda$getGlyphInfo$3
	f (I)Lit/unimi/dsi/fastutil/ints/IntList; lambda$null$1
dms net/minecraft/client/gui/font/FontManager
	a MISSING_FONT
	b LOGGER
	c missingFontSet
	d fontSets
	e textureManager
	f renames
	g reloadListener
	a ()Ldkr; createFont
	a (Ldms;)Ljava/util/Map; access$100
	a (Ldmt;)V lambda$new$0
	a (Ljava/util/Map;)V setRenames
	a (Lnet/minecraft/server/MinecraftKey;)Ldmt; lambda$createFont$1
	b ()Lnet/minecraft/server/IReloadListener; getReloadListener
	b (Ldms;)Lejv; access$200
	c ()Lorg/apache/logging/log4j/Logger; access$000
dmv net/minecraft/client/gui/font/TextFieldHelper
	a getMessageFn
	b setMessageFn
	c getClipboardFn
	d setClipboardFn
	e stringValidator
	f cursorPos
	g selectionPos
	a ()V cut
	a (C)Z charTyped
	a (I)Z keyPressed
	a (II)V setSelectionRange
	a (IZ)V moveByChars
	a (Ldjw;)Ljava/util/function/Supplier; createClipboardGetter
	a (Ldjw;Ljava/lang/String;)V setClipboardContents
	a (Ljava/lang/String;)V insertText
	a (Ljava/lang/String;Ljava/lang/String;)V insertText
	a (Z)V resetSelectionIfNeeded
	b ()V paste
	b (I)V moveByChars
	b (IZ)V moveByWords
	b (Ldjw;)Ljava/lang/String; getClipboardContents
	b (Ldjw;Ljava/lang/String;)V lambda$createClipboardSetter$1
	b (Ljava/lang/String;)Ljava/lang/String; getSelected
	b (Z)V setCursorToStart
	c ()V copy
	c (I)V moveByWords
	c (IZ)V setCursorPos
	c (Ldjw;)Ljava/util/function/Consumer; createClipboardSetter
	c (Ljava/lang/String;)Ljava/lang/String; deleteSelection
	c (Z)V setCursorToEnd
	d ()V selectAll
	d (I)V removeCharsFromCursor
	d (Ldjw;)Ljava/lang/String; lambda$createClipboardGetter$0
	e ()V setCursorToStart
	e (I)V setCursorPos
	f ()V setCursorToEnd
	f (I)V setSelectionPos
	g ()I getCursorPos
	g (I)I clampToMsgLength
	h ()I getSelectionPos
	i ()Z isSelecting
dmu net/minecraft/client/gui/font/FontTexture
	d name
	e normalType
	f seeThroughType
	g colored
	h root
	a ()Lnet/minecraft/server/MinecraftKey; getName
	a (Lddz;)Ldmw; add
	a (Lnet/minecraft/server/IResourceManager;)V load
dwl$a net/minecraft/client/multiplayer/ClientLevel$ClientLevelData
	a hardcore
	b gameRules
	c isFlat
	d xSpawn
	e ySpawn
	f zSpawn
	g spawnAngle
	h gameTime
	i dayTime
	j raining
	k difficulty
	l difficultyLocked
	a ()I getXSpawn
	a (F)V setSpawnAngle
	a (J)V setGameTime
	a (Lnet/minecraft/server/BlockPosition;F)V setSpawn
	a (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/server/EnumDifficulty;)V setDifficulty
	a (Z)V setDifficultyLocked
	b ()I getYSpawn
	b (I)V setXSpawn
	b (J)V setDayTime
	b (Z)V setRaining
	c ()I getZSpawn
	c (I)V setYSpawn
	d ()F getSpawnAngle
	d (I)V setZSpawn
	e ()J getGameTime
	f ()J getDayTime
	g ()D getHorizonHeight
	h ()D getClearColorScale
	i ()Z isThundering
	k ()Z isRaining
	n ()Z isHardcore
	q ()Lnet/minecraft/server/GameRules; getGameRules
	s ()Lnet/minecraft/server/EnumDifficulty; getDifficulty
	t ()Z isDifficultyLocked
dmx net/minecraft/client/gui/font/glyphs/EmptyGlyph
	a (ZFFLnet/minecraft/server/Matrix4f;Ldfn;FFFFI)V render
dmw net/minecraft/client/gui/font/glyphs/BakedGlyph
	a normalType
	b seeThroughType
	c u0
	d u1
	e v0
	f v1
	g left
	h right
	i up
	j down
	a (Ldmw$a;Lnet/minecraft/server/Matrix4f;Ldfn;I)V renderEffect
	a (Z)Leag; renderType
	a (ZFFLnet/minecraft/server/Matrix4f;Ldfn;FFFFI)V render
net/minecraft/server/WorldGenFeatureTrees net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType
	a TRUNK_VINE
	b LEAVE_VINE
	c COCOA
	d BEEHIVE
	e ALTER_GROUND
	f codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/WorldGenFeatureTrees; register
net/minecraft/server/EntityFish net/minecraft/world/entity/animal/AbstractFish
	K ()Z requiresCustomPersistence
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	au ()Lnet/minecraft/server/SoundEffect; getSwimSound
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkFishSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	e ()V defineSynchedData
	eK ()Lnet/minecraft/server/ItemStack; getBucketItemStack
	eL ()Z canRandomSwim
	eq ()I getMaxSpawnClusterSize
	g (Lnet/minecraft/server/Vec3D;)V travel
	getSoundFlop ()Lnet/minecraft/server/SoundEffect; getFlopSound
	h (D)Z removeWhenFarAway
	isFromBucket ()Z fromBucket
	k ()V aiStep
	k (Lnet/minecraft/server/ItemStack;)V saveToBucketTag
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	o ()V registerGoals
net/minecraft/server/CommandSaveOff net/minecraft/server/commands/SaveOffCommand
	a ERROR_ALREADY_OFF
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
dmz net/minecraft/client/gui/font/glyphs/WhiteGlyph
	a INSTANCE
	b IMAGE_DATA
	c $VALUES
	a (II)V upload
	a (Ldeq;)V lambda$static$0
	d ()I getPixelWidth
	e ()I getPixelHeight
	f ()Z isColored
	g ()F getOversample
dmy net/minecraft/client/gui/font/glyphs/MissingGlyph
	a INSTANCE
	b IMAGE_DATA
	c $VALUES
	a (II)V upload
	a (Ldeq;)V lambda$static$0
	d ()I getPixelWidth
	e ()I getPixelHeight
	f ()Z isColored
	g ()F getOversample
net/minecraft/server/PacketPlayOutTransaction net/minecraft/network/protocol/game/ClientboundContainerAckPacket
	a containerId
	b uid
	c accepted
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()S getUid
	d ()Z isAccepted
dll$a net/minecraft/client/gui/components/ContainerObjectSelectionList$Entry
	a focused
	b dragging
	a (Ldmf;)V setFocused
	aw_ ()Ldmf; getFocused
	ax_ ()Z isDragging
	b_ (Z)V setDragging
cob$c net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$Placer
	a pools
	b maxDepth
	c factory
	d chunkGenerator
	e structureManager
	f pieces
	g random
	h placing
	a (Lcob$c;)Ljava/util/Deque; access$300
	a (Lcob$c;Lnet/minecraft/server/WorldGenFeaturePillagerOutpostPoolPiece;Lorg/apache/commons/lang3/mutable/MutableObject;IIZ)V access$800
	a (Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/DefinedStructure$BlockInfo;)I lambda$tryPlacingChildren$3
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate;)Ljava/lang/Integer; lambda$null$2
	a (Lnet/minecraft/server/WorldGenFeaturePillagerOutpostPoolPiece;Lorg/apache/commons/lang3/mutable/MutableObject;IIZ)V tryPlacingChildren
	b (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate;)Ljava/lang/Integer; lambda$null$1
	c (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate;)Ljava/util/Optional; lambda$null$0
cob$b net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceState
	a piece
	b free
	c boundsTop
	d depth
	a (Lcob$b;)Lnet/minecraft/server/WorldGenFeaturePillagerOutpostPoolPiece; access$400
	b (Lcob$b;)Lorg/apache/commons/lang3/mutable/MutableObject; access$500
	c (Lcob$b;)I access$600
	d (Lcob$b;)I access$700
net/minecraft/server/PacketPlayOutAnimation net/minecraft/network/protocol/game/ClientboundAnimatePacket
	a id
	b action
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getAction
cob$a net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceFactory
net/minecraft/server/DoubleBlockFinder$Result$Single net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single
	a single
dna net/minecraft/client/gui/font/glyphs/package-info
net/minecraft/server/PacketPlayOutPlayerInfo$EnumPlayerInfoAction net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action
	f $VALUES
dnc net/minecraft/client/gui/font/providers/BitmapProvider
	a LOGGER
	b image
	c glyphs
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (I)Lddz; getGlyph
	b ()Lorg/apache/logging/log4j/Logger; access$100
dnb net/minecraft/client/gui/font/package-info
dne net/minecraft/client/gui/font/providers/GlyphProviderBuilderType
	a BITMAP
	b TTF
	c LEGACY_UNICODE
	d BY_NAME
	e name
	f factory
	g $VALUES
	a (Lcom/google/gson/JsonObject;)Ldnd; create
	a (Ljava/lang/String;)Ldne; byName
	a (Ljava/util/HashMap;)V lambda$static$0
dnd net/minecraft/client/gui/font/providers/GlyphProviderBuilder
	a (Lnet/minecraft/server/IResourceManager;)Lddy; create
net/minecraft/server/EntitySelector net/minecraft/commands/arguments/selector/EntitySelector
	a maxResults
	b includesEntities
	c worldLimited
	checkPermissions usesSelector
	d predicate
	e range
	f position
	g aabb
	h order
	i currentEntity
	j playerName
	k entityUUID
	l type
	a ()I getMaxResults
	a (Ljava/util/List;)Lnet/minecraft/server/IChatMutableComponent; joinNames
	a (Ljava/util/List;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Vec3D;Ljava/util/function/Predicate;)V addEntities
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/Entity;)Z lambda$getPredicate$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Entity; findSingleEntity
	a (Lnet/minecraft/server/Vec3D;)Ljava/util/function/Predicate; getPredicate
	a (Lnet/minecraft/server/Vec3D;Ljava/util/List;)Ljava/util/List; sortAndLimit
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;)Z lambda$getPredicate$1
	b ()Z includesEntities
	c ()Z isSelfSelector
	c (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/EntityPlayer; findSinglePlayer
	d ()Z isWorldLimited
	d (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/List; findPlayers
	e ()Z usesSelector
	e (Lnet/minecraft/server/CommandListenerWrapper;)V checkPermissions
	getEntities (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/List; findEntities
net/minecraft/server/CombatTracker net/minecraft/world/damagesource/CombatTracker
	a entries
	b mob
	c lastDamageTime
	d combatStartTime
	e combatEndTime
	f inCombat
	g takingDamage
	h nextLocation
	a ()V prepareForDamage
	a (Lnet/minecraft/server/CombatEntry;)Ljava/lang/String; getFallLocation
	c ()Lnet/minecraft/server/EntityLiving; getKiller
	d ()Z isTakingDamage
	e ()Z isInCombat
	f ()I getCombatDuration
	g ()V recheckStatus
	h ()Lnet/minecraft/server/EntityLiving; getMob
	i ()Lnet/minecraft/server/CombatEntry; getLastEntry
	j ()Lnet/minecraft/server/CombatEntry; getMostSignificantFall
	k ()V resetPreparedStatus
	trackDamage (Lnet/minecraft/server/DamageSource;FF)V recordDamage
dng net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderBuilder
	a LOGGER
	b location
	c size
	d oversample
	e shiftX
	f shiftY
	g skip
	a (Lcom/google/gson/JsonObject;)Ldnd; fromJson
	a (Lnet/minecraft/server/IResourceManager;)Lddy; create
dnf net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider
	a LOGGER
	b resourceManager
	c sizes
	d texturePattern
	e textures
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (B)I getLeft
	a (I)Lddz; getGlyph
	a (Lnet/minecraft/server/MinecraftKey;)Ldeq; loadTexture
	b ()Lorg/apache/logging/log4j/Logger; access$100
	b (B)I getRight
	b (I)Lnet/minecraft/server/MinecraftKey; getSheetLocation
net/minecraft/server/InventoryEnderChest net/minecraft/world/inventory/PlayerEnderChestContainer
	a activeChest
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/NBTTagList;)V fromTag
	a (Lnet/minecraft/server/TileEntityEnderChest;)V setActiveChest
	b_ (Lnet/minecraft/server/EntityHuman;)V stopOpen
	c_ (Lnet/minecraft/server/EntityHuman;)V startOpen
	g ()Lnet/minecraft/server/NBTTagList; createTag
dni net/minecraft/client/gui/package-info
dnh net/minecraft/client/gui/font/providers/package-info
dre$c net/minecraft/client/gui/screens/packs/PackSelectionModel$SelectedPackEntry
	b this$0
	i ()V select
	j ()V unselect
	m ()Z isSelected
	r ()Ljava/util/List; getSelfList
	s ()Ljava/util/List; getOtherList
dnk net/minecraft/client/gui/screens/AlertScreen
	a text
	b okButton
	c callback
	p message
	q delayTicker
	a (I)V setDelay
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$0
	b ()V init
	d ()V tick
dre$d net/minecraft/client/gui/screens/packs/PackSelectionModel$UnselectedPackEntry
	b this$0
	i ()V select
	j ()V unselect
	m ()Z isSelected
	r ()Ljava/util/List; getSelfList
	s ()Ljava/util/List; getOtherList
dnj net/minecraft/client/gui/screens/AccessibilityOptionsScreen
	c OPTIONS
dre$a net/minecraft/client/gui/screens/packs/PackSelectionModel$Entry
	a ()Lnet/minecraft/server/MinecraftKey; getIconTexture
	b ()Lnet/minecraft/server/EnumResourcePackVersion; getCompatibility
	c ()Lnet/minecraft/server/IChatBaseComponent; getTitle
	d ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	e ()Lnet/minecraft/server/PackSource; getPackSource
	f ()Lnet/minecraft/server/IChatBaseComponent; getExtendedDescription
	g ()Z isFixedPosition
	h ()Z isRequired
	i ()V select
	j ()V unselect
	k ()V moveUp
	l ()V moveDown
	m ()Z isSelected
	n ()Z canSelect
	o ()Z canUnselect
	p ()Z canMoveUp
	q ()Z canMoveDown
dnm net/minecraft/client/gui/screens/ChatOptionsScreen
	c CHAT_OPTIONS
dal$a net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder
	a entries
	a ()Ldal$a; getThis
	a (Lczn$a;)Ldal$a; withEntry
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Ldaf$a; getThis
dre$b net/minecraft/client/gui/screens/packs/PackSelectionModel$EntryBase
	a this$0
	b pack
	a ()Lnet/minecraft/server/MinecraftKey; getIconTexture
	a (I)V move
	b ()Lnet/minecraft/server/EnumResourcePackVersion; getCompatibility
	c ()Lnet/minecraft/server/IChatBaseComponent; getTitle
	d ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	e ()Lnet/minecraft/server/PackSource; getPackSource
	g ()Z isFixedPosition
	h ()Z isRequired
	k ()V moveUp
	l ()V moveDown
	p ()Z canMoveUp
	q ()Z canMoveDown
	r ()Ljava/util/List; getSelfList
	s ()Ljava/util/List; getOtherList
	t ()V toggleSelection
dnl net/minecraft/client/gui/screens/BackupConfirmScreen
	a listener
	b lastScreen
	c description
	p promptForCacheErase
	q message
	r eraseCache
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$2
	at_ ()Z shouldCloseOnEsc
	b ()V init
	b (Ldlg;)V lambda$init$1
	c (Ldlg;)V lambda$init$0
dal$b net/minecraft/world/level/storage/loot/functions/SetContainerContents$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetContents; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetContents;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/PathfinderGoalRestrictSun net/minecraft/world/entity/ai/goal/RestrictSunGoal
	a mob
	a ()Z canUse
	c ()V start
	d ()V stop
dno net/minecraft/client/gui/screens/ConfirmLinkScreen
	p warning
	q copyButton
	r url
	s showWarning
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$2
	b ()V init
	b (Ldlg;)V lambda$init$1
	c (Ldlg;)V lambda$init$0
	g ()V copyToClipboard
cob$1 net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$1
dnn net/minecraft/client/gui/screens/ChatScreen
	a input
	b historyBuffer
	c historyPos
	p initial
	q commandSuggestions
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (I)V moveInHistory
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldjw;II)V resize
	a (Ldnn;)Ldlj; access$000
	a (Ljava/lang/String;Z)V insertText
	ay_ ()Z isPauseScreen
	b ()V init
	b (Ljava/lang/String;)V onEdited
	c (Ljava/lang/String;)V setChatLine
	d ()V tick
	e ()V removed
dnq net/minecraft/client/gui/screens/ConnectScreen
	a UNIQUE_THREAD_ID
	b LOGGER
	c connection
	p aborted
	q parent
	r status
	s lastNarration
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$0
	a (Ldnq;)Z access$000
	a (Ldnq;Lnet/minecraft/server/IChatBaseComponent;)V access$400
	a (Ldnq;Lnet/minecraft/server/NetworkManager;)Lnet/minecraft/server/NetworkManager; access$102
	a (Ljava/lang/String;I)V connect
	a (Lnet/minecraft/server/IChatBaseComponent;)V updateStatus
	at_ ()Z shouldCloseOnEsc
	b ()V init
	b (Ldnq;)Lnet/minecraft/server/NetworkManager; access$100
	c (Ldnq;)Ldoq; access$200
	d ()V tick
	g ()Lorg/apache/logging/log4j/Logger; access$300
dnp net/minecraft/client/gui/screens/ConfirmScreen
	a yesButton
	b noButton
	c callback
	p title2
	q message
	r delayTicker
	a (I)V setDelay
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	as_ ()Ljava/lang/String; getNarrationMessage
	at_ ()Z shouldCloseOnEsc
	b ()V init
	b (Ldlg;)V lambda$init$0
	d ()V tick
dns net/minecraft/client/gui/screens/CreateFlatWorldScreen
	a parent
	b applySettings
	c generator
	p columnType
	q columnHeight
	r list
	s deleteLayerButton
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$3
	a (Ldns;)Lnet/minecraft/server/GeneratorSettingsFlat; access$000
	a (Lnet/minecraft/server/GeneratorSettingsFlat;)V setConfig
	au_ ()V onClose
	b ()V init
	b (Ldlg;)V lambda$init$2
	b (Ldns;)V access$200
	c (Ldlg;)V lambda$init$1
	d (Ldlg;)V lambda$init$0
	i ()Lnet/minecraft/server/GeneratorSettingsFlat; settings
	k ()V updateButtonValidity
	l ()Z hasValidSelection
net/minecraft/server/ParticleParamRedstone net/minecraft/core/particles/DustParticleOptions
	a REDSTONE
	b CODEC
	c DESERIALIZER
	d r
	e g
	f b
	g scale
	a ()Ljava/lang/String; writeToString
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToNetwork
	a (Lnet/minecraft/server/ParticleParamRedstone;)Ljava/lang/Float; lambda$null$3
	b ()Lnet/minecraft/server/Particle; getType
	b (Lnet/minecraft/server/ParticleParamRedstone;)Ljava/lang/Float; lambda$null$2
	c ()F getR
	c (Lnet/minecraft/server/ParticleParamRedstone;)Ljava/lang/Float; lambda$null$1
	d ()F getG
	d (Lnet/minecraft/server/ParticleParamRedstone;)Ljava/lang/Float; lambda$null$0
	e ()F getB
	f ()F getScale
net/minecraft/server/EntityStrider net/minecraft/world/entity/monster/Strider
	bo FOOD_ITEMS
	bp TEMPT_ITEMS
	bq DATA_BOOST_TIME
	br DATA_SUFFOCATING
	bs DATA_SADDLE_ID
	bu temptGoal
	bv panicGoal
	saddleStorage steering
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L_ ()Z isSaddleable
	M_ ()Z isSaddled
	N_ ()F getSteeringSpeed
	O_ ()Z boost
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/FluidType;)Z canStandOnFluid
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/SoundCategory;)V equipSaddle
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/GroupDataEntity;)Lnet/minecraft/server/GroupDataEntity; spawnJockey
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a_ (Lnet/minecraft/server/Vec3D;)V travelWithInput
	as ()F nextStep
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/Vec3D; getDismountLocationForPassenger
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityStrider; getBreedOffspring
	bb ()D getPassengersRidingOffset
	bp ()Z isOnFire
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkStriderSpawnRules
	ce ()Lnet/minecraft/server/Vec3D; getLeashOffset
	cl ()Lnet/minecraft/server/Entity; getControllingPassenger
	dN ()Z isSensitiveToWater
	dm ()V dropEquipment
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eL ()F getMoveSpeed
	eM ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eN ()Z isPanicking
	eO ()Z isBeingTempted
	eU ()V floatStrider
	er ()Z canBeControlledByRider
	g (Lnet/minecraft/server/Vec3D;)V travel
	isShivering ()Z isSuffocating
	j ()V tick
	k (Lnet/minecraft/server/ItemStack;)Z isFood
	o ()V registerGoals
	q ()Z shouldPassengersInheritMalus
	q (Lnet/minecraft/server/Entity;)Z canAddPassenger
	setShivering (Z)V setSuffocating
dnr net/minecraft/client/gui/screens/CreateBuffetWorldScreen
	a BIOME_SELECT_INFO
	b parent
	c applySettings
	p biomes
	q list
	r biome
	s doneButton
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	a (Ldnr$a$a;)Z lambda$init$2
	a (Ldnr;)Lnet/minecraft/server/IRegistryWritable; access$100
	a (Ldnr;Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeBase; access$202
	au_ ()V onClose
	b ()V init
	b (Ldlg;)V lambda$init$0
	b (Ldnr;)V access$400
	i ()V updateButtonValidity
dnu net/minecraft/client/gui/screens/DeathScreen
	a delayTicker
	b causeOfDeath
	c hardcore
	p deathScore
	a (DDI)Z mouseClicked
	a (I)Lnet/minecraft/server/ChatModifier; getClickedComponentStyleAt
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	at_ ()Z shouldCloseOnEsc
	ay_ ()Z isPauseScreen
	b ()V init
	b (Ldlg;)V lambda$init$0
	c (Z)V confirmResult
	d ()V tick
	i ()V exitToTitleScreen
dnt net/minecraft/client/gui/screens/DatapackLoadFailureScreen
	a message
	b callback
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	at_ ()Z shouldCloseOnEsc
	b ()V init
	b (Ldlg;)V lambda$init$0
dnw net/minecraft/client/gui/screens/DirectJoinServerScreen
	a ENTER_IP_LABEL
	b selectButton
	c serverData
	p ipEdit
	q callback
	r lastScreen
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldjw;II)V resize
	a (Ldlg;)V lambda$init$1
	au_ ()V onClose
	b ()V init
	b (Ldlg;)V lambda$init$0
	b (Ljava/lang/String;)V lambda$init$2
	d ()V tick
	e ()V removed
	i ()V onSelect
	k ()V updateSelectButtonStatus
dnv net/minecraft/client/gui/screens/DemoIntroScreen
	a DEMO_BACKGROUND_LOCATION
	b movementMessage
	c durationMessage
	a (Ldfj;)V renderBackground
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	b ()V init
	b (Ldlg;)V lambda$init$0
dny net/minecraft/client/gui/screens/EditServerScreen
	a NAME_LABEL
	b IP_LABEL
	c addButton
	p callback
	q serverData
	r ipEdit
	s nameEdit
	t serverPackButton
	u lastScreen
	v addressFilter
	a (Ldfj;IIF)V render
	a (Ldjw;II)V resize
	a (Ldlg;)V lambda$init$3
	a (Ldwr$a;)Lnet/minecraft/server/IChatBaseComponent; createServerButtonText
	au_ ()V onClose
	b ()V init
	b (Ldlg;)V lambda$init$2
	b (Ljava/lang/String;)V onEdited
	c (Ldlg;)V lambda$init$1
	c (Ljava/lang/String;)Z lambda$new$0
	d ()V tick
	e ()V removed
	i ()V onAdd
	k ()V cleanUp
net/minecraft/server/DefinedStructureTestRandomBlock net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest
	a CODEC
	b block
	d probability
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/DefinedStructureTestRandomBlock;)Ljava/lang/Float; lambda$null$1
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
	b (Lnet/minecraft/server/DefinedStructureTestRandomBlock;)Lnet/minecraft/server/Block; lambda$null$0
dnx net/minecraft/client/gui/screens/DisconnectedScreen
	a reason
	b message
	c parent
	p textHeight
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$0
	at_ ()Z shouldCloseOnEsc
	b ()V init
net/minecraft/server/PosRuleTestLinear net/minecraft/world/level/levelgen/structure/templatesystem/LinearPosTest
	a CODEC
	b minChance
	d maxChance
	e minDist
	f maxDist
	a ()Lnet/minecraft/server/PosRuleTestType; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z test
	a (Lnet/minecraft/server/PosRuleTestLinear;)Ljava/lang/Integer; lambda$null$3
	b (Lnet/minecraft/server/PosRuleTestLinear;)Ljava/lang/Integer; lambda$null$2
	c (Lnet/minecraft/server/PosRuleTestLinear;)Ljava/lang/Float; lambda$null$1
	d (Lnet/minecraft/server/PosRuleTestLinear;)Ljava/lang/Float; lambda$null$0
net/minecraft/server/PathfinderGoalHorseTrap net/minecraft/world/entity/animal/horse/SkeletonTrapGoal
	a horse
	a ()Z canUse
	a (Lnet/minecraft/server/DifficultyDamageScaler;)Lnet/minecraft/server/EntityHorseAbstract; createHorse
	a (Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EntityHorseAbstract;)Lnet/minecraft/server/EntitySkeleton; createSkeleton
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; disenchant
	e ()V tick
dnz net/minecraft/client/gui/screens/ErrorScreen
	a message
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$0
	at_ ()Z shouldCloseOnEsc
	b ()V init
czs$a net/minecraft/world/level/storage/loot/entries/TagEntry$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorTag; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorTag;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
dob net/minecraft/client/gui/screens/InBedChatScreen
	a (III)Z keyPressed
	a (Ldlg;)V lambda$init$0
	au_ ()V onClose
	b ()V init
	i ()V sendWakeUp
net/minecraft/server/BlockFalling net/minecraft/world/level/block/FallingBlock
	a (Lnet/minecraft/server/EntityFallingBlock;)V falling
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityFallingBlock;)V onBroken
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityFallingBlock;)V onLand
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c ()I getDelayAfterPlace
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getDustColor
	canFallThrough (Lnet/minecraft/server/IBlockData;)Z isFree
doa net/minecraft/client/gui/screens/GenericDirtMessageScreen
	a (Ldfj;IIF)V render
	at_ ()Z shouldCloseOnEsc
dod net/minecraft/client/gui/screens/LevelLoadingScreen
	a progressListener
	b lastNarration
	c COLORS
	a (Ldfj;IIF)V render
	a (Ldfj;Laat;IIII)V renderChunks
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$0
	at_ ()Z shouldCloseOnEsc
	e ()V removed
doc net/minecraft/client/gui/screens/LanguageSelectScreen
	c WARNING_LABEL
	p packSelectionList
	q languageManager
	r forceUnicodeButton
	s doneButton
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	a (Ldoc;)Lekr; access$000
	b ()V init
	b (Ldlg;)V lambda$init$0
dof net/minecraft/client/gui/screens/MenuScreens
	a LOGGER
	b SCREENS
	a ()Z selfTest
	a (Lnet/minecraft/server/Containers;)Ldof$a; getConstructor
	a (Lnet/minecraft/server/Containers;Ldjw;ILnet/minecraft/server/IChatBaseComponent;)V create
	a (Lnet/minecraft/server/Containers;Ldof$a;)V register
doe net/minecraft/client/gui/screens/LoadingOverlay
	a MOJANG_STUDIOS_LOGO_LOCATION
	b BRAND_BACKGROUND
	c BRAND_BACKGROUND_NO_ALPHA
	d minecraft
	e reload
	i onFinish
	j fadeIn
	k currentProgress
	l fadeOutStart
	m fadeInStart
	a ()Z isPauseScreen
	a (Ldfj;IIF)V render
	a (Ldfj;IIIIF)V drawProgressBar
	a (Ldjw;)V registerTextures
	b ()Lnet/minecraft/server/MinecraftKey; access$000
doh net/minecraft/client/gui/screens/OptionsScreen
	a OPTION_SCREEN_OPTIONS
	b lastScreen
	c options
	p difficultyButton
	q lockButton
	r currentDifficulty
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$11
	a (Lnet/minecraft/server/EnumDifficulty;)Lnet/minecraft/server/IChatBaseComponent; getDifficultyText
	a (Lnet/minecraft/server/ResourcePackRepository;)V updatePackList
	b ()V init
	b (Ldlg;)V lambda$init$10
	c (Ldlg;)V lambda$init$9
	c (Z)V lockCallback
	d (Ldlg;)V lambda$init$8
	e ()V removed
	e (Ldlg;)V lambda$init$7
	f (Ldlg;)V lambda$init$6
	g (Ldlg;)V lambda$init$5
	h (Ldlg;)V lambda$init$4
	i (Ldlg;)V lambda$init$3
	j (Ldlg;)V lambda$init$2
	k (Ldlg;)V lambda$init$1
	l (Ldlg;)V lambda$init$0
dog net/minecraft/client/gui/screens/MouseSettingsScreen
	c list
	p OPTIONS
	a (I)[Ldjz; lambda$init$0
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	b ()V init
dwl$1 net/minecraft/client/multiplayer/ClientLevel$1
	a $SwitchMap$net$minecraft$core$Direction
doj net/minecraft/client/gui/screens/OutOfMemoryScreen
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	at_ ()Z shouldCloseOnEsc
	b ()V init
	b (Ldlg;)V lambda$init$0
ant$1 net/minecraft/util/profiling/ProfilerFiller$1
	a val$first
	b val$second
	a ()V startTick
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	b ()V endTick
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c ()V pop
	c (Ljava/lang/String;)V incrementCounter
	c (Ljava/util/function/Supplier;)V incrementCounter
doi net/minecraft/client/gui/screens/OptionsSubScreen
	a lastScreen
	b options
	a (Ldlu;II)Ljava/util/List; tooltipAt
	au_ ()V onClose
	e ()V removed
net/minecraft/server/LootItemConditionInverted net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition
	a term
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ldbl$a;)Ldbl$a; invert
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/LootItemConditionInverted;)Lnet/minecraft/server/LootItemCondition; access$000
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lnet/minecraft/server/LootItemConditionType; getType
	b (Lnet/minecraft/server/LootItemConditionInverted;)Lnet/minecraft/server/LootItemCondition; lambda$invert$0
net/minecraft/server/BehaviorVictory net/minecraft/world/entity/ai/behavior/VictoryStroll
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
dol net/minecraft/client/gui/screens/PauseScreen
	a showPauseMenu
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$createPauseMenu$9
	a (Ljava/lang/String;Ldlg;)V lambda$createPauseMenu$4
	b ()V init
	b (Ldlg;)V lambda$createPauseMenu$8
	c (Ldlg;)V lambda$createPauseMenu$7
	c (Ljava/lang/String;Z)V lambda$null$3
	c (Z)V lambda$null$5
	d ()V tick
	d (Ldlg;)V lambda$createPauseMenu$6
	e (Ldlg;)V lambda$createPauseMenu$2
	f (Ldlg;)V lambda$createPauseMenu$1
	g (Ldlg;)V lambda$createPauseMenu$0
	i ()V createPauseMenu
dok net/minecraft/client/gui/screens/Overlay
	a ()Z isPauseScreen
vn$a net/minecraft/server/ChainedJsonException$Entry
	a filename
	b jsonKeys
	a ()Ljava/lang/String; getFilename
	a (Ljava/lang/String;)V addJsonKey
	a (Lvn$a;Ljava/lang/String;)V access$100
	b ()Ljava/lang/String; getJsonKeys
	b (Lvn$a;Ljava/lang/String;)Ljava/lang/String; access$202
don net/minecraft/client/gui/screens/PresetFlatWorldScreen
	a LOGGER
	b PRESETS
	c parent
	p shareText
	q listText
	r list
	s selectButton
	t export
	u settings
	a (DDD)Z mouseScrolled
	a (Ldfj;IIF)V render
	a (Ldjw;II)V resize
	a (Ldlg;)V lambda$init$3
	a (Ldon;)Ldns; access$200
	a (Ldon;Lnet/minecraft/server/GeneratorSettingsFlat;)Lnet/minecraft/server/GeneratorSettingsFlat; access$302
	a (Ljava/lang/String;I)Lnet/minecraft/server/WorldGenFlatLayerInfo; getLayerInfoFromString
	a (Ljava/util/List;ZZZ[Lnet/minecraft/server/WorldGenFlatLayerInfo;Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettingsFlat; lambda$preset$5
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/ResourceKey;Ljava/util/List;ZZZ[Lnet/minecraft/server/WorldGenFlatLayerInfo;)V preset
	a (Lnet/minecraft/server/IRegistry;Ldlg;)V lambda$init$2
	a (Lnet/minecraft/server/IRegistry;Ljava/lang/String;Lnet/minecraft/server/GeneratorSettingsFlat;)Lnet/minecraft/server/GeneratorSettingsFlat; fromString
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/GeneratorSettingsFlat;)Ljava/lang/String; access$400
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/ResourceKey;)Lnet/minecraft/server/BiomeBase; lambda$null$4
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/IllegalArgumentException; lambda$fromString$0
	au_ ()V onClose
	b ()V init
	b (Ldon;)Lnet/minecraft/server/GeneratorSettingsFlat; access$300
	b (Ljava/lang/String;)Ljava/util/List; getLayersInfoFromString
	b (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/GeneratorSettingsFlat;)Ljava/lang/String; save
	b (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/ResourceKey;)Lnet/minecraft/server/BiomeBase; lambda$fromString$1
	c (Ldon;)Ldln; access$500
	c (Z)V updateButtonValidity
	d ()V tick
	e ()V removed
	i ()Ljava/util/List; access$000
net/minecraft/server/JsonRegistry net/minecraft/world/level/storage/loot/GsonAdapterFactory
	a (Lnet/minecraft/server/IRegistry;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lcyq$a; builder
dom net/minecraft/client/gui/screens/PopupScreen
	a message
	b buttonOptions
	c messageLines
	p contentTop
	q buttonWidth
	a (Ldfj;IIF)V render
	as_ ()Ljava/lang/String; getNarrationMessage
	at_ ()Z shouldCloseOnEsc
	b (Ldjw;II)V init
net/minecraft/server/WorldGenDecoratorDungeonConfiguration net/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration
	a CODEC
	c chance
	a (Lnet/minecraft/server/WorldGenDecoratorDungeonConfiguration;)Ljava/lang/Integer; lambda$static$0
dpp$1 net/minecraft/client/gui/screens/inventory/BeaconScreen$1
	a val$menu
	b this$0
	a (Lnet/minecraft/server/Container;II)V setContainerData
	a (Lnet/minecraft/server/Container;ILnet/minecraft/server/ItemStack;)V slotChanged
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/NonNullList;)V refreshContainer
dop net/minecraft/client/gui/screens/ReceivingLevelScreen
	a DOWNLOADING_TERRAIN_TEXT
	a (Ldfj;IIF)V render
	at_ ()Z shouldCloseOnEsc
	ay_ ()Z isPauseScreen
doo net/minecraft/client/gui/screens/ProgressScreen
	a header
	b stage
	c progress
	p stop
	a ()V stop
	a (I)V progressStagePercentage
	a (Ldfj;IIF)V render
	a (Lnet/minecraft/server/IChatBaseComponent;)V progressStartNoAbort
	at_ ()Z shouldCloseOnEsc
	b (Lnet/minecraft/server/IChatBaseComponent;)V progressStart
	c (Lnet/minecraft/server/IChatBaseComponent;)V progressStage
net/minecraft/server/PacketPlayOutScoreboardScore net/minecraft/network/protocol/game/ClientboundSetScorePacket
	a owner
	b objectiveName
	c score
	d method
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/lang/String; getOwner
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/lang/String; getObjectiveName
	d ()I getScore
	e ()Lnet/minecraft/server/ScoreboardServer$Action; getMethod
dor net/minecraft/client/gui/screens/ShareToLanScreen
	a ALLOW_COMMANDS_LABEL
	b GAME_MODE_LABEL
	c INFO_TEXT
	p lastScreen
	q commandsButton
	r modeButton
	s gameModeName
	t commands
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$3
	b ()V init
	b (Ldlg;)V lambda$init$2
	c (Ldlg;)V lambda$init$1
	d (Ldlg;)V lambda$init$0
	i ()V updateSelectionStrings
doq net/minecraft/client/gui/screens/Screen
	a LOGGER
	b ALLOWED_PROTOCOLS
	c clickedLink
	d title
	e children
	i minecraft
	j itemRenderer
	k width
	l height
	m buttons
	n passEvents
	o font
	a (II)V setSize
	a (III)Z keyPressed
	a (Ldfj;)V renderBackground
	a (Ldfj;I)V renderBackground
	a (Ldfj;IIF)V render
	a (Ldfj;Lnet/minecraft/server/ChatModifier;II)V renderComponentHoverEffect
	a (Ldfj;Lnet/minecraft/server/ItemStack;II)V renderTooltip
	a (Ldjw;II)V resize
	a (Ldle;)Ldle; addButton
	a (Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V wrapScreenError
	a (Ljava/lang/String;CI)Z isValidCharacterForName
	a (Ljava/lang/String;Z)V insertText
	a (Ljava/net/URI;)V openLink
	a (Ljava/util/List;)V onFilesDrop
	a (Lnet/minecraft/server/ChatModifier;)Z handleComponentClicked
	a (Lnet/minecraft/server/ItemStack;)Ljava/util/List; getTooltipFromItem
	as_ ()Ljava/lang/String; getNarrationMessage
	at_ ()Z shouldCloseOnEsc
	au_ ()V onClose
	av_ ()Ljava/util/List; children
	ay_ ()Z isPauseScreen
	b ()V init
	b (DD)Z isMouseOver
	b (Ldfj;Ljava/util/List;II)V renderComponentTooltip
	b (Ldfj;Lnet/minecraft/server/IChatBaseComponent;II)V renderTooltip
	b (Ldjw;II)V init
	b (Ljava/lang/String;)Ljava/lang/String; lambda$wrapScreenError$0
	b (Ljava/lang/String;Z)V sendMessage
	b_ (Ljava/lang/String;)V sendMessage
	c (Ldfj;Ljava/util/List;II)V renderTooltip
	c (Z)V confirmLink
	d ()V tick
	d (Ldmf;)Ldmf; addWidget
	e ()V removed
	e (I)V renderDirtBackground
	f (I)Z isCut
	g (I)Z isPaste
	h (I)Z isCopy
	i (I)Z isSelectAll
	w ()Lnet/minecraft/server/IChatBaseComponent; getTitle
	x ()Z hasControlDown
	y ()Z hasShiftDown
	z ()Z hasAltDown
dot net/minecraft/client/gui/screens/SkinCustomizationScreen
	a (Lbfu;)Lnet/minecraft/server/IChatBaseComponent; getMessage
	a (Lbfu;Ldlg;)V lambda$init$0
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$2
	b ()V init
	b (Ldlg;)V lambda$init$1
dos net/minecraft/client/gui/screens/SimpleOptionsSubScreen
	c smallOptions
	p narratorButton
	q list
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$0
	b ()V init
	i ()V updateNarratorButton
dov net/minecraft/client/gui/screens/TitleScreen
	A fading
	B fadeInStart
	a CUBE_MAP
	b LOGGER
	c PANORAMA_OVERLAY
	p ACCESSIBILITY_TEXTURE
	q minceraftEasterEgg
	r splash
	s resetDemoButton
	t MINECRAFT_LOGO
	u MINECRAFT_EDITION
	v realmsNotificationsInitialized
	w realmsNotificationsScreen
	x copyrightWidth
	y copyrightX
	z panorama
	a (DDI)Z mouseClicked
	a (Ldfj;IIF)V render
	a (Ldfj;Ljava/lang/Integer;Ljava/lang/Integer;)V lambda$render$11
	a (Ldlg;)V lambda$createDemoMenuOptions$9
	a (Ldlg;Ldfj;II)V lambda$createNormalMenuOptions$5
	a (Lejv;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preloadResources
	a (ZLdlg;)V lambda$createDemoMenuOptions$8
	at_ ()Z shouldCloseOnEsc
	ay_ ()Z isPauseScreen
	b ()V init
	b (II)V createNormalMenuOptions
	b (Ldfj;Ljava/lang/Integer;Ljava/lang/Integer;)V lambda$render$10
	b (Ldlg;)V lambda$createNormalMenuOptions$7
	c (II)V createDemoMenuOptions
	c (Ldlg;)V lambda$createNormalMenuOptions$6
	c (Z)V confirmDemo
	d ()V tick
	d (Ldlg;)V lambda$createNormalMenuOptions$4
	e ()V removed
	e (Ldlg;)V lambda$init$3
	f (Ldlg;)V lambda$init$2
	g (Ldlg;)V lambda$init$1
	h (Ldlg;)V lambda$init$0
	i ()Z realmsNotificationsEnabled
	k ()Z checkDemoWorldPresence
	l ()V realmsButtonClicked
net/minecraft/server/AdvancementDataWorld net/minecraft/server/ServerAdvancementManager
	DESERIALIZER GSON
	REGISTRY advancements
	a LOGGER
	d predicateManager
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/util/Map;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/util/Map;Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonElement;)V lambda$apply$0
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Advancement; getAdvancement
	getAdvancements ()Ljava/util/Collection; getAllAdvancements
dou net/minecraft/client/gui/screens/SoundOptionsScreen
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	b ()V init
	b (Ldlg;)V lambda$init$0
dox net/minecraft/client/gui/screens/WinScreen
	a LOGGER
	b LOGO_LOCATION
	c EDITION_LOCATION
	p VIGNETTE_LOCATION
	q OBFUSCATE_TOKEN
	r poem
	s onFinished
	t time
	u lines
	v centeredLines
	w totalScrollLength
	x scrollSpeed
	a (IIF)V renderBg
	a (Ldfj;IIF)V render
	a (Ldfj;Ljava/lang/Integer;Ljava/lang/Integer;)V lambda$render$0
	au_ ()V onClose
	b ()V init
	d ()V tick
	i ()V respawn
dow net/minecraft/client/gui/screens/VideoSettingsScreen
	c FABULOUS
	p WARNING_MESSAGE
	q WARNING_TITLE
	r BUTTON_ACCEPT
	s BUTTON_CANCEL
	t NEW_LINE
	u OPTIONS
	v list
	w gpuWarnlistManager
	x oldMipmaps
	a (DDI)Z mouseClicked
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$mouseClicked$2
	b ()V init
	b (Ldlg;)V lambda$mouseClicked$1
	c (DDI)Z mouseReleased
	c (Ldlg;)V lambda$init$0
	e ()V removed
djw$1 net/minecraft/client/Minecraft$1
	a $SwitchMap$net$minecraft$world$phys$HitResult$Type
	b $SwitchMap$net$minecraft$world$entity$vehicle$AbstractMinecart$Type
doz net/minecraft/client/gui/screens/achievement/StatsUpdateListener
	b LOADING_SYMBOLS
	l ()V onStatsUpdated
doy net/minecraft/client/gui/screens/achievement/StatsScreen
	a lastScreen
	c PENDING_TEXT
	p statsList
	q itemStatsList
	r mobsStatsList
	s stats
	t activeList
	u isLoading
	a (I)I getColumnX
	a (Ldfj;IIF)V render
	a (Ldfj;IILnet/minecraft/server/Item;)V blitSlot
	a (Ldlg;)V lambda$initButtons$3
	a (Ldls;)V setActiveList
	a (Ldoy;)Ldkr; access$200
	a (Ldoy;I)I access$800
	a (Ldoy;Ldfj;IIII)V access$900
	a (Ldoy;Ldfj;IILnet/minecraft/server/Item;)V access$1300
	a (Lnet/minecraft/server/Statistic;)Ljava/lang/String; access$100
	ay_ ()Z isPauseScreen
	b ()V init
	b (Ldlg;)V lambda$initButtons$2
	b (Ldoy;)Lnet/minecraft/server/StatisticManager; access$300
	b (Lnet/minecraft/server/Statistic;)Ljava/lang/String; getTranslationKey
	c (Ldfj;IIII)V blitSlotIcon
	c (Ldlg;)V lambda$initButtons$1
	c (Ldoy;)Ldkr; access$400
	d (Ldlg;)V lambda$initButtons$0
	d (Ldoy;)Ldkr; access$500
	e (Ldoy;)Ldkr; access$1000
	f (Ldoy;)Ldkr; access$1100
	g (Ldoy;)Ldoy$b; access$1200
	h (Ldoy;)Ldkr; access$1400
	i ()V initLists
	i (Ldoy;)Ldkr; access$1500
	j (Ldoy;)Ldkr; access$1600
	k ()V initButtons
	k (Ldoy;)Ldkr; access$1700
	l ()V onStatsUpdated
	l (Ldoy;)Ldkr; access$1800
	m ()Ldls; getActiveList
	m (Ldoy;)Ldkr; access$1900
	n (Ldoy;)Ldkr; access$2000
	o (Ldoy;)Ldkr; access$2100
net/minecraft/server/BehaviorPlay net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids
	a (Ljava/util/Map$Entry;)Z lambda$findSomeoneBeingChased$1
	a (Ljava/util/Map;Lnet/minecraft/server/EntityLiving;)V lambda$checkHowManyChasersEachFriendHas$3
	a (Lnet/minecraft/server/EntityCreature;)Ljava/util/Optional; findSomeoneToChase
	a (Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/EntityLiving;)V chaseKid
	a (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityLiving; whoAreYouChasing
	a (Lnet/minecraft/server/EntityLiving;Ljava/lang/Integer;)Ljava/lang/Integer; lambda$null$2
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z isFriendChasingMe
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/EntityLiving;)V fleeFromChaser
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityCreature;)Ljava/util/Optional; findSomeoneBeingChased
	b (Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/EntityLiving;)V lambda$start$0
	b (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityLiving; seeIfSomeoneIsChasingMe
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$isFriendChasingMe$5
	c (Lnet/minecraft/server/EntityCreature;)Ljava/util/Map; checkHowManyChasersEachFriendHas
	c (Lnet/minecraft/server/EntityLiving;)Z isChasingSomeone
	c (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$seeIfSomeoneIsChasingMe$4
	d (Lnet/minecraft/server/EntityCreature;)Ljava/util/List; getFriendsNearby
	e (Lnet/minecraft/server/EntityCreature;)Z hasFriendsNearby
net/minecraft/server/ChatHoverable$EnumHoverAction net/minecraft/network/chat/HoverEvent$Action
	d LOOKUP
	e name
	f allowFromServer
	g argDeserializer
	h argSerializer
	i legacyArgDeserializer
	a ()Z isAllowedFromServer
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/ChatHoverable; deserialize
	a (Ljava/lang/Object;)Lcom/google/gson/JsonElement; serializeArg
	a (Ljava/lang/String;)Lnet/minecraft/server/ChatHoverable$EnumHoverAction; getByName
	a (Lnet/minecraft/server/ChatHoverable$EnumHoverAction;)Lnet/minecraft/server/ChatHoverable$EnumHoverAction; lambda$static$3
	a (Lnet/minecraft/server/ChatHoverable$EnumHoverAction;Ljava/lang/Object;)Ljava/lang/Object; access$000
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/ChatHoverable; deserializeFromLegacy
	b ()Ljava/lang/String; getName
	b (Lcom/google/gson/JsonElement;)Lnv$c; lambda$static$0
	b (Ljava/lang/Object;)Ljava/lang/Object; cast
	b (Lnet/minecraft/server/IChatBaseComponent;)Lnv$c; lambda$static$2
	c (Ljava/lang/Object;)Lcom/google/gson/JsonElement; lambda$static$1
net/minecraft/server/WorldGenFeatureRandomChoiceConfigurationWeight net/minecraft/world/level/levelgen/feature/WeightedConfiguredFeature
	a CODEC
	b feature
	c chance
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Z place
	a (Lnet/minecraft/server/WorldGenFeatureConfigured;)Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$new$3
	a (Lnet/minecraft/server/WorldGenFeatureRandomChoiceConfigurationWeight;)Ljava/lang/Float; lambda$null$1
	b (Lnet/minecraft/server/WorldGenFeatureRandomChoiceConfigurationWeight;)Ljava/util/function/Supplier; lambda$null$0
net/minecraft/server/BehaviorStrollPosition net/minecraft/world/entity/ai/behavior/StrollAroundPoi
	b memoryType
	c nextOkStartTime
	d maxDistanceFromPoi
	e speedModifier
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/MemoryTarget; lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
dpa net/minecraft/client/gui/screens/achievement/package-info
dpc net/minecraft/client/gui/screens/advancements/AdvancementTabType
	a ABOVE
	b BELOW
	c LEFT
	d RIGHT
	e textureX
	f textureY
	g width
	h height
	i max
	j $VALUES
	a ()I getMax
	a (I)I getX
	a (IIIDD)Z isMouseOver
	a (IIILefg;Lnet/minecraft/server/ItemStack;)V drawIcon
	a (Ldfj;Ldkt;IIZI)V draw
	b (I)I getY
dpb net/minecraft/client/gui/screens/advancements/AdvancementTab
	a minecraft
	b screen
	c type
	d index
	e advancement
	i display
	j icon
	k title
	l root
	m widgets
	n scrollX
	o scrollY
	p minX
	q minY
	r maxX
	s maxY
	t fade
	u centered
	a ()Ldpc; getType
	a (DD)V scroll
	a (IIDD)Z isMouseOver
	a (IILefg;)V drawIcon
	a (Ldfj;)V drawContents
	a (Ldfj;IIZ)V drawTab
	a (Ldjw;Ldpf;ILnet/minecraft/server/Advancement;)Ldpb; create
	a (Ldpd;Lnet/minecraft/server/Advancement;)V addWidget
	a (Lnet/minecraft/server/Advancement;)V addAdvancement
	b ()I getIndex
	b (Lnet/minecraft/server/Advancement;)Ldpd; getWidget
	c ()Lnet/minecraft/server/Advancement; getAdvancement
	c (Ldfj;IIII)V drawTooltips
	d ()Lnet/minecraft/server/IChatBaseComponent; getTitle
	e ()Lnet/minecraft/server/AdvancementDisplay; getDisplay
	f ()Ldpf; getScreen
dpe net/minecraft/client/gui/screens/advancements/AdvancementWidgetType
	a OBTAINED
	b UNOBTAINED
	c y
	d $VALUES
	a ()I getIndex
net/minecraft/server/EnumMonsterType net/minecraft/world/entity/MobType
	e WATER
dpd net/minecraft/client/gui/screens/advancements/AdvancementWidget
	a WIDGETS_LOCATION
	b TEST_SPLIT_OFFSETS
	c tab
	d advancement
	e display
	i title
	j width
	k description
	l minecraft
	m parent
	n children
	o progress
	p x
	q y
	a ()I getWidth
	a (IIII)Z isMouseOver
	a (Ldfj;II)V draw
	a (Ldfj;IIFII)V drawHover
	a (Ldfj;IIIIIIII)V renderRepeating
	a (Ldfj;IIIIIIIII)V render9Sprite
	a (Ldfj;IIZ)V drawConnectivity
	a (Ldkg;Ljava/util/List;)F getMaxWidth
	a (Ldpd;)V addChild
	a (Lnet/minecraft/server/Advancement;)Ldpd; getFirstVisibleParent
	a (Lnet/minecraft/server/AdvancementProgress;)V setProgress
	a (Lnet/minecraft/server/IChatBaseComponent;I)Ljava/util/List; findOptimalLines
	b ()V attachToParent
	c ()I getY
	d ()I getX
dpg net/minecraft/client/gui/screens/advancements/package-info
dpf net/minecraft/client/gui/screens/advancements/AdvancementsScreen
	a WINDOW_LOCATION
	b TABS_LOCATION
	c VERY_SAD_LABEL
	p NO_ADVANCEMENTS_LABEL
	q TITLE
	r advancements
	s tabs
	t selectedTab
	u isScrolling
	a ()V onAdvancementsCleared
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (III)Z keyPressed
	a (Ldfj;II)V renderWindow
	a (Ldfj;IIF)V render
	a (Lnet/minecraft/server/Advancement;)V onAddAdvancementRoot
	a (Lnet/minecraft/server/Advancement;Lnet/minecraft/server/AdvancementProgress;)V onUpdateAdvancementProgress
	b ()V init
	b (Lnet/minecraft/server/Advancement;)V onRemoveAdvancementRoot
	c (Ldfj;IIII)V renderInside
	c (Lnet/minecraft/server/Advancement;)V onAddAdvancementTask
	d (Ldfj;IIII)V renderTooltips
	d (Lnet/minecraft/server/Advancement;)V onRemoveAdvancementTask
	e ()V removed
	e (Lnet/minecraft/server/Advancement;)V onSelectedTabChanged
	f (Lnet/minecraft/server/Advancement;)Ldpd; getAdvancementWidget
	g (Lnet/minecraft/server/Advancement;)Ldpb; getTab
dpi net/minecraft/client/gui/screens/controls/ControlsScreen
	c selectedKey
	p lastKeySelection
	q controlList
	r resetButton
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$2
	b ()V init
	b (Ldlg;)V lambda$init$1
	c (Ldlg;)V lambda$init$0
net/minecraft/server/WorldBorder net/minecraft/world/level/border/WorldBorder
	a listeners
	b damagePerBlock
	c DEFAULT_SETTINGS
	d damageSafeZone
	e warningTime
	f warningBlocks
	g centerX
	h centerZ
	i absoluteMaxSize
	j extent
	a (DD)Z isWithinBounds
	a (I)V setAbsoluteMaxSize
	a (Lcfr$c;)V applySettings
	a (Lnet/minecraft/server/AxisAlignedBB;)Z isWithinBounds
	a (Lnet/minecraft/server/BlockPosition;)Z isWithinBounds
	a (Lnet/minecraft/server/Entity;)D getDistanceToBorder
	a (Lnet/minecraft/server/IWorldBorderListener;)V addListener
	a (Lnet/minecraft/server/WorldBorder;)I access$000
	b (DD)D getDistanceToBorder
	b (Lnet/minecraft/server/IWorldBorderListener;)V removeListener
	c ()Lnet/minecraft/server/VoxelShape; getCollisionShape
	d ()Lcfq; getStatus
	e ()D getMinX
	f ()D getMinZ
	g ()D getMaxX
	getDamageAmount ()D getDamagePerBlock
	getDamageBuffer ()D getDamageSafeZone
	getWarningDistance ()I getWarningBlocks
	h ()D getMaxZ
	isInBounds (Lnet/minecraft/server/ChunkCoordIntPair;)Z isWithinBounds
	j ()J getLerpRemainingTime
	k ()D getLerpTarget
	l ()Ljava/util/List; getListeners
	m ()I getAbsoluteMaxSize
	p ()D getLerpSpeed
	s ()V tick
	setDamageAmount (D)V setDamagePerBlock
	setDamageBuffer (D)V setDamageSafeZone
	setWarningDistance (I)V setWarningBlocks
	t ()Lcfr$c; createSettings
	transitionSizeBetween (DDJ)V lerpSizeBetween
dph net/minecraft/client/gui/screens/controls/ControlList
	a controlsScreen
	o maxNameWidth
	a (Ldph;)Ldjw; access$100
	b (Ldph;)Ldjw; access$200
	c (Ldph;)Ldjw; access$300
	d ()I getRowWidth
	d (Ldph;)Ldjw; access$400
	e ()I getScrollbarPosition
	e (Ldph;)Ldpi; access$500
	f (Ldph;)I access$600
	g (Ldph;)Ldjw; access$700
	h (Ldph;)Ldjw; access$800
	i (Ldph;)Ldjw; access$900
	j (Ldph;)Ldjw; access$1000
net/minecraft/server/BlockDropper net/minecraft/world/level/block/DropperBlock
	c DISPENSE_BEHAVIOUR
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IDispenseBehavior; getDispenseMethod
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V dispenseFrom
net/minecraft/server/BlockCoralFan net/minecraft/world/level/block/CoralFanBlock
	a deadBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
dpk net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen
	a GAMEMODE_SWITCHER_LOCATION
	b ALL_SLOTS_WIDTH
	c SELECT_KEY
	p previousHovered
	q currentlyHovered
	r firstMouseX
	s firstMouseY
	t setFirstMousePos
	u slots
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldfj;Ldpk$a;)V lambda$render$0
	a (Ldjw;Ljava/util/Optional;)V switchToHoveredGameMode
	a (Ldpk$b;Ldpk$a;)V lambda$render$1
	a (Ldpk;)Lefg; access$500
	ay_ ()Z isPauseScreen
	b ()V init
	i ()Lnet/minecraft/server/MinecraftKey; access$700
	k ()Lnet/minecraft/server/EnumGamemode; getDefaultSelected
	l ()V switchToHoveredGameMode
	m ()Z checkToClose
dpj net/minecraft/client/gui/screens/controls/package-info
dpm net/minecraft/client/gui/screens/inventory/AbstractContainerScreen
	A clickedSlot
	B snapbackEnd
	C quickdropSlot
	D lastClickSlot
	E isSplittingStack
	F draggingItem
	G snapbackStartX
	H snapbackStartY
	I snapbackTime
	J snapbackItem
	K quickdropTime
	L quickCraftingType
	M quickCraftingButton
	N skipNextRelease
	O quickCraftingRemainder
	P lastClickTime
	Q lastClickButton
	R doubleclick
	S lastQuickMoved
	a INVENTORY_LOCATION
	b imageWidth
	c imageHeight
	p titleLabelX
	q titleLabelY
	r inventoryLabelX
	s inventoryLabelY
	t menu
	u inventory
	v hoveredSlot
	w leftPos
	x topPos
	y quickCraftSlots
	z isQuickCrafting
	a (DD)Lnet/minecraft/server/Slot; findSlot
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (DDIII)Z hasClickedOutside
	a (I)V checkHotbarMouseClicked
	a (III)Z keyPressed
	a (IIIIDD)Z isHovering
	a (Ldfj;FII)V renderBg
	a (Ldfj;II)V renderTooltip
	a (Ldfj;IIF)V render
	a (Ldfj;Lnet/minecraft/server/Slot;)V renderSlot
	a (Lnet/minecraft/server/ItemStack;IILjava/lang/String;)V renderFloatingItem
	a (Lnet/minecraft/server/Slot;DD)Z isHovering
	a (Lnet/minecraft/server/Slot;IILnet/minecraft/server/InventoryClickType;)V slotClicked
	au_ ()V onClose
	ay_ ()Z isPauseScreen
	b ()V init
	b (II)Z checkHotbarKeyPressed
	b (Ldfj;II)V renderLabels
	c (DDI)Z mouseReleased
	d ()V tick
	e ()V removed
	i ()Lnet/minecraft/server/Container; getMenu
	m ()V recalculateQuickCraftRemaining
net/minecraft/server/CommandListenerWrapper net/minecraft/commands/CommandSourceStack
	a ERROR_NOT_PLAYER
	b ERROR_NOT_ENTITY
	base source
	d worldPosition
	e level
	f permissionLevel
	g textName
	h displayName
	i server
	j silent
	k entity
	l consumer
	m anchor
	n rotation
	a ()Lnet/minecraft/server/CommandListenerWrapper; withSuppressedOutput
	a (I)Lnet/minecraft/server/CommandListenerWrapper; withPermission
	a (Lcom/mojang/brigadier/ResultConsumer;)Lnet/minecraft/server/CommandListenerWrapper; withCallback
	a (Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Lnet/minecraft/server/CommandListenerWrapper; withCallback
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	a (Lcom/mojang/brigadier/context/CommandContext;ZI)V onCommandComplete
	a (Lnet/minecraft/server/ArgumentAnchor$Anchor;)Lnet/minecraft/server/CommandListenerWrapper; withAnchor
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/CommandListenerWrapper; withEntity
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/ArgumentAnchor$Anchor;)Lnet/minecraft/server/CommandListenerWrapper; facing
	a (Lnet/minecraft/server/Vec2F;)Lnet/minecraft/server/CommandListenerWrapper; withRotation
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/CommandListenerWrapper; withPosition
	a (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/CommandListenerWrapper; withLevel
	b (I)Lnet/minecraft/server/CommandListenerWrapper; withMaximumPermission
	b (Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$new$0
	b (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/CommandListenerWrapper; facing
	c (I)Z hasPermission
	g ()Lnet/minecraft/server/Entity; getEntityOrException
	getName ()Ljava/lang/String; getTextName
	getScoreboardDisplayName ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	getWorld ()Lnet/minecraft/server/WorldServer; getLevel
	h ()Lnet/minecraft/server/EntityPlayer; getPlayerOrException
	i ()Lnet/minecraft/server/Vec2F; getRotation
	k ()Lnet/minecraft/server/ArgumentAnchor$Anchor; getAnchor
	l ()Ljava/util/Collection; getOnlinePlayerNames
	m ()Ljava/util/Collection; getAllTeams
	n ()Ljava/util/Collection; getAvailableSoundEvents
	o ()Ljava/util/stream/Stream; getRecipeNames
	p ()Ljava/util/Set; levels
	q ()Lnet/minecraft/server/IRegistryCustom; registryAccess
	sendAdminMessage (Lnet/minecraft/server/IChatBaseComponent;)V broadcastToAdmins
	sendFailureMessage (Lnet/minecraft/server/IChatBaseComponent;)V sendFailure
	sendMessage (Lnet/minecraft/server/IChatBaseComponent;Z)V sendSuccess
net/minecraft/server/ArgumentVectorPosition net/minecraft/commands/arguments/coordinates/LocalCoordinates
	a left
	b up
	c forwards
	a ()Z isXRelative
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ArgumentVectorPosition; parse
	a (Lcom/mojang/brigadier/StringReader;I)D readDouble
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec3D; getPosition
	b ()Z isYRelative
	b (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec2F; getRotation
	c ()Z isZRelative
dpl net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen
	a commandEdit
	b previousEdit
	c doneButton
	p cancelButton
	q outputButton
	r trackOutput
	s SET_COMMAND_LABEL
	t COMMAND_LABEL
	u PREVIOUS_OUTPUT_LABEL
	v commandSuggestions
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldjw;II)V resize
	a (Ldlg;)V lambda$init$2
	a (Ldpl;)Ldlj; access$000
	a (Lnet/minecraft/server/CommandBlockListenerAbstract;)V populateAndSendPacket
	au_ ()V onClose
	b ()V init
	b (Ldlg;)V lambda$init$1
	b (Ljava/lang/String;)V onEdited
	c (Ldlg;)V lambda$init$0
	d ()V tick
	e ()V removed
	i ()Lnet/minecraft/server/CommandBlockListenerAbstract; getCommandBlock
	k ()I getPreviousY
	l ()V updateCommandOutput
	m ()V onDone
dpo net/minecraft/client/gui/screens/inventory/AnvilScreen
	A ANVIL_LOCATION
	B TOO_EXPENSIVE_TEXT
	C name
	a (III)Z keyPressed
	a (Ldjw;II)V resize
	a (Lnet/minecraft/server/Container;ILnet/minecraft/server/ItemStack;)V slotChanged
	b (Ldfj;II)V renderLabels
	b (Ldfj;IIF)V renderFg
	b (Ljava/lang/String;)V onNameChanged
	e ()V removed
	k ()V subInit
dpn net/minecraft/client/gui/screens/inventory/AbstractFurnaceScreen
	A recipeBookComponent
	B RECIPE_BUTTON_LOCATION
	C widthTooNarrow
	D texture
	a (CI)Z charTyped
	a (DDI)Z mouseClicked
	a (DDIII)Z hasClickedOutside
	a (III)Z keyPressed
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$0
	a (Lnet/minecraft/server/Slot;IILnet/minecraft/server/InventoryClickType;)V slotClicked
	az_ ()V recipesUpdated
	b ()V init
	d ()V tick
	e ()V removed
	l ()Ldrm; getRecipeBookComponent
dpq net/minecraft/client/gui/screens/inventory/BlastFurnaceScreen
	B TEXTURE
dpp net/minecraft/client/gui/screens/inventory/BeaconScreen
	A BEACON_LOCATION
	B PRIMARY_EFFECT_LABEL
	C SECONDARY_EFFECT_LABEL
	D confirmButton
	E initPowerButtons
	F primary
	G secondary
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
	a (Ldpp;)Ljava/util/List; access$400
	a (Ldpp;Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/MobEffectList; access$002
	a (Ldpp;Z)Z access$202
	b ()V init
	b (Ldfj;II)V renderLabels
	b (Ldpp;)Ljava/util/List; access$500
	b (Ldpp;Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/MobEffectList; access$102
	c (Ldpp;)Lnet/minecraft/server/MobEffectList; access$000
	d ()V tick
	d (Ldpp;)Lnet/minecraft/server/MobEffectList; access$100
	e (Ldpp;)Ldjw; access$600
	f (Ldpp;)Ldjw; access$700
	g (Ldpp;)Ldjw; access$800
	h (Ldpp;)Ldjw; access$900
	i (Ldpp;)Ldjw; access$1000
	j (Ldpp;)Ldjw; access$1100
	k ()Lnet/minecraft/server/MinecraftKey; access$300
	k (Ldpp;)Ldjw; access$1200
dps net/minecraft/client/gui/screens/inventory/BookViewScreen
	a EMPTY_ACCESS
	b BOOK_LOCATION
	c bookAccess
	p currentPage
	q cachedPageComponents
	r cachedPage
	s pageMsg
	t forwardButton
	u backButton
	v playTurnSound
	a (DD)Lnet/minecraft/server/ChatModifier; getClickedComponentStyleAt
	a (DDI)Z mouseClicked
	a (I)Z setPage
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$createPageControlButtons$2
	a (Ldps$a;)V setBookAccess
	a (Lnet/minecraft/server/ChatModifier;)Z handleComponentClicked
	a (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/List; convertPages
	b ()V init
	b (I)Z forcePage
	b (Ldlg;)V lambda$createPageControlButtons$1
	c (Ldlg;)V lambda$createMenuControls$0
	i ()I getNumPages
	k ()V createMenuControls
	l ()V createPageControlButtons
	m ()V pageBack
	n ()V pageForward
	o ()V updateButtonVisibility
dpr net/minecraft/client/gui/screens/inventory/BookEditScreen
	A lastClickTime
	B lastIndex
	C forwardButton
	D backButton
	E doneButton
	F signButton
	G finalizeButton
	H cancelButton
	I hand
	J displayCache
	K pageMsg
	L ownerText
	a EDIT_TITLE_LABEL
	b FINALIZE_WARNING_LABEL
	c BLACK_CURSOR
	p GRAY_CURSOR
	q owner
	r book
	s isModified
	t isSigning
	u frameTick
	v currentPage
	w pages
	x title
	y pageEdit
	z titleEdit
	A ()Ljava/lang/String; getCurrentPageText
	B ()Ldpr$a; getDisplayCache
	C ()V clearDisplayCache
	D ()V clearDisplayCacheAfterPageChange
	E ()Ldpr$a; rebuildDisplayCache
	F ()Ljava/lang/String; lambda$new$1
	a (CI)Z charTyped
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (I)V changeLine
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldfj;Ldpr$c;Z)V renderCursor
	a (Ldlg;)V lambda$init$9
	a (Ldpr$c;)Ldpr$c; convertScreenToLocal
	a (Ldpr$c;Ldpr$c;)Lead; createSelection
	a (Ljava/lang/String;Ldkg;IIII)Lead; createPartialLineSelection
	a (Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lit/unimi/dsi/fastutil/ints/IntList;Ljava/util/List;Lnet/minecraft/server/ChatModifier;II)V lambda$rebuildDisplayCache$10
	a ([II)I access$1000
	a ([Lead;)V renderHighlight
	b ()V init
	b (I)V selectWord
	b (Ldlg;)V lambda$init$8
	b (Ldpr$c;)Ldpr$c; convertLocalToScreen
	b (Ljava/lang/String;)V setClipboard
	b ([II)I findLineFromPos
	c (III)Z bookKeyPressed
	c (Ldlg;)V lambda$init$7
	c (Ljava/lang/String;)V setCurrentPageText
	c (Z)V saveChanges
	d ()V tick
	d (III)Z titleKeyPressed
	d (Ldlg;)V lambda$init$6
	d (Ljava/lang/String;)Z lambda$new$3
	e ()V removed
	e (Ldlg;)V lambda$init$5
	e (Ljava/lang/String;)V lambda$new$2
	f (Ldlg;)V lambda$init$4
	f (Ljava/lang/String;)Z lambda$new$0
	i ()Ljava/lang/String; getClipboard
	k ()I getNumPages
	l ()V pageBack
	m ()V pageForward
	n ()V updateButtonVisibility
	o ()V eraseEmptyTrailingPages
	p ()V appendPageToBook
	r ()V keyUp
	s ()V keyDown
	t ()V keyHome
	u ()V keyEnd
net/minecraft/server/IChunkLoader net/minecraft/world/level/chunk/storage/ChunkStorage
	a worker
	b fixerUpper
	c legacyStructureHandler
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/NBTTagCompound;)V write
	a (Lnet/minecraft/server/NBTTagCompound;)I getVersion
	getChunkData (Lnet/minecraft/server/ResourceKey;Ljava/util/function/Supplier;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; upgradeChunkTag
	i ()V flushWorker
dpu net/minecraft/client/gui/screens/inventory/CartographyTableScreen
	A BG_LOCATION
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
	a (Ldfj;Lnet/minecraft/server/WorldMap;ZZZZ)V renderResultingMap
	a (Lnet/minecraft/server/WorldMap;IIF)V renderMap
dpt net/minecraft/client/gui/screens/inventory/BrewingStandScreen
	A BREWING_STAND_LOCATION
	B BUBBLELENGTHS
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
	b ()V init
dpw net/minecraft/client/gui/screens/inventory/ContainerScreen
	A CONTAINER_BACKGROUND
	B containerRows
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
net/minecraft/server/BlockWitherRose net/minecraft/world/level/block/WitherRoseBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
dpv net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen
	s autoCommandBlock
	t modeButton
	u conditionalButton
	v autoexecButton
	w mode
	x conditional
	y autoexec
	a (Ldjw;II)V resize
	a (Ldlg;)V lambda$init$2
	a (Lnet/minecraft/server/CommandBlockListenerAbstract;)V populateAndSendPacket
	b ()V init
	b (Ldlg;)V lambda$init$1
	c (Ldlg;)V lambda$init$0
	i ()Lnet/minecraft/server/CommandBlockListenerAbstract; getCommandBlock
	k ()I getPreviousY
	n ()V updateGui
	o ()V updateMode
	p ()V nextMode
	r ()V updateConditional
	s ()V updateAutoexec
dpy net/minecraft/client/gui/screens/inventory/CreativeInventoryListener
	a minecraft
	a (Lnet/minecraft/server/Container;II)V setContainerData
	a (Lnet/minecraft/server/Container;ILnet/minecraft/server/ItemStack;)V slotChanged
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/NonNullList;)V refreshContainer
dfb$a com/mojang/blaze3d/shaders/Program$Type
	a VERTEX
	b FRAGMENT
	c name
	d extension
	e glType
	f programs
	g $VALUES
	a ()Ljava/lang/String; getName
	a (Ldfb$a;)I access$000
	b ()Ljava/lang/String; getExtension
	c ()Ljava/util/Map; getPrograms
	d ()I getGlType
net/minecraft/server/InventoryMerchant net/minecraft/world/inventory/MerchantContainer
	e futureXp
	itemsInSlots itemStacks
	recipe activeOffer
	selectedIndex selectionHint
	X_ ()V setChanged
	Y_ ()V clearContent
	Z_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	c ()Z isEmpty
	c (I)V setSelectionHint
	d (I)Z isPaymentSlot
	f ()V updateSellItem
	getRecipe ()Lnet/minecraft/server/MerchantRecipe; getActiveOffer
	h ()I getFutureXp
dpx net/minecraft/client/gui/screens/inventory/CraftingScreen
	A CRAFTING_TABLE_LOCATION
	B RECIPE_BUTTON_LOCATION
	C recipeBookComponent
	D widthTooNarrow
	a (DDI)Z mouseClicked
	a (DDIII)Z hasClickedOutside
	a (IIIIDD)Z isHovering
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$0
	a (Lnet/minecraft/server/Slot;IILnet/minecraft/server/InventoryClickType;)V slotClicked
	az_ ()V recipesUpdated
	b ()V init
	d ()V tick
	e ()V removed
	l ()Ldrm; getRecipeBookComponent
dpz net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen
	B CREATIVE_TABS_LOCATION
	C CONTAINER
	D TRASH_SLOT_TOOLTIP
	E selectedTab
	F scrollOffs
	G scrolling
	H searchBox
	I originalSlots
	J destroyItemSlot
	K listener
	L ignoreTextInput
	M hasClickedOutside
	N visibleTags
	a (CI)Z charTyped
	a (DD)Z insideScrollbar
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (DDIII)Z hasClickedOutside
	a (III)Z keyPressed
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
	a (Ldfj;Lnet/minecraft/server/CreativeModeTab;)V renderTabButton
	a (Ldfj;Lnet/minecraft/server/CreativeModeTab;II)Z checkTabHovering
	a (Ldfj;Lnet/minecraft/server/ItemStack;II)V renderTooltip
	a (Ldjw;II)V resize
	a (Ldjw;IZZ)V handleHotbarLoadOrSave
	a (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/MinecraftKey;)Z lambda$updateVisibleTags$1
	a (Ljava/lang/String;Lnet/minecraft/server/MinecraftKey;)Z lambda$updateVisibleTags$0
	a (Lnet/minecraft/server/CreativeModeTab;)V selectTab
	a (Lnet/minecraft/server/CreativeModeTab;DD)Z checkTabClicked
	a (Lnet/minecraft/server/Item;Ljava/util/List;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/Tag;)V lambda$renderTooltip$3
	a (Lnet/minecraft/server/Slot;)Z isCreativeSlot
	a (Lnet/minecraft/server/Slot;IILnet/minecraft/server/InventoryClickType;)V slotClicked
	a (Lnet/minecraft/server/Tags;Lnet/minecraft/server/MinecraftKey;)V lambda$updateVisibleTags$2
	b ()V init
	b (III)Z keyReleased
	b (Ldfj;II)V renderLabels
	b (Ljava/lang/String;)V updateVisibleTags
	c (DDI)Z mouseReleased
	d ()V tick
	e ()V removed
	k ()V checkEffectRendering
	l ()I getSelectedTab
	m ()Lnet/minecraft/server/InventorySubcontainer; access$000
	n ()V refreshSearchResults
	o ()Z canScroll
net/minecraft/server/WorldGenerator net/minecraft/world/level/levelgen/feature/Feature
	NETHERRACK_REPLACE_BLOBS REPLACE_BLOBS
	SPRING_FEATURE SPRING
	a configuredCodec
	a ()Lcom/mojang/serialization/Codec; configuredCodec
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenerator;)Lnet/minecraft/server/WorldGenerator; register
	a (Lnet/minecraft/server/Block;)Z isStone
	a (Lnet/minecraft/server/IBlockData;)Z lambda$isGrassOrDirt$2
	a (Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V setBlock
	a (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isGrassOrDirt
	a (Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$new$0
	a (Lnet/minecraft/server/WorldGenFeatureConfigured;)Lnet/minecraft/server/WorldGenFeatureConfiguration; lambda$new$1
	b (Lnet/minecraft/server/Block;)Z isDirt
	b (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isAir
	b (Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/WorldGenFeatureConfigured; configured
	generate (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
vn$1 net/minecraft/server/ChainedJsonException$1
net/minecraft/server/BlockReed net/minecraft/world/level/block/SugarCaneBlock
	b SHAPE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
dqb net/minecraft/client/gui/screens/inventory/EffectRenderingInventoryScreen
	A doRenderEffects
	a (Ldfj;IIF)V render
	a (Ldfj;IILjava/lang/Iterable;)V renderBackgrounds
	b ()V init
	b (Ldfj;)V renderEffects
	b (Ldfj;IILjava/lang/Iterable;)V renderIcons
	c (Ldfj;IILjava/lang/Iterable;)V renderLabels
	k ()V checkEffectRendering
dqa net/minecraft/client/gui/screens/inventory/DispenserScreen
	A CONTAINER_LOCATION
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
	b ()V init
dqd net/minecraft/client/gui/screens/inventory/EnchantmentScreen
	A time
	B flip
	C oFlip
	D flipT
	E flipA
	F open
	G oOpen
	H ENCHANTING_TABLE_LOCATION
	I ENCHANTING_BOOK_LOCATION
	J BOOK_MODEL
	K random
	L last
	a (DDI)Z mouseClicked
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
	d ()V tick
	k ()V tickBook
net/minecraft/server/EntityTropicalFish$Variant net/minecraft/world/entity/animal/TropicalFish$Pattern
	m base
	n index
	o VALUES
	p $VALUES
	a ()I getBase
	a (II)Ljava/lang/String; getPatternName
	b ()I getIndex
	c ()Ljava/lang/String; getName
dqc net/minecraft/client/gui/screens/inventory/EnchantmentNames
	a ALT_FONT
	b ROOT_STYLE
	c INSTANCE
	d random
	e words
	a ()Ldqc; getInstance
	a (J)V initSeed
	a (Ldkr;I)Lnet/minecraft/server/IChatFormatted; getRandomName
net/minecraft/server/PacketPlayInClientCommand$EnumClientCommand net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action
	c $VALUES
dqf net/minecraft/client/gui/screens/inventory/GrindstoneScreen
	A GRINDSTONE_LOCATION
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
net/minecraft/server/LinearCongruentialGenerator net/minecraft/util/LinearCongruentialGenerator
	a (JJ)J next
dqe net/minecraft/client/gui/screens/inventory/FurnaceScreen
	B TEXTURE
dqh net/minecraft/client/gui/screens/inventory/HorseInventoryScreen
	A HORSE_INVENTORY_LOCATION
	B horse
	C xMouse
	D yMouse
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
net/minecraft/server/RecipeMapClone net/minecraft/world/item/crafting/MapCloningRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
dqg net/minecraft/client/gui/screens/inventory/HopperScreen
	A HOPPER_LOCATION
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
dqj net/minecraft/client/gui/screens/inventory/ItemCombinerScreen
	A menuResource
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
	a (Lnet/minecraft/server/Container;II)V setContainerData
	a (Lnet/minecraft/server/Container;ILnet/minecraft/server/ItemStack;)V slotChanged
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/NonNullList;)V refreshContainer
	b ()V init
	b (Ldfj;IIF)V renderFg
	e ()V removed
	k ()V subInit
net/minecraft/server/WorldGenBuriedTreasure net/minecraft/world/level/levelgen/feature/BuriedTreasureFeature
	a ()Lckx$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureConfigurationChance;)Z isFeatureChunk
net/minecraft/server/InventoryClickType net/minecraft/world/inventory/ClickType
	h $VALUES
dqi net/minecraft/client/gui/screens/inventory/InventoryScreen
	B RECIPE_BUTTON_LOCATION
	C xMouse
	D yMouse
	E recipeBookComponent
	F recipeBookComponentInitialized
	G widthTooNarrow
	H buttonClicked
	a (DDI)Z mouseClicked
	a (DDIII)Z hasClickedOutside
	a (IIIFFLnet/minecraft/server/EntityLiving;)V renderEntityInInventory
	a (IIIIDD)Z isHovering
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$0
	a (Leel;Lnet/minecraft/server/EntityLiving;Ldfj;Ldzy$a;)V lambda$renderEntityInInventory$1
	a (Lnet/minecraft/server/Slot;IILnet/minecraft/server/InventoryClickType;)V slotClicked
	az_ ()V recipesUpdated
	b ()V init
	b (Ldfj;II)V renderLabels
	c (DDI)Z mouseReleased
	d ()V tick
	e ()V removed
	l ()Ldrm; getRecipeBookComponent
dql net/minecraft/client/gui/screens/inventory/LecternScreen
	c menu
	p listener
	a (Ldlg;)V lambda$createMenuControls$1
	a (Ldql;)V access$000
	au_ ()V onClose
	ay_ ()Z isPauseScreen
	b ()V init
	b (I)Z forcePage
	b (Ldlg;)V lambda$createMenuControls$0
	b (Ldql;)V access$100
	c (I)V sendButtonClick
	e ()V removed
	i ()Lnet/minecraft/server/Container; getMenu
	k ()V createMenuControls
	m ()V pageBack
	n ()V pageForward
	o ()Lnet/minecraft/server/ContainerLectern; getMenu
	p ()V bookChanged
	r ()V pageChanged
dqk net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen
	A joint
	a JOINT_LABEL
	b POOL_LABEL
	c NAME_LABEL
	p TARGET_LABEL
	q FINAL_STATE_LABEL
	r jigsawEntity
	s nameEdit
	t targetEdit
	u poolEdit
	v finalStateEdit
	w levels
	x keepJigsaws
	y jointButton
	z doneButton
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldjw;II)V resize
	a (Ldlg;)V lambda$init$7
	a (Ldqk;)I access$000
	a (Ldqk;I)I access$002
	au_ ()V onClose
	b ()V init
	b (Ldlg;)V lambda$init$6
	b (Ldqk;)Z access$100
	b (Ljava/lang/String;)V lambda$init$2
	c (Ldlg;)V lambda$init$5
	c (Ljava/lang/String;)V lambda$init$1
	d ()V tick
	d (Ldlg;)V lambda$init$4
	d (Ljava/lang/String;)V lambda$init$0
	e ()V removed
	e (Ldlg;)V lambda$init$3
	i ()V onDone
	k ()V onCancel
	l ()V sendToServer
	m ()V sendGenerate
	n ()V updateValidity
	o ()Lnet/minecraft/server/IChatBaseComponent; getJointText
net/minecraft/server/DataConverterVillagerLevelXp net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix
	a LEVEL_XP_THRESHOLDS
	a (I)I getMinXpPerLevel
	a (ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$addXpFromLevel$6
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/lang/Integer; lambda$null$1
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; addLevel
	b (ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$addLevel$5
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$null$0
	b (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; addXpFromLevel
	c (ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$4
dqn net/minecraft/client/gui/screens/inventory/MenuAccess
	i ()Lnet/minecraft/server/Container; getMenu
dhz$a$a com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$AcceptRowButton
	e this$1
	a (I)V onClick
	a (Ldfj;IIZ)V draw
dqm net/minecraft/client/gui/screens/inventory/LoomScreen
	A BG_LOCATION
	B TOTAL_PATTERN_ROWS
	C flag
	D resultBannerPatterns
	E bannerStack
	F dyeStack
	G patternStack
	H displayPatterns
	I displaySpecialPattern
	J hasMaxPatterns
	K scrollOffs
	L scrolling
	M startIndex
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (DDIII)Z hasClickedOutside
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
	c (III)V renderPattern
	k ()V containerChanged
dhz$a$b com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$RejectRowButton
	e this$1
	a (I)V onClick
	a (Ldfj;IIZ)V draw
dbo$a net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionEntityProperty;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionEntityProperty; deserialize
net/minecraft/server/TileEntityEnderChest net/minecraft/world/level/block/entity/EnderChestBlockEntity
	a openness
	b oOpenness
	c openCount
	g tickInterval
	a (F)F getOpenNess
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a_ (II)Z triggerEvent
	aj_ ()V tick
	al_ ()V setRemoved
	d ()V startOpen
	f ()V stopOpen
net/minecraft/server/PacketPlayOutTileEntityData net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket
	a pos
	b type
	c tag
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getType
	d ()Lnet/minecraft/server/NBTTagCompound; getTag
dqp net/minecraft/client/gui/screens/inventory/MinecartCommandBlockEditScreen
	s commandBlock
	a (Lnet/minecraft/server/CommandBlockListenerAbstract;)V populateAndSendPacket
	b ()V init
	i ()Lnet/minecraft/server/CommandBlockListenerAbstract; getCommandBlock
	k ()I getPreviousY
dqo net/minecraft/client/gui/screens/inventory/MerchantScreen
	A VILLAGER_LOCATION
	B TRADES_LABEL
	C LEVEL_SEPARATOR
	D DEPRECATED_TOOLTIP
	E shopItem
	F tradeOfferButtons
	G scrollOff
	H isDragging
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (I)Z canScroll
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
	a (Ldfj;IILnet/minecraft/server/MerchantRecipe;)V renderProgressBar
	a (Ldfj;IILnet/minecraft/server/MerchantRecipeList;)V renderScroller
	a (Ldfj;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;II)V renderAndDecorateCostA
	a (Ldfj;Lnet/minecraft/server/MerchantRecipe;II)V renderButtonArrows
	a (Ldlg;)V lambda$init$0
	a (Ldqo;)I access$000
	a (Ldqo;Ldfj;Lnet/minecraft/server/ItemStack;II)V access$100
	b ()V init
	b (Ldfj;II)V renderLabels
	b (Ldqo;Ldfj;Lnet/minecraft/server/ItemStack;II)V access$200
	c (Ldqo;Ldfj;Lnet/minecraft/server/ItemStack;II)V access$300
	k ()V postButtonClick
dqr net/minecraft/client/gui/screens/inventory/ShulkerBoxScreen
	A CONTAINER_TEXTURE
	a (Ldfj;FII)V renderBg
	a (Ldfj;IIF)V render
pd$a net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry
	a builder
	b flags
	c redirect
	d children
	e node
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$build$0
	a (Lpd$a;)Lcom/mojang/brigadier/tree/CommandNode; access$000
	a ([Lpd$a;)Z build
dqq net/minecraft/client/gui/screens/inventory/PageButton
	a isForward
	b playTurnSound
	a (Lenm;)V playDownSound
	b (Ldfj;IIF)V renderButton
dqt net/minecraft/client/gui/screens/inventory/SmithingScreen
	A SMITHING_LOCATION
	b (Ldfj;II)V renderLabels
dqs net/minecraft/client/gui/screens/inventory/SignEditScreen
	a signModel
	b sign
	c frame
	p line
	q signField
	r messages
	a (CI)Z charTyped
	a (I)[Ljava/lang/String; lambda$new$0
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	au_ ()V onClose
	b ()V init
	b (Ljava/lang/String;)Z lambda$init$4
	c (Ljava/lang/String;)V lambda$init$3
	d ()V tick
	e ()V removed
	i ()V onDone
	k ()Ljava/lang/String; lambda$init$2
dqv net/minecraft/client/gui/screens/inventory/StonecutterScreen
	A BG_LOCATION
	B scrollOffs
	C scrolling
	D startIndex
	E displayRecipes
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (Ldfj;FII)V renderBg
	a (Ldfj;II)V renderTooltip
	a (Ldfj;IIF)V render
	b (Ldfj;IIIII)V renderButtons
	c (III)V renderRecipes
	k ()I getOffscreenRows
	l ()Z isScrollBarActive
	m ()V containerChanged
net/minecraft/server/CriterionTriggerEntityHurtPlayer net/minecraft/advancements/critereon/EntityHurtPlayerTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lbf$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DamageSource;FFZ)V trigger
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DamageSource;FFZLbf$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
dqu net/minecraft/client/gui/screens/inventory/SmokerScreen
	B TEXTURE
dqx net/minecraft/client/gui/screens/inventory/package-info
dqw net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen
	A initialShowAir
	B initialShowBoundingBox
	C nameEdit
	D posXEdit
	E posYEdit
	F posZEdit
	G sizeXEdit
	H sizeYEdit
	I sizeZEdit
	J integrityEdit
	K seedEdit
	L dataEdit
	M doneButton
	N cancelButton
	O saveButton
	P loadButton
	Q rot0Button
	R rot90Button
	S rot180Button
	T rot270Button
	U modeButton
	V detectButton
	W entitiesButton
	X mirrorButton
	Y toggleAirButton
	Z toggleBoundingBox
	a NAME_LABEL
	aa decimalFormat
	b POSITION_LABEL
	c SIZE_LABEL
	p INTEGRITY_LABEL
	q CUSTOM_DATA_LABEL
	r INCLUDE_ENTITIES_LABEL
	s DETECT_SIZE_LABEL
	t SHOW_AIR_LABEL
	u SHOW_BOUNDING_BOX_LABEL
	v structure
	w initialMirror
	x initialRotation
	y initialMode
	z initialEntityIgnoring
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldjw;II)V resize
	a (Ldlg;)V lambda$init$13
	a (Ldqw;Ljava/lang/String;CI)Z access$000
	a (Lnet/minecraft/server/TileEntityStructure$UpdateType;)Z sendToServer
	au_ ()V onClose
	ay_ ()Z isPauseScreen
	b ()V init
	b (Ldlg;)V lambda$init$12
	b (Ljava/lang/String;)J parseSeed
	c (Ldlg;)V lambda$init$11
	c (Ljava/lang/String;)F parseIntegrity
	d ()V tick
	d (Ldlg;)V lambda$init$10
	d (Ljava/lang/String;)I parseCoordinate
	e ()V removed
	e (Ldlg;)V lambda$init$9
	f (Ldlg;)V lambda$init$8
	g (Ldlg;)V lambda$init$7
	h (Ldlg;)V lambda$init$6
	i ()V onDone
	i (Ldlg;)V lambda$init$5
	j (Ldlg;)V lambda$init$4
	k ()V onCancel
	k (Ldlg;)V lambda$init$3
	l ()V updateEntitiesButton
	l (Ldlg;)V lambda$init$2
	m ()V updateToggleAirButton
	m (Ldlg;)V lambda$init$1
	n ()V updateToggleBoundingBox
	n (Ldlg;)V lambda$init$0
	o ()V updateMirrorButton
	p ()V updateDirectionButtons
	r ()V updateMode
dqz net/minecraft/client/gui/screens/multiplayer/JoinMultiplayerScreen
	a serverSelectionList
	b LOGGER
	c pinger
	p lastScreen
	q servers
	r editButton
	s selectButton
	t deleteButton
	u toolTip
	v editingServer
	w lanServerList
	x lanServerDetector
	y initedOnce
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$6
	a (Ldrb$a;)V setSelected
	a (Ldwr;)V join
	b ()V init
	b (Ldlg;)V lambda$init$5
	b (Ljava/util/List;)V setToolTip
	c (Ldlg;)V lambda$init$4
	c (Z)V deleteCallback
	d ()V tick
	d (Ldlg;)V lambda$init$3
	d (Z)V editServerCallback
	e ()V removed
	e (Ldlg;)V lambda$init$2
	e (Z)V addServerCallback
	f (Ldlg;)V lambda$init$1
	f (Z)V directJoinCallback
	g (Ldlg;)V lambda$init$0
	i ()V joinSelectedServer
	k ()V onSelectedChange
	l ()Ldwt; getPinger
	m ()Ldws; getServers
	n ()V refreshServerList
net/minecraft/server/BlockStonecutter net/minecraft/world/level/block/StonecutterBlock
	a FACING
	b SHAPE
	c CONTAINER_TITLE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$getMenuProvider$0
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	c_ (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
dqy net/minecraft/client/gui/screens/mco/package-info
jk$a net/minecraft/data/recipes/SingleItemRecipeBuilder$Result
	a id
	b group
	c ingredient
	d result
	e count
	f advancement
	g advancementId
	h type
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
net/minecraft/server/WorldGenFlatLayerInfo net/minecraft/world/level/levelgen/flat/FlatLayerInfo
	a CODEC
	b blockState
	c height
	d start
	a ()I getHeight
	a (I)V setStart
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lnet/minecraft/server/WorldGenFlatLayerInfo;)Lnet/minecraft/server/Block; lambda$null$0
	b ()Lnet/minecraft/server/IBlockData; getBlockState
	c ()I getStart
dya$a net/minecraft/client/particle/ParticleEngine$MutableSpriteSet
	a this$0
	b sprites
	a (II)Leju; get
	a (Ljava/util/List;)V rebind
	a (Ljava/util/Random;)Leju; get
dxo$1 net/minecraft/client/particle/FlameParticle$1
dra net/minecraft/client/gui/screens/multiplayer/SafetyScreen
	a previous
	b TITLE
	c CONTENT
	p CHECK
	q NARRATION
	r stopShowing
	s message
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	as_ ()Ljava/lang/String; getNarrationMessage
	b ()V init
	b (Ldlg;)V lambda$init$0
dya$b net/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration
drc net/minecraft/client/gui/screens/multiplayer/package-info
drb net/minecraft/client/gui/screens/multiplayer/ServerSelectionList
	A lanHeader
	B networkServers
	a LOGGER
	o THREAD_POOL
	p ICON_MISSING
	q ICON_OVERLAY_LOCATION
	r SCANNING_LABEL
	s CANT_RESOLVE_TEXT
	t CANT_CONNECT_TEXT
	u CLIENT_OUT_OF_DATE_TOOLTIP
	v SERVER_OUT_OF_DATE_TOOLTIP
	w NO_CONNECTION_TOOLTIP
	x PINGING_TOOLTIP
	y screen
	z onlineServers
	A ()Lnet/minecraft/server/IChatBaseComponent; access$1400
	B ()V refreshEntries
	a (III)Z keyPressed
	a (Ldlc$a;)V setSelected
	a (Ldlc$b;)V moveSelection
	a (Ldrb$a;)V setSelected
	a (Ldrb;)I access$1100
	a (Ldrb;I)I access$1200
	a (Ldrb;Ldlc$a;)V access$1000
	a (Ldws;)V updateOnlineServers
	a (Ljava/util/List;)V updateNetworkServers
	b ()Z isFocused
	b (Ldrb$a;)Z lambda$moveSelection$0
	d ()I getRowWidth
	e ()I getScrollbarPosition
	f ()Lnet/minecraft/server/IChatBaseComponent; access$100
	g ()Ljava/util/concurrent/ThreadPoolExecutor; access$200
	r ()Lnet/minecraft/server/IChatBaseComponent; access$300
	s ()Lnet/minecraft/server/IChatBaseComponent; access$400
	t ()Lnet/minecraft/server/IChatBaseComponent; access$500
	u ()Lnet/minecraft/server/IChatBaseComponent; access$600
	w ()Lnet/minecraft/server/MinecraftKey; access$700
	x ()Lnet/minecraft/server/MinecraftKey; access$800
	y ()Lorg/apache/logging/log4j/Logger; access$900
	z ()Lnet/minecraft/server/IChatBaseComponent; access$1300
net/minecraft/server/PersistentIdCounts net/minecraft/world/level/saveddata/maps/MapIndex
	a usedAuxIds
	a ()I getFreeAuxValueForMap
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
net/minecraft/server/LootItemFunctions net/minecraft/world/level/storage/loot/functions/LootItemFunctions
	a IDENTITY
	b SET_COUNT
	c ENCHANT_WITH_LEVELS
	d ENCHANT_RANDOMLY
	e SET_NBT
	f FURNACE_SMELT
	g LOOTING_ENCHANT
	h SET_DAMAGE
	i SET_ATTRIBUTES
	j SET_NAME
	k EXPLORATION_MAP
	l SET_STEW_EFFECT
	m COPY_NAME
	n SET_CONTENTS
	o LIMIT_COUNT
	p APPLY_BONUS
	q SET_LOOT_TABLE
	r EXPLOSION_DECAY
	s SET_LORE
	t FILL_PLAYER_HEAD
	u COPY_NBT
	v COPY_STATE
	a ()Ljava/lang/Object; createGsonAdapter
	a (Ljava/lang/String;Lnet/minecraft/server/LootSerializer;)Lnet/minecraft/server/LootItemFunctionType; register
	a (Ljava/util/function/BiFunction;Ljava/util/function/BiFunction;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; lambda$compose$1
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; lambda$static$0
	a ([Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; compose
	a ([Ljava/util/function/BiFunction;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; lambda$compose$2
dre net/minecraft/client/gui/screens/packs/PackSelectionModel
	a repository
	b selected
	c unselected
	d iconGetter
	e onListChanged
	f output
	a ()Ljava/util/stream/Stream; getUnselected
	a (Ldre;)Ljava/util/function/Function; access$000
	a (Lnet/minecraft/server/ResourcePackLoader;)Ldre$a; lambda$getSelected$1
	b ()Ljava/util/stream/Stream; getSelected
	b (Ldre;)Ljava/lang/Runnable; access$100
	b (Lnet/minecraft/server/ResourcePackLoader;)Ldre$a; lambda$getUnselected$0
	c ()V commit
	c (Ldre;)Ljava/util/List; access$200
	d ()V findNewPacks
	d (Ldre;)Ljava/util/List; access$300
net/minecraft/server/ArgumentParserItemStack net/minecraft/commands/arguments/item/ItemParser
	a ERROR_NO_TAGS_ALLOWED
	b ERROR_UNKNOWN_ITEM
	c SUGGEST_NOTHING
	d reader
	e forTesting
	f properties
	g item
	h nbt
	i tag
	j tagCursor
	k suggestions
	a ()Ljava/util/Map; getProperties
	a (ILnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$readItem$2
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	b ()Lnet/minecraft/server/Item; getItem
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; suggestOpenNbt
	c ()Lnet/minecraft/server/NBTTagCompound; getNbt
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; suggestTag
	d ()Lnet/minecraft/server/MinecraftKey; getTag
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; suggestItemIdOrTag
	e ()V readItem
	e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; lambda$static$1
	f ()V readTag
	g ()V readNbt
	h ()Lnet/minecraft/server/ArgumentParserItemStack; parse
drd net/minecraft/client/gui/screens/package-info
drg net/minecraft/client/gui/screens/packs/TransferableSelectionList
	a ICON_OVERLAY_LOCATION
	o INCOMPATIBLE_TITLE
	p INCOMPATIBLE_CONFIRM_TITLE
	q title
	a (Ldfj;IILdfl;)V renderHeader
	a (Ldrg;)I access$200
	a (Ldrg;I)I access$300
	d ()I getRowWidth
	e ()I getScrollbarPosition
	f ()Lnet/minecraft/server/IChatBaseComponent; access$000
	g ()Lnet/minecraft/server/MinecraftKey; access$100
	r ()Lnet/minecraft/server/IChatBaseComponent; access$400
drf net/minecraft/client/gui/screens/packs/PackSelectionScreen
	a LOGGER
	b DRAG_AND_DROP
	c DIRECTORY_BUTTON_TOOLTIP
	p DEFAULT_ICON
	q model
	r lastScreen
	s watcher
	t ticksToReload
	u availablePackList
	v selectedPackList
	w packDir
	x doneButton
	y packIcons
	a (Ldfj;IIF)V render
	a (Ldjw;Ljava/util/List;Ljava/nio/file/Path;)V copyPacks
	a (Ldlg;)V lambda$init$1
	a (Ldlg;Ldfj;II)V lambda$init$2
	a (Ldrg;Ldre$a;)V lambda$updateList$3
	a (Ldrg;Ljava/util/stream/Stream;)V updateList
	a (Lejv;Lnet/minecraft/server/ResourcePackLoader;)Lnet/minecraft/server/MinecraftKey; loadPackIcon
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/nio/file/Path;)V lambda$null$4
	a (Ljava/nio/file/Path;Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/nio/file/Path;)V lambda$copyPacks$5
	a (Ljava/util/List;)V onFilesDrop
	a (Ljava/util/List;Z)V lambda$onFilesDrop$6
	a (Lnet/minecraft/server/ResourcePackLoader;)Lnet/minecraft/server/MinecraftKey; getPackIcon
	a (Lnet/minecraft/server/ResourcePackLoader;Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; lambda$getPackIcon$7
	au_ ()V onClose
	b ()V init
	b (Ldlg;)V lambda$init$0
	d ()V tick
	i ()Lorg/apache/logging/log4j/Logger; access$000
	k ()V closeWatcher
	l ()V populateLists
	m ()V reload
net/minecraft/server/WorldGenEndCityPieces net/minecraft/world/level/levelgen/structure/EndCityPieces
	a OVERWRITE
	b INSERT
	c HOUSE_TOWER_GENERATOR
	d TOWER_BRIDGES
	e TOWER_GENERATOR
	f TOWER_BRIDGE_GENERATOR
	g FAT_TOWER_BRIDGES
	h FAT_TOWER_GENERATOR
	a ()Lnet/minecraft/server/DefinedStructureInfo; access$000
	a (Ljava/util/List;Lnet/minecraft/server/WorldGenEndCityPieces$Piece;)Lnet/minecraft/server/WorldGenEndCityPieces$Piece; access$300
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;)V startHouseTower
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/lang/String;Lnet/minecraft/server/EnumBlockRotation;Z)Lnet/minecraft/server/WorldGenEndCityPieces$Piece; access$200
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/WorldGenEndCityPieces$PieceGenerator;ILnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)Z access$500
	b ()Lnet/minecraft/server/DefinedStructureInfo; access$100
	b (Ljava/util/List;Lnet/minecraft/server/WorldGenEndCityPieces$Piece;)Lnet/minecraft/server/WorldGenEndCityPieces$Piece; addHelper
	b (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/lang/String;Lnet/minecraft/server/EnumBlockRotation;Z)Lnet/minecraft/server/WorldGenEndCityPieces$Piece; addPiece
	b (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/WorldGenEndCityPieces$PieceGenerator;ILnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)Z recursiveChildren
	c ()Lnet/minecraft/server/WorldGenEndCityPieces$PieceGenerator; access$400
	d ()Ljava/util/List; access$600
	e ()Lnet/minecraft/server/WorldGenEndCityPieces$PieceGenerator; access$700
	f ()Lnet/minecraft/server/WorldGenEndCityPieces$PieceGenerator; access$800
	g ()Lnet/minecraft/server/WorldGenEndCityPieces$PieceGenerator; access$900
	h ()Ljava/util/List; access$1000
dri net/minecraft/client/gui/screens/recipebook/AbstractFurnaceRecipeBookComponent
	i iterator
	j fuels
	k fuelSlot
	l fuel
	m time
	a ()V initFilterButtonTextures
	a (Ldfj;IIZF)V renderGhostRecipe
	a (Lnet/minecraft/server/IRecipe;Ljava/util/List;)V setupGhostRecipe
	a (Lnet/minecraft/server/Slot;)V slotClicked
	b ()Ljava/util/Set; getFuelItems
	j ()Lnet/minecraft/server/Item; getFuel
drh net/minecraft/client/gui/screens/packs/package-info
drk net/minecraft/client/gui/screens/recipebook/GhostRecipe
	a recipe
	b ingredients
	c time
	a ()V clear
	a (I)Ldrk$a; get
	a (Ldfj;Ldjw;IIZF)V render
	a (Ldrk;)F access$000
	a (Lnet/minecraft/server/IRecipe;)V setRecipe
	a (Lnet/minecraft/server/RecipeItemStack;II)V addIngredient
	b ()I size
	c ()Lnet/minecraft/server/IRecipe; getRecipe
drj net/minecraft/client/gui/screens/recipebook/BlastingRecipeBookComponent
	i FILTER_NAME
	b ()Ljava/util/Set; getFuelItems
	c ()Lnet/minecraft/server/IChatBaseComponent; getRecipeFilterName
drm net/minecraft/client/gui/screens/recipebook/RecipeBookComponent
	a RECIPE_BOOK_LOCATION
	b ghostRecipe
	c filterButton
	d menu
	e minecraft
	i SEARCH_HINT
	j ONLY_CRAFTABLES_TOOLTIP
	k ALL_RECIPES_TOOLTIP
	l xOffset
	m width
	n height
	o tabButtons
	p selectedTab
	q searchBox
	r lastSearch
	s book
	t recipeBookPage
	u stackedContents
	v timesInventoryChanged
	w ignoreTextInput
	a ()V initFilterButtonTextures
	a (CI)Z charTyped
	a (DDI)Z mouseClicked
	a (DDIIIII)Z hasClickedOutside
	a (III)Z keyPressed
	a (IILdjw;ZLnet/minecraft/server/ContainerRecipeBook;)V init
	a (Ldfj;IIF)V render
	a (Ldfj;IIZF)V renderGhostRecipe
	a (Ldro;)Z lambda$initVisuals$0
	a (Ldrq;)Z lambda$updateCollections$5
	a (Lit/unimi/dsi/fastutil/objects/ObjectSet;Ldrq;)Z lambda$updateCollections$4
	a (Ljava/lang/String;)V pirateSpeechForThePeople
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	a (Ljava/util/List;)V recipesShown
	a (Lnet/minecraft/server/IRecipe;Ljava/util/List;)V setupGhostRecipe
	a (Lnet/minecraft/server/Slot;)V slotClicked
	a (Z)V initVisuals
	a (ZII)I updateScreenPosition
	b ()V updateTabs
	b (DD)Z isMouseOver
	b (III)Z keyReleased
	b (Ldrq;)Z lambda$updateCollections$3
	c ()Lnet/minecraft/server/IChatBaseComponent; getRecipeFilterName
	c (Ldfj;IIII)V renderTooltip
	c (Ldrq;)Z lambda$updateCollections$2
	c (Z)V setVisible
	c_ (Z)Z changeFocus
	d ()V removed
	d (Ldfj;IIII)V renderGhostRecipeTooltip
	d (Ldrq;)V lambda$updateCollections$1
	d (Z)V updateCollections
	e ()V toggleVisibility
	f ()Z isVisible
	g ()V tick
	h ()V recipesUpdated
	i ()V sendUpdateSettings
	j ()V updateStackedContents
	k ()Lnet/minecraft/server/IChatBaseComponent; getFilterButtonTooltip
	l ()Z toggleFiltering
	m ()V checkSearchStringUpdate
	n ()Z isOffsetNextToMainGUI
drl net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent
	a RECIPE_BOOK_LOCATION
	b recipeButtons
	c isVisible
	d x
	e y
	i minecraft
	j collection
	k lastRecipeClicked
	l time
	m isFurnaceMenu
	a ()Ldrq; getRecipeCollection
	a (DDI)Z mouseClicked
	a (Ldfj;IIF)V render
	a (Ldjw;Ldrq;IIIIF)V init
	a (Ldrl;)Ldjw; access$200
	a (Z)V setVisible
	b ()Lnet/minecraft/server/IRecipe; getLastRecipeClicked
	b (DD)Z isMouseOver
	b (Ldrl;)Z access$300
	c ()Z isVisible
	c (Ldfj;IIIIII)V nineInchSprite
	c (Ldrl;)F access$400
	c_ (Z)Z changeFocus
	d ()Lnet/minecraft/server/MinecraftKey; access$100
dro net/minecraft/client/gui/screens/recipebook/RecipeBookTabButton
	t category
	u animationTime
	a (Ldjj;)Z updateVisibility
	a (Ldjw;)V startAnimation
	a (Lefg;)V renderIcon
	b ()Ldkd; getCategory
	b (Ldfj;IIF)V renderButton
net/minecraft/server/LootItemFunctionFillPlayerHead net/minecraft/world/level/storage/loot/functions/FillPlayerHead
	a entityTarget
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionFillPlayerHead;)Lnet/minecraft/server/LootTableInfo$EntityTarget; access$000
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;)Ldaf$a; fillPlayerHead
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$fillPlayerHead$0
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
drn net/minecraft/client/gui/screens/recipebook/RecipeBookPage
	a buttons
	b hoveredButton
	c overlay
	d minecraft
	e showListeners
	f recipeCollections
	g forwardButton
	h backButton
	i totalPages
	j currentPage
	k recipeBook
	l lastClickedRecipe
	m lastClickedRecipeCollection
	a ()Lnet/minecraft/server/IRecipe; getLastClickedRecipe
	a (DDIIIII)Z mouseClicked
	a (Ldfj;II)V renderTooltip
	a (Ldfj;IIIIF)V render
	a (Ldjw;II)V init
	a (Ldrm;)V addListener
	a (Ljava/util/List;)V recipesShown
	a (Ljava/util/List;Z)V updateCollections
	b ()Ldrq; getLastClickedRecipeCollection
	c ()V setInvisible
	d ()Ldjw; getMinecraft
	e ()Lnet/minecraft/server/RecipeBook; getRecipeBook
	f ()V updateButtonsForPage
	g ()V updateArrowButtons
drq net/minecraft/client/gui/screens/recipebook/RecipeCollection
	a recipes
	b singleResultItem
	c craftable
	d fitsDimensions
	e known
	a ()Z hasKnownRecipes
	a (Ljava/util/List;)Z allRecipesHaveSameResult
	a (Lnet/minecraft/server/AutoRecipeStackManager;IILnet/minecraft/server/RecipeBook;)V canCraft
	a (Lnet/minecraft/server/IRecipe;)Z isCraftable
	a (Lnet/minecraft/server/RecipeBook;)V updateKnownRecipes
	a (Z)Ljava/util/List; getRecipes
	b ()Z hasCraftable
	b (Z)Ljava/util/List; getDisplayRecipes
	c ()Z hasFitting
	d ()Ljava/util/List; getRecipes
	e ()Z hasSingleResultItem
drp net/minecraft/client/gui/screens/recipebook/RecipeButton
	a RECIPE_BOOK_LOCATION
	b MORE_RECIPES_TOOLTIP
	c menu
	d book
	e collection
	s time
	t animationTime
	u currentIndex
	a ()Ldrq; getCollection
	a (I)Z isValidClickButton
	a (II)V setPosition
	a (Ldoq;)Ljava/util/List; getTooltipText
	a (Ldrq;Ldrn;)V init
	b ()Z isOnlyOption
	b (Ldfj;IIF)V renderButton
	d ()Lnet/minecraft/server/IRecipe; getRecipe
	h ()I getWidth
	k ()Ljava/util/List; getOrderedRecipes
drs net/minecraft/client/gui/screens/recipebook/RecipeUpdateListener
	az_ ()V recipesUpdated
	l ()Ldrm; getRecipeBookComponent
drr net/minecraft/client/gui/screens/recipebook/RecipeShownListener
	a (Ljava/util/List;)V recipesShown
dru net/minecraft/client/gui/screens/recipebook/SmokingRecipeBookComponent
	i FILTER_NAME
	b ()Ljava/util/Set; getFuelItems
	c ()Lnet/minecraft/server/IChatBaseComponent; getRecipeFilterName
drt net/minecraft/client/gui/screens/recipebook/SmeltingRecipeBookComponent
	i FILTER_NAME
	b ()Ljava/util/Set; getFuelItems
	c ()Lnet/minecraft/server/IChatBaseComponent; getRecipeFilterName
dmo$1 net/minecraft/client/gui/components/toasts/ToastComponent$1
drw net/minecraft/client/gui/screens/stream/package-info
net/minecraft/server/EntitySpider net/minecraft/world/entity/monster/Spider
	b DATA_FLAGS_ID
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Vec3D;)V makeStuckInBlock
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	bb ()D getPassengersRidingOffset
	c_ ()Z onClimbable
	d (Lnet/minecraft/server/MobEffect;)Z canBeAffected
	dB ()Lnet/minecraft/server/EnumMonsterType; getMobType
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eL ()Z isClimbing
	j ()V tick
	o ()V registerGoals
	t (Z)V setClimbing
drv net/minecraft/client/gui/screens/recipebook/package-info
dry net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen
	a exitCallback
	b rules
	c invalidEntries
	p doneButton
	q tooltip
	r gameRules
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$1
	a (Ldry$f;)V markInvalid
	a (Ldry;)Ldjw; access$000
	a (Ldry;Ldry$f;)V access$600
	a (Ldry;Ljava/util/List;)V access$1100
	au_ ()V onClose
	b ()V init
	b (Ldlg;)V lambda$init$0
	b (Ldry$f;)V clearInvalid
	b (Ldry;)Ldjw; access$100
	b (Ldry;Ldry$f;)V access$700
	b (Ljava/util/List;)V setTooltip
	c (Ldry;)Ldjw; access$200
	d (Ldry;)Ldjw; access$300
	e ()V removed
	e (Ldry;)Ldjw; access$400
	f (Ldry;)Ldjw; access$500
	g (Ldry;)Ldjw; access$800
	h (Ldry;)Ldkr; access$900
	i ()V updateDoneButton
net/minecraft/server/BlockPressurePlateBinary net/minecraft/world/level/block/PressurePlateBlock
	e sensitivity
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOnSound
	a (Lnet/minecraft/server/IBlockData;I)Lnet/minecraft/server/IBlockData; setSignalForState
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOffSound
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getSignalStrength
	g (Lnet/minecraft/server/IBlockData;)I getSignalForState
drx net/minecraft/client/gui/screens/worldselection/CreateWorldScreen
	A oldGameMode
	B selectedDifficulty
	C effectiveDifficulty
	D commands
	E commandsChanged
	F tempDataPackDir
	G tempDataPackRepository
	H displayOptions
	I createButton
	J modeButton
	K difficultyButton
	L moreOptionsButton
	M gameRulesButton
	N dataPacksButton
	O commandsButton
	P gameModeHelp1
	Q gameModeHelp2
	R initName
	S gameRules
	a hardCore
	b dataPacks
	c worldGenSettingsComponent
	p LOGGER
	q GAME_MODEL_LABEL
	r SEED_LABEL
	s SEED_INFO
	t NAME_LABEL
	u OUTPUT_DIR_INFO
	v COMMANDS_INFO
	w lastScreen
	x nameEdit
	y resultFolder
	z gameMode
	A ()Z copyTempDataPackDirToNewWorld
	B ()Lcom/mojang/datafixers/util/Pair; getDataPackSelectionSettings
	C ()V lambda$null$14
	D ()V lambda$tryApplyNewDataPacks$12
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldle;)Ldle; addButton
	a (Ldlg;)V lambda$init$10
	a (Ldoq;)Ldrx; create
	a (Ldrx$b;)V setGameMode
	a (Ldrx;)Ljava/lang/String; access$000
	a (Ljava/nio/file/Path;)Z lambda$copyTempDataPackDirToNewWorld$18
	a (Ljava/nio/file/Path;Ldjw;)Ljava/nio/file/Path; createTempDataPackDirFromExistingWorld
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z lambda$createTempDataPackDirFromExistingWorld$20
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V copyBetweenDirs
	a (Ljava/util/List;Ljava/lang/String;)Z lambda$tryApplyNewDataPacks$11
	a (Ljava/util/Optional;)V lambda$null$6
	a (Lnet/minecraft/server/DataPackConfiguration;Lnet/minecraft/server/DataPackResources;)V lambda$null$15
	a (Lnet/minecraft/server/DataPackConfiguration;Lnet/minecraft/server/DataPackResources;Ljava/lang/Throwable;)Ljava/lang/Object; lambda$tryApplyNewDataPacks$16
	a (Lnet/minecraft/server/GameRules;)V lambda$null$5
	a (Lnet/minecraft/server/ResourcePackRepository;)V tryApplyNewDataPacks
	a (Lorg/apache/commons/lang3/mutable/MutableObject;Ljava/nio/file/Path;Ljava/nio/file/Path;)V lambda$createTempDataPackDirFromExistingWorld$21
	au_ ()V onClose
	b ()V init
	b (Ldlg;)V lambda$init$9
	b (Ldrx;)Ldrx$b; access$200
	b (Ljava/lang/String;)V lambda$init$0
	b (Ljava/nio/file/Path;)V lambda$removeTempDataPackDir$17
	b (Ljava/nio/file/Path;Ljava/nio/file/Path;)V lambda$copyTempDataPackDirToNewWorld$19
	c (Ldlg;)V lambda$init$8
	c (Ldrx;)Lnet/minecraft/server/IChatBaseComponent; access$400
	c (Z)V setDisplayOptions
	d ()V tick
	d (Ldlg;)V lambda$init$7
	d (Ldmf;)Ldmf; addWidget
	d (Ldrx;)Lnet/minecraft/server/IChatBaseComponent; access$500
	d (Z)V lambda$null$13
	e ()V removed
	e (Ldlg;)V lambda$init$4
	e (Ldrx;)Lnet/minecraft/server/EnumDifficulty; access$600
	f (Ldlg;)V lambda$init$3
	f (Ldrx;)Z access$700
	g (Ldlg;)V lambda$init$2
	h (Ldlg;)V lambda$init$1
	i ()V updateDisplayOptions
	k ()V popScreen
	l ()Ljava/nio/file/Path; getTempDataPackDir
	m ()Lnet/minecraft/server/IChatBaseComponent; access$100
	n ()V updateGameModeHelp
	o ()V updateResultFolder
	p ()V onCreate
	r ()V toggleDisplayOptions
	s ()V cleanupTempResources
	t ()V openDataPackSelectionScreen
	u ()V removeTempDataPackDir
drz net/minecraft/client/gui/screens/worldselection/EditWorldScreen
	a LOGGER
	b WORLD_GEN_SETTINGS_GSON
	c NAME_LABEL
	p renameButton
	q callback
	r nameEdit
	s levelAccess
	a (Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/DataResult; lambda$null$6
	a (Lcom/mojang/serialization/DataResult$PartialResult;)V lambda$null$7
	a (Ldfj;IIF)V render
	a (Ldjw;II)V resize
	a (Ldlg;)V lambda$init$10
	a (Lnet/minecraft/server/Convertable$ConversionSession;)Z makeBackupAndShowToast
	a (Lnet/minecraft/server/Convertable;Ljava/lang/String;)V makeBackupAndShowToast
	a (ZZ)V lambda$null$4
	au_ ()V onClose
	b ()V init
	b (Ldlg;)V lambda$init$9
	b (Ljava/lang/String;)V lambda$init$11
	c (Ldlg;)V lambda$init$8
	d ()V tick
	d (Ldlg;)V lambda$init$5
	e ()V removed
	e (Ldlg;)V lambda$init$3
	f (Ldlg;)V lambda$init$2
	g (Ldlg;)V lambda$init$1
	h (Ldlg;)V lambda$init$0
	i ()V onRename
dsb net/minecraft/client/gui/screens/worldselection/SelectWorldScreen
	a lastScreen
	b searchBox
	c toolTip
	p deleteButton
	q selectButton
	r renameButton
	s copyButton
	t list
	a (CI)Z charTyped
	a (DDD)Z mouseScrolled
	a (III)Z keyPressed
	a (Ldfj;IIF)V render
	a (Ldlg;)V lambda$init$8
	au_ ()V onClose
	b ()V init
	b (Ldlg;)V lambda$init$7
	b (Ljava/lang/String;)V lambda$init$1
	b (Ljava/util/List;)V setToolTip
	c (Ldlg;)V lambda$init$6
	c (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
	c (Z)V updateButtonStatus
	d ()V tick
	d (Ldlg;)V lambda$init$5
	e ()V removed
	e (Ldlg;)V lambda$init$4
	f (Ldlg;)V lambda$init$3
	i ()Ljava/lang/String; lambda$init$2
dsa net/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen
	a LOGGER
	b DIMENSION_COLORS
	c callback
	p upgrader
	a (Ldfj;IIF)V render
	a (Ldjw;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/server/Convertable$ConversionSession;Z)Ldsa; create
	a (Ldlg;)V lambda$init$1
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenCustomHashMap;)V lambda$static$0
	au_ ()V onClose
	b ()V init
	d ()V tick
	e ()V removed
dsd net/minecraft/client/gui/screens/worldselection/WorldPreset
	a NORMAL
	b AMPLIFIED
	c PRESETS
	d EDITORS
	e FLAT
	f LARGE_BIOMES
	g SINGLE_BIOME_SURFACE
	h SINGLE_BIOME_CAVES
	i SINGLE_BIOME_FLOATING_ISLANDS
	j DEBUG
	k description
	a ()Lnet/minecraft/server/IChatBaseComponent; description
	a (Ldrx;Lnet/minecraft/server/GeneratorSettings;)Ldoq; lambda$static$7
	a (Ldrx;Lnet/minecraft/server/GeneratorSettings;Lnet/minecraft/server/BiomeBase;)V lambda$null$6
	a (Ldrx;Lnet/minecraft/server/GeneratorSettings;Lnet/minecraft/server/GeneratorSettingsFlat;)V lambda$null$0
	a (Lnet/minecraft/server/GeneratorSettings;)Ljava/util/Optional; of
	a (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettingBase; lambda$fromBuffetSettings$10
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/IRegistry;J)Lnet/minecraft/server/ChunkGenerator; generator
	a (Lnet/minecraft/server/IRegistryCustom$Dimension;JZZ)Lnet/minecraft/server/GeneratorSettings; create
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/GeneratorSettings;)Lnet/minecraft/server/BiomeBase; parseBuffetSettings
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/GeneratorSettings;Ldsd;Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/GeneratorSettings; fromBuffetSettings
	b (Ldrx;Lnet/minecraft/server/GeneratorSettings;)Ldoq; lambda$static$5
	b (Ldrx;Lnet/minecraft/server/GeneratorSettings;Lnet/minecraft/server/BiomeBase;)V lambda$null$4
	b (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettingBase; lambda$fromBuffetSettings$9
	c (Ldrx;Lnet/minecraft/server/GeneratorSettings;)Ldoq; lambda$static$3
	c (Ldrx;Lnet/minecraft/server/GeneratorSettings;Lnet/minecraft/server/BiomeBase;)V lambda$null$2
	c (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettingBase; lambda$fromBuffetSettings$8
	d (Ldrx;Lnet/minecraft/server/GeneratorSettings;)Ldoq; lambda$static$1
pd$1 net/minecraft/network/protocol/game/ClientboundCommandsPacket$1
dsc net/minecraft/client/gui/screens/worldselection/WorldGenSettingsComponent
	a bonusItemsButton
	b LOGGER
	c CUSTOM_WORLD_DESCRIPTION
	d AMPLIFIED_HELP_TEXT
	e MAP_FEATURES_INFO
	f amplifiedWorldInfo
	g font
	h width
	i seedEdit
	j featuresButton
	k typeButton
	l customizeTypeButton
	m importSettingsButton
	n registryHolder
	o settings
	p preset
	q seed
	a ()Z isDebug
	a (Ldfj;IIF)V render
	a (Ldjw;Ldrx;Ldlg;)V lambda$init$3
	a (Ldjw;Ldrx;Lnet/minecraft/server/IRegistryCustom$Dimension;Lcom/mojang/serialization/Lifecycle;Lnet/minecraft/server/GeneratorSettings;)V lambda$null$6
	a (Ldjw;Ldrx;Lnet/minecraft/server/IRegistryCustom$Dimension;Lnet/minecraft/server/GeneratorSettings;Z)V lambda$null$5
	a (Ldlg;)V lambda$init$4
	a (Ldrx;Ldjw;Ldkr;)V init
	a (Ldrx;Ldjw;Ldlg;)V lambda$init$7
	a (Ldrx;Ldlg;)V lambda$init$2
	a (Ldsc;)Lnet/minecraft/server/GeneratorSettings; access$000
	a (Ljava/lang/String;)Ljava/util/OptionalLong; parseLong
	a (Ljava/util/OptionalLong;)Ljava/lang/String; toString
	a (Lnet/minecraft/server/DataPackResources;)V updateDataPacks
	a (Lnet/minecraft/server/GeneratorSettings;)V updateSettings
	a (Lnet/minecraft/server/IRegistryCustom$Dimension;Lnet/minecraft/server/GeneratorSettings;)V importSettings
	a (Lnet/minecraft/server/RegistryReadOps;Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/DataResult; lambda$updateDataPacks$8
	a (Z)Lnet/minecraft/server/GeneratorSettings; makeSettings
	b ()Lnet/minecraft/server/IRegistryCustom$Dimension; registryHolder
	b (Ldlg;)V lambda$init$1
	b (Ldsc;)Ljava/util/Optional; access$200
	b (Ljava/lang/String;)V lambda$init$0
	b (Lnet/minecraft/server/IRegistryCustom$Dimension;Lnet/minecraft/server/GeneratorSettings;)V lambda$updateDataPacks$9
	b (Z)V setDisplayOptions
	c ()Lnet/minecraft/server/IChatBaseComponent; access$100
	d ()V tick
	e ()Lnet/minecraft/server/IChatBaseComponent; access$300
	f ()Ljava/util/OptionalLong; parseSeed
dsf net/minecraft/client/gui/screens/worldselection/package-info
dse net/minecraft/client/gui/screens/worldselection/WorldSelectionList
	a LOGGER
	o DATE_FORMAT
	p ICON_MISSING
	q ICON_OVERLAY_LOCATION
	r FROM_NEWER_TOOLTIP_1
	s FROM_NEWER_TOOLTIP_2
	t SNAPSHOT_TOOLTIP_1
	u SNAPSHOT_TOOLTIP_2
	v WORLD_LOCKED_TOOLTIP
	w screen
	x cachedList
	A ()Lorg/apache/logging/log4j/Logger; access$1000
	a (Ldlc$a;)V setSelected
	a (Ldlc$b;)V moveSelection
	a (Ldse$a;)V setSelected
	a (Ldse;)I access$900
	a (Ljava/util/function/Supplier;Z)V refreshList
	b ()Z isFocused
	b (Ldse$a;)Z lambda$moveSelection$0
	d ()I getRowWidth
	e ()I getScrollbarPosition
	f ()Ljava/util/Optional; getSelectedOpt
	g ()Ldsb; getScreen
	r ()Ljava/text/DateFormat; access$100
	s ()Lnet/minecraft/server/MinecraftKey; access$200
	t ()Lnet/minecraft/server/MinecraftKey; access$300
	u ()Lnet/minecraft/server/IChatBaseComponent; access$400
	w ()Lnet/minecraft/server/IChatBaseComponent; access$500
	x ()Lnet/minecraft/server/IChatBaseComponent; access$600
	y ()Lnet/minecraft/server/IChatBaseComponent; access$700
	z ()Lnet/minecraft/server/IChatBaseComponent; access$800
bxs$1 net/minecraft/world/level/block/LadderBlock$1
	a $SwitchMap$net$minecraft$core$Direction
dsh net/minecraft/client/gui/spectator/RootSpectatorMenuCategory
	a PROMPT_TEXT
	b items
	a ()Ljava/util/List; getItems
	b ()Lnet/minecraft/server/IChatBaseComponent; getPrompt
net/minecraft/server/NBTTagTypes net/minecraft/nbt/TagTypes
	a TYPES
	a (I)Lnet/minecraft/server/NBTTagType; getType
dsg net/minecraft/client/gui/spectator/PlayerMenuItem
	a profile
	b location
	c name
	a (Ldfj;FI)V renderIcon
	a (Ldsi;)V selectItem
	aA_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	aB_ ()Z isEnabled
dsj net/minecraft/client/gui/spectator/SpectatorMenuCategory
	a ()Ljava/util/List; getItems
	b ()Lnet/minecraft/server/IChatBaseComponent; getPrompt
net/minecraft/server/BlockLantern net/minecraft/world/level/block/Lantern
	a HANGING
	b WATERLOGGED
	c AABB
	d HANGING_AABB
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	f (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	h (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumDirection; getConnectedDirection
dsi net/minecraft/client/gui/spectator/SpectatorMenu
	a EMPTY_SLOT
	b CLOSE_ITEM
	c SCROLL_LEFT
	d SCROLL_RIGHT_ENABLED
	e SCROLL_RIGHT_DISABLED
	f CLOSE_MENU_TEXT
	g PREVIOUS_PAGE_TEXT
	h NEXT_PAGE_TEXT
	i listener
	j category
	k selectedSlot
	l page
	a ()Ljava/util/List; getItems
	a (I)Ldsk; getItem
	a (Ldsi;)I access$200
	a (Ldsi;I)I access$202
	a (Ldsj;)V selectCategory
	b ()Ldsk; getSelectedItem
	b (I)V selectSlot
	c ()Ldsj; getSelectedCategory
	d ()V exit
	e ()I getSelectedSlot
	f ()Ldsm; getCurrentPage
	g ()Lnet/minecraft/server/IChatBaseComponent; access$100
	h ()Lnet/minecraft/server/IChatBaseComponent; access$300
	i ()Lnet/minecraft/server/IChatBaseComponent; access$400
dsl net/minecraft/client/gui/spectator/SpectatorMenuListener
	a (Ldsi;)V onSpectatorMenuClosed
bbb$1 net/minecraft/world/entity/animal/horse/Llama$1
dsk net/minecraft/client/gui/spectator/SpectatorMenuItem
	a (Ldfj;FI)V renderIcon
	a (Ldsi;)V selectItem
	aA_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	aB_ ()Z isEnabled
net/minecraft/server/RemoteStatusListener net/minecraft/server/rcon/thread/QueryThreadGs4
	d LOGGER
	e lastChallengeCheck
	f port
	g serverPort
	h maxPlayers
	i serverName
	j worldName
	k socket
	l buffer
	m hostIp
	n serverIp
	o validChallenges
	p rulesResponse
	q lastRulesResponse
	r serverInterface
	a ()Z start
	a (JLnet/minecraft/server/RemoteStatusListener$RemoteStatusChallenge;)Z lambda$pruneChallenges$0
	a (Ljava/lang/Exception;)V recoverSocketError
	a (Ljava/net/DatagramPacket;)Z processPacket
	a (Ljava/net/SocketAddress;)[B getIdentBytes
	a (Lnet/minecraft/server/IMinecraftServer;)Lnet/minecraft/server/RemoteStatusListener; create
	a ([BLjava/net/DatagramPacket;)V sendTo
	b (Ljava/net/DatagramPacket;)[B buildRuleResponse
	c (Ljava/net/DatagramPacket;)Ljava/lang/Boolean; validChallenge
	d ()V pruneChallenges
	d (Ljava/net/DatagramPacket;)V sendChallenge
	e ()Z initSocket
dsn net/minecraft/client/gui/spectator/categories/TeleportToPlayerMenuCategory
	a PROFILE_ORDER
	b TELEPORT_TEXT
	c TELEPORT_PROMPT
	d items
	a ()Ljava/util/List; getItems
	a (Ldfj;FI)V renderIcon
	a (Ldsi;)V selectItem
	a (Ldwp;Ldwp;)I lambda$static$0
	aA_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	aB_ ()Z isEnabled
	b ()Lnet/minecraft/server/IChatBaseComponent; getPrompt
dsm net/minecraft/client/gui/spectator/categories/SpectatorPage
	a category
	b items
	c selection
	a ()Ldsj; getCategory
	a (I)Ldsk; getItem
	b ()I getSelectedSlot
net/minecraft/server/DispenserRegistry net/minecraft/server/Bootstrap
	a STDOUT
	b isBootstrapped
	c LOGGER
	a (Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V checkTranslations
	a (Ljava/lang/String;)V realStdoutPrintln
	a (Ljava/util/Set;)V checkGameruleTranslations
	a (Ljava/util/function/Function;Lnet/minecraft/server/LocaleLanguage;Ljava/util/Set;Ljava/lang/Object;)V lambda$checkTranslations$0
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/String; lambda$getMissingTranslations$1
	b ()Ljava/util/Set; getMissingTranslations
	b (Ljava/lang/String;)V lambda$validate$2
	c ()V validate
	d ()V wrapStreams
	init ()V bootStrap
net/minecraft/server/BehaviorPositionEntity net/minecraft/world/entity/ai/behavior/EntityTracker
	a entity
	b trackEyeHeight
	a ()Lnet/minecraft/server/Vec3D; currentPosition
	a (Lnet/minecraft/server/EntityLiving;)Z isVisibleBy
	b ()Lnet/minecraft/server/BlockPosition; currentBlockPosition
	c ()Lnet/minecraft/server/Entity; getEntity
dsp net/minecraft/client/gui/spectator/categories/package-info
bgz$d net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal
	a raider
	b speedModifier
	c poiPos
	d visited
	e distanceToPoi
	f stuck
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;)Z hasNotVisited
	a (Lnet/minecraft/server/VillagePlaceType;)Z lambda$hasSuitablePoi$0
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z isValidRaid
	h ()Z hasSuitablePoi
	j ()V updateVisited
zr$d net/minecraft/server/level/ChunkHolder$PlayerProvider
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)Ljava/util/stream/Stream; getPlayers
dso net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory
	a TELEPORT_TEXT
	b TELEPORT_PROMPT
	c items
	a ()Ljava/util/List; getItems
	a (Ldfj;FI)V renderIcon
	a (Ldsi;)V selectItem
	aA_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	aB_ ()Z isEnabled
	b ()Lnet/minecraft/server/IChatBaseComponent; getPrompt
bgz$c net/minecraft/world/entity/raid/Raider$RaiderCelebration
	a this$0
	b mob
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
dsr net/minecraft/client/main/GameConfig
	a user
	b display
	c location
	d game
	e server
ekk$a net/minecraft/client/resources/SkinManager$SkinTextureCallback
dsq net/minecraft/client/gui/spectator/package-info
dst net/minecraft/client/main/package-info
bxb$1 net/minecraft/world/level/block/GrindstoneBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
dss net/minecraft/client/main/SilentInitException
czs$1 net/minecraft/world/level/storage/loot/entries/TagEntry$1
	a val$item
	c this$0
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
dsv net/minecraft/client/map/package-info
bgz$b net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal
	a this$0
	b mob
	a ()Z canUse
	e ()V tick
dsu net/minecraft/client/map/Map
	a xCam
	b yCam
	c COLOR
	d ODD_COLOR
	e LOGGER
	f image
	g w
	i scale
	j newScale
	k xMouse
	l yMouse
	m seed
	n updates
	o hovered
	p teleportCommand
	q distCount
	r lastDistData
	a ()D getNewScale
	a (IILnet/minecraft/server/WorldChunkManager;II[I)Lcom/mojang/datafixers/util/Pair; lambda$invalidateAndUpdate$3
	a (J)Lnet/minecraft/server/WorldChunkManager; makeBiomeSource
	a (Ldsu;)Ljava/lang/String; access$000
	a (Ldsu;D)D access$402
	a (Ldsu;I)I access$602
	a (Ldsu;J)J access$202
	a (Ldsu;Ljava/lang/String;)Ljava/lang/String; access$102
	a (Ljava/awt/event/MouseWheelEvent;)V lambda$new$0
	a (Ljava/util/concurrent/CompletableFuture;)V lambda$invalidateAndUpdate$1
	a (Lnet/minecraft/server/BiomeBase;)I getColor
	a (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/BiomeBase; lambda$makeBiomeSource$8
	a (Lnet/minecraft/server/ResourceKey;I)V setColor
	a (Lnet/minecraft/server/ResourceKey;II)V setColor
	a ([I[III)V lambda$null$2
	a ([Ljava/lang/String;)V main
	b ()V invalidateAndUpdate
	b (Ldsu;)Ljava/lang/String; access$100
	b (Ldsu;D)D access$502
	b (Ldsu;I)I access$702
	b (Lnet/minecraft/server/BiomeBase;)I getOddColor
	b (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/BiomeBase; lambda$makeBiomeSource$7
	c (Ldsu;)V access$300
	c (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/BiomeBase; lambda$makeBiomeSource$6
	d (Ldsu;)D access$400
	d (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/BiomeBase; lambda$makeBiomeSource$5
	e (Ldsu;)I access$600
	e (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/BiomeBase; lambda$makeBiomeSource$4
	f (Ldsu;)I access$700
bgz$a net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal
	a shoutTargeting
	b this$0
	c mob
	d hostileRadiusSqr
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
dsx net/minecraft/client/model/AgeableListModel
	a scaleHead
	b yHeadOffset
	f zHeadOffset
	g babyHeadScale
	h babyBodyScale
	i bodyYOffset
	a ()Ljava/lang/Iterable; headParts
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	a (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$3
	b ()Ljava/lang/Iterable; bodyParts
	b (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$2
	c (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$1
	d (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$0
net/minecraft/server/ContainerSmithing net/minecraft/world/inventory/SmithingMenu
	g level
	h selectedRecipe
	i recipes
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/IBlockData;)Z isValidBlock
	a (Lnet/minecraft/server/ItemStack;)Z shouldQuickMoveToAdditionalSlot
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/RecipeSmithing;)Z lambda$shouldQuickMoveToAdditionalSlot$1
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$onTake$0
	b (Lnet/minecraft/server/EntityHuman;Z)Z mayPickup
	d (I)V shrinkStackInSlot
	e ()V createResult
dsw net/minecraft/client/model/AbstractZombieModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityMonster;)Z isAggressive
	a (Lnet/minecraft/server/EntityMonster;FFFFF)V setupAnim
net/minecraft/server/PacketPlayOutVehicleMove net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket
	a x
	b y
	c z
	d yRot
	e xRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()D getX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()D getY
	d ()D getZ
	e ()F getYRot
	f ()F getXRot
dsz net/minecraft/client/model/ArmedModel
	a (Lnet/minecraft/server/EnumMainHand;Ldfj;)V translateToHand
dsy net/minecraft/client/model/AnimationUtils
	a (Ldwf;Ldwf;F)V bobArms
	a (Ldwf;Ldwf;Ldwf;Z)V animateCrossbowHold
	a (Ldwf;Ldwf;Lnet/minecraft/server/EntityInsentient;FF)V swingWeaponDown
	a (Ldwf;Ldwf;Lnet/minecraft/server/EntityLiving;Z)V animateCrossbowCharge
	a (Ldwf;Ldwf;ZFF)V animateZombieArms
net/minecraft/server/BehaviorGateSingle net/minecraft/world/entity/ai/behavior/RunOne
cdb$1 net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$1
	a $SwitchMap$net$minecraft$world$level$block$entity$ShulkerBoxBlockEntity$AnimationStatus
	b $SwitchMap$net$minecraft$core$Direction$Axis
bbb$a net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal
	b (Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
	k ()D getFollowDistance
bap$1 net/minecraft/world/entity/animal/Sheep$1
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
bap$2 net/minecraft/world/entity/animal/Sheep$2
	a $SwitchMap$net$minecraft$world$item$DyeColor
zr$c net/minecraft/server/level/ChunkHolder$LevelChangeListener
	a (Lnet/minecraft/server/ChunkCoordIntPair;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V onLevelChange
net/minecraft/server/ContainerRecipeBook net/minecraft/world/inventory/RecipeBookMenu
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/server/IRecipe;)Z recipeMatches
	a (ZLnet/minecraft/server/IRecipe;Lnet/minecraft/server/EntityPlayer;)V handlePlacement
	e ()V clearCraftingContent
	f ()I getResultSlotIndex
	g ()I getGridWidth
	h ()I getGridHeight
	i ()I getSize
	m ()Lnet/minecraft/server/RecipeBookType; getRecipeBookType
dta net/minecraft/client/model/ArmorStandArmorModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityArmorStand;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
net/minecraft/server/EnumDirection net/minecraft/core/Direction
	g data3d
	h oppositeIndex
	i data2d
	j name
	k axis
	l axisDirection
	m normal
	n VALUES
	o BY_NAME
	p BY_3D_DATA
	q BY_2D_DATA
	r BY_NORMAL
	s $VALUES
	a ()Ljava/lang/String; getSerializedName
	a (DDD)Lnet/minecraft/server/EnumDirection; getNearest
	a (F)Z isFacingAngle
	a (FFF)Lnet/minecraft/server/EnumDirection; getNearest
	a (III)Lnet/minecraft/server/EnumDirection; fromNormal
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumDirection; byName
	a (Ljava/util/Random;)Lnet/minecraft/server/EnumDirection; getRandom
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EnumDirection; fromNormal
	a (Lnet/minecraft/server/Entity;)[Lnet/minecraft/server/EnumDirection; orderedByNearest
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection; getClockWise
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/EnumDirection$EnumAxisDirection;)Lnet/minecraft/server/EnumDirection; fromAxisAndDirection
	a (Lnet/minecraft/server/EnumDirection$EnumAxisDirection;Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection; get
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; lambda$static$7
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; lambda$static$8
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)[Lnet/minecraft/server/EnumDirection; makeDirectionArray
	a (Lnet/minecraft/server/Matrix4f;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; rotate
	b ()Lnet/minecraft/server/Quaternion; getRotation
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection; getCounterClockWise
	b (Lnet/minecraft/server/EnumDirection;)Ljava/lang/Long; lambda$static$6
	c ()I get3DDataValue
	c (I)[Lnet/minecraft/server/EnumDirection; lambda$static$5
	c (Lnet/minecraft/server/EnumDirection;)I lambda$static$4
	d (I)[Lnet/minecraft/server/EnumDirection; lambda$static$2
	d (Lnet/minecraft/server/EnumDirection;)Z lambda$static$3
	e ()Lnet/minecraft/server/EnumDirection$EnumAxisDirection; getAxisDirection
	e (Lnet/minecraft/server/EnumDirection;)I lambda$static$1
	f (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; lambda$static$0
	fromAngle (D)Lnet/minecraft/server/EnumDirection; fromYRot
	fromType1 (I)Lnet/minecraft/server/EnumDirection; from3DDataValue
	fromType2 (I)Lnet/minecraft/server/EnumDirection; from2DDataValue
	g ()Lnet/minecraft/server/EnumDirection; getClockWise
	get2DRotationValue ()I get2DDataValue
	getAdjacentX ()I getStepX
	getAdjacentY ()I getStepY
	getAdjacentZ ()I getStepZ
	h ()Lnet/minecraft/server/EnumDirection; getCounterClockWise
	l ()Lnet/minecraft/server/Vector3fa; step
	m ()Ljava/lang/String; getName
	n ()Lnet/minecraft/server/EnumDirection$EnumAxis; getAxis
	o ()F toYRot
	opposite ()Lnet/minecraft/server/EnumDirection; getOpposite
	p ()Lnet/minecraft/server/BaseBlockPosition; getNormal
	q ()Lnet/minecraft/server/EnumDirection; getClockWiseX
	r ()Lnet/minecraft/server/EnumDirection; getCounterClockWiseX
	s ()Lnet/minecraft/server/EnumDirection; getClockWiseZ
	t ()Lnet/minecraft/server/EnumDirection; getCounterClockWiseZ
dtc net/minecraft/client/model/BatModel
	a head
	b body
	f rightWing
	g leftWing
	h rightWingTip
	i leftWingTip
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityBat;FFFFF)V setupAnim
net/minecraft/server/BlockHugeMushroom net/minecraft/world/level/block/HugeMushroomBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e UP
	f DOWN
	g PROPERTY_BY_DIRECTION
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
dtb net/minecraft/client/model/ArmorStandModel
	a bodyStick1
	b bodyStick2
	t shoulderStick
	u basePlate
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityArmorStand;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityArmorStand;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EnumMainHand;Ldfj;)V translateToHand
	b ()Ljava/lang/Iterable; bodyParts
net/minecraft/server/PacketPlayInSetCommandMinecart net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket
	a entity
	b command
	c trackOutput
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/CommandBlockListenerAbstract; getCommandBlock
	b ()Ljava/lang/String; getCommand
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z isTrackOutput
net/minecraft/server/ItemBannerPattern net/minecraft/world/item/BannerPatternItem
	a bannerPattern
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbni;)V appendHoverText
	b ()Lnet/minecraft/server/EnumBannerPatternType; getBannerPattern
	d ()Lnet/minecraft/server/IChatMutableComponent; getDisplayName
dte net/minecraft/client/model/BlazeModel
	a upperBodyParts
	b head
	f parts
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
net/minecraft/server/LootItemConditionDamageSourceProperties net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition
	a predicate
	a ()Ljava/util/Set; getReferencedContextParams
	a (Law$a;)Ldbl$a; hasDamageSource
	a (Lnet/minecraft/server/LootItemConditionDamageSourceProperties;)Lnet/minecraft/server/CriterionConditionDamageSource; access$000
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lnet/minecraft/server/LootItemConditionType; getType
	b (Law$a;)Lnet/minecraft/server/LootItemCondition; lambda$hasDamageSource$0
dtd net/minecraft/client/model/BeeModel
	a bone
	b body
	f rightWing
	g leftWing
	h frontLeg
	i midLeg
	j backLeg
	k stinger
	l leftAntenna
	m rightAntenna
	n rollAmount
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityBee;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityBee;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dtg net/minecraft/client/model/BookModel
	a leftLid
	b rightLid
	c leftPages
	d rightPages
	e flipPage1
	f flipPage2
	g seam
	h parts
	a (FFFF)V setupAnim
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	a (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$render$0
	b (Ldfj;Ldfn;IIFFFF)V render
dtf net/minecraft/client/model/BoatModel
	a paddles
	b waterPatch
	f parts
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityBoat;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityBoat;IF)V animatePaddle
	a (Z)Ldwf; makePaddle
	b ()Lcom/google/common/collect/ImmutableList; parts
	c ()Ldwf; waterPatch
dti net/minecraft/client/model/ChestedHorseModel
	f boxL
	g boxR
	a (Ldwf;)V addEarModels
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityHorseAbstract;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityHorseChestedAbstract;FFFFF)V setupAnim
dth net/minecraft/client/model/CatModel
	m lieDownAmount
	n lieDownAmountTail
	o relaxStateOneAmount
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityCat;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityCat;FFFFF)V setupAnim
dtk net/minecraft/client/model/CodModel
	a body
	b topFin
	f head
	g nose
	h sideFin0
	i sideFin1
	j tailFin
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
net/minecraft/server/BehaviorBellAlert net/minecraft/world/entity/ai/behavior/ReactToBell
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
dtj net/minecraft/client/model/ChickenModel
	a head
	b body
	f leg0
	g leg1
	h wing0
	i wing1
	j beak
	k redThing
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dtm net/minecraft/client/model/ColorableListModel
	a r
	b g
	f b
	a (FFF)V setColor
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
dtl net/minecraft/client/model/ColorableAgeableListModel
	a r
	b g
	f b
	a (FFF)V setColor
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
dto net/minecraft/client/model/CreeperModel
	a head
	b hair
	f body
	g leg0
	h leg1
	i leg2
	j leg3
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
net/minecraft/server/BehaviorAttackTargetSet net/minecraft/world/entity/ai/behavior/StartAttacking
	b canAttackPredicate
	c targetFinderFunction
	a (Lnet/minecraft/server/EntityInsentient;)Z lambda$new$0
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V setAttackTarget
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V lambda$start$1
dtn net/minecraft/client/model/CowModel
	c ()Ldwf; getHead
dtq net/minecraft/client/model/DrownedModel
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityMonster;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityZombie;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityZombie;FFFFF)V setupAnim
dr$e net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode
	a pattern
	b predicate
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lnet/minecraft/server/NBTBase;)V lambda$getOrCreateTag$0
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
dxo$a net/minecraft/client/particle/FlameParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dtp net/minecraft/client/model/DolphinModel
	a body
	b tail
	f tailFin
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dr$d net/minecraft/commands/arguments/NbtPathArgument$ListElementFunction
	a (Lnet/minecraft/server/NBTTagList;ILnet/minecraft/server/NBTBase;)Z apply
dts net/minecraft/client/model/EndermanModel
	a carrying
	b creepy
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
dr$c net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode
	a index
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
net/minecraft/server/DataConverterEntityTippedArrow net/minecraft/util/datafix/fixes/EntityTippedArrowFix
	a (Ljava/lang/String;)Ljava/lang/String; rename
dtr net/minecraft/client/model/ElytraModel
	a rightWing
	b leftWing
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dr$b net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode
	a name
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
dtu net/minecraft/client/model/EntityModel
	c attackTime
	d riding
	e young
	a (Ldtu;)V copyPropertiesTo
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dr$a net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode
	a INSTANCE
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
da$1 net/minecraft/commands/CommandSource$1
	R_ ()Z shouldInformAdmins
	a ()Z acceptsSuccess
	a (Lnet/minecraft/server/IChatBaseComponent;Ljava/util/UUID;)V sendMessage
	b ()Z acceptsFailure
dtt net/minecraft/client/model/EndermiteModel
	a BODY_SIZES
	b BODY_TEXS
	f BODY_COUNT
	g bodyParts
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
net/minecraft/server/WorldGenDecoratorHeightmapWorldSurface net/minecraft/world/level/levelgen/placement/HeightMapWorldSurfaceDecorator
	a (Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;)Lnet/minecraft/server/HeightMap$Type; type
	a (Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;)Lnet/minecraft/server/HeightMap$Type; type
net/minecraft/server/TileEntityCommand$Type net/minecraft/world/level/block/entity/CommandBlockEntity$Mode
	d $VALUES
net/minecraft/server/IOglin net/minecraft/world/entity/monster/hoglin/HoglinBase
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z hurtAndThrowTarget
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)V throwTarget
	eM ()I getAttackAnimationRemainingTicks
dtw net/minecraft/client/model/FoxModel
	a head
	b earL
	f earR
	g nose
	h body
	i leg0
	j leg1
	k leg2
	l leg3
	m tail
	n legMotionPos
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityFox;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityFox;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dtv net/minecraft/client/model/EvokerFangsModel
	a base
	b upperJaw
	f lowerJaw
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dty net/minecraft/client/model/GiantZombieModel
	a (Lnet/minecraft/server/EntityGiantZombie;)Z isAggressive
	a (Lnet/minecraft/server/EntityMonster;)Z isAggressive
net/minecraft/server/ServerCommand net/minecraft/server/ConsoleInput
	command msg
net/minecraft/server/AdvancementTree net/minecraft/advancements/TreeNodePosition
	a advancement
	b parent
	c previousSibling
	d childIndex
	e children
	f ancestor
	g thread
	h x
	i y
	j mod
	k change
	l shift
	a ()V firstWalk
	a (F)V thirdWalk
	a (FIF)F secondWalk
	a (Lnet/minecraft/server/Advancement;)V run
	a (Lnet/minecraft/server/Advancement;Lnet/minecraft/server/AdvancementTree;)Lnet/minecraft/server/AdvancementTree; addChild
	a (Lnet/minecraft/server/AdvancementTree;)Lnet/minecraft/server/AdvancementTree; apportion
	a (Lnet/minecraft/server/AdvancementTree;F)V moveSubtree
	a (Lnet/minecraft/server/AdvancementTree;Lnet/minecraft/server/AdvancementTree;)Lnet/minecraft/server/AdvancementTree; getAncestor
	b ()V executeShifts
	c ()Lnet/minecraft/server/AdvancementTree; previousOrThread
	d ()Lnet/minecraft/server/AdvancementTree; nextOrThread
	e ()V finalizePosition
dtx net/minecraft/client/model/GhastModel
	a tentacles
	b parts
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
net/minecraft/server/DataPalette net/minecraft/world/level/chunk/Palette
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/server/NBTTagList;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()I getSize
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
dtz net/minecraft/client/model/GuardianModel
	a SPIKE_X_ROT
	b SPIKE_Y_ROT
	f SPIKE_Z_ROT
	g SPIKE_X
	h SPIKE_Y
	i SPIKE_Z
	j head
	k eye
	l spikeParts
	m tailParts
	a ()Ljava/lang/Iterable; parts
	a (FF)V setupSpikes
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityGuardian;FFFFF)V setupAnim
dub net/minecraft/client/model/HoglinModel
	a head
	b rightEar
	f leftEar
	g body
	h frontRightLeg
	i frontLeftLeg
	j backRightLeg
	k backLeftLeg
	l mane
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityInsentient;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dua net/minecraft/client/model/HeadedModel
	c ()Ldwf; getHead
net/minecraft/server/WorldGenFlowers net/minecraft/world/level/levelgen/feature/AbstractFlowerFeature
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/BlockPosition; getPos
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z isValid
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/WorldGenFeatureConfiguration;)I getCount
	b (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/IBlockData; getRandomFlower
dud net/minecraft/client/model/HumanoidHeadModel
	b hat
	a (FFF)V setupAnim
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
dal$1 net/minecraft/world/level/storage/loot/functions/SetContainerContents$1
bbb$c net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal
	b ()Z canContinueToUse
duc net/minecraft/client/model/HorseModel
	a body
	b headParts
	f leg1
	g leg2
	h leg3
	i leg4
	j babyLeg1
	k babyLeg2
	l babyLeg3
	m babyLeg4
	n tail
	o saddleParts
	p ridingParts
	a ()Ljava/lang/Iterable; headParts
	a (Ldwf;)V addEarModels
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityHorseAbstract;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityHorseAbstract;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
bbb$b net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData
	a variant
duf net/minecraft/client/model/IllagerModel
	a head
	b hat
	f body
	g arms
	h leftLeg
	i rightLeg
	j rightArm
	k leftArm
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityIllagerAbstract;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EnumMainHand;)Ldwf; getArm
	a (Lnet/minecraft/server/EnumMainHand;Ldfj;)V translateToHand
	b ()Ldwf; getHat
	c ()Ldwf; getHead
due net/minecraft/client/model/HumanoidModel
	f head
	g hat
	h body
	i rightArm
	j leftArm
	k rightLeg
	l leftLeg
	m leftArmPose
	n rightArmPose
	o crouching
	p swimAmount
	a ()Ljava/lang/Iterable; headParts
	a (F)F quadraticArmUpdate
	a (FFF)F rotlerpRad
	a (Ldue;)V copyPropertiesTo
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EnumMainHand; getAttackArm
	a (Lnet/minecraft/server/EntityLiving;F)V setupAttackAnimation
	a (Lnet/minecraft/server/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EnumMainHand;)Ldwf; getArm
	a (Lnet/minecraft/server/EnumMainHand;Ldfj;)V translateToHand
	b ()Ljava/lang/Iterable; bodyParts
	b (Lnet/minecraft/server/EntityLiving;)V poseRightArm
	c ()Ldwf; getHead
	c (Lnet/minecraft/server/EntityLiving;)V poseLeftArm
	d_ (Z)V setAllVisible
duh net/minecraft/client/model/LavaSlimeModel
	a bodyCubes
	b insideCube
	f parts
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntitySlime;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntitySlime;FFFFF)V setupAnim
	b ()Lcom/google/common/collect/ImmutableList; parts
dug net/minecraft/client/model/IronGolemModel
	a head
	b body
	f arm0
	g arm1
	h leg0
	i leg1
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityIronGolem;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityIronGolem;FFFFF)V setupAnim
	b ()Ldwf; getFlowerHoldingArm
dmo$a net/minecraft/client/gui/components/toasts/ToastComponent$ToastInstance
	a this$0
	b toast
	c animationTime
	d visibleTime
	e visibility
	a ()Ldmn; getToast
	a (IILdfj;)Z render
	a (J)F getVisibility
duj net/minecraft/client/model/ListModel
	a ()Ljava/lang/Iterable; parts
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	a (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$0
dui net/minecraft/client/model/LeashKnotModel
	a knot
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
net/minecraft/server/RegionFileCache net/minecraft/world/level/chunk/storage/RegionFileStorage
	b folder
	c sync
	cache regionCache
	a ()V flush
	getFile (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/RegionFile; getRegionFile
dul net/minecraft/client/model/LlamaSpitModel
	a main
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
duk net/minecraft/client/model/LlamaModel
	a head
	b body
	f leg0
	g leg1
	h leg2
	i leg3
	j chest1
	k chest2
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	a (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$1
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityHorseChestedAbstract;FFFFF)V setupAnim
	b (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$0
zr$1 net/minecraft/server/level/ChunkHolder$1
	a this$0
net/minecraft/server/MobSpawnerTrader net/minecraft/world/entity/npc/WanderingTraderSpawner
	a random
	b serverLevelData
	c tickDelay
	d spawnDelay
	e spawnChance
	a (Lnet/minecraft/server/BlockPosition;)Z lambda$spawn$0
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z hasEnoughSpace
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; findSpawnPositionNear
	a (Lnet/minecraft/server/WorldServer;)Z spawn
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillagerTrader;I)V tryToSpawnLlamaFor
	a (Lnet/minecraft/server/WorldServer;ZZ)I tick
dun net/minecraft/client/model/Model
	q renderType
	r texWidth
	s texHeight
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	a (Lnet/minecraft/server/MinecraftKey;)Leag; renderType
	b (Ldwf;)V accept
dr$i net/minecraft/commands/arguments/NbtPathArgument$Node
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Ljava/util/List;)Ljava/util/List; get
	a (Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List; collect
	a (Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List; getOrCreate
	a (Ljava/util/function/Supplier;Lnet/minecraft/server/NBTBase;Ljava/util/List;)V lambda$getOrCreate$0
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
net/minecraft/server/TileEntityBeehive$HiveBee net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData
	a (Lnet/minecraft/server/TileEntityBeehive$HiveBee;)Lnet/minecraft/server/NBTTagCompound; access$100
	b (Lnet/minecraft/server/TileEntityBeehive$HiveBee;)I access$200
	c (Lnet/minecraft/server/TileEntityBeehive$HiveBee;)I access$300
	d (Lnet/minecraft/server/TileEntityBeehive$HiveBee;)I access$208
net/minecraft/server/BlockLeaves net/minecraft/world/level/block/LeavesBlock
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateDistance
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a_ (Lnet/minecraft/server/IBlockData;)Z isRandomlyTicking
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getBlockSupportShape
	f (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getLightBlock
	h (Lnet/minecraft/server/IBlockData;)I getDistanceAt
dum net/minecraft/client/model/MinecartModel
	a cubes
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dr$h net/minecraft/commands/arguments/NbtPathArgument$NbtPath
	a original
	b nodeToOriginalPosition
	c nodes
	a (Ldr$i;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; createNotFoundException
	a (Ldr$i;Ljava/util/function/Supplier;Lnet/minecraft/server/NBTBase;)Ljava/lang/Integer; lambda$set$1
	a (Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer; lambda$apply$0
	a (Ljava/util/List;Ljava/util/function/Function;)I apply
	a (Lnet/minecraft/server/NBTBase;)Ljava/util/List; get
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)Ljava/util/List; getOrCreate
	a (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;)I set
	b (Lnet/minecraft/server/NBTBase;)I countMatching
	b (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I set
	c (Lnet/minecraft/server/NBTBase;)I remove
	d (Lnet/minecraft/server/NBTBase;)Ljava/util/List; getOrCreateParents
dup net/minecraft/client/model/OcelotModel
	a backLegL
	b backLegR
	f frontLegL
	g frontLegR
	h tail1
	i tail2
	j head
	k body
	l state
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dr$g net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode
	a predicate
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
duo net/minecraft/client/model/ModelUtils
	a (FFF)F rotlerpRad
dr$f net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode
	a name
	b pattern
	c predicate
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
dur net/minecraft/client/model/ParrotModel
	a body
	b tail
	f wingLeft
	g wingRight
	h head
	i head2
	j beak1
	k beak2
	l feather
	m legLeft
	n legRight
	a ()Ljava/lang/Iterable; parts
	a (Ldfj;Ldfn;IIFFFFI)V renderOnShoulder
	a (Ldfj;Ldfn;IILdwf;)V lambda$renderOnShoulder$0
	a (Ldur$a;)V prepare
	a (Ldur$a;IFFFFF)V setupAnim
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityParrot;)Ldur$a; getState
	a (Lnet/minecraft/server/EntityParrot;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityParrot;FFFFF)V setupAnim
dhi$1 com/mojang/realmsclient/gui/RealmsDataFetcher$1
net/minecraft/server/CommandTeleport net/minecraft/server/commands/TeleportCommand
	a INVALID_POSITION
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$9
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/Entity;)I teleportToEntity
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/IVectorPosition;Lnet/minecraft/server/IVectorPosition;Lyq$a;)I teleportToPos
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;Lnet/minecraft/server/WorldServer;DDDLjava/util/Set;FFLyq$a;)V performTeleport
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	b (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
duq net/minecraft/client/model/PandaModel
	j sitAmount
	k lieOnBackAmount
	l rollAmount
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityPanda;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityPanda;FFFFF)V setupAnim
dhz$a com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry
	a this$0
	b pendingInvite
	c rowButtons
	a (DDI)Z mouseClicked
	a (Ldfj;II)V lambda$renderPendingInvitationItem$0
	a (Ldfj;IIIIIIIZF)V render
	a (Ldfj;Ldgh;IIII)V renderPendingInvitationItem
	a (Ldhz$a;)Ldgh; access$400
net/minecraft/server/GameTestHarnessCollector net/minecraft/gametest/framework/MultipleTestTracker
	a tests
	b listeners
	a ()I getFailedRequiredCount
	a (Ljava/lang/StringBuffer;Lnet/minecraft/server/GameTestHarnessInfo;)V lambda$getProgressBar$1
	a (Ljava/util/function/Consumer;)V addFailureListener
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V addTestToTrack
	a (Lnet/minecraft/server/GameTestHarnessListener;)V addListener
	a (Lnet/minecraft/server/GameTestHarnessListener;Lnet/minecraft/server/GameTestHarnessInfo;)V lambda$addListener$0
	b ()I getFailedOptionalCount
	c ()I getDoneCount
	d ()Z hasFailedRequired
	e ()Z hasFailedOptional
	f ()Ljava/util/Collection; getFailedRequired
	g ()Ljava/util/Collection; getFailedOptional
	h ()I getTotalCount
	i ()Z isDone
	j ()Ljava/lang/String; getProgressBar
ejz$2 net/minecraft/client/resources/ClientPackSource$2
	a ()Ljava/lang/String; getName
dys$a net/minecraft/client/particle/TerrainParticle$Provider
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleParamBlock;Ldwl;DDDDDD)Ldxy; createParticle
dut net/minecraft/client/model/PigModel
ejz$1 net/minecraft/client/resources/ClientPackSource$1
	a ()Ljava/lang/String; getName
dus net/minecraft/client/model/PhantomModel
	a body
	b leftWingBase
	f leftWingTip
	g rightWingBase
	h rightWingTip
	i tailBase
	j tailTip
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
duv net/minecraft/client/model/PlayerModel
	a cubes
	b cloak
	t leftSleeve
	u rightSleeve
	v leftPants
	w rightPants
	x jacket
	y ear
	z slim
	a (Ldfj;Ldfn;II)V renderEars
	a (Ljava/util/Random;)Ldwf; getRandomModelPart
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EnumMainHand;Ldfj;)V translateToHand
	b ()Ljava/lang/Iterable; bodyParts
	b (Ldfj;Ldfn;II)V renderCloak
	b (Ldwf;)V accept
	d_ (Z)V setAllVisible
duu net/minecraft/client/model/PiglinModel
	A leftArmDefault
	B rightArmDefault
	a earRight
	b earLeft
	y bodyDefault
	z headDefault
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityInsentient;)V holdWeaponHigh
	a (Lnet/minecraft/server/EntityInsentient;F)V setupAttackAnimation
	a (Lnet/minecraft/server/EntityInsentient;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;F)V setupAttackAnimation
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
net/minecraft/server/BlockFlowerPot net/minecraft/world/level/block/FlowerPotBlock
	a SHAPE
	b POTTED_BY_CONTENT
	c content
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c ()Lnet/minecraft/server/Block; getContent
dux net/minecraft/client/model/PufferfishBigModel
	a cube
	b blueFin0
	f blueFin1
	g topFrontFin
	h topMidFin
	i topBackFin
	j sideFrontFin0
	k sideFrontFin1
	l bottomFrontFin
	m bottomBackFin
	n bottomMidFin
	o sideBackFin0
	p sideBackFin1
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dhz$b com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionList
	a this$0
	a (I)V selectItem
	a (Ldfj;)V renderBackground
	a (Ldhz$a;)V setSelected
	a (Ldlc$a;)V setSelected
	b ()Z isFocused
	b (I)V removeAtIndex
	c ()I getMaxPosition
	c (I)V selectInviteListItem
	d ()I getRowWidth
duw net/minecraft/client/model/PolarBearModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityPolarBear;FFFFF)V setupAnim
co$a net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance
	a entity
	a (Lnet/minecraft/server/CriterionConditionEntity;)Lco$a; tamedAnimal
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/LootTableInfo;)Z matches
	c ()Lco$a; tamedAnimal
duz net/minecraft/client/model/PufferfishSmallModel
	a cube
	b eye0
	f eye1
	g fin0
	h fin1
	i finBack
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
duy net/minecraft/client/model/PufferfishMidModel
	a cube
	b finBlue0
	f finBlue1
	g finTop0
	h finTop1
	i finSide0
	j finSide1
	k finSide2
	l finSide3
	m finBottom0
	n finBottom1
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
net/minecraft/server/WorldGenVines net/minecraft/world/level/levelgen/feature/VinesFeature
	a DIRECTIONS
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/EntityParrot net/minecraft/world/entity/animal/Parrot
	bA partyParrot
	bB jukebox
	bq flap
	br flapSpeed
	bs oFlapSpeed
	bt oFlap
	bu DATA_VARIANT_ID
	bv NOT_PARROT_PREDICATE
	bw POISONOUS_FOOD
	bx TAME_FOOD
	by MOB_SOUND_MAP
	bz flapping
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	C (Lnet/minecraft/server/Entity;)V doPush
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Ljava/util/Random;)F getPitch
	a (Lnet/minecraft/server/BlockPosition;Z)V setRecordPlayingNearby
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/World;Ljava/util/Random;)Lnet/minecraft/server/SoundEffect; getAmbient
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;)Z imitateNearbyMobs
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	aT ()Z isPushable
	ay ()Z makeFlySound
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/SoundEffect; getImitatedSound
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkParrotSpawnRules
	ce ()Lnet/minecraft/server/Vec3D; getLeashOffset
	ct ()Lnet/minecraft/server/SoundCategory; getSoundSource
	dG ()F getVoicePitch
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (F)F playFlySound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eU ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eV ()Z isPartyParrot
	eX ()Ljava/util/Map; access$000
	eZ ()V calculateFlapping
	fa ()Z isFlying
	k ()V aiStep
	k (Lnet/minecraft/server/ItemStack;)Z isFood
	o ()V registerGoals
	w_ ()Z isBaby
dva net/minecraft/client/model/QuadrupedModel
	a head
	b body
	f leg0
	g leg1
	h leg2
	i leg3
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dvc net/minecraft/client/model/RavagerModel
	a head
	b mouth
	f body
	g leg0
	h leg1
	i leg2
	j leg3
	k neck
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityRavager;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityRavager;FFFFF)V setupAnim
dvb net/minecraft/client/model/RabbitModel
	a rearFootLeft
	b rearFootRight
	f haunchLeft
	g haunchRight
	h body
	i frontLegLeft
	j frontLegRight
	k head
	l earRight
	m earLeft
	n tail
	o nose
	p jumpRotation
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	a (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$2
	a (Ldwf;FFF)V setRotation
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityRabbit;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityRabbit;FFFFF)V setupAnim
	b (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$1
	c (Ldfj;Ldfn;IIFFFFLdwf;)V lambda$renderToBuffer$0
alf$a net/minecraft/util/datafix/fixes/WorldGenSettingsFix$StructureFeatureConfiguration
	a CODEC
	b spacing
	c separation
	d salt
	a (Lalf$a;)I access$000
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; serialize
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	b (Lalf$a;)I access$100
	c (Lalf$a;)I access$200
	d (Lalf$a;)Ljava/lang/Integer; lambda$null$2
	e (Lalf$a;)Ljava/lang/Integer; lambda$null$1
	f (Lalf$a;)Ljava/lang/Integer; lambda$null$0
dve net/minecraft/client/model/SheepFurModel
	j headXRot
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntitySheep;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntitySheep;FFFFF)V setupAnim
dns$a net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList
	a this$0
	a (Ldlc$a;)V setSelected
	a (Ldns$a$a;)V setSelected
	a (Ldns$a;)Ldjw; access$300
	b ()Z isFocused
	e ()I getScrollbarPosition
	f ()V resetRows
net/minecraft/server/PathMode net/minecraft/world/level/pathfinder/PathComputationType
	d $VALUES
dvd net/minecraft/client/model/SalmonModel
	a bodyFront
	b bodyBack
	f head
	g sideFin0
	h sideFin1
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dvg net/minecraft/client/model/ShieldModel
	a plate
	b handle
	a ()Ldwf; plate
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	b ()Ldwf; handle
dvf net/minecraft/client/model/SheepModel
	j headXRot
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntitySheep;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntitySheep;FFFFF)V setupAnim
dvi net/minecraft/client/model/ShulkerModel
	a base
	b lid
	f head
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityShulker;FFFFF)V setupAnim
	b ()Ldwf; getBase
	c ()Ldwf; getLid
	d ()Ldwf; getHead
dvh net/minecraft/client/model/ShulkerBulletModel
	a main
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dvk net/minecraft/client/model/SkeletonModel
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityInsentient;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityInsentient;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EnumMainHand;Ldfj;)V translateToHand
dvj net/minecraft/client/model/SilverfishModel
	a bodyParts
	b bodyLayers
	f parts
	g zPlacement
	h BODY_SIZES
	i BODY_TEXS
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	b ()Lcom/google/common/collect/ImmutableList; parts
dvm net/minecraft/client/model/SlimeModel
	a cube
	b eye0
	f eye1
	g mouth
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dvl net/minecraft/client/model/SkullModel
	a head
	a (FFF)V setupAnim
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
za$a net/minecraft/server/commands/data/DataCommands$DataManipulator
dvo net/minecraft/client/model/SpiderModel
	a head
	b body0
	f body1
	g leg0
	h leg1
	i leg2
	j leg3
	k leg4
	l leg5
	m leg6
	n leg7
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
za$b net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator
net/minecraft/server/WorldGenFeatureCoralClaw net/minecraft/world/level/levelgen/feature/CoralClawFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z placeFeature
dvn net/minecraft/client/model/SnowGolemModel
	a piece1
	b piece2
	f head
	g arm1
	h arm2
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	b ()Ldwf; getHead
za$c net/minecraft/server/commands/data/DataCommands$DataProvider
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandDataAccessor; access
dvq net/minecraft/client/model/StriderModel
	a rightLeg
	b leftLeg
	f body
	g bristle0
	h bristle1
	i bristle2
	j bristle3
	k bristle4
	l bristle5
	a ()Ljava/lang/Iterable; parts
	a (Ldwf;FFF)V setRotationAngle
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityStrider;FFFFF)V setupAnim
dvp net/minecraft/client/model/SquidModel
	a body
	b tentacles
	f parts
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dvs net/minecraft/client/model/TropicalFishModelA
	a body
	b tail
	f leftFin
	g rightFin
	h topFin
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dvr net/minecraft/client/model/TridentModel
	a TEXTURE
	b pole
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
dvu net/minecraft/client/model/TurtleModel
	j eggBelly
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityTurtle;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
avt$1 net/minecraft/world/entity/ai/goal/GoalSelector$1
	a ()Z canUse
dvt net/minecraft/client/model/TropicalFishModelB
	a body
	b tail
	f leftFin
	g rightFin
	h topFin
	i bottomFin
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
avt$2 net/minecraft/world/entity/ai/goal/GoalSelector$2
	g ()Z isRunning
dvw net/minecraft/client/model/VillagerHeadModel
	a (Z)V hatVisible
dvv net/minecraft/client/model/VexModel
	a leftWing
	b rightWing
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityVex;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
net/minecraft/server/ResourcePackFolder net/minecraft/server/packs/FolderPackResources
	b LOGGER
	c ON_WINDOWS
	d BACKSLASH_MATCHER
	a (Ljava/io/File;ILjava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/util/function/Predicate;)V listResources
	a (Ljava/io/File;Ljava/lang/String;)Z validatePath
	a (Ljava/lang/String;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	c (Ljava/lang/String;)Z hasResource
	e (Ljava/lang/String;)Ljava/io/File; getFile
dvy net/minecraft/client/model/WitchModel
	m holdingItem
	n mole
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	b ()Ldwf; getNose
	b (Z)V setHoldingItem
dvx net/minecraft/client/model/VillagerModel
	a head
	b hat
	f hatRim
	g body
	h jacket
	i arms
	j leg0
	k leg1
	l nose
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Z)V hatVisible
	c ()Ldwf; getHead
dvz net/minecraft/client/model/WitherBossModel
	a upperBodyParts
	b heads
	f parts
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityWither;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityWither;FFFFF)V setupAnim
	b ()Lcom/google/common/collect/ImmutableList; parts
net/minecraft/server/ContainerSmoker net/minecraft/world/inventory/SmokerMenu
net/minecraft/server/CommandMe net/minecraft/server/commands/EmoteCommands
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
net/minecraft/server/BiomeFog net/minecraft/world/level/biome/BiomeSpecialEffects
	a CODEC
	b fogColor
	c waterColor
	d waterFogColor
	e skyColor
	f foliageColorOverride
	g grassColorOverride
	h grassColorModifier
	i ambientParticleSettings
	j ambientLoopSoundEvent
	k ambientMoodSettings
	l ambientAdditionsSettings
	m backgroundMusic
	a ()I getFogColor
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$12
	a (Lnet/minecraft/server/BiomeFog;)Ljava/util/Optional; lambda$null$11
	b ()I getWaterColor
	b (Lnet/minecraft/server/BiomeFog;)Ljava/util/Optional; lambda$null$10
	c ()I getWaterFogColor
	c (Lnet/minecraft/server/BiomeFog;)Ljava/util/Optional; lambda$null$9
	d ()I getSkyColor
	d (Lnet/minecraft/server/BiomeFog;)Ljava/util/Optional; lambda$null$8
	e ()Ljava/util/Optional; getFoliageColorOverride
	e (Lnet/minecraft/server/BiomeFog;)Ljava/util/Optional; lambda$null$7
	f ()Ljava/util/Optional; getGrassColorOverride
	f (Lnet/minecraft/server/BiomeFog;)Lnet/minecraft/server/BiomeFog$GrassColor; lambda$null$6
	g ()Lnet/minecraft/server/BiomeFog$GrassColor; getGrassColorModifier
	g (Lnet/minecraft/server/BiomeFog;)Ljava/util/Optional; lambda$null$5
	h ()Ljava/util/Optional; getAmbientParticleSettings
	h (Lnet/minecraft/server/BiomeFog;)Ljava/util/Optional; lambda$null$4
	i ()Ljava/util/Optional; getAmbientLoopSoundEvent
	i (Lnet/minecraft/server/BiomeFog;)Ljava/lang/Integer; lambda$null$3
	j ()Ljava/util/Optional; getAmbientMoodSettings
	j (Lnet/minecraft/server/BiomeFog;)Ljava/lang/Integer; lambda$null$2
	k ()Ljava/util/Optional; getAmbientAdditionsSettings
	k (Lnet/minecraft/server/BiomeFog;)Ljava/lang/Integer; lambda$null$1
	l ()Ljava/util/Optional; getBackgroundMusic
	l (Lnet/minecraft/server/BiomeFog;)Ljava/lang/Integer; lambda$null$0
net/minecraft/server/ActivityFrame net/minecraft/world/entity/schedule/Keyframe
	a timeStamp
	b value
	a ()I getTimeStamp
	b ()F getValue
net/minecraft/server/NBTTagCompound net/minecraft/nbt/CompoundTag
	a CODEC
	b TYPE
	c LOGGER
	h SIMPLE_VALUE
	map tags
	a ()B getId
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; lambda$static$0
	a (Ljava/io/DataInput;Lnet/minecraft/server/NBTReadLimiter;)B access$000
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;)Ljava/util/UUID; getUUID
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (Ljava/lang/String;Ljava/util/List;)V putByteArray
	a (Ljava/lang/String;Ljava/util/UUID;)V putUUID
	a (Ljava/lang/String;Lnet/minecraft/server/NBTBase;Ljava/io/DataOutput;)V writeNamedTag
	a (Ljava/lang/String;Lnet/minecraft/server/NBTTagType;Ljava/lang/ClassCastException;)Lnet/minecraft/server/CrashReport; createReport
	a (Ljava/lang/String;[J)V putLongArray
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; merge
	a (Lnet/minecraft/server/NBTTagType;Ljava/lang/String;Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; access$200
	b ()Lnet/minecraft/server/NBTTagType; getType
	b (Ljava/io/DataInput;Lnet/minecraft/server/NBTReadLimiter;)Ljava/lang/String; access$100
	b (Ljava/lang/String;)Z hasUUID
	b (Ljava/lang/String;Ljava/util/List;)V putIntArray
	b (Lnet/minecraft/server/NBTTagCompound;)Lcom/mojang/serialization/Dynamic; lambda$static$1
	b (Lnet/minecraft/server/NBTTagType;Ljava/lang/String;Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; readNamedTagData
	c ()Lnet/minecraft/server/NBTBase; copy
	c (Ljava/io/DataInput;Lnet/minecraft/server/NBTReadLimiter;)B readNamedTagType
	c (Ljava/lang/String;Ljava/util/List;)V putLongArray
	clone ()Lnet/minecraft/server/NBTTagCompound; copy
	d (Ljava/io/DataInput;Lnet/minecraft/server/NBTReadLimiter;)Ljava/lang/String; readNamedTagName
	d (Ljava/lang/String;)B getTagType
	e ()I size
	e_ ()V stripEmptyChildren
	getKeys ()Ljava/util/Set; getAllKeys
	h ()Ljava/util/Map; entries
	hasKey (Ljava/lang/String;)Z contains
	hasKeyOfType (Ljava/lang/String;I)Z contains
	s (Ljava/lang/String;)Ljava/lang/String; handleEscape
	set (Ljava/lang/String;Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; put
	setBoolean (Ljava/lang/String;Z)V putBoolean
	setByte (Ljava/lang/String;B)V putByte
	setByteArray (Ljava/lang/String;[B)V putByteArray
	setDouble (Ljava/lang/String;D)V putDouble
	setFloat (Ljava/lang/String;F)V putFloat
	setInt (Ljava/lang/String;I)V putInt
	setIntArray (Ljava/lang/String;[I)V putIntArray
	setLong (Ljava/lang/String;J)V putLong
	setShort (Ljava/lang/String;S)V putShort
	setString (Ljava/lang/String;Ljava/lang/String;)V putString
	t (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; handleEscapePretty
	u (Ljava/lang/String;)Ljava/lang/String; lambda$createReport$2
dwb net/minecraft/client/model/ZombieModel
	a (Lnet/minecraft/server/EntityMonster;)Z isAggressive
	a (Lnet/minecraft/server/EntityZombie;)Z isAggressive
net/minecraft/server/SystemUtils$IdentityHashingStrategy net/minecraft/Util$IdentityStrategy
	b $VALUES
dwa net/minecraft/client/model/WolfModel
	a head
	b realHead
	f body
	g leg0
	h leg1
	i leg2
	j leg3
	k tail
	l realTail
	m upperBody
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityWolf;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityWolf;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dwd net/minecraft/client/model/dragon/DragonHeadModel
	b head
	c jaw
	a (FFF)V setupAnim
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
dwc net/minecraft/client/model/ZombieVillagerModel
	a hatRim
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityZombie;FFFFF)V setupAnim
	a (Z)V hatVisible
dhz$1 com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$1
	a this$0
	a (Ldgh;)Ldhz$a; lambda$run$0
	a (Ljava/util/List;)V lambda$run$1
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdLeftTurn net/minecraft/world/level/levelgen/structure/StrongholdPieces$LeftTurn
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdLeftTurn; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
dwf net/minecraft/client/model/geom/ModelPart
	a x
	b y
	c z
	d xRot
	e yRot
	f zRot
	g mirror
	h visible
	i xTexSize
	j yTexSize
	k xTexOffs
	l yTexOffs
	m cubes
	n children
	a ()Ldwf; createShallowCopy
	a (FFF)V setPos
	a (FFFFFF)Ldwf; addBox
	a (FFFFFFF)V addBox
	a (FFFFFFFFF)V addBox
	a (FFFFFFFZ)V addBox
	a (FFFFFFZ)Ldwf; addBox
	a (II)Ldwf; texOffs
	a (IIFFFFFFFFFZZ)V addBox
	a (Ldfj$a;Ldfn;IIFFFF)V compile
	a (Ldfj;)V translateAndRotate
	a (Ldfj;Ldfn;II)V render
	a (Ldfj;Ldfn;IIFFFF)V render
	a (Ldwf;)V copyFrom
	a (Ljava/lang/String;FFFIIIFII)Ldwf; addBox
	a (Ljava/util/Random;)Ldwf$a; getRandomCube
	b (II)Ldwf; setTexSize
	b (Ldwf;)V addChild
dwe net/minecraft/client/model/dragon/package-info
dwh net/minecraft/client/model/package-info
dwg net/minecraft/client/model/geom/package-info
net/minecraft/server/MobSpawnerData net/minecraft/world/level/SpawnData
	entity tag
	a ()Lnet/minecraft/server/NBTTagCompound; save
	getEntity ()Lnet/minecraft/server/NBTTagCompound; getTag
dwj net/minecraft/client/multiplayer/ClientChunkCache
	a LOGGER
	b emptyChunk
	c lightEngine
	d storage
	e level
	a ()Lorg/apache/logging/log4j/Logger; access$1000
	a (I)V updateViewRadius
	a (IILnet/minecraft/server/BiomeStorage;Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/NBTTagCompound;IZ)Lnet/minecraft/server/Chunk; replaceWithPacketData
	a (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	a (Ldwj;)Ldwl; access$800
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/server/BlockPosition;)Z isTickingChunk
	a (Lnet/minecraft/server/Chunk;II)Z isValidChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Z isEntityTickingChunk
	a (Lnet/minecraft/server/Entity;)Z isEntityTickingChunk
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;)V onLightUpdate
	b (I)I calculateStorageRange
	b (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/Chunk; getChunk
	b (Ldwj;)Ldwj$a; access$900
	d (II)V drop
	e ()Ljava/lang/String; gatherStats
	e (II)V updateViewCenter
	h ()I getLoadedChunksCount
	l ()Lnet/minecraft/server/LightEngine; getLightEngine
	m ()Lnet/minecraft/server/IBlockAccess; getLevel
dil$a com/mojang/realmsclient/gui/screens/UploadResult$Builder
	a statusCode
	b errorMessage
	a ()Ldil; build
	a (I)Ldil$a; withStatusCode
	a (Ljava/lang/String;)Ldil$a; withErrorMessage
dhz$2 com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$2
	a val$slot
	b this$0
	a (I)V lambda$run$0
dwi net/minecraft/client/multiplayer/ClientAdvancements
	a LOGGER
	b minecraft
	c advancements
	d progress
	e listener
	f selectedTab
	a ()Lnet/minecraft/server/Advancements; getAdvancements
	a (Ldwi$a;)V setListener
	a (Lnet/minecraft/server/Advancement;Z)V setSelectedTab
	a (Lnet/minecraft/server/PacketPlayOutAdvancements;)V update
	b ()Ljava/util/Map; getProgress
dhz$3 com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$3
	a val$slot
	b this$0
	a (I)V lambda$run$0
dwl net/minecraft/client/multiplayer/ClientLevel
	A scoreboard
	B mapData
	C skyFlashTime
	D tintCaches
	E chunkSource
	a entitiesById
	b connection
	c levelRenderer
	d clientLevelData
	x effects
	y minecraft
	z players
	A ()Ljava/lang/String; lambda$fillReportDetails$5
	F ()Lnet/minecraft/server/Scoreboard; getScoreboard
	G ()Lnet/minecraft/server/IChunkProvider; getChunkSource
	H ()Lnet/minecraft/server/TickList; getLiquidTicks
	I ()Lnet/minecraft/server/TickList; getBlockTicks
	R ()V disconnect
	a ()Ldzn; effects
	a (DDDDDDLnet/minecraft/server/NBTTagCompound;)V createFireworks
	a (DDDDDLnet/minecraft/server/ParticleParam;)V spawnFluidParticle
	a (DDDLnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FFZ)V playLocalSound
	a (I)Lnet/minecraft/server/Entity; getEntity
	a (III)Lnet/minecraft/server/BiomeBase; getUncachedNoiseBiome
	a (IIIILjava/util/Random;ZLnet/minecraft/server/BlockPosition$MutableBlockPosition;)V doAnimateTick
	a (IILnet/minecraft/world/level/ColorResolver;Ldkm;)V lambda$onChunkLoaded$2
	a (ILdzb;)V addPlayer
	a (ILnet/minecraft/server/BlockPosition;I)V destroyBlockProgress
	a (ILnet/minecraft/server/Entity;)V putNonPlayerEntity
	a (J)V setGameTime
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectArrayMap;)V lambda$new$0
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldMap; getMapData
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BiomeParticles;)V lambda$doAnimateTick$4
	a (Lnet/minecraft/server/BlockPosition;F)Lnet/minecraft/server/Vec3D; getSkyColor
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;I)V sendBlockUpdated
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/ParticleParam;Z)V trySpawnDripParticles
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/VoxelShape;D)V spawnParticle
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FFZ)V playLocalSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	a (Lnet/minecraft/server/Chunk;)V unload
	a (Lnet/minecraft/server/CrashReport;)Lnet/minecraft/server/CrashReportSystemDetails; fillReportDetails
	a (Lnet/minecraft/server/Entity;)V tickNonPassenger
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)V tickPassenger
	a (Lnet/minecraft/server/EntityHuman;DDDLnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EntityHuman;ILnet/minecraft/server/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EnumDirection;Z)F getShade
	a (Lnet/minecraft/server/Packet;)V sendPacketToServer
	a (Lnet/minecraft/server/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/server/ParticleParam;ZDDDDDD)V addParticle
	a (Lnet/minecraft/server/Scoreboard;)V setScoreboard
	a (Lnet/minecraft/server/WorldMap;)V setMapData
	a (Lnet/minecraft/world/level/ColorResolver;Ldkm;)V lambda$clearTintCaches$3
	b ()Ljava/lang/Iterable; entitiesForRendering
	b (II)Z hasChunk
	b (ILnet/minecraft/server/BlockPosition;I)V globalLevelEvent
	b (ILnet/minecraft/server/Entity;)V addEntity
	b (J)V setDayTime
	b (Lnet/minecraft/server/BlockPosition;F)V setDefaultSpawnPos
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V setKnownState
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V setBlocksDirty
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I calculateBlockTint
	b (Lnet/minecraft/server/Chunk;)V reAddEntitiesToChunk
	b (Lnet/minecraft/server/Entity;)V updateChunkPos
	b (Lnet/minecraft/server/ParticleParam;DDDDDD)V addAlwaysVisibleParticle
	b (Lnet/minecraft/server/ParticleParam;ZDDDDDD)V addAlwaysVisibleParticle
	c (I)V setSkyFlashTime
	c (III)V animateTick
	c (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I lambda$getBlockTint$7
	d (I)V removeEntity
	d (III)V setSectionDirtyWithNeighbors
	d (Lnet/minecraft/server/Entity;)V onEntityRemoved
	e (II)V onChunkLoaded
	e (Lnet/minecraft/server/Entity;)Ljava/lang/String; lambda$tickNonPassenger$1
	g ()V tickEntities
	g (F)F getSkyDarken
	h ()Lnet/minecraft/server/WorldData; getLevelData
	h (F)Lnet/minecraft/server/Vec3D; getCloudColor
	i ()V clearTintCaches
	i (F)F getStarBrightness
	j ()I getEntityCount
	m ()V removeAllPendingEntityRemovals
	n ()Ldwj; getChunkSource
	o ()Lnet/minecraft/server/CraftingManager; getRecipeManager
	p ()Lnet/minecraft/server/ITagRegistry; getTagManager
	r ()Lnet/minecraft/server/IRegistryCustom; registryAccess
	s ()I getSkyFlashTime
	t ()I getFreeMapId
	u ()Lnet/minecraft/server/BlockPosition; getSharedSpawnPos
	v ()F getSharedSpawnAngle
	w ()Ldwl$a; getLevelData
	x ()Ljava/util/List; players
	y ()V tickTime
	z ()Ljava/lang/String; lambda$fillReportDetails$6
dwk net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl
	a LOGGER
	b minecraft
	c parent
	d updateStatus
	e connection
	f localGameProfile
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; authenticateServer
	a (Ljava/lang/String;Lnet/minecraft/server/PacketLoginInEncryptionBegin;Ljavax/crypto/SecretKey;)V lambda$handleHello$1
	a (Ljavax/crypto/SecretKey;Lio/netty/util/concurrent/Future;)V lambda$null$0
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/PacketLoginOutCustomPayload;)V handleCustomQuery
	a (Lnet/minecraft/server/PacketLoginOutDisconnect;)V handleDisconnect
	a (Lnet/minecraft/server/PacketLoginOutEncryptionBegin;)V handleHello
	a (Lnet/minecraft/server/PacketLoginOutSetCompression;)V handleCompression
	a (Lnet/minecraft/server/PacketLoginOutSuccess;)V handleGameProfile
	b ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
dwn net/minecraft/client/multiplayer/ClientSuggestionProvider
	a connection
	b minecraft
	c pendingSuggestionsId
	d pendingSuggestionsFuture
	a (D)Ljava/lang/String; prettyPrint
	a (I)Ljava/lang/String; prettyPrint
	a (ILcom/mojang/brigadier/suggestion/Suggestions;)V completeCustomSuggestions
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	c (I)Z hasPermission
	l ()Ljava/util/Collection; getOnlinePlayerNames
	m ()Ljava/util/Collection; getAllTeams
	n ()Ljava/util/Collection; getAvailableSoundEvents
	o ()Ljava/util/stream/Stream; getRecipeNames
	p ()Ljava/util/Set; levels
	q ()Lnet/minecraft/server/IRegistryCustom; registryAccess
	r ()Ljava/util/Collection; getSelectedEntities
	s ()Ljava/util/Collection; getRelevantCoordinates
	t ()Ljava/util/Collection; getAbsoluteCoordinates
dwm net/minecraft/client/multiplayer/ClientPacketListener
	a LOGGER
	b GENERIC_DISCONNECT_MESSAGE
	c connection
	d localGameProfile
	e callbackScreen
	f minecraft
	g level
	h levelData
	i started
	j playerInfoMap
	k advancements
	l suggestionsProvider
	m tags
	n debugQueryHandler
	o serverChunkRadius
	p random
	q commands
	r recipeManager
	s id
	t levels
	u registryAccess
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (IILnet/minecraft/server/LightEngine;Lnet/minecraft/server/EnumSkyBlock;IILjava/util/Iterator;Z)V readSectionList
	a (ILnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V lambda$handleChunkBlocksUpdate$0
	a (Ldjj;Ldrq;)V lambda$handleAddOrRemoveRecipes$4
	a (Ldjj;Lnet/minecraft/server/IRecipe;)V lambda$handleAddOrRemoveRecipes$3
	a (Ljava/lang/String;)Ldwp; getPlayerInfo
	a (Ljava/lang/String;Ljava/lang/String;)V lambda$handleResourcePack$6
	a (Ljava/lang/String;Ljava/lang/String;Z)V lambda$null$5
	a (Ljava/lang/Throwable;)Ljava/lang/Void; lambda$downloadCallback$8
	a (Ljava/util/UUID;)Ldwp; getPlayerInfo
	a (Ljava/util/concurrent/CompletableFuture;)V downloadCallback
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/IRecipe;)V lambda$handlePlaceRecipe$9
	a (Lnet/minecraft/server/Entity;Lcom/mojang/datafixers/util/Pair;)V lambda$handleSetEquipment$1
	a (Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ItemStack; findTotem
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/Packet;)V send
	a (Lnet/minecraft/server/PacketPlayInResourcePackStatus$EnumResourcePackStatus;)V send
	a (Lnet/minecraft/server/PacketPlayOutAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/server/PacketPlayOutAdvancements;)V handleUpdateAdvancementsPacket
	a (Lnet/minecraft/server/PacketPlayOutAnimation;)V handleAnimate
	a (Lnet/minecraft/server/PacketPlayOutAttachEntity;)V handleEntityLinkPacket
	a (Lnet/minecraft/server/PacketPlayOutAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/server/PacketPlayOutBlockAction;)V handleBlockEvent
	a (Lnet/minecraft/server/PacketPlayOutBlockBreak;)V handleBlockBreakAck
	a (Lnet/minecraft/server/PacketPlayOutBlockBreakAnimation;)V handleBlockDestruction
	a (Lnet/minecraft/server/PacketPlayOutBlockChange;)V handleBlockUpdate
	a (Lnet/minecraft/server/PacketPlayOutBoss;)V handleBossUpdate
	a (Lnet/minecraft/server/PacketPlayOutCamera;)V handleSetCamera
	a (Lnet/minecraft/server/PacketPlayOutChat;)V handleChat
	a (Lnet/minecraft/server/PacketPlayOutCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/server/PacketPlayOutCollect;)V handleTakeItemEntity
	a (Lnet/minecraft/server/PacketPlayOutCombatEvent;)V handlePlayerCombat
	a (Lnet/minecraft/server/PacketPlayOutCommands;)V handleCommands
	a (Lnet/minecraft/server/PacketPlayOutCustomPayload;)V handleCustomPayload
	a (Lnet/minecraft/server/PacketPlayOutCustomSoundEffect;)V handleCustomSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutEntity;)V handleMoveEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityDestroy;)V handleRemoveEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityEffect;)V handleUpdateMobEffect
	a (Lnet/minecraft/server/PacketPlayOutEntityEquipment;)V handleSetEquipment
	a (Lnet/minecraft/server/PacketPlayOutEntityHeadRotation;)V handleRotateMob
	a (Lnet/minecraft/server/PacketPlayOutEntityMetadata;)V handleSetEntityData
	a (Lnet/minecraft/server/PacketPlayOutEntitySound;)V handleSoundEntityEvent
	a (Lnet/minecraft/server/PacketPlayOutEntityStatus;)V handleEntityEvent
	a (Lnet/minecraft/server/PacketPlayOutEntityTeleport;)V handleTeleportEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityVelocity;)V handleSetEntityMotion
	a (Lnet/minecraft/server/PacketPlayOutExperience;)V handleSetExperience
	a (Lnet/minecraft/server/PacketPlayOutExplosion;)V handleExplosion
	a (Lnet/minecraft/server/PacketPlayOutGameStateChange;)V handleGameEvent
	a (Lnet/minecraft/server/PacketPlayOutHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/server/PacketPlayOutKeepAlive;)V handleKeepAlive
	a (Lnet/minecraft/server/PacketPlayOutKickDisconnect;)V handleDisconnect
	a (Lnet/minecraft/server/PacketPlayOutLightUpdate;)V handleLightUpdatePacked
	a (Lnet/minecraft/server/PacketPlayOutLogin;)V handleLogin
	a (Lnet/minecraft/server/PacketPlayOutLookAt;)V handleLookAt
	a (Lnet/minecraft/server/PacketPlayOutMap;)V handleMapItemData
	a (Lnet/minecraft/server/PacketPlayOutMapChunk;)V handleLevelChunk
	a (Lnet/minecraft/server/PacketPlayOutMount;)V handleSetEntityPassengersPacket
	a (Lnet/minecraft/server/PacketPlayOutMultiBlockChange;)V handleChunkBlocksUpdate
	a (Lnet/minecraft/server/PacketPlayOutNBTQuery;)V handleTagQueryPacket
	a (Lnet/minecraft/server/PacketPlayOutNamedEntitySpawn;)V handleAddPlayer
	a (Lnet/minecraft/server/PacketPlayOutNamedSoundEffect;)V handleSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutOpenBook;)V handleOpenBook
	a (Lnet/minecraft/server/PacketPlayOutOpenSignEditor;)V handleOpenSignEditor
	a (Lnet/minecraft/server/PacketPlayOutOpenWindow;)V handleOpenScreen
	a (Lnet/minecraft/server/PacketPlayOutOpenWindowHorse;)V handleHorseScreenOpen
	a (Lnet/minecraft/server/PacketPlayOutOpenWindowMerchant;)V handleMerchantOffers
	a (Lnet/minecraft/server/PacketPlayOutPlayerInfo;)V handlePlayerInfo
	a (Lnet/minecraft/server/PacketPlayOutPlayerListHeaderFooter;)V handleTabListCustomisation
	a (Lnet/minecraft/server/PacketPlayOutPosition;)V handleMovePlayer
	a (Lnet/minecraft/server/PacketPlayOutRecipeUpdate;)V handleUpdateRecipes
	a (Lnet/minecraft/server/PacketPlayOutRecipes;)V handleAddOrRemoveRecipes
	a (Lnet/minecraft/server/PacketPlayOutRemoveEntityEffect;)V handleRemoveMobEffect
	a (Lnet/minecraft/server/PacketPlayOutResourcePackSend;)V handleResourcePack
	a (Lnet/minecraft/server/PacketPlayOutRespawn;)V handleRespawn
	a (Lnet/minecraft/server/PacketPlayOutScoreboardDisplayObjective;)V handleSetDisplayObjective
	a (Lnet/minecraft/server/PacketPlayOutScoreboardObjective;)V handleAddObjective
	a (Lnet/minecraft/server/PacketPlayOutScoreboardScore;)V handleSetScore
	a (Lnet/minecraft/server/PacketPlayOutScoreboardTeam;)V handleSetPlayerTeamPacket
	a (Lnet/minecraft/server/PacketPlayOutSelectAdvancementTab;)V handleSelectAdvancementsTab
	a (Lnet/minecraft/server/PacketPlayOutServerDifficulty;)V handleChangeDifficulty
	a (Lnet/minecraft/server/PacketPlayOutSetCooldown;)V handleItemCooldown
	a (Lnet/minecraft/server/PacketPlayOutSetSlot;)V handleContainerSetSlot
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntity;)V handleAddEntity
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityExperienceOrb;)V handleAddExperienceOrb
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityLiving;)V handleAddMob
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityPainting;)V handleAddPainting
	a (Lnet/minecraft/server/PacketPlayOutSpawnPosition;)V handleSetSpawn
	a (Lnet/minecraft/server/PacketPlayOutStatistic;)V handleAwardStats
	a (Lnet/minecraft/server/PacketPlayOutStopSound;)V handleStopSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutTabComplete;)V handleCommandSuggestions
	a (Lnet/minecraft/server/PacketPlayOutTags;)V handleUpdateTags
	a (Lnet/minecraft/server/PacketPlayOutTileEntityData;)V handleBlockEntityData
	a (Lnet/minecraft/server/PacketPlayOutTitle;)V handleSetTitles
	a (Lnet/minecraft/server/PacketPlayOutTransaction;)V handleContainerAck
	a (Lnet/minecraft/server/PacketPlayOutUnloadChunk;)V handleForgetLevelChunk
	a (Lnet/minecraft/server/PacketPlayOutUpdateAttributes;)V handleUpdateAttributes
	a (Lnet/minecraft/server/PacketPlayOutUpdateHealth;)V handleSetHealth
	a (Lnet/minecraft/server/PacketPlayOutUpdateTime;)V handleSetTime
	a (Lnet/minecraft/server/PacketPlayOutVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/server/PacketPlayOutViewCentre;)V handleSetChunkCacheCenter
	a (Lnet/minecraft/server/PacketPlayOutViewDistance;)V handleSetChunkCacheRadius
	a (Lnet/minecraft/server/PacketPlayOutWindowData;)V handleContainerSetData
	a (Lnet/minecraft/server/PacketPlayOutWindowItems;)V handleContainerContent
	a (Lnet/minecraft/server/PacketPlayOutWorldBorder;)V handleSetBorder
	a (Lnet/minecraft/server/PacketPlayOutWorldEvent;)V handleLevelEvent
	a (Lnet/minecraft/server/PacketPlayOutWorldParticles;)V handleParticleEvent
	b ()Ldwn; getSuggestionsProvider
	b (Ljava/lang/String;)Z validateResourcePackUrl
	c ()V cleanup
	d ()Lnet/minecraft/server/CraftingManager; getRecipeManager
	e ()Ljava/util/Collection; getOnlinePlayers
	f ()Lcom/mojang/authlib/GameProfile; getLocalGameProfile
	g ()Ldwi; getAdvancements
	h ()Lcom/mojang/brigadier/CommandDispatcher; getCommands
	i ()Ldwl; getLevel
	j ()Lnet/minecraft/server/ITagRegistry; getTags
	k ()Ldjn; getDebugQueryHandler
	l ()Ljava/util/UUID; getId
	m ()Ljava/util/Set; levels
	n ()Lnet/minecraft/server/IRegistryCustom; registryAccess
	o ()V lambda$downloadCallback$7
	p ()V lambda$handleGameEvent$2
dwp net/minecraft/client/multiplayer/PlayerInfo
	a profile
	b textureLocations
	c gameMode
	d latency
	e pendingTextures
	f skinModel
	g tabListDisplayName
	h lastHealth
	i displayHealth
	j lastHealthTime
	k healthBlinkTime
	l renderVisibilityId
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	a (I)V setLatency
	a (J)V setLastHealthTime
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lnet/minecraft/server/MinecraftKey;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)V lambda$registerTextures$0
	a (Lnet/minecraft/server/EnumGamemode;)V setGameMode
	a (Lnet/minecraft/server/IChatBaseComponent;)V setTabListDisplayName
	b ()Lnet/minecraft/server/EnumGamemode; getGameMode
	b (I)V setLastHealth
	b (J)V setHealthBlinkTime
	c ()I getLatency
	c (I)V setDisplayHealth
	c (J)V setRenderVisibilityId
	d ()Z isCapeLoaded
	e ()Z isSkinLoaded
	f ()Ljava/lang/String; getModelName
	g ()Lnet/minecraft/server/MinecraftKey; getSkinLocation
	h ()Lnet/minecraft/server/MinecraftKey; getCapeLocation
	i ()Lnet/minecraft/server/MinecraftKey; getElytraLocation
	j ()Lnet/minecraft/server/ScoreboardTeam; getTeam
	k ()V registerTextures
	l ()Lnet/minecraft/server/IChatBaseComponent; getTabListDisplayName
	m ()I getLastHealth
	n ()I getDisplayHealth
	o ()J getLastHealthTime
	p ()J getHealthBlinkTime
	q ()J getRenderVisibilityId
dwo net/minecraft/client/multiplayer/MultiPlayerGameMode
	a LOGGER
	b minecraft
	c connection
	d destroyBlockPos
	e destroyingItem
	f destroyProgress
	g destroyTicks
	h destroyDelay
	i isDestroying
	j localPlayerMode
	k previousLocalPlayerMode
	l unAckedActions
	m carriedIndex
	a ()Z canHurtPlayer
	a (I)V handlePickItem
	a (II)V handleInventoryButtonClick
	a (IIILnet/minecraft/server/InventoryClickType;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ItemStack; handleInventoryMouseClick
	a (ILnet/minecraft/server/IRecipe;Z)V handlePlaceRecipe
	a (Ldwl;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType;Z)V handleBlockBreakAck
	a (Ldwl;Lnet/minecraft/server/StatisticManager;Ldjj;)Ldze; createPlayer
	a (Ldwl;Lnet/minecraft/server/StatisticManager;Ldjj;ZZ)Ldze; createPlayer
	a (Ldze;Ldwl;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; useItemOn
	a (Lnet/minecraft/server/BlockPosition;)Z destroyBlock
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z startDestroyBlock
	a (Lnet/minecraft/server/EntityHuman;)V adjustPlayer
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;)V attack
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interact
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;Lnet/minecraft/server/MovingObjectPositionEntity;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interactAt
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; useItem
	a (Lnet/minecraft/server/EnumGamemode;)V setPreviousLocalMode
	a (Lnet/minecraft/server/ItemStack;)V handleCreativeModeItemDrop
	a (Lnet/minecraft/server/ItemStack;I)V handleCreativeModeItemAdd
	a (Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V sendBlockAction
	b ()V stopDestroyBlock
	b (Lnet/minecraft/server/BlockPosition;)Z sameDestroyTarget
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z continueDestroyBlock
	b (Lnet/minecraft/server/EntityHuman;)V releaseUsingItem
	b (Lnet/minecraft/server/EnumGamemode;)V setLocalMode
	c ()F getPickRange
	d ()V tick
	e ()Z hasExperience
	f ()Z hasMissTime
	g ()Z hasInfiniteItems
	h ()Z hasFarPickRange
	i ()Z isServerControlledInventory
	j ()Z isAlwaysFlying
	k ()Lnet/minecraft/server/EnumGamemode; getPreviousPlayerMode
	l ()Lnet/minecraft/server/EnumGamemode; getPlayerMode
	m ()Z isDestroying
	n ()V ensureHasSentCarriedItem
dwr net/minecraft/client/multiplayer/ServerData
	a name
	b ip
	c status
	d motd
	e ping
	f protocol
	g version
	h pinged
	i playerList
	j packStatus
	k iconB64
	l lan
	a ()Lnet/minecraft/server/NBTTagCompound; write
	a (Ldwr$a;)V setResourcePackStatus
	a (Ldwr;)V copyFrom
	a (Ljava/lang/String;)V setIconB64
	a (Lnet/minecraft/server/NBTTagCompound;)Ldwr; read
	b ()Ldwr$a; getResourcePackStatus
	c ()Ljava/lang/String; getIconB64
	d ()Z isLan
dwq net/minecraft/client/multiplayer/ServerAddress
	a host
	b port
	a ()Ljava/lang/String; getHost
	a (Ljava/lang/String;)Ldwq; parseString
	a (Ljava/lang/String;I)I parseInt
	b ()I getPort
	b (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; lookupSrv
dwt net/minecraft/client/multiplayer/ServerStatusPinger
	a SPLITTER
	b LOGGER
	c connections
	a ()V tick
	a (II)Lnet/minecraft/server/IChatBaseComponent; access$000
	a (Ldwr;)V pingLegacyServer
	a (Ldwr;Ljava/lang/Runnable;)V pingServer
	a (Ldwt;Ldwr;)V access$200
	b ()V removeAll
	b (II)Lnet/minecraft/server/IChatBaseComponent; formatPlayerCount
	c ()Lorg/apache/logging/log4j/Logger; access$100
	d ()Lcom/google/common/base/Splitter; access$300
dsi$a net/minecraft/client/gui/spectator/SpectatorMenu$CloseSpectatorItem
	a (Ldfj;FI)V renderIcon
	a (Ldsi;)V selectItem
	aA_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	aB_ ()Z isEnabled
dbp$a net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionKilledByPlayer;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionKilledByPlayer; deserialize
dws net/minecraft/client/multiplayer/ServerList
	a LOGGER
	b minecraft
	c serverList
	a ()V load
	a (I)Ldwr; get
	a (II)V swap
	a (ILdwr;)V replace
	a (Ldwr;)V remove
	b ()V save
	b (Ldwr;)V add
	c ()I size
	c (Ldwr;)V saveSingleServer
dwv net/minecraft/client/package-info
dwu net/minecraft/client/multiplayer/package-info
net/minecraft/server/BehaviorFindPosition net/minecraft/world/entity/ai/behavior/AcquirePoi
	b poiType
	c memoryToAcquire
	d onlyIfAdult
	e onPoiAcquisitionEvent
	f nextScheduledStart
	g batchCache
	a (JLit/unimi/dsi/fastutil/longs/Long2ObjectMap$Entry;)Z lambda$start$0
	a (JLnet/minecraft/server/BlockPosition;)Z lambda$start$1
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Z lambda$null$2
	a (Lnet/minecraft/server/EntityCreature;JJ)Larm$a; lambda$start$5
	a (Lnet/minecraft/server/MemoryModuleType;Lnet/minecraft/server/MemoryModuleType;)Lcom/google/common/collect/ImmutableMap; constructEntryConditionMap
	a (Lnet/minecraft/server/VillagePlace;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/VillagePlaceType;)V lambda$start$4
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;Ljava/lang/Byte;)V lambda$null$3
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
dwx net/minecraft/client/particle/AttackSweepParticle
	a sprites
	a ()V tick
	a (F)I getLightColor
	b ()Ldyc; getRenderType
dww net/minecraft/client/particle/AshParticle
dwz net/minecraft/client/particle/BaseAshSmokeParticle
	a sprites
	b fallSpeed
	a ()V tick
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
net/minecraft/server/CriterionConditionInOpenWater net/minecraft/advancements/critereon/FishingHookPredicate
	a ANY
	b inOpenWater
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionInOpenWater; fromJson
	a (Lnet/minecraft/server/Entity;)Z matches
	a (Z)Lnet/minecraft/server/CriterionConditionInOpenWater; inOpenWater
dwy net/minecraft/client/particle/BarrierParticle
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
net/minecraft/server/ChunkProviderDebug net/minecraft/world/level/levelgen/DebugLevelSource
	d CODEC
	e AIR
	f BARRIER
	g ALL_BLOCKS
	h GRID_WIDTH
	i GRID_HEIGHT
	j biomes
	a ()Lcom/mojang/serialization/Codec; codec
	a (II)Lnet/minecraft/server/IBlockAccess; getBaseColumn
	a (IILnet/minecraft/server/HeightMap$Type;)I getBaseHeight
	a (J)Lnet/minecraft/server/ChunkGenerator; withSeed
	a (JLnet/minecraft/server/BiomeManager;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/WorldGenStage$Features;)V applyCarvers
	a (Lnet/minecraft/server/Block;)Ljava/util/stream/Stream; lambda$static$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/IChunkAccess;)V fillFromNoise
	a (Lnet/minecraft/server/RegionLimitedWorldAccess;Lnet/minecraft/server/IChunkAccess;)V buildSurfaceAndBedrock
	a (Lnet/minecraft/server/RegionLimitedWorldAccess;Lnet/minecraft/server/StructureManager;)V applyBiomeDecoration
	b (II)Lnet/minecraft/server/IBlockData; getBlockStateFor
	g ()Lnet/minecraft/server/IRegistry; biomes
dxa net/minecraft/client/particle/BreakingItemParticle
	a uo
	b vo
	b ()Ldyc; getRenderType
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
net/minecraft/server/LootEntries net/minecraft/world/level/storage/loot/entries/LootPoolEntries
	a EMPTY
	b ITEM
	c REFERENCE
	d DYNAMIC
	e TAG
	f ALTERNATIVES
	g SEQUENCE
	h GROUP
	a ()Ljava/lang/Object; createGsonAdapter
	a (Ljava/lang/String;Lnet/minecraft/server/LootSerializer;)Lnet/minecraft/server/LootEntryType; register
dxc net/minecraft/client/particle/BubbleParticle
	a ()V tick
	b ()Ldyc; getRenderType
net/minecraft/server/EnumDirection8 net/minecraft/core/Direction8
	i NORTH_WEST_MASK
	j WEST_MASK
	k SOUTH_WEST_MASK
	l SOUTH_MASK
	m SOUTH_EAST_MASK
	n EAST_MASK
	o NORTH_EAST_MASK
	p NORTH_MASK
	q directions
	r $VALUES
	a ()Ljava/util/Set; getDirections
	a (ZZZZ)I getSideMask
dxb net/minecraft/client/particle/BubbleColumnUpParticle
	a ()V tick
	b ()Ldyc; getRenderType
dsi$b net/minecraft/client/gui/spectator/SpectatorMenu$ScrollMenuItem
	a direction
	b enabled
	a (Ldfj;FI)V renderIcon
	a (Ldsi;)V selectItem
	aA_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	aB_ ()Z isEnabled
dxp$1 net/minecraft/client/particle/HeartParticle$1
dxe net/minecraft/client/particle/CampfireSmokeParticle
	a ()V tick
	b ()Ldyc; getRenderType
dhi$a com/mojang/realmsclient/gui/RealmsDataFetcher$LiveStatsTask
	a this$0
	a ()V getLiveStats
net/minecraft/server/TileEntityConduit net/minecraft/world/level/block/entity/ConduitBlockEntity
	a tickCount
	b VALID_BLOCKS
	c activeRotation
	g isActive
	h isHunting
	i effectBlocks
	k destroyTargetUUID
	l nextAmbientSoundActivation
	target destroyTarget
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (F)F getActiveRotation
	a (Lnet/minecraft/server/EntityLiving;)Z lambda$findDestroyTarget$1
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/SoundEffect;)V playSound
	a (Z)V setActive
	aj_ ()V tick
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/EntityLiving;)Z lambda$updateDestroyTarget$0
	b (Z)V setHunting
	d ()Z isActive
	f ()Z isHunting
	h ()Z updateShape
	j ()V applyEffects
	k ()V updateDestroyTarget
	l ()V updateClientTarget
	m ()Lnet/minecraft/server/AxisAlignedBB; getDestroyRangeAABB
	x ()Lnet/minecraft/server/EntityLiving; findDestroyTarget
	y ()V animationTick
dxd net/minecraft/client/particle/BubblePopParticle
	a sprites
	a ()V tick
	b ()Ldyc; getRenderType
dhi$b com/mojang/realmsclient/gui/RealmsDataFetcher$PendingInviteUpdateTask
	a this$0
	a ()V updatePendingInvites
dxg net/minecraft/client/particle/DragonBreathParticle
	a hasHitGround
	b sprites
	a ()V tick
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
dxf net/minecraft/client/particle/CritParticle
	a ()V tick
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
dxi net/minecraft/client/particle/DustParticle
	a sprites
	a ()V tick
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
dhi$e com/mojang/realmsclient/gui/RealmsDataFetcher$TrialAvailabilityTask
	a this$0
	a ()V getTrialAvailable
dxh net/minecraft/client/particle/DripParticle
	a isGlowing
	b type
	a ()V tick
	a (F)I getLightColor
	b ()Ldyc; getRenderType
	g ()V preMoveUpdate
	h ()V postMoveUpdate
dhi$f com/mojang/realmsclient/gui/RealmsDataFetcher$UnreadNewsTask
	a this$0
	a ()V getUnreadNews
aej$1 net/minecraft/tags/Tag$1
dxk net/minecraft/client/particle/EndRodParticle
	a (DDD)V move
dhi$c com/mojang/realmsclient/gui/RealmsDataFetcher$ServerListUpdateTask
	a this$0
	a ()V updateServersList
net/minecraft/server/CommandStop net/minecraft/server/commands/StopCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
dxj net/minecraft/client/particle/EnchantmentTableParticle
	D zStart
	a xStart
	b yStart
	a ()V tick
	a (DDD)V move
	a (F)I getLightColor
	b ()Ldyc; getRenderType
dhi$d com/mojang/realmsclient/gui/RealmsDataFetcher$Task
	a SERVER_LIST
	b PENDING_INVITE
	c TRIAL_AVAILABLE
	d LIVE_STATS
	e UNREAD_NEWS
	f $VALUES
dxm net/minecraft/client/particle/FallingDustParticle
	a rotSpeed
	b sprites
	a ()V tick
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
dxl net/minecraft/client/particle/ExplodeParticle
	a sprites
	a ()V tick
	b ()Ldyc; getRenderType
net/minecraft/server/PacketEncryptionHandler net/minecraft/network/CipherBase
	a cipher
	b heapIn
	c heapOut
	a (Lio/netty/buffer/ByteBuf;)[B bufToByte
	a (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encipher
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; decipher
dxo net/minecraft/client/particle/FlameParticle
	a (DDD)V move
	a (F)I getLightColor
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
dxn net/minecraft/client/particle/FireworkParticles
dxq net/minecraft/client/particle/HugeExplosionParticle
	a sprites
	a ()V tick
	a (F)I getLightColor
	b ()Ldyc; getRenderType
dxp net/minecraft/client/particle/HeartParticle
	a ()V tick
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
dxs net/minecraft/client/particle/ItemPickupParticle
	B target
	C life
	D entityRenderDispatcher
	a renderBuffers
	b itemEntity
	a ()V tick
	a (Ldfn;Ldjh;F)V render
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Entity; getSafeCopy
	b ()Ldyc; getRenderType
net/minecraft/server/WorldGenFoilagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer
	d CODEC
	e radius
	f offset
	a ()Lnet/minecraft/server/WorldGenFoilagePlacers; type
	a (Ljava/util/Random;)I offset
	a (Ljava/util/Random;I)I foliageRadius
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	a (Ljava/util/Random;ILnet/minecraft/server/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;ILcni$b;IILjava/util/Set;ILnet/minecraft/server/StructureBoundingBox;)V createFoliage
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;ILcni$b;IILjava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V createFoliage
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;Lnet/minecraft/server/BlockPosition;ILjava/util/Set;IZLnet/minecraft/server/StructureBoundingBox;)V placeLeavesRow
	a (Lnet/minecraft/server/WorldGenFoilagePlacer;)Lnet/minecraft/server/IntSpread; lambda$foliagePlacerParts$1
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2; foliagePlacerParts
	b (Ljava/util/Random;IIIIZ)Z shouldSkipLocationSigned
	b (Lnet/minecraft/server/WorldGenFoilagePlacer;)Lnet/minecraft/server/IntSpread; lambda$foliagePlacerParts$0
ml$1 net/minecraft/nbt/LongTag$1
	a ()Ljava/lang/String; getName
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagLong; load
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; load
	c ()Z isValue
dxr net/minecraft/client/particle/HugeExplosionSeedParticle
	a life
	b lifeTime
	a ()V tick
dxu net/minecraft/client/particle/LavaParticle
	a ()V tick
	a (F)I getLightColor
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
ckp$a net/minecraft/world/level/levelgen/feature/ShipwreckFeature$FeatureStart
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureShipwreckConfiguration;)V generatePieces
net/minecraft/server/DataConverterLeaves net/minecraft/util/datafix/fixes/LeavesFix
	a DIRECTIONS
	b LEAVES
	c LOGS
	a ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; access$000
	a (I)I getX
	a (III)I getIndex
	a (Lajk$a;)Lajk$a; lambda$null$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$7
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$6
	a (Lcom/mojang/datafixers/OpticFinder;[ILcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$4
	a (Lcom/mojang/datafixers/Typed;)Lajk$a; lambda$null$1
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$3
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$0
	a (ZZZZ)I getSideMask
	a ([ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$5
	b ()Ljava/util/Set; access$100
	b (I)I getY
	c (I)I getZ
dxt net/minecraft/client/particle/LargeSmokeParticle
net/minecraft/server/IEntitySelector$EntitySelectorEquipable net/minecraft/world/entity/EntitySelector$MobCanWearArmorEntitySelector
	a itemStack
	a (Lnet/minecraft/server/Entity;)Z test
net/minecraft/server/BlockBeacon net/minecraft/world/level/block/BeaconBlock
	a ()Lnet/minecraft/server/EnumColor; getColor
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
dxw net/minecraft/client/particle/NoRenderParticle
	a (Ldfn;Ldjh;F)V render
	b ()Ldyc; getRenderType
dxv net/minecraft/client/particle/MobAppearanceParticle
	a model
	b renderType
	a (Ldfn;Ldjh;F)V render
	b ()Ldyc; getRenderType
net/minecraft/server/BehaviorCrossbowAttack$BowState net/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState
	e $VALUES
dxy net/minecraft/client/particle/Particle
	A oRoll
	B stoppedByCollision
	a INITIAL_AABB
	b bb
	c level
	d xo
	e yo
	f zo
	g x
	h y
	i z
	j xd
	k yd
	l zd
	m onGround
	n hasPhysics
	o removed
	p bbWidth
	q bbHeight
	r random
	s age
	t lifetime
	u gravity
	v rCol
	w gCol
	x bCol
	y alpha
	z roll
	a ()V tick
	a (DDD)V move
	a (F)I getLightColor
	a (FF)V setSize
	a (FFF)V setColor
	a (I)V setLifetime
	a (Ldfn;Ldjh;F)V render
	a (Lnet/minecraft/server/AxisAlignedBB;)V setBoundingBox
	b ()Ldyc; getRenderType
	b (DDD)V setPos
	c (F)Ldxy; setPower
	d (F)Ldxy; scale
	e (F)V setAlpha
	i ()I getLifetime
	j ()V remove
	k ()V setLocationFromBoundingbox
	l ()Z isAlive
	m ()Lnet/minecraft/server/AxisAlignedBB; getBoundingBox
net/minecraft/server/IChatFormatted net/minecraft/network/chat/FormattedText
	b STOP_ITERATION
	c EMPTY
	a (Ljava/lang/String;Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/IChatFormatted; of
	a (Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional; lambda$getString$0
	a (Ljava/util/List;)Lnet/minecraft/server/IChatFormatted; composite
	a (Lnu$a;)Ljava/util/Optional; visit
	a (Lnu$b;Lnet/minecraft/server/ChatModifier;)Ljava/util/Optional; visit
	a ([Lnet/minecraft/server/IChatFormatted;)Lnet/minecraft/server/IChatFormatted; composite
	b (Ljava/lang/String;)Lnet/minecraft/server/IChatFormatted; of
dxx net/minecraft/client/particle/NoteParticle
	a ()V tick
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
net/minecraft/server/PacketListenerPlayOut net/minecraft/network/protocol/game/ClientGamePacketListener
	a (Lnet/minecraft/server/PacketPlayOutAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/server/PacketPlayOutAdvancements;)V handleUpdateAdvancementsPacket
	a (Lnet/minecraft/server/PacketPlayOutAnimation;)V handleAnimate
	a (Lnet/minecraft/server/PacketPlayOutAttachEntity;)V handleEntityLinkPacket
	a (Lnet/minecraft/server/PacketPlayOutAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/server/PacketPlayOutBlockAction;)V handleBlockEvent
	a (Lnet/minecraft/server/PacketPlayOutBlockBreak;)V handleBlockBreakAck
	a (Lnet/minecraft/server/PacketPlayOutBlockBreakAnimation;)V handleBlockDestruction
	a (Lnet/minecraft/server/PacketPlayOutBlockChange;)V handleBlockUpdate
	a (Lnet/minecraft/server/PacketPlayOutBoss;)V handleBossUpdate
	a (Lnet/minecraft/server/PacketPlayOutCamera;)V handleSetCamera
	a (Lnet/minecraft/server/PacketPlayOutChat;)V handleChat
	a (Lnet/minecraft/server/PacketPlayOutCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/server/PacketPlayOutCollect;)V handleTakeItemEntity
	a (Lnet/minecraft/server/PacketPlayOutCombatEvent;)V handlePlayerCombat
	a (Lnet/minecraft/server/PacketPlayOutCommands;)V handleCommands
	a (Lnet/minecraft/server/PacketPlayOutCustomPayload;)V handleCustomPayload
	a (Lnet/minecraft/server/PacketPlayOutCustomSoundEffect;)V handleCustomSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutEntity;)V handleMoveEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityDestroy;)V handleRemoveEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityEffect;)V handleUpdateMobEffect
	a (Lnet/minecraft/server/PacketPlayOutEntityEquipment;)V handleSetEquipment
	a (Lnet/minecraft/server/PacketPlayOutEntityHeadRotation;)V handleRotateMob
	a (Lnet/minecraft/server/PacketPlayOutEntityMetadata;)V handleSetEntityData
	a (Lnet/minecraft/server/PacketPlayOutEntitySound;)V handleSoundEntityEvent
	a (Lnet/minecraft/server/PacketPlayOutEntityStatus;)V handleEntityEvent
	a (Lnet/minecraft/server/PacketPlayOutEntityTeleport;)V handleTeleportEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityVelocity;)V handleSetEntityMotion
	a (Lnet/minecraft/server/PacketPlayOutExperience;)V handleSetExperience
	a (Lnet/minecraft/server/PacketPlayOutExplosion;)V handleExplosion
	a (Lnet/minecraft/server/PacketPlayOutGameStateChange;)V handleGameEvent
	a (Lnet/minecraft/server/PacketPlayOutHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/server/PacketPlayOutKeepAlive;)V handleKeepAlive
	a (Lnet/minecraft/server/PacketPlayOutKickDisconnect;)V handleDisconnect
	a (Lnet/minecraft/server/PacketPlayOutLightUpdate;)V handleLightUpdatePacked
	a (Lnet/minecraft/server/PacketPlayOutLogin;)V handleLogin
	a (Lnet/minecraft/server/PacketPlayOutLookAt;)V handleLookAt
	a (Lnet/minecraft/server/PacketPlayOutMap;)V handleMapItemData
	a (Lnet/minecraft/server/PacketPlayOutMapChunk;)V handleLevelChunk
	a (Lnet/minecraft/server/PacketPlayOutMount;)V handleSetEntityPassengersPacket
	a (Lnet/minecraft/server/PacketPlayOutMultiBlockChange;)V handleChunkBlocksUpdate
	a (Lnet/minecraft/server/PacketPlayOutNBTQuery;)V handleTagQueryPacket
	a (Lnet/minecraft/server/PacketPlayOutNamedEntitySpawn;)V handleAddPlayer
	a (Lnet/minecraft/server/PacketPlayOutNamedSoundEffect;)V handleSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutOpenBook;)V handleOpenBook
	a (Lnet/minecraft/server/PacketPlayOutOpenSignEditor;)V handleOpenSignEditor
	a (Lnet/minecraft/server/PacketPlayOutOpenWindow;)V handleOpenScreen
	a (Lnet/minecraft/server/PacketPlayOutOpenWindowHorse;)V handleHorseScreenOpen
	a (Lnet/minecraft/server/PacketPlayOutOpenWindowMerchant;)V handleMerchantOffers
	a (Lnet/minecraft/server/PacketPlayOutPlayerInfo;)V handlePlayerInfo
	a (Lnet/minecraft/server/PacketPlayOutPlayerListHeaderFooter;)V handleTabListCustomisation
	a (Lnet/minecraft/server/PacketPlayOutPosition;)V handleMovePlayer
	a (Lnet/minecraft/server/PacketPlayOutRecipeUpdate;)V handleUpdateRecipes
	a (Lnet/minecraft/server/PacketPlayOutRecipes;)V handleAddOrRemoveRecipes
	a (Lnet/minecraft/server/PacketPlayOutRemoveEntityEffect;)V handleRemoveMobEffect
	a (Lnet/minecraft/server/PacketPlayOutResourcePackSend;)V handleResourcePack
	a (Lnet/minecraft/server/PacketPlayOutRespawn;)V handleRespawn
	a (Lnet/minecraft/server/PacketPlayOutScoreboardDisplayObjective;)V handleSetDisplayObjective
	a (Lnet/minecraft/server/PacketPlayOutScoreboardObjective;)V handleAddObjective
	a (Lnet/minecraft/server/PacketPlayOutScoreboardScore;)V handleSetScore
	a (Lnet/minecraft/server/PacketPlayOutScoreboardTeam;)V handleSetPlayerTeamPacket
	a (Lnet/minecraft/server/PacketPlayOutSelectAdvancementTab;)V handleSelectAdvancementsTab
	a (Lnet/minecraft/server/PacketPlayOutServerDifficulty;)V handleChangeDifficulty
	a (Lnet/minecraft/server/PacketPlayOutSetCooldown;)V handleItemCooldown
	a (Lnet/minecraft/server/PacketPlayOutSetSlot;)V handleContainerSetSlot
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntity;)V handleAddEntity
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityExperienceOrb;)V handleAddExperienceOrb
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityLiving;)V handleAddMob
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityPainting;)V handleAddPainting
	a (Lnet/minecraft/server/PacketPlayOutSpawnPosition;)V handleSetSpawn
	a (Lnet/minecraft/server/PacketPlayOutStatistic;)V handleAwardStats
	a (Lnet/minecraft/server/PacketPlayOutStopSound;)V handleStopSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutTabComplete;)V handleCommandSuggestions
	a (Lnet/minecraft/server/PacketPlayOutTags;)V handleUpdateTags
	a (Lnet/minecraft/server/PacketPlayOutTileEntityData;)V handleBlockEntityData
	a (Lnet/minecraft/server/PacketPlayOutTitle;)V handleSetTitles
	a (Lnet/minecraft/server/PacketPlayOutTransaction;)V handleContainerAck
	a (Lnet/minecraft/server/PacketPlayOutUnloadChunk;)V handleForgetLevelChunk
	a (Lnet/minecraft/server/PacketPlayOutUpdateAttributes;)V handleUpdateAttributes
	a (Lnet/minecraft/server/PacketPlayOutUpdateHealth;)V handleSetHealth
	a (Lnet/minecraft/server/PacketPlayOutUpdateTime;)V handleSetTime
	a (Lnet/minecraft/server/PacketPlayOutVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/server/PacketPlayOutViewCentre;)V handleSetChunkCacheCenter
	a (Lnet/minecraft/server/PacketPlayOutViewDistance;)V handleSetChunkCacheRadius
	a (Lnet/minecraft/server/PacketPlayOutWindowData;)V handleContainerSetData
	a (Lnet/minecraft/server/PacketPlayOutWindowItems;)V handleContainerContent
	a (Lnet/minecraft/server/PacketPlayOutWorldBorder;)V handleSetBorder
	a (Lnet/minecraft/server/PacketPlayOutWorldEvent;)V handleLevelEvent
	a (Lnet/minecraft/server/PacketPlayOutWorldParticles;)V handleParticleEvent
net/minecraft/server/CriterionConditionValue net/minecraft/advancements/critereon/MinMaxBounds
	a ERROR_EMPTY
	b ERROR_SWAPPED
	c min
	d max
	a ()Ljava/lang/Number; getMin
	a (Lcom/google/gson/JsonElement;Lnet/minecraft/server/CriterionConditionValue;Ljava/util/function/BiFunction;Lbz$a;)Lnet/minecraft/server/CriterionConditionValue; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Z isAllowedInputChat
	a (Lcom/mojang/brigadier/StringReader;Lbz$b;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lnet/minecraft/server/CriterionConditionValue; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Number; readNumber
	a (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; optionallyFormat
	b ()Ljava/lang/Number; getMax
	c ()Z isAny
	d ()Lcom/google/gson/JsonElement; serializeToJson
dxz net/minecraft/client/particle/ParticleDescription
	a textures
	a ()Ljava/util/List; getTextures
	a (Lcom/google/gson/JsonElement;)Ljava/lang/String; lambda$fromJson$0
	a (Lcom/google/gson/JsonObject;)Ldxz; fromJson
net/minecraft/server/WorldGenFeatureTwistingVines net/minecraft/world/level/levelgen/feature/TwistingVinesFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;III)V placeWeepingVinesColumn
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;III)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;)Z findFirstAirBlockAboveGround
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z isInvalidPlacementLocation
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
	b (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;III)V placeTwistingVines
dyb net/minecraft/client/particle/ParticleProvider
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/DoubleBlockFinder net/minecraft/world/level/block/DoubleBlockCombiner
	a (Lnet/minecraft/server/TileEntityTypes;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/server/BlockStateDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/function/BiPredicate;)Lnet/minecraft/server/DoubleBlockFinder$Result; combineWithNeigbour
dya net/minecraft/client/particle/ParticleEngine
	a level
	b RENDER_ORDER
	c particles
	d trackingEmitters
	e textureManager
	f random
	g providers
	h particlesToAdd
	i spriteSets
	j textureAtlas
	a ()V close
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$reload$2
	a (Laca$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Ldfj;Ldzy$a;Ldzx;Ldjh;F)V render
	a (Ldwl;)V setLevel
	a (Ldxy;)V add
	a (Ldyc;)Ljava/util/Queue; lambda$tick$8
	a (Ldyc;Ljava/util/Queue;)V lambda$tick$7
	a (Leju;Lnet/minecraft/server/MinecraftKey;Ljava/util/List;)V lambda$null$4
	a (Ljava/util/Collection;)V tickParticleList
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V crack
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V destroy
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;DDDDDD)V lambda$destroy$9
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/ParticleParam;)V createTrackingEmitter
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/ParticleParam;I)V createTrackingEmitter
	a (Lnet/minecraft/server/GameProfilerFiller;Ljava/util/Map;Lejt$a;)V lambda$reload$5
	a (Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/IResourceManager;Ljava/util/Map;Ljava/lang/Void;)Lejt$a; lambda$reload$3
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/Map;Ljava/util/concurrent/Executor;Lnet/minecraft/server/MinecraftKey;)Ljava/util/concurrent/CompletableFuture; lambda$reload$1
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;Ljava/util/Map;)V loadParticleDescription
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; lambda$loadParticleDescription$6
	a (Lnet/minecraft/server/Particle;Ldya$b;)V register
	a (Lnet/minecraft/server/Particle;Ldyb;)V register
	a (Lnet/minecraft/server/ParticleParam;DDDDDD)Ldxy; createParticle
	b ()V tick
	b (Ldxy;)V tickParticle
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;Ljava/util/Map;)V lambda$null$0
	b (Lnet/minecraft/server/ParticleParam;DDDDDD)Ldxy; makeParticle
	d ()Ljava/lang/String; countParticles
	e ()V registerProviders
net/minecraft/server/DataConverterObjectiveRenderType net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$2
	a (Ljava/lang/String;)Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay; getRenderType
dyd net/minecraft/client/particle/PlayerCloudParticle
	a sprites
	a ()V tick
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
dyc net/minecraft/client/particle/ParticleRenderType
	a TERRAIN_SHEET
	b PARTICLE_SHEET_OPAQUE
	c PARTICLE_SHEET_TRANSLUCENT
	d PARTICLE_SHEET_LIT
	e CUSTOM
	f NO_RENDER
	a (Ldfe;Lejv;)V begin
	a (Ldfl;)V end
dyf net/minecraft/client/particle/ReversePortalParticle
	a ()V tick
	b (F)F getQuadSize
dsi$1 net/minecraft/client/gui/spectator/SpectatorMenu$1
	a (Ldfj;FI)V renderIcon
	a (Ldsi;)V selectItem
	aA_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	aB_ ()Z isEnabled
dye net/minecraft/client/particle/PortalParticle
	D zStart
	a xStart
	b yStart
	a ()V tick
	a (DDD)V move
	a (F)I getLightColor
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
dyh net/minecraft/client/particle/SimpleAnimatedParticle
	D baseAirFriction
	E fadeR
	F fadeG
	G fadeB
	H hasFade
	a sprites
	b baseGravity
	a ()V tick
	a (F)I getLightColor
	b ()Ldyc; getRenderType
	b (I)V setColor
	c (I)V setFadeColor
	f (F)V setBaseAirFriction
dyg net/minecraft/client/particle/RisingParticle
	a ()V tick
net/minecraft/server/CommandOp net/minecraft/server/commands/OpCommand
	a ERROR_ALREADY_OP
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$3
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I opPlayers
	a (Lnet/minecraft/server/EntityPlayer;)Ljava/lang/String; lambda$null$2
	a (Lnet/minecraft/server/PlayerList;Lnet/minecraft/server/EntityPlayer;)Z lambda$null$1
dyj net/minecraft/client/particle/SmokeParticle
dyi net/minecraft/client/particle/SingleQuadParticle
	B quadSize
	a (Ldfn;Ldjh;F)V render
	b (F)F getQuadSize
	c ()F getU0
	d ()F getU1
	d (F)Ldxy; scale
	e ()F getV0
	f ()F getV1
net/minecraft/server/DataConverterChunkStructuresTemplateRename net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix
	a RENAMES
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
dyl net/minecraft/client/particle/SpellParticle
	a RANDOM
	b sprites
	a ()V tick
	b ()Ldyc; getRenderType
dyk net/minecraft/client/particle/SoulParticle
	a sprites
	a ()V tick
	b ()Ldyc; getRenderType
dyn net/minecraft/client/particle/SplashParticle
net/minecraft/server/PotionUtil net/minecraft/world/item/alchemy/PotionUtils
	a NO_EFFECT
	a (Ljava/util/Collection;)I getColor
	a (Lnet/minecraft/server/ItemStack;Ljava/util/Collection;)Lnet/minecraft/server/ItemStack; setCustomEffects
	a (Lnet/minecraft/server/ItemStack;Ljava/util/List;F)V addPotionTooltip
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/PotionRegistry;)Lnet/minecraft/server/ItemStack; setPotion
	a (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/List; getAllEffects
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/util/List;)V getCustomEffects
	a (Lnet/minecraft/server/PotionRegistry;)I getColor
	a (Lnet/minecraft/server/PotionRegistry;Ljava/util/Collection;)Ljava/util/List; getAllEffects
	b (Lnet/minecraft/server/ItemStack;)Ljava/util/List; getCustomEffects
	b (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/List; getCustomEffects
	c (Lnet/minecraft/server/ItemStack;)I getColor
	c (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/PotionRegistry; getPotion
	d (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/PotionRegistry; getPotion
	getEffects (Lnet/minecraft/server/ItemStack;)Ljava/util/List; getMobEffects
net/minecraft/server/GameTestHarnessEvent net/minecraft/gametest/framework/GameTestEvent
	a expectedDelay
	b assertion
	a (JLjava/lang/Runnable;)Lnet/minecraft/server/GameTestHarnessEvent; create
	a (Ljava/lang/Runnable;)Lnet/minecraft/server/GameTestHarnessEvent; create
net/minecraft/server/EntityIllagerWizard net/minecraft/world/entity/monster/SpellcasterIllager
	b spellCastingTickCount
	bo DATA_SPELL_CASTING_ID
	bp currentSpell
	N ()V customServerAiStep
	a (Lnet/minecraft/server/EntityIllagerWizard;)Lnet/minecraft/server/NavigationAbstract; access$200
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	e ()V defineSynchedData
	eW ()Z isCastingSpell
	eY ()I getSpellCastingTime
	getSoundCastSpell ()Lnet/minecraft/server/SoundEffect; getCastingSoundEvent
	getSpell ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getCurrentSpell
	j ()V tick
	m ()Lbcv$a; getArmPose
	setSpell (Lnet/minecraft/server/EntityIllagerWizard$Spell;)V setIsCastingSpell
dym net/minecraft/client/particle/SpitParticle
	a ()V tick
he$1 net/minecraft/core/particles/ItemParticleOption$1
	a (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParamItem; fromCommand
	a (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParamItem; fromNetwork
	b (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParam; fromCommand
	b (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParam; fromNetwork
dyp net/minecraft/client/particle/SquidInkParticle
	a ()V tick
net/minecraft/server/GenLayers net/minecraft/world/level/newbiome/layer/Layers
	a CATEGORIES
	a (I)Z isOcean
	a (II)Z isSame
	a (JJ)Lnet/minecraft/server/WorldGenContextArea; lambda$getDefaultLayer$0
	a (JLnet/minecraft/server/AreaTransformer2;Lnet/minecraft/server/AreaFactory;ILjava/util/function/LongFunction;)Lnet/minecraft/server/AreaFactory; zoom
	a (JZII)Lnet/minecraft/server/GenLayer; getDefaultLayer
	a (Lit/unimi/dsi/fastutil/ints/Int2IntOpenHashMap;)V lambda$static$1
	a (Lit/unimi/dsi/fastutil/ints/Int2IntOpenHashMap;Lnet/minecraft/server/GenLayers$Type;I)V register
	a (ZIILjava/util/function/LongFunction;)Lnet/minecraft/server/AreaFactory; getDefaultLayer
	b (I)Z isShallowOcean
dyo net/minecraft/client/particle/SpriteSet
	a (II)Leju; get
	a (Ljava/util/Random;)Leju; get
dyr net/minecraft/client/particle/SuspendedTownParticle
	a ()V tick
	a (DDD)V move
	b ()Ldyc; getRenderType
dyq net/minecraft/client/particle/SuspendedParticle
	a ()V tick
	b ()Ldyc; getRenderType
net/minecraft/server/PlayerChunk$Failure net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure
	b UNLOADED
dyt net/minecraft/client/particle/TextureSheetParticle
	C sprite
	a (Ldyo;)V pickSprite
	a (Leju;)V setSprite
	b (Ldyo;)V setSpriteFromAge
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
dys net/minecraft/client/particle/TerrainParticle
	D uo
	E vo
	a blockState
	b pos
	a (F)I getLightColor
	a (Lnet/minecraft/server/BlockPosition;)Ldys; init
	b ()Ldyc; getRenderType
	b (Lnet/minecraft/server/BlockPosition;)V multiplyColor
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
	g ()Ldys; init
net/minecraft/server/GeneratorSettingsFlat net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings
	a CODEC
	b LOGGER
	c STRUCTURE_FEATURES
	d biomes
	e structureSettings
	f layersInfo
	g biome
	h layers
	i voidGen
	j decoration
	k addLakes
	a ()V setDecoration
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Ljava/util/HashMap;)V lambda$static$5
	a (Ljava/util/List;Lnet/minecraft/server/StructureSettings;)Lnet/minecraft/server/GeneratorSettingsFlat; withLayers
	a (Ljava/util/function/Supplier;)V setBiome
	a (Lnet/minecraft/server/GeneratorSettingsFlat;)Ljava/util/Optional; lambda$null$3
	a (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettingsFlat; getDefault
	a (Lnet/minecraft/server/StructureSettings;)Lnet/minecraft/server/GeneratorSettingsFlat; withStructureSettings
	b ()V setAddLakes
	b (Lnet/minecraft/server/GeneratorSettingsFlat;)Ljava/lang/Boolean; lambda$null$2
	b (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/BiomeBase; lambda$getDefault$8
	c ()Lnet/minecraft/server/BiomeBase; getBiomeFromSettings
	c (Lnet/minecraft/server/GeneratorSettingsFlat;)Ljava/lang/Boolean; lambda$null$1
	c (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/BiomeBase; lambda$new$7
	d ()Lnet/minecraft/server/StructureSettings; structureSettings
	d (Lnet/minecraft/server/GeneratorSettingsFlat;)Lnet/minecraft/server/IRegistry; lambda$null$0
	d (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/BiomeBase; lambda$new$6
	e ()Lnet/minecraft/server/BiomeBase; getBiome
	f ()Ljava/util/List; getLayersInfo
	g ()[Lnet/minecraft/server/IBlockData; getLayers
	h ()V updateLayers
dyv net/minecraft/client/particle/TrackingEmitter
	B lifeTime
	C particleType
	a entity
	b life
	a ()V tick
dyu net/minecraft/client/particle/TotemParticle
dyx net/minecraft/client/particle/WaterCurrentDownParticle
	a angle
	a ()V tick
	b ()Ldyc; getRenderType
net/minecraft/server/HandshakeListener net/minecraft/server/network/ServerHandshakePacketListenerImpl
	a IGNORE_STATUS_REASON
	b server
	c connection
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/PacketHandshakingInSetProtocol;)V handleIntention
dyw net/minecraft/client/particle/WakeParticle
	a sprites
	a ()V tick
	b ()Ldyc; getRenderType
dyz net/minecraft/client/particle/WhiteAshParticle
net/minecraft/server/RecipeCooking net/minecraft/world/item/crafting/AbstractCookingRecipe
	a type
	key id
	a ()Lnet/minecraft/server/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	c ()Lnet/minecraft/server/ItemStack; getResultItem
	d ()Ljava/lang/String; getGroup
	f ()Lnet/minecraft/server/MinecraftKey; getId
	g ()Lnet/minecraft/server/Recipes; getType
dyy net/minecraft/client/particle/WaterDropParticle
	a ()V tick
	b ()Ldyc; getRenderType
net/minecraft/server/CommandForceload net/minecraft/server/commands/ForceLoadCommand
	a ERROR_TOO_MANY_CHUNKS
	b ERROR_NOT_TICKING
	c ERROR_ALL_ADDED
	d ERROR_NONE_REMOVED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listForceLoad
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition2D;)I queryForceLoad
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition2D;Lnet/minecraft/server/BlockPosition2D;Z)I changeForceLoad
	a (Lnet/minecraft/server/WorldServer;J)V lambda$removeAll$10
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	b (Lnet/minecraft/server/CommandListenerWrapper;)I removeAll
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	c (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$2
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
net/minecraft/server/BlockSign net/minecraft/world/level/block/SignBlock
	a WATERLOGGED
	b SHAPE
	c type
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	ai_ ()Z isPossibleToRespawnInThis
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c ()Lnet/minecraft/server/BlockPropertyWood; type
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
xl$a net/minecraft/server/commands/LootCommand$Callback
xl$b net/minecraft/server/commands/LootCommand$DropConsumer
dza net/minecraft/client/particle/package-info
xl$c net/minecraft/server/commands/LootCommand$TailProvider
net/minecraft/server/ContainerProperties net/minecraft/world/inventory/SimpleContainerData
	a ints
	a ()I getCount
	a (I)I get
	a (II)V set
dzc net/minecraft/client/player/Input
	a leftImpulse
	b forwardImpulse
	c up
	d down
	e left
	f right
	g jumping
	h shiftKeyDown
	a ()Lnet/minecraft/server/Vec2F; getMoveVector
	a (Z)V tick
	b ()Z hasForwardImpulse
dzb net/minecraft/client/player/AbstractClientPlayer
	a elytraRotX
	b elytraRotY
	c elytraRotZ
	d clientLevel
	e playerInfo
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/String;)Lejl; registerSkinTexture
	a_ ()Z isSpectator
	b_ ()Z isCreative
	c ()Z isCapeLoaded
	d (Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; getSkinLocation
	e (Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; getSkullPath
	f ()Ldwp; getPlayerInfo
	n ()Z isSkinLoaded
	o ()Lnet/minecraft/server/MinecraftKey; getSkinTextureLocation
	p ()Lnet/minecraft/server/MinecraftKey; getCloakTextureLocation
	q ()Z isElytraLoaded
	r ()Lnet/minecraft/server/MinecraftKey; getElytraTextureLocation
	u ()Ljava/lang/String; getModelName
	v ()F getFieldOfViewModifier
dze net/minecraft/client/player/LocalPlayer
	bJ sprintTriggerTime
	bK sprintTime
	bL yBob
	bM xBob
	bN yBobO
	bO xBobO
	bP portalTime
	bQ oPortalTime
	bR stats
	bS recipeBook
	bT ambientSoundHandlers
	bU permissionLevel
	bV xLast
	bW yLast1
	bX zLast
	bY yRotLast
	bZ xRotLast
	ca lastOnGround
	cb crouching
	cc wasShiftKeyDown
	cd wasSprinting
	ce positionReminder
	cf flashOnSetHealth
	cg serverBrand
	ch jumpRidingTicks
	ci jumpRidingScale
	cj startedUsingItem
	ck usingItemHand
	cl handsBusy
	cm autoJumpEnabled
	cn autoJumpTime
	co wasFallFlying
	cp waterVisionTime
	cq showDeathScreen
	e connection
	f input
	g minecraft
	A ()V sendOpenInventory
	B ()Ljava/lang/String; getServerBrand
	D ()Lnet/minecraft/server/StatisticManager; getStats
	F ()Ldjj; getRecipeBook
	G ()Z shouldShowDeathScreen
	H ()Z isRidingJumpable
	I ()F getJumpRidingScale
	J ()Z isMovingSlowly
	K ()Z isControlledCamera
	L ()Z isHandsBusy
	M ()Z isAutoJumpEnabled
	N ()F getWaterVision
	O ()V sendPosition
	a (B)V handleEntityEvent
	a (FII)V setExperienceValues
	a (I)V setPermissionLevel
	a (Lnet/minecraft/server/CommandBlockListenerAbstract;)V openMinecartCommandBlock
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;)V crit
	a (Lnet/minecraft/server/Entity;Z)Z startRiding
	a (Lnet/minecraft/server/EnumHand;)V swing
	a (Lnet/minecraft/server/EnumMoveType;Lnet/minecraft/server/Vec3D;)V move
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)Z lambda$suffocatesAt$0
	a (Lnet/minecraft/server/IChatBaseComponent;Ljava/util/UUID;)V sendMessage
	a (Lnet/minecraft/server/IChatBaseComponent;Z)V displayClientMessage
	a (Lnet/minecraft/server/IRecipe;)V removeRecipeHighlight
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)V openItemGui
	a (Lnet/minecraft/server/SoundEffect;FF)V playSound
	a (Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playNotifySound
	a (Lnet/minecraft/server/TileEntityCommand;)V openCommandBlock
	a (Lnet/minecraft/server/TileEntityJigsaw;)V openJigsawBlock
	a (Lnet/minecraft/server/TileEntitySign;)V openTextEdit
	a (Lnet/minecraft/server/TileEntityStructure;)V openStructureBlock
	a (Lnet/minecraft/server/VoxelShape;)Ljava/util/stream/Stream; lambda$updateAutoJump$2
	a (Z)Z drop
	aH ()Z isUnderWater
	aN ()Z canSpawnSprintParticle
	aZ ()V rideTick
	b (DD)V moveTowardsClosestSpace
	b (F)V heal
	b (Lnet/minecraft/server/Entity;)V magicCrit
	b (Z)V setShowDeathScreen
	be ()V removeVehicle
	bt ()Z isShiftKeyDown
	by ()Z isCrouching
	c (Lnet/minecraft/server/Entity;)Z lambda$updateAutoJump$1
	c (Lnet/minecraft/server/EnumHand;)V startUsingItem
	c (Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/MobEffect; removeEffectNoUpdate
	cM ()Z canSpawnSoulSpeedParticle
	dO ()V serverAiStep
	dR ()Z isEffectiveAi
	dV ()Z isUsingItem
	dW ()Lnet/minecraft/server/EnumHand; getUsedItemHand
	e (Lnet/minecraft/server/DamageSource;F)V actuallyHurt
	eV ()V handleNetherPortalClient
	eW ()Z canAutoJump
	eX ()Z isMoving
	eY ()Z hasEnoughImpulseToStartSprinting
	eb ()V stopUsingItem
	ed ()Z isSuppressingSlidingDownLadder
	es ()Z updateIsUnderwater
	ex ()V respawn
	ey ()Z isLocalPlayer
	f (Ljava/lang/String;)V chat
	g (F)F getViewXRot
	g (FF)V updateAutoJump
	g (Ljava/lang/String;)V setServerBrand
	g (Lnet/minecraft/server/BlockPosition;)Z suffocatesAt
	g (Z)V setSprinting
	h (F)F getViewYRot
	j ()V tick
	k ()V aiStep
	m ()V closeContainer
	o (F)Lnet/minecraft/server/Vec3D; getRopeHoldPosition
	t ()V onUpdateAbilities
	v (F)V hurtTo
	w ()F getCurrentMood
	x ()V clientSideCloseContainer
	y ()I getPermissionLevel
	z ()V sendRidingJump
dzd net/minecraft/client/player/KeyboardInput
	i options
	a (Z)V tick
dzg net/minecraft/client/player/inventory/Hotbar
	a items
	a ()Lnet/minecraft/server/NBTTagList; createTag
	a (Lnet/minecraft/server/NBTTagList;)V fromTag
net/minecraft/server/EntityPigZombie net/minecraft/world/entity/monster/ZombifiedPiglin
	b SPEED_MODIFIER_ATTACKING_UUID
	bo playFirstAngerSoundIn
	bp PERSISTENT_ANGER_TIME
	bq remainingPersistentAngerTime
	br persistentAngerTarget
	bs ALERT_INTERVAL
	bt ticksUntilNextAlert
	c SPEED_MODIFIER_ATTACKING
	d FIRST_ANGER_SOUND_DELAY
	E_ ()I getRemainingPersistentAngerTime
	F_ ()Ljava/util/UUID; getPersistentAngerTarget
	G_ ()V startPersistentAngerTimer
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	N ()V customServerAiStep
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityPigZombie;)V lambda$alertOthers$3
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a_ (I)V setRemainingPersistentAngerTime
	b (Lnet/minecraft/server/EntityPigZombie;)Z lambda$alertOthers$2
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkZombifiedPiglinSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	ba ()D getMyRidingOffset
	c (Lnet/minecraft/server/EntityPigZombie;)Z lambda$alertOthers$1
	d (Lnet/minecraft/server/EntityPigZombie;)Z lambda$alertOthers$0
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eM ()Lnet/minecraft/server/ItemStack; getSkull
	eN ()Z convertsInWater
	eV ()V randomizeReinforcementsChance
	eW ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eX ()V maybePlayFirstAngerSound
	eY ()V maybeAlertOthers
	eZ ()V alertOthers
	f (Lnet/minecraft/server/EntityHuman;)Z isPreventingPlayerRest
	fa ()V playAngerSound
	h (Lnet/minecraft/server/EntityLiving;)V setTarget
	m ()V addBehaviourGoals
dzf net/minecraft/client/player/RemotePlayer
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/IChatBaseComponent;Ljava/util/UUID;)V sendMessage
	et ()V updatePlayerPose
	j ()V tick
	k ()V aiStep
dzi net/minecraft/client/player/package-info
net/minecraft/server/ChatComponentSelector net/minecraft/network/chat/SelectorComponent
	d LOGGER
	e pattern
	f selector
	a ()Ljava/lang/String; getContents
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatMutableComponent; resolve
	d ()Lnet/minecraft/server/ChatBaseComponent; plainCopy
	g ()Lnet/minecraft/server/IChatMutableComponent; plainCopy
	h ()Ljava/lang/String; getPattern
	i ()Lnet/minecraft/server/EntitySelector; getSelector
	j ()Lnet/minecraft/server/ChatComponentSelector; plainCopy
net/minecraft/server/AttributeRanged net/minecraft/world/entity/ai/attributes/RangedAttribute
	a minValue
	maximum maxValue
	a (D)D sanitizeValue
	d ()D getMinValue
	e ()D getMaxValue
dzh net/minecraft/client/player/inventory/package-info
dzk net/minecraft/client/renderer/BlockEntityWithoutLevelRenderer
	a instance
	b SHULKER_BOXES
	c DEFAULT_SHULKER_BOX
	d chest
	e trappedChest
	f enderChest
	g banner
	h bed
	i conduit
	j shieldModel
	k tridentModel
	a (I)[Lnet/minecraft/server/TileEntityShulkerBox; lambda$static$0
	a (Lnet/minecraft/server/ItemStack;Lebe$b;Ldfj;Ldzy;II)V renderByItem
dzj net/minecraft/client/renderer/BiomeColors
	a GRASS_COLOR_RESOLVER
	b FOLIAGE_COLOR_RESOLVER
	c WATER_COLOR_RESOLVER
	a (Lnet/minecraft/server/BiomeBase;DD)I lambda$static$1
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;)I getAverageGrassColor
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getAverageColor
	b (Lnet/minecraft/server/BiomeBase;DD)I lambda$static$0
	b (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;)I getAverageFoliageColor
	c (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;)I getAverageWaterColor
dzm net/minecraft/client/renderer/CubeMap
	a images
	a (Ldjw;FFF)V render
	a (Lejv;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preload
bus$1 net/minecraft/world/level/block/ButtonBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
dzl net/minecraft/client/renderer/ChunkBufferBuilderPack
	a builders
	a ()V clearAll
	a (Leag;)Ldfe; builder
	b ()V discardAll
	b (Leag;)Ldfe; lambda$new$1
	c (Leag;)Leag; lambda$new$0
dzo net/minecraft/client/renderer/EffectInstance
	a LOGGER
	b DUMMY_UNIFORM
	c lastAppliedEffect
	d lastProgramId
	e samplerMap
	f samplerNames
	g samplerLocations
	h uniforms
	i uniformLocations
	j uniformMap
	k programId
	l name
	m dirty
	n blend
	o attributes
	p attributeNames
	q vertexProgram
	r fragmentProgram
	a ()I getId
	a (Lcom/google/gson/JsonElement;)V parseSamplerNode
	a (Lcom/google/gson/JsonObject;)Ldez; parseBlendNode
	a (Ljava/lang/String;)Ldfd; getUniform
	a (Ljava/lang/String;Ljava/util/function/IntSupplier;)V setSampler
	a (Lnet/minecraft/server/IResourceManager;Ldfb$a;Ljava/lang/String;)Ldfb; getOrCreate
	b ()V markDirty
	b (Lcom/google/gson/JsonElement;)V parseUniformNode
	b (Ljava/lang/String;)Ldey; safeGetUniform
	c ()Ldfb; getVertexProgram
	d ()Ldfb; getFragmentProgram
	e ()V clear
	f ()V apply
	g ()Ljava/lang/String; getName
	h ()V updateLocations
net/minecraft/server/WorldGenFeatureBasaltColumns net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature
	a CANNOT_PLACE_ON
	a (Lnet/minecraft/server/GeneratorAccess;ILnet/minecraft/server/BlockPosition$MutableBlockPosition;)Z canPlaceAt
	a (Lnet/minecraft/server/GeneratorAccess;ILnet/minecraft/server/BlockPosition$MutableBlockPosition;I)Lnet/minecraft/server/BlockPosition; findSurface
	a (Lnet/minecraft/server/GeneratorAccess;ILnet/minecraft/server/BlockPosition;)Z isAirOrLavaOcean
	a (Lnet/minecraft/server/GeneratorAccess;ILnet/minecraft/server/BlockPosition;II)Z placeColumn
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;I)Lnet/minecraft/server/BlockPosition; findAir
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureBasaltColumnsConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
dzn net/minecraft/client/renderer/DimensionSpecialEffects
	a EFFECTS
	b sunriseCol
	c cloudLevel
	d hasGround
	e skyType
	f forceBrightLightmap
	g constantAmbientLight
	a ()F getCloudHeight
	a (FF)[F getSunriseColor
	a (II)Z isFoggyAt
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectArrayMap;)V lambda$static$0
	a (Lnet/minecraft/server/DimensionManager;)Ldzn; forType
	a (Lnet/minecraft/server/Vec3D;F)Lnet/minecraft/server/Vec3D; getBrightnessDependentFogColor
	b ()Z hasGround
	c ()Ldzn$d; skyType
	d ()Z forceBrightLightmap
	e ()Z constantAmbientLight
net/minecraft/server/LootItemConditionBlockStateProperty net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition
	a block
	b properties
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/Block;)Ldbk$a; hasBlockStateProperties
	a (Lnet/minecraft/server/LootItemConditionBlockStateProperty;)Lnet/minecraft/server/Block; access$100
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lnet/minecraft/server/LootItemConditionType; getType
	b (Lnet/minecraft/server/LootItemConditionBlockStateProperty;)Lnet/minecraft/server/CriterionTriggerProperties; access$200
dzq net/minecraft/client/renderer/FogRenderer
	a fogRed
	b fogGreen
	c fogBlue
	d targetBiomeFog
	e previousBiomeFog
	f biomeChangedTime
	a ()V setupNoFog
	a (Ldjh;FLdwl;IF)V setupColor
	a (Ldjh;Ldzq$a;FZ)V setupFog
	a (Ldwl;Lnet/minecraft/server/BiomeManager;FIII)Lnet/minecraft/server/Vec3D; lambda$setupColor$0
	b ()V levelFogColor
dzp net/minecraft/client/renderer/FaceInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g BY_FACING
	h infos
	i $VALUES
	a (I)Ldzp$b; getVertexInfo
	a (Lnet/minecraft/server/EnumDirection;)Ldzp; fromFacing
	a ([Ldzp;)V lambda$static$0
az$a net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance
	a effects
	a (Lnet/minecraft/server/CriterionConditionMobEffect;)Laz$a; hasEffects
	a (Lnet/minecraft/server/EntityPlayer;)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
eba$a net/minecraft/client/renderer/block/model/ItemModelGenerator$Span
	a facing
	b min
	c max
	d anchor
	a ()Leba$b; getFacing
	a (I)V expand
	b ()I getMin
	c ()I getMax
	d ()I getAnchor
dzs net/minecraft/client/renderer/GpuWarnlistManager
	a LOGGER
	b GPU_WARNLIST_LOCATION
	c warnings
	d showWarning
	e warningDismissed
	f skipFabulous
	a ()Z hasWarnings
	a (Lcom/google/gson/JsonArray;Ljava/util/List;)V compilePatterns
	a (Ldzs$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V lambda$getAllWarnings$0
	a (Ljava/util/List;Lcom/google/gson/JsonElement;)V lambda$compilePatterns$1
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ldzs$a; prepare
	b ()Z willShowWarning
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
	c (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Lcom/google/gson/JsonObject; parseJson
	d ()V showWarning
	e ()V dismissWarning
	f ()V dismissWarningAndSkipFabulous
	g ()Z isShowingWarning
	h ()Z isSkippingFabulous
	i ()V resetWarnings
	j ()Ljava/lang/String; getRendererWarnings
	k ()Ljava/lang/String; getVersionWarnings
	l ()Ljava/lang/String; getVendorWarnings
	m ()Ljava/lang/String; getAllWarnings
ahb$d net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk
	a sides
	b sections
	c level
	d x
	e z
	f blockEntities
	a ()Lcom/mojang/serialization/Dynamic; write
	a (I)Lcom/mojang/serialization/Dynamic; getBlock
	a (ILcom/mojang/serialization/Dynamic;)V setBlock
	a (ILnet/minecraft/server/ChunkConverterPalette$Direction;)I relative
	a (Lcom/mojang/serialization/Dynamic;)V lambda$null$2
	a (Ljava/util/stream/Stream;)V lambda$new$3
	b (I)Lcom/mojang/serialization/Dynamic; getBlockEntity
	b (Lcom/mojang/serialization/Dynamic;)V lambda$null$0
	b (Ljava/util/stream/Stream;)V lambda$new$1
	c (I)Lcom/mojang/serialization/Dynamic; removeBlockEntity
	d (I)Lahb$c; getSection
dzr net/minecraft/client/renderer/GameRenderer
	A itemActivationTicks
	B itemActivationOffX
	C itemActivationOffY
	D postEffect
	E EFFECTS
	F effectIndex
	G effectActive
	H mainCamera
	a itemInHandRenderer
	b EFFECT_NONE
	c NAUSEA_LOCATION
	d LOGGER
	e minecraft
	f resourceManager
	g random
	h renderDistance
	i mapRenderer
	j renderBuffers
	k tick
	l fov
	m oldFov
	n darkenWorldAmount
	o darkenWorldAmountO
	p renderHand
	q renderBlockOutline
	r lastScreenshotAttempt
	s lastActiveTime
	t lightTexture
	u overlayTexture
	v panoramicMode
	w zoom
	x zoomX
	y zoomY
	z itemActivationItem
	a ()V shutdownEffect
	a (F)V pick
	a (FFF)V renderZoomed
	a (FJLdfj;)V renderLevel
	a (FJZ)V render
	a (II)V resize
	a (IIF)V renderItemActivationAnimation
	a (Ldeq;)V lambda$takeAutoScreenshot$5
	a (Ldfj;F)V bobHurt
	a (Ldfj;Ldjh;F)V renderItemInHand
	a (Ldjh;FZ)Lnet/minecraft/server/Matrix4f; getProjectionMatrix
	a (Lnet/minecraft/server/Entity;)V checkEntityPostEffect
	a (Lnet/minecraft/server/EntityLiving;F)F getNightVisionScale
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/server/ItemStack;)V displayItemActivation
	a (Lnet/minecraft/server/Matrix4f;)V resetProjectionMatrix
	a (Lnet/minecraft/server/MinecraftKey;)V loadEffect
	a (Z)V setRenderHand
	b ()V togglePostEffect
	b (F)F getDarkenWorldAmount
	b (II)Ljava/lang/String; lambda$render$3
	b (Ldfj;F)V bobView
	b (Ldjh;FZ)D getFov
	b (Lnet/minecraft/server/Entity;)Z lambda$pick$0
	b (Z)V setRenderBlockOutline
	c (F)V renderConfusionOverlay
	c (Z)V setPanoramicMode
	d ()V cycleEffect
	e ()V tick
	f ()Leab; currentEffect
	g ()V resetData
	h ()Ldku; getMapRenderer
	i ()Ldjw; getMinecraft
	j ()F getRenderDistance
	k ()Ldjh; getMainCamera
	l ()Ldzx; lightTexture
	m ()Lejo; overlayTexture
	n ()V tickFov
	o ()V takeAutoScreenshot
	p ()Z shouldRenderBlockOutline
	q ()Ljava/lang/String; lambda$render$4
	r ()Ljava/lang/String; lambda$render$2
	s ()Ljava/lang/String; lambda$render$1
ahb$c net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section
	a y
	b palette
	c listTag
	d section
	e hasData
	f toFix
	g update
	h seen
	i buffer
	a ()Lcom/mojang/serialization/Dynamic; write
	a (I)Lcom/mojang/serialization/Dynamic; getBlock
	a (II)V addFix
	a (ILcom/mojang/serialization/Dynamic;)V setBlock
	a (Lahb$c;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; access$300
	a (Ljava/nio/ByteBuffer;)Lahb$a; lambda$upgrade$1
	b (I)I upgrade
	b (Lahb$c;)Lit/unimi/dsi/fastutil/ints/IntList; access$2000
	b (Ljava/nio/ByteBuffer;)Lahb$a; lambda$upgrade$0
dzu net/minecraft/client/renderer/ItemInHandRenderer
	a MAP_BACKGROUND
	b MAP_BACKGROUND_CHECKERBOARD
	c minecraft
	d mainHandItem
	e offHandItem
	f mainHandHeight
	g oMainHandHeight
	h offHandHeight
	i oOffHandHeight
	j entityRenderDispatcher
	k itemRenderer
	a ()V tick
	a (F)F calculateMapTilt
	a (FLdfj;Ldzy$a;Ldze;I)V renderHandsWithItems
	a (Ldfj;FLnet/minecraft/server/EnumMainHand;Lnet/minecraft/server/ItemStack;)V applyEatTransform
	a (Ldfj;Ldzy;IFFF)V renderTwoHandedMap
	a (Ldfj;Ldzy;IFFLnet/minecraft/server/EnumMainHand;)V renderPlayerArm
	a (Ldfj;Ldzy;IFLnet/minecraft/server/EnumMainHand;FLnet/minecraft/server/ItemStack;)V renderOneHandedMap
	a (Ldfj;Ldzy;ILnet/minecraft/server/EnumMainHand;)V renderMapHand
	a (Ldfj;Ldzy;ILnet/minecraft/server/ItemStack;)V renderMap
	a (Ldfj;Lnet/minecraft/server/EnumMainHand;F)V applyItemArmAttackTransform
	a (Ldzb;FFLnet/minecraft/server/EnumHand;FLnet/minecraft/server/ItemStack;FLdfj;Ldzy;I)V renderArmWithItem
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lebe$b;ZLdfj;Ldzy;I)V renderItem
	a (Lnet/minecraft/server/EnumHand;)V itemUsed
	b (Ldfj;Lnet/minecraft/server/EnumMainHand;F)V applyItemArmTransform
eba$b net/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing
	a UP
	b DOWN
	c LEFT
	d RIGHT
	e direction
	f xOffset
	g yOffset
	h $VALUES
	a ()Lnet/minecraft/server/EnumDirection; getDirection
	a (Leba$b;)Z access$000
	b ()I getXOffset
	c ()I getYOffset
	d ()Z isHorizontal
dzt net/minecraft/client/renderer/ItemBlockRenderTypes
	a TYPE_BY_BLOCK
	b TYPE_BY_FLUID
	c renderCutout
	a (Ljava/util/HashMap;)V lambda$static$1
	a (Lnet/minecraft/server/Fluid;)Leag; getRenderLayer
	a (Lnet/minecraft/server/IBlockData;)Leag; getChunkRenderType
	a (Lnet/minecraft/server/IBlockData;Z)Leag; getRenderType
	a (Lnet/minecraft/server/ItemStack;Z)Leag; getRenderType
	a (Z)V setFancy
	b (Ljava/util/HashMap;)V lambda$static$0
	b (Lnet/minecraft/server/IBlockData;)Leag; getMovingBlockRenderType
ahb$a net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer
	a data
	a (I)Z isFirst
	a (III)I get
	b (I)I getPosition
dzw net/minecraft/client/renderer/LevelRenderer
	A destroyingBlocks
	B destructionProgress
	C playingRecords
	D entityTarget
	E entityEffect
	F translucentTarget
	G itemEntityTarget
	H particlesTarget
	I weatherTarget
	J cloudsTarget
	K transparencyChain
	L lastCameraX
	M lastCameraY
	N lastCameraZ
	O lastCameraChunkX
	P lastCameraChunkY
	Q lastCameraChunkZ
	R prevCamX
	S prevCamY
	T prevCamZ
	U prevCamRotX
	V prevCamRotY
	W prevCloudX
	X prevCloudY
	Y prevCloudZ
	Z prevCloudColor
	a DIRECTIONS
	aa prevCloudsType
	ab chunkRenderDispatcher
	ac format
	ad lastViewDistance
	ae renderedEntities
	af culledEntities
	ag captureFrustum
	ah capturedFrustum
	ai frustumPoints
	aj frustumPos
	ak xTransparentOld
	al yTransparentOld
	am zTransparentOld
	an needsUpdate
	ao frameId
	ap rainSoundTime
	aq rainSizeX
	ar rainSizeZ
	b LOGGER
	c MOON_LOCATION
	d SUN_LOCATION
	e CLOUDS_LOCATION
	f END_SKY_LOCATION
	g FORCEFIELD_LOCATION
	h RAIN_LOCATION
	i SNOW_LOCATION
	j minecraft
	k textureManager
	l entityRenderDispatcher
	m renderBuffers
	n level
	o chunksToCompile
	p renderChunks
	q globalBlockEntities
	r viewArea
	s skyFormat
	t starBuffer
	u skyBuffer
	v darkBuffer
	w generateClouds
	x cloudBuffer
	y frameTimes
	z ticks
	a ()V initOutline
	a (DDD)Ljava/lang/String; lambda$addParticle$4
	a (II)V resize
	a (III)V setSectionDirtyWithNeighbors
	a (IIIIII)V setBlocksDirty
	a (IIIZ)V setSectionDirty
	a (ILnet/minecraft/server/BlockPosition;I)V globalLevelEvent
	a (J)V compileChunksUntil
	a (Ldfe;)V drawStars
	a (Ldfe;DDDDDDFFFF)V addChainedFilledBoxVertices
	a (Ldfe;DDDDIDFF)V vertex
	a (Ldfe;DDDLnet/minecraft/server/Vec3D;)V buildClouds
	a (Ldfe;FZ)V drawSkyHemisphere
	a (Ldfj;)V checkPoseStack
	a (Ldfj;F)V renderSky
	a (Ldfj;FDDD)V renderClouds
	a (Ldfj;FJZLdjh;Ldzr;Ldzx;Lnet/minecraft/server/Matrix4f;)V renderLevel
	a (Ldfj;Ldfn;DDDDDDFFFF)V renderLineBox
	a (Ldfj;Ldfn;DDDDDDFFFFFFF)V renderLineBox
	a (Ldfj;Ldfn;Lnet/minecraft/server/AxisAlignedBB;FFFF)V renderLineBox
	a (Ldfj;Ldfn;Lnet/minecraft/server/Entity;DDDLnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V renderHitOutline
	a (Ldfj;Ldfn;Lnet/minecraft/server/VoxelShape;DDDFFFF)V renderVoxelShape
	a (Ldfn;DDDDDDFFFF)V renderLineBox
	a (Ldfn;I)V addFrustumVertex
	a (Ldfn;IIIIIII)V addFrustumQuad
	a (Ldfn;Lnet/minecraft/server/Matrix4f;DDDFFFFDDDDDD)V lambda$renderShape$3
	a (Ldjh;)V tickRain
	a (Ldjh;Lecr;ZIZ)V setupRender
	a (Ldwl;)V setLevel
	a (Ldzx;FDDD)V renderSnowAndRain
	a (Ldzy$a;Ldfn;Leag;)Ldfn; lambda$renderLevel$1
	a (Leag;)Ljava/lang/String; lambda$renderChunkLayer$2
	a (Leag;Ldfj;DDD)V renderChunkLayer
	a (Ljava/util/Collection;Ljava/util/Collection;)V updateGlobalBlockEntities
	a (Lnet/minecraft/server/BlockPosition;Ldzw$a;)D lambda$setupRender$0
	a (Lnet/minecraft/server/BlockPosition;Lecm$c;)Z isAdjacentChunk
	a (Lnet/minecraft/server/BlockPosition;Lecm$c;Lnet/minecraft/server/EnumDirection;)Lecm$c; getRelativeFrom
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V setBlockDirty
	a (Lnet/minecraft/server/BlockPosition;Z)V setBlockDirty
	a (Lnet/minecraft/server/Entity;D)Lnet/minecraft/server/Vector3fa; getViewVector
	a (Lnet/minecraft/server/Entity;DDDFLdfj;Ldzy;)V renderEntity
	a (Lnet/minecraft/server/EntityHuman;ILnet/minecraft/server/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Z canSee
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/Vector3fa;)Z canSee
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;I)V blockChanged
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;)I getLightColor
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)I getLightColor
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/server/Matrix4f;Lnet/minecraft/server/Matrix4f;DDDLecr;)V captureFrustum
	a (Lnet/minecraft/server/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/server/ParticleParam;ZDDDDDD)V addParticle
	a (Lnet/minecraft/server/ParticleParam;ZZDDDDDD)V addParticle
	a (Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/BlockPosition;)V playStreamingMusic
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)V notifyNearbyEntities
	a (Lzq;)V removeProgress
	a (Z)Ldkb; calculateParticleLevel
	b ()V doEntityOutline
	b (III)V setSectionDirty
	b (ILnet/minecraft/server/BlockPosition;I)V destroyBlockProgress
	b (J)Ljava/util/SortedSet; lambda$destroyBlockProgress$5
	b (Ldfj;)V renderEndSky
	b (Ldfj;Ldfn;Lnet/minecraft/server/VoxelShape;DDDFFFF)V renderShape
	b (Ldjh;)V renderDebug
	b (Lnet/minecraft/server/ParticleParam;ZDDDDDD)Ldxy; addParticleInternal
	b (Lnet/minecraft/server/ParticleParam;ZZDDDDDD)Ldxy; addParticleInternal
	c (Ldjh;)V renderWorldBounds
	d ()Z shouldShowEntityOutlines
	e ()V allChanged
	f ()V resetChunksToCompile
	g ()Ljava/lang/String; getChunkStatistics
	h ()I countRenderedChunks
	i ()Ljava/lang/String; getEntityStatistics
	j ()V captureFrustum
	k ()V killFrustum
	l ()V tick
	m ()V clear
	n ()Z hasRenderedAllChunks
	o ()V needsUpdate
	p ()Lded; entityTarget
	q ()Lded; getTranslucentTarget
	r ()Lded; getItemEntityTarget
	s ()Lded; getParticlesTarget
	t ()Lded; getWeatherTarget
	u ()Lded; getCloudsTarget
	v ()V initTransparency
	w ()V deinitTransparency
	x ()V createDarkSky
	y ()V createLightSky
	z ()V createStars
net/minecraft/server/EntityIllagerIllusioner net/minecraft/world/entity/monster/Illusioner
	bo clientSideIllusionTicks
	bp clientSideIllusionOffsets
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	cc ()Lnet/minecraft/server/AxisAlignedBB; getBoundingBoxForCulling
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eL ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	eM ()Lnet/minecraft/server/SoundEffect; getCastingSoundEvent
	k ()V aiStep
	m ()Lbcv$a; getArmPose
	o ()V registerGoals
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
	y (F)[Lnet/minecraft/server/Vec3D; getIllusionOffsets
dzv net/minecraft/client/renderer/ItemModelShaper
	a shapes
	b shapesCache
	c modelManager
	a ()Lell; getModelManager
	a (Lnet/minecraft/server/IMaterial;)Leju; getParticleIcon
	a (Lnet/minecraft/server/Item;)Lelg; getItemModel
	a (Lnet/minecraft/server/Item;Lelm;)V register
	a (Lnet/minecraft/server/ItemStack;)Leju; getParticleIcon
	b ()V rebuildCache
	b (Lnet/minecraft/server/Item;)I getIndex
	b (Lnet/minecraft/server/ItemStack;)Lelg; getItemModel
dzy net/minecraft/client/renderer/MultiBufferSource
	a (Ldfe;)Ldzy$a; immediate
	a (Ljava/util/Map;Ldfe;)Ldzy$a; immediateWithBuffers
dzx net/minecraft/client/renderer/LightTexture
	a lightTexture
	b lightPixels
	c lightTextureLocation
	d updateLightTexture
	e blockLightRedFlicker
	f renderer
	g minecraft
	a ()V tick
	a (F)V updateLightTexture
	a (I)I block
	a (II)I pack
	a (Lnet/minecraft/server/World;I)F getBrightness
	b ()V turnOffLightLayer
	b (F)F notGamma
	b (I)I sky
	c ()V turnOnLightLayer
drl$a$a net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton$Pos
	a ingredients
	b x
	c y
	d this$1
net/minecraft/server/PathfinderGoalWrapped net/minecraft/world/entity/ai/goal/WrappedGoal
	a goal
	b priority
	c isRunning
	C_ ()Z isInterruptable
	a ()Z canUse
	a (Ljava/util/EnumSet;)V setFlags
	a (Lnet/minecraft/server/PathfinderGoalWrapped;)Z canBeReplacedBy
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z isRunning
	h ()I getPriority
	i ()Ljava/util/EnumSet; getFlags
	j ()Lnet/minecraft/server/PathfinderGoal; getGoal
net/minecraft/server/EntityMinecartCommandBlock net/minecraft/world/entity/vehicle/MinecartCommandBlock
	COMMAND DATA_ID_COMMAND_NAME
	c DATA_ID_LAST_OUTPUT
	d commandBlock
	e lastActivated
	a (IIIZ)V activateMinecart
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interact
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	ci ()Z onlyOpCanSetNbt
	e ()V defineSynchedData
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	v ()Lnet/minecraft/server/DataWatcherObject; access$000
	x ()Lnet/minecraft/server/DataWatcherObject; access$100
dzz net/minecraft/client/renderer/OutlineBufferSource
	a bufferSource
	b outlineBufferSource
	c teamR
	d teamG
	e teamB
	f teamA
	a ()V endOutlineBatch
	a (IIII)V setColor
net/minecraft/server/DragonControllerLandedSearch net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase
	b CHARGE_TARGETING
	c scanTargeting
	d scanningTime
	a (Lnet/minecraft/server/EntityEnderDragon;Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
	c ()V doServerTick
	d ()V begin
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
elo$a net/minecraft/client/resources/model/MultiPartBakedModel$Builder
	a selectors
	a ()Lelg; build
	a (Ljava/util/function/Predicate;Lelg;)V add
net/minecraft/server/WorldMap net/minecraft/world/level/saveddata/maps/MapItemSavedData
	centerX x
	centerZ z
	humans carriedByPlayers
	i carriedBy
	k LOGGER
	m bannerMarkers
	map dimension
	n frameMarkers
	track trackingPosition
	a ()Ljava/util/Collection; getBanners
	a (DDI)V setOrigin
	a (IIIZZLnet/minecraft/server/ResourceKey;)V setProperties
	a (Lnet/minecraft/server/BlockPosition;I)V removedFromFrame
	a (Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/WorldMap$WorldMapHumanTracker; getHoldingPlayer
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)V tickCarriedBy
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V toggleBanner
	a (Lnet/minecraft/server/IBlockAccess;II)V checkBanners
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Packet; getUpdatePacket
	a (Lnet/minecraft/server/MapIcon$Type;Lnet/minecraft/server/GeneratorAccess;Ljava/lang/String;DDDLnet/minecraft/server/IChatBaseComponent;)V addDecoration
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTBase;)V lambda$save$1
	a (Lnet/minecraft/server/WorldMap;)V lockData
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c (Lnet/minecraft/server/NBTTagCompound;)Ljava/lang/IllegalArgumentException; lambda$load$0
	decorateMap (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;Ljava/lang/String;Lnet/minecraft/server/MapIcon$Type;)V addTargetDecoration
	flagDirty (II)V setDirty
net/minecraft/server/StructureSettingsStronghold net/minecraft/world/level/levelgen/feature/configurations/StrongholdConfiguration
	a CODEC
	b distance
	c spread
	d count
	a ()I distance
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	b ()I spread
	c ()I count
bl$a net/minecraft/advancements/critereon/FluidPredicate$Builder
	a fluid
	b fluids
	c properties
	a ()Lbl$a; fluid
	a (Lnet/minecraft/server/CriterionTriggerProperties;)Lbl$a; setProperties
	a (Lnet/minecraft/server/FluidType;)Lbl$a; of
	a (Lnet/minecraft/server/Tag;)Lbl$a; of
	b ()Lnet/minecraft/server/CriterionConditionFluid; build
dph$a net/minecraft/client/gui/screens/controls/ControlList$CategoryEntry
	a this$0
	b name
	c width
	a (Ldfj;IIIIIIIZF)V render
	av_ ()Ljava/util/List; children
	c_ (Z)Z changeFocus
dph$c net/minecraft/client/gui/screens/controls/ControlList$KeyEntry
	a this$0
	b key
	c name
	d changeButton
	e resetButton
	a (DDI)Z mouseClicked
	a (Ldfj;IIIIIIIZF)V render
	a (Ldjt;Ldlg;)V lambda$new$1
	av_ ()Ljava/util/List; children
	b (Ldjt;Ldlg;)V lambda$new$0
	c (DDI)Z mouseReleased
ml$a net/minecraft/nbt/LongTag$Cache
	a cache
dph$b net/minecraft/client/gui/screens/controls/ControlList$Entry
net/minecraft/server/WorldGenFeatureRuinedPortalConfiguration net/minecraft/world/level/levelgen/feature/configurations/RuinedPortalConfiguration
	a CODEC
	b portalType
	a (Lnet/minecraft/server/WorldGenFeatureRuinedPortalConfiguration;)Lnet/minecraft/server/WorldGenFeatureRuinedPortal$Type; lambda$static$0
net/minecraft/server/WorldGenFeatureFlower net/minecraft/world/level/levelgen/feature/DefaultFlowerFeature
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/BlockPosition; getPos
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Lnet/minecraft/server/BlockPosition; getPos
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z isValid
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Z isValid
	a (Lnet/minecraft/server/WorldGenFeatureConfiguration;)I getCount
	a (Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)I getCount
	b (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/IBlockData; getRandomFlower
	b (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Lnet/minecraft/server/IBlockData; getRandomFlower
net/minecraft/server/EntityPlayer net/minecraft/server/level/ServerPlayer
	advancementDataPlayer advancements
	bJ LOGGER
	bY chatVisibility
	bZ canChatColor
	ca lastActionTime
	cd seenCredits
	cf levitationStartPos
	cg levitationStartTime
	ch disconnected
	ci enteredNetherPosition
	cj lastSectionPos
	e ignoreSlotUpdateHack
	invulnerableTicks spawnInvulnerableTime
	lastAirScored lastRecordedAirLevel
	lastArmorScored lastRecordedArmor
	lastExpLevelScored lastRecordedLevel
	lastExpTotalScored lastRecordedExperience
	lastFoodScored lastRecordedFoodLevel
	lastFoodSent lastSentFood
	lastHealthScored lastRecordedHealthAndAbsorption
	lastHealthSent lastSentHealth
	lastSentSaturationZero lastFoodSaturationZero
	ping latency
	playerConnection connection
	playerInteractManager gameMode
	removeQueue entitiesToRemove
	serverStatisticManager stats
	spawn respawnPosition
	spawnAngle respawnAngle
	spawnDimension respawnDimension
	spawnForced respawnForced
	spectatedEntity camera
	viewingCredits wonGame
	worldChangeInvuln isChangingDimension
	C ()V updateInvisibilityStatus
	E ()V processPortalCooldown
	F ()J getLastActionTime
	H ()Z isChangingDimension
	I ()V hasChangedDimension
	O ()Lnet/minecraft/server/SectionPosition; getLastSectionPos
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (DDD)V teleportTo
	a (DZ)V doCheckFallDamage
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (FFZZ)V setPlayerInput
	a (I)V setExperiencePoints
	a (ILnet/minecraft/server/MerchantRecipeList;IIZZ)V sendMerchantOffers
	a (ILnet/minecraft/server/ScoreboardScore;)V lambda$awardStat$8
	a (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/server/IScoreboardCriteria;)V handleTeamKill
	a (Ljava/util/Collection;)I awardRecipes
	a (Lnet/minecraft/server/ArgumentAnchor$Anchor;Lnet/minecraft/server/Entity;Lnet/minecraft/server/ArgumentAnchor$Anchor;)V lookAt
	a (Lnet/minecraft/server/ArgumentAnchor$Anchor;Lnet/minecraft/server/Vec3D;)V lookAt
	a (Lnet/minecraft/server/BlockPosition;)Lcom/mojang/datafixers/util/Either; startSleepInBed
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z bedInRange
	a (Lnet/minecraft/server/ChatMessageType;Lnet/minecraft/server/IChatBaseComponent;Ljava/util/UUID;Lio/netty/util/concurrent/Future;)V lambda$sendMessage$9
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V untrackChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/Packet;Lnet/minecraft/server/Packet;)V trackChunk
	a (Lnet/minecraft/server/Container;II)V setContainerData
	a (Lnet/minecraft/server/Container;ILnet/minecraft/server/ItemStack;)V slotChanged
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/NonNullList;)V refreshContainer
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/Entity;)V crit
	a (Lnet/minecraft/server/Entity;I)V take
	a (Lnet/minecraft/server/Entity;ILnet/minecraft/server/DamageSource;)V awardKillScore
	a (Lnet/minecraft/server/Entity;Z)Z startRiding
	a (Lnet/minecraft/server/EntityHorseAbstract;Lnet/minecraft/server/IInventory;)V openHorseInventory
	a (Lnet/minecraft/server/EntityHuman;)Z canHarmPlayer
	a (Lnet/minecraft/server/EntityInsentient;)V lambda$tellNeutralMobsThatIDied$5
	a (Lnet/minecraft/server/EntityMonster;)Z lambda$startSleepInBed$6
	a (Lnet/minecraft/server/EntityPlayer;)Z broadcastToPlayer
	a (Lnet/minecraft/server/EnumGamemode;)V setGameMode
	a (Lnet/minecraft/server/EnumHand;)V swing
	a (Lnet/minecraft/server/IBlockData;)V onInsideBlock
	a (Lnet/minecraft/server/IChatBaseComponent;Lio/netty/util/concurrent/Future;)V lambda$die$3
	a (Lnet/minecraft/server/IChatBaseComponent;Ljava/util/UUID;)V sendMessage
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/ChatMessageType;Ljava/util/UUID;)V sendMessage
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; lambda$null$2
	a (Lnet/minecraft/server/IChatBaseComponent;Z)V displayClientMessage
	a (Lnet/minecraft/server/IScoreboardCriteria;I)V updateScoreForCriteria
	a (Lnet/minecraft/server/ITileInventory;)Ljava/util/OptionalInt; openMenu
	a (Lnet/minecraft/server/ItemStack;I)V onEnchantmentPerformed
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)V openItemGui
	a (Lnet/minecraft/server/ItemStack;ZZ)Lnet/minecraft/server/EntityItem; drop
	a (Lnet/minecraft/server/MobEffect;)V onEffectAdded
	a (Lnet/minecraft/server/MobEffect;Z)V onEffectUpdated
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTBase;)V lambda$addAdditionalSaveData$0
	a (Lnet/minecraft/server/PacketPlayInSettings;)V updateOptions
	a (Lnet/minecraft/server/SectionPosition;)V setLastSectionPos
	a (Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playNotifySound
	a (Lnet/minecraft/server/Statistic;)V resetStat
	a (Lnet/minecraft/server/Statistic;I)V awardStat
	a (Lnet/minecraft/server/TileEntity;)V broadcast
	a (Lnet/minecraft/server/TileEntityCommand;)V openCommandBlock
	a (Lnet/minecraft/server/TileEntitySign;)V openTextEdit
	a (Lnet/minecraft/server/Unit;)V lambda$startSleepInBed$7
	a (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/ShapeDetectorShape; findDimensionEntryPoint
	a (Lnet/minecraft/server/WorldServer;DDDFF)V teleportTo
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V createEndPlatform
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Z)Ljava/util/Optional; getExitPortal
	a (ZZ)V stopSleepInBed
	a ([Lnet/minecraft/server/MinecraftKey;)V awardRecipesByKey
	a_ ()Z isSpectator
	b (DDD)V moveTo
	b (I)V setExperienceLevels
	b (ILnet/minecraft/server/ScoreboardScore;)V lambda$updateScoreForCriteria$1
	b (Ljava/util/Collection;)I resetRecipes
	b (Lnet/minecraft/server/BlockPosition;)V startSleeping
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z bedBlocked
	b (Lnet/minecraft/server/DamageSource;)Z isInvulnerableTo
	b (Lnet/minecraft/server/Entity;)V magicCrit
	b (Lnet/minecraft/server/EntityInsentient;)Z lambda$tellNeutralMobsThatIDied$4
	b (Lnet/minecraft/server/MobEffect;)V onEffectRemoved
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/Entity; changeDimension
	b_ ()Z isCreative
	c (I)V giveExperienceLevels
	c (Lnet/minecraft/server/BlockPosition;)V onChangedBlock
	c (Lnet/minecraft/server/Entity;)V sendRemoveEntity
	c (Lnet/minecraft/server/WorldServer;)V fudgeSpawnLocation
	canPvP ()Z isPvpAllowed
	copyFrom (Lnet/minecraft/server/EntityPlayer;Z)V restoreFrom
	d (I)V giveExperiencePoints
	d (Lnet/minecraft/server/Entity;)V cancelRemoveEntity
	eV ()V tellNeutralMobsThatIDied
	f (Lnet/minecraft/server/Entity;)V attack
	g ()V onEnterCombat
	g (Lnet/minecraft/server/BlockPosition;)Z isReachableBedBlock
	getAdvancementData ()Lnet/minecraft/server/AdvancementDataPlayer; getAdvancements
	getChatFlags ()Lnet/minecraft/server/EnumChatVisibility; getChatVisibility
	getPlayerListName ()Lnet/minecraft/server/IChatBaseComponent; getTabListDisplayName
	getSpawn ()Lnet/minecraft/server/BlockPosition; getRespawnPosition
	getSpawnAngle ()F getRespawnAngle
	getSpawnDimension ()Lnet/minecraft/server/ResourceKey; getRespawnDimension
	getSpecatorTarget ()Lnet/minecraft/server/Entity; getCamera
	getStatisticManager ()Lnet/minecraft/server/ServerStatisticManager; getStats
	getWorldServer ()Lnet/minecraft/server/WorldServer; getLevel
	h ()V onLeaveCombat
	i ()Lnet/minecraft/server/ItemCooldown; createItemCooldowns
	isSpawnForced ()Z isRespawnForced
	j ()V tick
	l ()V stopRiding
	m ()V closeContainer
	o ()V doCloseContainer
	p ()V disconnect
	playerTick ()V doTick
	q ()Z hasDisconnected
	resetIdleTimer ()V resetLastActionTime
	s ()V completeUsingItem
	setResourcePack (Ljava/lang/String;Ljava/lang/String;)V sendTexturePack
	setSpectatorTarget (Lnet/minecraft/server/Entity;)V setCamera
	syncInventory ()V initMenu
	t ()V onUpdateAbilities
	triggerDimensionAdvancements (Lnet/minecraft/server/WorldServer;)V triggerDimensionChangeTriggers
	triggerHealthUpdate ()V resetSentInfo
	u (I)I getCoprime
	updateInventory (Lnet/minecraft/server/Container;)V refreshContainer
	v ()Ljava/lang/String; getIpAddress
	w ()Z canChatInColor
	y ()I getPermissionLevel
net/minecraft/server/EnumBannerPatternType net/minecraft/world/level/block/entity/BannerPattern
	P COUNT
	Q PATTERN_ITEM_COUNT
	R AVAILABLE_PATTERNS
	S VALUES
	T hasPatternItem
	U filename
	V hashname
	W $VALUES
	a ()Ljava/lang/String; getFilename
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumBannerPatternType; byHash
	a (Lnet/minecraft/server/EnumBannerPatternType;)Ljava/lang/String; access$000
	a (Z)Lnet/minecraft/server/MinecraftKey; location
	b ()Ljava/lang/String; getHashname
	b (Lnet/minecraft/server/EnumBannerPatternType;)Z lambda$static$0
net/minecraft/server/DefinedStructure net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate
	a palettes
	b entityInfoList
	c size
	d author
	a ()Lnet/minecraft/server/BlockPosition; getSize
	a (IIILnet/minecraft/server/GeneratorAccess;ILnet/minecraft/server/EnumDirection;III)V lambda$updateShapeAtEdge$4
	a (Ljava/lang/String;)V setAuthor
	a (Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List; buildInfoList
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/Block;)Ljava/util/List; filterBlocks
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/Block;Z)Ljava/util/List; filterBlocks
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockMirror;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getZeroPositionWithTransform
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockMirror;Lnet/minecraft/server/EnumBlockRotation;II)Lnet/minecraft/server/BlockPosition; getZeroPositionWithTransform
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockMirror;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; transform
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/DefinedStructure$BlockInfo;)I lambda$buildInfoList$2
	a (Lnet/minecraft/server/DefinedStructure$BlockInfo;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V addToLists
	a (Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; calculateRelativePosition
	a (Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; calculateConnectedPosition
	a (Lnet/minecraft/server/Entity;)Z lambda$fillEntityList$3
	a (Lnet/minecraft/server/EnumBlockMirror;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/Vec3D;ZLnet/minecraft/server/WorldAccess;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/Entity;)V lambda$placeEntities$5
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/EnumBlockRotation;IILnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)V mirrorAABB
	a (Lnet/minecraft/server/GeneratorAccess;ILnet/minecraft/server/VoxelShapeDiscrete;III)V updateShapeAtEdge
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;Ljava/util/List;)Ljava/util/List; processBlockInfos
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/NBTTagList;Lnet/minecraft/server/NBTTagList;)V loadPalette
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumBlockMirror;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Vec3D; transform
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)V fillEntityList
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/Block;)V fillFromWorld
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;Ljava/util/Random;I)Z placeInWorld
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;Ljava/util/Random;)V placeInWorldChunk
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockMirror;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;Z)V placeEntities
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/NBTTagCompound;)Ljava/util/Optional; createEntityIgnoreException
	a ([D)Lnet/minecraft/server/NBTTagList; newDoubleList
	a ([I)Lnet/minecraft/server/NBTTagList; newIntegerList
	b ()Ljava/lang/String; getAuthor
	b (Lnet/minecraft/server/DefinedStructure$BlockInfo;)I lambda$buildInfoList$1
	b (Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	b (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;Ljava/util/Random;)V placeInWorld
	c (Lnet/minecraft/server/DefinedStructure$BlockInfo;)I lambda$buildInfoList$0
net/minecraft/server/EntityTNTPrimed net/minecraft/world/entity/item/PrimedTnt
	FUSE_TICKS DATA_FUSE_ID
	fuseTicks life
	source owner
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aB ()Z isMovementNoisy
	aS ()Z isPickable
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	e ()V defineSynchedData
	getFuseTicks ()I getLife
	getSource ()Lnet/minecraft/server/EntityLiving; getOwner
	h ()I getFuse
	j ()V tick
	setFuseTicks (I)V setFuse
net/minecraft/server/RecipeCrafting net/minecraft/world/item/crafting/CraftingRecipe
	g ()Lnet/minecraft/server/Recipes; getType
net/minecraft/server/BlockPropertyHalf net/minecraft/world/level/block/state/properties/Half
	c name
	d $VALUES
	a ()Ljava/lang/String; getSerializedName
net/minecraft/server/EntityPerchable net/minecraft/world/entity/animal/ShoulderRidingEntity
	bq rideCooldownCounter
	d (Lnet/minecraft/server/EntityPlayer;)Z setEntityOnShoulder
	eY ()Z canSitOnShoulder
	j ()V tick
net/minecraft/server/DataConverterKeybind net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix
	a MAP
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$3
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	a (Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
net/minecraft/server/BehaviorLookTarget net/minecraft/world/entity/ai/behavior/SetEntityLookTarget
	b predicate
	c maxDistSqr
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/EntityLiving;)V lambda$null$5
	a (Lnet/minecraft/server/EntityLiving;)Z lambda$new$3
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BehaviorController;Ljava/util/List;)V lambda$start$6
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$null$4
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/EntityLiving;)Z lambda$new$2
	a (Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/EntityLiving;)Z lambda$new$1
	a (Lnet/minecraft/server/Tag;Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
bzi$1 net/minecraft/world/level/block/RotatedPillarBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	b $SwitchMap$net$minecraft$world$level$block$Rotation
bip$1 net/minecraft/world/inventory/EnchantmentMenu$1
	a this$0
	X_ ()V setChanged
bip$2 net/minecraft/world/inventory/EnchantmentMenu$2
	a this$0
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
net/minecraft/server/PathfinderGoalCrossbowAttack$State net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState
	e $VALUES
doe$a net/minecraft/client/gui/screens/LoadingOverlay$LogoTexture
	b (Lnet/minecraft/server/IResourceManager;)Lejq$a; getTextureImage
dns$1 net/minecraft/client/gui/screens/CreateFlatWorldScreen$1
net/minecraft/server/AutoRecipeFurnace net/minecraft/recipebook/ServerPlaceSmeltingRecipe
	e recipeMatchesPlaced
	a ()V clearGrid
	a (ILit/unimi/dsi/fastutil/ints/IntList;)V placeRecipe
	a (Lnet/minecraft/server/IRecipe;Z)V handleRecipeClicked
emr$a net/minecraft/client/searchtree/ReloadableIdSearchTree$IntersectionIterator
	a firstIterator
	b secondIterator
	c orderT
net/minecraft/server/TileEntityContainer net/minecraft/world/level/block/entity/BaseContainerBlockEntity
	chestLock lockKey
	customName name
	Q ()Lnet/minecraft/server/IChatBaseComponent; getName
	S ()Lnet/minecraft/server/IChatBaseComponent; getCustomName
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ChestLock;Lnet/minecraft/server/IChatBaseComponent;)Z canUnlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	createContainer (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	e (Lnet/minecraft/server/EntityHuman;)Z canOpen
	getContainerName ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
net/minecraft/server/NameReferencingFileConverter net/minecraft/server/players/OldUsersConverter
	a OLD_IPBANLIST
	b OLD_USERBANLIST
	c OLD_OPLIST
	d OLD_WHITELIST
	e LOGGER
	a ()Lorg/apache/logging/log4j/Logger; access$000
	a (I)[Ljava/lang/String; lambda$lookupPlayers$1
	a (Ljava/io/File;)V access$400
	a (Ljava/io/File;Ljava/util/Map;)Ljava/util/List; readOldListFormat
	a (Ljava/lang/String;)Z lambda$lookupPlayers$0
	a (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; access$200
	a (Lnet/minecraft/server/DedicatedServer;)Z convertPlayers
	a (Lnet/minecraft/server/MinecraftServer;)Z convertUserBanlist
	a (Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID; convertMobOwnerIfNecessary
	a (Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V lookupPlayers
	b ()Z areOldUserlistsRemoved
	b (Ljava/io/File;)V ensureDirectoryExists
	b (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; parseDate
	b (Lnet/minecraft/server/MinecraftServer;)Z convertIpBanlist
	c (Ljava/io/File;)V renameOldFile
	c (Lnet/minecraft/server/MinecraftServer;)Z convertOpsList
	d (Lnet/minecraft/server/MinecraftServer;)Z convertWhiteList
	e (Lnet/minecraft/server/MinecraftServer;)Z serverReadyAfterUserconversion
	f (Lnet/minecraft/server/MinecraftServer;)Z areOldPlayersConverted
	getPlayersFolder (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; getWorldPlayersDirectory
net/minecraft/server/BiomeBase$Precipitation net/minecraft/world/level/biome/Biome$Precipitation
	d CODEC
	e BY_NAME
	f name
	g $VALUES
	a ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;)Lnet/minecraft/server/BiomeBase$Precipitation; byName
	a (Lnet/minecraft/server/BiomeBase$Precipitation;)Lnet/minecraft/server/BiomeBase$Precipitation; lambda$static$0
	b ()Ljava/lang/String; getName
net/minecraft/server/SensorNearestBed net/minecraft/world/entity/ai/sensing/NearestBedSensor
	a batchCache
	b triedCount
	c lastUpdate
	a ()Ljava/util/Set; requires
	a (Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z lambda$doTick$1
	a (Lnet/minecraft/server/BlockPosition;)Z lambda$doTick$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)V doTick
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
net/minecraft/server/LightEngineLayerEventListener$Void net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener
	b $VALUES
	a ()Z hasLightWork
	a (IZZ)I runUpdates
	a (Lnet/minecraft/server/BlockPosition;)V checkBlock
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/server/SectionPosition;)Lnet/minecraft/server/NibbleArray; getDataLayerData
	a (Lnet/minecraft/server/SectionPosition;Z)V updateSectionStatus
	b (Lnet/minecraft/server/BlockPosition;)I getLightValue
bip$3 net/minecraft/world/inventory/EnchantmentMenu$3
	a this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
net/minecraft/server/SensorGolemLastSeen net/minecraft/world/entity/ai/sensing/GolemSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/EntityLiving;)V checkForNearbyGolem
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	b (Lnet/minecraft/server/EntityLiving;)V golemDetected
	c (Lnet/minecraft/server/EntityLiving;)Z lambda$checkForNearbyGolem$0
net/minecraft/server/WorldGenFeatureFill net/minecraft/world/level/levelgen/feature/FillLayerFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureFillConfiguration;)Z place
net/minecraft/server/EntitySlime$PathfinderGoalSlimeRandomDirection net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal
	a slime
	b chosenDegrees
	c nextRandomizeTime
	a ()Z canUse
	e ()V tick
net/minecraft/server/DataPaletteGlobal net/minecraft/world/level/chunk/GlobalPalette
	a registry
	b defaultValue
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/server/NBTTagList;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()I getSize
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/AdvancementDisplay net/minecraft/advancements/DisplayInfo
	a title
	b description
	c icon
	d background
	e frame
	f showToast
	g announceChat
	h hidden
	i x
	j y
	a ()Lnet/minecraft/server/IChatBaseComponent; getTitle
	a (FF)V setLocation
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/AdvancementDisplay; fromJson
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	b (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ItemStack; getIcon
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/AdvancementDisplay; fromNetwork
	c ()Lnet/minecraft/server/ItemStack; getIcon
	d ()Lnet/minecraft/server/MinecraftKey; getBackground
	e ()Lnet/minecraft/server/AdvancementFrameType; getFrame
	f ()F getX
	g ()F getY
	h ()Z shouldShowToast
	i ()Z shouldAnnounceChat
	j ()Z isHidden
	k ()Lcom/google/gson/JsonElement; serializeToJson
	l ()Lcom/google/gson/JsonObject; serializeIcon
net/minecraft/server/EntitySalmon net/minecraft/world/entity/animal/Salmon
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/ItemStack; getBucketItemStack
	eM ()Lnet/minecraft/server/SoundEffect; getFlopSound
	eN ()I getMaxSchoolSize
bnw$1 net/minecraft/world/item/context/DirectionalPlaceContext$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/GenLayerPlains net/minecraft/world/level/newbiome/layer/RareBiomeSpotLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
net/minecraft/server/ChunkCache net/minecraft/world/level/PathNavigationRegion
	a centerX
	b centerZ
	c chunks
	d allEmpty
	e level
	a (II)Lnet/minecraft/server/IChunkAccess; getChunk
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	c (II)Lnet/minecraft/server/IBlockAccess; getChunkForCollisions
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	c (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; getEntityCollisions
	d (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IChunkAccess; getChunk
	d (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; getCollisions
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	f ()Lnet/minecraft/server/WorldBorder; getWorldBorder
dil$1 com/mojang/realmsclient/gui/screens/UploadResult$1
cgl$a net/minecraft/world/level/chunk/PalettedContainer$CountConsumer
net/minecraft/server/VoxelShapeDiscrete net/minecraft/world/phys/shapes/DiscreteVoxelShape
	a xSize
	b ySize
	c zSize
	d AXIS_VALUES
	a ()Z isEmpty
	a (IIII)Z isZStripFull
	a (IIIII)Z isXZRectangleFull
	a (IIIIZ)V setZStrip
	a (IIIZZ)V setFull
	a (Ldct$a;)V forAllFaces
	a (Ldct$a;Lnet/minecraft/server/EnumAxisCycle;)V forAllAxisFaces
	a (Ldct$b;Lnet/minecraft/server/EnumAxisCycle;Z)V forAllAxisEdges
	a (Ldct$b;Z)V forAllEdges
	a (Lnet/minecraft/server/EnumAxisCycle;III)Z isFullWide
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)I firstFull
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;II)I firstFull
	b ()I getXSize
	b (III)Z isFull
	b (Ldct$b;Z)V forAllBoxes
	b (Lnet/minecraft/server/EnumAxisCycle;III)Z isFull
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)I lastFull
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;II)I lastFull
	c ()I getYSize
	c (III)Z isFullWide
	c (Lnet/minecraft/server/EnumDirection$EnumAxis;)I getSize
	d ()I getZSize
net/minecraft/server/WorldGenFeatureConfigured net/minecraft/world/level/levelgen/feature/ConfiguredFeature
	a DIRECT_CODEC
	b CODEC
	c LIST_CODEC
	d LOGGER
	e feature
	f config
	a (F)Lnet/minecraft/server/WorldGenFeatureRandomChoiceConfigurationWeight; weighted
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Z place
	a (Lnet/minecraft/server/WorldGenDecoratorConfigured;)Ljava/lang/Object; decorated
	a (Lnet/minecraft/server/WorldGenFeatureConfigured;)Lnet/minecraft/server/WorldGenerator; lambda$static$0
	b ()Lnet/minecraft/server/WorldGenerator; feature
	b (Lnet/minecraft/server/WorldGenDecoratorConfigured;)Lnet/minecraft/server/WorldGenFeatureConfigured; decorated
	c ()Lnet/minecraft/server/WorldGenFeatureConfiguration; config
	d ()Ljava/util/stream/Stream; getFeatures
	e ()Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$decorated$1
net/minecraft/server/ItemEnderEye net/minecraft/world/item/EnderEyeItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/GameTestHarnessSequence net/minecraft/gametest/framework/GameTestSequence
	a parent
	b events
	c lastTick
	a ()V thenSucceed
	a (I)Lnet/minecraft/server/GameTestHarnessSequence; thenIdle
	a (ILjava/lang/Runnable;)Lnet/minecraft/server/GameTestHarnessSequence; thenExecuteAfter
	a (J)V tickAndContinue
	a (JLjava/lang/Runnable;)Lnet/minecraft/server/GameTestHarnessSequence; thenWait
	a (Ljava/lang/Runnable;)Lnet/minecraft/server/GameTestHarnessSequence; thenWait
	a (Ljava/util/function/Supplier;)V thenFail
	a (Llj$a;)V lambda$thenTrigger$4
	a (Lnet/minecraft/server/GameTestHarnessSequence;)Lnet/minecraft/server/GameTestHarnessInfo; access$000
	b ()Llj$a; thenTrigger
	b (ILjava/lang/Runnable;)V lambda$thenExecuteAfter$2
	b (J)V tickAndFailIfNotComplete
	b (Ljava/lang/Runnable;)Lnet/minecraft/server/GameTestHarnessSequence; thenExecute
	b (Ljava/util/function/Supplier;)V lambda$thenFail$3
	c ()V lambda$thenIdle$0
	c (J)V tick
	c (Ljava/lang/Runnable;)V executeWithoutFail
	d (Ljava/lang/Runnable;)V lambda$thenExecute$1
bcw$1 net/minecraft/world/entity/monster/AbstractSkeleton$1
	b this$0
	c ()V start
	d ()V stop
ema$a net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler$LoopSoundInstance
	n fadeDirection
	o fade
	p ()V fadeOut
	q ()V fadeIn
	r ()V tick
net/minecraft/server/PlayerAbilities net/minecraft/world/entity/player/Abilities
	canFly mayfly
	canInstantlyBuild instabuild
	flySpeed flyingSpeed
	isFlying flying
	isInvulnerable invulnerable
	walkSpeed walkingSpeed
	a ()F getFlyingSpeed
	a (F)V setFlyingSpeed
	a (Lnet/minecraft/server/NBTTagCompound;)V addSaveData
	b ()F getWalkingSpeed
	b (F)V setWalkingSpeed
	b (Lnet/minecraft/server/NBTTagCompound;)V loadSaveData
li$1 net/minecraft/gametest/framework/GameTestRunner$1
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V testStructureLoaded
	b (Lnet/minecraft/server/GameTestHarnessInfo;)V testPassed
	c (Lnet/minecraft/server/GameTestHarnessInfo;)V testFailed
net/minecraft/server/PacketPlayInUseEntity net/minecraft/network/protocol/game/ServerboundInteractPacket
	a entityId
	c location
	d hand
	e usingSecondaryAction
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getTarget
	b ()Lnet/minecraft/server/PacketPlayInUseEntity$EnumEntityUseAction; getAction
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/EnumHand; getHand
	d ()Lnet/minecraft/server/Vec3D; getLocation
	e ()Z isUsingSecondaryAction
net/minecraft/server/WorldGenWoodlandMansionPieces net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;)V generateMansion
	a ([Ljava/lang/String;)V main
net/minecraft/server/ItemWrittenBook net/minecraft/world/item/WrittenBookItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EntityHuman;)Z resolveBookComponents
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbni;)V appendHoverText
	a (Lnet/minecraft/server/NBTTagCompound;)Z makeSureTagIsValid
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	d (Lnet/minecraft/server/ItemStack;)I getGeneration
	e (Lnet/minecraft/server/ItemStack;)Z isFoil
	g (Lnet/minecraft/server/ItemStack;)I getPageCount
	h (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IChatBaseComponent; getName
net/minecraft/server/PathfinderNormal net/minecraft/world/level/pathfinder/WalkNodeEvaluator
	j oldWaterCost
	k pathTypesByPosCache
	l collisionCache
	a ()V done
	a (DDD)Lnet/minecraft/server/PathDestination; getGoal
	a (IIIIDLnet/minecraft/server/EnumDirection;Lnet/minecraft/server/PathType;)Lnet/minecraft/server/PathPoint; getLandNode
	a (IIILnet/minecraft/server/EntityInsentient;J)Lnet/minecraft/server/PathType; lambda$getCachedBlockType$1
	a (Lnet/minecraft/server/AxisAlignedBB;)Z hasCollisions
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/AxisAlignedBB;)Ljava/lang/Boolean; lambda$hasCollisions$0
	a (Lnet/minecraft/server/ChunkCache;Lnet/minecraft/server/EntityInsentient;)V prepare
	a (Lnet/minecraft/server/EntityInsentient;III)Lnet/minecraft/server/PathType; getCachedBlockType
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;IIIIIIZZLjava/util/EnumSet;Lnet/minecraft/server/PathType;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/PathType; getBlockPathTypes
	a (Lnet/minecraft/server/IBlockAccess;IIILnet/minecraft/server/EntityInsentient;IIIZZ)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;)Lnet/minecraft/server/PathType; getBlockPathTypeStatic
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/PathType;)Lnet/minecraft/server/PathType; checkNeighbourBlocks
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)D getFloorLevel
	a (Lnet/minecraft/server/IBlockAccess;ZZLnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathType;)Lnet/minecraft/server/PathType; evaluateBlockPathType
	a (Lnet/minecraft/server/IBlockData;)Z isBurningBlock
	a (Lnet/minecraft/server/PathPoint;)Z canReachWithoutCollision
	a (Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)Z isNeighborValid
	a (Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)Z isDiagonalValid
	a ([Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)I getNeighbors
	b ()Lnet/minecraft/server/PathPoint; getStart
	b (Lnet/minecraft/server/BlockPosition;)Z hasPositiveMalus
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/PathType; getBlockPathTypeRaw
net/minecraft/server/WorldChunkManagerHell net/minecraft/world/level/biome/FixedBiomeSource
	e CODEC
	f biome
	a ()Lcom/mojang/serialization/Codec; codec
	a (IIII)Ljava/util/Set; getBiomesWithin
	a (IIIIILjava/util/function/Predicate;Ljava/util/Random;Z)Lnet/minecraft/server/BlockPosition; findBiomeHorizontal
	a (J)Lnet/minecraft/server/WorldChunkManager; withSeed
	a (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeBase; lambda$new$1
	a (Lnet/minecraft/server/WorldChunkManagerHell;)Ljava/util/function/Supplier; lambda$static$0
	b (III)Lnet/minecraft/server/BiomeBase; getNoiseBiome
x$1 net/minecraft/Util$1
net/minecraft/server/CommandLoot net/minecraft/server/commands/LootCommand
	a SUGGEST_LOOT_TABLE
	b ERROR_NO_HELD_ITEMS
	c ERROR_NO_LOOT_TABLE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lxl$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$14
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lxl$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder; addTargets
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lxl$a;)I lambda$addTargets$21
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;Lxl$b;)I dropBlockLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/Entity;Lxl$b;)I dropKillLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;Lxl$b;)I dropFishingLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/LootTableInfo;Lxl$b;)I drop
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;Lxl$b;)I dropChestLoot
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	a (Ljava/util/Collection;IILjava/util/List;Lxl$a;)I entityReplace
	a (Ljava/util/Collection;Ljava/util/List;Lxl$a;)I playerGive
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$3
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/List;)V callback
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/List;Lnet/minecraft/server/MinecraftKey;)V callback
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IInventory; getContainer
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;IILjava/util/List;Lxl$a;)I blockReplace
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Lxl$a;)I blockDistribute
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EnumItemSlot;)Lnet/minecraft/server/ItemStack; getSourceHandItem
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/IBlockData;Ljava/util/List;)V lambda$dropBlockLoot$23
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/MinecraftKey;Ljava/util/List;)V lambda$dropKillLoot$24
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Vec3D;Ljava/util/List;Lxl$a;)I dropInWorld
	a (Lnet/minecraft/server/Entity;Ljava/util/List;IILjava/util/List;)V setSlots
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/ItemStack;)Z distributeToContainer
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z canMergeItems
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/ItemStack;)V lambda$dropInWorld$22
	a (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$13
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lxl$a;)I lambda$addTargets$20
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/List;)V lambda$drop$25
	b (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$12
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lxl$a;)I lambda$addTargets$19
	c (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$11
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lxl$a;)I lambda$addTargets$18
	d (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$10
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lxl$a;)I lambda$addTargets$17
	e (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$9
	f (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lxl$a;)I lambda$addTargets$16
	f (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$8
	g (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lxl$a;)I lambda$addTargets$15
	g (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$7
	h (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$6
	i (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$5
	j (Lxl$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$4
x$3 net/minecraft/Util$4
	a val$target
x$2 net/minecraft/Util$3
	a val$from
	b val$to
x$5 net/minecraft/Util$6
	a val$target
x$4 net/minecraft/Util$5
	a val$target
net/minecraft/server/NoiseSettings net/minecraft/world/level/levelgen/NoiseSettings
	a CODEC
	b height
	c noiseSamplingSettings
	d topSlideSettings
	e bottomSlideSettings
	f noiseSizeHorizontal
	g noiseSizeVertical
	h densityFactor
	i densityOffset
	j useSimplexSurfaceNoise
	k randomDensityOffset
	l islandNoiseOverride
	m isAmplified
	a ()I height
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	b ()Lnet/minecraft/server/NoiseSamplingSettings; noiseSamplingSettings
	c ()Lnet/minecraft/server/NoiseSlideSettings; topSlideSettings
	d ()Lnet/minecraft/server/NoiseSlideSettings; bottomSlideSettings
	e ()I noiseSizeHorizontal
	f ()I noiseSizeVertical
	g ()D densityFactor
	h ()D densityOffset
	i ()Z useSimplexSurfaceNoise
	j ()Z randomDensityOffset
	k ()Z islandNoiseOverride
	l ()Z isAmplified
x$6 net/minecraft/Util$7
net/minecraft/server/LootSelector net/minecraft/world/level/storage/loot/LootPool
	a entries
	b conditions
	c compositeCondition
	d functions
	e compositeFunction
	f rolls
	g bonusRolls
	a ()Lcyu$a; lootPool
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V addRandomItems
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/LootSelector;)Lnet/minecraft/server/LootValue; access$100
	a (Lnet/minecraft/server/LootTableInfo;Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableInt;Lnet/minecraft/server/LootEntry;)V lambda$addRandomItem$0
	b (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V addRandomItem
	b (Lnet/minecraft/server/LootSelector;)[Lnet/minecraft/server/LootEntryAbstract; access$200
	c (Lnet/minecraft/server/LootSelector;)Lnet/minecraft/server/LootValueBounds; access$300
	d (Lnet/minecraft/server/LootSelector;)[Lnet/minecraft/server/LootItemCondition; access$400
	e (Lnet/minecraft/server/LootSelector;)[Lnet/minecraft/server/LootItemFunction; access$500
net/minecraft/server/ContainerLectern net/minecraft/world/inventory/LecternMenu
	containerProperties lecternData
	inventory lectern
	a (II)V setData
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;I)Z clickMenuButton
	e ()Lnet/minecraft/server/ItemStack; getBook
	f ()I getPage
net/minecraft/server/ChunkCoordIntPair net/minecraft/world/level/ChunkPos
	a INVALID_CHUNK_POS
	a (I)Lnet/minecraft/server/BlockPosition; getMiddleBlockPosition
	a (III)Lnet/minecraft/server/BlockPosition; getBlockAt
	a (Lnet/minecraft/server/ChunkCoordIntPair;)I getChessboardDistance
	a (Lnet/minecraft/server/ChunkCoordIntPair;I)Ljava/util/stream/Stream; rangeClosed
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/util/stream/Stream; rangeClosed
	b ()I getMiddleBlockX
	c ()I getMiddleBlockZ
	d ()I getMinBlockX
	e ()I getMinBlockZ
	f ()I getMaxBlockX
	g ()I getMaxBlockZ
	j ()I getRegionLocalX
	k ()I getRegionLocalZ
	l ()Lnet/minecraft/server/BlockPosition; getWorldPosition
	pair ()J toLong
	pair (II)J asLong
net/minecraft/server/ItemNameTag net/minecraft/world/item/NameTagItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interactLivingEntity
net/minecraft/server/PathfinderGoalNearestVillage net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal
	a mob
	b interval
	c wantedPos
	a ()Z canUse
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)D lambda$canUse$0
	b ()Z canContinueToUse
	e ()V tick
	g ()V moveRandomly
net/minecraft/server/GameRules$GameRuleKey net/minecraft/world/level/GameRules$Key
	a id
	b category
	a ()Ljava/lang/String; getId
	a (Lnet/minecraft/server/GameRules$GameRuleKey;)Ljava/lang/String; access$600
	b ()Ljava/lang/String; getDescriptionId
	c ()Lnet/minecraft/server/GameRules$GameRuleCategory; getCategory
net/minecraft/server/BehaviorStrollPlace net/minecraft/world/entity/ai/behavior/StrollToPoi
	b memoryType
	c closeEnoughDist
	d maxDistanceFromPoi
	e speedModifier
	f nextOkStartTime
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/GlobalPos;)V lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
bah$a net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal
	i ocelot
	a ()Z canUse
	b ()Z canContinueToUse
bah$b net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal
	c ocelot
	g ()Z canScare
net/minecraft/server/ControllerJump net/minecraft/world/entity/ai/control/JumpControl
	a jump
	b mob
	b ()V tick
net/minecraft/server/LegacyPingHandler net/minecraft/server/network/LegacyQueryHandler
	a LOGGER
	b serverConnectionListener
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V sendFlushAndClose
	a (Ljava/lang/String;)Lio/netty/buffer/ByteBuf; createReply
bwh$1 net/minecraft/world/level/block/EndRodBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
net/minecraft/server/CommandTrigger net/minecraft/server/commands/TriggerCommand
	a ERROR_NOT_PRIMED
	b ERROR_INVALID_OBJECTIVE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestObjectives
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardScore;)I simpleTrigger
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardScore;I)I addValue
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ScoreboardObjective;)Lnet/minecraft/server/ScoreboardScore; getScore
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardScore;I)I setValue
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/BlockWeepingVinesPlant net/minecraft/world/level/block/WeepingVinesPlant
	d SHAPE
	c ()Lnet/minecraft/server/BlockGrowingTop; getHeadBlock
ecu$a net/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump
	a uuid
	b id
	c name
	d profession
	e xp
	f health
	g maxHealth
	h pos
	i inventory
	j path
	k wantsGolem
	l activities
	m behaviors
	n memories
	o gossips
	p pois
	q potentialPois
	a ()Ljava/util/UUID; getUuid
	a (Lecu$a;Lnet/minecraft/server/BlockPosition;)Z access$000
	a (Lnet/minecraft/server/BlockPosition;)Z hasPoi
	b (Lecu$a;Lnet/minecraft/server/BlockPosition;)Z access$100
	b (Lnet/minecraft/server/BlockPosition;)Z hasPotentialPoi
net/minecraft/server/ICrossbow net/minecraft/world/entity/monster/CrossbowAttackMob
	U_ ()V onCrossbowAttackPerformed
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/IProjectile;FF)V shootCrossbowProjectile
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IProjectile;F)V shootCrossbowProjectile
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Vec3D;F)Lnet/minecraft/server/Vector3fa; getProjectileShotVector
	b (Lnet/minecraft/server/EntityLiving;F)V performCrossbowAttack
	b (Z)V setChargingCrossbow
	getGoalTarget ()Lnet/minecraft/server/EntityLiving; getTarget
ecu$b net/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo
	a pos
	b type
	c freeTicketCount
net/minecraft/server/GenLayerOceanEdge net/minecraft/world/level/newbiome/layer/OceanLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;II)I applyPixel
net/minecraft/server/SpawnerCreatureProbabilities net/minecraft/world/level/PotentialCalculator
	a charges
	a (Lnet/minecraft/server/BlockPosition;D)V addCharge
	b (Lnet/minecraft/server/BlockPosition;D)D getPotentialEnergyChange
net/minecraft/server/GenLayerZoom net/minecraft/world/level/newbiome/layer/ZoomLayer
	c $VALUES
	a (I)I getParentX
	a (Lnet/minecraft/server/AreaContextTransformed;IIII)I modeOrRandom
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	b (I)I getParentY
net/minecraft/server/DataConverterEntityShulkerRotation net/minecraft/util/datafix/fixes/EntityShulkerRotationFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	b (Lcom/mojang/serialization/Dynamic;)Ljava/lang/Double; lambda$fixTag$0
dqk$2 net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen$2
	a this$0
	i ()Lnet/minecraft/server/IChatBaseComponent; getMessage
dqk$1 net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen$1
	a this$0
	a ()V applyValue
	b ()V updateMessage
czk$a net/minecraft/world/level/storage/loot/entries/LootItem$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootItem; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItem;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
net/minecraft/server/ITagRegistry net/minecraft/tags/TagContainer
	a EMPTY
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/Tags;Lnet/minecraft/server/Tags;Lnet/minecraft/server/Tags;Lnet/minecraft/server/Tags;)Lnet/minecraft/server/ITagRegistry; of
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ITagRegistry; deserializeFromNetwork
	bind ()V bindToGlobal
	getBlockTags ()Lnet/minecraft/server/Tags; getBlocks
	getEntityTags ()Lnet/minecraft/server/Tags; getEntityTypes
	getFluidTags ()Lnet/minecraft/server/Tags; getFluids
	getItemTags ()Lnet/minecraft/server/Tags; getItems
net/minecraft/server/Raid net/minecraft/world/entity/raid/Raid
	a RAID_NAME_COMPONENT
	b VICTORY
	bossBattle raidEvent
	c DEFEAT
	d RAID_BAR_VICTORY_COMPONENT
	e RAID_BAR_DEFEAT_COMPONENT
	f groupToLeaderMap
	heroes heroesOfTheVillage
	preRaidTicks raidCooldownTicks
	raiders groupRaiderMap
	world level
	x celebrationTicks
	y waveSpawnPos
	A ()Z hasMoreWaves
	B ()Z isFinalWave
	C ()Z hasBonusWave
	D ()Z hasSpawnedBonusWave
	E ()Z shouldSpawnBonusGroup
	F ()V updateRaiders
	G ()Z shouldSpawnGroup
	H ()V setDirty
	a ()Z isOver
	a (I)V setBadOmenLevel
	a (II)Lnet/minecraft/server/BlockPosition; findRandomSpawnPos
	a (ILnet/minecraft/server/EntityRaider;)V setLeader
	a (ILnet/minecraft/server/EntityRaider;Lnet/minecraft/server/BlockPosition;Z)V joinRaid
	a (ILnet/minecraft/server/EntityRaider;Z)Z addWaveMob
	a (Ljava/lang/Integer;)Ljava/util/Set; lambda$addWaveMob$2
	a (Lnet/minecraft/server/BlockPosition;)V playSound
	a (Lnet/minecraft/server/Entity;)V addHeroOfTheVillage
	a (Lnet/minecraft/server/EntityHuman;)V absorbBadOmen
	a (Lnet/minecraft/server/EntityPlayer;)Z lambda$validPlayer$0
	a (Lnet/minecraft/server/EntityRaider;Z)V removeFromRaid
	a (Lnet/minecraft/server/EnumDifficulty;)I getNumGroups
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/Raid$Wave;IZ)I getDefaultNumSpawns
	a (Lnet/minecraft/server/Raid$Wave;Ljava/util/Random;ILnet/minecraft/server/DifficultyDamageScaler;Z)I getPotentialBonusSpawns
	b ()Z isBetweenWaves
	b (I)Lnet/minecraft/server/EntityRaider; getLeader
	b (ILnet/minecraft/server/EntityRaider;)Z addWaveMob
	b (Lnet/minecraft/server/BlockPosition;)V spawnGroup
	c ()Z hasFirstWaveSpawned
	c (I)V removeLeader
	c (Lnet/minecraft/server/BlockPosition;)V setCenter
	d (I)Ljava/util/Optional; getValidSpawnPos
	d (Lnet/minecraft/server/BlockPosition;)D lambda$moveRaidCenterToNearbyVillageSection$1
	g ()F getTotalHealth
	getWorld ()Lnet/minecraft/server/World; getLevel
	h ()Ljava/util/Set; getAllRaiders
	o ()V tick
	r ()I getTotalRaidersAlive
	s ()Lnet/minecraft/server/ItemStack; getLeaderBannerInstance
	sumMobHealth ()F getHealthOfLivingRaiders
	updateProgress ()V updateBossbar
	v ()Z isActive
	w ()F getEnchantOdds
	x ()Ljava/util/function/Predicate; validPlayer
	y ()V updatePlayers
	z ()V moveRaidCenterToNearbyVillageSection
net/minecraft/server/WorldGenEndGateway net/minecraft/world/level/levelgen/feature/EndGatewayFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenEndGatewayConfiguration;Lnet/minecraft/server/BlockPosition;)V lambda$place$0
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenEndGatewayConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
bve$1 net/minecraft/world/level/block/CocoaBlock$1
	a $SwitchMap$net$minecraft$core$Direction
eaa net/minecraft/client/renderer/PanoramaRenderer
	a minecraft
	b cubeMap
	c time
	a (FF)V render
eac net/minecraft/client/renderer/PostPass
	a inTarget
	b outTarget
	c effect
	d auxAssets
	e auxNames
	f auxWidths
	g auxHeights
	h shaderOrthoMatrix
	a ()Ljava/lang/String; getName
	a (F)V process
	a (Ljava/lang/String;Ljava/util/function/IntSupplier;II)V addAuxAsset
	a (Lnet/minecraft/server/Matrix4f;)V setOrthoMatrix
	b ()Ldzo; getEffect
eab net/minecraft/client/renderer/PostChain
	a screenTarget
	b resourceManager
	c name
	d passes
	e customRenderTargets
	f fullSizedTargets
	g shaderOrthoMatrix
	h screenWidth
	i screenHeight
	j time
	k lastStamp
	a ()Ljava/lang/String; getName
	a (F)V process
	a (II)V resize
	a (Lcom/google/gson/JsonElement;)V parseTargetNode
	a (Lejv;Lcom/google/gson/JsonElement;)V parsePassNode
	a (Lejv;Lnet/minecraft/server/MinecraftKey;)V load
	a (Ljava/lang/String;)Lded; getTempTarget
	a (Ljava/lang/String;II)V addTempTarget
	a (Ljava/lang/String;Lded;Lded;)Leac; addPass
	b ()V updateOrthoMatrix
	b (Lcom/google/gson/JsonElement;)V parseUniformNode
	b (Ljava/lang/String;)Lded; getRenderTarget
net/minecraft/server/WorldGenTreeProviderOak net/minecraft/world/level/block/grower/OakTreeGrower
	a (Ljava/util/Random;Z)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredFeature
eae net/minecraft/client/renderer/RenderBuffers
	a fixedBufferPack
	b fixedBuffers
	c bufferSource
	d crumblingBufferSource
	e outlineBufferSource
	a ()Ldzl; fixedBufferPack
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;)V lambda$new$1
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Leag;)V put
	b ()Ldzy$a; bufferSource
	b (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Leag;)V lambda$null$0
	c ()Ldzy$a; crumblingBufferSource
	d ()Ldzz; outlineBufferSource
ead net/minecraft/client/renderer/Rect2i
	a xPos
	b yPos
	c width
	d height
	a ()I getX
	a (I)V setX
	a (II)V setPosition
	a (Lead;)Lead; intersect
	b ()I getY
	b (I)V setY
	b (II)Z contains
	c ()I getWidth
	c (I)V setWidth
	d ()I getHeight
	d (I)V setHeight
eag net/minecraft/client/renderer/RenderType
	V LINES
	W SOLID
	X CUTOUT_MIPPED
	Y CUTOUT
	Z TRANSLUCENT
	aa TRANSLUCENT_MOVING_BLOCK
	ab TRANSLUCENT_NO_CRUMBLING
	ac LEASH
	ad WATER_MASK
	ae ARMOR_GLINT
	af ARMOR_ENTITY_GLINT
	ag GLINT_TRANSLUCENT
	ah GLINT
	ai GLINT_DIRECT
	aj ENTITY_GLINT
	ak ENTITY_GLINT_DIRECT
	al LIGHTNING
	am TRIPWIRE
	an format
	ao mode
	ap bufferSize
	aq affectsCrumbling
	ar sortOnUpload
	as asOptional
	A ()Z affectsCrumbling
	B ()Ljava/util/Optional; asOptional
	C ()Leag$b; translucentState
	D ()Leag$b; translucentMovingBlockState
	E ()Leag$b; tripwireState
	a (I)Leag; endPortal
	a (Ldfe;III)V end
	a (Ljava/lang/String;Ldfo;IILeag$b;)Leag$a; create
	a (Ljava/lang/String;Ldfo;IIZZLeag$b;)Leag$a; create
	a (Lnet/minecraft/server/MinecraftKey;)Leag; armorCutoutNoCull
	a (Lnet/minecraft/server/MinecraftKey;F)Leag; dragonExplosionAlpha
	a (Lnet/minecraft/server/MinecraftKey;FF)Leag; energySwirl
	a (Lnet/minecraft/server/MinecraftKey;Leaf$c;)Leag; outline
	a (Lnet/minecraft/server/MinecraftKey;Z)Leag; entityCutoutNoCull
	b (Lnet/minecraft/server/MinecraftKey;)Leag; entitySolid
	b (Lnet/minecraft/server/MinecraftKey;Z)Leag; entityCutoutNoCullZOffset
	c ()Leag; solid
	c (Lnet/minecraft/server/MinecraftKey;)Leag; entityCutout
	c (Lnet/minecraft/server/MinecraftKey;Z)Leag; entityTranslucent
	d ()Leag; cutoutMipped
	d (Lnet/minecraft/server/MinecraftKey;)Leag; entityCutoutNoCull
	d (Lnet/minecraft/server/MinecraftKey;Z)Leag; beaconBeam
	e ()Leag; cutout
	e (Lnet/minecraft/server/MinecraftKey;)Leag; entityCutoutNoCullZOffset
	f ()Leag; translucent
	f (Lnet/minecraft/server/MinecraftKey;)Leag; itemEntityTranslucentCull
	g ()Leag; translucentMovingBlock
	g (Lnet/minecraft/server/MinecraftKey;)Leag; entityTranslucentCull
	h ()Leag; translucentNoCrumbling
	h (Lnet/minecraft/server/MinecraftKey;)Leag; entityTranslucent
	i ()Leag; leash
	i (Lnet/minecraft/server/MinecraftKey;)Leag; entitySmoothCutout
	j ()Leag; waterMask
	j (Lnet/minecraft/server/MinecraftKey;)Leag; entityDecal
	k ()Leag; armorGlint
	k (Lnet/minecraft/server/MinecraftKey;)Leag; entityNoOutline
	l ()Leag; armorEntityGlint
	l (Lnet/minecraft/server/MinecraftKey;)Leag; entityShadow
	m ()Leag; glintTranslucent
	m (Lnet/minecraft/server/MinecraftKey;)Leag; eyes
	n ()Leag; glint
	n (Lnet/minecraft/server/MinecraftKey;)Leag; outline
	o ()Leag; glintDirect
	o (Lnet/minecraft/server/MinecraftKey;)Leag; crumbling
	p ()Leag; entityGlint
	p (Lnet/minecraft/server/MinecraftKey;)Leag; text
	q ()Leag; entityGlintDirect
	q (Lnet/minecraft/server/MinecraftKey;)Leag; textSeeThrough
	r ()Leag; lightning
	s ()Leag; tripwire
	t ()Leag; lines
	u ()Ljava/util/List; chunkBufferLayers
	v ()I bufferSize
	w ()Ldfo; format
	x ()I mode
	y ()Ljava/util/Optional; outline
	z ()Z isOutline
eaf net/minecraft/client/renderer/RenderStateShard
	A NO_CULL
	B NO_DEPTH_TEST
	C EQUAL_DEPTH_TEST
	D LEQUAL_DEPTH_TEST
	E COLOR_DEPTH_WRITE
	F COLOR_WRITE
	G DEPTH_WRITE
	H NO_LAYERING
	I POLYGON_OFFSET_LAYERING
	J VIEW_OFFSET_Z_LAYERING
	K NO_FOG
	L FOG
	M BLACK_FOG
	N MAIN_TARGET
	O OUTLINE_TARGET
	P TRANSLUCENT_TARGET
	Q PARTICLES_TARGET
	R WEATHER_TARGET
	S CLOUDS_TARGET
	T ITEM_ENTITY_TARGET
	U DEFAULT_LINE
	V setupState
	W clearState
	a name
	b NO_TRANSPARENCY
	c ADDITIVE_TRANSPARENCY
	d LIGHTNING_TRANSPARENCY
	e GLINT_TRANSPARENCY
	f CRUMBLING_TRANSPARENCY
	g TRANSLUCENT_TRANSPARENCY
	h NO_ALPHA
	i DEFAULT_ALPHA
	j MIDWAY_ALPHA
	k FLAT_SHADE
	l SMOOTH_SHADE
	m BLOCK_SHEET_MIPPED
	n BLOCK_SHEET
	o NO_TEXTURE
	p DEFAULT_TEXTURING
	q OUTLINE_TEXTURING
	r GLINT_TEXTURING
	s ENTITY_GLINT_TEXTURING
	t LIGHTMAP
	u NO_LIGHTMAP
	v OVERLAY
	w NO_OVERLAY
	x DIFFUSE_LIGHTING
	y NO_DIFFUSE_LIGHTING
	z CULL
	A ()V lambda$static$20
	B ()V lambda$static$19
	C ()V lambda$static$18
	D ()V lambda$static$17
	E ()V lambda$static$16
	F ()V lambda$static$15
	G ()V lambda$static$14
	H ()V lambda$static$13
	I ()V lambda$static$12
	J ()V lambda$static$11
	K ()V lambda$static$10
	L ()V lambda$static$9
	M ()V lambda$static$8
	N ()V lambda$static$7
	O ()V lambda$static$6
	P ()V lambda$static$5
	Q ()V lambda$static$4
	R ()V lambda$static$3
	S ()V lambda$static$2
	T ()V lambda$static$1
	U ()V lambda$static$0
	a ()V setupRenderState
	a (F)V setupGlintTexturing
	b ()V clearRenderState
	c ()V lambda$static$44
	d ()V lambda$static$43
	e ()V lambda$static$42
	f ()V lambda$static$41
	g ()V lambda$static$40
	h ()V lambda$static$39
	i ()V lambda$static$38
	j ()V lambda$static$37
	k ()V lambda$static$36
	l ()V lambda$static$35
	m ()V lambda$static$34
	n ()V lambda$static$33
	o ()V lambda$static$32
	p ()V lambda$static$31
	q ()V lambda$static$30
	r ()V lambda$static$29
	s ()V lambda$static$28
	t ()V lambda$static$27
	u ()V lambda$static$26
	v ()V lambda$static$25
	w ()V lambda$static$24
	x ()V lambda$static$23
	y ()V lambda$static$22
	z ()V lambda$static$21
eba$1 net/minecraft/client/renderer/block/model/ItemModelGenerator$1
	a $SwitchMap$net$minecraft$client$renderer$block$model$ItemModelGenerator$SpanFacing
eai net/minecraft/client/renderer/ScreenEffectRenderer
	a UNDERWATER_LOCATION
	a (Ldjw;Ldfj;)V renderScreenEffect
	a (Ldjw;Leju;Ldfj;)V renderTex
	a (Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/IBlockData; getViewBlockingState
	b (Ldjw;Ldfj;)V renderWater
	c (Ldjw;Ldfj;)V renderFire
net/minecraft/server/ShapeDetector$ShapeDetectorCollection net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch
	a frontTopLeft
	b forwards
	c up
	d cache
	e width
	f height
	g depth
	a ()Lnet/minecraft/server/BlockPosition; getFrontTopLeft
	a (III)Lnet/minecraft/server/ShapeDetectorBlock; getBlock
	c ()Lnet/minecraft/server/EnumDirection; getUp
	d ()I getWidth
	e ()I getHeight
	f ()I getDepth
	getFacing ()Lnet/minecraft/server/EnumDirection; getForwards
eah net/minecraft/client/renderer/RunningTrimmedMean
	a values
	b count
	c cursor
	a (J)J registerValueAndGetMean
eak net/minecraft/client/renderer/SpriteCoordinateExpander
	a delegate
	b sprite
	a (DDD)Ldfn; vertex
	a (FF)Ldfn; uv
	a (FFFFFFFFFIIFFF)V vertex
	a (II)Ldfn; overlayCoords
	a (IIII)Ldfn; color
	b (FFF)Ldfn; normal
	b (II)Ldfn; uv2
	b (IIII)V defaultColor
	d ()V endVertex
	k ()V unsetDefaultColor
eaj net/minecraft/client/renderer/Sheets
	A SOLID_BLOCK_SHEET
	B CUTOUT_BLOCK_SHEET
	C TRANSLUCENT_ITEM_CULL_BLOCK_SHEET
	D TRANSLUCENT_CULL_BLOCK_SHEET
	a SHULKER_SHEET
	b BED_SHEET
	c BANNER_SHEET
	d SHIELD_SHEET
	e SIGN_SHEET
	f CHEST_SHEET
	g DEFAULT_SHULKER_TEXTURE_LOCATION
	h SHULKER_TEXTURE_LOCATION
	i SIGN_MATERIALS
	j BED_TEXTURES
	k CHEST_TRAP_LOCATION
	l CHEST_TRAP_LOCATION_LEFT
	m CHEST_TRAP_LOCATION_RIGHT
	n CHEST_XMAS_LOCATION
	o CHEST_XMAS_LOCATION_LEFT
	p CHEST_XMAS_LOCATION_RIGHT
	q CHEST_LOCATION
	r CHEST_LOCATION_LEFT
	s CHEST_LOCATION_RIGHT
	t ENDER_CHEST_LOCATION
	u SHULKER_BOX_SHEET_TYPE
	v BED_SHEET_TYPE
	w BANNER_SHEET_TYPE
	x SHIELD_SHEET_TYPE
	y SIGN_SHEET_TYPE
	z CHEST_SHEET_TYPE
	a ()Leag; bannerSheet
	a (I)[Lelj; lambda$static$2
	a (Ljava/lang/String;)Lelj; chestMaterial
	a (Ljava/util/function/Consumer;)V getAllMaterials
	a (Lnet/minecraft/server/BlockPropertyChestType;Lelj;Lelj;Lelj;)Lelj; chooseMaterial
	a (Lnet/minecraft/server/BlockPropertyWood;)Lelj; signTexture
	a (Lnet/minecraft/server/EnumColor;)Lelj; lambda$static$1
	a (Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/BlockPropertyChestType;Z)Lelj; chooseMaterial
	b ()Leag; shieldSheet
	b (Ljava/lang/String;)Lelj; lambda$static$0
	c ()Leag; bedSheet
	d ()Leag; shulkerBoxSheet
	e ()Leag; signSheet
	f ()Leag; chestSheet
	g ()Leag; solidBlockSheet
	h ()Leag; cutoutBlockSheet
	i ()Leag; translucentItemSheet
	j ()Leag; translucentCullBlockSheet
eam net/minecraft/client/renderer/VirtualScreen
	a minecraft
	b screenManager
	a (Ldeg;Ljava/lang/String;Ljava/lang/String;)Ldew; newWindow
eal net/minecraft/client/renderer/ViewArea
	a levelRenderer
	b level
	c chunkGridSizeY
	d chunkGridSizeX
	e chunkGridSizeZ
	f chunks
	a ()V releaseAllBuffers
	a (DD)V repositionCamera
	a (I)V setViewDistance
	a (III)I getChunkIndex
	a (IIIZ)V setDirty
	a (Lecm;)V createChunks
	a (Lnet/minecraft/server/BlockPosition;)Lecm$c; getRenderChunkAt
eao net/minecraft/client/renderer/block/BlockModelShaper
	a modelByStateCache
	b modelManager
	a ()Lell; getModelManager
	a (Ljava/util/Map;)Ljava/lang/String; statePropertiesToString
	a (Lnet/minecraft/server/IBlockData;)Leju; getParticleIcon
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/lang/String; getValue
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IBlockData;)Lelm; stateToModelLocation
	b ()V rebuildCache
	b (Lnet/minecraft/server/IBlockData;)Lelg; getBlockModel
	c (Lnet/minecraft/server/IBlockData;)Lelm; stateToModelLocation
	d (Lnet/minecraft/server/IBlockData;)V lambda$rebuildCache$0
net/minecraft/server/BlockMonsterEggs net/minecraft/world/level/block/InfestedBlock
	a hostBlock
	b BLOCK_BY_HOST_BLOCK
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Explosion;)V wasExploded
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V spawnInfestation
	c ()Lnet/minecraft/server/Block; getHostBlock
	c (Lnet/minecraft/server/Block;)Lnet/minecraft/server/IBlockData; stateByHostBlock
	h (Lnet/minecraft/server/IBlockData;)Z isCompatibleHostBlock
net/minecraft/server/AbstractDragonControllerLanded net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase
	a ()Z isSitting
	a (Lnet/minecraft/server/DamageSource;F)F onHurt
ean net/minecraft/client/renderer/banner/package-info
net/minecraft/server/LootValueGenerators net/minecraft/world/level/storage/loot/RandomIntGenerators
	a GENERATORS
	a (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootValue; deserialize
	a (Lnet/minecraft/server/LootValue;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
eaq net/minecraft/client/renderer/block/LiquidBlockRenderer
	a lavaIcons
	b waterIcons
	c waterOverlay
	a ()V setupSprites
	a (Ldfn;DDDFFFFFI)V vertex
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;F)Z isFaceOccludedByNeighbor
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/Fluid;)Z isNeighborSameFluid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;)F getWaterHeight
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z isFaceOccludedBySelf
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/EnumDirection;FLnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isFaceOccludedByState
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;)I getLightColor
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;Ldfn;Lnet/minecraft/server/Fluid;)Z tesselate
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z shouldRenderFace
eap net/minecraft/client/renderer/block/BlockRenderDispatcher
	a blockModelShaper
	b modelRenderer
	c liquidBlockRenderer
	d random
	e blockColors
	a ()Leao; getBlockModelShaper
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockLightAccess;Ldfn;Lnet/minecraft/server/Fluid;)Z renderLiquid
	a (Lnet/minecraft/server/IBlockData;)Lelg; getBlockModel
	a (Lnet/minecraft/server/IBlockData;Ldfj;Ldzy;II)V renderSingleBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockLightAccess;Ldfj;Ldfn;)V renderBreakingTexture
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockLightAccess;Ldfj;Ldfn;ZLjava/util/Random;)Z renderBatched
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	b ()Lear; getModelRenderer
eas net/minecraft/client/renderer/block/model/BakedQuad
	a vertices
	b tintIndex
	c direction
	d sprite
	e shade
	a ()Leju; getSprite
	b ()[I getVertices
	c ()Z isTinted
	d ()I getTintIndex
	e ()Lnet/minecraft/server/EnumDirection; getDirection
	f ()Z isShade
ear net/minecraft/client/renderer/block/ModelBlockRenderer
	a blockColors
	b CACHE
	a ()V enableCaching
	a (Ldfj$a;Ldfn;FFFLjava/util/List;II)V renderQuadList
	a (Ldfj$a;Ldfn;Lnet/minecraft/server/IBlockData;Lelg;FFFII)V renderModel
	a (Lnet/minecraft/server/IBlockLightAccess;Lelg;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Ldfj;Ldfn;ZLjava/util/Random;JI)Z tesselateBlock
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;IIZLdfj;Ldfn;Ljava/util/List;Ljava/util/BitSet;)V renderModelFaceFlat
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Ldfj;Ldfn;Ljava/util/List;[FLjava/util/BitSet;Lear$b;I)V renderModelFaceAO
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Ldfn;Ldfj$a;Leas;FFFFIIIII)V putQuadData
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;[ILnet/minecraft/server/EnumDirection;[FLjava/util/BitSet;)V calculateShape
	b ()V clearCache
	b (Lnet/minecraft/server/IBlockLightAccess;Lelg;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Ldfj;Ldfn;ZLjava/util/Random;JI)Z tesselateWithAO
	c ()Ljava/lang/ThreadLocal; access$200
	c (Lnet/minecraft/server/IBlockLightAccess;Lelg;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Ldfj;Ldfn;ZLjava/util/Random;JI)Z tesselateWithoutAO
	d ()Lear$d; lambda$static$0
eau net/minecraft/client/renderer/block/model/BlockElementFace
	a cullForDirection
	b tintIndex
	c texture
	d uv
eat net/minecraft/client/renderer/block/model/BlockElement
	a from
	b to
	c faces
	d rotation
	e shade
	a ()V fillUvs
	a (Lnet/minecraft/server/EnumDirection;)[F uvsByFace
eaw net/minecraft/client/renderer/block/model/BlockFaceUV
	a uvs
	b rotation
	a (I)F getU
	a ([F)V setMissingUv
	b (I)F getV
	c (I)I getReverseIndex
	d (I)I getShiftedIndex
net/minecraft/server/Pathfinder net/minecraft/world/level/pathfinder/PathFinder
	a neighbors
	b maxVisitedNodes
	c nodeEvaluator
	d openSet
	a (Ljava/util/Map;Lnet/minecraft/server/PathDestination;)Lnet/minecraft/server/PathEntity; lambda$findPath$2
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/PathDestination; lambda$findPath$0
	a (Lnet/minecraft/server/ChunkCache;Lnet/minecraft/server/EntityInsentient;Ljava/util/Set;FIF)Lnet/minecraft/server/PathEntity; findPath
	a (Lnet/minecraft/server/PathPoint;Ljava/util/Map;FIF)Lnet/minecraft/server/PathEntity; findPath
	a (Lnet/minecraft/server/PathPoint;Ljava/util/Set;)F getBestH
	a (Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/PathEntity; reconstructPath
	b (Ljava/util/Map;Lnet/minecraft/server/PathDestination;)Lnet/minecraft/server/PathEntity; lambda$findPath$1
eav net/minecraft/client/renderer/block/model/BlockElementRotation
	a origin
	b axis
	c angle
	d rescale
eay net/minecraft/client/renderer/block/model/BlockModelDefinition
	a variants
	b multiPart
	a ()Ljava/util/Map; getVariants
	a (Leay$a;Ljava/io/Reader;)Leay; fromStream
	a (Ljava/lang/String;)Z hasVariant
	b ()Ljava/util/Set; getMultiVariants
	b (Ljava/lang/String;)Lebf; getVariant
	c ()Z isMultiPart
	d ()Lebk; getMultiPart
dph$1 net/minecraft/client/gui/screens/controls/ControlList$1
eax net/minecraft/client/renderer/block/model/BlockModel
	a GSON
	b name
	c textureMap
	d parent
	e parentLocation
	f LOGGER
	g FACE_BAKERY
	h elements
	i guiLight
	j hasAmbientOcclusion
	k transforms
	l overrides
	a ()Ljava/util/List; getElements
	a (Leat;Leau;Leju;Lnet/minecraft/server/EnumDirection;Leln;Lnet/minecraft/server/MinecraftKey;)Leas; bakeFace
	a (Lebe$b;)Lebd; getTransform
	a (Lelk;Leax;)Lebc; getItemOverrides
	a (Lelk;Leax;Ljava/util/function/Function;Leln;Lnet/minecraft/server/MinecraftKey;Z)Lelg; bake
	a (Lelk;Ljava/util/function/Function;Leln;Lnet/minecraft/server/MinecraftKey;)Lelg; bake
	a (Ljava/io/Reader;)Leax; fromStream
	a (Ljava/lang/String;)Leax; fromString
	a (Ljava/util/Set;Ljava/lang/String;)V lambda$getMaterials$1
	a (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; getMaterials
	a (Ljava/util/function/Function;Ljava/util/Set;Ljava/util/Set;Lebb;)V lambda$getMaterials$0
	b ()Z hasAmbientOcclusion
	b (Ljava/lang/String;)Z hasTexture
	c ()Leax$b; getGuiLight
	c (Ljava/lang/String;)Lelj; getMaterial
	d ()Z isResolved
	d (Ljava/lang/String;)Z access$000
	e ()Ljava/util/List; getOverrides
	e (Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; findTextureEntry
	f ()Ljava/util/Collection; getDependencies
	f (Ljava/lang/String;)Z isTextureReference
	g ()Leax; getRootModel
	h ()Lebe; getTransforms
net/minecraft/server/PathfinderGoalLeapAtTarget net/minecraft/world/entity/ai/goal/LeapAtTargetGoal
	a mob
	b target
	c yd
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/server/MathHelper net/minecraft/util/Mth
	a SQRT_OF_TWO
	b SIN
	c RANDOM
	d MULTIPLY_DE_BRUIJN_BIT_POSITION
	e FRAC_BIAS
	f ASIN_TAB
	g COS_TAB
	a ()Ljava/util/UUID; createInsecureUUID
	a (BBB)B clamp
	a (DD)D absMax
	a (DDD)D clamp
	a (DDDDDD)D lerp2
	a (DDDDDDDDDDD)D lerp3
	a (DDDDDDII)[D binBiModalNormalDistribution
	a (DDDII)[D binNormalDistribution
	a (DDII)[D binLogDistribution
	a (FF)Z equal
	a (FFF)F clamp
	a (I)I abs
	a (IFFF)I colorMultiply
	a (II)I intFloorDiv
	a (IILjava/util/function/IntPredicate;)I binarySearch
	a (J)J murmurHash3Mixer
	a (JJJ)J clamp
	a (Ljava/lang/String;D)D getDouble
	a (Ljava/lang/String;DD)D getDouble
	a (Ljava/lang/String;I)I getInt
	a (Ljava/lang/String;II)I getInt
	a (Ljava/util/Random;)Ljava/util/UUID; createInsecureUUID
	a (Ljava/util/Random;DD)D nextDouble
	a (Ljava/util/Random;FF)F nextFloat
	a (Ljava/util/Random;[D)I getRandomForDistributionIntegral
	a (Lnet/minecraft/server/BaseBlockPosition;)J getSeed
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;)Z rayIntersectsAABB
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/Vec3D; catmullRomSplinePos
	a ([D)[D cumulativeSum
	a ([F)V lambda$static$0
	a ([J)D average
	b (D)I fastFloor
	b (DD)Z equal
	b (DDD)D clampedLerp
	b (FF)F positiveModulo
	b (FFF)F rotateIfNecessary
	b (I)I wrapDegrees
	b (II)I positiveModulo
	b (III)I color
	c (DD)D positiveModulo
	c (DDD)D inverseLerp
	c (F)F sqrt
	c (FF)F degreesDifference
	c (FFF)F approach
	c (I)I smallestEncompassingPowerOfTwo
	c (II)I roundUp
	c (III)J getSeed
	d (D)J lfloor
	d (DD)D atan2
	d (DDD)D lerp
	d (F)I floor
	d (FF)F degreesDifferenceAbs
	d (FFF)F approachDegrees
	d (I)Z isPowerOfTwo
	d (II)I colorMultiply
	e (D)I absFloor
	e (F)F abs
	e (FF)F triangleWave
	e (FFF)I color
	e (I)I ceillog2
	f (D)I ceil
	f (F)I ceil
	f (FFF)I hsvToRgb
	f (I)I log2
	g (D)D wrapDegrees
	g (F)F wrapDegrees
	g (FFF)F lerp
	g (I)I murmurHash3Mixer
	h (D)D frac
	h (F)F frac
	h (FFF)F rotLerp
	i (D)D fastInvSqrt
	i (F)F fastInvSqrt
	i (FFF)F diffuseLight
	j (D)D smoothstep
	j (F)F fastInvCubeRoot
	j (FFF)F rotlerp
	k (D)I sign
	k (F)F square
	l (D)F rotWrap
	m (D)D square
net/minecraft/server/DataConverterEntityRavagerRename net/minecraft/util/datafix/fixes/EntityRavagerRenameFix
	a RENAMED_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
eaz net/minecraft/client/renderer/block/model/FaceBakery
	a RESCALE_22_5
	b RESCALE_45
	a (Leaw;Leju;Lnet/minecraft/server/EnumDirection;[FLf;Leav;Z)[I makeVertices
	a (Leaw;Lnet/minecraft/server/EnumDirection;Lf;Lnet/minecraft/server/MinecraftKey;)Leaw; recomputeUVs
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/String; lambda$recomputeUVs$0
	a (Lnet/minecraft/server/Vector3fa;Leav;)V applyElementRotation
	a (Lnet/minecraft/server/Vector3fa;Lf;)V applyModelRotation
	a (Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Vector3fa;)[F setupShape
	a (Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Vector3fa;Leau;Leju;Lnet/minecraft/server/EnumDirection;Leln;Leav;ZLnet/minecraft/server/MinecraftKey;)Leas; bakeQuad
	a (Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Matrix4f;Lnet/minecraft/server/Vector3fa;)V rotateVertexBy
	a ([I)Lnet/minecraft/server/EnumDirection; calculateFacing
	a ([IILnet/minecraft/server/EnumDirection;Leaw;[FLeju;Lf;Leav;Z)V bakeVertex
	a ([IILnet/minecraft/server/Vector3fa;Leju;Leaw;)V fillVertex
	a ([ILnet/minecraft/server/EnumDirection;)V recalculateWinding
net/minecraft/server/PathfinderGoalBoat net/minecraft/world/entity/ai/goal/BoatGoals
	c $VALUES
ebb net/minecraft/client/renderer/block/model/ItemOverride
	a model
	b predicates
	a ()Lnet/minecraft/server/MinecraftKey; getModel
	a (Lnet/minecraft/server/ItemStack;Ldwl;Lnet/minecraft/server/EntityLiving;)Z test
cch$a net/minecraft/world/level/block/entity/BlockEntityType$Builder
	a factory
	b validBlocks
	a (Lcch$a;)Ljava/util/Set; access$000
	a (Lcom/mojang/datafixers/types/Type;)Lnet/minecraft/server/TileEntityTypes; build
	a (Ljava/util/function/Supplier;[Lnet/minecraft/server/Block;)Lcch$a; of
net/minecraft/server/WorldGenSurfaceSoulSandValley net/minecraft/world/level/levelgen/surfacebuilders/SoulSandValleySurfaceBuilder
	a SOUL_SAND
	b SOUL_SOIL
	c GRAVEL
	d BLOCK_STATES
	a ()Lcom/google/common/collect/ImmutableList; getFloorBlockStates
	b ()Lcom/google/common/collect/ImmutableList; getCeilingBlockStates
	c ()Lnet/minecraft/server/IBlockData; getPatchBlockState
eba net/minecraft/client/renderer/block/model/ItemModelGenerator
	a LAYERS
	a (ILjava/lang/String;Leju;)Ljava/util/List; processFrames
	a (Leba$b;Ljava/util/List;Leju;IIIIIZ)V checkTransition
	a (Leju;)Ljava/util/List; getSpans
	a (Leju;IIIII)Z isTransparent
	a (Leju;Ljava/lang/String;I)Ljava/util/List; createSideElements
	a (Ljava/util/List;Leba$b;II)V createOrExpandSpan
	a (Ljava/util/function/Function;Leax;)Leax; generateBlockModel
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiecePenthouse net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPenthouse
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
net/minecraft/server/DebugReportNBT net/minecraft/data/structures/NbtToSnbt
	b LOGGER
	c generator
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;)Z lambda$run$0
	a (Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path; convertStructure
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V lambda$run$1
	a (Lnet/minecraft/server/HashCache;)V run
ebd net/minecraft/client/renderer/block/model/ItemTransform
	a NO_TRANSFORM
	b rotation
	c translation
	d scale
	a (ZLdfj;)V apply
ebc net/minecraft/client/renderer/block/model/ItemOverrides
	a EMPTY
	b overrides
	c overrideModels
	a (Lelg;Lnet/minecraft/server/ItemStack;Ldwl;Lnet/minecraft/server/EntityLiving;)Lelg; resolve
	a (Ljava/util/function/Function;Leax;Lelk;Lebb;)Lelg; lambda$new$0
ebf net/minecraft/client/renderer/block/model/MultiVariant
	a variants
	a ()Ljava/util/List; getVariants
	a (Lelk;Ljava/util/function/Function;Leln;Lnet/minecraft/server/MinecraftKey;)Lelg; bake
	a (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; getMaterials
	a (Ljava/util/function/Function;Ljava/util/Set;Lnet/minecraft/server/MinecraftKey;)Ljava/util/stream/Stream; lambda$getMaterials$0
	f ()Ljava/util/Collection; getDependencies
ebe net/minecraft/client/renderer/block/model/ItemTransforms
	a NO_TRANSFORMS
	b thirdPersonLeftHand
	c thirdPersonRightHand
	d firstPersonLeftHand
	e firstPersonRightHand
	f head
	g gui
	h ground
	i fixed
	a (Lebe$b;)Lebd; getTransform
	b (Lebe$b;)Z hasTransform
ebh net/minecraft/client/renderer/block/model/multipart/AndCondition
	c conditions
	a (Ljava/util/List;Lnet/minecraft/server/IBlockData;)Z lambda$getPredicate$2
	a (Lnet/minecraft/server/BlockStateList;Lebi;)Ljava/util/function/Predicate; lambda$getPredicate$0
	a (Lnet/minecraft/server/IBlockData;Ljava/util/function/Predicate;)Z lambda$null$1
ebg net/minecraft/client/renderer/block/model/Variant
	a modelLocation
	b rotation
	c uvLock
	d weight
	a ()Lnet/minecraft/server/MinecraftKey; getModelLocation
	b ()Lf; getRotation
	c ()Z isUvLocked
	d ()I getWeight
ebj net/minecraft/client/renderer/block/model/multipart/KeyValueCondition
	c PIPE_SPLITTER
	d key
	e value
	a (Ljava/util/List;Lnet/minecraft/server/IBlockData;)Z lambda$getPredicate$2
	a (Lnet/minecraft/server/BlockStateList;Lnet/minecraft/server/IBlockState;Ljava/lang/String;)Ljava/util/function/Predicate; getBlockStatePredicate
	a (Lnet/minecraft/server/IBlockData;Ljava/util/function/Predicate;)Z lambda$null$1
	a (Lnet/minecraft/server/IBlockState;Ljava/util/Optional;Lnet/minecraft/server/IBlockData;)Z lambda$getBlockStatePredicate$3
	b (Lnet/minecraft/server/BlockStateList;Lnet/minecraft/server/IBlockState;Ljava/lang/String;)Ljava/util/function/Predicate; lambda$getPredicate$0
net/minecraft/server/CommandPlaySound net/minecraft/server/commands/PlaySoundCommand
	a ERROR_TOO_FAR
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/SoundCategory;Lnet/minecraft/server/Vec3D;FFF)I playSound
	a (Lnet/minecraft/server/SoundCategory;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; source
	a (Lnet/minecraft/server/SoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$5
	b (Lnet/minecraft/server/SoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$4
	c (Lnet/minecraft/server/SoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$3
	d (Lnet/minecraft/server/SoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$2
	e (Lnet/minecraft/server/SoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$1
net/minecraft/server/ChunkConverterPalette$Direction net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction
	g axis
	h axisDirection
	i $VALUES
	a ()Lnet/minecraft/server/ChunkConverterPalette$Direction$AxisDirection; getAxisDirection
	b ()Lnet/minecraft/server/ChunkConverterPalette$Direction$Axis; getAxis
ebi net/minecraft/client/renderer/block/model/multipart/Condition
	a TRUE
	b FALSE
	a (Lnet/minecraft/server/BlockStateList;)Ljava/util/function/Predicate; lambda$static$3
	a (Lnet/minecraft/server/IBlockData;)Z lambda$null$2
	b (Lnet/minecraft/server/BlockStateList;)Ljava/util/function/Predicate; lambda$static$1
	b (Lnet/minecraft/server/IBlockData;)Z lambda$null$0
ebl net/minecraft/client/renderer/block/model/multipart/OrCondition
	c conditions
	a (Ljava/util/List;Lnet/minecraft/server/IBlockData;)Z lambda$getPredicate$2
	a (Lnet/minecraft/server/BlockStateList;Lebi;)Ljava/util/function/Predicate; lambda$getPredicate$0
	a (Lnet/minecraft/server/IBlockData;Ljava/util/function/Predicate;)Z lambda$null$1
bjs$1 net/minecraft/world/inventory/StonecutterMenu$1
	a this$0
	X_ ()V setChanged
net/minecraft/server/WorldGenContextArea net/minecraft/world/level/newbiome/context/LazyAreaContext
	a cache
	b maxCache
	c biomeNoise
	d seed
	e rval
	a ()J getMixedSeed
	a (I)I nextRandom
	a (JJ)V initRandom
	a (Lnet/minecraft/server/AreaTransformer8;)Lnet/minecraft/server/Area; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/Area;)Lnet/minecraft/server/Area; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;)Lnet/minecraft/server/Area; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/AreaLazy;)Lnet/minecraft/server/AreaLazy; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/AreaLazy;Lnet/minecraft/server/AreaLazy;)Lnet/minecraft/server/AreaLazy; createResult
	b ()Lnet/minecraft/server/NoiseGeneratorPerlin; getBiomeNoise
	b (JJ)J mixSeed
	b (Lnet/minecraft/server/AreaTransformer8;)Lnet/minecraft/server/AreaLazy; createResult
ebk net/minecraft/client/renderer/block/model/multipart/MultiPart
	a definition
	b selectors
	a ()Ljava/util/List; getSelectors
	a (Lebm;)Ljava/util/stream/Stream; lambda$getDependencies$0
	a (Lelk;Ljava/util/function/Function;Leln;Lnet/minecraft/server/MinecraftKey;)Lelg; bake
	a (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; getMaterials
	a (Ljava/util/function/Function;Ljava/util/Set;Lebm;)Ljava/util/stream/Stream; lambda$getMaterials$1
	b ()Ljava/util/Set; getMultiVariants
	f ()Ljava/util/Collection; getDependencies
bjs$2 net/minecraft/world/inventory/StonecutterMenu$2
	a val$access
	b this$0
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$onTake$0
ahb$1 net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$1
	a $SwitchMap$net$minecraft$util$datafix$fixes$ChunkPalettedStorageFix$Direction$Axis
ebn net/minecraft/client/renderer/block/model/multipart/package-info
net/minecraft/server/CommandWhitelist net/minecraft/server/commands/WhitelistCommand
	a ERROR_ALREADY_ENABLED
	b ERROR_ALREADY_DISABLED
	c ERROR_ALREADY_WHITELISTED
	d ERROR_NOT_WHITELISTED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$8
	a (Lnet/minecraft/server/CommandListenerWrapper;)I reload
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I addPlayers
	a (Lnet/minecraft/server/EntityPlayer;)Ljava/lang/String; lambda$null$5
	a (Lnet/minecraft/server/PlayerList;Lnet/minecraft/server/EntityPlayer;)Z lambda$null$4
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$6
	b (Lnet/minecraft/server/CommandListenerWrapper;)I enableWhitelist
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I removePlayers
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	c (Lnet/minecraft/server/CommandListenerWrapper;)I disableWhitelist
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	d (Lnet/minecraft/server/CommandListenerWrapper;)I showList
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	e (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
ebm net/minecraft/client/renderer/block/model/multipart/Selector
	a condition
	b variant
	a ()Lebf; getVariant
	a (Lnet/minecraft/server/BlockStateList;)Ljava/util/function/Predicate; getPredicate
net/minecraft/server/DataConverterItemFrame net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix
	a (B)B direction2dTo3d
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
ebp net/minecraft/client/renderer/block/package-info
ebo net/minecraft/client/renderer/block/model/package-info
abz$a net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream
	a message
	b closed
ebr net/minecraft/client/renderer/blockentity/BannerRenderer
	a flag
	c pole
	d bar
	a ()Ldwf; makeFlag
	a (Ldfj;Ldzy;IILdwf;Lelj;ZLjava/util/List;)V renderPatterns
	a (Ldfj;Ldzy;IILdwf;Lelj;ZLjava/util/List;Z)V renderPatterns
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntityBanner;FLdfj;Ldzy;II)V render
dka$1 net/minecraft/client/Options$1
ebq net/minecraft/client/renderer/block/statemap/package-info
ebt net/minecraft/client/renderer/blockentity/BedRenderer
	a headPiece
	c footPiece
	d legs
	a (Ldfj;Ldzy;ZLnet/minecraft/server/EnumDirection;Lelj;IIZ)V renderPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z lambda$render$0
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntityBed;FLdfj;Ldzy;II)V render
net/minecraft/server/BlockSkull$Type net/minecraft/world/level/block/SkullBlock$Types
	g $VALUES
ebs net/minecraft/client/renderer/blockentity/BeaconRenderer
	a BEAM_LOCATION
	a (Ldfj;Ldfn;FFFFIIFFFFFFFFFFFF)V renderPart
	a (Ldfj;Ldzy;FJII[F)V renderBeaconBeam
	a (Ldfj;Ldzy;Lnet/minecraft/server/MinecraftKey;FFJII[FFF)V renderBeaconBeam
	a (Lnet/minecraft/server/Matrix4f;Lnet/minecraft/server/Matrix3f;Ldfn;FFFFIFFFF)V addVertex
	a (Lnet/minecraft/server/Matrix4f;Lnet/minecraft/server/Matrix3f;Ldfn;FFFFIIFFFFFFFF)V renderQuad
	a (Lnet/minecraft/server/TileEntity;)Z shouldRenderOffScreen
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntityBeacon;)Z shouldRenderOffScreen
	a (Lnet/minecraft/server/TileEntityBeacon;FLdfj;Ldzy;II)V render
ebv net/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher
	a instance
	b textureManager
	c level
	d camera
	e cameraHitResult
	f renderers
	g singleRenderBuffer
	h font
	a ()Ldkr; getFont
	a (Lebw;Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;)V setupAndRender
	a (Lebw;Lnet/minecraft/server/TileEntity;Ldfj;Ldzy;II)V lambda$renderItem$1
	a (Lnet/minecraft/server/TileEntity;)Lebw; getRenderer
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;)V render
	a (Lnet/minecraft/server/TileEntity;Ldfj;)V renderItem
	a (Lnet/minecraft/server/TileEntity;Ldfj;Ldzy;II)Z renderItem
	a (Lnet/minecraft/server/TileEntity;Ljava/lang/Runnable;)V tryRender
	a (Lnet/minecraft/server/TileEntityTypes;Lebw;)V register
	a (Lnet/minecraft/server/World;)V setLevel
	a (Lnet/minecraft/server/World;Lejv;Ldkr;Ldjh;Lnet/minecraft/server/MovingObjectPosition;)V prepare
	b (Lebw;Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;)V lambda$render$0
net/minecraft/server/TileEntityLectern net/minecraft/world/level/block/entity/LecternBlockEntity
	containerProperties dataAccess
	inventory bookAccess
	maxPage pageCount
	Y_ ()V clearContent
	a (Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;)V setBook
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/TileEntityLectern;)Lnet/minecraft/server/ItemStack; access$000
	a (Lnet/minecraft/server/TileEntityLectern;I)V access$300
	a (Lnet/minecraft/server/TileEntityLectern;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; access$002
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ItemStack; resolveBook
	b (Lnet/minecraft/server/TileEntityLectern;)V access$100
	c (Lnet/minecraft/server/TileEntityLectern;)I access$200
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	j ()I getRedstoneSignal
	k ()V onBookItemRemove
	t ()Z onlyOpCanSetNbt
ebu net/minecraft/client/renderer/blockentity/BellRenderer
	a BELL_RESOURCE_LOCATION
	c bellBody
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntityBell;FLdfj;Ldzy;II)V render
ebx net/minecraft/client/renderer/blockentity/BrightnessCombiner
	a ()Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptNone
	a (I)I lambda$acceptNone$2
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
	a (Lnet/minecraft/server/TileEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptSingle
	a (Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/TileEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptDouble
	a (Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/TileEntity;I)I lambda$acceptDouble$0
	b ()Ljava/lang/Object; acceptNone
	b (I)I lambda$acceptSingle$1
net/minecraft/server/PathfinderTargetCondition net/minecraft/world/entity/ai/targeting/TargetingConditions
	a DEFAULT
	b range
	c allowInvulnerable
	d allowSameTeam
	e allowUnseeable
	f allowNonAttackable
	g testInvisible
	h selector
	a ()Lnet/minecraft/server/PathfinderTargetCondition; allowInvulnerable
	a (D)Lnet/minecraft/server/PathfinderTargetCondition; range
	a (Ljava/util/function/Predicate;)Lnet/minecraft/server/PathfinderTargetCondition; selector
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z test
	b ()Lnet/minecraft/server/PathfinderTargetCondition; allowSameTeam
	c ()Lnet/minecraft/server/PathfinderTargetCondition; allowUnseeable
	d ()Lnet/minecraft/server/PathfinderTargetCondition; allowNonAttackable
	e ()Lnet/minecraft/server/PathfinderTargetCondition; ignoreInvisibilityTesting
ebw net/minecraft/client/renderer/blockentity/BlockEntityRenderer
	b renderer
	a (Lnet/minecraft/server/TileEntity;)Z shouldRenderOffScreen
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
dkr$a net/minecraft/client/gui/Font$StringRenderOutput
	a bufferSource
	b this$0
	c dropShadow
	d dimFactor
	e r
	f g
	g b
	h a
	i pose
	j seeThrough
	k packedLightCoords
	l x
	m y
	n effects
	a (IF)F finish
	a (Ldmw$a;)V addEffect
dka$2 net/minecraft/client/Options$2
	a $SwitchMap$net$minecraft$client$CloudStatus
ebz net/minecraft/client/renderer/blockentity/ChestRenderer
	a lid
	c bottom
	d lock
	e doubleLeftLid
	f doubleLeftBottom
	g doubleLeftLock
	h doubleRightLid
	i doubleRightBottom
	j doubleRightLock
	k xmasTextures
	a (Ldfj;Ldfn;Ldwf;Ldwf;Ldwf;FII)V render
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
eby net/minecraft/client/renderer/blockentity/CampfireRenderer
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntityCampfire;FLdfj;Ldzy;II)V render
net/minecraft/server/PathfinderGoal net/minecraft/world/entity/ai/goal/Goal
	a flags
	C_ ()Z isInterruptable
	a ()Z canUse
	a (Ljava/util/EnumSet;)V setFlags
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	i ()Ljava/util/EnumSet; getFlags
net/minecraft/server/EntityZombieHusk net/minecraft/world/entity/monster/Husk
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	T_ ()Z isSunSensitive
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkHuskSpawnRules
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eL ()Lnet/minecraft/server/SoundEffect; getStepSound
	eM ()Lnet/minecraft/server/ItemStack; getSkull
	eN ()Z convertsInWater
	eP ()V doUnderWaterConversion
net/minecraft/server/EntityLlamaTrader net/minecraft/world/entity/animal/horse/TraderLlama
	bw despawnDelay
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	fE ()V maybeDespawn
	fF ()Z canDespawn
	fG ()Z isLeashedToWanderingTrader
	fH ()Z isLeashedToSomethingOtherThanTheWanderingTrader
	fu ()Z isTraderLlama
	fz ()Lnet/minecraft/server/EntityLlama; makeBabyLlama
	h (Lnet/minecraft/server/EntityHuman;)V doPlayerRide
	k ()V aiStep
	o ()V registerGoals
	x (I)V setDespawnDelay
eca net/minecraft/client/renderer/blockentity/ConduitRenderer
	a SHELL_TEXTURE
	c ACTIVE_SHELL_TEXTURE
	d WIND_TEXTURE
	e VERTICAL_WIND_TEXTURE
	f OPEN_EYE_TEXTURE
	g CLOSED_EYE_TEXTURE
	h eye
	i wind
	j shell
	k cage
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntityConduit;FLdfj;Ldzy;II)V render
zj$1 net/minecraft/server/dedicated/ServerWatchdog$1
	a this$0
net/minecraft/server/TileEntitySign net/minecraft/world/level/block/entity/SignBlockEntity
	c playerWhoMayEdit
	g renderMessages
	lines messages
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (I)Lnet/minecraft/server/IChatBaseComponent; getMessage
	a (ILjava/util/function/Function;)Lnet/minecraft/server/FormattedString; getRenderMessage
	a (ILnet/minecraft/server/IChatBaseComponent;)V setMessage
	a (Lnet/minecraft/server/EntityHuman;)V setAllowedPlayerEditor
	a (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Z)V setEditable
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/EntityHuman;)Z executeClickCommands
	d ()Z isEditable
	f ()Lnet/minecraft/server/EntityHuman; getPlayerWhoMayEdit
	t ()Z onlyOpCanSetNbt
ecc net/minecraft/client/renderer/blockentity/LecternRenderer
	a bookModel
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntityLectern;FLdfj;Ldzy;II)V render
ecb net/minecraft/client/renderer/blockentity/EnchantTableRenderer
	a BOOK_LOCATION
	c bookModel
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntityEnchantTable;FLdfj;Ldzy;II)V render
net/minecraft/server/EntityCaveSpider net/minecraft/world/entity/monster/CaveSpider
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createCaveSpider
ece net/minecraft/client/renderer/blockentity/ShulkerBoxRenderer
	a model
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntityShulkerBox;FLdfj;Ldzy;II)V render
ecd net/minecraft/client/renderer/blockentity/PistonHeadRenderer
	a blockRenderer
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ldfj;Ldzy;Lnet/minecraft/server/World;ZI)V renderBlock
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntityPiston;FLdfj;Ldzy;II)V render
ecg net/minecraft/client/renderer/blockentity/SkullBlockRenderer
	a MODEL_BY_TYPE
	c SKIN_BY_TYPE
	a (Lbzs$a;Lcom/mojang/authlib/GameProfile;)Leag; getRenderType
	a (Ljava/util/HashMap;)V lambda$static$1
	a (Lnet/minecraft/server/EnumDirection;FLbzs$a;Lcom/mojang/authlib/GameProfile;FLdfj;Ldzy;I)V renderSkull
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntitySkull;FLdfj;Ldzy;II)V render
	b (Ljava/util/HashMap;)V lambda$static$0
dbg$b net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionEntityScore;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionEntityScore; deserialize
ecf net/minecraft/client/renderer/blockentity/SignRenderer
	a signModel
	a (Ldkr;Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/FormattedString; lambda$render$0
	a (Lnet/minecraft/server/Block;)Lelj; getMaterial
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntitySign;FLdfj;Ldzy;II)V render
dbg$a net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder
	a scores
	b entityTarget
	a (Ljava/lang/String;Lnet/minecraft/server/LootValueBounds;)Ldbg$a; withScore
eci net/minecraft/client/renderer/blockentity/StructureBlockRenderer
	a (Lnet/minecraft/server/TileEntity;)Z shouldRenderOffScreen
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntityStructure;)Z shouldRenderOffScreen
	a (Lnet/minecraft/server/TileEntityStructure;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntityStructure;Ldfn;Lnet/minecraft/server/BlockPosition;ZLdfj;)V renderInvisibleBlocks
net/minecraft/server/CommandXp net/minecraft/server/commands/ExperienceCommand
	a ERROR_SET_POINTS_INVALID
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$9
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;ILnet/minecraft/server/CommandXp$Unit;)I addExperience
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/CommandXp$Unit;)I queryExperience
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	b (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;ILnet/minecraft/server/CommandXp$Unit;)I setExperience
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
ech net/minecraft/client/renderer/blockentity/SpawnerRenderer
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntityMobSpawner;FLdfj;Ldzy;II)V render
net/minecraft/server/StatusChallengeUtils net/minecraft/server/rcon/PktUtils
	a HEX_CHAR
	a (B)Ljava/lang/String; toHexString
	a ([BI)I intFromByteArray
	a ([BII)Ljava/lang/String; stringFromByteArray
	b ([BII)I intFromByteArray
	c ([BII)I intFromNetworkByteArray
eck net/minecraft/client/renderer/blockentity/TheEndPortalRenderer
	a END_SKY_LOCATION
	c END_PORTAL_LOCATION
	d RANDOM
	e RENDER_TYPES
	a ()F getOffset
	a (D)I getPasses
	a (I)Leag; lambda$static$0
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntityEnderPortal;FFLnet/minecraft/server/Matrix4f;Ldfn;)V renderCube
	a (Lnet/minecraft/server/TileEntityEnderPortal;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntityEnderPortal;Lnet/minecraft/server/Matrix4f;Ldfn;FFFFFFFFFFFLnet/minecraft/server/EnumDirection;)V renderFace
ecj net/minecraft/client/renderer/blockentity/TheEndGatewayRenderer
	d BEAM_LOCATION
	a ()F getOffset
	a (D)I getPasses
	a (Lnet/minecraft/server/TileEntity;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntityEndGateway;FLdfj;Ldzy;II)V render
	a (Lnet/minecraft/server/TileEntityEnderPortal;FLdfj;Ldzy;II)V render
net/minecraft/server/InteractionResultWrapper net/minecraft/world/InteractionResultHolder
	a result
	b object
	a ()Lnet/minecraft/server/EnumInteractionResult; getResult
	a (Ljava/lang/Object;Z)Lnet/minecraft/server/InteractionResultWrapper; sidedSuccess
	b ()Ljava/lang/Object; getObject
ecm net/minecraft/client/renderer/chunk/ChunkRenderDispatcher
	a LOGGER
	b toBatch
	c freeBuffers
	d toUpload
	e toBatchCount
	f freeBufferCount
	g fixedBuffers
	h mailbox
	i executor
	j level
	k renderer
	l camera
	a ()Ldzl; fixedBuffers
	a (Ldfe;Ldfm;)Ljava/util/concurrent/CompletableFuture; uploadChunkLayer
	a (Ldfe;Ldfm;Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage; lambda$uploadChunkLayer$6
	a (Ldzl;Lecm$a;Ljava/lang/Throwable;)V lambda$runTask$3
	a (Lecm$a;Ldzl;)V lambda$null$2
	a (Lecm$c$a;)V schedule
	a (Lecm$c$a;Ldzl;Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage; lambda$runTask$1
	a (Lecm$c;)V rebuildChunkSync
	a (Lecm;)Lnet/minecraft/server/World; access$000
	a (Lnet/minecraft/server/Vec3D;)V setCamera
	a (Lnet/minecraft/server/World;)V setLevel
	b ()Ljava/lang/String; getStats
	b (Ldfe;Ldfm;)Ljava/util/concurrent/CompletableFuture; doUploadChunkLayer
	b (Lecm$c$a;)V lambda$schedule$4
	b (Lecm;)Ldzw; access$200
	c ()Lnet/minecraft/server/Vec3D; getCameraPosition
	c (Lecm;)Ldzl; access$300
	d ()Z uploadAllPendingUploads
	e ()V blockUntilClear
	f ()Z isQueueEmpty
	g ()V dispose
	h ()V runTask
	i ()V clearBatchQueue
	j ()V lambda$uploadChunkLayer$5
	k ()V lambda$runTask$0
cju$a net/minecraft/world/level/levelgen/feature/JigsawFeature$FeatureStart
	e feature
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureVillageConfiguration;)V generatePieces
ecl net/minecraft/client/renderer/blockentity/package-info
net/minecraft/server/ItemHanging net/minecraft/world/item/HangingEntityItem
	a type
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)Z mayPlace
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
eco net/minecraft/client/renderer/chunk/VisGraph
	a DX
	b DZ
	c DY
	d DIRECTIONS
	e bitSet
	f INDEX_OF_EDGES
	g empty
	a ()Lecp; resolve
	a (I)Ljava/util/Set; floodFill
	a (III)I getIndex
	a (ILjava/util/Set;)V addEdges
	a (ILnet/minecraft/server/EnumDirection;)I getNeighborIndexAtFace
	a (Lnet/minecraft/server/BlockPosition;)V setOpaque
	a ([I)V lambda$static$0
	b (Lnet/minecraft/server/BlockPosition;)Ljava/util/Set; floodFill
	c (Lnet/minecraft/server/BlockPosition;)I getIndex
ecn net/minecraft/client/renderer/chunk/RenderChunkRegion
	a centerX
	b centerZ
	c start
	d xLength
	e yLength
	f zLength
	g chunks
	h blockStates
	i fluidStates
	j level
	a (III)I index
	a (Lnet/minecraft/server/BlockPosition;)I index
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;II[[Lnet/minecraft/server/Chunk;)Z isAllEmpty
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Chunk$EnumTileEntityState;)Lnet/minecraft/server/TileEntity; getBlockEntity
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	a (Lnet/minecraft/server/EnumDirection;Z)F getShade
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;I)Lecn; createIfNotEmpty
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
ecq net/minecraft/client/renderer/chunk/package-info
ecp net/minecraft/client/renderer/chunk/VisibilitySet
	a FACINGS
	b data
	a (Ljava/util/Set;)V add
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)Z visibilityBetween
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;Z)V set
	a (Z)V setAll
ecs net/minecraft/client/renderer/culling/package-info
net/minecraft/server/PacketPlayInAutoRecipe net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket
	a containerId
	b recipe
	c shiftDown
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/MinecraftKey; getRecipe
	d ()Z isShiftDown
ecr net/minecraft/client/renderer/culling/Frustum
	a frustumData
	b camX
	c camY
	d camZ
	a (DDD)V prepare
	a (DDDDDD)Z cubeInFrustum
	a (FFFFFF)Z cubeInFrustum
	a (Lnet/minecraft/server/AxisAlignedBB;)Z isVisible
	a (Lnet/minecraft/server/Matrix4f;IIII)V getPlane
	a (Lnet/minecraft/server/Matrix4f;Lnet/minecraft/server/Matrix4f;)V calculateFrustum
ecu net/minecraft/client/renderer/debug/BrainDebugRenderer
	a LOGGER
	b minecraft
	c pois
	d brainDumpsPerEntity
	e lastLookedAtUuid
	a ()V clear
	a (DDD)V doRender
	a (DDDLecu$a;)V lambda$doRender$2
	a (I)V removeBrainDump
	a (ILecu$a;)Z lambda$removeBrainDump$0
	a (Ldfj;Ldzy;DDD)V render
	a (Lecu$a;)V addOrUpdateBrainDump
	a (Lecu$a;DDD)V renderPath
	a (Lecu$b;)V addPoi
	a (Ljava/lang/String;Lecu$b;II)V renderTextOverPoi
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;II)V renderTextOverPos
	a (Ljava/util/Map$Entry;)Z lambda$clearRemovedEntities$1
	a (Lnet/minecraft/server/BlockPosition;)V removePoi
	a (Lnet/minecraft/server/BlockPosition;I)V setFreeTicketCount
	a (Lnet/minecraft/server/BlockPosition;Lecu$a;)Z lambda$getPotentialTicketHolders$6
	a (Lnet/minecraft/server/BlockPosition;Lecu$b;)V lambda$doRender$3
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/List;)V renderGhostPoi
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Ljava/util/List;)V lambda$doRender$4
	a (Lnet/minecraft/server/Entity;)V lambda$updateLastLookedAtUuid$8
	a (Lnet/minecraft/server/IPosition;ILjava/lang/String;IF)V renderTextOverMob
	b ()V clearRemovedEntities
	b (Lecu$a;)Z isMobSelected
	b (Lecu$a;DDD)V renderBrainInfo
	b (Lecu$b;)V renderPoiInfo
	b (Lnet/minecraft/server/BlockPosition;)V highlightPoi
	b (Lnet/minecraft/server/BlockPosition;Lecu$a;)Z lambda$getTicketHolders$5
	c ()Ljava/util/Map; getGhostPois
	c (Lecu$a;)Z isPlayerCloseEnoughToMob
	c (Lecu$b;)Ljava/util/Set; getTicketHolderNames
	c (Lnet/minecraft/server/BlockPosition;)Ljava/util/Collection; getTicketHolders
	d ()V updateLastLookedAtUuid
	d (Lecu$b;)Ljava/util/Set; getPotentialTicketHolderNames
	d (Lnet/minecraft/server/BlockPosition;)Ljava/util/Collection; getPotentialTicketHolders
	e (Lnet/minecraft/server/BlockPosition;)Ljava/util/List; lambda$getGhostPois$7
ect net/minecraft/client/renderer/debug/BeeDebugRenderer
	a minecraft
	b hives
	c beeInfosPerEntity
	d lastLookedAtUuid
	a ()V clear
	a (I)V removeBeeInfo
	a (ILect$a;)Z lambda$removeBeeInfo$0
	a (JLjava/util/Map$Entry;)Z lambda$clearRemovedHives$2
	a (Ldfj;Ldzy;DDD)V render
	a (Lect$a;)V addOrUpdateBeeInfo
	a (Lect$a;Lnet/minecraft/server/BlockPosition;)Ljava/lang/String; getPosDescription
	a (Lect$b;)V addOrUpdateHiveInfo
	a (Lect$b;Ljava/util/Collection;)V renderHiveInfo
	a (Ljava/lang/String;Lect$b;II)V renderTextOverHive
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;II)V renderTextOverPos
	a (Ljava/util/Collection;)Ljava/lang/String; getBeeUuidsAsString
	a (Ljava/util/Map$Entry;)V lambda$renderFlowerInfos$11
	a (Ljava/util/Map;Lect$a;)V lambda$renderFlowerInfos$10
	a (Ljava/util/Map;Lect$a;Lnet/minecraft/server/BlockPosition;)V lambda$null$7
	a (Lnet/minecraft/server/BlockPosition;)V highlightHive
	a (Lnet/minecraft/server/BlockPosition;FFFFF)V renderTransparentFilledBox
	a (Lnet/minecraft/server/BlockPosition;Lect$a;)Z lambda$getHiveMembers$12
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/List;)V renderGhostHive
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/Map;Lect$b;)V lambda$doRender$4
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Ljava/util/List;)V lambda$doRender$5
	a (Lnet/minecraft/server/Entity;)V lambda$updateLastLookedAtUuid$14
	a (Lnet/minecraft/server/IPosition;ILjava/lang/String;IF)V renderTextOverMob
	b ()V clearRemovedBees
	b (Lect$a;)V renderPath
	b (Lect$b;)Ljava/util/Set; getHiveMemberNames
	b (Ljava/util/Map$Entry;)Z lambda$clearRemovedBees$1
	b (Ljava/util/Map;Lect$a;)V lambda$createHiveBlacklistMap$8
	b (Lnet/minecraft/server/BlockPosition;)Ljava/util/Collection; getHiveMembers
	c ()V clearRemovedHives
	c (Lect$a;)V renderBeeInfo
	c (Lnet/minecraft/server/BlockPosition;)Ljava/util/List; lambda$getGhostHives$13
	d ()V doRender
	d (Lect$a;)Z isBeeSelected
	d (Lnet/minecraft/server/BlockPosition;)Ljava/util/Set; lambda$null$9
	e ()Ljava/util/Map; createHiveBlacklistMap
	e (Lect$a;)Z isPlayerCloseEnoughToMob
	e (Lnet/minecraft/server/BlockPosition;)Ljava/util/Set; lambda$null$6
	f ()V renderFlowerInfos
	f (Lect$a;)V lambda$doRender$3
	g ()Ldjh; getCamera
	h ()Ljava/util/Map; getGhostHives
	i ()V updateLastLookedAtUuid
ecw net/minecraft/client/renderer/debug/ChunkBorderRenderer
	a minecraft
	a (Ldfj;Ldzy;DDD)V render
dxx$a net/minecraft/client/particle/NoteParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
ecv net/minecraft/client/renderer/debug/CaveDebugRenderer
	a tunnelsList
	b thicknessMap
	c startPoses
	a (Ldfj;Ldzy;DDD)V render
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/List;)V addTunnel
dxg$1 net/minecraft/client/particle/DragonBreathParticle$1
ecy net/minecraft/client/renderer/debug/CollisionBoxRenderer
	a minecraft
	b lastUpdateTime
	c shapes
	a (Ldfj;Ldzy;DDD)V render
	a (Lnet/minecraft/server/Entity;)Z lambda$render$0
bsd$1 net/minecraft/world/level/NaturalSpawner$1
	a $SwitchMap$net$minecraft$world$entity$SpawnPlacements$Type
ecx net/minecraft/client/renderer/debug/ChunkDebugRenderer
	a minecraft
	b lastUpdateTime
	c radius
	d data
	a (Ldfj;Ldzy;DDD)V render
	a (Lecx;)Ldjw; access$300
ecz net/minecraft/client/renderer/debug/DebugRenderer
	a pathfindingRenderer
	b waterDebugRenderer
	c chunkBorderRenderer
	d heightMapRenderer
	e collisionBoxRenderer
	f neighborsUpdateRenderer
	g caveRenderer
	h structureRenderer
	i lightDebugRenderer
	j worldGenAttemptRenderer
	k solidFaceRenderer
	l chunkRenderer
	m brainDebugRenderer
	n villageSectionsDebugRenderer
	o beeDebugRenderer
	p raidDebugRenderer
	q goalSelectorRenderer
	r gameTestDebugRenderer
	s renderChunkborder
	a ()V clear
	a (DDDDDDFFFF)V renderFilledBox
	a (Ldfj;Ldzy$a;DDD)V render
	a (Ljava/lang/String;DDDI)V renderFloatingText
	a (Ljava/lang/String;DDDIF)V renderFloatingText
	a (Ljava/lang/String;DDDIFZFZ)V renderFloatingText
	a (Ljava/lang/String;IIII)V renderFloatingText
	a (Lnet/minecraft/server/AxisAlignedBB;FFFF)V renderFilledBox
	a (Lnet/minecraft/server/BlockPosition;FFFFF)V renderFilledBox
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;FFFF)V renderFilledBox
	a (Lnet/minecraft/server/Entity;)Z lambda$getTargetedEntity$0
	a (Lnet/minecraft/server/Entity;I)Ljava/util/Optional; getTargetedEntity
	b ()Z switchRenderChunkborder
net/minecraft/server/WorldDataServer net/minecraft/world/level/storage/PrimaryLevelData
	A wanderingTraderSpawnChance
	B wanderingTraderId
	C knownServerBrands
	D wasModded
	E scheduledEvents
	a LOGGER
	b settings
	c worldGenSettings
	d worldGenSettingsLifecycle
	e xSpawn
	f ySpawn
	g zSpawn
	h spawnAngle
	i gameTime
	j dayTime
	k fixerUpper
	l playerDataVersion
	m upgradedPlayerTag
	n loadedPlayerTag
	o version
	u initialized
	v difficultyLocked
	w worldBorder
	x endDragonFightData
	z wanderingTraderSpawnDelay
	A ()Lnet/minecraft/server/GeneratorSettings; worldGenSettings
	B ()Lcom/mojang/serialization/Lifecycle; worldGenSettingsLifecycle
	C ()Lnet/minecraft/server/NBTTagCompound; endDragonFightData
	D ()Lnet/minecraft/server/DataPackConfiguration; getDataPackConfig
	E ()Lnet/minecraft/server/NBTTagCompound; getCustomBossEvents
	F ()Z wasModded
	G ()Ljava/util/Set; getKnownServerBrands
	H ()Lnet/minecraft/server/IWorldDataServer; overworldData
	I ()Lnet/minecraft/server/WorldSettings; getLevelSettings
	J ()V updatePlayerTag
	a ()I getXSpawn
	a (F)V setSpawnAngle
	a (I)V setClearWeatherTime
	a (J)V setGameTime
	a (Lcfr$c;)V setWorldBorder
	a (Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream; lambda$parse$1
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/WorldSettings;Lnet/minecraft/server/LevelVersion;Lnet/minecraft/server/GeneratorSettings;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/server/WorldDataServer; parse
	a (Ljava/lang/String;Z)V setModdedInfo
	a (Ljava/util/UUID;)V setWanderingTraderId
	a (Lnet/minecraft/server/BlockPosition;F)V setSpawn
	a (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/server/DataPackConfiguration;)V setDataPackConfig
	a (Lnet/minecraft/server/EnumDifficulty;)V setDifficulty
	a (Lnet/minecraft/server/EnumGamemode;)V setGameType
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; createTag
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTTagCompound;)V setTagData
	a (Lnet/minecraft/server/NBTTagCompound;)V setEndDragonFightData
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTBase;)V lambda$setTagData$3
	a (Z)V setThundering
	b ()I getYSpawn
	b (I)V setXSpawn
	b (J)V setDayTime
	b (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/server/NBTBase; lambda$parse$0
	b (Lnet/minecraft/server/NBTTagCompound;)V setCustomBossEvents
	b (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTBase;)V lambda$setTagData$2
	b (Z)V setRaining
	c ()I getZSpawn
	c (I)V setYSpawn
	c (Z)V setInitialized
	d ()F getSpawnAngle
	d (I)V setZSpawn
	d (Z)V setDifficultyLocked
	e ()J getGameTime
	e (I)V setThunderTime
	f ()J getDayTime
	f (I)V setRainTime
	g ()Ljava/lang/String; getLevelName
	g (I)V setWanderingTraderSpawnDelay
	h ()I getClearWeatherTime
	h (I)V setWanderingTraderSpawnChance
	i ()Z isThundering
	j ()I getThunderTime
	k ()Z isRaining
	l ()I getRainTime
	m ()Lnet/minecraft/server/EnumGamemode; getGameType
	n ()Z isHardcore
	o ()Z getAllowCommands
	p ()Z isInitialized
	q ()Lnet/minecraft/server/GameRules; getGameRules
	r ()Lcfr$c; getWorldBorder
	s ()Lnet/minecraft/server/EnumDifficulty; getDifficulty
	t ()Z isDifficultyLocked
	u ()Lnet/minecraft/server/CustomFunctionCallbackTimerQueue; getScheduledEvents
	v ()I getWanderingTraderSpawnDelay
	w ()I getWanderingTraderSpawnChance
	x ()Ljava/util/UUID; getWanderingTraderId
	y ()Lnet/minecraft/server/NBTTagCompound; getLoadedPlayerTag
	z ()I getVersion
net/minecraft/server/DataConverterAttributes net/minecraft/util/datafix/fixes/AttributesRename
	a RENAMES
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fixItemStackTag
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixName
	a (Ljava/lang/String;)Ljava/lang/String; lambda$fixName$1
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$null$7
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fixEntity
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixEntity$9
	b (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$null$3
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$8
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$6
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixItemStackTag$5
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$4
	g (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
edb net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer
	a minecraft
	b goalSelectors
	a ()V clear
	a (I)V removeGoalSelector
	a (ILjava/util/List;)V addGoalSelector
	a (Ldfj;Ldzy;DDD)V render
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Integer;Ljava/util/List;)V lambda$render$0
net/minecraft/server/EntityPig net/minecraft/world/entity/animal/Pig
	bo DATA_SADDLE_ID
	bp DATA_BOOST_TIME
	bq FOOD_ITEMS
	saddleStorage steering
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L_ ()Z isSaddleable
	M_ ()Z isSaddled
	N_ ()F getSteeringSpeed
	O_ ()Z boost
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/SoundCategory;)V equipSaddle
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLightning;)V thunderHit
	a_ (Lnet/minecraft/server/Vec3D;)V travelWithInput
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/Vec3D; getDismountLocationForPassenger
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityPig; getBreedOffspring
	ce ()Lnet/minecraft/server/Vec3D; getLeashOffset
	cl ()Lnet/minecraft/server/Entity; getControllingPassenger
	dm ()V dropEquipment
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	er ()Z canBeControlledByRider
	g (Lnet/minecraft/server/Vec3D;)V travel
	k (Lnet/minecraft/server/ItemStack;)Z isFood
	o ()V registerGoals
net/minecraft/server/ArgumentSerializerDouble net/minecraft/commands/synchronization/brigadier/DoubleArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/DoubleArgumentType; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
eda net/minecraft/client/renderer/debug/GameTestDebugRenderer
	a markers
	a ()V clear
	a (JLjava/util/Map$Entry;)Z lambda$render$0
	a (Ldfj;Ldzy;DDD)V render
	a (Lnet/minecraft/server/BlockPosition;ILjava/lang/String;I)V addMarker
	a (Lnet/minecraft/server/BlockPosition;Leda$a;)V renderMarker
edd net/minecraft/client/renderer/debug/LightDebugRenderer
	a minecraft
	a (Ldfj;Ldzy;DDD)V render
edc net/minecraft/client/renderer/debug/HeightMapRenderer
	a minecraft
	a (Ldfj;Ldzy;DDD)V render
	a (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/Vector3fa; getColor
net/minecraft/server/DataConverterMinecart net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix
	a MINECART_BY_ID
	a ()Ljava/lang/IllegalStateException; lambda$null$1
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$3
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$2
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; lambda$null$0
edf net/minecraft/client/renderer/debug/PathfindingRenderer
	a pathMap
	b pathMaxDist
	c creationMap
	a (ILnet/minecraft/server/PathEntity;F)V addPath
	a (Ldfj;Ldzy;DDD)V render
	a (Lnet/minecraft/server/BlockPosition;DDD)F distanceToCamera
	a (Lnet/minecraft/server/PathEntity;DDD)V renderPathLine
	a (Lnet/minecraft/server/PathEntity;FZZDDD)V renderPath
	b (Lnet/minecraft/server/PathEntity;FZZDDD)V doRenderPath
net/minecraft/server/ItemFlintAndSteel net/minecraft/world/item/FlintAndSteelItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemActionContext;Lnet/minecraft/server/EntityHuman;)V lambda$useOn$1
	b (Lnet/minecraft/server/ItemActionContext;Lnet/minecraft/server/EntityHuman;)V lambda$useOn$0
net/minecraft/server/EntityDragonFireball net/minecraft/world/entity/projectile/DragonFireball
	W_ ()Z shouldBurn
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	aS ()Z isPickable
	h ()Lnet/minecraft/server/ParticleParam; getTrailParticle
ede net/minecraft/client/renderer/debug/NeighborsUpdateRenderer
	a minecraft
	b lastUpdate
	a (JLnet/minecraft/server/BlockPosition;)V addUpdate
	a (Ldfj;Ldzy;DDD)V render
	a (Ljava/lang/Long;)Ljava/util/Map; lambda$addUpdate$0
edh net/minecraft/client/renderer/debug/SolidFaceRenderer
	a minecraft
	a (Ldfj;Ldzy;DDD)V render
bsd$c net/minecraft/world/level/NaturalSpawner$SpawnPredicate
edg net/minecraft/client/renderer/debug/RaidDebugRenderer
	a minecraft
	b raidCenters
	a (Ldfj;Ldzy;DDD)V render
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;I)V renderTextOverBlock
	a (Ljava/util/Collection;)V setRaidCenters
	a (Lnet/minecraft/server/BlockPosition;)V highlightRaidCenter
	b ()Ldjh; getCamera
bsd$d net/minecraft/world/level/NaturalSpawner$SpawnState
	a spawnableChunkCount
	b mobCategoryCounts
	c spawnPotential
	d unmodifiableMobCategoryCounts
	e lastCheckedPos
	f lastCheckedType
	g lastCharge
	a ()I getSpawnableChunkCount
	a (Lbsd$d;Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/IChunkAccess;)V access$400
	a (Lbsd$d;Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IChunkAccess;)Z access$500
	a (Lbsd$d;Lnet/minecraft/server/EnumCreatureType;)Z access$300
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/IChunkAccess;)V afterSpawn
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IChunkAccess;)Z canSpawn
	a (Lnet/minecraft/server/EnumCreatureType;)Z canSpawnForCategory
	b ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; getMobCategoryCounts
edj net/minecraft/client/renderer/debug/VillageSectionsDebugRenderer
	a villageSections
	a ()V clear
	a (DDD)V doRender
	a (Ldfj;Ldzy;DDD)V render
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/SectionPosition;)V lambda$doRender$0
	a (Lnet/minecraft/server/SectionPosition;)V setVillageSection
	b (Lnet/minecraft/server/SectionPosition;)V setNotVillageSection
	c (Lnet/minecraft/server/SectionPosition;)V highlightVillageSection
bsd$a net/minecraft/world/level/NaturalSpawner$AfterSpawnCallback
edi net/minecraft/client/renderer/debug/StructureRenderer
	a minecraft
	b postMainBoxes
	c postPiecesBoxes
	d startPiecesMap
	a ()V clear
	a (Ldfj;Ldzy;DDD)V render
	a (Lnet/minecraft/server/StructureBoundingBox;Ljava/util/List;Ljava/util/List;Lnet/minecraft/server/DimensionManager;)V addBoundingBox
bsd$b net/minecraft/world/level/NaturalSpawner$ChunkGetter
net/minecraft/server/WorldGenSurfaceMesa net/minecraft/world/level/levelgen/surfacebuilders/BadlandsSurfaceBuilder
	K WHITE_TERRACOTTA
	L ORANGE_TERRACOTTA
	M TERRACOTTA
	N YELLOW_TERRACOTTA
	O BROWN_TERRACOTTA
	P RED_TERRACOTTA
	Q LIGHT_GRAY_TERRACOTTA
	a clayBands
	b seed
	c pillarNoise
	d pillarRoofNoise
	e clayBandsOffsetNoise
	a (III)Lnet/minecraft/server/IBlockData; getBand
	a (J)V initNoise
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
	b (J)V generateBands
edl net/minecraft/client/renderer/debug/WorldGenAttemptRenderer
	a toRender
	b scales
	c alphas
	d reds
	e greens
	f blues
	a (Ldfj;Ldzy;DDD)V render
	a (Lnet/minecraft/server/BlockPosition;FFFFF)V addPos
edk net/minecraft/client/renderer/debug/WaterDebugRenderer
	a minecraft
	a (Ldfj;Ldzy;DDD)V render
net/minecraft/server/CriterionTriggerKilledByCrossbow net/minecraft/advancements/critereon/KilledByCrossbowTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lbs$a; createInstance
	a (Ljava/util/List;Ljava/util/Set;Lbs$a;)Z lambda$trigger$0
	a (Lnet/minecraft/server/EntityPlayer;Ljava/util/Collection;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
edn net/minecraft/client/renderer/entity/AbstractHorseRenderer
	a scale
	a (Lnet/minecraft/server/EntityHorseAbstract;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
net/minecraft/server/EnumDirection$EnumAxisDirection net/minecraft/core/Direction$AxisDirection
	c step
	d name
	e $VALUES
	a ()I getStep
	b ()Ljava/lang/String; getName
	c ()Lnet/minecraft/server/EnumDirection$EnumAxisDirection; opposite
edm net/minecraft/client/renderer/debug/package-info
net/minecraft/server/PacketStatusOutPong net/minecraft/network/protocol/status/ClientboundPongResponsePacket
	a time
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketStatusOutListener;)V handle
	b ()J getTime
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketLoginOutCustomPayload net/minecraft/network/protocol/login/ClientboundCustomQueryPacket
	a transactionId
	b identifier
	c data
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginOutListener;)V handle
	b ()I getTransactionId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/MinecraftKey; getIdentifier
	d ()Lnet/minecraft/server/PacketDataSerializer; getData
edp net/minecraft/client/renderer/entity/AreaEffectCloudRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityAreaEffectCloud;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
edo net/minecraft/client/renderer/entity/AbstractZombieRenderer
	a ZOMBIE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;)Z isShaking
	a (Lnet/minecraft/server/EntityZombie;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	b (Lnet/minecraft/server/EntityZombie;)Z isShaking
edr net/minecraft/client/renderer/entity/ArrowRenderer
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityArrow;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/Matrix4f;Lnet/minecraft/server/Matrix3f;Ldfn;IIIFFIIII)V vertex
edq net/minecraft/client/renderer/entity/ArmorStandRenderer
	a DEFAULT_SKIN_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityArmorStand;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityArmorStand;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityArmorStand;ZZZ)Leag; getRenderType
	a (Lnet/minecraft/server/EntityLiving;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;ZZZ)Leag; getRenderType
	b (Lnet/minecraft/server/Entity;)Z shouldShowName
	b (Lnet/minecraft/server/EntityArmorStand;)Z shouldShowName
	b (Lnet/minecraft/server/EntityLiving;)Z shouldShowName
edt net/minecraft/client/renderer/entity/BeeRenderer
	a ANGRY_BEE_TEXTURE
	g ANGRY_NECTAR_BEE_TEXTURE
	h BEE_TEXTURE
	i NECTAR_BEE_TEXTURE
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
eds net/minecraft/client/renderer/entity/BatRenderer
	a BAT_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityBat;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityBat;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityBat;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Ldfj;FFF)V setupRotations
edv net/minecraft/client/renderer/entity/BoatRenderer
	a model
	e BOAT_TEXTURE_LOCATIONS
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityBoat;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityBoat;FFLdfj;Ldzy;I)V render
net/minecraft/server/CommandParticle net/minecraft/server/commands/ParticleCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;FIZLjava/util/Collection;)I sendParticles
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
edu net/minecraft/client/renderer/entity/BlazeRenderer
	a BLAZE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityBlaze;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityBlaze;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
edx net/minecraft/client/renderer/entity/CaveSpiderRenderer
	a CAVE_SPIDER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCaveSpider;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCaveSpider;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntitySpider;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
net/minecraft/server/ItemSign net/minecraft/world/item/SignItem
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)Z updateCustomBlockEntityTag
edw net/minecraft/client/renderer/entity/CatRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCat;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCat;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityCat;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Ldfj;FFF)V setupRotations
net/minecraft/server/EnchantmentWaterWorker net/minecraft/world/item/enchantment/WaterWorkerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
edz net/minecraft/client/renderer/entity/ChickenRenderer
	a CHICKEN_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityChicken;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityChicken;F)F getBob
	a (Lnet/minecraft/server/EntityLiving;F)F getBob
edy net/minecraft/client/renderer/entity/ChestedHorseRenderer
	a MAP
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityHorseChestedAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
net/minecraft/server/PacketHandshakingInSetProtocol net/minecraft/network/protocol/handshake/ClientIntentionPacket
	a protocolVersion
	d intention
	hostname hostName
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketHandshakingInListener;)V handle
	a (Lnet/minecraft/server/PacketListener;)V handle
	b ()Lnet/minecraft/server/EnumProtocol; getIntention
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getProtocolVersion
	d ()Ljava/lang/String; getHostName
	e ()I getPort
net/minecraft/server/EnchantmentDepthStrider net/minecraft/world/item/enchantment/WaterWalkerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
eea net/minecraft/client/renderer/entity/CodRenderer
	a COD_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCod;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCod;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;Ldfj;FFF)V setupRotations
eec net/minecraft/client/renderer/entity/CreeperRenderer
	a CREEPER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCreeper;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCreeper;F)F getWhiteOverlayProgress
	a (Lnet/minecraft/server/EntityCreeper;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	b (Lnet/minecraft/server/EntityLiving;F)F getWhiteOverlayProgress
eeb net/minecraft/client/renderer/entity/CowRenderer
	a COW_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCow;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
eee net/minecraft/client/renderer/entity/DragonFireballRenderer
	a TEXTURE_LOCATION
	e RENDER_TYPE
	a (Ldfn;Lnet/minecraft/server/Matrix4f;Lnet/minecraft/server/Matrix3f;IFIII)V vertex
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityDragonFireball;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityDragonFireball;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityDragonFireball;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
bra$1 net/minecraft/world/level/ChunkPos$1
	a val$from
	b val$to
	c val$zDiff
	d val$xDiff
	e pos
eed net/minecraft/client/renderer/entity/DolphinRenderer
	a DOLPHIN_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityDolphin;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
eeg net/minecraft/client/renderer/entity/ElderGuardianRenderer
	a GUARDIAN_ELDER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGuardian;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGuardian;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
ccy$2 net/minecraft/world/level/block/entity/LecternBlockEntity$2
	a this$0
	a ()I getCount
	a (I)I get
	a (II)V set
eef net/minecraft/client/renderer/entity/DrownedRenderer
	a DROWNED_LOCATION
	a (Lnet/minecraft/server/EntityDrowned;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityZombie;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
ccy$1 net/minecraft/world/level/block/entity/LecternBlockEntity$1
	a this$0
	V_ ()I getMaxStackSize
	X_ ()V setChanged
	Y_ ()V clearContent
	Z_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/server/ItemStack;)Z canPlaceItem
	c ()Z isEmpty
net/minecraft/server/CommandGamemodeDefault net/minecraft/server/commands/DefaultGameModeCommands
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EnumGamemode;)I setMode
	a (Lnet/minecraft/server/EnumGamemode;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
eei net/minecraft/client/renderer/entity/EnderDragonRenderer
	a CRYSTAL_BEAM_LOCATION
	e DRAGON_EXPLODING_LOCATION
	f DRAGON_LOCATION
	g DRAGON_EYES_LOCATION
	h RENDER_TYPE
	i DECAL
	j EYES
	k BEAM
	l HALF_SQRT_3
	m model
	a (FFFFILdfj;Ldzy;I)V renderCrystalBeams
	a (Ldfn;Lnet/minecraft/server/Matrix4f;FF)V vertex2
	a (Ldfn;Lnet/minecraft/server/Matrix4f;I)V vertex01
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityEnderDragon;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityEnderDragon;FFLdfj;Ldzy;I)V render
	b (Ldfn;Lnet/minecraft/server/Matrix4f;FF)V vertex3
	c (Ldfn;Lnet/minecraft/server/Matrix4f;FF)V vertex4
eeh net/minecraft/client/renderer/entity/EndCrystalRenderer
	a END_CRYSTAL_LOCATION
	e RENDER_TYPE
	f SIN_45
	g cube
	h glass
	i base
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/Entity;Lecr;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityEnderCrystal;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityEnderCrystal;F)F getY
	a (Lnet/minecraft/server/EntityEnderCrystal;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityEnderCrystal;Lecr;DDD)Z shouldRender
eek net/minecraft/client/renderer/entity/EndermiteRenderer
	a ENDERMITE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityEndermite;)F getFlipDegrees
	b (Lnet/minecraft/server/EntityEndermite;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	c (Lnet/minecraft/server/EntityLiving;)F getFlipDegrees
eej net/minecraft/client/renderer/entity/EndermanRenderer
	a ENDERMAN_LOCATION
	g random
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;F)Lnet/minecraft/server/Vec3D; getRenderOffset
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityEnderman;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityEnderman;F)Lnet/minecraft/server/Vec3D; getRenderOffset
	a (Lnet/minecraft/server/EntityEnderman;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityInsentient;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLiving;FFLdfj;Ldzy;I)V render
eem net/minecraft/client/renderer/entity/EntityRenderer
	b entityRenderDispatcher
	c shadowRadius
	d shadowStrength
	a ()Ldkr; getFont
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;F)Lnet/minecraft/server/Vec3D; getRenderOffset
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/Entity;Lecr;DDD)Z shouldRender
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/IChatBaseComponent;Ldfj;Ldzy;I)V renderNameTag
	b ()Leel; getDispatcher
	b (Lnet/minecraft/server/Entity;)Z shouldShowName
	b (Lnet/minecraft/server/Entity;F)I getPackedLightCoords
	b (Lnet/minecraft/server/Entity;Lnet/minecraft/server/BlockPosition;)I getSkyLightLevel
net/minecraft/server/PathfinderGoalInteract net/minecraft/world/entity/ai/goal/InteractGoal
eel net/minecraft/client/renderer/entity/EntityRenderDispatcher
	a textureManager
	b camera
	c crosshairPickEntity
	d options
	e SHADOW_RENDER_TYPE
	f renderers
	g playerRenderers
	h defaultPlayerRenderer
	i font
	j level
	k cameraOrientation
	l shouldRenderShadow
	m renderHitBoxes
	a ()Z shouldRenderHitBoxes
	a (DDD)D distanceToSqr
	a (Ldfj$a;Ldfn;FFFFF)V fireVertex
	a (Ldfj$a;Ldfn;FFFFFF)V shadowVertex
	a (Ldfj$a;Ldfn;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;DDDFF)V renderBlockShadow
	a (Ldfj;Ldfn;Lnet/minecraft/server/Entity;F)V renderHitbox
	a (Ldfj;Ldfn;Lnet/minecraft/server/Entity;FFF)V renderBox
	a (Ldfj;Ldzy;Lnet/minecraft/server/Entity;)V renderFlame
	a (Ldfj;Ldzy;Lnet/minecraft/server/Entity;FFLnet/minecraft/server/IWorldReader;F)V renderShadow
	a (Lefg;Lnet/minecraft/server/IReloadableResourceManager;)V registerRenderers
	a (Lnet/minecraft/server/Entity;)Leem; getRenderer
	a (Lnet/minecraft/server/Entity;DDDFFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/Entity;F)I getPackedLightCoords
	a (Lnet/minecraft/server/Entity;Lecr;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityTypes;Leem;)V register
	a (Lnet/minecraft/server/Quaternion;)V overrideCameraOrientation
	a (Lnet/minecraft/server/World;)V setLevel
	a (Lnet/minecraft/server/World;Ldjh;Lnet/minecraft/server/Entity;)V prepare
	a (Z)V setRenderShadow
	b ()Lnet/minecraft/server/Quaternion; cameraOrientation
	b (Lnet/minecraft/server/Entity;)D distanceToSqr
	b (Z)V setRenderHitBoxes
	c ()Ldkr; getFont
czk$1 net/minecraft/world/level/storage/loot/entries/LootItem$1
eeo net/minecraft/client/renderer/entity/EvokerRenderer
	a EVOKER_ILLAGER
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityIllagerWizard;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
net/minecraft/server/EntityEnderCrystal net/minecraft/world/entity/boss/enderdragon/EndCrystal
	b time
	c DATA_BEAM_TARGET
	d DATA_SHOW_BOTTOM
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	Z ()V kill
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;)V onDestroyedBy
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aB ()Z isMovementNoisy
	aS ()Z isPickable
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	e ()V defineSynchedData
	isShowingBottom ()Z showsBottom
	j ()V tick
	setShowingBottom (Z)V setShowBottom
een net/minecraft/client/renderer/entity/EvokerFangsRenderer
	a TEXTURE_LOCATION
	e model
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityEvokerFangs;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityEvokerFangs;FFLdfj;Ldzy;I)V render
eeq net/minecraft/client/renderer/entity/FallingBlockRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityFallingBlock;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityFallingBlock;FFLdfj;Ldzy;I)V render
eep net/minecraft/client/renderer/entity/ExperienceOrbRenderer
	a EXPERIENCE_ORB_LOCATION
	e RENDER_TYPE
	a (Ldfn;Lnet/minecraft/server/Matrix4f;Lnet/minecraft/server/Matrix3f;FFIIIFFI)V vertex
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityExperienceOrb;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityExperienceOrb;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityExperienceOrb;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
net/minecraft/server/GroupDataEntity net/minecraft/world/entity/SpawnGroupData
net/minecraft/server/BlockActionContextDirectional net/minecraft/world/item/context/DirectionalPlaceContext
	b direction
	a ()Lnet/minecraft/server/BlockPosition; getClickedPos
	b ()Z canPlace
	c ()Z replacingClickedOnBlock
	d ()Lnet/minecraft/server/EnumDirection; getNearestLookingDirection
	e ()[Lnet/minecraft/server/EnumDirection; getNearestLookingDirections
	f ()Lnet/minecraft/server/EnumDirection; getHorizontalDirection
	g ()Z isSecondaryUseActive
	h ()F getRotation
ees net/minecraft/client/renderer/entity/FishingHookRenderer
	a TEXTURE_LOCATION
	e RENDER_TYPE
	a (FFFLdfn;Lnet/minecraft/server/Matrix4f;F)V stringVertex
	a (II)F fraction
	a (Ldfn;Lnet/minecraft/server/Matrix4f;Lnet/minecraft/server/Matrix3f;IFIII)V vertex
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityFishingHook;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityFishingHook;FFLdfj;Ldzy;I)V render
net/minecraft/server/DataConverterBiomeBase net/minecraft/util/datafix/fixes/RenameBiomesFix
	a name
	b biomes
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
eer net/minecraft/client/renderer/entity/FireworkEntityRenderer
	a itemRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityFireworks;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityFireworks;FFLdfj;Ldzy;I)V render
eeu net/minecraft/client/renderer/entity/GhastRenderer
	a GHAST_LOCATION
	g GHAST_SHOOTING_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGhast;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGhast;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
eet net/minecraft/client/renderer/entity/FoxRenderer
	a RED_FOX_TEXTURE
	g RED_FOX_SLEEP_TEXTURE
	h SNOW_FOX_TEXTURE
	i SNOW_FOX_SLEEP_TEXTURE
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityFox;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityFox;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;Ldfj;FFF)V setupRotations
eew net/minecraft/client/renderer/entity/GuardianRenderer
	a GUARDIAN_LOCATION
	g GUARDIAN_BEAM_LOCATION
	h BEAM_RENDER_TYPE
	a (Ldfn;Lnet/minecraft/server/Matrix4f;Lnet/minecraft/server/Matrix3f;FFFIIIFF)V vertex
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/Entity;Lecr;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityGuardian;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGuardian;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityGuardian;Lecr;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityInsentient;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityInsentient;Lecr;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityLiving;DF)Lnet/minecraft/server/Vec3D; getPosition
	a (Lnet/minecraft/server/EntityLiving;FFLdfj;Ldzy;I)V render
eev net/minecraft/client/renderer/entity/GiantMobRenderer
	a ZOMBIE_LOCATION
	g scale
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGiantZombie;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGiantZombie;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
eey net/minecraft/client/renderer/entity/HorseRenderer
	a LOCATION_BY_VARIANT
	a (Ljava/util/EnumMap;)V lambda$static$0
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityHorse;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
eex net/minecraft/client/renderer/entity/HoglinRenderer
	a HOGLIN_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityHoglin;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;)Z isShaking
	b (Lnet/minecraft/server/EntityHoglin;)Z isShaking
eez net/minecraft/client/renderer/entity/HumanoidMobRenderer
	a DEFAULT_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
net/minecraft/server/BlockHalfTransparent net/minecraft/world/level/block/HalfTransparentBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z skipRendering
dlu$a net/minecraft/client/gui/components/OptionsList$Entry
	a children
	a (ILdfj;IIFLdle;)V lambda$render$0
	a (Ldfj;IIIIIIIZF)V render
	a (Ldka;ILdjz;)Ldlu$a; big
	a (Ldka;ILdjz;Ldjz;)Ldlu$a; small
	a (Ldlu$a;)Ljava/util/List; access$000
	av_ ()Ljava/util/List; children
cg$1 net/minecraft/advancements/critereon/PlayerPredicate$1
net/minecraft/server/PacketPlayOutEntity$PacketPlayOutRelEntityMove net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/BlockTNT net/minecraft/world/level/block/TntBlock
	a UNSTABLE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$use$0
	a (Lnet/minecraft/server/Explosion;)Z dropFromExplosion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V explode
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)V explode
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Explosion;)V wasExploded
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/IProjectile;)V onProjectileHit
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
efb net/minecraft/client/renderer/entity/IllagerRenderer
	a (Lnet/minecraft/server/EntityIllagerAbstract;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
efa net/minecraft/client/renderer/entity/HuskRenderer
	a HUSK_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityZombie;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityZombie;Ldfj;F)V scale
net/minecraft/server/WorldGenFoilagePlacerPine net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer
	a CODEC
	b height
	a ()Lnet/minecraft/server/WorldGenFoilagePlacers; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ljava/util/Random;I)I foliageRadius
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	a (Ljava/util/Random;ILnet/minecraft/server/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;ILcni$b;IILjava/util/Set;ILnet/minecraft/server/StructureBoundingBox;)V createFoliage
	a (Lnet/minecraft/server/WorldGenFoilagePlacerPine;)Lnet/minecraft/server/IntSpread; lambda$null$0
net/minecraft/server/WorldGenDecoratorLakeLava net/minecraft/world/level/levelgen/placement/LakeLavaPlacementDecorator
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorDungeonConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorEndIsland net/minecraft/world/level/levelgen/placement/EndIslandPlacementDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/BlockChest net/minecraft/world/level/block/ChestBlock
	c TYPE
	d WATERLOGGED
	e NORTH_AABB
	f SOUTH_AABB
	g WEST_AABB
	h EAST_AABB
	i AABB
	j CHEST_COMBINER
	k MENU_PROVIDER_COMBINER
	a (Lccz;)Lnet/minecraft/server/DoubleBlockFinder$Combiner; opennessCombiner
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; candidatePartnerFacing
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z isChestBlockedAt
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isBlockedChestByBlock
	a (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/DoubleBlockFinder$Result; combine
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z isCatSittingOnChest
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	c ()Lnet/minecraft/server/Statistic; getOpenChestStat
	c (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z lambda$combine$0
	d ()Lnet/minecraft/server/TileEntityTypes; blockEntityType
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/DoubleBlockFinder$BlockType; getBlockType
	getInventory (Lnet/minecraft/server/BlockChest;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/IInventory; getContainer
	h (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumDirection; getConnectedDirection
efd net/minecraft/client/renderer/entity/IronGolemRenderer
	a GOLEM_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityIronGolem;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityIronGolem;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;Ldfj;FFF)V setupRotations
efc net/minecraft/client/renderer/entity/IllusionerRenderer
	a ILLUSIONER
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityIllagerIllusioner;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityIllagerIllusioner;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityInsentient;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLiving;FFLdfj;Ldzy;I)V render
	b (Lnet/minecraft/server/EntityIllagerIllusioner;)Z isBodyVisible
	d (Lnet/minecraft/server/EntityLiving;)Z isBodyVisible
net/minecraft/server/PacketStatusOutServerInfo net/minecraft/network/protocol/status/ClientboundStatusResponsePacket
	a GSON
	b status
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketStatusOutListener;)V handle
	b ()Lnet/minecraft/server/ServerPing; getStatus
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
eff net/minecraft/client/renderer/entity/ItemFrameRenderer
	a FRAME_LOCATION
	e MAP_FRAME_LOCATION
	f minecraft
	g itemRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;F)Lnet/minecraft/server/Vec3D; getRenderOffset
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/IChatBaseComponent;Ldfj;Ldzy;I)V renderNameTag
	a (Lnet/minecraft/server/EntityItemFrame;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityItemFrame;F)Lnet/minecraft/server/Vec3D; getRenderOffset
	a (Lnet/minecraft/server/EntityItemFrame;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityItemFrame;Lnet/minecraft/server/IChatBaseComponent;Ldfj;Ldzy;I)V renderNameTag
	b (Lnet/minecraft/server/Entity;)Z shouldShowName
	b (Lnet/minecraft/server/EntityItemFrame;)Z shouldShowName
efe net/minecraft/client/renderer/entity/ItemEntityRenderer
	a itemRenderer
	e random
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityItem;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityItem;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/ItemStack;)I getRenderAmount
efh net/minecraft/client/renderer/entity/LeashKnotRenderer
	a KNOT_LOCATION
	e model
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLeash;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLeash;FFLdfj;Ldzy;I)V render
net/minecraft/server/DoubleBlockFinder$Combiner net/minecraft/world/level/block/DoubleBlockCombiner$Combiner
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
	b ()Ljava/lang/Object; acceptNone
efg net/minecraft/client/renderer/entity/ItemRenderer
	a ENCHANT_GLINT_LOCATION
	b blitOffset
	c IGNORED
	d itemModelShaper
	e textureManager
	f itemColors
	a ()Ldzv; getItemModelShaper
	a (Ldfe;IIIIIIII)V fillRect
	a (Ldfj;Ldfn;Ljava/util/List;Lnet/minecraft/server/ItemStack;II)V renderQuadList
	a (Ldkr;Lnet/minecraft/server/ItemStack;II)V renderGuiItemDecorations
	a (Ldkr;Lnet/minecraft/server/ItemStack;IILjava/lang/String;)V renderGuiItemDecorations
	a (Ldzy;Leag;Ldfj$a;)Ldfn; getCompassFoilBuffer
	a (Ldzy;Leag;ZZ)Ldfn; getArmorFoilBuffer
	a (Lelg;Lnet/minecraft/server/ItemStack;IILdfj;Ldfn;)V renderModelLists
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;II)V renderAndDecorateItem
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lebe$b;ZLdfj;Ldzy;Lnet/minecraft/server/World;II)V renderStatic
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; lambda$tryRenderGuiItem$3
	a (Lnet/minecraft/server/ItemStack;II)V renderGuiItem
	a (Lnet/minecraft/server/ItemStack;IILelg;)V renderGuiItem
	a (Lnet/minecraft/server/ItemStack;Lebe$b;IILdfj;Ldzy;)V renderStatic
	a (Lnet/minecraft/server/ItemStack;Lebe$b;ZLdfj;Ldzy;IILelg;)V render
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lelg; getModel
	b (Ldzy;Leag;Ldfj$a;)Ldfn; getCompassFoilBufferDirect
	b (Ldzy;Leag;ZZ)Ldfn; getFoilBuffer
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;II)V tryRenderGuiItem
	b (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; lambda$tryRenderGuiItem$2
	b (Lnet/minecraft/server/ItemStack;II)V renderAndDecorateItem
	c (Ldzy;Leag;ZZ)Ldfn; getFoilBufferDirect
	c (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; lambda$tryRenderGuiItem$1
	c (Lnet/minecraft/server/ItemStack;II)V renderAndDecorateFakeItem
	d (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; lambda$tryRenderGuiItem$0
ejq$a net/minecraft/client/renderer/texture/SimpleTexture$TextureImage
	a metadata
	b image
	c exception
	a ()Leld; getTextureMetadata
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;)Lejq$a; load
	b ()Ldeq; getImage
	c ()V throwIfError
efj net/minecraft/client/renderer/entity/LivingEntityRenderer
	a LOGGER
	e model
	f layers
	a (Leil;)Z addLayer
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLiving;)Z isShaking
	a (Lnet/minecraft/server/EntityLiving;F)F getBob
	a (Lnet/minecraft/server/EntityLiving;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;ZZZ)Leag; getRenderType
	a (Lnet/minecraft/server/EnumDirection;)F sleepDirectionToRotation
	b (Lnet/minecraft/server/Entity;)Z shouldShowName
	b (Lnet/minecraft/server/EntityLiving;)Z shouldShowName
	b (Lnet/minecraft/server/EntityLiving;F)F getWhiteOverlayProgress
	c ()Ldtu; getModel
	c (Lnet/minecraft/server/EntityLiving;)F getFlipDegrees
	c (Lnet/minecraft/server/EntityLiving;F)I getOverlayCoords
	d (Lnet/minecraft/server/EntityLiving;)Z isBodyVisible
	d (Lnet/minecraft/server/EntityLiving;F)F getAttackAnim
efi net/minecraft/client/renderer/entity/LightningBoltRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLightning;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLightning;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/Matrix4f;Ldfn;FFIFFFFFFFZZZZ)V quad
dxg$a net/minecraft/client/particle/DragonBreathParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/CriterionTriggerBrewedPotion net/minecraft/advancements/critereon/BrewedPotionTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lap$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/PotionRegistry;)V trigger
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$createInstance$0
	a (Lnet/minecraft/server/PotionRegistry;Lap$a;)Z lambda$trigger$1
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
efl net/minecraft/client/renderer/entity/LlamaSpitRenderer
	a LLAMA_SPIT_LOCATION
	e model
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLlamaSpit;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLlamaSpit;FFLdfj;Ldzy;I)V render
efk net/minecraft/client/renderer/entity/LlamaRenderer
	a LLAMA_LOCATIONS
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLlama;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
efn net/minecraft/client/renderer/entity/MinecartRenderer
	a model
	e MINECART_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityMinecartAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityMinecartAbstract;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityMinecartAbstract;FLnet/minecraft/server/IBlockData;Ldfj;Ldzy;I)V renderMinecartContents
efm net/minecraft/client/renderer/entity/MagmaCubeRenderer
	a MAGMACUBE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityMagmaCube;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityMagmaCube;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityMagmaCube;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
efp net/minecraft/client/renderer/entity/MushroomCowRenderer
	a TEXTURES
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityMushroomCow;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
efo net/minecraft/client/renderer/entity/MobRenderer
	a (Ldfn;Lnet/minecraft/server/Matrix4f;FFFIIIIFFFF)V renderSide
	a (Ldfn;Lnet/minecraft/server/Matrix4f;IFFFFFIIZFF)V addVertexPair
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/Entity;Lecr;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityInsentient;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityInsentient;FLdfj;Ldzy;Lnet/minecraft/server/Entity;)V renderLeash
	a (Lnet/minecraft/server/EntityInsentient;Lecr;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityLiving;FFLdfj;Ldzy;I)V render
	b (Lnet/minecraft/server/Entity;)Z shouldShowName
	b (Lnet/minecraft/server/EntityInsentient;)Z shouldShowName
	b (Lnet/minecraft/server/EntityLiving;)Z shouldShowName
efr net/minecraft/client/renderer/entity/PaintingRenderer
	a (Ldfj;Ldfn;Lnet/minecraft/server/EntityPainting;IILeju;Leju;)V renderPainting
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityPainting;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPainting;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/Matrix4f;Lnet/minecraft/server/Matrix3f;Ldfn;FFFFFIIII)V vertex
efq net/minecraft/client/renderer/entity/OcelotRenderer
	a CAT_OCELOT_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityOcelot;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
eft net/minecraft/client/renderer/entity/ParrotRenderer
	a PARROT_LOCATIONS
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;F)F getBob
	a (Lnet/minecraft/server/EntityParrot;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityParrot;F)F getBob
efs net/minecraft/client/renderer/entity/PandaRenderer
	a TEXTURES
	a (FFIFF)F getAngle
	a (Ljava/util/EnumMap;)V lambda$static$0
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityPanda;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPanda;Ldfj;FFF)V setupRotations
efv net/minecraft/client/renderer/entity/PigRenderer
	a PIG_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPig;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
net/minecraft/server/BlockSkullAbstract net/minecraft/world/level/block/AbstractSkullBlock
	a type
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	b ()Lbzs$a; getType
efu net/minecraft/client/renderer/entity/PhantomRenderer
	a PHANTOM_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityPhantom;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPhantom;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityPhantom;Ldfj;FFF)V setupRotations
efx net/minecraft/client/renderer/entity/PillagerRenderer
	a PILLAGER
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPillager;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
efw net/minecraft/client/renderer/entity/PiglinRenderer
	a resourceLocations
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;)Z isShaking
	a (Z)Lduu; createModel
	c (Lnet/minecraft/server/EntityInsentient;)Z isShaking
efz net/minecraft/client/renderer/entity/PufferfishRenderer
	a PUFFER_LOCATION
	g puffStateO
	h small
	i mid
	j big
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityInsentient;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLiving;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLiving;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityPufferFish;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPufferFish;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityPufferFish;Ldfj;FFF)V setupRotations
dgn$b com/mojang/realmsclient/dto/RealmsServer$State
	a CLOSED
	b OPEN
	c UNINITIALIZED
	d $VALUES
efy net/minecraft/client/renderer/entity/PolarBearRenderer
	a BEAR_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityPolarBear;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPolarBear;Ldfj;F)V scale
dgn$a com/mojang/realmsclient/dto/RealmsServer$McoServerComparator
	a refOwner
	a (Ldgn;Ldgn;)I compare
dgn$c com/mojang/realmsclient/dto/RealmsServer$WorldType
	a NORMAL
	b MINIGAME
	c ADVENTUREMAP
	d EXPERIENCE
	e INSPIRATION
	f $VALUES
net/minecraft/server/ContainerPlayer net/minecraft/world/inventory/InventoryMenu
	c BLOCK_ATLAS
	craftInventory craftSlots
	d EMPTY_ARMOR_SLOT_HELMET
	e EMPTY_ARMOR_SLOT_CHESTPLATE
	f EMPTY_ARMOR_SLOT_LEGGINGS
	g EMPTY_ARMOR_SLOT_BOOTS
	h EMPTY_ARMOR_SLOT_SHIELD
	i active
	j TEXTURE_EMPTY_SLOTS
	k SLOT_IDS
	resultInventory resultSlots
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/IRecipe;)Z recipeMatches
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()V clearCraftingContent
	f ()I getResultSlotIndex
	g ()I getGridWidth
	h ()I getGridHeight
	i ()I getSize
	j ()Lnet/minecraft/server/InventoryCrafting; getCraftSlots
	k ()[Lnet/minecraft/server/MinecraftKey; access$000
	m ()Lnet/minecraft/server/RecipeBookType; getRecipeBookType
ega net/minecraft/client/renderer/entity/RabbitRenderer
	a RABBIT_BROWN_LOCATION
	g RABBIT_WHITE_LOCATION
	h RABBIT_BLACK_LOCATION
	i RABBIT_GOLD_LOCATION
	j RABBIT_SALT_LOCATION
	k RABBIT_WHITE_SPLOTCHED_LOCATION
	l RABBIT_TOAST_LOCATION
	m RABBIT_EVIL_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityRabbit;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
egc net/minecraft/client/renderer/entity/RenderLayerParent
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	c ()Ldtu; getModel
net/minecraft/server/PathfinderGoalFollowBoat net/minecraft/world/entity/ai/goal/FollowBoatGoal
	a timeToRecalcPath
	b mob
	c following
	d currentGoal
	C_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
egb net/minecraft/client/renderer/entity/RavagerRenderer
	a TEXTURE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityRavager;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
ege net/minecraft/client/renderer/entity/SheepRenderer
	a SHEEP_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySheep;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
net/minecraft/server/PacketPlayOutPosition net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket
	a x
	b y
	c z
	d yRot
	e xRot
	f relativeArguments
	g id
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()D getX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()D getY
	d ()D getZ
	e ()F getYRot
	f ()F getXRot
	g ()I getId
	h ()Ljava/util/Set; getRelativeArguments
egd net/minecraft/client/renderer/entity/SalmonRenderer
	a SALMON_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntitySalmon;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySalmon;Ldfj;FFF)V setupRotations
egg net/minecraft/client/renderer/entity/ShulkerRenderer
	a DEFAULT_TEXTURE_LOCATION
	g TEXTURE_LOCATION
	a (I)[Lnet/minecraft/server/MinecraftKey; lambda$static$1
	a (Lelj;)Lnet/minecraft/server/MinecraftKey; lambda$static$0
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;F)Lnet/minecraft/server/Vec3D; getRenderOffset
	a (Lnet/minecraft/server/Entity;Lecr;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityInsentient;Lecr;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityLiving;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityShulker;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityShulker;F)Lnet/minecraft/server/Vec3D; getRenderOffset
	a (Lnet/minecraft/server/EntityShulker;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityShulker;Lecr;DDD)Z shouldRender
egf net/minecraft/client/renderer/entity/ShulkerBulletRenderer
	a TEXTURE_LOCATION
	e RENDER_TYPE
	f model
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityShulkerBullet;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityShulkerBullet;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityShulkerBullet;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
egi net/minecraft/client/renderer/entity/SkeletonRenderer
	a SKELETON_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySkeletonAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
egh net/minecraft/client/renderer/entity/SilverfishRenderer
	a SILVERFISH_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySilverfish;)F getFlipDegrees
	b (Lnet/minecraft/server/EntitySilverfish;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	c (Lnet/minecraft/server/EntityLiving;)F getFlipDegrees
egk net/minecraft/client/renderer/entity/SnowGolemRenderer
	a SNOW_GOLEM_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySnowman;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
net/minecraft/server/WorldGenMonument net/minecraft/world/level/levelgen/feature/OceanMonumentFeature
	u MONUMENT_ENEMIES
	a ()Lckx$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z isFeatureChunk
	b ()Z linearSeparation
	c ()Ljava/util/List; getSpecialEnemies
net/minecraft/server/GameTestHarnessTicker net/minecraft/gametest/framework/GameTestTicker
	a singleton
	b testInfos
	a ()V clear
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V add
	b ()V tick
net/minecraft/server/EntityAmbient net/minecraft/world/entity/ambient/AmbientCreature
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
egj net/minecraft/client/renderer/entity/SlimeRenderer
	a SLIME_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityInsentient;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLiving;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntitySlime;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySlime;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntitySlime;Ldfj;F)V scale
egm net/minecraft/client/renderer/entity/SpiderRenderer
	a SPIDER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySpider;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	b (Lnet/minecraft/server/EntitySpider;)F getFlipDegrees
	c (Lnet/minecraft/server/EntityLiving;)F getFlipDegrees
cg$d net/minecraft/advancements/critereon/PlayerPredicate$Builder
	a level
	b gameType
	c stats
	d recipes
	e advancements
	a ()Lcg$d; player
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lcg$d; setLevel
	a (Lnet/minecraft/server/EnumGamemode;)Lcg$d; setGameType
	a (Lnet/minecraft/server/MinecraftKey;Ljava/util/Map;)Lcg$d; checkAdvancementCriterions
	a (Lnet/minecraft/server/MinecraftKey;Z)Lcg$d; addRecipe
	a (Lnet/minecraft/server/Statistic;Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lcg$d; addStat
	b ()Lnet/minecraft/server/CriterionConditionPlayer; build
	b (Lnet/minecraft/server/MinecraftKey;Z)Lcg$d; checkAdvancementDone
net/minecraft/server/ItemToolMaterial net/minecraft/world/item/TieredItem
	a tier
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isValidRepairItem
	c ()I getEnchantmentValue
	g ()Lnet/minecraft/server/ToolMaterial; getTier
egl net/minecraft/client/renderer/entity/SpectralArrowRenderer
	a SPECTRAL_ARROW_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySpectralArrow;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
ego net/minecraft/client/renderer/entity/StrayRenderer
	a STRAY_SKELETON_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySkeletonAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
cg$b net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate
	a state
	a ()Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/server/AdvancementProgress;)Z test
egn net/minecraft/client/renderer/entity/SquidRenderer
	a SQUID_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;F)F getBob
	a (Lnet/minecraft/server/EntityLiving;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntitySquid;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySquid;F)F getBob
	a (Lnet/minecraft/server/EntitySquid;Ldfj;FFF)V setupRotations
cg$c net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate
	a ()Lcom/google/gson/JsonElement; toJson
net/minecraft/server/GameTestHarnessListener net/minecraft/gametest/framework/GameTestListener
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V testStructureLoaded
	b (Lnet/minecraft/server/GameTestHarnessInfo;)V testPassed
	c (Lnet/minecraft/server/GameTestHarnessInfo;)V testFailed
egq net/minecraft/client/renderer/entity/ThrownItemRenderer
	a itemRenderer
	e scale
	f fullBright
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
egp net/minecraft/client/renderer/entity/StriderRenderer
	a STRIDER_LOCATION
	g COLD_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;)Z isShaking
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityStrider;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityStrider;Ldfj;F)V scale
	b (Lnet/minecraft/server/EntityStrider;)Z isShaking
cg$a net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate
	a criterions
	a ()Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/server/AdvancementProgress;)Z test
net/minecraft/server/VillagerDataHolder net/minecraft/world/entity/npc/VillagerDataHolder
	a (Lnet/minecraft/server/VillagerData;)V setVillagerData
egs net/minecraft/client/renderer/entity/TippableArrowRenderer
	a NORMAL_ARROW_LOCATION
	e TIPPED_ARROW_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityTippedArrow;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
egr net/minecraft/client/renderer/entity/ThrownTridentRenderer
	a TRIDENT_LOCATION
	e model
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityThrownTrident;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityThrownTrident;FFLdfj;Ldzy;I)V render
net/minecraft/server/CSVWriter net/minecraft/util/CsvOutput
	a output
	b columnCount
	a ()Laet$a; builder
	a (Ljava/lang/Object;)Ljava/lang/String; getStringValue
	a (Ljava/util/stream/Stream;)V writeLine
	a ([Ljava/lang/Object;)V writeRow
egu net/minecraft/client/renderer/entity/TntRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityTNTPrimed;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityTNTPrimed;FFLdfj;Ldzy;I)V render
egt net/minecraft/client/renderer/entity/TntMinecartRenderer
	a (Lnet/minecraft/server/EntityMinecartAbstract;FLnet/minecraft/server/IBlockData;Ldfj;Ldzy;I)V renderMinecartContents
	a (Lnet/minecraft/server/EntityMinecartTNT;FLnet/minecraft/server/IBlockData;Ldfj;Ldzy;I)V renderMinecartContents
	a (Lnet/minecraft/server/IBlockData;Ldfj;Ldzy;IZ)V renderWhiteSolidBlock
egw net/minecraft/client/renderer/entity/TurtleRenderer
	a TURTLE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityInsentient;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLiving;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityTurtle;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityTurtle;FFLdfj;Ldzy;I)V render
net/minecraft/server/BlockStateInteger net/minecraft/world/level/block/state/properties/IntegerProperty
	a values
	a ()Ljava/util/Collection; getPossibleValues
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Ljava/lang/Integer;)Ljava/lang/String; getName
	b ()I generateHashCode
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	of (Ljava/lang/String;II)Lnet/minecraft/server/BlockStateInteger; create
net/minecraft/server/BlockProperties net/minecraft/world/level/block/state/properties/BlockStateProperties
	A TRIGGERED
	B UNSTABLE
	C WATERLOGGED
	D VINE_END
	E HORIZONTAL_AXIS
	F AXIS
	G UP
	H DOWN
	I NORTH
	J EAST
	K SOUTH
	L WEST
	M FACING
	N FACING_HOPPER
	O HORIZONTAL_FACING
	P ORIENTATION
	Q ATTACH_FACE
	R BELL_ATTACHMENT
	S EAST_WALL
	T NORTH_WALL
	U SOUTH_WALL
	V WEST_WALL
	W EAST_REDSTONE
	X NORTH_REDSTONE
	Y SOUTH_REDSTONE
	Z WEST_REDSTONE
	a ATTACHED
	aA STAGE
	aB STABILITY_DISTANCE
	aC RESPAWN_ANCHOR_CHARGES
	aD ROTATION_16
	aE BED_PART
	aF CHEST_TYPE
	aG MODE_COMPARATOR
	aH DOOR_HINGE
	aI NOTEBLOCK_INSTRUMENT
	aJ PISTON_TYPE
	aK SLAB_TYPE
	aL STAIRS_SHAPE
	aM STRUCTUREBLOCK_MODE
	aN BAMBOO_LEAVES
	aa DOUBLE_BLOCK_HALF
	ab HALF
	ac RAIL_SHAPE
	ad RAIL_SHAPE_STRAIGHT
	ae AGE_1
	af AGE_2
	ag AGE_3
	ah AGE_5
	ai AGE_7
	aj AGE_15
	ak AGE_25
	al BITES
	am DELAY
	an DISTANCE
	ao EGGS
	ap HATCH
	aq LAYERS
	ar LEVEL_CAULDRON
	as LEVEL_COMPOSTER
	at LEVEL_FLOWING
	au LEVEL_HONEY
	av LEVEL
	aw MOISTURE
	ax NOTE
	ay PICKLES
	az POWER
	b BOTTOM
	c CONDITIONAL
	d DISARMED
	e DRAG
	f ENABLED
	g EXTENDED
	h EYE
	i FALLING
	j HANGING
	k HAS_BOTTLE_0
	l HAS_BOTTLE_1
	m HAS_BOTTLE_2
	n HAS_RECORD
	o HAS_BOOK
	p INVERTED
	q IN_WALL
	r LIT
	s LOCKED
	t OCCUPIED
	u OPEN
	v PERSISTENT
	w POWERED
	x SHORT
	y SIGNAL_FIRE
	z SNOWY
	a (Lnet/minecraft/server/BlockPropertyTrackPosition;)Z lambda$static$1
	a (Lnet/minecraft/server/EnumDirection;)Z lambda$static$0
egv net/minecraft/client/renderer/entity/TropicalFishRenderer
	a modelA
	g modelB
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityInsentient;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLiving;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLiving;Ldfj;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityTropicalFish;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityTropicalFish;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityTropicalFish;Ldfj;FFF)V setupRotations
egy net/minecraft/client/renderer/entity/VexRenderer
	a VEX_LOCATION
	g VEX_CHARGING_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityVex;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityVex;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityVex;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
aiy$1 net/minecraft/util/datafix/fixes/ItemRenameFix$1
	a val$fixItem
	a (Ljava/lang/String;)Ljava/lang/String; fixItem
egx net/minecraft/client/renderer/entity/UndeadHorseRenderer
	a MAP
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityHorseAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
ajk$a net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection
	e leaveIds
	f logIds
	g stateToIdMap
	a ()Z skippable
	a (I)Z isLog
	a (III)V setDistance
	a (Lajk$a;I)I access$200
	a (Lajk$a;III)V access$300
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic; makeLeafTag
	b (I)Z isLeaf
	d (I)I getDistance
net/minecraft/server/PacketPlayInResourcePackStatus$EnumResourcePackStatus net/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action
	e $VALUES
net/minecraft/server/GenLayerBiome net/minecraft/world/level/newbiome/layer/BiomeInitLayer
	a LEGACY_WARM_BIOMES
	b WARM_BIOMES
	c MEDIUM_BIOMES
	d COLD_BIOMES
	e ICE_BIOMES
	f warmBiomes
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
egz net/minecraft/client/renderer/entity/VillagerRenderer
	a VILLAGER_BASE_SKIN
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityVillager;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityVillager;Ldfj;F)V scale
ecx$1 net/minecraft/client/renderer/debug/ChunkDebugRenderer$1
net/minecraft/server/LootItemFunctionCopyName$Source net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource
	e name
	f param
	g $VALUES
	a (Ljava/lang/String;)Lnet/minecraft/server/LootItemFunctionCopyName$Source; getByName
ehb net/minecraft/client/renderer/entity/WanderingTraderRenderer
	a VILLAGER_BASE_SKIN
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityVillagerTrader;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityVillagerTrader;Ldfj;F)V scale
net/minecraft/server/RecipeArmorDye net/minecraft/world/item/crafting/ArmorDyeRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
eha net/minecraft/client/renderer/entity/VindicatorRenderer
	a VINDICATOR
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityVindicator;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
ehd net/minecraft/client/renderer/entity/WitherBossRenderer
	a WITHER_INVULNERABLE_LOCATION
	g WITHER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityWither;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityWither;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityWither;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
ehc net/minecraft/client/renderer/entity/WitchRenderer
	a WITCH_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityInsentient;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLiving;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityWitch;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityWitch;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityWitch;Ldfj;F)V scale
ehf net/minecraft/client/renderer/entity/WitherSkullRenderer
	a WITHER_INVULNERABLE_LOCATION
	e WITHER_LOCATION
	f model
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityWitherSkull;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityWitherSkull;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityWitherSkull;Lnet/minecraft/server/BlockPosition;)I getBlockLightLevel
ehe net/minecraft/client/renderer/entity/WitherSkeletonRenderer
	a WITHER_SKELETON_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntitySkeletonAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySkeletonAbstract;Ldfj;F)V scale
ehh net/minecraft/client/renderer/entity/ZoglinRenderer
	a ZOGLIN_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityZoglin;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
ehg net/minecraft/client/renderer/entity/WolfRenderer
	a WOLF_LOCATION
	g WOLF_TAME_LOCATION
	h WOLF_ANGRY_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityInsentient;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLiving;F)F getBob
	a (Lnet/minecraft/server/EntityLiving;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityWolf;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityWolf;F)F getBob
	a (Lnet/minecraft/server/EntityWolf;FFLdfj;Ldzy;I)V render
ehj net/minecraft/client/renderer/entity/ZombieVillagerRenderer
	a ZOMBIE_VILLAGER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;)Z isShaking
	a (Lnet/minecraft/server/EntityZombieVillager;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	b (Lnet/minecraft/server/EntityZombieVillager;)Z isShaking
ehi net/minecraft/client/renderer/entity/ZombieRenderer
ehl net/minecraft/client/renderer/entity/layers/BeeStingerLayer
	a BEE_STINGER_LOCATION
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFF)V renderStuckItem
	a (Ldfn;Lnet/minecraft/server/Matrix4f;Lnet/minecraft/server/Matrix3f;FIFFI)V vertex
	a (Lnet/minecraft/server/EntityLiving;)I numStuck
ajk$b net/minecraft/util/datafix/fixes/LeavesFix$Section
	a paletteFinder
	b palette
	c index
	d storage
	e blockStateType
	a ()Z skippable
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; write
	a (Lcom/mojang/serialization/Dynamic;)V readStorage
	a (Ljava/lang/String;ZI)I getStateId
	a (Ljava/util/List;)Ljava/util/List; lambda$new$0
	b ()Z isSkippable
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; lambda$write$2
	c ()I getIndex
	c (I)I getBlock
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$write$1
net/minecraft/server/DataConverterEntityRenameAbstract net/minecraft/util/datafix/fixes/SimplestEntityRenameFix
	a name
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$2
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;)Ljava/lang/String; lambda$null$0
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$3
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$4
	a (Ljava/lang/String;)Ljava/lang/String; rename
eng$1 net/minecraft/client/sounds/LoopingAudioStream$1
ehk net/minecraft/client/renderer/entity/layers/ArrowLayer
	a dispatcher
	b arrow
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFF)V renderStuckItem
	a (Lnet/minecraft/server/EntityLiving;)I numStuck
cux$a net/minecraft/world/level/material/Material$Builder
	a pushReaction
	b blocksMotion
	c flammable
	d liquid
	e replaceable
	f solid
	g color
	h solidBlocking
	a ()Lcux$a; liquid
	a (Lcux$a;)Lcux$a; access$000
	b ()Lcux$a; nonSolid
	c ()Lcux$a; noCollider
	d ()Lcux$a; flammable
	e ()Lcux$a; replaceable
	f ()Lcux$a; destroyOnPush
	g ()Lcux$a; notPushable
	h ()Lnet/minecraft/server/Material; build
	i ()Lcux$a; notSolidBlocking
net/minecraft/server/DataConverterSchemaV2100 net/minecraft/util/datafix/schemas/V2100
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$1
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
net/minecraft/server/BlockNetherVinesUtil net/minecraft/world/level/block/NetherVines
	a (Ljava/util/Random;)I getBlocksToGrowWhenBonemealed
	a (Lnet/minecraft/server/IBlockData;)Z isValidGrowthState
ehn net/minecraft/client/renderer/entity/layers/CarriedBlockLayer
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityEnderman;FFFFFF)V render
dxj$a net/minecraft/client/particle/EnchantmentTableParticle$NautilusProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
cug$2 net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint$2
	a val$minMapSize
	b this$0
net/minecraft/server/DataConverterMap net/minecraft/util/datafix/fixes/ItemStackMapIdFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
ehm net/minecraft/client/renderer/entity/layers/CapeLayer
	a (Ldfj;Ldzy;ILdzb;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
dwx$1 net/minecraft/client/particle/AttackSweepParticle$1
cug$1 net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint$1
	a val$minQueueSize
	b this$0
ehp net/minecraft/client/renderer/entity/layers/CreeperPowerLayer
	a POWER_LOCATION
	b model
	a ()Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (F)F xOffset
	b ()Ldtu; model
net/minecraft/server/WorldGenFeatureCompositeConfiguration net/minecraft/world/level/levelgen/feature/configurations/DecoratedFeatureConfiguration
	a CODEC
	b feature
	c decorator
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/WorldGenFeatureCompositeConfiguration;)Lnet/minecraft/server/WorldGenDecoratorConfigured; lambda$null$1
	an_ ()Ljava/util/stream/Stream; getFeatures
	b (Lnet/minecraft/server/WorldGenFeatureCompositeConfiguration;)Ljava/util/function/Supplier; lambda$null$0
eho net/minecraft/client/renderer/entity/layers/CatCollarLayer
	a CAT_COLLAR_LOCATION
	b catModel
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityCat;FFFFFF)V render
dxj$b net/minecraft/client/particle/EnchantmentTableParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
ehr net/minecraft/client/renderer/entity/layers/CustomHeadLayer
	a scaleX
	b scaleY
	c scaleZ
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
ehq net/minecraft/client/renderer/entity/layers/CrossedArmsItemLayer
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
eht net/minecraft/client/renderer/entity/layers/DolphinCarryingItemLayer
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityDolphin;FFFFFF)V render
ehs net/minecraft/client/renderer/entity/layers/Deadmau5EarsLayer
	a (Ldfj;Ldzy;ILdzb;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
net/minecraft/server/PathfinderGoalSelector net/minecraft/world/entity/ai/goal/GoalSelector
	a LOGGER
	b NO_GOAL
	c lockedFlags
	d availableGoals
	e profiler
	f disabledFlags
	g newGoalRate
	a ()V removeAllGoals
	a (I)V setNewGoalRate
	a (ILnet/minecraft/server/PathfinderGoal;)V addGoal
	a (Lnet/minecraft/server/PathfinderGoal$Type;)V disableControlFlag
	a (Lnet/minecraft/server/PathfinderGoal$Type;Lnet/minecraft/server/PathfinderGoalWrapped;)V lambda$tick$3
	a (Lnet/minecraft/server/PathfinderGoal$Type;Z)V setControlFlag
	a (Lnet/minecraft/server/PathfinderGoal;)V removeGoal
	a (Lnet/minecraft/server/PathfinderGoal;Lnet/minecraft/server/PathfinderGoalWrapped;)Z lambda$removeGoal$1
	a (Lnet/minecraft/server/PathfinderGoalWrapped;)V lambda$tick$9
	a (Lnet/minecraft/server/PathfinderGoalWrapped;Lnet/minecraft/server/PathfinderGoal$Type;)V lambda$null$8
	b (Lnet/minecraft/server/PathfinderGoal$Type;)V enableControlFlag
	b (Lnet/minecraft/server/PathfinderGoal;Lnet/minecraft/server/PathfinderGoalWrapped;)Z lambda$removeGoal$0
	b (Lnet/minecraft/server/PathfinderGoalWrapped;)Z lambda$tick$7
	b (Lnet/minecraft/server/PathfinderGoalWrapped;Lnet/minecraft/server/PathfinderGoal$Type;)Z lambda$null$6
	c ()Ljava/util/Set; getAvailableGoals
	c (Lnet/minecraft/server/PathfinderGoalWrapped;)Z lambda$tick$5
	d ()Ljava/util/stream/Stream; getRunningGoals
	d (Lnet/minecraft/server/PathfinderGoalWrapped;)Z lambda$tick$4
	doTick ()V tick
	e (Lnet/minecraft/server/PathfinderGoalWrapped;)Z lambda$tick$2
ehv net/minecraft/client/renderer/entity/layers/ElytraLayer
	a WINGS_LOCATION
	b elytraModel
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
ehu net/minecraft/client/renderer/entity/layers/DrownedOuterLayer
	a DROWNED_OUTER_LAYER_LOCATION
	b model
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityDrowned;FFFFFF)V render
ehx net/minecraft/client/renderer/entity/layers/EnergySwirlLayer
	a ()Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (F)F xOffset
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	b ()Ldtu; model
ehw net/minecraft/client/renderer/entity/layers/EnderEyesLayer
	a ENDERMAN_EYES
	a ()Leag; renderType
ehz net/minecraft/client/renderer/entity/layers/FoxHeldItemLayer
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityFox;FFFFFF)V render
ehy net/minecraft/client/renderer/entity/layers/EyesLayer
	a ()Leag; renderType
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
net/minecraft/server/EntityCreature net/minecraft/world/entity/PathfinderMob
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;)Z checkSpawnRules
	eA ()V tickLeash
	eI ()Z isPathFinding
	eJ ()D followLeashSpeed
	f (Lnet/minecraft/server/BlockPosition;)F getWalkTargetValue
	x (F)V onLeashDistance
eia net/minecraft/client/renderer/entity/layers/HorseArmorLayer
	a model
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityHorse;FFFFFF)V render
net/minecraft/server/EnchantmentPiercing net/minecraft/world/item/enchantment/ArrowPiercingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
eic net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer
	a ARMOR_LOCATION_CACHE
	b innerModel
	c outerModel
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/ItemArmor;ZLdue;ZFFFLjava/lang/String;)V renderModel
	a (Ldfj;Ldzy;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumItemSlot;ILdue;)V renderArmorPiece
	a (Ldue;Lnet/minecraft/server/EnumItemSlot;)V setPartVisibility
	a (Lnet/minecraft/server/EnumItemSlot;)Ldue; getArmorModel
	a (Lnet/minecraft/server/ItemArmor;ZLjava/lang/String;)Lnet/minecraft/server/MinecraftKey; getArmorLocation
	b (Lnet/minecraft/server/EnumItemSlot;)Z usesInnerModel
eib net/minecraft/client/renderer/entity/layers/HorseMarkingLayer
	a LOCATION_BY_MARKINGS
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityHorse;FFFFFF)V render
	a (Ljava/util/EnumMap;)V lambda$static$0
eie net/minecraft/client/renderer/entity/layers/IronGolemFlowerLayer
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityIronGolem;FFFFFF)V render
xd$1 net/minecraft/server/commands/GameRuleCommand$1
	a val$base
	a (Lnet/minecraft/server/GameRules$GameRuleKey;Lcom/mojang/brigadier/context/CommandContext;)I lambda$visit$1
	a (Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleDefinition;)V visit
	b (Lnet/minecraft/server/GameRules$GameRuleKey;Lcom/mojang/brigadier/context/CommandContext;)I lambda$visit$0
net/minecraft/server/ChunkMap net/minecraft/server/level/ChunkTracker
	a (J)Z isSource
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (J)I getLevelFromSource
	b (JJI)I computeLevelFromNeighbor
eid net/minecraft/client/renderer/entity/layers/IronGolemCrackinessLayer
	a resourceLocations
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityIronGolem;FFFFFF)V render
eig net/minecraft/client/renderer/entity/layers/LlamaDecorLayer
	a TEXTURE_LOCATION
	b TRADER_LLAMA
	c model
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityLlama;FFFFFF)V render
net/minecraft/server/ResourcePackInfoDeserializer net/minecraft/server/packs/metadata/pack/PackMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ResourcePackInfo; fromJson
net/minecraft/server/EnumArmorMaterial net/minecraft/world/item/ArmorMaterials
	h HEALTH_PER_SLOT
	i name
	j durabilityMultiplier
	k slotProtections
	l enchantmentValue
	m sound
	n toughness
	o knockbackResistance
	p repairIngredient
	q $VALUES
	a ()I getEnchantmentValue
	a (Lnet/minecraft/server/EnumItemSlot;)I getDurabilityForSlot
	b ()Lnet/minecraft/server/SoundEffect; getEquipSound
	b (Lnet/minecraft/server/EnumItemSlot;)I getDefenseForSlot
	c ()Lnet/minecraft/server/RecipeItemStack; getRepairIngredient
	d ()Ljava/lang/String; getName
	e ()F getToughness
	f ()F getKnockbackResistance
	g ()Lnet/minecraft/server/RecipeItemStack; lambda$static$6
	h ()Lnet/minecraft/server/RecipeItemStack; lambda$static$5
	i ()Lnet/minecraft/server/RecipeItemStack; lambda$static$4
	j ()Lnet/minecraft/server/RecipeItemStack; lambda$static$3
	k ()Lnet/minecraft/server/RecipeItemStack; lambda$static$2
	l ()Lnet/minecraft/server/RecipeItemStack; lambda$static$1
	m ()Lnet/minecraft/server/RecipeItemStack; lambda$static$0
eif net/minecraft/client/renderer/entity/layers/ItemInHandLayer
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lebe$b;Lnet/minecraft/server/EnumMainHand;Ldfj;Ldzy;I)V renderArmWithItem
eii net/minecraft/client/renderer/entity/layers/PandaHoldsItemLayer
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityPanda;FFFFFF)V render
eih net/minecraft/client/renderer/entity/layers/MushroomCowMushroomLayer
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityMushroomCow;FFFFFF)V render
eik net/minecraft/client/renderer/entity/layers/PhantomEyesLayer
	a PHANTOM_EYES
	a ()Leag; renderType
net/minecraft/server/DataConverterTeamDisplayName net/minecraft/util/datafix/fixes/TeamDisplayNameFix
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$4
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
eij net/minecraft/client/renderer/entity/layers/ParrotOnShoulderLayer
	a model
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityHuman;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityHuman;FFFFZ)V render
	a (Ldfj;ZLnet/minecraft/server/EntityHuman;Ldzy;Lnet/minecraft/server/NBTTagCompound;IFFFFLnet/minecraft/server/EntityTypes;)V lambda$render$1
	a (Lnet/minecraft/server/EntityTypes;)Z lambda$render$0
eim net/minecraft/client/renderer/entity/layers/SaddleLayer
	a textureLocation
	b model
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
eil net/minecraft/client/renderer/entity/layers/RenderLayer
	a renderer
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldtu;Ldtu;Lnet/minecraft/server/MinecraftKey;Ldfj;Ldzy;ILnet/minecraft/server/EntityLiving;FFFFFFFFF)V coloredCutoutModelCopyLayerRender
	a (Ldtu;Lnet/minecraft/server/MinecraftKey;Ldfj;Ldzy;ILnet/minecraft/server/EntityLiving;FFF)V renderColoredCutoutModel
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	aC_ ()Ldtu; getParentModel
eio net/minecraft/client/renderer/entity/layers/ShulkerHeadLayer
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityShulker;FFFFFF)V render
aoa$1 net/minecraft/util/thread/ProcessorHandle$1
	a val$name
	b val$tell
	a (Ljava/lang/Object;)V tell
	bi ()Ljava/lang/String; name
net/minecraft/server/CommandDataStorage net/minecraft/server/commands/data/StorageDataAccessor
	a PROVIDER
	b SUGGEST_STORAGE
	c storage
	d id
	a ()Lnet/minecraft/server/NBTTagCompound; getData
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/PersistentCommandStorage; access$000
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	a (Ldr$h;DI)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Ljava/lang/String;)Lza$c; lambda$static$1
	a (Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/server/NBTTagCompound;)V setData
	b ()Lnet/minecraft/server/IChatBaseComponent; getModifiedSuccess
	b (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/PersistentCommandStorage; getGlobalTags
	c ()Lcom/mojang/brigadier/suggestion/SuggestionProvider; access$200
ein net/minecraft/client/renderer/entity/layers/SheepFurLayer
	a SHEEP_FUR_LOCATION
	b model
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntitySheep;FFFFFF)V render
eiq net/minecraft/client/renderer/entity/layers/SnowGolemHeadLayer
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntitySnowman;FFFFFF)V render
eip net/minecraft/client/renderer/entity/layers/SlimeOuterLayer
	a model
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
net/minecraft/server/VillagePlaceType net/minecraft/world/entity/ai/village/poi/PoiType
	A TYPE_BY_STATE
	B name
	C matchingStates
	D maxTickets
	E predicate
	F validRange
	a ALL_JOBS
	b ALL
	c UNEMPLOYED
	d ARMORER
	e BUTCHER
	f CARTOGRAPHER
	g CLERIC
	h FARMER
	i FISHERMAN
	j FLETCHER
	k LEATHERWORKER
	l LIBRARIAN
	m MASON
	n NITWIT
	o SHEPHERD
	p TOOLSMITH
	q WEAPONSMITH
	r HOME
	s MEETING
	t BEEHIVE
	u BEE_NEST
	v NETHER_PORTAL
	w LODESTONE
	x ALL_STATES
	y ALL_JOB_POI_TYPES
	z BEDS
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;Ljava/util/Set;II)Lnet/minecraft/server/VillagePlaceType; register
	a (Ljava/lang/String;Ljava/util/Set;ILjava/util/function/Predicate;I)Lnet/minecraft/server/VillagePlaceType; register
	a (Lnet/minecraft/server/Block;)Ljava/util/Set; getBlockStates
	a (Lnet/minecraft/server/IBlockData;)Z is
	a (Lnet/minecraft/server/VillagePlaceType;)Lnet/minecraft/server/VillagePlaceType; registerBlockStates
	a (Lnet/minecraft/server/VillagePlaceType;Lnet/minecraft/server/IBlockData;)V lambda$registerBlockStates$6
	b ()I getMaxTickets
	b (Lnet/minecraft/server/Block;)Ljava/util/stream/Stream; lambda$static$3
	b (Lnet/minecraft/server/IBlockData;)Ljava/util/Optional; forState
	b (Lnet/minecraft/server/VillagePlaceType;)Z lambda$new$5
	c ()Ljava/util/function/Predicate; getPredicate
	c (Lnet/minecraft/server/IBlockData;)Z lambda$static$4
	c (Lnet/minecraft/server/VillagePlaceType;)Z lambda$static$2
	d ()I getValidRange
	d (Lnet/minecraft/server/VillagePlaceType;)Z lambda$static$1
	e ()Ljava/util/Set; lambda$static$0
eis net/minecraft/client/renderer/entity/layers/SpinAttackEffectLayer
	a TEXTURE
	b box
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
eir net/minecraft/client/renderer/entity/layers/SpiderEyesLayer
	a SPIDER_EYES
	a ()Leag; renderType
eiu net/minecraft/client/renderer/entity/layers/StuckInBodyLayer
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFF)V renderStuckItem
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;)I numStuck
net/minecraft/server/CraftingManager net/minecraft/world/item/crafting/RecipeManager
	a GSON
	b LOGGER
	d hasErrors
	a ()Z hadErrorsLoading
	a (Ljava/lang/Iterable;)V replaceRecipes
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$9
	a (Ljava/util/Map$Entry;)Ljava/util/Map; lambda$apply$1
	a (Ljava/util/Map;)Ljava/util/stream/Stream; lambda$getRecipeIds$8
	a (Ljava/util/Map;Lnet/minecraft/server/IRecipe;)V lambda$replaceRecipes$11
	a (Ljava/util/Map;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IRecipe;)Ljava/lang/String; lambda$getRecipesFor$5
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Ljava/util/Map;)Lnet/minecraft/server/IRecipe; lambda$byKey$6
	a (Lnet/minecraft/server/Recipes;)Ljava/util/List; getAllRecipesFor
	a (Lnet/minecraft/server/Recipes;Lnet/minecraft/server/World;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/IRecipe;)Ljava/util/stream/Stream; lambda$getRecipesFor$4
	b ()Ljava/util/Collection; getRecipes
	b (Ljava/util/Map;)Ljava/util/stream/Stream; lambda$getRecipes$7
	b (Lnet/minecraft/server/IRecipe;)Lnet/minecraft/server/IRecipe; lambda$getAllRecipesFor$3
	b (Lnet/minecraft/server/Recipes;)Ljava/util/Map; byType
	b (Lnet/minecraft/server/Recipes;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Ljava/util/List; getRecipesFor
	b (Lnet/minecraft/server/Recipes;Lnet/minecraft/server/World;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/IRecipe;)Ljava/util/stream/Stream; lambda$getRecipeFor$2
	c (Lnet/minecraft/server/Recipes;)Ljava/util/Map; lambda$null$10
	c (Lnet/minecraft/server/Recipes;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Lnet/minecraft/server/NonNullList; getRemainingItemsFor
	craft (Lnet/minecraft/server/Recipes;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Ljava/util/Optional; getRecipeFor
	d ()Ljava/util/stream/Stream; getRecipeIds
	d (Lnet/minecraft/server/Recipes;)Lcom/google/common/collect/ImmutableMap$Builder; lambda$apply$0
	getRecipe (Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; byKey
eit net/minecraft/client/renderer/entity/layers/StrayClothingLayer
	a STRAY_CLOTHES_LOCATION
	b layerModel
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityInsentient;FFFFFF)V render
bd$a net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder
	a head
	b chest
	c legs
	d feet
	e mainhand
	f offhand
	a ()Lbd$a; equipment
	a (Lnet/minecraft/server/CriterionConditionItem;)Lbd$a; head
	b ()Lnet/minecraft/server/CriterionConditionEntityEquipment; build
	b (Lnet/minecraft/server/CriterionConditionItem;)Lbd$a; chest
	c (Lnet/minecraft/server/CriterionConditionItem;)Lbd$a; legs
	d (Lnet/minecraft/server/CriterionConditionItem;)Lbd$a; feet
	e (Lnet/minecraft/server/CriterionConditionItem;)Lbd$a; mainhand
	f (Lnet/minecraft/server/CriterionConditionItem;)Lbd$a; offhand
eiw net/minecraft/client/renderer/entity/layers/VillagerProfessionLayer
	a LEVEL_LOCATIONS
	b typeHatCache
	c professionHatCache
	d resourceManager
	e path
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;Ljava/lang/String;Lnet/minecraft/server/RegistryBlocks;Ljava/lang/Object;)Lekw$a; getHatData
	a (Ljava/lang/String;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; getResourceLocation
	a (Ljava/lang/String;Lnet/minecraft/server/RegistryBlocks;Ljava/lang/Object;Ljava/lang/Object;)Lekw$a; lambda$getHatData$1
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
net/minecraft/server/WorldChunkManagerMultiNoise net/minecraft/world/level/biome/MultiNoiseBiomeSource
	e DIRECT_CODEC
	f CODEC
	g DEFAULT_NOISE_PARAMETERS
	h temperatureParams
	i humidityParams
	j altitudeParams
	k weirdnessParams
	l temperatureNoise
	m humidityNoise
	n altitudeNoise
	o weirdnessNoise
	p parameters
	q useY
	r seed
	s preset
	a ()Lcom/mojang/serialization/Codec; codec
	a (J)Lnet/minecraft/server/WorldChunkManager; withSeed
	a (Lbss$c;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Float; lambda$getNoiseBiome$12
	a (Lcom/mojang/datafixers/util/Either;)Lnet/minecraft/server/WorldChunkManagerMultiNoise; lambda$static$8
	a (Lcom/mojang/datafixers/util/Pair;)Lbte$c; lambda$preset$11
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$7
	a (Lnet/minecraft/server/WorldChunkManagerMultiNoise;)Lcom/mojang/datafixers/util/Either; lambda$static$10
	b (III)Lnet/minecraft/server/BiomeBase; getNoiseBiome
	b (J)Z stable
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$null$1
	b (Lnet/minecraft/server/WorldChunkManagerMultiNoise;)Lcom/mojang/datafixers/util/Either; lambda$null$9
	c (Lnet/minecraft/server/WorldChunkManagerMultiNoise;)Lbte$a; lambda$null$6
	d ()Ljava/util/Optional; preset
	d (Lnet/minecraft/server/WorldChunkManagerMultiNoise;)Lbte$a; lambda$null$5
	e (Lnet/minecraft/server/WorldChunkManagerMultiNoise;)Lbte$a; lambda$null$4
	f (Lnet/minecraft/server/WorldChunkManagerMultiNoise;)Lbte$a; lambda$null$3
	g (Lnet/minecraft/server/WorldChunkManagerMultiNoise;)Ljava/util/List; lambda$null$2
	h (Lnet/minecraft/server/WorldChunkManagerMultiNoise;)Ljava/lang/Long; lambda$null$0
eiv net/minecraft/client/renderer/entity/layers/TropicalFishPatternLayer
	a modelA
	b modelB
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityTropicalFish;FFFFFF)V render
net/minecraft/server/TileEntityShulkerBox$AnimationPhase net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus
	e $VALUES
eiy net/minecraft/client/renderer/entity/layers/WitherArmorLayer
	a WITHER_ARMOR_LOCATION
	b model
	a ()Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (F)F xOffset
	b ()Ldtu; model
eix net/minecraft/client/renderer/entity/layers/WitchItemLayer
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
md$1 net/minecraft/nbt/CompoundTag$1
	a ()Ljava/lang/String; getName
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagCompound; load
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; load
eiz net/minecraft/client/renderer/entity/layers/WolfCollarLayer
	a WOLF_COLLAR_LOCATION
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityWolf;FFFFFF)V render
ejb net/minecraft/client/renderer/entity/package-info
net/minecraft/server/EntityEnderman$PathfinderGoalEndermanPlaceBlock net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal
	a enderman
	a ()Z canUse
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)Z canPlaceBlock
	e ()V tick
eja net/minecraft/client/renderer/entity/layers/package-info
ejd net/minecraft/client/renderer/entity/player/package-info
ejc net/minecraft/client/renderer/entity/player/PlayerRenderer
	a (Ldfj;Ldzy;ILdzb;)V renderRightHand
	a (Ldfj;Ldzy;ILdzb;Ldwf;Ldwf;)V renderHand
	a (Ldzb;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Ldzb;F)Lnet/minecraft/server/Vec3D; getRenderOffset
	a (Ldzb;FFLdfj;Ldzy;I)V render
	a (Ldzb;Ldfj;F)V scale
	a (Ldzb;Ldfj;FFF)V setupRotations
	a (Ldzb;Lnet/minecraft/server/EnumHand;)Ldue$a; getArmPose
	a (Ldzb;Lnet/minecraft/server/IChatBaseComponent;Ldfj;Ldzy;I)V renderNameTag
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;F)Lnet/minecraft/server/Vec3D; getRenderOffset
	a (Lnet/minecraft/server/Entity;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/IChatBaseComponent;Ldfj;Ldzy;I)V renderNameTag
	a (Lnet/minecraft/server/EntityLiving;FFLdfj;Ldzy;I)V render
	a (Lnet/minecraft/server/EntityLiving;Ldfj;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Ldfj;FFF)V setupRotations
	b (Ldfj;Ldzy;ILdzb;)V renderLeftHand
	b (Ldzb;)V setModelProperties
bwk$1 net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
aco$1 net/minecraft/server/players/GameProfileCache$1
	a val$result
ejf net/minecraft/client/renderer/item/ItemPropertyFunction
eje net/minecraft/client/renderer/item/ItemProperties
	a GENERIC_PROPERTIES
	b DAMAGED
	c DAMAGE
	d PROPERTY_DAMAGED
	e PROPERTY_DAMAGE
	f PROPERTIES
	a (Lnet/minecraft/server/Item;)Ljava/util/Map; lambda$register$2
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/MinecraftKey;)Lejf; getProperty
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/MinecraftKey;Lejf;)V register
	a (Lnet/minecraft/server/ItemStack;Ldwl;Lnet/minecraft/server/EntityLiving;)F lambda$static$15
	a (Lnet/minecraft/server/MinecraftKey;Lejf;)Lejf; registerGeneric
	b (Lnet/minecraft/server/ItemStack;Ldwl;Lnet/minecraft/server/EntityLiving;)F lambda$static$14
	c (Lnet/minecraft/server/ItemStack;Ldwl;Lnet/minecraft/server/EntityLiving;)F lambda$static$13
	d (Lnet/minecraft/server/ItemStack;Ldwl;Lnet/minecraft/server/EntityLiving;)F lambda$static$12
	e (Lnet/minecraft/server/ItemStack;Ldwl;Lnet/minecraft/server/EntityLiving;)F lambda$static$11
	f (Lnet/minecraft/server/ItemStack;Ldwl;Lnet/minecraft/server/EntityLiving;)F lambda$static$10
	g (Lnet/minecraft/server/ItemStack;Ldwl;Lnet/minecraft/server/EntityLiving;)F lambda$static$9
	h (Lnet/minecraft/server/ItemStack;Ldwl;Lnet/minecraft/server/EntityLiving;)F lambda$static$8
	i (Lnet/minecraft/server/ItemStack;Ldwl;Lnet/minecraft/server/EntityLiving;)F lambda$static$7
	j (Lnet/minecraft/server/ItemStack;Ldwl;Lnet/minecraft/server/EntityLiving;)F lambda$static$6
	k (Lnet/minecraft/server/ItemStack;Ldwl;Lnet/minecraft/server/EntityLiving;)F lambda$static$5
	l (Lnet/minecraft/server/ItemStack;Ldwl;Lnet/minecraft/server/EntityLiving;)F lambda$static$4
	m (Lnet/minecraft/server/ItemStack;Ldwl;Lnet/minecraft/server/EntityLiving;)F lambda$static$3
	n (Lnet/minecraft/server/ItemStack;Ldwl;Lnet/minecraft/server/EntityLiving;)F lambda$static$1
	o (Lnet/minecraft/server/ItemStack;Ldwl;Lnet/minecraft/server/EntityLiving;)F lambda$static$0
ejh net/minecraft/client/renderer/package-info
ejg net/minecraft/client/renderer/item/package-info
net/minecraft/server/WorldGenFoilagePlacerBush net/minecraft/world/level/levelgen/feature/foliageplacers/BushFoliagePlacer
	c CODEC
	a ()Lnet/minecraft/server/WorldGenFoilagePlacers; type
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;ILcni$b;IILjava/util/Set;ILnet/minecraft/server/StructureBoundingBox;)V createFoliage
	c (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
ejj net/minecraft/client/renderer/texture/AtlasSet
	a atlases
	a (Lelj;)Leju; getSprite
	a (Lnet/minecraft/server/MinecraftKey;)Lejt; getAtlas
eji net/minecraft/client/renderer/texture/AbstractTexture
	a id
	b blur
	c mipmap
	a ()V lambda$bind$1
	a (Lejv;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;Ljava/util/concurrent/Executor;)V reset
	a (Lnet/minecraft/server/IResourceManager;)V load
	a (ZZ)V setFilter
	b ()I getId
	c ()V releaseId
	d ()V bind
	e ()V lambda$releaseId$0
ejl net/minecraft/client/renderer/texture/HttpTexture
	e LOGGER
	f file
	g urlString
	h processLegacySkin
	i onDownloaded
	j future
	k uploaded
	a ()V lambda$load$4
	a (Ldeq;)V loadCallback
	a (Ldeq;IIII)V doNotchTransparencyHack
	a (Ljava/io/InputStream;)Ldeq; load
	a (Lnet/minecraft/server/IResourceManager;)V load
	b (Ldeq;)V upload
	b (Ldeq;IIII)V setNoAlpha
	b (Ljava/io/InputStream;)V lambda$null$3
	c (Ldeq;)Ldeq; processLegacySkin
	c (Lnet/minecraft/server/IResourceManager;)V lambda$load$2
	d (Ldeq;)V lambda$loadCallback$1
	e (Ldeq;)V lambda$null$0
ejk net/minecraft/client/renderer/texture/DynamicTexture
	d LOGGER
	e pixels
	a ()V upload
	a (Ldeq;)V setPixels
	a (Lnet/minecraft/server/IResourceManager;)V load
	e ()Ldeq; getPixels
	f ()V lambda$new$0
ejn net/minecraft/client/renderer/texture/MissingTextureAtlasSprite
	b MISSING_TEXTURE_LOCATION
	c missingTexture
	d MISSING_IMAGE_DATA
	e INFO
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Lejt;IIIII)Lejn; newInstance
	b ()Leju$a; info
	c ()Lejk; getTexture
	s ()Ldeq; lambda$static$0
dku$1 net/minecraft/client/gui/MapRenderer$1
ejm net/minecraft/client/renderer/texture/MipmapGenerator
	a POW22
	a (I)F getPow22
	a (IIIII)I gammaBlend
	a (IIIIZ)I alphaBlend
	a (Ldeq;I)[Ldeq; generateMipLevels
	a ([F)V lambda$static$0
ecx$a net/minecraft/client/renderer/debug/ChunkDebugRenderer$ChunkData
	a this$0
	b clientData
	c serverData
	a (Lecx$a;)Ljava/util/concurrent/CompletableFuture; access$100
	a (Lemy;Lnet/minecraft/server/ResourceKey;II)Ljava/util/Map; lambda$new$0
	b (Lecx$a;)Ljava/util/Map; access$200
dag$a net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder
	b ()Lnet/minecraft/server/LootItemFunction; build
ejp net/minecraft/client/renderer/texture/PreloadedTexture
	e future
	a ()Ljava/util/concurrent/CompletableFuture; getFuture
	a (Lejq$a;)Ljava/lang/Void; lambda$getFuture$1
	a (Lejv;)V lambda$reset$3
	a (Lejv;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;Ljava/util/concurrent/Executor;)V reset
	a (Ljava/lang/Runnable;)V lambda$null$4
	a (Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor; executor
	a (Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V lambda$executor$5
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;)Lejq$a; lambda$new$0
	b (Lnet/minecraft/server/IResourceManager;)Lejq$a; getTextureImage
	c (Lnet/minecraft/server/IResourceManager;)Lejq$a; lambda$reset$2
ejo net/minecraft/client/renderer/texture/OverlayTexture
	a NO_OVERLAY
	b texture
	a ()V setupOverlayColor
	a (F)I u
	a (FZ)I pack
	a (II)I pack
	a (Z)I v
	b ()V teardownOverlayColor
net/minecraft/server/DataConverterGuardian net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
ejr net/minecraft/client/renderer/texture/Stitcher
	a HOLDER_COMPARATOR
	b mipLevel
	c texturesToBeStitched
	d storage
	e storageX
	f storageY
	g maxWidth
	h maxHeight
	a ()I getWidth
	a (II)I access$000
	a (Lejr$a;)Z addToStorage
	a (Lejr$c;)V gatherSprites
	a (Lejr$c;Lejr$b;)V lambda$gatherSprites$4
	a (Leju$a;)V registerSprite
	b ()I getHeight
	b (II)I smallestFittingMinTexel
	b (Lejr$a;)Z expand
	c ()V stitch
	c (Lejr$a;)Leju$a; lambda$stitch$3
	d (Lejr$a;)Lnet/minecraft/server/MinecraftKey; lambda$static$2
	e (Lejr$a;)Ljava/lang/Integer; lambda$static$1
	f (Lejr$a;)Ljava/lang/Integer; lambda$static$0
ejq net/minecraft/client/renderer/texture/SimpleTexture
	d location
	e LOGGER
	a (Ldeq;ZZ)V doLoad
	a (Lnet/minecraft/server/IResourceManager;)V load
	b (Ldeq;ZZ)V lambda$load$0
	b (Lnet/minecraft/server/IResourceManager;)Lejq$a; getTextureImage
	e ()Lorg/apache/logging/log4j/Logger; access$000
ejt net/minecraft/client/renderer/texture/TextureAtlas
	d LOCATION_BLOCKS
	e LOCATION_PARTICLES
	f LOGGER
	g animatedTextures
	h sprites
	i texturesByName
	j location
	k maxSupportedTextureSize
	a ()V cycleAnimationFrames
	a (ILjava/util/concurrent/ConcurrentLinkedQueue;Ljava/util/List;Lnet/minecraft/server/IResourceManager;Leju$a;IIII)V lambda$getLoadedSprites$4
	a (Lejt$a;)V reload
	a (Leju$a;)Ljava/lang/String; lambda$prepareToStitch$1
	a (Ljava/lang/String;)Leju; getTexture
	a (Ljava/util/Set;Lnet/minecraft/server/MinecraftKey;)V register
	a (Lnet/minecraft/server/IResourceManager;)V load
	a (Lnet/minecraft/server/IResourceManager;Lejr;I)Ljava/util/List; getLoadedSprites
	a (Lnet/minecraft/server/IResourceManager;Leju$a;IIIII)Leju; load
	a (Lnet/minecraft/server/IResourceManager;Leju$a;IIIIILjava/util/concurrent/ConcurrentLinkedQueue;)V lambda$null$3
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/Set;)Ljava/util/Collection; getBasicSpriteInfos
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/stream/Stream;Lnet/minecraft/server/GameProfilerFiller;I)Lejt$a; prepareToStitch
	a (Lnet/minecraft/server/MinecraftKey;)Leju; getSprite
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IResourceManager;Ljava/util/concurrent/ConcurrentLinkedQueue;)V lambda$getBasicSpriteInfos$2
	b (Lejt$a;)V updateFilter
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; getResourceLocation
	c (Lnet/minecraft/server/MinecraftKey;)V lambda$prepareToStitch$0
	e ()V tick
	f ()V clearTextureData
	g ()Lnet/minecraft/server/MinecraftKey; location
dlg$b net/minecraft/client/gui/components/Button$OnTooltip
bvy$1 net/minecraft/world/level/block/DoorBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
ejs net/minecraft/client/renderer/texture/StitcherException
	a allSprites
	a ()Ljava/util/Collection; getAllSprites
dlg$a net/minecraft/client/gui/components/Button$OnPress
ejv net/minecraft/client/renderer/texture/TextureManager
	a INTENTIONAL_MISSING_TEXTURE
	b LOGGER
	c byPath
	d tickableTextures
	e prefixRegister
	f resourceManager
	a (Laca$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Leji;)Ljava/lang/String; lambda$loadTexture$1
	a (Ljava/lang/Runnable;)V execute
	a (Ljava/lang/String;Lejk;)Lnet/minecraft/server/MinecraftKey; register
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/concurrent/Executor;Ljava/lang/Void;)V lambda$reload$4
	a (Lnet/minecraft/server/MinecraftKey;)V bind
	a (Lnet/minecraft/server/MinecraftKey;Leji;)V register
	a (Lnet/minecraft/server/MinecraftKey;Lejp;)V lambda$preload$2
	a (Lnet/minecraft/server/MinecraftKey;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preload
	b (Ljava/lang/Runnable;)V lambda$reload$5
	b (Lnet/minecraft/server/MinecraftKey;)Leji; getTexture
	b (Lnet/minecraft/server/MinecraftKey;Leji;)V safeClose
	c (Ljava/lang/Runnable;)V lambda$execute$3
	c (Lnet/minecraft/server/MinecraftKey;)V release
	c (Lnet/minecraft/server/MinecraftKey;Leji;)Leji; loadTexture
	d (Lnet/minecraft/server/MinecraftKey;)V _bind
	e ()V tick
	e (Lnet/minecraft/server/MinecraftKey;)V lambda$bind$0
eju net/minecraft/client/renderer/texture/TextureAtlasSprite
	a mainImage
	b atlas
	c info
	d metadata
	e framesX
	f framesY
	g interpolationData
	h x
	i y
	j u0
	k u1
	l v0
	m v1
	n frame
	o subFrame
	a ()F atlasSize
	a (D)F getU
	a (F)F getUOffset
	a (I)V upload
	a (III)Z isTransparent
	a (II[Ldeq;)V upload
	a (Ldeq;)Ljava/lang/String; lambda$new$0
	a (Ldfn;)Ldfn; wrap
	a (Leju$b;)V lambda$cycleFrames$4
	a (Leju;)I access$600
	a (Leju;II[Ldeq;)V access$1000
	a ([[I)V fixupMipTransparency
	b ()Ljava/lang/String; lambda$new$3
	b (D)F getV
	b (F)F getVOffset
	b (Leju;)I access$700
	c ()Ljava/lang/String; lambda$new$2
	c (Leju;)Leku; access$800
	d ()I getX
	d (Leju;)Leju$a; access$900
	e ()I getY
	e (Leju;)[I access$1100
	f ()I getWidth
	f (Leju;)[I access$1200
	g ()I getHeight
	h ()F getU0
	i ()F getU1
	j ()F getV0
	k ()F getV1
	l ()Lnet/minecraft/server/MinecraftKey; getName
	m ()Lejt; atlas
	n ()I getFrameCount
	o ()V uploadFirstFrame
	p ()F uvShrinkRatio
	q ()V cycleFrames
	r ()Z isAnimation
	s ()Ljava/lang/String; lambda$new$1
ejx net/minecraft/client/renderer/texture/package-info
ejw net/minecraft/client/renderer/texture/Tickable
	e ()V tick
ejz net/minecraft/client/resources/ClientPackSource
	a LOGGER
	b SHA1
	c vanillaPack
	d serverPackDir
	e downloadLock
	f assetIndex
	g currentDownload
	h serverPack
	a ()Lnet/minecraft/server/ResourcePackVanilla; getVanillaPack
	a (Labs$a;)Lnet/minecraft/server/ResourcePackLoader; createProgrammerArtPack
	a (Labs$a;Ljava/util/function/Supplier;)Lnet/minecraft/server/ResourcePackLoader; createProgrammerArtPack
	a (Ldjw;Ldoo;)V lambda$downloadAndSelectResourcePack$1
	a (Ljava/io/File;)V deleteQuietly
	a (Ljava/io/File;Ljava/lang/Void;Ljava/lang/Throwable;)V lambda$downloadAndSelectResourcePack$3
	a (Ljava/io/File;Lnet/minecraft/server/PackSource;)Ljava/util/concurrent/CompletableFuture; setServerPack
	a (Ljava/lang/String;Ljava/io/File;)Z checkHash
	a (Ljava/lang/String;Ljava/io/File;Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage; lambda$downloadAndSelectResourcePack$2
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; downloadAndSelectResourcePack
	a (Ljava/util/function/Consumer;Labs$a;)V loadPacks
	b ()V clearServerPack
	b (Ljava/io/File;)Lnet/minecraft/server/ResourcePackFolder; createProgrammerArtDirPack
	c ()Ljava/util/Map; getDownloadHeaders
	c (Ljava/io/File;)Lnet/minecraft/server/IResourcePack; createProgrammerArtZipPack
	d ()V clearOldDownloads
	d (Ljava/io/File;)Lnet/minecraft/server/IResourcePack; lambda$createProgrammerArtPack$6
	e ()Lnet/minecraft/server/IResourcePack; lambda$loadPacks$0
	e (Ljava/io/File;)Lnet/minecraft/server/IResourcePack; lambda$createProgrammerArtPack$5
	f (Ljava/io/File;)Lnet/minecraft/server/IResourcePack; lambda$setServerPack$4
net/minecraft/server/RegistryFileCodec net/minecraft/resources/RegistryFileCodec
	a registryKey
	b elementCodec
	c allowInline
	a (Lcom/mojang/datafixers/util/Either;)Ljava/util/List; lambda$homogeneousList$4
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$decode$7
	a (Ljava/lang/Object;)Ljava/util/function/Supplier; lambda$null$6
	a (Ljava/util/List;)Ljava/util/List; lambda$null$3
	a (Ljava/util/function/Supplier;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/RegistryFileCodec; create
	a (Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lnet/minecraft/server/RegistryFileCodec; create
	b (Ljava/lang/Object;)Ljava/lang/Object; lambda$null$5
	b (Ljava/util/List;)Ljava/util/List; lambda$null$2
	b (Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; homogeneousList
	c (Ljava/lang/Object;)Ljava/util/function/Supplier; lambda$homogeneousList$1
	d (Ljava/lang/Object;)Ljava/lang/Object; lambda$null$0
ejy net/minecraft/client/resources/AssetIndex
	a LOGGER
	b rootFiles
	c namespacedFiles
	a (Ljava/lang/String;)Ljava/io/File; getRootFile
	a (Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getFiles
	a (Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Predicate;Lnet/minecraft/server/MinecraftKey;)Z lambda$getFiles$0
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/io/File; getFile
czn$a net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder
	a conditions
	a (Lczn$a;)Lcze$a; otherwise
	a (Ldbl$a;)Lczn$a; when
	b ()Lnet/minecraft/server/LootEntryAbstract; build
	b (Lczn$a;)Lczj$a; append
	b (Ldbl$a;)Ljava/lang/Object; when
	c ()Ljava/lang/Object; unwrap
	c (Lczn$a;)Lczr$a; then
	d ()Lczn$a; getThis
	e ()Lczn$a; unwrap
	f ()[Lnet/minecraft/server/LootItemCondition; getConditions
net/minecraft/server/LightEngineGraph net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint
	a levelCount
	b queues
	c computedLevels
	d firstQueuedLevel
	e hasWork
	a (I)V checkFirstQueuedLevel
	a (II)I getKey
	a (J)Z isSource
	a (JI)V setLevel
	a (JII)V enqueue
	a (JIIZ)V dequeue
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	a (JJIIIZ)V checkEdge
	a (JJIZ)V checkEdge
	a (Ljava/util/function/LongPredicate;)V removeIf
	a (Ljava/util/function/LongPredicate;Lit/unimi/dsi/fastutil/longs/LongList;J)V lambda$removeIf$0
	b ()Z hasWork
	b (I)I runUpdates
	b (JJI)I computeLevelFromNeighbor
	b (JJIZ)V checkNeighbor
	c ()I getQueueSize
	c (J)I getLevel
	e (J)V removeFromQueue
	f (J)V checkNode
eka net/minecraft/client/resources/DefaultClientPackResources
	d assetIndex
	a (Ljava/lang/String;)Ljava/io/InputStream; getResourceAsStream
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	b (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResourceAsStream
dwx$a net/minecraft/client/particle/AttackSweepParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/PistonExtendsChecker net/minecraft/world/level/block/piston/PistonStructureResolver
	a level
	b pistonPos
	c extending
	d startPos
	e pushDirection
	f toPush
	g toDestroy
	h pistonDirection
	a ()Z resolve
	a (II)V reorderListAtCollision
	a (Lnet/minecraft/server/Block;)Z isSticky
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)Z canStickToEachOther
	a (Lnet/minecraft/server/BlockPosition;)Z addBranchingBlocks
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z addBlockLine
	b ()Lnet/minecraft/server/EnumDirection; getPushDirection
	getBrokenBlocks ()Ljava/util/List; getToDestroy
	getMovedBlocks ()Ljava/util/List; getToPush
ekc net/minecraft/client/resources/DirectAssetIndex
	b assetsDirectory
	a (Ljava/lang/String;)Ljava/io/File; getRootFile
	a (Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getFiles
	a (Ljava/lang/String;Ljava/nio/file/Path;Ljava/nio/file/Path;)Lnet/minecraft/server/MinecraftKey; lambda$getFiles$3
	a (Ljava/nio/file/Path;)Z lambda$getFiles$1
	a (Ljava/util/function/Predicate;Ljava/nio/file/Path;)Z lambda$getFiles$2
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/io/File; getFile
	b (Ljava/nio/file/Path;)Z lambda$getFiles$0
ekb net/minecraft/client/resources/DefaultPlayerSkin
	a STEVE_SKIN_LOCATION
	b ALEX_SKIN_LOCATION
	a ()Lnet/minecraft/server/MinecraftKey; getDefaultSkin
	a (Ljava/util/UUID;)Lnet/minecraft/server/MinecraftKey; getDefaultSkin
	b (Ljava/util/UUID;)Ljava/lang/String; getSkinModelName
	c (Ljava/util/UUID;)Z isAlexDefault
eke net/minecraft/client/resources/GrassColorReloadListener
	a LOCATION
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)[I prepare
	a ([ILnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
bu$a net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance
	a distance
	b duration
	a (Lnet/minecraft/server/CriterionConditionDistance;)Lbu$a; levitated
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Vec3D;I)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
ekd net/minecraft/client/resources/FoliageColorReloadListener
	a LOCATION
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)[I prepare
	a ([ILnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
net/minecraft/server/WorldGenFeatureOceanRuin net/minecraft/world/level/levelgen/structure/OceanRuinFeature
	a ()Lckx$a; getStartFactory
net/minecraft/server/DataConverterNewVillage net/minecraft/util/datafix/fixes/NewVillageFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$10
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$9
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$8
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$4
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$13
	a (Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$2
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$12
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$5
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$1
	a (Ljava/util/List;)Ljava/util/List; lambda$null$3
	b (Lcom/mojang/datafixers/util/Pair;)Z lambda$null$0
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$11
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$7
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$6
net/minecraft/server/BlockCartographyTable net/minecraft/world/level/block/CartographyTableBlock
	a CONTAINER_TITLE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$getMenuProvider$0
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
ekg net/minecraft/client/resources/LegacyStuffWrapper
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;)[I getPixels
ekf net/minecraft/client/resources/LegacyPackResourcesAdapter
	a V3
	b source
	c patches
	a ()Ljava/lang/String; getName
	a (Lcom/google/common/collect/ImmutableMap$Builder;Ljava/lang/String;Ljava/lang/String;)V lambda$null$0
	a (Lnet/minecraft/server/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	a (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; toMetaLocation
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	b ()Lcom/google/common/collect/ImmutableMap; lambda$static$1
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	b (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Z hasResource
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; map
eki net/minecraft/client/resources/PackResourcesAdapterV4
	a SHIELD_BASE
	b BANNER_BASE
	c OLD_IRON_GOLEM_LOCATION
	d CHESTS
	e PATTERNS
	f SHIELDS
	g BANNERS
	h pack
	a ()Ljava/lang/String; getName
	a (Ldeq;Ldeq;IIIIIIIZZ)V copyRect
	a (Ljava/io/InputStream;)Ljava/io/InputStream; fixConduitEyeTexture
	a (Ljava/io/InputStream;Ljava/io/InputStream;IIIII)Ljava/io/InputStream; fixPattern
	a (Ljava/lang/String;)Ljava/lang/String; lambda$static$2
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Lnet/minecraft/server/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	a (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	b (Ljava/io/InputStream;)Ljava/io/InputStream; fixLeftChest
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	b (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Ljava/io/InputStream;)Ljava/io/InputStream; fixRightChest
	c (Ljava/lang/String;)Ljava/lang/String; lambda$static$1
	d (Ljava/io/InputStream;)Ljava/io/InputStream; fixSingleChest
net/minecraft/server/WorldGenSurfaceExtremeHillMutated net/minecraft/world/level/levelgen/surfacebuilders/GravellyMountainSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/BlockTallSeaGrass net/minecraft/world/level/block/TallSeagrass
	b HALF
	c SHAPE
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
ekh net/minecraft/client/resources/MobEffectTextureManager
	a ()Ljava/util/stream/Stream; getResourcesToLoad
	a (Lnet/minecraft/server/MobEffectList;)Leju; get
ar$a net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance
	a victims
	a (I)[Lbg$b; lambda$channeledLightning$0
	a (Ljava/util/Collection;)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a ([Lnet/minecraft/server/CriterionConditionEntity;)Lar$a; channeledLightning
net/minecraft/server/WorldGenDecoratorFeatureSimple net/minecraft/world/level/levelgen/placement/SimpleFeatureDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
ekk net/minecraft/client/resources/SkinManager
	a textureManager
	b skinsDirectory
	c sessionService
	d insecureSkinCache
	a (Lcom/mojang/authlib/GameProfile;)Ljava/util/Map; getInsecureSkinInformation
	a (Lcom/mojang/authlib/GameProfile;Lekk$a;Z)V registerSkins
	a (Lcom/mojang/authlib/GameProfile;ZLekk$a;)V lambda$registerSkins$4
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)Lnet/minecraft/server/MinecraftKey; registerTexture
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lekk$a;)Lnet/minecraft/server/MinecraftKey; registerTexture
	a (Lekk$a;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lnet/minecraft/server/MinecraftKey;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)V lambda$registerTexture$0
	a (Ljava/util/Map;Lekk$a;)V lambda$null$3
	a (Ljava/util/Map;Lekk$a;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)V lambda$null$1
	b (Ljava/util/Map;Lekk$a;)V lambda$null$2
ekj net/minecraft/client/resources/PaintingTextureManager
	a BACK_SPRITE_LOCATION
	a ()Ljava/util/stream/Stream; getResourcesToLoad
	a (Lnet/minecraft/server/Paintings;)Leju; get
	b ()Leju; getBackSprite
net/minecraft/server/BlockBeehive net/minecraft/world/level/block/BeehiveBlock
	a FACING
	b HONEY_LEVEL
	c SPAWN_DIRECTIONS
	a (Lcef$a;)V createBlockStateDefinition
	a (Ljava/util/Random;)Lnet/minecraft/server/EnumDirection; getRandomOffset
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$use$0
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;DDDDD)V spawnFluidParticle
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V dropHoneycomb
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V trySpawnDripParticles
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShape;D)V spawnParticle
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V resetHoneyLevel
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/TileEntityBeehive$ReleaseStatus;)V releaseBeesAndResetHoneyLevel
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V angerNearbyBees
	d (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z hiveContainsBees
ekm net/minecraft/client/resources/TextureAtlasHolder
	a textureAtlas
	b prefix
	a ()Ljava/util/stream/Stream; getResourcesToLoad
	a (Lejt$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Lejt$a; prepare
	a (Lnet/minecraft/server/MinecraftKey;)Leju; getSprite
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; resolveLocation
ekl net/minecraft/client/resources/SplashManager
	a SPLASHES_LOCATION
	b RANDOM
	c splashes
	d user
	a ()Ljava/lang/String; getSplash
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/lang/String;)Z lambda$prepare$0
	a (Ljava/util/List;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/util/List; prepare
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
eko net/minecraft/client/resources/language/FormattedBidiReorder
	a (Ljava/lang/String;)Ljava/lang/String; shape
	a (Lnet/minecraft/server/IChatFormatted;Z)Lnet/minecraft/server/FormattedString; reorder
ekn net/minecraft/client/resources/language/ClientLanguage
	a LOGGER
	b storage
	c defaultRightToLeft
	a (Ljava/lang/String;)Ljava/lang/String; getOrDefault
	a (Ljava/util/List;Ljava/util/Map;)V appendFrom
	a (Lnet/minecraft/server/IChatFormatted;)Lnet/minecraft/server/FormattedString; getVisualOrder
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/List;)Lekn; loadFrom
	b ()Z isDefaultRightToLeft
	b (Ljava/lang/String;)Z has
net/minecraft/server/ArgumentScoreboardObjective net/minecraft/commands/arguments/ObjectiveArgument
	a ERROR_OBJECTIVE_NAME_TOO_LONG
	b EXAMPLES
	c ERROR_OBJECTIVE_NOT_FOUND
	d ERROR_OBJECTIVE_READ_ONLY
	a ()Lnet/minecraft/server/ArgumentScoreboardObjective; objective
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ScoreboardObjective; getObjective
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ScoreboardObjective; getWritableObjective
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
ekq net/minecraft/client/resources/language/LanguageInfo
	a code
	b region
	c name
	d bidirectional
	a ()Z isBidirectional
	a (Lekq;)I compareTo
net/minecraft/server/WorldGenFeatureOreConfiguration net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration
	a CODEC
	b target
	c size
	d state
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lnet/minecraft/server/WorldGenFeatureOreConfiguration;)Ljava/lang/Integer; lambda$null$2
	b (Lnet/minecraft/server/WorldGenFeatureOreConfiguration;)Lnet/minecraft/server/IBlockData; lambda$null$1
	c (Lnet/minecraft/server/WorldGenFeatureOreConfiguration;)Lnet/minecraft/server/DefinedStructureRuleTest; lambda$null$0
ekp net/minecraft/client/resources/language/I18n
	a language
	a (Ljava/lang/String;)Z exists
	a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; get
	a (Lnet/minecraft/server/LocaleLanguage;)V setLanguage
net/minecraft/server/Raid$Wave net/minecraft/world/entity/raid/Raid$RaiderType
	f VALUES
	g entityType
	h spawnsPerWaveBeforeBonus
	i $VALUES
	a ()[Lnet/minecraft/server/Raid$Wave; access$100
	a (Lnet/minecraft/server/Raid$Wave;)Lnet/minecraft/server/EntityTypes; access$200
	b (Lnet/minecraft/server/Raid$Wave;)[I access$300
eks net/minecraft/client/resources/language/package-info
dym$a net/minecraft/client/particle/SpitParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/Containers$Supplier net/minecraft/world/inventory/MenuType$MenuSupplier
ekr net/minecraft/client/resources/language/LanguageManager
	a LOGGER
	b DEFAULT_LANGUAGE
	c languages
	d currentCode
	e currentLanguage
	a ()Z isBidirectional
	a (Lekq;)V setSelected
	a (Ljava/lang/String;)Lekq; getLanguage
	a (Ljava/util/Map;Lnet/minecraft/server/IResourcePack;)V lambda$extractLanguages$0
	a (Ljava/util/stream/Stream;)Ljava/util/Map; extractLanguages
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	b ()Lekq; getSelected
	d ()Ljava/util/SortedSet; getLanguages
eku net/minecraft/client/resources/metadata/animation/AnimationMetadataSection
	a SERIALIZER
	b EMPTY
	c frames
	d frameWidth
	e frameHeight
	f defaultFrameTime
	g interpolatedFrames
	a ()I getFrameCount
	a (I)I getFrameHeight
	a (II)Lcom/mojang/datafixers/util/Pair; getFrameSize
	b ()I getDefaultFrameTime
	b (I)I getFrameWidth
	b (II)Z isDivisionInteger
	c ()Z isInterpolatedFrames
	c (I)I getFrameTime
	c (II)Lcom/mojang/datafixers/util/Pair; calculateFrameSize
	d ()Ljava/util/Set; getUniqueFrameIndices
	d (I)Z hasCustomFrameTime
	e (I)I getFrameIndex
	f (I)Lekt; getFrame
ekt net/minecraft/client/resources/metadata/animation/AnimationFrame
	a index
	b time
	a ()Z isTimeUnknown
	b ()I getTime
	c ()I getIndex
ekw net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection
	a SERIALIZER
	b hat
	a ()Lekw$a; getHat
net/minecraft/server/ResourcePackLoader net/minecraft/server/packs/repository/Pack
	a LOGGER
	b BROKEN_ASSETS_FALLBACK
	c id
	d supplier
	e title
	f description
	g compatibility
	h defaultPosition
	i required
	j fixedPosition
	k packSource
	a ()Lnet/minecraft/server/IChatBaseComponent; getTitle
	a (Ljava/lang/String;ZLjava/util/function/Supplier;Labs$a;Lnet/minecraft/server/ResourcePackLoader$Position;Lnet/minecraft/server/PackSource;)Lnet/minecraft/server/ResourcePackLoader; create
	a (Z)Lnet/minecraft/server/IChatBaseComponent; getChatLink
	a (ZLnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; lambda$getChatLink$0
	b ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	c ()Lnet/minecraft/server/EnumResourcePackVersion; getCompatibility
	d ()Lnet/minecraft/server/IResourcePack; open
	e ()Ljava/lang/String; getId
	f ()Z isRequired
	g ()Z isFixedPosition
	h ()Lnet/minecraft/server/ResourcePackLoader$Position; getDefaultPosition
	i ()Lnet/minecraft/server/PackSource; getPackSource
net/minecraft/server/EnumGamemode net/minecraft/world/level/GameType
	f id
	g name
	h $VALUES
	a (ILnet/minecraft/server/EnumGamemode;)Lnet/minecraft/server/EnumGamemode; byId
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumGamemode; byName
	a (Ljava/lang/String;Lnet/minecraft/server/EnumGamemode;)Lnet/minecraft/server/EnumGamemode; byName
	a (Lnet/minecraft/server/PlayerAbilities;)V updatePlayerAbilities
	b ()Ljava/lang/String; getName
	c ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	d ()Z isBlockPlacingRestricted
	f ()Z isSurvival
	getById (I)Lnet/minecraft/server/EnumGamemode; byId
ekv net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (ILcom/google/gson/JsonElement;)Lekt; getFrame
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Leku; fromJson
eky net/minecraft/client/resources/metadata/animation/package-info
net/minecraft/server/Particles net/minecraft/core/particles/ParticleTypes
	au CODEC
	a (Ljava/lang/String;Lhf$a;Ljava/util/function/Function;)Lnet/minecraft/server/Particle; register
	a (Ljava/lang/String;Z)Lnet/minecraft/server/ParticleType; register
	a (Lnet/minecraft/server/Particle;)Lcom/mojang/serialization/Codec; lambda$static$0
ekx net/minecraft/client/resources/metadata/animation/VillagerMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Lekw; fromJson
ekz net/minecraft/client/resources/metadata/language/LanguageMetadataSection
	a SERIALIZER
	b languages
	a ()Ljava/util/Collection; getLanguages
dbj$1 net/minecraft/world/level/storage/loot/predicates/LocationCheck$1
elb net/minecraft/client/resources/metadata/language/package-info
ela net/minecraft/client/resources/metadata/language/LanguageMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Lekz; fromJson
net/minecraft/server/TimeRange net/minecraft/util/TimeUtil
	a (II)Lnet/minecraft/server/IntRange; rangeOfSeconds
eld net/minecraft/client/resources/metadata/texture/TextureMetadataSection
	a SERIALIZER
	b blur
	c clamp
	a ()Z isBlur
	b ()Z isClamp
net/minecraft/server/VillagePlace net/minecraft/world/entity/ai/village/poi/PoiManager
	a distanceTracker
	b loadedChunks
	a (J)V setDirty
	a (Lcom/mojang/datafixers/util/Pair;)Lnet/minecraft/server/ChunkCoordIntPair; lambda$ensureLoadedAndValid$19
	a (Ljava/util/function/BiConsumer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;)V lambda$null$15
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;I)Ljava/util/Optional; take
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/stream/Stream; findAll
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/server/VillagePlace$Occupancy;Lnet/minecraft/server/BlockPosition;ILjava/util/Random;)Ljava/util/Optional; getRandom
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)J getCountInRange
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getInChunk
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/VillagePlace$Occupancy;Ljava/util/Optional;)Ljava/util/stream/Stream; lambda$getInChunk$4
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/VillagePlace$Occupancy;Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/util/stream/Stream; lambda$getInSquare$0
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/VillagePlaceRecord;)Z lambda$getRandom$9
	a (Lnet/minecraft/server/BlockPosition;)V remove
	a (Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlaceRecord;)Z lambda$getInRange$2
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z exists
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;Lnet/minecraft/server/VillagePlaceSection;)Ljava/lang/Boolean; lambda$exists$10
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)D lambda$findClosest$6
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;)V add
	a (Lnet/minecraft/server/ChunkCoordIntPair;Ljava/lang/Integer;)Ljava/util/Optional; lambda$getInChunk$3
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkSection;)V checkConsistencyWithBlocks
	a (Lnet/minecraft/server/ChunkSection;)Z mayHavePoi
	a (Lnet/minecraft/server/ChunkSection;Ljava/util/function/BiConsumer;Lnet/minecraft/server/BlockPosition;)V lambda$updateFromSection$16
	a (Lnet/minecraft/server/ChunkSection;Lnet/minecraft/server/SectionPosition;)V lambda$checkConsistencyWithBlocks$14
	a (Lnet/minecraft/server/ChunkSection;Lnet/minecraft/server/SectionPosition;Ljava/util/function/BiConsumer;)V updateFromSection
	a (Lnet/minecraft/server/ChunkSection;Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/VillagePlaceSection;)V lambda$checkConsistencyWithBlocks$13
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;I)V ensureLoadedAndValid
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/ChunkCoordIntPair;)V lambda$ensureLoadedAndValid$21
	a (Lnet/minecraft/server/SectionPosition;)I sectionsToVillage
	a (Lnet/minecraft/server/VillagePlace;J)Z access$000
	a (Lnet/minecraft/server/VillagePlaceRecord;)Lnet/minecraft/server/BlockPosition; lambda$take$8
	a (Lnet/minecraft/server/VillagePlaceSection;)Ljava/lang/Boolean; lambda$isVillageCenter$11
	a (Lnet/minecraft/server/VillagePlaceType;Lnet/minecraft/server/BlockPosition;)Z existsAtPosition
	b (J)V onSectionLoad
	b (Lcom/mojang/datafixers/util/Pair;)Z lambda$ensureLoadedAndValid$18
	b (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/stream/Stream; findAllClosestFirst
	b (Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getInSquare
	b (Ljava/util/function/Predicate;Lnet/minecraft/server/VillagePlaceRecord;)Z lambda$take$7
	b (Lnet/minecraft/server/BlockPosition;)Z release
	b (Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlaceRecord;)Z lambda$getInSquare$1
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)D lambda$findAllClosestFirst$5
	b (Lnet/minecraft/server/ChunkCoordIntPair;)Z lambda$ensureLoadedAndValid$20
	b (Lnet/minecraft/server/ChunkSection;Lnet/minecraft/server/SectionPosition;Ljava/util/function/BiConsumer;)V lambda$null$12
	c (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/Optional; find
	c (Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getInRange
	c (Lnet/minecraft/server/BlockPosition;)Ljava/util/Optional; getType
	c (Lnet/minecraft/server/SectionPosition;)Lcom/mojang/datafixers/util/Pair; lambda$ensureLoadedAndValid$17
	d (Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/Optional; findClosest
	d (Lnet/minecraft/server/BlockPosition;)I getFreeTickets
	f (J)Z isVillageCenter
elc net/minecraft/client/resources/metadata/package-info
elf net/minecraft/client/resources/metadata/texture/package-info
net/minecraft/server/TileEntityJukeBox net/minecraft/world/level/block/entity/JukeboxBlockEntity
	a record
	Y_ ()V clearContent
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
ele net/minecraft/client/resources/metadata/texture/TextureMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Leld; fromJson
net/minecraft/server/PacketPlayInBoatMove net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket
	a left
	b right
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Z getLeft
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z getRight
elh net/minecraft/client/resources/model/BlockModelRotation
	a X0_Y0
	b X0_Y90
	c X0_Y180
	d X0_Y270
	e X90_Y0
	f X90_Y90
	g X90_Y180
	h X90_Y270
	i X180_Y0
	j X180_Y90
	k X180_Y180
	l X180_Y270
	m X270_Y0
	n X270_Y90
	o X270_Y180
	p X270_Y270
	q BY_INDEX
	r transformation
	s actualRotation
	t index
	u $VALUES
	a ()Lnet/minecraft/server/PointGroupO; actualRotation
	a (II)Lelh; by
	a (Lelh;)Lelh; lambda$static$1
	b ()Lf; getRotation
	b (II)I getIndex
	b (Lelh;)Ljava/lang/Integer; lambda$static$0
elg net/minecraft/client/resources/model/BakedModel
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Ljava/util/Random;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Leju; getParticleIcon
	f ()Lebe; getTransforms
	g ()Lebc; getOverrides
net/minecraft/server/LootEntryGroup net/minecraft/world/level/storage/loot/entries/EntryGroup
	a ()Lnet/minecraft/server/LootEntryType; getType
	a (Lnet/minecraft/server/LootEntryChildren;Lnet/minecraft/server/LootEntryChildren;Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z lambda$compose$0
	a ([Lczn$a;)Lczj$a; list
	a ([Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; compose
	a ([Lnet/minecraft/server/LootEntryChildren;Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z lambda$compose$1
elj net/minecraft/client/resources/model/Material
	a atlasLocation
	b texture
	c renderType
	a ()Lnet/minecraft/server/MinecraftKey; atlasLocation
	a (Ldzy;Ljava/util/function/Function;)Ldfn; buffer
	a (Ldzy;Ljava/util/function/Function;Z)Ldfn; buffer
	a (Ljava/util/function/Function;)Leag; renderType
	b ()Lnet/minecraft/server/MinecraftKey; texture
	c ()Leju; sprite
net/minecraft/server/TileEntitySkull net/minecraft/world/level/block/entity/SkullBlockEntity
	g mouthTickCount
	gameProfile owner
	h isMovingMouth
	userCache profileCache
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (F)F getMouthAnimation
	a (Lcom/mojang/authlib/minecraft/MinecraftSessionService;)V setSessionService
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/UserCache;)V setProfileCache
	aj_ ()V tick
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; updateGameprofile
	d ()Lcom/mojang/authlib/GameProfile; getOwnerProfile
	f ()V updateOwnerProfile
	setGameProfile (Lcom/mojang/authlib/GameProfile;)V setOwner
eli net/minecraft/client/resources/model/BuiltInModel
	a itemTransforms
	b overrides
	c particleTexture
	d usesBlockLight
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Ljava/util/Random;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Leju; getParticleIcon
	f ()Lebe; getTransforms
	g ()Lebc; getOverrides
ell net/minecraft/client/resources/model/ModelManager
	a bakedRegistry
	b atlases
	c blockModelShaper
	d textureManager
	e blockColors
	f maxMipmapLevels
	g missingModel
	h modelGroups
	a ()Lelg; getMissingModel
	a (I)V updateMaxMipLevel
	a (Lelk;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lelm;)Lelg; getModel
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)Z requiresRender
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Lelk; prepare
	a (Lnet/minecraft/server/MinecraftKey;)Lejt; getAtlas
	b ()Leao; getBlockModelShaper
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
net/minecraft/server/Matrix3f com/mojang/math/Matrix3f
	a m00
	b m01
	c m02
	d m10
	e m11
	f m12
	g m20
	h m21
	i m22
	j G
	k CS
	l SS
	m SQ2
	a ()V transpose
	a (F)V mul
	a (FF)Lcom/mojang/datafixers/util/Pair; qrGivensQuat
	a (FFF)Lcom/mojang/datafixers/util/Pair; approxGivensQuat
	a (IIF)V set
	a (Lnet/minecraft/server/Matrix3f;)V load
	a (Lnet/minecraft/server/Quaternion;)V mul
	b ()Lorg/apache/commons/lang3/tuple/Triple; svdDecompose
	b (FFF)Lnet/minecraft/server/Matrix3f; createScaleMatrix
	b (Lnet/minecraft/server/Matrix3f;)V mul
	c ()V setIdentity
	c (Lnet/minecraft/server/Matrix3f;)Lnet/minecraft/server/Quaternion; stepJacobi
	d ()Lnet/minecraft/server/Matrix3f; copy
	e ()F adjugateAndDet
	f ()Z invert
net/minecraft/server/LootContextParameterSet$Builder net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder
	a required
	b optional
	addOptional (Lnet/minecraft/server/LootContextParameter;)Lnet/minecraft/server/LootContextParameterSet$Builder; optional
	addRequired (Lnet/minecraft/server/LootContextParameter;)Lnet/minecraft/server/LootContextParameterSet$Builder; required
elk net/minecraft/client/resources/model/ModelBakery
	A blockColors
	B loadingStack
	C context
	D unbakedCache
	E bakedCache
	F topLevelModels
	G bakedTopLevelModels
	H atlasPreparations
	I nextModelGroup
	J modelGroups
	a FIRE_0
	b FIRE_1
	c LAVA_FLOW
	d WATER_FLOW
	e WATER_OVERLAY
	f BANNER_BASE
	g SHIELD_BASE
	h NO_PATTERN_SHIELD
	i DESTROY_STAGES
	j BREAKING_LOCATIONS
	k DESTROY_TYPES
	l MISSING_MODEL_LOCATION
	m MISSING_MODEL_MESH
	n GENERATION_MARKER
	o BLOCK_ENTITY_MARKER
	p UNREFERENCED_TEXTURES
	q LOGGER
	r MISSING_MODEL_LOCATION_STRING
	s BUILTIN_MODELS
	t COMMA_SPLITTER
	u EQUAL_SPLITTER
	v ITEM_FRAME_FAKE_DEFINITION
	w ITEM_MODEL_GENERATOR
	x STATIC_DEFINITIONS
	y resourceManager
	z atlasSet
	a ()Ljava/util/Map; getBakedTopLevelModels
	a (I)Lnet/minecraft/server/MinecraftKey; lambda$static$0
	a (ILnet/minecraft/server/IBlockData;)V lambda$registerModelGroup$27
	a (Lcom/google/common/collect/ImmutableList;Lnet/minecraft/server/BlockStateList;Ljava/util/Map;Ljava/util/List;Lebk;Lcom/mojang/datafixers/util/Pair;Leay;Lnet/minecraft/server/MinecraftKey;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;Lebf;)V lambda$loadModel$23
	a (Lcom/mojang/datafixers/util/Pair;)V lambda$new$11
	a (Lcom/mojang/datafixers/util/Pair;Ljava/util/Map$Entry;)Z lambda$null$21
	a (Leax;)V lambda$static$4
	a (Lejv;Lnet/minecraft/server/GameProfilerFiller;)Lejj; uploadTextures
	a (Lelk$b;)Ljava/util/Set; lambda$null$24
	a (Lelk$b;Ljava/util/Set;)V lambda$loadModel$26
	a (Lelm;)V loadTopLevel
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$new$5
	a (Ljava/lang/Iterable;)V registerModelGroup
	a (Ljava/util/HashSet;)V lambda$static$2
	a (Ljava/util/Map;Lebf;Ljava/util/List;Lebk;Lcom/mojang/datafixers/util/Pair;Leay;Lnet/minecraft/server/IBlockData;)V lambda$null$22
	a (Ljava/util/Map;Lebk;Ljava/util/List;Lnet/minecraft/server/IBlockData;)V lambda$loadModel$19
	a (Ljava/util/Map;Lnet/minecraft/server/MinecraftKey;Lcom/mojang/datafixers/util/Pair;Ljava/util/Map;Lelm;Lnet/minecraft/server/IBlockData;)V lambda$loadModel$25
	a (Ljava/util/Map;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IBlockData;)V lambda$loadModel$15
	a (Ljava/util/Set;Lelq;)Ljava/util/stream/Stream; lambda$new$9
	a (Lnet/minecraft/server/Block;Ljava/util/Map;Lnet/minecraft/server/IBlockData;)Z lambda$predicate$13
	a (Lnet/minecraft/server/BlockStateList;Ljava/lang/String;)Ljava/util/function/Predicate; predicate
	a (Lnet/minecraft/server/IBlockData;)V lambda$new$8
	a (Lnet/minecraft/server/IBlockData;Lebf;Ljava/util/List;)Lelk$b; lambda$null$20
	a (Lnet/minecraft/server/IBlockData;Lebk;Ljava/util/List;)Lelk$b; lambda$null$18
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/String;)Ljava/lang/Comparable; getValueHelper
	a (Lnet/minecraft/server/IResource;)Lcom/mojang/datafixers/util/Pair; lambda$loadModel$17
	a (Lnet/minecraft/server/MinecraftKey;)Lelq; getModel
	a (Lnet/minecraft/server/MinecraftKey;Leln;)Lelg; bake
	a (Lnet/minecraft/server/MinecraftKey;Lelq;)V cacheAndQueueDependencies
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/BlockStateList;)V lambda$new$7
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IBlockData;)V lambda$null$6
	b ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; getModelGroups
	b (Lcom/mojang/datafixers/util/Pair;)Z lambda$new$10
	b (Leax;)V lambda$static$3
	b (Lelk$b;)Lelk$b; lambda$loadModel$16
	b (Lnet/minecraft/server/MinecraftKey;)V loadModel
	c (Lnet/minecraft/server/MinecraftKey;)Leax; loadBlockModel
	d (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/BlockStateList; lambda$loadModel$14
	e (Lnet/minecraft/server/MinecraftKey;)V lambda$uploadTextures$12
	f (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; lambda$static$1
eln net/minecraft/client/resources/model/ModelState
	b ()Lf; getRotation
	c ()Z isUvLocked
net/minecraft/server/PacketPlayOutBoss net/minecraft/network/protocol/game/ClientboundBossEventPacket
	a id
	b operation
	c name
	d pct
	e color
	f overlay
	g darkenScreen
	h playMusic
	i createWorldFog
	a (I)V decodeProperties
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/UUID; getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketPlayOutBoss$Action; getOperation
	d ()Lnet/minecraft/server/IChatBaseComponent; getName
	e ()F getPercent
	f ()Lnet/minecraft/server/BossBattle$BarColor; getColor
	g ()Lnet/minecraft/server/BossBattle$BarStyle; getOverlay
	h ()Z shouldDarkenScreen
	i ()Z shouldPlayMusic
	j ()Z shouldCreateWorldFog
	k ()I encodeProperties
elm net/minecraft/client/resources/model/ModelResourceLocation
	d variant
	c (Ljava/lang/String;)[Ljava/lang/String; decompose
	d ()Ljava/lang/String; getVariant
net/minecraft/server/PacketLoginInCustomPayload net/minecraft/network/protocol/login/ServerboundCustomQueryPacket
	a transactionId
	b data
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginInListener;)V handle
	b ()I getTransactionId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketDataSerializer; getData
elp net/minecraft/client/resources/model/SimpleBakedModel
	a unculledFaces
	b culledFaces
	c hasAmbientOcclusion
	d isGui3d
	e usesBlockLight
	f particleIcon
	g transforms
	h overrides
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Ljava/util/Random;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Leju; getParticleIcon
	f ()Lebe; getTransforms
	g ()Lebc; getOverrides
net/minecraft/server/PacketPlayInHeldItemSlot net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket
	itemInHandIndex slot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getSlot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/BlockBed net/minecraft/world/level/block/BedBlock
	c BASE
	d LEG_NORTH_WEST
	e LEG_SOUTH_WEST
	f LEG_NORTH_EAST
	g LEG_SOUTH_EAST
	h NORTH_SHAPE
	i SOUTH_SHAPE
	j WEST_SHAPE
	k EAST_SHAPE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/BlockPropertyBedPart;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; getNeighbourDirection
	a (Lnet/minecraft/server/Entity;)V bounceUp
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityHuman$EnumBedResult;)V lambda$use$0
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/ICollisionAccess;Lnet/minecraft/server/BlockPosition;F)Ljava/util/Optional; findStandUpPosition
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/ICollisionAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)Ljava/util/Optional; findBunkBedStandUpPosition
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/ICollisionAccess;Lnet/minecraft/server/BlockPosition;[[IZ)Ljava/util/Optional; findStandUpPositionAtOffset
	a (Lnet/minecraft/server/EnumDirection;)[[I bedAboveStandUpOffsets
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)[[I bedStandUpOffsets
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EnumDirection; getBedOrientation
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/Entity;)V updateEntityAfterFallOn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)J getSeed
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;)Z canSetSpawn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z kickVillagerOutOfBed
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;F)V fallOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)[[I bedSurroundStandUpOffsets
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isBunkBed
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c ()Lnet/minecraft/server/EnumColor; getColor
	f (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumDirection; getConnectedDirection
	h (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/DoubleBlockFinder$BlockType; getBlockType
elo net/minecraft/client/resources/model/MultiPartBakedModel
	a hasAmbientOcclusion
	b isGui3d
	c usesBlockLight
	d particleIcon
	e transforms
	f overrides
	g selectors
	h selectorCache
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Ljava/util/Random;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Leju; getParticleIcon
	f ()Lebe; getTransforms
	g ()Lebc; getOverrides
elr net/minecraft/client/resources/model/WeightedBakedModel
	a totalWeight
	b list
	c wrapped
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Ljava/util/Random;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Leju; getParticleIcon
	f ()Lebe; getTransforms
	g ()Lebc; getOverrides
elq net/minecraft/client/resources/model/UnbakedModel
	a (Lelk;Ljava/util/function/Function;Leln;Lnet/minecraft/server/MinecraftKey;)Lelg; bake
	a (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; getMaterials
	f ()Ljava/util/Collection; getDependencies
net/minecraft/server/ItemHoe net/minecraft/world/item/HoeItem
	a TILLABLES
	c DIGGABLES
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemActionContext;Lnet/minecraft/server/EntityHuman;)V lambda$useOn$0
net/minecraft/server/CrashReport net/minecraft/CrashReport
	a LOGGER
	b title
	c exception
	d systemDetails
	e details
	f saveFile
	g trackingStackTrace
	h uncategorizedStackTrace
	a ()Ljava/lang/String; getTitle
	a (Ljava/io/File;)Z saveToFile
	a (Ljava/lang/String;)Lnet/minecraft/server/CrashReportSystemDetails; addCategory
	a (Ljava/lang/String;I)Lnet/minecraft/server/CrashReportSystemDetails; addCategory
	a (Ljava/lang/StringBuilder;)V getDetails
	a (Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/server/CrashReport; forThrowable
	b ()Ljava/lang/Throwable; getException
	c ()Ljava/lang/String; getDetails
	d ()Ljava/lang/String; getExceptionMessage
	e ()Ljava/lang/String; getFriendlyReport
	f ()Ljava/io/File; getSaveFile
	g ()Lnet/minecraft/server/CrashReportSystemDetails; getSystemDetails
	h ()V preload
	i ()V initDetails
	j ()Ljava/lang/String; getErrorComment
	k ()Ljava/lang/String; lambda$initDetails$6
	l ()Ljava/lang/String; lambda$initDetails$5
	m ()Ljava/lang/String; lambda$initDetails$4
	n ()Ljava/lang/String; lambda$initDetails$3
	o ()Ljava/lang/String; lambda$initDetails$2
	p ()Ljava/lang/String; lambda$initDetails$1
	q ()Ljava/lang/String; lambda$initDetails$0
net/minecraft/server/CombatEntry net/minecraft/world/damagesource/CombatEntry
	a source
	b time
	c damage
	d health
	e location
	f fallDistance
	a ()Lnet/minecraft/server/DamageSource; getSource
	b ()I getTime
	c ()F getDamage
	d ()F getHealthBeforeDamage
	e ()F getHealthAfterDamage
	f ()Z isCombatRelated
	g ()Ljava/lang/String; getLocation
	h ()Lnet/minecraft/server/IChatBaseComponent; getAttackerName
	i ()Lnet/minecraft/server/Entity; getAttacker
	j ()F getFallDistance
elt net/minecraft/client/resources/package-info
els net/minecraft/client/resources/model/package-info
ejt$a net/minecraft/client/renderer/texture/TextureAtlas$Preparations
	a sprites
	b width
	c height
	d mipLevel
	e regions
elv net/minecraft/client/resources/sounds/AbstractTickableSoundInstance
	n stopped
	n ()Z isStopped
	o ()V stop
net/minecraft/server/PlayerSelector net/minecraft/commands/arguments/selector/options/EntitySelectorOptions
	a ERROR_UNKNOWN_OPTION
	b ERROR_INAPPLICABLE_OPTION
	c ERROR_RANGE_NEGATIVE
	d ERROR_LEVEL_NEGATIVE
	e ERROR_LIMIT_TOO_SMALL
	f ERROR_SORT_UNKNOWN
	g ERROR_GAME_MODE_INVALID
	h ERROR_ENTITY_TYPE_INVALID
	i OPTIONS
	A (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$21
	B (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$20
	C (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$19
	D (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$18
	E (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$17
	F (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$16
	G (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$15
	H (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$14
	I (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$13
	J (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$12
	K (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$11
	L (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$10
	M (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$9
	N (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$8
	O (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$7
	P (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$6
	a ()V bootStrap
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$null$30
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	a (Ljava/lang/String;Lfe$a;Ljava/util/function/Predicate;Lnet/minecraft/server/IChatBaseComponent;)V register
	a (Ljava/lang/String;ZLnet/minecraft/server/Entity;)Z lambda$null$46
	a (Ljava/util/Map;Lnet/minecraft/server/AdvancementProgress;)Z lambda$null$56
	a (Ljava/util/Map;Lnet/minecraft/server/Entity;)Z lambda$null$58
	a (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$63
	a (Lnet/minecraft/server/ArgumentParserSelector;ILnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$null$42
	a (Lnet/minecraft/server/ArgumentParserSelector;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V suggestNames
	a (Lnet/minecraft/server/ArgumentParserSelector;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$null$40
	a (Lnet/minecraft/server/ArgumentParserSelector;Ljava/lang/String;I)Lfe$a; get
	a (Lnet/minecraft/server/EntityTypes;ZLnet/minecraft/server/Entity;)Z lambda$null$43
	a (Lnet/minecraft/server/MinecraftKey;ZLnet/minecraft/server/Entity;)Z lambda$null$61
	a (Lnet/minecraft/server/NBTTagCompound;ZLnet/minecraft/server/Entity;)Z lambda$null$49
	a (ZLnet/minecraft/server/AdvancementProgress;)Z lambda$null$57
	a (ZLnet/minecraft/server/CriterionProgress;)Z lambda$null$55
	a (ZLnet/minecraft/server/EnumGamemode;Lnet/minecraft/server/Entity;)Z lambda$null$34
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	b (Ljava/lang/String;ZLnet/minecraft/server/Entity;)Z lambda$null$37
	b (Ljava/util/Map;Lnet/minecraft/server/Entity;)Z lambda$null$52
	b (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$62
	b (Lnet/minecraft/server/ArgumentParserSelector;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$null$33
	b (Lnet/minecraft/server/MinecraftKey;ZLnet/minecraft/server/Entity;)Z lambda$null$41
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	c (Ljava/lang/String;ZLnet/minecraft/server/Entity;)Z lambda$null$5
	c (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$60
	d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	d (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$59
	e (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	e (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$54
	f (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$53
	g (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$51
	h (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$50
	i (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$48
	j (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$47
	k (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$45
	l (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$44
	m (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$39
	n (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$38
	o (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$36
	p (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$35
	q (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$32
	r (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$31
	s (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$29
	t (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$28
	u (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$27
	v (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$26
	w (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$25
	x (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$24
	y (Lnet/minecraft/server/ArgumentParserSelector;)Z lambda$bootStrap$23
	z (Lnet/minecraft/server/ArgumentParserSelector;)V lambda$bootStrap$22
elu net/minecraft/client/resources/sounds/AbstractSoundInstance
	a sound
	b source
	c location
	d volume
	e pitch
	f x
	g y
	h z
	i looping
	j delay
	k attenuation
	l priority
	m relative
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Lenm;)Lenn; resolve
	b ()Lemi; getSound
	c ()Lnet/minecraft/server/SoundCategory; getSource
	d ()Z isLooping
	e ()I getDelay
	f ()F getVolume
	g ()F getPitch
	h ()D getX
	i ()D getY
	j ()D getZ
	k ()Leml$a; getAttenuation
	l ()Z hasPriority
	m ()Z isRelative
net/minecraft/server/DedicatedServerProperties net/minecraft/server/dedicated/DedicatedServerProperties
	forceGamemode forceGameMode
	generatorSettings worldGenSettings
	rateLimit rateLimitPacketsPerSecond
	a (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$new$2
	a (Lnet/minecraft/server/IRegistryCustom;Ljava/util/Properties;)Lnet/minecraft/server/DedicatedServerProperties; reload
	b (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$new$1
	b (Lnet/minecraft/server/IRegistryCustom;Ljava/util/Properties;)Lnet/minecraft/server/PropertyManager; reload
	c (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$new$0
	load (Lnet/minecraft/server/IRegistryCustom;Ljava/nio/file/Path;)Lnet/minecraft/server/DedicatedServerProperties; fromFile
elx net/minecraft/client/resources/sounds/BeeAggressiveSoundInstance
	p ()Lelv; getAlternativeSoundInstance
	q ()Z shouldSwitchSounds
elw net/minecraft/client/resources/sounds/AmbientSoundHandler
	a ()V tick
net/minecraft/server/BlockRedstoneTorch net/minecraft/world/level/block/RedstoneTorchBlock
	b RECENT_TOGGLES
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;)Ljava/util/List; lambda$isToggledTooFrequently$0
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z hasNeighborSignal
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)Z isToggledTooFrequently
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b_ (Lnet/minecraft/server/IBlockData;)Z isSignalSource
elz net/minecraft/client/resources/sounds/BeeSoundInstance
	n bee
	o hasSwitched
	p ()Lelv; getAlternativeSoundInstance
	q ()Z shouldSwitchSounds
	r ()V tick
	s ()Z canStartSilent
	t ()Z canPlaySound
	u ()F getMinPitch
	v ()F getMaxPitch
ely net/minecraft/client/resources/sounds/BeeFlyingSoundInstance
	p ()Lelv; getAlternativeSoundInstance
	q ()Z shouldSwitchSounds
net/minecraft/server/ArgumentInventorySlot net/minecraft/commands/arguments/SlotArgument
	a EXAMPLES
	b ERROR_UNKNOWN_SLOT
	c SLOTS
	a ()Lnet/minecraft/server/ArgumentInventorySlot; slot
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I getSlot
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Ljava/util/HashMap;)V lambda$static$1
net/minecraft/server/PacketPlayOutWindowItems net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket
	a containerId
	b items
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/List; getItems
net/minecraft/server/EntityFallingBlock net/minecraft/world/entity/item/FallingBlockEntity
	block blockState
	e DATA_START_POS
	fallHurtAmount fallDamageAmount
	fallHurtMax fallDamageMax
	g cancelDrop
	ticksLived time
	tileEntityData blockData
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/BlockPosition;)V setStartPos
	a (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Z)V setHurtsEntities
	aB ()Z isMovementNoisy
	aS ()Z isPickable
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bK ()Z isAttackable
	bQ ()Z displayFireAnimation
	ci ()Z onlyOpCanSetNbt
	e ()V defineSynchedData
	g ()Lnet/minecraft/server/BlockPosition; getStartPos
	getBlock ()Lnet/minecraft/server/IBlockData; getBlockState
	h ()Lnet/minecraft/server/World; getLevel
	j ()V tick
ema net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler
	a player
	b soundManager
	c biomeManager
	d random
	e loopSounds
	f moodSettings
	g additionsSettings
	h moodiness
	i previousBiome
	a ()V tick
	a (Lnet/minecraft/server/BiomeBase;Lnet/minecraft/server/SoundEffect;)V lambda$tick$1
	a (Lnet/minecraft/server/CaveSound;)V lambda$tick$2
	a (Lnet/minecraft/server/CaveSoundSettings;)V lambda$tick$3
	a (Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/BiomeBase;Lema$a;)Lema$a; lambda$null$0
	b ()F getMoodiness
emc net/minecraft/client/resources/sounds/ElytraOnPlayerSoundInstance
	n player
	o time
	r ()V tick
net/minecraft/server/VoxelShapeCubePoint net/minecraft/world/phys/shapes/CubePointRange
	a parts
net/minecraft/server/PacketPlayOutCollect net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket
	a itemId
	b playerId
	c amount
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getItemId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getPlayerId
	d ()I getAmount
emb net/minecraft/client/resources/sounds/BubbleColumnAmbientSoundHandler
	a player
	b wasInBubbleColumn
	c firstTick
	a ()V tick
	a (Lnet/minecraft/server/IBlockData;)Z lambda$tick$0
net/minecraft/server/TileEntityBrewingStand net/minecraft/world/level/block/entity/BrewingStandBlockEntity
	a dataAccess
	b SLOTS_FOR_UP
	c SLOTS_FOR_DOWN
	fuelLevel fuel
	g SLOTS_FOR_SIDES
	j lastPotionCount
	k ingredient
	Y_ ()V clearContent
	Z_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/TileEntityBrewingStand;)I access$000
	a (Lnet/minecraft/server/TileEntityBrewingStand;I)I access$002
	aj_ ()V tick
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/server/ItemStack;)Z canPlaceItem
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
	b (Lnet/minecraft/server/TileEntityBrewingStand;)I access$100
	b (Lnet/minecraft/server/TileEntityBrewingStand;I)I access$102
	c ()Z isEmpty
	f ()[Z getPotionBits
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	h ()Z isBrewable
	j ()V doBrew
net/minecraft/server/RegistryMaterials net/minecraft/core/MappedRegistry
	a LOGGER
	b randomCache
	bf byId
	bg toId
	bh storage
	bi keyStorage
	bj lifecycles
	bk elementsLifecycle
	bl nextId
	a (I)Ljava/lang/Object; byId
	a (ILnet/minecraft/server/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; registerMapping
	a (ILnet/minecraft/server/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;Z)Ljava/lang/Object; registerMapping
	a (Lgi$a;)Ljava/lang/Object; lambda$null$2
	a (Ljava/lang/Object;)I getId
	a (Ljava/util/OptionalInt;Lnet/minecraft/server/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; registerOrOverride
	a (Ljava/util/Random;)Ljava/lang/Object; getRandom
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/Object; get
	a (Lnet/minecraft/server/RegistryMaterials;)Ljava/util/Map; lambda$directCodec$8
	a (Lnet/minecraft/server/RegistryMaterials;Lcom/mojang/serialization/Lifecycle;Lnet/minecraft/server/ResourceKey;Ljava/lang/Object;)V lambda$null$6
	a (Lnet/minecraft/server/ResourceKey;)Ljava/lang/Object; get
	a (Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; networkCodec
	a (Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Lifecycle;Ljava/util/List;)Lnet/minecraft/server/RegistryMaterials; lambda$networkCodec$4
	a (Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)Lnet/minecraft/server/RegistryMaterials; lambda$directCodec$7
	a (Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; withNameAndId
	a (Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$withNameAndId$3
	a (Lnet/minecraft/server/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; register
	b ()Lcom/mojang/serialization/Lifecycle; elementsLifecycle
	b (Lgi$a;)Ljava/lang/Integer; lambda$null$1
	b (Ljava/lang/Object;)Lnet/minecraft/server/MinecraftKey; getKey
	b (Lnet/minecraft/server/RegistryMaterials;)Ljava/util/List; lambda$networkCodec$5
	b (Lnet/minecraft/server/ResourceKey;)Z containsKey
	b (Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; dataPackCodec
	c ()Ljava/util/Set; keySet
	c (Lgi$a;)Lnet/minecraft/server/ResourceKey; lambda$null$0
	c (Ljava/lang/Object;)Ljava/util/Optional; getResourceKey
	c (Lnet/minecraft/server/MinecraftKey;)Z containsKey
	c (Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; directCodec
	d ()Ljava/util/Set; entrySet
	d (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; lifecycle
	e ()Z isEmpty
eme net/minecraft/client/resources/sounds/GuardianAttackSoundInstance
	n guardian
	r ()V tick
	t ()Z canPlaySound
dym$1 net/minecraft/client/particle/SpitParticle$1
emd net/minecraft/client/resources/sounds/EntityBoundSoundInstance
	n entity
	r ()V tick
	t ()Z canPlaySound
net/minecraft/server/RecipeSerializer net/minecraft/world/item/crafting/RecipeSerializer
	a SHAPED_RECIPE
	b SHAPELESS_RECIPE
	c ARMOR_DYE
	d BOOK_CLONING
	e MAP_CLONING
	f MAP_EXTENDING
	g FIREWORK_ROCKET
	h FIREWORK_STAR
	i FIREWORK_STAR_FADE
	j TIPPED_ARROW
	k BANNER_DUPLICATE
	l SHIELD_DECORATION
	m SHULKER_BOX_COLORING
	n SUSPICIOUS_STEW
	o REPAIR_ITEM
	p SMELTING_RECIPE
	q BLASTING_RECIPE
	r SMOKING_RECIPE
	s CAMPFIRE_COOKING_RECIPE
	t STONECUTTER
	u SMITHING
	a (Ljava/lang/String;Lnet/minecraft/server/RecipeSerializer;)Lnet/minecraft/server/RecipeSerializer; register
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
emg net/minecraft/client/resources/sounds/RidingMinecartSoundInstance
	n player
	o minecart
	r ()V tick
	s ()Z canStartSilent
	t ()Z canPlaySound
emf net/minecraft/client/resources/sounds/MinecartSoundInstance
	n minecart
	o pitch
	r ()V tick
	s ()Z canStartSilent
	t ()Z canPlaySound
emi net/minecraft/client/resources/sounds/Sound
	a location
	b volume
	c pitch
	d weight
	e type
	f stream
	g preload
	h attenuationDistance
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Lenj;)V preloadIfRequired
	b ()Lnet/minecraft/server/MinecraftKey; getPath
	c ()F getVolume
	d ()F getPitch
	e ()I getWeight
	f ()Lemi; getSound
	g ()Lemi$a; getType
	h ()Z shouldStream
	i ()Z shouldPreload
	j ()I getAttenuationDistance
	k ()Ljava/lang/Object; getSound
emh net/minecraft/client/resources/sounds/SimpleSoundInstance
	a (Lnet/minecraft/server/SoundEffect;)Lemh; forMusic
	a (Lnet/minecraft/server/SoundEffect;DDD)Lemh; forRecord
	a (Lnet/minecraft/server/SoundEffect;F)Lemh; forUI
	a (Lnet/minecraft/server/SoundEffect;FF)Lemh; forUI
	b (Lnet/minecraft/server/SoundEffect;)Lemh; forAmbientAddition
	b (Lnet/minecraft/server/SoundEffect;DDD)Lemh; forAmbientMood
	b (Lnet/minecraft/server/SoundEffect;FF)Lemh; forLocalAmbience
net/minecraft/server/Matrix4f com/mojang/math/Matrix4f
	a m00
	b m01
	c m02
	d m03
	e m10
	f m11
	g m12
	h m13
	i m20
	j m21
	k m22
	l m23
	m m30
	n m31
	o m32
	p m33
	a ()V setIdentity
	a (DFFF)Lnet/minecraft/server/Matrix4f; perspective
	a (F)V multiply
	a (FFF)Lnet/minecraft/server/Matrix4f; createScaleMatrix
	a (FFFF)Lnet/minecraft/server/Matrix4f; orthographic
	a (II)I bufferIndex
	a (Ljava/nio/FloatBuffer;)V store
	a (Lnet/minecraft/server/Matrix4f;)V multiply
	a (Lnet/minecraft/server/Quaternion;)V multiply
	a (Lnet/minecraft/server/Vector3fa;)V translate
	b ()F adjugateAndDet
	b (FFF)Lnet/minecraft/server/Matrix4f; createTranslateMatrix
	c ()Z invert
	d ()Lnet/minecraft/server/Matrix4f; copy
	e ()V transpose
emk net/minecraft/client/resources/sounds/SoundEventRegistrationSerializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lemj; deserialize
	a (Lcom/google/gson/JsonObject;)Ljava/util/List; getSounds
	a (Lcom/google/gson/JsonObject;Lemi$a;)Lemi$a; getType
	b (Lcom/google/gson/JsonObject;)Lemi; getSound
net/minecraft/server/ItemFishBucket net/minecraft/world/item/FishBucketItem
	a type
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playEmptySound
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbni;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)V checkExtraContent
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)V spawn
emj net/minecraft/client/resources/sounds/SoundEventRegistration
	a sounds
	b replace
	c subtitle
	a ()Ljava/util/List; getSounds
	b ()Z isReplace
	c ()Ljava/lang/String; getSubtitle
emm net/minecraft/client/resources/sounds/TickableSoundInstance
	n ()Z isStopped
	r ()V tick
eml net/minecraft/client/resources/sounds/SoundInstance
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Lenm;)Lenn; resolve
	b ()Lemi; getSound
	c ()Lnet/minecraft/server/SoundCategory; getSource
	d ()Z isLooping
	e ()I getDelay
	f ()F getVolume
	g ()F getPitch
	h ()D getX
	i ()D getY
	j ()D getZ
	k ()Leml$a; getAttenuation
	l ()Z hasPriority
	m ()Z isRelative
	s ()Z canStartSilent
	t ()Z canPlaySound
emo net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances
dbj$a net/minecraft/world/level/storage/loot/predicates/LocationCheck$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionLocationCheck;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionLocationCheck; deserialize
emn net/minecraft/client/resources/sounds/UnderwaterAmbientSoundHandler
	a player
	b soundManager
	c tickDelay
	a ()V tick
dax$1 net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$1
emq net/minecraft/client/searchtree/MutableSearchTree
	a ()V clear
	a (Ljava/lang/Object;)V add
	b ()V refresh
emp net/minecraft/client/resources/sounds/package-info
net/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action
	h $VALUES
ems net/minecraft/client/searchtree/ReloadableSearchTree
	c tree
	d filler
	a (Ljava/lang/Object;Ljava/lang/String;)V lambda$index$0
	a (Ljava/lang/String;)Ljava/util/List; search
	b ()V refresh
	b (Ljava/lang/Object;)V index
emr net/minecraft/client/searchtree/ReloadableIdSearchTree
	a namespaceTree
	b pathTree
	c idGetter
	d contents
	e orderT
	a ()V clear
	a (Ljava/lang/Object;)V add
	a (Ljava/lang/Object;Ljava/lang/Object;)I comparePosition
	a (Ljava/lang/Object;Lnet/minecraft/server/MinecraftKey;)V lambda$index$0
	a (Ljava/lang/String;)Ljava/util/List; search
	b ()V refresh
	b (Ljava/lang/Object;)V index
emu net/minecraft/client/searchtree/SearchTree
	a (Ljava/lang/String;)Ljava/util/List; search
emt net/minecraft/client/searchtree/SearchRegistry
	a CREATIVE_NAMES
	b CREATIVE_TAGS
	c RECIPE_COLLECTIONS
	d searchTrees
	a (Lemt$a;)Lemq; getTree
	a (Lemt$a;Lemq;)V register
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
emw net/minecraft/client/searchtree/package-info
emv net/minecraft/client/searchtree/SuffixArray
	a list
	b DEBUG_COMPARISONS
	c DEBUG_ARRAY
	d LOGGER
	e chars
	f wordStarts
	g suffixToT
	h offsets
	i maxStringLength
	a ()V generate
	a (I)Ljava/lang/String; getString
	a (Ljava/lang/Object;Ljava/lang/String;)V add
	a (Ljava/lang/String;)Ljava/util/List; search
	a (Ljava/lang/String;I)I compare
	a ([I[I[III)V lambda$generate$0
	b ()V print
ekw$a net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat
	a NONE
	b PARTIAL
	c FULL
	d BY_NAME
	e name
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Lekw$a;)Lekw$a; lambda$static$0
	a (Ljava/lang/String;)Lekw$a; getByName
qh$1 net/minecraft/network/protocol/game/ClientboundPlayerCombatPacket$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundPlayerCombatPacket$Event
net/minecraft/server/VillageSiege$State net/minecraft/world/entity/ai/village/VillageSiege$State
	d $VALUES
ev$2 net/minecraft/commands/arguments/item/FunctionArgument$2
	a val$id
	b this$0
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; create
	b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; unwrap
emy net/minecraft/client/server/IntegratedServer
	a LOGGER
	j minecraft
	k paused
	l publishedPort
	m lanPinger
	n uuid
	B ()Ljava/io/File; getServerDirectory
	M ()I getPort
	R_ ()Z shouldInformAdmins
	T ()Z isSnooperEnabled
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Ljava/util/UUID;)V setUUID
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	a (Lnet/minecraft/server/CrashReport;)V onServerCrash
	a (Lnet/minecraft/server/EnumGamemode;)V setDefaultGameType
	a (Lnet/minecraft/server/EnumGamemode;ZI)Z publishServer
	a (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooper
	a (Z)V halt
	aU ()Z forceSynchronousWrites
	b (I)I getScaledTrackingDistance
	b (Lnet/minecraft/server/CrashReport;)Lnet/minecraft/server/CrashReport; fillReport
	c ()V lambda$halt$1
	d ()Z initServer
	g ()I getOperatorUserPermissionLevel
	h ()I getFunctionCompilationLevel
	i ()Z shouldRconBroadcast
	j ()Z isDedicatedServer
	k ()I getRateLimitPacketsPerSecond
	l ()Z isEpollEnabled
	m ()Z isCommandBlockEnabled
	n ()Z isPublished
	o ()Ljava/util/Optional; getModdedStatus
	p ()Ljava/lang/String; lambda$fillReport$0
	t ()V stopServer
ev$1 net/minecraft/commands/arguments/item/FunctionArgument$1
	a val$id
	b this$0
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; create
	b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; unwrap
emx net/minecraft/client/server/IntegratedPlayerList
	a playerData
	a (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/IChatBaseComponent; canPlayerLogin
	b ()Lemy; getServer
	b (Lnet/minecraft/server/EntityPlayer;)V save
	c ()Lnet/minecraft/server/MinecraftServer; getServer
	q ()Lnet/minecraft/server/NBTTagCompound; getSingleplayerData
net/minecraft/server/CrashReportSystemDetails$CrashReportDetail net/minecraft/CrashReportCategory$Entry
	a key
	b value
	a ()Ljava/lang/String; getKey
	b ()Ljava/lang/String; getValue
emz net/minecraft/client/server/LanServer
	a motd
	b address
	c pingTime
	a ()Ljava/lang/String; getMotd
	b ()Ljava/lang/String; getAddress
	c ()V updatePingTime
	d ()Z isUpToDate
net/minecraft/server/VoxelShape net/minecraft/world/phys/shapes/VoxelShape
	a shape
	b faces
	a (DDD)Lnet/minecraft/server/VoxelShape; move
	a (Lddb$a;)V forAllEdges
	a (Lddb$a;IIIIII)V lambda$forAllEdges$1
	a (Lddb$a;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;IIIIII)V lambda$forAllBoxes$2
	a (Ljava/util/List;DDDDDD)V lambda$toAabbs$3
	a (Lnet/minecraft/server/EnumAxisCycle;Lnet/minecraft/server/AxisAlignedBB;D)D collideX
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;D)I findIndex
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;DD)D min
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;DI)Z lambda$findIndex$4
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;I)D get
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/AxisAlignedBB;D)D collide
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/VoxelShape; getFaceShape
	a ([Lnet/minecraft/server/VoxelShape;DDDDDD)V lambda$optimize$0
	b (DDD)Z isFullWide
	b (Lddb$a;)V forAllBoxes
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)D min
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;DD)D max
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/VoxelShape; calculateFace
	c ()Lnet/minecraft/server/VoxelShape; optimize
	c (Lnet/minecraft/server/EnumDirection$EnumAxis;)D max
	d ()Ljava/util/List; toAabbs
	getBoundingBox ()Lnet/minecraft/server/AxisAlignedBB; bounds
	rayTrace (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MovingObjectPositionBlock; clip
enb net/minecraft/client/server/LanServerPinger
	a UNIQUE_THREAD_ID
	b LOGGER
	c motd
	d socket
	e isRunning
	f serverAddress
	a (Ljava/lang/String;)Ljava/lang/String; parseMotd
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; createPingString
	b (Ljava/lang/String;)Ljava/lang/String; parseAddress
ena net/minecraft/client/server/LanServerDetection
	a UNIQUE_THREAD_ID
	b LOGGER
	a ()Ljava/util/concurrent/atomic/AtomicInteger; access$000
	b ()Lorg/apache/logging/log4j/Logger; access$100
end net/minecraft/client/skins/package-info
dxj$1 net/minecraft/client/particle/EnchantmentTableParticle$1
net/minecraft/server/Tag net/minecraft/tags/Tag
	a (Ljava/util/Random;)Ljava/lang/Object; getRandomElement
	a (Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/util/function/Supplier;Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/serialization/DataResult; lambda$codec$1
	a (Ljava/util/function/Supplier;Lnet/minecraft/server/Tag;)Lcom/mojang/serialization/DataResult; lambda$codec$3
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/serialization/DataResult; lambda$null$0
	a (Lnet/minecraft/server/Tag;)Lcom/mojang/serialization/DataResult; lambda$null$2
	b (Ljava/util/Set;)Lnet/minecraft/server/Tag; fromSet
	getTagged ()Ljava/util/List; getValues
	isTagged (Ljava/lang/Object;)Z contains
net/minecraft/server/PathfinderGoalMoveTowardsTarget net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal
	a mob
	b target
	c wantedX
	d wantedY
	e wantedZ
	f speedModifier
	g within
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
enc net/minecraft/client/server/package-info
net/minecraft/server/BlockObserver net/minecraft/world/level/block/ObserverBlock
	b POWERED
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V startSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V updateNeighborsInFront
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b_ (Lnet/minecraft/server/IBlockData;)Z isSignalSource
enf net/minecraft/client/sounds/ChannelAccess
	a channels
	b library
	c executor
	a ()V scheduleTick
	a (Ldds$c;)Ljava/util/concurrent/CompletableFuture; createHandle
	a (Ldds$c;Ljava/util/concurrent/CompletableFuture;)V lambda$createHandle$0
	a (Lenf$a;)Lddr; lambda$null$1
	a (Lenf;)Ljava/util/concurrent/Executor; access$000
	a (Ljava/util/function/Consumer;)V executeOnChannels
	b ()V clear
	b (Lenf;)Ldds; access$100
	b (Ljava/util/function/Consumer;)V lambda$executeOnChannels$2
	c ()V lambda$scheduleTick$3
net/minecraft/server/LootItemFunctionSetDamage net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction
	a LOGGER
	b damage
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionSetDamage;)Lnet/minecraft/server/LootValueBounds; access$000
	a (Lnet/minecraft/server/LootValueBounds;)Ldaf$a; setDamage
	a (Lnet/minecraft/server/LootValueBounds;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$setDamage$0
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
ene net/minecraft/client/sounds/AudioStream
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
enh net/minecraft/client/sounds/MusicManager
	a random
	b minecraft
	c currentMusic
	d nextSongDelay
	a ()V tick
	a (Lnet/minecraft/server/Music;)V startPlaying
	b ()V stopPlaying
	b (Lnet/minecraft/server/Music;)Z isPlayingMusic
net/minecraft/server/WorldGenFeatureRuinedPortalPieces$Position net/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement
	g BY_NAME
	h name
	i $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenFeatureRuinedPortalPieces$Position; byName
	a (Lnet/minecraft/server/WorldGenFeatureRuinedPortalPieces$Position;)Lnet/minecraft/server/WorldGenFeatureRuinedPortalPieces$Position; lambda$static$0
net/minecraft/server/BlockPosition$MutableBlockPosition net/minecraft/core/BlockPos$MutableBlockPos
	a (DDD)Lnet/minecraft/server/BlockPosition; offset
	a (I)Lnet/minecraft/server/BlockPosition; multiply
	a (Lnet/minecraft/server/BaseBlockPosition;III)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; setWithOffset
	a (Lnet/minecraft/server/BaseBlockPosition;Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; setWithOffset
	a (Lnet/minecraft/server/BaseBlockPosition;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; setWithOffset
	a (Lnet/minecraft/server/EnumAxisCycle;III)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; rotate
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/BlockPosition; relative
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;II)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; clamp
	a (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BlockPosition; relative
	b (DDD)Lnet/minecraft/server/BaseBlockPosition; offset
	b (III)Lnet/minecraft/server/BlockPosition; offset
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/BaseBlockPosition; relative
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BaseBlockPosition; relative
	b (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BaseBlockPosition; relative
	c (DDD)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	c (III)Lnet/minecraft/server/BaseBlockPosition; offset
	c (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	c (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	d (III)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	d (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; cross
	e (III)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	e (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; subtract
	f (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; offset
	g (J)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	g (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	h ()Lnet/minecraft/server/BlockPosition; immutable
	h (I)Lnet/minecraft/server/BaseBlockPosition; east
	h (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	i (I)Lnet/minecraft/server/BaseBlockPosition; west
	j ()Lnet/minecraft/server/BaseBlockPosition; east
	j (I)Lnet/minecraft/server/BaseBlockPosition; south
	k ()Lnet/minecraft/server/BaseBlockPosition; west
	k (I)Lnet/minecraft/server/BaseBlockPosition; north
	l ()Lnet/minecraft/server/BaseBlockPosition; south
	l (I)Lnet/minecraft/server/BaseBlockPosition; below
	m ()Lnet/minecraft/server/BaseBlockPosition; north
	m (I)Lnet/minecraft/server/BaseBlockPosition; above
	n ()Lnet/minecraft/server/BaseBlockPosition; below
	n (I)Lnet/minecraft/server/BaseBlockPosition; multiply
	o ()Lnet/minecraft/server/BaseBlockPosition; above
	o (I)V setX
	p (I)V setY
	q (I)V setZ
eng net/minecraft/client/sounds/LoopingAudioStream
	a provider
	b stream
	c bufferedInputStream
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
net/minecraft/server/LootItemFunctionSmelt net/minecraft/world/level/storage/loot/functions/SmeltItemFunction
	a LOGGER
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
	c ()Ldaf$a; smelted
enj net/minecraft/client/sounds/SoundEngine
	a MARKER
	b LOGGER
	c ONLY_WARN_ONCE
	d soundManager
	e options
	f loaded
	g library
	h listener
	i soundBuffers
	j executor
	k channelAccess
	l tickCount
	m instanceToChannel
	n instanceBySource
	o tickingSounds
	p queuedSounds
	q soundDeleteTime
	r listeners
	s queuedTickableSounds
	t preloadQueue
	a ()V reload
	a (FFLeml$a;FZZLnet/minecraft/server/Vec3D;ZLddr;)V lambda$play$4
	a (FFLnet/minecraft/server/Vec3D;Lddr;)V lambda$tickNonPaused$3
	a (FLddr;)V lambda$null$0
	a (Lddw;Lddr;)V lambda$null$5
	a (Ldjh;)V updateSource
	a (Lemi;)V requestPreload
	a (Leml;)V stop
	a (Leml;I)V playDelayed
	a (Leml;Lenf$a;)V lambda$updateCategoryVolume$1
	a (Lemm;)V queueTickingSound
	a (Lene;Lddr;)V lambda$null$7
	a (Lenf$a;)V lambda$stopAll$2
	a (Lenf$a;Lddw;)V lambda$play$6
	a (Lenf$a;Lene;)V lambda$play$8
	a (Lenl;)V addEventListener
	a (Ljava/util/stream/Stream;)V lambda$resume$10
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/SoundCategory;)V stop
	a (Lnet/minecraft/server/SoundCategory;)F getVolume
	a (Lnet/minecraft/server/SoundCategory;F)V updateCategoryVolume
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Vector3fa;)V lambda$updateSource$11
	a (Z)V tick
	b ()V destroy
	b (Leml;)Z isActive
	b (Lenl;)V removeEventListener
	b (Ljava/util/stream/Stream;)V lambda$pause$9
	c ()V stopAll
	c (Leml;)V play
	d ()V pause
	d (Leml;)Z requiresManualLooping
	e ()V resume
	e (Leml;)Z shouldLoopManually
	f ()Ljava/lang/String; getDebugString
	f (Leml;)Z shouldLoopAutomatically
	g ()V loadLibrary
	g (Leml;)F calculatePitch
	h ()V tickNonPaused
	h (Leml;)F calculateVolume
net/minecraft/server/GameRules$GameRuleInt net/minecraft/world/level/GameRules$IntegerValue
	b value
	a ()I get
	a (I)Lnet/minecraft/server/GameRules$GameRuleDefinition; access$100
	a (ILjava/util/function/BiConsumer;)Lnet/minecraft/server/GameRules$GameRuleDefinition; create
	a (ILnet/minecraft/server/GameRules$GameRuleDefinition;)Lnet/minecraft/server/GameRules$GameRuleInt; lambda$create$0
	a (ILnet/minecraft/server/MinecraftServer;)V set
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	a (Ljava/lang/String;)V deserialize
	a (Lnet/minecraft/server/GameRules$GameRuleInt;Lnet/minecraft/server/MinecraftServer;)V setFrom
	a (Lnet/minecraft/server/GameRules$GameRuleValue;Lnet/minecraft/server/MinecraftServer;)V setFrom
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/GameRules$GameRuleInt;)V lambda$create$1
	b ()Ljava/lang/String; serialize
	b (I)Lnet/minecraft/server/GameRules$GameRuleDefinition; create
	b (Ljava/lang/String;)Z tryDeserialize
	c ()I getCommandResult
	c (Ljava/lang/String;)I safeParse
	d ()Lnet/minecraft/server/GameRules$GameRuleInt; getSelf
	e ()Lnet/minecraft/server/GameRules$GameRuleInt; copy
	f ()Lnet/minecraft/server/GameRules$GameRuleValue; copy
	g ()Lnet/minecraft/server/GameRules$GameRuleValue; getSelf
eni net/minecraft/client/sounds/SoundBufferLibrary
	a resourceManager
	b cache
	a ()V clear
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$preload$5
	a (Lemi;)Ljava/util/concurrent/CompletableFuture; lambda$preload$4
	a (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; preload
	a (Ljava/util/concurrent/CompletableFuture;)V lambda$clear$3
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/util/concurrent/CompletableFuture; getCompleteBuffer
	a (Lnet/minecraft/server/MinecraftKey;Z)Ljava/util/concurrent/CompletableFuture; getStream
	b (Lnet/minecraft/server/MinecraftKey;)Ljava/util/concurrent/CompletableFuture; lambda$getCompleteBuffer$1
	b (Lnet/minecraft/server/MinecraftKey;Z)Lene; lambda$getStream$2
	c (Lnet/minecraft/server/MinecraftKey;)Lddw; lambda$null$0
enl net/minecraft/client/sounds/SoundEventListener
	a (Leml;Lenn;)V onPlaySound
enk net/minecraft/client/sounds/SoundEngineExecutor
	a thread
	b shutdown
	a ()V flush
	av ()Ljava/lang/Thread; getRunningThread
	b ()Ljava/lang/Thread; createThread
	bl ()V waitForTasks
	c ()V run
	d ()Z lambda$run$0
	d (Ljava/lang/Runnable;)Z shouldRun
	e (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
net/minecraft/server/EntityFox net/minecraft/world/entity/animal/Fox
	FIRST_TRUSTED_PLAYER DATA_TRUSTED_ID_0
	SECOND_TRUSTED_PLAYER DATA_TRUSTED_ID_1
	bA interestedAngleO
	bB crouchAmount
	bC crouchAmountO
	bD ticksSinceEaten
	bo DATA_TYPE_ID
	bp DATA_FLAGS_ID
	bs ALLOWED_ITEMS
	bt TRUSTED_TARGET_SELECTOR
	bu STALKABLE_PREY
	bv AVOID_PLAYERS
	bw landTargetGoal
	bx turtleEggTargetGoal
	by fishTargetGoal
	bz interestedAngle
	F ()V playAmbientSound
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/Entity;)Z lambda$static$3
	a (Lnet/minecraft/server/EntityFox;)Z access$000
	a (Lnet/minecraft/server/EntityFox;F)F access$1802
	a (Lnet/minecraft/server/EntityFox;Ljava/util/UUID;)V access$600
	a (Lnet/minecraft/server/EntityFox;Lnet/minecraft/server/EntityLiving;)Z isPathClear
	a (Lnet/minecraft/server/EntityFox;Z)V access$400
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityInsentient;)V onOffspringSpawnedFromEgg
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)V usePlayerItem
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	b (Ljava/util/UUID;)V addTrustedUUID
	b (Lnet/minecraft/server/Entity;)Z lambda$static$2
	b (Lnet/minecraft/server/EntityFox;)Z access$300
	b (Lnet/minecraft/server/EntityFox;F)F access$1902
	b (Lnet/minecraft/server/EntityFox;Ljava/util/UUID;)Z access$1000
	b (Lnet/minecraft/server/EntityFox;Z)V access$800
	b (Lnet/minecraft/server/EntityItem;)V pickUpItem
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityFox; getBreedOffspring
	c (Ljava/util/UUID;)Z trusts
	c (Lnet/minecraft/server/Entity;)Z lambda$static$1
	c (Lnet/minecraft/server/EntityFox;)V access$500
	c (Lnet/minecraft/server/EntityFox;Z)V access$1400
	c (Lnet/minecraft/server/EntityItem;)Z lambda$static$0
	ce ()Lnet/minecraft/server/Vec3D; getLeashOffset
	d (IZ)V setFlag
	d (Lnet/minecraft/server/DamageSource;)V dropAllDeathLoot
	d (Lnet/minecraft/server/EntityFox;)Ljava/util/List; access$700
	d (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/SoundEffect; getEatingSound
	dH ()Z isImmobile
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (FF)I calculateFallDamage
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityFox;)V access$900
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	eK ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eN ()Z isFaceplanted
	eO ()Z isPouncing
	eU ()Z isJumping
	eV ()Z isFullyCrouched
	eW ()Z isInterested
	eX ()Ljava/util/function/Predicate; access$100
	eY ()Ljava/util/function/Predicate; access$200
	el ()Z isSleeping
	f (Lnet/minecraft/server/EntityFox;)Ljava/util/Random; access$1200
	fa ()Ljava/util/List; getTrustedUUIDs
	fb ()Z isDefending
	fc ()V wakeUp
	fd ()V clearStates
	fe ()Z canMove
	g (Lnet/minecraft/server/EntityFox;)Ljava/util/Random; access$1300
	h (Lnet/minecraft/server/EntityFox;)Ljava/util/Random; access$1500
	h (Lnet/minecraft/server/EntityLiving;)V setTarget
	h (Lnet/minecraft/server/ItemStack;)Z canHoldItem
	i (Lnet/minecraft/server/EntityFox;)Z access$1600
	i (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$9
	initializePathFinderGoals ()V setTargetGoals
	j ()V tick
	j (Lnet/minecraft/server/EntityFox;)Z access$1700
	j (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$8
	k ()V aiStep
	k (Lnet/minecraft/server/EntityFox;)Z access$2000
	k (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$7
	k (Lnet/minecraft/server/ItemStack;)Z isFood
	l (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$6
	l (Lnet/minecraft/server/ItemStack;)Z canEat
	m (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$5
	m (Lnet/minecraft/server/ItemStack;)V spitOutItem
	n (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$4
	n (Lnet/minecraft/server/ItemStack;)V dropItemStack
	o ()V registerGoals
	setCrouching (Z)V setIsCrouching
	t (I)Z getFlag
	u (Z)V setIsPouncing
	w (Z)V setIsInterested
	x (Z)V setFaceplanted
	y (F)F getHeadRollAngle
	y (Z)V setDefending
	z (F)F getCrouchAmount
net/minecraft/server/BehaviorPotentialJobSite net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite
	b speedModifier
	a (Lnet/minecraft/server/Activity;)Ljava/lang/Boolean; lambda$checkExtraStartConditions$0
	a (Lnet/minecraft/server/VillagePlaceType;)Z lambda$null$1
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/GlobalPos;)V lambda$stop$2
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
enn net/minecraft/client/sounds/WeighedSoundEvents
	a list
	b random
	c location
	d subtitle
	a ()Lemi; getSound
	a (Lenj;)V preloadIfRequired
	a (Leno;)V addSound
	b ()Lnet/minecraft/server/MinecraftKey; getResourceLocation
	c ()Lnet/minecraft/server/IChatBaseComponent; getSubtitle
	e ()I getWeight
	k ()Ljava/lang/Object; getSound
enm net/minecraft/client/sounds/SoundManager
	a EMPTY_SOUND
	b LOGGER
	c GSON
	d SOUND_EVENT_REGISTRATION_TYPE
	e registry
	f soundEngine
	a ()Ljava/util/Collection; getAvailableSounds
	a (Ldjh;)V updateSource
	a (Lemi;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IResourceManager;)Z access$200
	a (Leml;)V play
	a (Leml;I)V playDelayed
	a (Lemm;)V queueTickingSound
	a (Lenl;)V addListener
	a (Lenm$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Lenm$a; prepare
	a (Lnet/minecraft/server/MinecraftKey;)Lenn; getSoundEvent
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/SoundCategory;)V stop
	a (Lnet/minecraft/server/SoundCategory;F)V updateSourceVolume
	a (Z)V tick
	b ()V pause
	b (Lemi;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IResourceManager;)Z validateSoundResource
	b (Leml;)V stop
	b (Lenl;)V removeListener
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
	c (Leml;)Z isActive
	d ()V stop
	e ()V destroy
	f ()V resume
	g ()Ljava/lang/String; getDebugString
	h ()Lorg/apache/logging/log4j/Logger; access$100
enp net/minecraft/client/sounds/package-info
eno net/minecraft/client/sounds/Weighted
	a (Lenj;)V preloadIfRequired
	e ()I getWeight
	k ()Ljava/lang/Object; getSound
enr net/minecraft/client/tutorial/CraftPlanksTutorialStep
	a CRAFT_TITLE
	b CRAFT_DESCRIPTION
	c tutorial
	d toast
	e timeWaiting
	a ()V tick
	a (Ldze;Lnet/minecraft/server/Tag;)Z hasCraftedPlanksPreviously
	a (Lnet/minecraft/server/ItemStack;)V onGetItem
	b ()V clear
bru$1 net/minecraft/world/level/Level$1
	a val$dimensionType
	b this$0
	a ()D getCenterX
	b ()D getCenterZ
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType
	e $VALUES
enq net/minecraft/client/tutorial/CompletedTutorialStepInstance
	a tutorial
bsg$a net/minecraft/world/level/PotentialCalculator$PointCharge
	a pos
	b charge
	a (Lnet/minecraft/server/BlockPosition;)D getPotentialChange
net/minecraft/server/PacketPlayOutCombatEvent net/minecraft/network/protocol/game/ClientboundPlayerCombatPacket
	a event
	b playerId
	c killerId
	d duration
	e message
	a ()Z isSkippable
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
ent net/minecraft/client/tutorial/MovementTutorialStepInstance
	a MOVE_TITLE
	b MOVE_DESCRIPTION
	c LOOK_TITLE
	d LOOK_DESCRIPTION
	e tutorial
	f moveToast
	g lookToast
	h timeWaiting
	i timeMoved
	j timeLooked
	k moved
	l turned
	m moveCompleted
	n lookCompleted
	a ()V tick
	a (DD)V onMouse
	a (Ldzc;)V onInput
	b ()V clear
ens net/minecraft/client/tutorial/FindTreeTutorialStepInstance
	a TREE_BLOCKS
	b TITLE
	c DESCRIPTION
	d tutorial
	e toast
	f timeWaiting
	a ()V tick
	a (Ldwl;Lnet/minecraft/server/MovingObjectPosition;)V onLookAt
	a (Ldze;)Z hasPunchedTreesPreviously
	a (Lnet/minecraft/server/ItemStack;)V onGetItem
	b ()V clear
env net/minecraft/client/tutorial/PunchTreeTutorialStepInstance
	a TITLE
	b DESCRIPTION
	c tutorial
	d toast
	e timeWaiting
	f resetCount
	a ()V tick
	a (Ldwl;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;F)V onDestroyBlock
	a (Lnet/minecraft/server/ItemStack;)V onGetItem
	b ()V clear
enu net/minecraft/client/tutorial/OpenInventoryTutorialStep
	a TITLE
	b DESCRIPTION
	c tutorial
	d toast
	e timeWaiting
	a ()V tick
	b ()V clear
	c ()V onOpenInventory
net/minecraft/server/ArgumentScoreboardSlot net/minecraft/commands/arguments/ScoreboardSlotArgument
	a ERROR_INVALID_VALUE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentScoreboardSlot; displaySlot
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I getDisplaySlot
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
enx net/minecraft/client/tutorial/TutorialStepInstance
	a ()V tick
	a (DD)V onMouse
	a (Ldwl;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;F)V onDestroyBlock
	a (Ldwl;Lnet/minecraft/server/MovingObjectPosition;)V onLookAt
	a (Ldzc;)V onInput
	a (Lnet/minecraft/server/ItemStack;)V onGetItem
	b ()V clear
	c ()V onOpenInventory
net/minecraft/server/EnumMobSpawn net/minecraft/world/entity/MobSpawnType
	q $VALUES
enw net/minecraft/client/tutorial/Tutorial
	a minecraft
	b instance
	a ()V onOpenInventory
	a (DD)V onMouse
	a (Ldwl;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;F)V onDestroyBlock
	a (Ldwl;Lnet/minecraft/server/MovingObjectPosition;)V onLookAt
	a (Ldzc;)V onInput
	a (Leny;)V setStep
	a (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; key
	a (Lnet/minecraft/server/ItemStack;)V onGetItem
	b ()V stop
	c ()V start
	d ()V tick
	e ()Ldjw; getMinecraft
	f ()Lnet/minecraft/server/EnumGamemode; getGameMode
enz net/minecraft/client/tutorial/package-info
aa$a net/minecraft/advancements/AdvancementProgress$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/AdvancementProgress; deserialize
	a (Lnet/minecraft/server/AdvancementProgress;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
eny net/minecraft/client/tutorial/TutorialSteps
	a MOVEMENT
	b FIND_TREE
	c PUNCH_TREE
	d OPEN_INVENTORY
	e CRAFT_PLANKS
	f NONE
	g name
	h constructor
	i $VALUES
	a ()Ljava/lang/String; getName
	a (Lenw;)Lenx; create
	a (Ljava/lang/String;)Leny; getByName
dsc$2 net/minecraft/client/gui/screens/worldselection/WorldGenSettingsComponent$2
	a this$0
	c ()Lnet/minecraft/server/IChatMutableComponent; createNarrationMessage
	i ()Lnet/minecraft/server/IChatBaseComponent; getMessage
dsc$3 net/minecraft/client/gui/screens/worldselection/WorldGenSettingsComponent$3
	a val$parent
	b this$0
	i ()Lnet/minecraft/server/IChatBaseComponent; getMessage
eoa net/minecraft/realms/DisconnectedRealmsScreen
	a title
	b reason
	c message
	p parent
	q textHeight
	a (Ldfj;IIF)V render
	a (Ldjw;Ldlg;)V lambda$init$0
	au_ ()V onClose
	b ()V init
dsc$1 net/minecraft/client/gui/screens/worldselection/WorldGenSettingsComponent$1
	a this$0
	c ()Lnet/minecraft/server/IChatMutableComponent; createNarrationMessage
	i ()Lnet/minecraft/server/IChatBaseComponent; getMessage
eoc net/minecraft/realms/RealmsBridge
	a previousScreen
	a (Ldoq;)V switchToRealms
	b ()V init
	b (Ldoq;)Leog; getNotificationScreen
eob net/minecraft/realms/NarrationHelper
	a REPEATED_NARRATOR
	a (Ljava/lang/Iterable;)V now
	a (Ljava/lang/String;)V now
	a ([Ljava/lang/String;)V now
	b (Ljava/lang/Iterable;)Ljava/lang/String; join
	b (Ljava/lang/String;)V repeatedly
	c (Ljava/lang/String;)Ljava/lang/String; fixNarrationNewlines
net/minecraft/server/WorldGenFeatureVillageTaiga net/minecraft/data/worldgen/TaigaVillagePools
	a START
	a ()V bootstrap
net/minecraft/server/LootItemFunctionSetContents net/minecraft/world/level/storage/loot/functions/SetContainerContents
	a entries
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/LootItemFunctionSetContents;)Ljava/util/List; access$100
	a (Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/NonNullList;Lnet/minecraft/server/LootEntryAbstract;)V lambda$run$1
	a (Lnet/minecraft/server/NonNullList;Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/LootEntry;)V lambda$null$0
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
	c ()Ldal$a; setContents
eoe net/minecraft/realms/RealmsLabel
	a text
	b x
	c y
	d color
	a ()Ljava/lang/String; getText
	a (Ldoq;Ldfj;)V render
net/minecraft/server/RecipeBannerDuplicate net/minecraft/world/item/crafting/BannerDuplicateRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	b (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/NonNullList; getRemainingItems
	b (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/NonNullList; getRemainingItems
eod net/minecraft/realms/RealmsConnect
	a LOGGER
	b onlineScreen
	c aborted
	d connection
	a ()V abort
	a (Leod;)Z access$000
	a (Leod;Lnet/minecraft/server/NetworkManager;)Lnet/minecraft/server/NetworkManager; access$102
	a (Ljava/lang/String;I)V connect
	b ()V tick
	b (Leod;)Lnet/minecraft/server/NetworkManager; access$100
	c ()Lorg/apache/logging/log4j/Logger; access$300
	c (Leod;)Ldoq; access$200
net/minecraft/server/WorldGenFeatureDefinedStructurePoolEmpty net/minecraft/world/level/levelgen/feature/structures/EmptyPoolElement
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; getType
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;Z)Z place
	b ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolEmpty; lambda$static$0
net/minecraft/server/DataConverterMapId net/minecraft/util/datafix/fixes/MapIdFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
net/minecraft/server/BlockPressurePlateBinary$EnumMobType net/minecraft/world/level/block/PressurePlateBlock$Sensitivity
	c $VALUES
eog net/minecraft/realms/RealmsScreen
	A ()V narrateLabels
	d ()V tick
	j (I)I row
eof net/minecraft/realms/RealmsObjectSelectionList
	a ()V clear
	a (I)V selectItem
	a (IIDDI)V itemClicked
	a (Ldls$a;)I addEntry
	a (Ljava/util/Collection;)V replaceEntries
	b (Ldlc$a;)I addEntry
	c ()I getMaxPosition
	d ()I getRowWidth
	e ()I getScrollbarPosition
	h (I)I getRowTop
	j (I)V setSelectedItem
	l ()I getItemCount
	p ()I getRowLeft
eoi net/minecraft/realms/RepeatedNarrator
	a permitsPerSecond
	b params
	a (Ljava/lang/String;)V narrate
	a (Ljava/lang/String;Leoi$a;)Leoi$a; lambda$narrate$0
eoh net/minecraft/realms/RealmsServerAddress
	a host
	b port
	a ()Ljava/lang/String; getHost
	a (Ljava/lang/String;)Leoh; parseString
	b ()I getPort
net/minecraft/server/DataPaletteLinear net/minecraft/world/level/chunk/LinearPalette
	a registry
	b values
	c resizeHandler
	d reader
	e bits
	f size
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/server/NBTTagList;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()I getSize
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/WorldGenFeatureComposite net/minecraft/world/level/levelgen/feature/DecoratedFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureCompositeConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/WorldGenFeatureCompositeConfiguration;Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lnet/minecraft/server/BlockPosition;)V lambda$place$0
ev$a net/minecraft/commands/arguments/item/FunctionArgument$Result
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; create
	b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; unwrap
eoj net/minecraft/realms/package-info
net/minecraft/server/PacketPlayOutWindowData net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket
	a containerId
	b id
	c value
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getId
	d ()I getValue
net/minecraft/server/EntityMinecartHopper net/minecraft/world/entity/vehicle/MinecartHopper
	d enabled
	e cooldownTime
	f lastPosition
	A ()D getLevelZ
	B ()Z suckInItems
	C ()Z isOnCooldown
	Z_ ()I getContainerSize
	a (IIIZ)V activateMinecart
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/DamageSource;)V destroy
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	j ()V tick
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	s ()I getDefaultDisplayOffset
	v ()Lnet/minecraft/server/World; getLevel
	x ()D getLevelX
	z ()D getLevelY
net/minecraft/server/BlockFire net/minecraft/world/level/block/FireBlock
	UPPER UP
	burnChances burnOdds
	flameChances flameOdds
	h PROPERTY_BY_DIRECTION
	i UP_AABB
	j WEST_AABB
	k EAST_AABB
	o NORTH_AABB
	p SOUTH_AABB
	q shapesCache
	a (Lcef$a;)V createBlockStateDefinition
	a (Ljava/util/Map$Entry;)Z lambda$static$0
	a (Ljava/util/Random;)I getFireTickDelay
	a (Lnet/minecraft/server/Block;II)V setFlammable
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/IBlockData; getStateWithAge
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)I getFireOdds
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z isNearRain
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c ()V bootStrap
	canBurn (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isValidFireLocation
	e (Lnet/minecraft/server/IBlockData;)Z canBurn
	getBurnChance (Lnet/minecraft/server/IBlockData;)I getBurnOdd
	getFlameChance (Lnet/minecraft/server/IBlockData;)I getFlameOdds
	getPlacedState (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	h (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/VoxelShape; calculateShape
	n (Lnet/minecraft/server/IBlockData;)Z lambda$new$1
	trySpread (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILjava/util/Random;I)V checkBurnOut
net/minecraft/server/IMonster net/minecraft/world/entity/monster/Enemy
net/minecraft/server/ArgumentChat net/minecraft/commands/arguments/MessageArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/ArgumentChat; message
	a (Lcom/mojang/brigadier/StringReader;)Ldp$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; getMessage
crf$1 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/ContainerDispenser net/minecraft/world/inventory/DispenserMenu
	items dispenser
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
net/minecraft/server/ItemCompass net/minecraft/world/item/CompassItem
	a LOGGER
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/Optional; getLodestoneDimension
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTBase;)V lambda$addLodestoneTags$0
	a (Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/NBTTagCompound;)V addLodestoneTags
	d (Lnet/minecraft/server/ItemStack;)Z isLodestoneCompass
	e (Lnet/minecraft/server/ItemStack;)Z isFoil
	f (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; getDescriptionId
net/minecraft/server/WorldGenSurfaceComposites net/minecraft/data/worldgen/SurfaceBuilders
	a BADLANDS
	b BASALT_DELTAS
	c CRIMSON_FOREST
	d DESERT
	e END
	f ERODED_BADLANDS
	g FROZEN_OCEAN
	h FULL_SAND
	i GIANT_TREE_TAIGA
	j GRASS
	k GRAVELLY_MOUNTAIN
	l ICE_SPIKES
	m MOUNTAIN
	n MYCELIUM
	o NETHER
	p NOPE
	q OCEAN_SAND
	r SHATTERED_SAVANNA
	s SOUL_SAND_VALLEY
	t STONE
	u SWAMP
	v WARPED_FOREST
	w WOODED_BADLANDS
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenSurfaceComposite;)Lnet/minecraft/server/WorldGenSurfaceComposite; register
net/minecraft/server/DataConverterShulkerBoxBlock net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
dzp$1 net/minecraft/client/renderer/FaceInfo$1
net/minecraft/server/PathfinderGoalNearestHealableRaider net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal
	i cooldown
	a ()Z canUse
	c ()V start
	h ()I getCooldown
	j ()V decrementCooldown
bdt$b net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl
	a this$0
	a ()V clientTick
net/minecraft/server/PosRuleTestType net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType
	a ALWAYS_TRUE_TEST
	b LINEAR_POS_TEST
	c AXIS_ALIGNED_LINEAR_POS_TEST
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$0
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/PosRuleTestType; register
bdt$c net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal
	a ()Z canUse
	a (D)Lnet/minecraft/server/AxisAlignedBB; getTargetSearchArea
	b (Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
bdt$d net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal
	i this$0
	a ()Z canUse
	a (D)Lnet/minecraft/server/AxisAlignedBB; getTargetSearchArea
net/minecraft/server/ReputationType net/minecraft/world/entity/ai/gossip/GossipType
	f id
	g weight
	h max
	i decayPerDay
	j decayPerTransfer
	k BY_ID
	l $VALUES
	a (Ljava/lang/String;)Lnet/minecraft/server/ReputationType; byId
	a (Lnet/minecraft/server/ReputationType;)Ljava/lang/String; lambda$static$0
bdt$e net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal
	a this$0
	b peekTime
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/ScoreboardServer net/minecraft/server/ServerScoreboard
	a server
	b trackedObjectives
	c dirtyListeners
	a ()Lnet/minecraft/server/MinecraftServer; getServer
	a (ILnet/minecraft/server/ScoreboardObjective;)V setDisplayObjective
	a (Ljava/lang/Runnable;)V addDirtyListener
	a (Ljava/lang/String;)V onPlayerRemoved
	a (Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)V onPlayerScoreRemoved
	a (Ljava/lang/String;Lnet/minecraft/server/ScoreboardTeam;)Z addPlayerToTeam
	a (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveAdded
	a (Lnet/minecraft/server/ScoreboardScore;)V onScoreChanged
	a (Lnet/minecraft/server/ScoreboardTeam;)V onTeamAdded
	b ()V setDirty
	b (Ljava/lang/String;Lnet/minecraft/server/ScoreboardTeam;)V removePlayerFromTeam
	b (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveChanged
	b (Lnet/minecraft/server/ScoreboardTeam;)V onTeamChanged
	c (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveRemoved
	c (Lnet/minecraft/server/ScoreboardTeam;)V onTeamRemoved
	e (Lnet/minecraft/server/ScoreboardObjective;)V startTrackingObjective
	f (Lnet/minecraft/server/ScoreboardObjective;)Ljava/util/List; getStopTrackingPackets
	g (Lnet/minecraft/server/ScoreboardObjective;)V stopTrackingObjective
	getScoreboardScorePacketsForObjective (Lnet/minecraft/server/ScoreboardObjective;)Ljava/util/List; getStartTrackingPackets
	h (Lnet/minecraft/server/ScoreboardObjective;)I getObjectiveDisplaySlotCount
net/minecraft/server/VirtualLevelReadable net/minecraft/world/level/LevelSimulatedReader
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	b (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
	getHighestBlockYAt (Lnet/minecraft/server/HeightMap$Type;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; getHeightmapPos
net/minecraft/server/BlockPortalShape net/minecraft/world/level/portal/PortalShape
	a FRAME
	b level
	c axis
	d rightDir
	e numPortalBlocks
	position bottomLeft
	a ()Z isValid
	a (Lnet/minecraft/server/BlockPortalShape;)Z lambda$findEmptyPortalShape$1
	a (Lnet/minecraft/server/BlockPosition$MutableBlockPosition;)I getDistanceUntilTop
	a (Lnet/minecraft/server/BlockPosition$MutableBlockPosition;I)Z hasTopFrame
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; calculateBottomLeft
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDistanceUntilEdgeAboveFrame
	a (Lnet/minecraft/server/BlockUtil$Rectangle;Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EntitySize;)Lnet/minecraft/server/Vec3D; getRelativePosition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;Lnet/minecraft/server/EnumDirection$EnumAxis;)Ljava/util/Optional; findPortalShape
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection$EnumAxis;)Ljava/util/Optional; findEmptyPortalShape
	a (Lnet/minecraft/server/IBlockData;)Z isEmpty
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V lambda$createPortalBlocks$2
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z lambda$static$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockUtil$Rectangle;Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EntitySize;Lnet/minecraft/server/Vec3D;FF)Lnet/minecraft/server/ShapeDetectorShape; createPortalInfo
	c ()Z isComplete
	createPortal ()V createPortalBlocks
	d ()I calculateWidth
	e ()I calculateHeight
bzt$1 net/minecraft/world/level/block/SlabBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$SlabType
	b $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
net/minecraft/server/ItemBlockWallable net/minecraft/world/item/StandingAndWallBlockItem
	a (Ljava/util/Map;Lnet/minecraft/server/Item;)V registerBlocks
	c (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getPlacementState
net/minecraft/server/ItemBlock net/minecraft/world/item/BlockItem
	a block
	a ()Ljava/lang/String; getDescriptionId
	a (Ljava/util/Map;Lnet/minecraft/server/Item;)V registerBlocks
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/EnumInteractionResult; place
	a (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/IBlockData;)Z placeBlock
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)Z updateCustomBlockEntityTag
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; updateBlockStateFromTag
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/SoundEffect; getPlaceSound
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Lnet/minecraft/server/IBlockData; lambda$updateState$0
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;Ljava/lang/String;)Lnet/minecraft/server/IBlockData; updateState
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbni;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)Z updateCustomBlockEntityTag
	b (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/BlockActionContext; updatePlacementContext
	b (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/IBlockData;)Z canPlace
	c (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getPlacementState
	isCheckCollisions ()Z mustSurvive
bdt$a net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal
	a this$0
	b attackTime
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PacketPlayOutEntitySound net/minecraft/network/protocol/game/ClientboundSoundEntityPacket
	a sound
	b source
	c id
	d volume
	e pitch
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/SoundEffect; getSound
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/SoundCategory; getSource
	d ()I getId
	e ()F getVolume
	f ()F getPitch
net/minecraft/server/WorldMap$WorldMapHumanTracker net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer
	b step
	d dirtyData
	e minDirtyX
	f minDirtyY
	g maxDirtyX
	h maxDirtyY
	i tick
	trackee player
	worldMap this$0
	a (II)V markDirty
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/Packet; nextUpdatePacket
eml$a net/minecraft/client/resources/sounds/SoundInstance$Attenuation
	a NONE
	b LINEAR
	c $VALUES
net/minecraft/server/BossBattle net/minecraft/world/BossEvent
	b percent
	e darkenScreen
	f playBossMusic
	g createWorldFog
	h id
	style overlay
	title name
	a (F)V setPercent
	a (Lnet/minecraft/server/BossBattle$BarColor;)V setColor
	a (Lnet/minecraft/server/BossBattle$BarStyle;)V setOverlay
	a (Lnet/minecraft/server/IChatBaseComponent;)V setName
	a (Z)Lnet/minecraft/server/BossBattle; setDarkenScreen
	b (Z)Lnet/minecraft/server/BossBattle; setPlayBossMusic
	c (Z)Lnet/minecraft/server/BossBattle; setCreateWorldFog
	getProgress ()F getPercent
	i ()Ljava/util/UUID; getId
	isCreateFog ()Z shouldCreateWorldFog
	isDarkenSky ()Z shouldDarkenScreen
	isPlayMusic ()Z shouldPlayBossMusic
	j ()Lnet/minecraft/server/IChatBaseComponent; getName
	l ()Lnet/minecraft/server/BossBattle$BarColor; getColor
	m ()Lnet/minecraft/server/BossBattle$BarStyle; getOverlay
net/minecraft/server/BehaviorCelebrate net/minecraft/world/entity/ai/behavior/CelebrateVillagersSurvivedRaid
	b currentRaid
	a (Lnet/minecraft/server/EnumColor;I)Lnet/minecraft/server/ItemStack; getFirework
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
bij$1 net/minecraft/world/inventory/ContainerLevelAccess$1
	a (Ljava/util/function/BiFunction;)Ljava/util/Optional; evaluate
bij$2 net/minecraft/world/inventory/ContainerLevelAccess$2
	b val$level
	c val$pos
	a (Ljava/util/function/BiFunction;)Ljava/util/Optional; evaluate
net/minecraft/server/ArgumentRotation net/minecraft/commands/arguments/coordinates/RotationArgument
	a ERROR_NOT_COMPLETE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentRotation; rotation
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IVectorPosition; getRotation
dif$a com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry
	a this$0
	b template
	a (Ldfj;IIIIIIIZF)V render
	a (Ldfj;IIIILdhb;)V drawImage
	a (Ldfj;IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V drawIcons
	a (Ldfj;Ldhb;IIII)V renderWorldTemplateItem
	a (Ldif$a;)Ldhb; access$1200
dif$b com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList
	a this$0
	a (DDI)Z mouseClicked
	a (I)V selectItem
	a (Ldfj;)V renderBackground
	a (Ldhb;)V addEntry
	a (Ldif$a;)V setSelected
	a (Ldlc$a;)V setSelected
	b ()Z isFocused
	b (I)Ldhb; get
	b (Ldif$a;)Ldhb; lambda$getTemplates$0
	c ()I getMaxPosition
	d ()I getRowWidth
	f ()Z isEmpty
	g ()Ljava/util/List; getTemplates
net/minecraft/server/VoxelShapeMergerDisjoint net/minecraft/world/phys/shapes/NonOverlappingMerger
	a lower
	b upper
	c swap
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Ldcw$a;)Z forMergedIndexes
	a (Ldcw$a;III)Z lambda$forMergedIndexes$0
	b (Ldcw$a;)Z forNonSwappedIndexes
net/minecraft/server/DebugReportProvider net/minecraft/data/DataProvider
	a SHA1
	a ()Ljava/lang/String; getName
	a (Lcom/google/gson/Gson;Lnet/minecraft/server/HashCache;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)V save
	a (Lnet/minecraft/server/HashCache;)V run
net/minecraft/server/WorldGenDecoratorCountMultilayer net/minecraft/world/level/levelgen/placement/nether/CountMultiLayerDecorator
	a (Lnet/minecraft/server/IBlockData;)Z isEmpty
	a (Lnet/minecraft/server/WorldGenDecoratorContext;IIII)I findOnGroundYPosition
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
bot$a net/minecraft/world/item/crafting/ShapelessRecipe$Serializer
	a (Lcom/google/gson/JsonArray;)Lnet/minecraft/server/NonNullList; itemsFromJson
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/ShapelessRecipes;)V toNetwork
	b (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ShapelessRecipes; fromJson
	b (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ShapelessRecipes; fromNetwork
net/minecraft/server/LootEntryAbstract net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer
	c compositeCondition
	d conditions
	a ()Lnet/minecraft/server/LootEntryType; getType
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/LootTableInfo;)Z canRun
net/minecraft/server/CriterionConditionItem net/minecraft/advancements/critereon/ItemPredicate
	a ANY
	b tag
	c item
	d count
	e durability
	f enchantments
	g storedEnchantments
	h potion
	i nbt
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionItem; fromJson
	a (Lnet/minecraft/server/ItemStack;)Z matches
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$1
	b (Lcom/google/gson/JsonElement;)[Lnet/minecraft/server/CriterionConditionItem; fromJsonArray
	b (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
dzp$b net/minecraft/client/renderer/FaceInfo$VertexInfo
	a xFace
	b yFace
	c zFace
net/minecraft/server/LootItemFunctionSetLore net/minecraft/world/level/storage/loot/functions/SetLoreFunction
	a replace
	b lore
	d resolutionContext
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/ItemStack;Z)Lnet/minecraft/server/NBTTagList; getLoreTag
	a (Lnet/minecraft/server/LootItemFunctionSetLore;)Z access$000
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
	b (Lnet/minecraft/server/LootItemFunctionSetLore;)Ljava/util/List; access$100
	c ()Ldap$a; setLore
	c (Lnet/minecraft/server/LootItemFunctionSetLore;)Lnet/minecraft/server/LootTableInfo$EntityTarget; access$200
dzp$a net/minecraft/client/renderer/FaceInfo$Constants
	a MAX_Z
	b MAX_Y
	c MAX_X
	d MIN_Z
	e MIN_Y
	f MIN_X
net/minecraft/server/GameRules$GameRuleDefinition net/minecraft/world/level/GameRules$Type
	a argument
	b constructor
	c callback
	d visitorCaller
	a (Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; createArgument
	a (Lnet/minecraft/server/GameRules$GameRuleDefinition;)Ljava/util/function/BiConsumer; access$300
	a (Lnet/minecraft/server/GameRules$GameRuleVisitor;Lnet/minecraft/server/GameRules$GameRuleKey;)V callVisitor
	getValue ()Lnet/minecraft/server/GameRules$GameRuleValue; createRule
net/minecraft/server/EnchantmentTridentRiptide net/minecraft/world/item/enchantment/TridentRiptideEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/ItemCooldown net/minecraft/world/item/ItemCooldowns
	currentTick tickCount
	a ()V tick
	a (Lnet/minecraft/server/Item;F)F getCooldownPercent
	b (Lnet/minecraft/server/Item;)V removeCooldown
	b (Lnet/minecraft/server/Item;I)V onCooldownStarted
	c (Lnet/minecraft/server/Item;)V onCooldownEnded
	hasCooldown (Lnet/minecraft/server/Item;)Z isOnCooldown
	setCooldown (Lnet/minecraft/server/Item;I)V addCooldown
net/minecraft/server/EntityRaider net/minecraft/world/entity/raid/Raider
	b ALLOWED_ITEMS
	bo wave
	bq ticksOutsideRaid
	c IS_CELEBRATING
	d raid
	K ()Z requiresCustomPersistence
	a (I)V setWave
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityRaider;)Ljava/util/Random; access$100
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/Raid;)V setCurrentRaid
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	b (I)V setTicksOutsideRaid
	b (Lnet/minecraft/server/EntityItem;)V pickUpItem
	b (Lnet/minecraft/server/EntityRaider;)F access$200
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityItem;)Z lambda$static$0
	c (Lnet/minecraft/server/EntityRaider;)F access$300
	d (Lnet/minecraft/server/EntityRaider;)Ljava/util/Random; access$400
	e ()V defineSynchedData
	e (Lnet/minecraft/server/EntityRaider;)Z access$500
	eL ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	eQ ()V updateNoActionTime
	eT ()Z canJoinPatrol
	f (Lnet/minecraft/server/EntityRaider;)Ljava/util/Random; access$600
	fa ()Lnet/minecraft/server/Raid; getCurrentRaid
	fb ()Z hasActiveRaid
	fc ()I getWave
	fd ()Z isCelebrating
	fe ()I getTicksOutsideRaid
	ff ()Ljava/util/function/Predicate; access$000
	g (Lnet/minecraft/server/EntityRaider;)Ljava/util/Random; access$700
	h (D)Z removeWhenFarAway
	isCanJoinRaid ()Z canJoinRaid
	k ()V aiStep
	o ()V registerGoals
	x (Z)V setCelebrating
net/minecraft/server/BehaviorWork net/minecraft/world/entity/ai/behavior/WorkAtPoi
	b lastCheck
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/GlobalPos;)V lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	doWork (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)V useWorkstation
dcm$1 net/minecraft/world/phys/shapes/ArrayVoxelShape$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
net/minecraft/server/GenLayerIsland net/minecraft/world/level/newbiome/layer/AddIslandLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/PairedQueue net/minecraft/util/thread/StrictQueue
	a ()Ljava/lang/Object; pop
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
dif$1 com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$1
	a val$startPage
	b this$0
	a (Lcom/mojang/datafixers/util/Either;)Ldhc; lambda$run$0
jl$1 net/minecraft/data/recipes/SpecialRecipeBuilder$1
	a val$id
	b this$0
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
net/minecraft/server/PathfinderGoalJumpOnBlock net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal
	g cat
	a ()Z canUse
	a (Lnet/minecraft/server/BlockBase$BlockData;)Z lambda$isValidTarget$1
	a (Lnet/minecraft/server/BlockPropertyBedPart;)Ljava/lang/Boolean; lambda$null$0
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	c ()V start
	d ()V stop
	e ()V tick
bkp$4 net/minecraft/world/item/CreativeModeTab$12
	e ()Lnet/minecraft/server/ItemStack; makeIcon
dps$1 net/minecraft/client/gui/screens/inventory/BookViewScreen$1
	a ()I getPageCount
	a (I)Lnet/minecraft/server/IChatFormatted; getPageRaw
bkp$3 net/minecraft/world/item/CreativeModeTab$11
	a (Lnet/minecraft/server/NonNullList;)V fillItemList
	e ()Lnet/minecraft/server/ItemStack; makeIcon
	m ()Z isAlignedRight
bkp$2 net/minecraft/world/item/CreativeModeTab$10
	e ()Lnet/minecraft/server/ItemStack; makeIcon
bkp$1 net/minecraft/world/item/CreativeModeTab$1
	e ()Lnet/minecraft/server/ItemStack; makeIcon
net/minecraft/server/PacketPlayOutSpawnEntityLiving net/minecraft/network/protocol/game/ClientboundAddMobPacket
	a id
	b uuid
	c type
	d x
	e y
	f z
	g xd
	h yd
	i zd
	j yRot
	k xRot
	l yHeadRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/UUID; getUUID
	d ()I getType
	e ()D getX
	f ()D getY
	g ()D getZ
	h ()I getXd
	i ()I getYd
	j ()I getZd
	k ()B getyRot
	l ()B getxRot
	m ()B getyHeadRot
net/minecraft/server/EntitySpider$GroupDataSpider net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData
	a effect
	a (Ljava/util/Random;)V setRandomEffect
bkp$9 net/minecraft/world/item/CreativeModeTab$6
	e ()Lnet/minecraft/server/ItemStack; makeIcon
bkp$8 net/minecraft/world/item/CreativeModeTab$5
	e ()Lnet/minecraft/server/ItemStack; makeIcon
zb$1 net/minecraft/server/commands/data/EntityDataAccessor$1
	a val$arg
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandDataAccessor; access
bkp$7 net/minecraft/world/item/CreativeModeTab$4
	e ()Lnet/minecraft/server/ItemStack; makeIcon
net/minecraft/server/ArgumentTime net/minecraft/commands/arguments/TimeArgument
	a EXAMPLES
	b ERROR_INVALID_UNIT
	c ERROR_INVALID_TICK_COUNT
	d UNITS
	a ()Lnet/minecraft/server/ArgumentTime; time
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
bkp$6 net/minecraft/world/item/CreativeModeTab$3
	e ()Lnet/minecraft/server/ItemStack; makeIcon
zs$a net/minecraft/server/level/ChunkMap$DistanceManager
	a this$0
	a (J)Z isChunkToRemove
	a (JILnet/minecraft/server/PlayerChunk;I)Lnet/minecraft/server/PlayerChunk; updateChunkScheduling
	b (J)Lnet/minecraft/server/PlayerChunk; getChunk
bkp$5 net/minecraft/world/item/CreativeModeTab$2
	e ()Lnet/minecraft/server/ItemStack; makeIcon
dfe$b com/mojang/blaze3d/vertex/BufferBuilder$State
	a data
	b format
	a (Ldfe$b;)Ljava/nio/ByteBuffer; access$100
	b (Ldfe$b;)Ldfo; access$200
cys$b net/minecraft/world/level/storage/loot/LootContext$DynamicDrop
dfe$a com/mojang/blaze3d/vertex/BufferBuilder$DrawState
	a format
	b vertexCount
	c mode
	a ()Ldfo; format
	b ()I vertexCount
	c ()I mode
ob$1 net/minecraft/network/chat/Style$1
	a $SwitchMap$net$minecraft$ChatFormatting
net/minecraft/server/LootTableInfo$EntityTarget net/minecraft/world/level/storage/loot/LootContext$EntityTarget
	e name
	f param
	g $VALUES
	a ()Lnet/minecraft/server/LootContextParameter; getParam
	a (Ljava/lang/String;)Lnet/minecraft/server/LootTableInfo$EntityTarget; getByName
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;)Ljava/lang/String; access$100
net/minecraft/server/BlockBase$BlockData net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase
	a cache
	b lightEmission
	e useShapeForLightOcclusion
	f isAir
	g material
	h materialColor
	j requiresCorrectToolForDrops
	k canOcclude
	l isRedstoneConductor
	m isSuffocating
	n isViewBlocking
	o hasPostProcess
	p emissiveRendering
	strength destroySpeed
	a ()V initCache
	a (Lnet/minecraft/server/Block;)Z is
	a (Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/BlockPosition;)J getSeed
	a (Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/FluidType;)Z canBeReplaced
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V updateNeighbourShapes
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;II)V updateNeighbourShapes
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)Z entityCanStandOn
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;Lnet/minecraft/server/EnumDirection;)Z entityCanStandOnFace
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/VoxelShape; getFaceOcclusionShape
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumBlockSupport;)Z isFaceSturdy
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/Tag;Ljava/util/function/Predicate;)Z is
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V updateIndirectNeighbourShapes
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;II)V updateIndirectNeighbourShapes
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getLightBlock
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
	c (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	c (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getVisualShape
	canPlace (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	d ()Z hasLargeCollisionShape
	d (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MaterialMapColor; getMapColor
	d (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isFaceSturdy
	doPhysics (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	dropNaturally (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
	e ()Z useShapeForLightOcclusion
	e (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z emissiveRendering
	f ()I getLightEmission
	f (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
	getDamage (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getDestroyProgress
	getFluid ()Lnet/minecraft/server/Fluid; getFluidState
	getPushReaction ()Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	getStepSound ()Lnet/minecraft/server/SoundEffectType; getSoundType
	h ()Lnet/minecraft/server/EnumRenderType; getRenderShape
	h (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getDestroySpeed
	i (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isSolidRender
	interact (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	isComplexRedstone ()Z hasAnalogOutputSignal
	isOccluding (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
	isPowerSource ()Z isSignalSource
	isRequiresSpecialTool ()Z requiresCorrectToolForDrops
	isTicking ()Z isRandomlyTicking
	l ()Z canOcclude
	l (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getBlockSupportShape
	m (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
	n (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Vec3D; getOffset
	o (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isSuffocating
	p ()Lnet/minecraft/server/IBlockData; asState
	p (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isViewBlocking
	q (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z hasPostProcess
	r (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isCollisionShapeFullBlock
	remove (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	updateState (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
ii$1 net/minecraft/data/models/BlockModelGenerators$1
	a $SwitchMap$net$minecraft$core$FrontAndTop
	b $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
cys$1 net/minecraft/world/level/storage/loot/LootContext$1
net/minecraft/server/PathfinderGoalTempt net/minecraft/world/entity/ai/goal/TemptGoal
	a mob
	c TEMP_TARGETING
	d speedModifier
	e px
	f py
	g pz
	h pRotX
	i pRotY
	j calmDown
	k isRunning
	l items
	m canScare
	target player
	a ()Z canUse
	a (Lnet/minecraft/server/ItemStack;)Z shouldFollowItem
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z canScare
	h ()Z isRunning
net/minecraft/server/DataConverterZombieType net/minecraft/util/datafix/fixes/EntityZombieSplitFix
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
cze$a net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder
	a entries
	a ()Lcze$a; getThis
	a (Lczn$a;)Lcze$a; otherwise
	b ()Lnet/minecraft/server/LootEntryAbstract; build
	d ()Lczn$a; getThis
net/minecraft/server/RegistryBlockID net/minecraft/core/IdMapper
	a nextId
	b tToId
	c idToT
	a ()I size
	a (Ljava/lang/Object;I)V addMapping
	b (I)Z contains
	b (Ljava/lang/Object;)V add
	fromId (I)Ljava/lang/Object; byId
net/minecraft/server/BehaviorWalkHome net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget
	b speedModifier
	c batchCache
	d triedCount
	e lastUpdate
	a (Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z lambda$start$1
	a (Lnet/minecraft/server/BlockPosition;)Z lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/FluidType net/minecraft/world/level/material/Fluid
	a defaultFluidState
	c FLUID_STATE_REGISTRY
	d stateDefinition
	a ()Lnet/minecraft/server/Item; getBucket
	a (Lcef$a;)V createFluidStateDefinition
	a (Lnet/minecraft/server/Fluid;)F getOwnHeight
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getHeight
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/server/FluidType;)Z isSame
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/Vec3D; getFlow
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Ljava/util/Random;)V animateTick
	b ()Z isEmpty
	b (Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/IBlockData; createLegacyBlock
	b (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Ljava/util/Random;)V randomTick
	c ()F getExplosionResistance
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d (Lnet/minecraft/server/Fluid;)I getAmount
	f (Lnet/minecraft/server/Fluid;)V registerDefaultState
	g ()Lnet/minecraft/server/BlockStateList; getStateDefinition
	h ()Lnet/minecraft/server/Fluid; defaultFluidState
	i ()Lnet/minecraft/server/ParticleParam; getDripParticle
	j ()Z isRandomlyTicking
net/minecraft/server/MinecraftVersion net/minecraft/DetectedVersion
	a BUILT_IN
	b LOGGER
	c id
	d name
	e stable
	f worldVersion
	g protocolVersion
	h packVersion
	i buildTime
	j releaseTarget
	a ()Lcom/mojang/bridge/game/GameVersion; tryDetectVersion
anf$1 net/minecraft/util/datafix/schemas/V704$1
ccb$1 net/minecraft/world/level/block/entity/BeaconBlockEntity$1
	a this$0
	a ()I getCount
	a (I)I get
	a (II)V set
net/minecraft/server/BlockComposter net/minecraft/world/level/block/ComposterBlock
	a LEVEL
	b COMPOSTABLES
	c OUTER_SHAPE
	d SHAPES
	a (FLnet/minecraft/server/IMaterial;)V add
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IWorldInventory; getContainer
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IBlockData; access$100
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; insertItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)V handleFill
	a ([Lnet/minecraft/server/VoxelShape;)V lambda$static$0
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IBlockData; addItem
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c ()V bootStrap
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; access$000
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; empty
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; extractProduce
net/minecraft/server/BlockTripwire net/minecraft/world/level/block/TripWireBlock
	h AABB
	i NOT_ATTACHED_AABB
	j PROPERTY_BY_DIRECTION
	k hook
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z shouldConnectTo
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V checkPressed
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V updateSource
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
net/minecraft/server/PathfinderGoalMeleeAttack net/minecraft/world/entity/ai/goal/MeleeAttackGoal
	a mob
	b speedModifier
	c followingTargetEvenIfNotSeen
	d path
	e pathedTargetX
	f pathedTargetY
	g pathedTargetZ
	h ticksUntilNextPathRecalculation
	i ticksUntilNextAttack
	j attackInterval
	k lastCanUseCheck
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
	a (Lnet/minecraft/server/EntityLiving;D)V checkAndPerformAttack
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()V resetAttackCooldown
	h ()Z isTimeToAttack
	j ()I getTicksUntilNextAttack
	k ()I getAttackInterval
net/minecraft/server/IProgressUpdate net/minecraft/util/ProgressListener
	a ()V stop
	a (I)V progressStagePercentage
	a (Lnet/minecraft/server/IChatBaseComponent;)V progressStartNoAbort
	b (Lnet/minecraft/server/IChatBaseComponent;)V progressStart
	c (Lnet/minecraft/server/IChatBaseComponent;)V progressStage
net/minecraft/server/VillagerTrades net/minecraft/world/entity/npc/VillagerTrades
	a TRADES
	b WANDERING_TRADER_TRADES
	a (Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; toIntMap
	a (Ljava/util/HashMap;)V lambda$static$0
net/minecraft/server/EntityGuardian$EntitySelectorGuardianTargetHumanSquid net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector
	a guardian
	a (Lnet/minecraft/server/EntityLiving;)Z test
zs$2 net/minecraft/server/level/ChunkMap$2
	a val$startX
	c val$finalI
	d val$range
	e val$startZ
	f val$either
	g this$0
net/minecraft/server/AxisAlignedBB net/minecraft/world/phys/AABB
	a ()D getSize
	a (D)Lnet/minecraft/server/AxisAlignedBB; setMinX
	a (DDD)Lnet/minecraft/server/AxisAlignedBB; contract
	a (DDDDDD)Z intersects
	a (Ljava/lang/Iterable;)Lnet/minecraft/server/AxisAlignedBB; minmax
	a (Ljava/lang/Iterable;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MovingObjectPositionBlock; clip
	a (Lnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/AxisAlignedBB; intersect
	a (Lnet/minecraft/server/AxisAlignedBB;D)D clipXCollide
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/Vec3D;[DLnet/minecraft/server/EnumDirection;DDD)Lnet/minecraft/server/EnumDirection; getDirection
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/AxisAlignedBB; move
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)D min
	a (Lnet/minecraft/server/StructureBoundingBox;)Lnet/minecraft/server/AxisAlignedBB; of
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/AxisAlignedBB; unitCubeFromLowerCorner
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;)Z intersects
	a ([DLnet/minecraft/server/EnumDirection;DDDDDDDDLnet/minecraft/server/EnumDirection;DDD)Lnet/minecraft/server/EnumDirection; clipPoint
	b ()D getXsize
	b (D)Lnet/minecraft/server/AxisAlignedBB; setMinY
	b (DDD)Lnet/minecraft/server/AxisAlignedBB; expandTowards
	b (Lnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/AxisAlignedBB; minmax
	b (Lnet/minecraft/server/AxisAlignedBB;D)D clipYCollide
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)D max
	b (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/AxisAlignedBB; expandTowards
	b (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;)Ljava/util/Optional; clip
	c ()D getYsize
	c (D)Lnet/minecraft/server/AxisAlignedBB; setMinZ
	c (Lnet/minecraft/server/AxisAlignedBB;)Z intersects
	c (Lnet/minecraft/server/AxisAlignedBB;D)D clipZCollide
	c (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/AxisAlignedBB; move
	d ()D getZsize
	d (D)Lnet/minecraft/server/AxisAlignedBB; setMaxX
	d (DDD)Lnet/minecraft/server/AxisAlignedBB; move
	d (Lnet/minecraft/server/Vec3D;)Z contains
	e ()Z hasNaN
	e (D)Lnet/minecraft/server/AxisAlignedBB; setMaxY
	e (DDD)Z contains
	f ()Lnet/minecraft/server/Vec3D; getCenter
	f (D)Lnet/minecraft/server/AxisAlignedBB; setMaxZ
	f (DDD)Lnet/minecraft/server/AxisAlignedBB; deflate
	g (D)Lnet/minecraft/server/AxisAlignedBB; inflate
	g (DDD)Lnet/minecraft/server/AxisAlignedBB; ofSize
	grow (DDD)Lnet/minecraft/server/AxisAlignedBB; inflate
	shrink (D)Lnet/minecraft/server/AxisAlignedBB; deflate
zs$1 net/minecraft/server/level/ChunkMap$1
	a val$k
	c this$0
net/minecraft/server/BehaviorLook net/minecraft/world/entity/ai/behavior/LookAtTargetSink
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BehaviorPosition;)V lambda$tick$1
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)Z canStillUse
	b (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BehaviorPosition;)Z lambda$canStillUse$0
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V stop
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V tick
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
cp$a net/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance
	a signalStrength
	b projectile
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;Lbg$b;)Lcp$a; targetHit
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/Vec3D;I)Z matches
net/minecraft/server/PathfinderGoalFleeSun net/minecraft/world/entity/ai/goal/FleeSunGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f level
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	g ()Z setWantedPos
	h ()Lnet/minecraft/server/Vec3D; getHidePos
net/minecraft/server/EntityMushroomCow$Type net/minecraft/world/entity/animal/MushroomCow$MushroomType
	c type
	d blockState
	e $VALUES
	a ()Lnet/minecraft/server/IBlockData; getBlockState
	a (Ljava/lang/String;)Lnet/minecraft/server/EntityMushroomCow$Type; access$200
	a (Lnet/minecraft/server/EntityMushroomCow$Type;)Ljava/lang/String; access$000
	b (Ljava/lang/String;)Lnet/minecraft/server/EntityMushroomCow$Type; byType
	b (Lnet/minecraft/server/EntityMushroomCow$Type;)Lnet/minecraft/server/IBlockData; access$100
net/minecraft/server/EntityDamageSource net/minecraft/world/damagesource/EntityDamageSource
	w entity
	x isThorns
	s ()Z scalesWithDifficulty
	w ()Lnet/minecraft/server/Vec3D; getSourcePosition
	x ()Lnet/minecraft/server/EntityDamageSource; setThorns
	y ()Z isThorns
dps$b net/minecraft/client/gui/screens/inventory/BookViewScreen$WritableBookAccess
	a pages
	a ()I getPageCount
	a (I)Lnet/minecraft/server/IChatFormatted; getPageRaw
	b (Lnet/minecraft/server/ItemStack;)Ljava/util/List; readPages
ii$d net/minecraft/data/models/BlockModelGenerators$WoodProvider
	a this$0
	b logMapping
	a (Lnet/minecraft/server/Block;)Lii$d; wood
	b (Lnet/minecraft/server/Block;)Lii$d; log
	c (Lnet/minecraft/server/Block;)Lii$d; logWithHorizontal
dps$a net/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess
	a ()I getPageCount
	a (I)Lnet/minecraft/server/IChatFormatted; getPageRaw
	a (Lnet/minecraft/server/ItemStack;)Ldps$a; fromItem
	b (I)Lnet/minecraft/server/IChatFormatted; getPage
dps$c net/minecraft/client/gui/screens/inventory/BookViewScreen$WrittenBookAccess
	a pages
	a ()I getPageCount
	a (I)Lnet/minecraft/server/IChatFormatted; getPageRaw
	b (Lnet/minecraft/server/ItemStack;)Ljava/util/List; readPages
net/minecraft/server/CommandBossBar net/minecraft/server/commands/BossBarCommands
	a SUGGEST_BOSS_BAR
	b ERROR_ALREADY_EXISTS
	c ERROR_DOESNT_EXIST
	d ERROR_NO_PLAYER_CHANGE
	e ERROR_NO_NAME_CHANGE
	f ERROR_NO_COLOR_CHANGE
	g ERROR_NO_STYLE_CHANGE
	h ERROR_NO_VALUE_CHANGE
	i ERROR_NO_MAX_CHANGE
	j ERROR_ALREADY_HIDDEN
	k ERROR_ALREADY_VISIBLE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/BossBattleCustom; getBossBar
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$2
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listBars
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;)I getValue
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;I)I setValue
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;Ljava/util/Collection;)I setPlayers
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;Lnet/minecraft/server/BossBattle$BarColor;)I setColor
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;Lnet/minecraft/server/BossBattle$BarStyle;)I setStyle
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;Lnet/minecraft/server/IChatBaseComponent;)I setName
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;Z)I setVisible
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IChatBaseComponent;)I createBar
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$28
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	b (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$3
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;)I getMax
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;I)I setMax
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$27
	c (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;)I getVisible
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$26
	d (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;)I getPlayers
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$25
	e (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;)I removeBar
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$24
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$23
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$22
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$21
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	r (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	s (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	t (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	u (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	v (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	w (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	x (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	y (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	z (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
eaz$1 net/minecraft/client/renderer/block/model/FaceBakery$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
net/minecraft/server/WorldGenBlockPlacer net/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacer
	a CODEC
	a ()Lnet/minecraft/server/WorldGenBlockPlacers; type
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)V place
net/minecraft/server/DefinedStructureProcessorLavaSubmergedBlock net/minecraft/world/level/levelgen/structure/templatesystem/LavaSubmergedBlockProcessor
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
	b ()Lnet/minecraft/server/DefinedStructureProcessorLavaSubmergedBlock; lambda$static$0
net/minecraft/server/EnchantmentKnockback net/minecraft/world/item/enchantment/KnockbackEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/WorldGenMonumentPieces net/minecraft/world/level/levelgen/structure/OceanMonumentPieces
net/minecraft/server/EnumPistonReaction net/minecraft/world/level/material/PushReaction
	f $VALUES
bdt$1 net/minecraft/world/entity/monster/Shulker$1
net/minecraft/server/VoxelShapeArray net/minecraft/world/phys/shapes/ArrayVoxelShape
	b xs
	c ys
	d zs
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
ii$a net/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator
	a this$0
	b baseModel
	a (Lix;[Lnet/minecraft/server/Block;)Lii$a; createWithCustomBlockItemModel
	a ([Lnet/minecraft/server/Block;)Lii$a; create
	b ([Lnet/minecraft/server/Block;)Lii$a; createWithoutBlockItem
net/minecraft/server/BlockPiston net/minecraft/world/level/block/piston/PistonBaseBlock
	c EAST_AABB
	d WEST_AABB
	e SOUTH_AABB
	f NORTH_AABB
	g UP_AABB
	h DOWN_AABB
	sticky isSticky
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;ZLnet/minecraft/server/EnumDirection;)Z isPushable
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z getNeighborSignal
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Z)Z moveBlocks
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V checkIfExtend
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c_ (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
ii$c net/minecraft/data/models/BlockModelGenerators$TintState
	a TINTED
	b NOT_TINTED
	c $VALUES
	a ()Lix; getCross
	b ()Lix; getCrossPot
net/minecraft/server/ArgumentTile net/minecraft/commands/arguments/blocks/BlockStateArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/ArgumentTile; block
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ArgumentTileLocation; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ArgumentTileLocation; getBlock
ii$b net/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider
	a this$0
	b mapping
	c fullBlock
	a (Ljava/util/function/Function;)Lii$b; fullBlock
	a (Lnet/minecraft/server/Block;)Lii$b; button
	a (Lnet/minecraft/server/Block;Lix;)Lii$b; fullBlock
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)Lii$b; sign
	b (Lnet/minecraft/server/Block;)Lii$b; wall
	c (Lnet/minecraft/server/Block;)Lii$b; fence
	d (Lnet/minecraft/server/Block;)Lii$b; fenceGate
	e (Lnet/minecraft/server/Block;)Lii$b; pressurePlate
	f (Lnet/minecraft/server/Block;)Lii$b; slab
	g (Lnet/minecraft/server/Block;)Lii$b; stairs
net/minecraft/server/BlockWorkbench net/minecraft/world/level/block/CraftingTableBlock
	a CONTAINER_TITLE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$getMenuProvider$0
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
djz$1 net/minecraft/client/Option$1
	a $SwitchMap$net$minecraft$client$GraphicsStatus
net/minecraft/server/LootSerializerType net/minecraft/world/level/storage/loot/SerializerType
	a serializer
	a ()Lnet/minecraft/server/LootSerializer; getSerializer
net/minecraft/server/JsonListEntry net/minecraft/server/players/StoredUserEntry
	a user
	a (Lcom/google/gson/JsonObject;)V serialize
	getKey ()Ljava/lang/Object; getUser
bat$b net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData
	b base
	c pattern
	d baseColor
	e patternColor
	a (Lbat$b;)I access$000
	b (Lbat$b;)I access$100
	c (Lbat$b;)I access$200
	d (Lbat$b;)I access$300
net/minecraft/server/PointGroupO com/mojang/math/OctahedralGroup
	W transformation
	X name
	Y rotatedDirections
	Z invertX
	aa invertY
	ab invertZ
	ac permutation
	ad cayleyTable
	ae inverseTable
	af $VALUES
	a ()Ljava/lang/String; getSerializedName
	a (I)[Lnet/minecraft/server/PointGroupO; lambda$static$5
	a (Lnet/minecraft/server/BlockPropertyJigsawOrientation;)Lnet/minecraft/server/BlockPropertyJigsawOrientation; rotate
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Z inverts
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; rotate
	a (Lnet/minecraft/server/PointGroupO;)Lnet/minecraft/server/PointGroupO; compose
	a (Lnet/minecraft/server/PointGroupO;Lnet/minecraft/server/PointGroupO;)Z lambda$null$3
	a ([[Lnet/minecraft/server/PointGroupO;)V lambda$static$2
	b ()Lit/unimi/dsi/fastutil/booleans/BooleanList; packInversions
	b (Lnet/minecraft/server/PointGroupO;)Lnet/minecraft/server/PointGroupO; lambda$static$4
	c (Lnet/minecraft/server/PointGroupO;)Lnet/minecraft/server/PointGroupO; lambda$null$1
	d (Lnet/minecraft/server/PointGroupO;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
net/minecraft/server/DragonControllerHover net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase
	b targetLocation
	a ()Z isSitting
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
dfw$a com/mojang/realmsclient/client/FileUpload$CustomInputStreamEntity
	a length
	b content
	c uploadStatus
bac$1 net/minecraft/world/entity/animal/Dolphin$1
net/minecraft/server/GenLayerMushroomIsland net/minecraft/world/level/newbiome/layer/AddMushroomIslandLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/BlockFluids net/minecraft/world/level/block/LiquidBlock
	b fluid
	c STABLE_SHAPE
	d stateCache
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z shouldSpreadLiquid
	a_ (Lnet/minecraft/server/IBlockData;)Z isRandomlyTicking
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/FluidType; takeLiquid
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/PointGroupS com/mojang/math/SymmetricGroup3
	g permutation
	h transformation
	i cayleyTable
	j $VALUES
	a ()Lnet/minecraft/server/Matrix3f; transformation
	a (I)I permutation
	a (Lnet/minecraft/server/PointGroupS;)Lnet/minecraft/server/PointGroupS; compose
	a ([ILnet/minecraft/server/PointGroupS;)Z lambda$null$0
	a ([[Lnet/minecraft/server/PointGroupS;)V lambda$static$1
hf$a net/minecraft/core/particles/ParticleOptions$Deserializer
	b (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParam; fromCommand
	b (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParam; fromNetwork
net/minecraft/server/WorldGenFeatureEndSpikeConfiguration net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration
	a CODEC
	b crystalInvulnerable
	c spikes
	d crystalBeamTarget
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lnet/minecraft/server/WorldGenFeatureEndSpikeConfiguration;)Ljava/util/Optional; lambda$null$2
	b ()Z isCrystalInvulnerable
	b (Lnet/minecraft/server/WorldGenFeatureEndSpikeConfiguration;)Ljava/util/List; lambda$null$1
	c ()Ljava/util/List; getSpikes
	c (Lnet/minecraft/server/WorldGenFeatureEndSpikeConfiguration;)Ljava/lang/Boolean; lambda$null$0
	d ()Lnet/minecraft/server/BlockPosition; getCrystalBeamTarget
net/minecraft/server/CommandSchedule net/minecraft/server/commands/ScheduleCommand
	a ERROR_SAME_TICK
	b ERROR_CANT_REMOVE
	c SUGGEST_SCHEDULE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;Lcom/mojang/datafixers/util/Pair;IZ)I schedule
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I remove
	a (Lnet/minecraft/server/MinecraftKey;ZLnet/minecraft/server/CustomFunctionCallbackTimerQueue;JLnet/minecraft/server/CommandListenerWrapper;ILnet/minecraft/server/CustomFunction;)V lambda$schedule$7
	a (Lnet/minecraft/server/MinecraftKey;ZLnet/minecraft/server/CustomFunctionCallbackTimerQueue;JLnet/minecraft/server/CommandListenerWrapper;ILnet/minecraft/server/Tag;)V lambda$schedule$8
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
net/minecraft/server/ChunkConverterPalette$Direction$Axis net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis
	d $VALUES
net/minecraft/server/WorldGenFoilagePlacerSpruce net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer
	a CODEC
	b trunkHeight
	a ()Lnet/minecraft/server/WorldGenFoilagePlacers; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	a (Ljava/util/Random;ILnet/minecraft/server/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;ILcni$b;IILjava/util/Set;ILnet/minecraft/server/StructureBoundingBox;)V createFoliage
	a (Lnet/minecraft/server/WorldGenFoilagePlacerSpruce;)Lnet/minecraft/server/IntSpread; lambda$null$0
net/minecraft/server/EntityHuman$EnumBedResult net/minecraft/world/entity/player/Player$BedSleepingProblem
	g message
	h $VALUES
	a ()Lnet/minecraft/server/IChatBaseComponent; getMessage
mm$1 net/minecraft/nbt/NbtAccounter$1
	a (J)V accountBits
edb$a net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer$DebugGoal
	a pos
	b priority
	c name
	d isRunning
doy$c$a net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList$MobRow
	a this$1
	b type
	c mobName
	d kills
	e hasKills
	f killedBy
	g wasKilledBy
	a (Ldfj;IIIIIIIZF)V render
dqw$1 net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen$1
	a this$0
	a (CI)Z charTyped
net/minecraft/server/WorldGenBlockPlacerSimple net/minecraft/world/level/levelgen/feature/blockplacers/SimpleBlockPlacer
	b CODEC
	c INSTANCE
	a ()Lnet/minecraft/server/WorldGenBlockPlacers; type
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)V place
	b ()Lnet/minecraft/server/WorldGenBlockPlacerSimple; lambda$static$0
net/minecraft/server/BlockGlassAbstract net/minecraft/world/level/block/AbstractGlassBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getVisualShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
dqw$2 net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen$2
	a $SwitchMap$net$minecraft$world$level$block$Mirror
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
czw$a net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder
	a block
	b properties
	a ()Lczw$a; getThis
	a (Lnet/minecraft/server/IBlockState;)Lczw$a; copy
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Ldaf$a; getThis
dxb$a net/minecraft/client/particle/BubbleColumnUpParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
czw$b net/minecraft/world/level/storage/loot/functions/CopyBlockState$Serializer
	a (Lcom/google/gson/JsonArray;Lnet/minecraft/server/IBlockState;)V lambda$serialize$0
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionCopyState; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionCopyState;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Ljava/util/Set;Lnet/minecraft/server/BlockStateList;Lcom/google/gson/JsonElement;)V lambda$deserialize$2
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/IllegalArgumentException; lambda$deserialize$1
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/DataConverterVBO net/minecraft/util/datafix/fixes/OptionsForceVBOFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
net/minecraft/server/ScoreboardTeamBase$EnumTeamPush net/minecraft/world/scores/Team$CollisionRule
	e name
	f id
	g BY_NAME
	h $VALUES
	a ()[Ljava/lang/String; getAllNames
	a (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeamBase$EnumTeamPush; byName
	a (Lnet/minecraft/server/ScoreboardTeamBase$EnumTeamPush;)Lnet/minecraft/server/ScoreboardTeamBase$EnumTeamPush; lambda$static$1
	b ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	b (Lnet/minecraft/server/ScoreboardTeamBase$EnumTeamPush;)Ljava/lang/String; lambda$static$0
net/minecraft/server/BlockPosition net/minecraft/core/BlockPos
	a CODEC
	e LOGGER
	f PACKED_X_LENGTH
	g PACKED_Z_LENGTH
	h PACKED_Y_LENGTH
	i PACKED_X_MASK
	j PACKED_Y_MASK
	k PACKED_Z_MASK
	l Z_OFFSET
	m X_OFFSET
	a (DDD)Lnet/minecraft/server/BlockPosition; offset
	a (I)Lnet/minecraft/server/BlockPosition; multiply
	a (III)J asLong
	a (IIIIII)Ljava/util/stream/Stream; betweenClosedStream
	a (IIIIIII)Ljava/util/Iterator; lambda$withinManhattan$4
	a (IILjava/util/Random;IIIII)Ljava/util/Iterator; lambda$randomBetweenClosed$3
	a (J)Z isOutsideBuildHeight
	a (JIII)J offset
	a (JLnet/minecraft/server/EnumDirection;)J offset
	a (Ljava/util/Random;IIIIIII)Ljava/lang/Iterable; randomBetweenClosed
	a (Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult; lambda$static$1
	a (Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/stream/Stream; betweenClosedStream
	a (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition; offset
	a (Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/IntStream; lambda$static$2
	a (Lnet/minecraft/server/BlockPosition;III)Ljava/lang/Iterable; withinManhattan
	a (Lnet/minecraft/server/BlockPosition;IILjava/util/function/Predicate;)Ljava/util/Optional; findClosestMatch
	a (Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)Ljava/lang/Iterable; spiralAround
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Ljava/lang/Iterable; betweenClosed
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; rotate
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/BlockPosition; relative
	a (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BlockPosition; relative
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;I)Ljava/util/Iterator; lambda$spiralAround$6
	a (Lnet/minecraft/server/StructureBoundingBox;)Ljava/util/stream/Stream; betweenClosedStream
	a ([I)Lnet/minecraft/server/BlockPosition; lambda$null$0
	b ()Lnet/minecraft/server/BlockPosition; above
	b (DDD)Lnet/minecraft/server/BaseBlockPosition; offset
	b (I)Lnet/minecraft/server/BlockPosition; above
	b (III)Lnet/minecraft/server/BlockPosition; offset
	b (IIIIII)Ljava/lang/Iterable; betweenClosed
	b (J)I getX
	b (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition; subtract
	b (Lnet/minecraft/server/BlockPosition;III)Ljava/util/stream/Stream; withinManhattanStream
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; betweenClosedStream
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/BaseBlockPosition; relative
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BaseBlockPosition; relative
	b (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BaseBlockPosition; relative
	c ()Lnet/minecraft/server/BlockPosition; below
	c (I)Lnet/minecraft/server/BlockPosition; below
	c (III)Lnet/minecraft/server/BaseBlockPosition; offset
	c (IIIIII)Ljava/util/Iterator; lambda$betweenClosed$5
	c (J)I getY
	c (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition; cross
	d (J)I getZ
	d (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; cross
	e (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; subtract
	f (J)J getFlatIndex
	f (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; offset
	fromLong (J)Lnet/minecraft/server/BlockPosition; of
	h (I)Lnet/minecraft/server/BaseBlockPosition; east
	i ()Lnet/minecraft/server/BlockPosition$MutableBlockPosition; mutable
	i (I)Lnet/minecraft/server/BaseBlockPosition; west
	immutableCopy ()Lnet/minecraft/server/BlockPosition; immutable
	j ()Lnet/minecraft/server/BaseBlockPosition; east
	j (I)Lnet/minecraft/server/BaseBlockPosition; south
	k ()Lnet/minecraft/server/BaseBlockPosition; west
	k (I)Lnet/minecraft/server/BaseBlockPosition; north
	l ()Lnet/minecraft/server/BaseBlockPosition; south
	l (I)Lnet/minecraft/server/BaseBlockPosition; below
	m ()Lnet/minecraft/server/BaseBlockPosition; north
	m (I)Lnet/minecraft/server/BaseBlockPosition; above
	n ()Lnet/minecraft/server/BaseBlockPosition; below
	n (I)Lnet/minecraft/server/BaseBlockPosition; multiply
	o ()Lnet/minecraft/server/BaseBlockPosition; above
	shift (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPosition; relative
dap$a net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder
	a replace
	b resolutionContext
	c lore
	a ()Ldap$a; getThis
	a (Lnet/minecraft/server/IChatBaseComponent;)Ldap$a; addLine
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;)Ldap$a; setResolutionContext
	a (Z)Ldap$a; setReplace
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Ldaf$a; getThis
dap$b net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetLore; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetLore;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/ISaddleable net/minecraft/world/entity/Saddleable
	canSaddle ()Z isSaddleable
	hasSaddle ()Z isSaddled
	saddle (Lnet/minecraft/server/SoundCategory;)V equipSaddle
net/minecraft/server/IntRange net/minecraft/util/IntRange
	a minInclusive
	b maxInclusive
	a ()I getMinInclusive
	a (II)Lnet/minecraft/server/IntRange; of
	a (Ljava/util/Random;)I randomValue
	b ()I getMaxInclusive
net/minecraft/server/GeneratorSettingBase net/minecraft/world/level/levelgen/NoiseGeneratorSettings
	a DIRECT_CODEC
	b CODEC
	c OVERWORLD
	d AMPLIFIED
	e NETHER
	f END
	g CAVES
	h FLOATING_ISLANDS
	i structureSettings
	j noiseSettings
	k defaultBlock
	l defaultFluid
	m bedrockRoofPosition
	n bedrockFloorPosition
	o seaLevel
	p disableMobGeneration
	q BUILTIN_OVERWORLD
	a ()Lnet/minecraft/server/StructureSettings; structureSettings
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	a (Lnet/minecraft/server/ResourceKey;)Z stable
	a (Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/GeneratorSettingBase;)Lnet/minecraft/server/GeneratorSettingBase; register
	a (Lnet/minecraft/server/StructureSettings;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/GeneratorSettingBase; nether
	a (Lnet/minecraft/server/StructureSettings;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MinecraftKey;ZZ)Lnet/minecraft/server/GeneratorSettingBase; end
	a (Lnet/minecraft/server/StructureSettings;ZLnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/GeneratorSettingBase; overworld
	b ()Lnet/minecraft/server/NoiseSettings; noiseSettings
	c ()Lnet/minecraft/server/IBlockData; getDefaultBlock
	d ()Lnet/minecraft/server/IBlockData; getDefaultFluid
	e ()I getBedrockRoofPosition
	f ()I getBedrockFloorPosition
	g ()I seaLevel
	h ()Z disableMobGeneration
	i ()Lnet/minecraft/server/GeneratorSettingBase; bootstrap
net/minecraft/server/IOWorker$Priority net/minecraft/world/level/chunk/storage/IOWorker$Priority
	c $VALUES
bac$b net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal
	a dolphin
	b stuck
	C_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/ResourceManager net/minecraft/server/packs/resources/SimpleReloadableResourceManager
	a LOGGER
	b namespacedPacks
	c listeners
	d recentlyRegistered
	e namespaces
	f packs
	g type
	a ()Ljava/util/Set; getNamespaces
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; listResources
	a (Ljava/util/List;)Ljava/lang/Object; lambda$createFullReload$0
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/IReloadable; createQueuedReload
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/IReloadable; createFullReload
	a (Lnet/minecraft/server/IReloadListener;)V registerReloadListener
	a (Lnet/minecraft/server/IResourcePack;)V add
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/IResource; getResource
	b ()Ljava/util/stream/Stream; listPacks
	b (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/IReloadable; createReload
	b (Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c ()V clear
	c (Lnet/minecraft/server/MinecraftKey;)Ljava/util/List; getResources
bac$c net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal
	a dolphin
	b speedModifier
	c player
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bac$a net/minecraft/world/entity/animal/Dolphin$DolphinMoveControl
	i dolphin
	a ()V tick
bac$d net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal
	a this$0
	b cooldown
	a ()Z canUse
	a (Lnet/minecraft/server/ItemStack;)V drop
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/DragonControllerPhase net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase
	HOVER HOVERING
	l phases
	m instanceClass
	n id
	o name
	a ()Ljava/lang/reflect/Constructor; getConstructor
	a (Ljava/lang/Class;Ljava/lang/String;)Lnet/minecraft/server/DragonControllerPhase; create
	a (Lnet/minecraft/server/EntityEnderDragon;)Lnet/minecraft/server/IDragonController; createInstance
	b ()I getId
	c ()I getCount
net/minecraft/server/BlockCampfire net/minecraft/world/level/block/CampfireBlock
	a SHAPE
	b LIT
	c SIGNAL_FIRE
	d WATERLOGGED
	e FACING
	f VIRTUAL_FENCE_POST
	g spawnParticles
	h fireDamage
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/BlockBase$BlockData;)Z lambda$canLight$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z isSmokeyPos
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ZZ)V makeParticles
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/IProjectile;)V onProjectileHit
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V dowse
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	g (Lnet/minecraft/server/IBlockData;)Z isLitCampfire
	h (Lnet/minecraft/server/IBlockData;)Z canLight
	l (Lnet/minecraft/server/IBlockData;)Z isSmokeSource
net/minecraft/server/Paintings net/minecraft/world/entity/decoration/Motive
	A width
	B height
	a KEBAB
	b AZTEC
	c ALBAN
	d AZTEC2
	e BOMB
	f PLANT
	g WASTELAND
	h POOL
	i COURBET
	j SEA
	k SUNSET
	l CREEBET
	m WANDERER
	n GRAHAM
	o MATCH
	p BUST
	q STAGE
	r VOID
	s SKULL_AND_ROSES
	t WITHER
	u FIGHTERS
	v POINTER
	w PIGSCENE
	x BURNING_SKULL
	y SKELETON
	z DONKEY_KONG
	a (Ljava/lang/String;II)Lnet/minecraft/server/Paintings; register
net/minecraft/server/ParticleParamItem net/minecraft/core/particles/ItemParticleOption
	a DESERIALIZER
	b type
	c itemStack
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToNetwork
	a (Lnet/minecraft/server/Particle;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/server/Particle;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ParticleParamItem; lambda$codec$0
	a (Lnet/minecraft/server/ParticleParamItem;)Lnet/minecraft/server/ItemStack; lambda$codec$1
	b ()Lnet/minecraft/server/Particle; getType
	c ()Lnet/minecraft/server/ItemStack; getItem
net/minecraft/server/BehaviorLeaveJob net/minecraft/world/entity/ai/behavior/YieldJobSite
	b speedModifier
	a (Ljava/util/Optional;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityVillager;)Z lambda$start$0
	a (Lnet/minecraft/server/EntityVillager;)V eraseMemories
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;)Z canReachPos
	a (Lnet/minecraft/server/VillagePlaceType;Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/BlockPosition;)Z nearbyWantsJobsite
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityVillager;)V lambda$start$1
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/BlockPosition;Z)V yieldJobSite
gc$1 net/minecraft/core/Direction$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$core$Direction$Axis
net/minecraft/server/CriterionConditionEntity net/minecraft/advancements/critereon/EntityPredicate
	a ANY
	b entityType
	c distanceToPlayer
	d location
	e effects
	f nbt
	g flags
	h equipment
	i player
	j fishingHook
	k vehicle
	l targetedEntity
	m team
	n catType
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionEntity; fromJson
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;)Z matches
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;)Z matches
	b (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/LootTableInfo; createContext
net/minecraft/server/CustomFunctionCallback net/minecraft/world/level/timers/FunctionCallback
	a functionId
	a (Ljava/lang/Object;Lnet/minecraft/server/CustomFunctionCallbackTimerQueue;J)V handle
	a (Lnet/minecraft/server/CustomFunctionCallback;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lnet/minecraft/server/CustomFunctionData;Lnet/minecraft/server/CustomFunction;)V lambda$handle$0
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/CustomFunctionCallbackTimerQueue;J)V handle
dkm$1 net/minecraft/client/color/block/BlockTintCache$1
net/minecraft/server/BehaviorVillageHeroGift net/minecraft/world/entity/ai/behavior/GiveGiftToHero
	b gifts
	c timeUntilNextGift
	d giftGivenDuringThisRun
	e timeSinceStart
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Lnet/minecraft/server/EntityHuman;)Z isHero
	a (Lnet/minecraft/server/EntityVillager;)Ljava/util/List; getItemToThrow
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityHuman;)Z isWithinThrowingDistance
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityLiving;)V throwGift
	a (Lnet/minecraft/server/WorldServer;)I calculateTimeUntilNextGift
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	b (Lnet/minecraft/server/EntityVillager;)Z isHeroVisible
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	c (Lnet/minecraft/server/EntityVillager;)Ljava/util/Optional; getNearestTargetableHero
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
bm$a net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance
	a ()Lnet/minecraft/server/MinecraftKey; getCriterion
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
net/minecraft/server/NBTReadLimiter net/minecraft/nbt/NbtAccounter
	a UNLIMITED
	b quota
	c usage
	a (J)V accountBits
net/minecraft/server/ItemHorseArmorDyeable net/minecraft/world/item/DyeableHorseArmorItem
net/minecraft/server/EnchantmentMending net/minecraft/world/item/enchantment/MendingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
ang$1 net/minecraft/util/datafix/schemas/V705$1
net/minecraft/server/PacketPlayInAbilities net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket
	a isFlying
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/SoundCategory net/minecraft/sounds/SoundSource
	k BY_NAME
	l name
	m $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/SoundCategory; byName
	b ()Ljava/util/Set; getNames
net/minecraft/server/BlockStainedGlass net/minecraft/world/level/block/StainedGlassBlock
	a ()Lnet/minecraft/server/EnumColor; getColor
bvq$1 net/minecraft/world/level/block/CrossCollisionBlock$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
net/minecraft/server/PacketPlayOutBlockChange net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket
	a pos
	block blockState
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/IBlockData; getBlockState
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/BlockPosition; getPos
net/minecraft/server/FormattedStringEmpty net/minecraft/util/FormattedCharSink
net/minecraft/server/BlockJukeBox net/minecraft/world/level/block/JukeboxBlock
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/ItemStack;)V setRecord
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	dropRecord (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V dropRecording
net/minecraft/server/CommandClone$CommandCloneStoredTileEntity net/minecraft/server/commands/CloneCommands$CloneBlockInfo
	a pos
	b state
	c tag
net/minecraft/server/Area net/minecraft/world/level/newbiome/area/Area
	a (II)I get
net/minecraft/server/PacketPlayOutEntityTeleport net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket
	a id
	b x
	c y
	d z
	e yRot
	f xRot
	g onGround
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()B getyRot
	g ()B getxRot
	h ()Z isOnGround
bni$a net/minecraft/world/item/TooltipFlag$Default
	a NORMAL
	b ADVANCED
	c advanced
	d $VALUES
	a ()Z isAdvanced
net/minecraft/server/IRangedEntity net/minecraft/world/entity/monster/RangedAttackMob
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
lj$a net/minecraft/gametest/framework/GameTestSequence$Condition
	a this$0
	b triggerTime
	a ()V assertTriggeredThisTick
	a (J)V trigger
net/minecraft/server/WorldGenFeatureIgloo net/minecraft/world/level/levelgen/feature/IglooFeature
	a ()Lckx$a; getStartFactory
net/minecraft/server/ProjectileHelper net/minecraft/world/entity/projectile/ProjectileUtil
	a (Lnet/minecraft/server/Entity;F)V rotateTowardsMovement
	a (Lnet/minecraft/server/Entity;Ljava/util/function/Predicate;)Lnet/minecraft/server/MovingObjectPosition; getHitResult
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;D)Lnet/minecraft/server/MovingObjectPositionEntity; getEntityHitResult
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Item;)Lnet/minecraft/server/EnumHand; getWeaponHoldingHand
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityArrow; getMobArrow
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Lnet/minecraft/server/MovingObjectPositionEntity; getEntityHitResult
net/minecraft/server/PosRuleTest net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest
	c CODEC
	a ()Lnet/minecraft/server/PosRuleTestType; getType
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z test
ckb$a net/minecraft/world/level/levelgen/feature/NetherFortressFeature$NetherBridgeStart
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)V generatePieces
net/minecraft/server/EnderDragonBattle net/minecraft/world/level/dimension/end/EndDragonFight
	a LOGGER
	b VALID_PLAYER
	bossBattle dragonEvent
	exitPortalLocation portalLocation
	f exitPortalPattern
	g ticksSinceDragonSeen
	h crystalsAlive
	i ticksSinceCrystalsScanned
	j ticksSinceLastPlayerScan
	n needsStateScanning
	q respawnTime
	r respawnCrystals
	respawnPhase respawnStage
	world level
	a ()Lnet/minecraft/server/NBTTagCompound; saveData
	a (Ljava/util/List;)V respawnDragon
	a (Lnet/minecraft/server/BlockPosition;)V spawnNewGateway
	a (Lnet/minecraft/server/EntityEnderCrystal;Lnet/minecraft/server/DamageSource;)V onCrystalDestroyed
	a (Lnet/minecraft/server/EntityEnderDragon;)V setDragonKilled
	b ()V tick
	b (Lnet/minecraft/server/EntityEnderDragon;)V updateDragon
	c ()I getCrystalsAlive
	g ()V scanState
	generateExitPortal (Z)V spawnExitPortal
	getExitPortalShape ()Lnet/minecraft/server/ShapeDetector$ShapeDetectorCollection; findExitPortal
	h ()V findOrCreateDragon
	i ()Z hasActiveExitPortal
	initiateRespawn ()V tryRespawn
	isPreviouslyKilled ()Z hasPreviouslyKilledDragon
	k ()Z isArenaLoaded
	l ()V updatePlayers
	m ()V updateCrystalCount
	n ()V spawnNewGateway
	o ()Lnet/minecraft/server/EntityEnderDragon; createNewDragon
	resetCrystals ()V resetSpikeCrystals
	setRespawnPhase (Lnet/minecraft/server/EnumDragonRespawn;)V setRespawnStage
net/minecraft/server/CommandIdleTimeout net/minecraft/server/commands/SetPlayerIdleTimeoutCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I setIdleTimeout
net/minecraft/server/CommandSetBlock$Mode net/minecraft/server/commands/SetBlockCommand$Mode
	c $VALUES
dye$a net/minecraft/client/particle/PortalParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dhl$b com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoListEntry
	a this$0
	b key
	c value
	a (Ldfj;IIIIIIIZF)V render
bci$a net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal
	a this$0
	a ()Z canUse
dhl$a com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoList
	a this$0
	a (Ljava/lang/String;Ljava/lang/String;)V lambda$new$0
net/minecraft/server/PacketPlayInTrSel net/minecraft/network/protocol/game/ServerboundSelectTradePacket
	a item
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getItem
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/RemoteControlCommandListener net/minecraft/server/rcon/RconConsoleSource
	b RCON_COMPONENT
	R_ ()Z shouldInformAdmins
	a ()Z acceptsSuccess
	a (Lnet/minecraft/server/IChatBaseComponent;Ljava/util/UUID;)V sendMessage
	b ()Z acceptsFailure
	clearMessages ()V prepareForCommand
	getMessages ()Ljava/lang/String; getCommandResponse
	getWrapper ()Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
dbs$a net/minecraft/world/level/storage/loot/predicates/MatchTool$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionMatchTool;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionMatchTool; deserialize
net/minecraft/server/WorldGenFeatureOceanRuinConfiguration net/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration
	a CODEC
	b biomeTemp
	c largeProbability
	d clusterProbability
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lnet/minecraft/server/WorldGenFeatureOceanRuinConfiguration;)Ljava/lang/Float; lambda$null$2
	b (Lnet/minecraft/server/WorldGenFeatureOceanRuinConfiguration;)Ljava/lang/Float; lambda$null$1
	c (Lnet/minecraft/server/WorldGenFeatureOceanRuinConfiguration;)Lnet/minecraft/server/WorldGenFeatureOceanRuin$Temperature; lambda$null$0
net/minecraft/server/ItemBook net/minecraft/world/item/BookItem
	c ()I getEnchantmentValue
	f_ (Lnet/minecraft/server/ItemStack;)Z isEnchantable
dbb$1 net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$1
net/minecraft/server/EnumBlockSupport net/minecraft/world/level/block/SupportType
	d $VALUES
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isSupporting
dms$1 net/minecraft/client/gui/font/FontManager$1
	a this$0
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/lang/String;)Z lambda$prepare$0
	a (Ljava/util/List;I)V lambda$prepare$2
	a (Ljava/util/Map;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/util/Map; prepare
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/util/List; lambda$prepare$1
	a (Lnet/minecraft/server/MinecraftKey;Ljava/util/List;)V lambda$apply$3
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
	c ()Ljava/lang/String; getName
net/minecraft/server/ContainerChest net/minecraft/world/inventory/ChestMenu
	d containerRows
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; oneRow
	a (ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ContainerChest; threeRows
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; twoRows
	b (ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ContainerChest; sixRows
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	c (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; threeRows
	d (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; fourRows
	e ()Lnet/minecraft/server/IInventory; getContainer
	e (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; fiveRows
	f ()I getRowCount
	f (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; sixRows
net/minecraft/server/WorldGenFeatureBlockPile net/minecraft/world/level/levelgen/feature/BlockPileFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z mayPlaceOn
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureBlockPileConfiguration;)V tryPlaceBlock
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureBlockPileConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/BlockMycel net/minecraft/world/level/block/MyceliumBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
net/minecraft/server/BehaviorBonemeal net/minecraft/world/entity/ai/behavior/UseBonemeal
	b nextWorkCycleTime
	c lastBonemealingSession
	d timeWorkedSoFar
	e cropPos
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;)Z validPos
	a (Lnet/minecraft/server/EntityVillager;)V setCurrentCropAsTarget
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/BlockPosition;)V lambda$setCurrentCropAsTarget$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Ljava/util/Optional; pickNextTarget
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
net/minecraft/server/BlockPosition2D net/minecraft/server/level/ColumnPos
	a x
	b z
	a ()Lnet/minecraft/server/ChunkCoordIntPair; toChunkPos
	a (II)J asLong
	b ()J toLong
net/minecraft/server/CriterionConditionLight net/minecraft/advancements/critereon/LightPredicate
	a ANY
	b composite
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionLight; fromJson
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z matches
net/minecraft/server/BiomeStorage net/minecraft/world/level/chunk/ChunkBiomeContainer
	a BIOMES_SIZE
	b HORIZONTAL_MASK
	c VERTICAL_MASK
	d LOGGER
	e WIDTH_BITS
	f HEIGHT_BITS
	g biomeRegistry
	h biomes
	a ()[I writeBiomes
	b (III)Lnet/minecraft/server/BiomeBase; getNoiseBiome
net/minecraft/server/WorldGenFeatureStateProvider net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider
	a CODEC
	a ()Lnet/minecraft/server/WorldGenFeatureStateProviders; type
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getState
net/minecraft/server/TileEntityBed net/minecraft/world/level/block/entity/BedBlockEntity
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Lnet/minecraft/server/EnumColor;)V setColor
	d ()Lnet/minecraft/server/EnumColor; getColor
net/minecraft/server/WorldGenBuriedTreasurePieces net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces
net/minecraft/server/SaddleStorage net/minecraft/world/entity/ItemBasedSteering
	boostTicks boostTimeTotal
	currentBoostTicks boostTime
	dataWatcher entityData
	dataWatcherBoostTicks boostTimeAccessor
	f hasSaddleAccessor
	a ()V onSynced
	a (Ljava/util/Random;)Z boost
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPrison net/minecraft/world/level/levelgen/structure/StrongholdPieces$PrisonHall
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPrison; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
czw$1 net/minecraft/world/level/storage/loot/functions/CopyBlockState$1
net/minecraft/server/BlockPropertyBellAttach net/minecraft/world/level/block/state/properties/BellAttachType
	e name
	f $VALUES
	a ()Ljava/lang/String; getSerializedName
dlp$1 net/minecraft/client/gui/components/LerpingBossEvent$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundBossEventPacket$Operation
y$1 net/minecraft/advancements/Advancement$1
net/minecraft/server/GenLayerRegionHills net/minecraft/world/level/newbiome/layer/RegionHillsLayer
	b LOGGER
	c MUTATIONS
	d $VALUES
	a (Lit/unimi/dsi/fastutil/ints/Int2IntOpenHashMap;)V lambda$static$0
	a (Lnet/minecraft/server/WorldGenContext;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;II)I applyPixel
vx$a net/minecraft/server/ServerFunctionManager$QueuedCommand
	a manager
	b sender
	c entry
	a (Ljava/util/ArrayDeque;I)V execute
net/minecraft/server/Convertable$ConversionSession net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess
	a this$0
	e resources
	folder levelPath
	levelName levelId
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/DataPackConfiguration;)Lnet/minecraft/server/SaveData; getDataTag
	a (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/server/DataPackConfiguration; lambda$getDataPacks$1
	a (Ljava/lang/String;)V renameLevel
	a (Lnet/minecraft/server/Convertable$ConversionSession;)Ljava/nio/file/Path; access$700
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/SaveData;)V saveDataTag
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/SaveData;Lnet/minecraft/server/NBTTagCompound;)V saveDataTag
	a (Lnet/minecraft/server/ResourceKey;)Ljava/io/File; getDimensionPath
	b ()Lnet/minecraft/server/WorldNBTStorage; createPlayerStorage
	b (Lnet/minecraft/server/Convertable$ConversionSession;)Lnet/minecraft/server/SessionLock; access$800
	b (Lnet/minecraft/server/SavedFile;)Ljava/nio/file/Path; lambda$getLevelPath$0
	checkSession ()V checkLock
	convert (Lnet/minecraft/server/IProgressUpdate;)Z convertLevel
	d ()Lnet/minecraft/server/WorldInfo; getSummary
	e ()Lnet/minecraft/server/DataPackConfiguration; getDataPacks
	f ()Ljava/io/File; getIconFile
	g ()V deleteLevel
	getLevelName ()Ljava/lang/String; getLevelId
	getWorldFolder (Lnet/minecraft/server/SavedFile;)Ljava/nio/file/Path; getLevelPath
	h ()J makeWorldBackup
	isConvertable ()Z requiresConversion
net/minecraft/server/RecipeBookServer net/minecraft/stats/ServerRecipeBook
	c LOGGER
	a (Ljava/util/Collection;Lnet/minecraft/server/EntityPlayer;)I addRecipes
	a (Lnet/minecraft/server/EntityPlayer;)V sendInitialRecipeBook
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/CraftingManager;)V fromNbt
	a (Lnet/minecraft/server/NBTTagList;Ljava/util/function/Consumer;Lnet/minecraft/server/CraftingManager;)V loadRecipes
	a (Lnet/minecraft/server/PacketPlayOutRecipes$Action;Lnet/minecraft/server/EntityPlayer;Ljava/util/List;)V sendRecipes
	b (Ljava/util/Collection;Lnet/minecraft/server/EntityPlayer;)I removeRecipes
	save ()Lnet/minecraft/server/NBTTagCompound; toNbt
dbb$b net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionAlternative;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionAlternative; deserialize
dbb$a net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder
	a terms
	a (Ldbl$a;)Ldbb$a; or
cdf$1 net/minecraft/world/level/block/entity/SpawnerBlockEntity$1
	a this$0
	a ()Lnet/minecraft/server/World; getLevel
	a (I)V broadcastEvent
	a (Lnet/minecraft/server/MobSpawnerData;)V setNextSpawnData
	b ()Lnet/minecraft/server/BlockPosition; getPos
net/minecraft/server/PacketPrepender net/minecraft/network/Varint21LengthFieldPrepender
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
cup$a net/minecraft/world/level/lighting/SpatialLongSet$InternalMap
	a X_BITS
	b Z_BITS
	c Y_BITS
	d Z_OFFSET
	e X_OFFSET
	g OUTER_MASK
	h lastPos
	i lastOuterKey
	j minSize
	a ()J removeFirstBit
	a (IJ)Z replaceBit
	a (J)J getOuterKey
	a (JI)J getFullKey
	b (IJ)Z removeFromEntry
	b (J)I getInnerKey
	c (J)Z addBit
	d (J)Z removeBit
	e (J)Z removeFromNullEntry
net/minecraft/server/IProjectile net/minecraft/world/entity/projectile/Projectile
	c ownerNetworkId
	d leftOwner
	shooter ownerUUID
	a (Lnet/minecraft/server/Entity;)Z canHitEntity
	a (Lnet/minecraft/server/Entity;FFFFF)V shootFromRotation
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/server/MovingObjectPositionEntity;)V onHitEntity
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/Entity;)Z lambda$checkLeftOwner$0
	e (FF)F lerpRotation
	getShooter ()Lnet/minecraft/server/Entity; getOwner
	h ()Z checkLeftOwner
	j ()V tick
	k (DDD)V lerpMotion
	setShooter (Lnet/minecraft/server/Entity;)V setOwner
	x ()V updateRotation
net/minecraft/server/BlockKelpPlant net/minecraft/world/level/block/KelpPlantBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	c ()Lnet/minecraft/server/BlockGrowingTop; getHeadBlock
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/CommandSaveAll net/minecraft/server/commands/SaveAllCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Z)I saveAll
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
dxb$1 net/minecraft/client/particle/BubbleColumnUpParticle$1
net/minecraft/server/PacketPlayInSettings net/minecraft/network/protocol/game/ServerboundClientInformationPacket
	c chatVisibility
	d chatColors
	e modelCustomisation
	f mainHand
	locale language
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Ljava/lang/String; getLanguage
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getViewDistance
	d ()Lnet/minecraft/server/EnumChatVisibility; getChatVisibility
	e ()Z getChatColors
	f ()I getModelCustomisation
net/minecraft/server/PacketPlayOutCommands net/minecraft/network/protocol/game/ClientboundCommandsPacket
	a root
	a (Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; enumerateNodes
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)[Lcom/mojang/brigadier/tree/CommandNode; getNodesInIdOrder
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;B)Lcom/mojang/brigadier/builder/ArgumentBuilder; createBuilder
	a (Lnet/minecraft/server/PacketDataSerializer;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Map;)V writeNode
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a ([Lpd$a;)V resolveEntries
	a ([Lpd$a;Lpd$a;)Z lambda$resolveEntries$0
	b ()Lcom/mojang/brigadier/tree/RootCommandNode; getRoot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c (Lnet/minecraft/server/PacketDataSerializer;)Lpd$a; readNode
net/minecraft/server/EntityGhast$PathfinderGoalGhastAttackTarget net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal
	a chargeTime
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/BlockGrass net/minecraft/world/level/block/GrassBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
net/minecraft/server/DataConverterShulker net/minecraft/util/datafix/fixes/EntityShulkerColorFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
bat$1 net/minecraft/world/entity/animal/TropicalFish$1
net/minecraft/server/DataConverterStructureReference net/minecraft/util/datafix/fixes/StructureReferenceCountFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; setCountToAtLeastOne
	a (Ljava/lang/Integer;)Z lambda$null$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$setCountToAtLeastOne$2
net/minecraft/server/EntityTrackerEntry net/minecraft/server/level/ServerEntity
	a LOGGER
	b level
	d updateInterval
	e trackDelta
	f broadcast
	headYaw yHeadRotp
	m ap
	o teleportDelay
	p lastPassengers
	q wasRiding
	r wasOnGround
	tickCounter tickCount
	tracker entity
	xLoc xp
	xRot xRotp
	yLoc yp
	yRot yRotp
	zLoc zp
	a ()V sendChanges
	a (Ljava/util/function/Consumer;)V sendPairingData
	a (Lnet/minecraft/server/EntityPlayer;)V removePairing
	b ()Lnet/minecraft/server/Vec3D; sentPos
	b (Lnet/minecraft/server/EntityPlayer;)V addPairing
	broadcastIncludingSelf (Lnet/minecraft/server/Packet;)V broadcastAndSend
	c ()V sendDirtyEntityData
	d ()V updateSentPos
uu$8 net/minecraft/network/syncher/EntityDataSerializers$16
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/NBTTagCompound;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/NBTTagCompound; read
uu$9 net/minecraft/network/syncher/EntityDataSerializers$17
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/VillagerData;)V write
	a (Lnet/minecraft/server/VillagerData;)Lnet/minecraft/server/VillagerData; copy
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/VillagerData; read
net/minecraft/server/ServerStatisticManager net/minecraft/stats/ServerStatsCounter
	b LOGGER
	c server
	d file
	e dirty
	f lastStatRequest
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/NBTTagCompound; fromJson
	a (Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V parseLocal
	a (Ljava/lang/String;)V lambda$parseLocal$3
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Statistic;I)V setValue
	a (Lnet/minecraft/server/EntityPlayer;)V sendStats
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;Lnet/minecraft/server/Statistic;)V lambda$null$0
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;Lnet/minecraft/server/StatisticWrapper;)V lambda$parseLocal$2
	a (Lnet/minecraft/server/StatisticWrapper;)Lcom/google/gson/JsonObject; lambda$toJson$4
	a (Lnet/minecraft/server/StatisticWrapper;Ljava/lang/String;)Ljava/util/Optional; getStat
	b ()Ljava/lang/String; toJson
	b (Ljava/lang/String;)V lambda$null$1
	b (Lnet/minecraft/server/Statistic;)Lnet/minecraft/server/MinecraftKey; getKey
	c ()V markAllDirty
	d ()Ljava/util/Set; getDirty
uu$6 net/minecraft/network/syncher/EntityDataSerializers$14
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/EnumDirection;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/EnumDirection; read
uu$7 net/minecraft/network/syncher/EntityDataSerializers$15
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Ljava/util/Optional;)Ljava/util/Optional; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/util/Optional;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/util/Optional; read
uu$4 net/minecraft/network/syncher/EntityDataSerializers$12
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/BlockPosition;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/BlockPosition; read
uu$5 net/minecraft/network/syncher/EntityDataSerializers$13
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Ljava/util/Optional;)Ljava/util/Optional; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/util/Optional;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/util/Optional; read
net/minecraft/server/CommandDataAccessor net/minecraft/server/commands/data/DataAccessor
	a ()Lnet/minecraft/server/NBTTagCompound; getData
	a (Ldr$h;DI)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/server/NBTTagCompound;)V setData
	b ()Lnet/minecraft/server/IChatBaseComponent; getModifiedSuccess
net/minecraft/server/SlotMerchantResult net/minecraft/world/inventory/MerchantResultSlot
	a slots
	b player
	g removeCount
	h merchant
	a (I)Lnet/minecraft/server/ItemStack; remove
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/ItemStack;I)V onQuickCraft
	c (Lnet/minecraft/server/ItemStack;)V checkTakeAchievements
net/minecraft/server/AreaLazy net/minecraft/world/level/newbiome/area/LazyArea
	a transformer
	b cache
	c maxCache
	a ()I getMaxCache
	a (II)I get
uu$2 net/minecraft/network/syncher/EntityDataSerializers$10
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/Particle;)Lnet/minecraft/server/ParticleParam; readParticle
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/ParticleParam;)V write
	a (Lnet/minecraft/server/ParticleParam;)Lnet/minecraft/server/ParticleParam; copy
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParam; read
net/minecraft/server/ContainerAnvilAbstract net/minecraft/world/inventory/ItemCombinerMenu
	containerAccess access
	repairInventory inputSlots
	resultInventory resultSlots
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Ljava/lang/Boolean; lambda$stillValid$1
	a (Lnet/minecraft/server/IBlockData;)Z isValidBlock
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/ItemStack;)Z shouldQuickMoveToAdditionalSlot
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$removed$0
	b (Lnet/minecraft/server/EntityHuman;Z)Z mayPickup
	e ()V createResult
uu$3 net/minecraft/network/syncher/EntityDataSerializers$11
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/Vector3f;)V write
	a (Lnet/minecraft/server/Vector3f;)Lnet/minecraft/server/Vector3f; copy
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/Vector3f; read
net/minecraft/server/EntityPillager net/minecraft/world/entity/monster/Pillager
	b IS_CHARGING_CROSSBOW
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	U_ ()V onCrossbowAttackPerformed
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IProjectile;F)V shootCrossbowProjectile
	a (Lnet/minecraft/server/ItemProjectileWeapon;)Z canFireProjectileWeapon
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (Lnet/minecraft/server/EntityItem;)V pickUpItem
	b (Lnet/minecraft/server/Item;)Z wantsItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Z)V setChargingCrossbow
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eL ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	eM ()Z isChargingCrossbow
	eq ()I getMaxSpawnClusterSize
	m ()Lbcv$a; getArmPose
	o ()V registerGoals
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
	w (F)V enchantSpawnedWeapon
dzy$a net/minecraft/client/renderer/MultiBufferSource$BufferSource
	a builder
	b fixedBuffers
	c lastState
	d startedBuffers
	a ()V endBatch
	a (Leag;)V endBatch
	b (Leag;)Ldfe; getBuilderRaw
	c (Leag;)V lambda$endBatch$0
uu$1 net/minecraft/network/syncher/EntityDataSerializers$1
	a (Ljava/lang/Byte;)Ljava/lang/Byte; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Byte;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Byte; read
net/minecraft/server/TrunkPlacerForking net/minecraft/world/level/levelgen/feature/trunkplacers/ForkingTrunkPlacer
	a CODEC
	a ()Lnet/minecraft/server/TrunkPlacers; type
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;ILnet/minecraft/server/BlockPosition;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
net/minecraft/server/ItemFireworks net/minecraft/world/item/FireworkRocketItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbni;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/PacketPlayInTransaction net/minecraft/network/protocol/game/ServerboundContainerAckPacket
	a containerId
	b uid
	c accepted
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()S getUid
	d ()Z isAccepted
net/minecraft/server/ItemBoat net/minecraft/world/item/BoatItem
	a ENTITY_PREDICATE
	b type
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/WorldGenFeatureDelta net/minecraft/world/level/levelgen/feature/DeltaFeature
	a CANNOT_REPLACE
	ab DIRECTIONS
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureDeltaConfiguration;)Z isClear
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureDeltaConfiguration;)Z place
dio$1 com/mojang/realmsclient/util/RealmsTextureManager$1
	a val$uuid
net/minecraft/server/WorldGenFeatureEmptyConfiguration2 net/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration
	a CODEC
	c INSTANCE
	a ()Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2; lambda$static$0
net/minecraft/server/TickListChunk net/minecraft/world/level/ChunkTickList
	a ticks
	b toId
	a ()I size
	a (JLnet/minecraft/server/NextTickListEntry;)Lbrb$a; lambda$new$0
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	a (Lnet/minecraft/server/NBTTagList;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/server/TickListChunk; create
	a (Lnet/minecraft/server/TickList;)V copyOut
	a (Lnet/minecraft/server/TickList;Lbrb$a;)V lambda$copyOut$1
	b ()Lnet/minecraft/server/NBTTagList; save
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
net/minecraft/server/WorldGenStage$Features net/minecraft/world/level/levelgen/GenerationStep$Carving
	c CODEC
	d BY_NAME
	e name
	f $VALUES
	a ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenStage$Features; byName
	a (Lnet/minecraft/server/WorldGenStage$Features;)Lnet/minecraft/server/WorldGenStage$Features; lambda$static$0
	b ()Ljava/lang/String; getName
ear$c net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g vert0
	h vert1
	i vert2
	j vert3
	k BY_FACING
	l $VALUES
	a (Lear$c;)I access$500
	a (Lnet/minecraft/server/EnumDirection;)Lear$c; fromFacing
	a ([Lear$c;)V lambda$static$0
	b (Lear$c;)I access$600
	c (Lear$c;)I access$700
	d (Lear$c;)I access$800
net/minecraft/server/MojangStatisticsGenerator net/minecraft/world/Snooper
	a fixedData
	b dynamicData
	c token
	d url
	e populator
	f timer
	g lock
	h startupTime
	i started
	j count
	a ()V start
	a (Ljava/lang/String;Ljava/lang/Object;)V setDynamicData
	a (Lnet/minecraft/server/MojangStatisticsGenerator;)Lnet/minecraft/server/IMojangStatistics; access$000
	a ([ILjava/lang/String;)V lambda$setJvmArgs$0
	b ()V prepare
	b (Ljava/lang/String;Ljava/lang/Object;)V setFixedData
	b (Lnet/minecraft/server/MojangStatisticsGenerator;)Ljava/lang/Object; access$100
	c ()Ljava/util/Map; getValues
	c (Lnet/minecraft/server/MojangStatisticsGenerator;)Ljava/util/Map; access$200
	d ()Z isStarted
	d (Lnet/minecraft/server/MojangStatisticsGenerator;)I access$300
	e ()V interrupt
	e (Lnet/minecraft/server/MojangStatisticsGenerator;)Ljava/util/Map; access$400
	f ()Ljava/lang/String; getToken
	f (Lnet/minecraft/server/MojangStatisticsGenerator;)I access$308
	g ()J getStartupTime
	g (Lnet/minecraft/server/MojangStatisticsGenerator;)Ljava/lang/String; access$500
	h ()V populateFixedData
	h (Lnet/minecraft/server/MojangStatisticsGenerator;)Ljava/net/URL; access$600
	i ()V setJvmArgs
ear$b net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace
	a this$0
	b brightness
	c lightmap
	a (IIII)I blend
	a (IIIIFFFF)I blend
	a (Lear$b;)[F access$000
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;[FLjava/util/BitSet;Z)V calculate
	b (Lear$b;)[I access$100
ear$e net/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g FLIP_DOWN
	h FLIP_UP
	i FLIP_NORTH
	j FLIP_SOUTH
	k FLIP_WEST
	l FLIP_EAST
	m shape
	n $VALUES
	a (Lear$e;)I access$1000
ear$d net/minecraft/client/renderer/block/ModelBlockRenderer$Cache
	a enabled
	b colorCache
	c brightnessCache
	a ()V enable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;)I getLightColor
	b ()V disable
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
	c ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap; lambda$new$1
	d ()Lit/unimi/dsi/fastutil/longs/Long2IntLinkedOpenHashMap; lambda$new$0
cgo$a net/minecraft/world/level/chunk/UpgradeData$BlockFixer
	a (Lnet/minecraft/server/GeneratorAccess;)V processChunk
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
net/minecraft/server/IChatBaseComponent net/minecraft/network/chat/Component
	a (I)Ljava/lang/String; getString
	a (ILjava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional; lambda$getString$0
	a (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; nullToEmpty
	a (Ljava/util/List;Lnet/minecraft/server/ChatModifier;Ljava/lang/String;)Ljava/util/Optional; lambda$toFlatList$1
	a (Lnu$a;)Ljava/util/Optional; visit
	a (Lnu$b;Lnet/minecraft/server/ChatModifier;)Ljava/util/Optional; visit
	b (Lnet/minecraft/server/ChatModifier;)Ljava/util/List; toFlatList
	b (Lnu$a;)Ljava/util/Optional; visitSelf
	b (Lnu$b;Lnet/minecraft/server/ChatModifier;)Ljava/util/Optional; visitSelf
	f ()Lnet/minecraft/server/FormattedString; getVisualOrderText
	g ()Lnet/minecraft/server/IChatMutableComponent; plainCopy
	getChatModifier ()Lnet/minecraft/server/ChatModifier; getStyle
	getText ()Ljava/lang/String; getContents
	mutableCopy ()Lnet/minecraft/server/IChatMutableComponent; copy
ear$a net/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g corners
	h doNonCubicWeight
	i vert0Weights
	j vert1Weights
	k vert2Weights
	l vert3Weights
	m BY_FACING
	n $VALUES
	a (Lear$a;)[Lnet/minecraft/server/EnumDirection; access$300
	a (Lnet/minecraft/server/EnumDirection;)Lear$a; fromFacing
	a ([Lear$a;)V lambda$static$0
	b (Lear$a;)Z access$400
	c (Lear$a;)[Lear$e; access$900
	d (Lear$a;)[Lear$e; access$1100
	e (Lear$a;)[Lear$e; access$1200
	f (Lear$a;)[Lear$e; access$1300
net/minecraft/server/MobEffectAbsorption net/minecraft/world/effect/AbsoptionMobEffect
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AttributeMapBase;I)V removeAttributeModifiers
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AttributeMapBase;I)V addAttributeModifiers
net/minecraft/server/DataConverterStatistic net/minecraft/util/datafix/fixes/StatsCounterFix
	a SKIP
	b CUSTOM_MAP
	c ITEM_KEYS
	d ENTITY_KEYS
	e ENTITIES
	a ()Ljava/lang/IllegalStateException; lambda$null$1
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
	a (Ljava/lang/String;)Ljava/lang/String; upgradeItem
	b (Ljava/lang/String;)Ljava/lang/String; upgradeBlock
net/minecraft/server/PacketPlayOutEntity$PacketPlayOutEntityLook net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
bdl$a net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal
	a this$0
	e lastTargetId
	a ()Z canUse
	c ()V start
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
cro$a net/minecraft/world/level/levelgen/structure/ShipwreckPieces$ShipwreckPiece
	d rotation
	e templateLocation
	f isBeached
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/DefinedStructureManager;)V loadTemplate
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
doy$c net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList
	a this$0
	a (Ldfj;)V renderBackground
net/minecraft/server/GameProfilerSwitcher net/minecraft/util/profiling/ContinuousProfiler
	a realTime
	b tickCount
	c profiler
	a ()Z isEnabled
	b ()V disable
	c ()V enable
	d ()Lnet/minecraft/server/GameProfilerFiller; getFiller
	e ()Lnet/minecraft/server/MethodProfilerResults; getResults
doy$b net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList
	a blockColumns
	o itemColumns
	p headerPressed
	q statItemList
	r itemStatSorter
	s sortColumn
	t sortOrder
	u this$0
	v iconOffsets
	a (I)Lnet/minecraft/server/StatisticWrapper; getColumn
	a (II)V clickedHeader
	a (Ldfj;)V renderBackground
	a (Ldfj;II)V renderDecorations
	a (Ldfj;IILdfl;)V renderHeader
	a (Ldfj;Lnet/minecraft/server/IChatBaseComponent;II)V renderMousehoverTooltip
	a (Lnet/minecraft/server/Item;)Lnet/minecraft/server/IChatBaseComponent; getString
	a (Lnet/minecraft/server/StatisticWrapper;)V sortByColumn
	b (Lnet/minecraft/server/StatisticWrapper;)I getColumnIndex
	d ()I getRowWidth
	e ()I getScrollbarPosition
bdl$b net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal
	a this$0
	a ()Z canUse
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
net/minecraft/server/LootItemConditionWeatherCheck net/minecraft/world/level/storage/loot/predicates/WeatherCheck
	a isRaining
	b isThundering
	a (Lnet/minecraft/server/LootItemConditionWeatherCheck;)Ljava/lang/Boolean; access$100
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lnet/minecraft/server/LootItemConditionType; getType
	b (Lnet/minecraft/server/LootItemConditionWeatherCheck;)Ljava/lang/Boolean; access$200
	c ()Ldbu$a; weather
doy$a net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList
	a this$0
	a (Ldfj;)V renderBackground
	a (Lnet/minecraft/server/Statistic;)Ljava/lang/String; lambda$new$0
afp$1 net/minecraft/util/StringRepresentable$1
	a val$idResolver
	b val$byId
	c val$resolver
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/INamable;)Lcom/mojang/datafixers/util/Pair; lambda$decode$5
	a (Ljava/lang/Number;)Lcom/mojang/serialization/DataResult; lambda$null$0
	a (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$null$3
	a (Ljava/util/function/Function;Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$decode$4
	a (Ljava/util/function/IntFunction;Ljava/lang/Number;)Lcom/mojang/serialization/DataResult; lambda$decode$1
	a (Lnet/minecraft/server/INamable;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	b (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/INamable;)Lcom/mojang/datafixers/util/Pair; lambda$decode$2
afp$2 net/minecraft/util/StringRepresentable$2
	a val$values
net/minecraft/server/ContainerFurnaceFurnace net/minecraft/world/inventory/FurnaceMenu
zk$1 net/minecraft/server/dedicated/Settings$1
net/minecraft/server/ChatComponentText net/minecraft/network/chat/TextComponent
	d EMPTY
	e text
	a ()Ljava/lang/String; getContents
	d ()Lnet/minecraft/server/ChatBaseComponent; plainCopy
	g ()Lnet/minecraft/server/IChatMutableComponent; plainCopy
	h ()Ljava/lang/String; getText
	i ()Lnet/minecraft/server/ChatComponentText; plainCopy
net/minecraft/server/PacketPlayInDifficultyChange net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket
	a difficulty
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/EnumDifficulty; getDifficulty
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/EntitySlime$PathfinderGoalSlimeNearestPlayer net/minecraft/world/entity/monster/Slime$SlimeAttackGoal
	a slime
	b growTiredTimer
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
net/minecraft/server/BaseBlockPosition net/minecraft/core/Vec3i
	a x
	b y
	c CODEC
	e z
	a (Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult; lambda$static$1
	a (Lnet/minecraft/server/BaseBlockPosition;)Ljava/util/stream/IntStream; lambda$static$2
	a (Lnet/minecraft/server/BaseBlockPosition;D)Z closerThan
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)I get
	a (Lnet/minecraft/server/IPosition;D)Z closerThan
	a (Lnet/minecraft/server/IPosition;Z)D distSqr
	a ([I)Lnet/minecraft/server/BaseBlockPosition; lambda$null$0
	b (DDD)Lnet/minecraft/server/BaseBlockPosition; offset
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/BaseBlockPosition; relative
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BaseBlockPosition; relative
	c (III)Lnet/minecraft/server/BaseBlockPosition; offset
	d (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; cross
	distanceSquared (DDDZ)D distSqr
	down ()Lnet/minecraft/server/BaseBlockPosition; below
	down (I)Lnet/minecraft/server/BaseBlockPosition; below
	e (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; subtract
	f (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; offset
	h (I)Lnet/minecraft/server/BaseBlockPosition; east
	i (I)Lnet/minecraft/server/BaseBlockPosition; west
	i (Lnet/minecraft/server/BaseBlockPosition;)I compareTo
	j ()Lnet/minecraft/server/BaseBlockPosition; east
	j (I)Lnet/minecraft/server/BaseBlockPosition; south
	j (Lnet/minecraft/server/BaseBlockPosition;)D distSqr
	k ()Lnet/minecraft/server/BaseBlockPosition; west
	k (I)Lnet/minecraft/server/BaseBlockPosition; north
	k (Lnet/minecraft/server/BaseBlockPosition;)I distManhattan
	l ()Lnet/minecraft/server/BaseBlockPosition; south
	m ()Lnet/minecraft/server/BaseBlockPosition; north
	n (I)Lnet/minecraft/server/BaseBlockPosition; multiply
	o (I)V setX
	p (I)V setY
	q (I)V setZ
	shift (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BaseBlockPosition; relative
	up ()Lnet/minecraft/server/BaseBlockPosition; above
	up (I)Lnet/minecraft/server/BaseBlockPosition; above
	x ()Ljava/lang/String; toShortString
net/minecraft/server/MinecraftKey net/minecraft/resources/ResourceLocation
	a CODEC
	d ERROR_INVALID
	key path
	a (C)Z isAllowedInResourceLocation
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/MinecraftKey; read
	a (Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; tryParse
	a (Ljava/lang/String;C)Lnet/minecraft/server/MinecraftKey; of
	a (Lnet/minecraft/server/MinecraftKey;)I compareTo
	b (C)Z validPathChar
	b (Ljava/lang/String;)Z isValidResourceLocation
	b (Ljava/lang/String;C)[Ljava/lang/String; decompose
	c ()Ljava/lang/String; toDebugFileName
	c (C)Z validNamespaceChar
	c (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; read
	d (Ljava/lang/String;)Z isValidPath
	e (Ljava/lang/String;)Z isValidNamespace
	getKey ()Ljava/lang/String; getPath
net/minecraft/server/WorldGenFeatureStateProviderForestFlower net/minecraft/world/level/levelgen/feature/stateproviders/ForestFlowerProvider
	b CODEC
	c INSTANCE
	d FLOWERS
	a ()Lnet/minecraft/server/WorldGenFeatureStateProviders; type
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getState
	b ()Lnet/minecraft/server/WorldGenFeatureStateProviderForestFlower; lambda$static$0
net/minecraft/server/ISourceBlock net/minecraft/core/BlockSource
	a ()D x
	b ()D y
	c ()D z
	f ()Lnet/minecraft/server/Material; getMaterial
	getBlockData ()Lnet/minecraft/server/IBlockData; getBlockState
	getBlockPosition ()Lnet/minecraft/server/BlockPosition; getPos
	getTileEntity ()Lnet/minecraft/server/TileEntity; getEntity
	getWorld ()Lnet/minecraft/server/WorldServer; getLevel
net/minecraft/server/WorldGenFeatureFillConfiguration net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration
	a CODEC
	b height
	c state
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/WorldGenFeatureFillConfiguration;)Lnet/minecraft/server/IBlockData; lambda$null$1
	b (Lnet/minecraft/server/WorldGenFeatureFillConfiguration;)Ljava/lang/Integer; lambda$null$0
bib$1 net/minecraft/world/inventory/AnvilMenu$1
	a $SwitchMap$net$minecraft$world$item$enchantment$Enchantment$Rarity
net/minecraft/server/BehaviorRunSometimes net/minecraft/world/entity/ai/behavior/RunSometimes
	b resetTicks
	c wasRunning
	d interval
	e wrappedBehavior
	f ticksUntilNextStart
	a (J)Z timedOut
	a (Lnet/minecraft/server/WorldServer;)V resetTicksUntilNextStart
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
net/minecraft/server/ResourceKey net/minecraft/resources/ResourceKey
	a VALUES
	b registryName
	c location
	a ()Lnet/minecraft/server/MinecraftKey; location
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/ResourceKey; createRegistryKey
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/ResourceKey; create
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Ljava/lang/String;)Lnet/minecraft/server/ResourceKey; lambda$create$0
	a (Lnet/minecraft/server/ResourceKey;)Z isFor
	a (Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/ResourceKey; create
	b (Lnet/minecraft/server/ResourceKey;)Ljava/util/function/Function; elementKey
	b (Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/ResourceKey; lambda$elementKey$1
net/minecraft/server/EnumMoveType net/minecraft/world/entity/MoverType
	f $VALUES
elr$a net/minecraft/client/resources/model/WeightedBakedModel$Builder
	a list
	a ()Lelg; build
	a (Lelg;I)Lelr$a; add
elr$b net/minecraft/client/resources/model/WeightedBakedModel$WeightedModel
	b model
net/minecraft/server/BehaviorTradePlayer net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer
	b playerItemStack
	c displayItems
	d cycleCounter
	e displayIndex
	f lookTime
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityVillager;)V findItemsToDisplay
	a (Lnet/minecraft/server/EntityVillager;)V displayFirstItem
	a (Lnet/minecraft/server/MerchantRecipe;)Z playerItemStackMatchesCostOfOffer
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/EntityVillager;)V updateDisplayItems
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	c (Lnet/minecraft/server/EntityVillager;)Lnet/minecraft/server/EntityLiving; lookAtTarget
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/EntityVillager;)V displayCyclingItems
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
net/minecraft/server/DataConverterBiome net/minecraft/util/datafix/fixes/BiomeFix
	a BIOMES
net/minecraft/server/BlockFireAbstract net/minecraft/world/level/block/BaseFireBlock
	a DOWN_AABB
	b fireDamage
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getState
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/World;)Z inPortalDimension
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z canBePlacedAt
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isPortal
	e (Lnet/minecraft/server/IBlockData;)Z canBurn
net/minecraft/server/PathfinderGoalLookAtPlayer net/minecraft/world/entity/ai/goal/LookAtPlayerGoal
	a mob
	b lookAt
	c lookDistance
	d probability
	e lookAtType
	f lookAtContext
	g lookTime
	a ()Z canUse
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
dio$a com/mojang/realmsclient/util/RealmsTextureManager$RealmsTexture
	a image
	b textureId
	a (Ldio$a;)I access$000
	b (Ldio$a;)Ljava/lang/String; access$400
net/minecraft/server/IShearable net/minecraft/world/entity/Shearable
	canShear ()Z readyForShearing
net/minecraft/server/MethodProfiler net/minecraft/util/profiling/ActiveProfiler
	a WARNING_TIME_NANOS
	b LOGGER
	c paths
	d startTimes
	e entries
	f getTickTime
	g getRealTime
	h startTimeNano
	i startTimeTicks
	j path
	k started
	l currentEntry
	m warn
	a ()V startTick
	a (J)Ljava/lang/Object; lambda$pop$2
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	b ()V endTick
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c ()V pop
	c (Ljava/lang/String;)V incrementCounter
	c (Ljava/util/function/Supplier;)V incrementCounter
	d ()Lnet/minecraft/server/MethodProfilerResults; getResults
	d (Ljava/lang/String;)Lanm$a; lambda$getCurrentEntry$3
	e ()Lanm$a; getCurrentEntry
	f ()Ljava/lang/Object; lambda$pop$1
	g ()Ljava/lang/Object; lambda$endTick$0
net/minecraft/server/MovingObjectPosition net/minecraft/world/phys/HitResult
	pos location
	a (Lnet/minecraft/server/Entity;)D distanceTo
	getPos ()Lnet/minecraft/server/Vec3D; getLocation
net/minecraft/server/IMaterial net/minecraft/world/level/ItemLike
	getItem ()Lnet/minecraft/server/Item; asItem
net/minecraft/server/PathfinderGoalGotoTarget net/minecraft/world/entity/ai/goal/MoveToBlockGoal
	a mob
	b speedModifier
	c nextStartTick
	d tryTicks
	e blockPos
	f verticalSearchStart
	g maxStayTicks
	h reachedTarget
	i searchRange
	j verticalSearchRange
	a ()Z canUse
	a (Lnet/minecraft/server/EntityCreature;)I nextStartTick
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	g ()V moveMobToBlock
	h ()D acceptedDistance
	j ()Lnet/minecraft/server/BlockPosition; getMoveToTarget
	k ()Z shouldRecalculatePath
	l ()Z isReachedTarget
	m ()Z findNearestBlock
net/minecraft/server/IResource net/minecraft/server/packs/resources/Resource
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadata
	b ()Ljava/io/InputStream; getInputStream
	c ()Z hasMetadata
	d ()Ljava/lang/String; getSourceName
yy$1 net/minecraft/server/commands/data/BlockDataAccessor$1
	a val$argPrefix
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandDataAccessor; access
cby$a net/minecraft/world/level/block/entity/BannerPattern$Builder
	a patterns
	a ()Lnet/minecraft/server/NBTTagList; toListTag
	a (Lnet/minecraft/server/EnumBannerPatternType;Lnet/minecraft/server/EnumColor;)Lcby$a; addPattern
cbh$1 net/minecraft/world/level/block/WallBlock$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
net/minecraft/server/CommandGive net/minecraft/server/commands/GiveCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ArgumentPredicateItemStack;Ljava/util/Collection;I)I giveItem
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
cy$d net/minecraft/commands/CommandFunction$FunctionEntry
	a function
	a (ILjava/util/ArrayDeque;Lnet/minecraft/server/CustomFunctionData;Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CustomFunction;)V lambda$execute$0
	a (Lnet/minecraft/server/CustomFunctionData;Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/ArrayDeque;I)V execute
net/minecraft/server/GameTestHarnessITestReporter net/minecraft/gametest/framework/TestReporter
	a ()V finish
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V onTestFailed
	b (Lnet/minecraft/server/GameTestHarnessInfo;)V onTestSuccess
dpk$1 net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$1
	a $SwitchMap$net$minecraft$client$gui$screens$debug$GameModeSwitcherScreen$GameModeIcon
	b $SwitchMap$net$minecraft$world$level$GameType
net/minecraft/server/WorldGenNetherPieces net/minecraft/world/level/levelgen/structure/NetherBridgePieces
	a BRIDGE_PIECE_WEIGHTS
	b CASTLE_PIECE_WEIGHTS
	a ()[Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPieceWeight; access$100
	a (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPieceWeight;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece; access$000
	b ()[Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPieceWeight; access$200
	b (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPieceWeight;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece; findAndCreateBridgePieceFactory
cy$b net/minecraft/commands/CommandFunction$CommandEntry
	a parse
	a (Lnet/minecraft/server/CustomFunctionData;Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/ArrayDeque;I)V execute
net/minecraft/server/WorldGenSurfaceConfigurationBase net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration
	a CODEC
	b topMaterial
	c underMaterial
	d underwaterMaterial
	a ()Lnet/minecraft/server/IBlockData; getTopMaterial
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lnet/minecraft/server/WorldGenSurfaceConfigurationBase;)Lnet/minecraft/server/IBlockData; lambda$null$2
	b ()Lnet/minecraft/server/IBlockData; getUnderMaterial
	b (Lnet/minecraft/server/WorldGenSurfaceConfigurationBase;)Lnet/minecraft/server/IBlockData; lambda$null$1
	c ()Lnet/minecraft/server/IBlockData; getUnderwaterMaterial
	c (Lnet/minecraft/server/WorldGenSurfaceConfigurationBase;)Lnet/minecraft/server/IBlockData; lambda$null$0
net/minecraft/server/RecipeTippedArrow net/minecraft/world/item/crafting/TippedArrowRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
net/minecraft/server/LootEntryChildren net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer
	a ALWAYS_FALSE
	b ALWAYS_TRUE
	a (Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; and
	a (Lnet/minecraft/server/LootEntryChildren;Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z lambda$or$3
	a (Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z lambda$static$1
	b (Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; or
	b (Lnet/minecraft/server/LootEntryChildren;Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z lambda$and$2
	b (Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z lambda$static$0
net/minecraft/server/BlockSkullPlayerWall net/minecraft/world/level/block/PlayerWallHeadBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
cy$c net/minecraft/commands/CommandFunction$Entry
	a (Lnet/minecraft/server/CustomFunctionData;Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/ArrayDeque;I)V execute
cy$a net/minecraft/commands/CommandFunction$CacheableFunction
	a NONE
	b id
	c resolved
	d function
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lnet/minecraft/server/CustomFunction;)Lnet/minecraft/server/MinecraftKey; lambda$getId$0
	a (Lnet/minecraft/server/CustomFunctionData;)Ljava/util/Optional; get
net/minecraft/server/EntityPhantom$AttackPhase net/minecraft/world/entity/monster/Phantom$AttackPhase
	c $VALUES
net/minecraft/server/DataPaletteExpandable net/minecraft/world/level/chunk/PaletteResize
net/minecraft/server/BlockShulkerBox net/minecraft/world/level/block/ShulkerBoxBlock
	a FACING
	b CONTENTS
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/Block; getBlockByColor
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockAccess;Ljava/util/List;Lbni;)V appendHoverText
	a (Lnet/minecraft/server/TileEntityShulkerBox;Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)V lambda$getDrops$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/ItemStack; getColoredItemStack
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/Item;)Lnet/minecraft/server/EnumColor; getColorFromItem
	c ()Lnet/minecraft/server/EnumColor; getColor
	c (Lnet/minecraft/server/Block;)Lnet/minecraft/server/EnumColor; getColorFromBlock
	f (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
dk$a net/minecraft/commands/arguments/EntityArgument$Serializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/ArgumentEntity;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lnet/minecraft/server/ArgumentEntity;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ArgumentEntity; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
net/minecraft/server/ItemGoldenAppleEnchanted net/minecraft/world/item/EnchantedGoldenAppleItem
	e (Lnet/minecraft/server/ItemStack;)Z isFoil
net/minecraft/server/TileEntityEnderPortal net/minecraft/world/level/block/entity/TheEndPortalBlockEntity
	a (Lnet/minecraft/server/EnumDirection;)Z shouldRenderFace
bjv$1 net/minecraft/world/item/ArmorItem$1
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
net/minecraft/server/PacketPlayOutCamera net/minecraft/network/protocol/game/ClientboundSetCameraPacket
	a cameraId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getEntity
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/CommandFill$Mode net/minecraft/server/commands/FillCommand$Mode
	e filter
	f $VALUES
	a (Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ArgumentTileLocation;Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/ArgumentTileLocation; lambda$static$3
	b (Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ArgumentTileLocation;Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/ArgumentTileLocation; lambda$static$2
	c (Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ArgumentTileLocation;Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/ArgumentTileLocation; lambda$static$1
	d (Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ArgumentTileLocation;Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/ArgumentTileLocation; lambda$static$0
net/minecraft/server/EntityVillagerTrader net/minecraft/world/entity/npc/WanderingTrader
	bp wanderTarget
	bq despawnDelay
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityVillagerTrader;)Lnet/minecraft/server/NavigationAbstract; access$000
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/EntityVillagerTrader;)Lnet/minecraft/server/BlockPosition; access$100
	b (Lnet/minecraft/server/MerchantRecipe;)V rewardTradeXp
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityVillagerTrader;)Lnet/minecraft/server/NavigationAbstract; access$200
	c (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/SoundEffect; getDrinkingSound
	d (Lnet/minecraft/server/EntityVillagerTrader;)Lnet/minecraft/server/NavigationAbstract; access$300
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityVillagerTrader;)Lnet/minecraft/server/NavigationAbstract; access$400
	eP ()Z showProgressBar
	eQ ()Lnet/minecraft/server/SoundEffect; getNotifyTradeSound
	eW ()V updateTrades
	eX ()I getDespawnDelay
	eY ()V maybeDespawn
	eZ ()Lnet/minecraft/server/BlockPosition; getWanderTarget
	f (Lnet/minecraft/server/EntityVillagerTrader;)Z lambda$registerGoals$1
	g (Lnet/minecraft/server/BlockPosition;)V setWanderTarget
	g (Lnet/minecraft/server/EntityVillagerTrader;)Z lambda$registerGoals$0
	h (D)Z removeWhenFarAway
	k ()V aiStep
	o ()V registerGoals
	t (Z)Lnet/minecraft/server/SoundEffect; getTradeUpdatedSound
	u (I)V setDespawnDelay
net/minecraft/server/EnumHand net/minecraft/world/InteractionHand
	c $VALUES
dku$a net/minecraft/client/gui/MapRenderer$MapInstance
	a this$0
	b data
	c texture
	d renderType
	a ()V updateTexture
	a (Ldfj;Ldzy;ZI)V draw
	a (Ldku$a;)V access$000
	a (Ldku$a;Ldfj;Ldzy;ZI)V access$100
	b (Ldku$a;)Lnet/minecraft/server/WorldMap; access$300
dkd$1 net/minecraft/client/RecipeBookCategories$1
	a $SwitchMap$net$minecraft$world$inventory$RecipeBookType
net/minecraft/server/PacketLoginInStart net/minecraft/network/protocol/login/ServerboundHelloPacket
	a gameProfile
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginInListener;)V handle
	b ()Lcom/mojang/authlib/GameProfile; getGameProfile
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/WorldGenFeatureChoiceConfiguration net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration
	a CODEC
	b featureTrue
	c featureFalse
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/WorldGenFeatureChoiceConfiguration;)Ljava/util/function/Supplier; lambda$null$1
	an_ ()Ljava/util/stream/Stream; getFeatures
	b (Lnet/minecraft/server/WorldGenFeatureChoiceConfiguration;)Ljava/util/function/Supplier; lambda$null$0
net/minecraft/server/WorldGenFeatureIceSnow net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
mv$1 net/minecraft/nbt/TagType$1
	a val$id
	a ()Ljava/lang/String; getName
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagEnd; load
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; load
dur$a net/minecraft/client/model/ParrotModel$State
	a FLYING
	b STANDING
	c SITTING
	d PARTY
	e ON_SHOULDER
	f $VALUES
net/minecraft/server/PacketPlayOutBlockBreakAnimation net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket
	a id
	b pos
	c progress
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/BlockPosition; getPos
	d ()I getProgress
ch$a net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance
	a recipe
	a (Lnet/minecraft/server/IRecipe;)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
net/minecraft/server/WorldGenFeatureDecoratorNoiseConfiguration net/minecraft/world/level/levelgen/feature/configurations/NoiseDependantDecoratorConfiguration
	a CODEC
	c noiseLevel
	d belowNoise
	e aboveNoise
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lnet/minecraft/server/WorldGenFeatureDecoratorNoiseConfiguration;)Ljava/lang/Integer; lambda$null$2
	b (Lnet/minecraft/server/WorldGenFeatureDecoratorNoiseConfiguration;)Ljava/lang/Integer; lambda$null$1
	c (Lnet/minecraft/server/WorldGenFeatureDecoratorNoiseConfiguration;)Ljava/lang/Double; lambda$null$0
net/minecraft/server/WorldGenNetherFossil net/minecraft/world/level/levelgen/structure/NetherFossilPieces
	a FOSSILS
	a (Lnet/minecraft/server/DefinedStructureManager;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)V addPieces
bv$1 net/minecraft/advancements/critereon/LightPredicate$1
net/minecraft/server/DataConverterMemoryExpiry net/minecraft/util/datafix/fixes/MemoryExpiryDataFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; updateMemoryEntry
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateBrain
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateMemories
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; wrapMemoryValue
net/minecraft/server/BlockGrowingTop net/minecraft/world/level/block/GrowingPlantHeadBlock
	d AGE
	e growPerTickProbability
	a (Lcef$a;)V createBlockStateDefinition
	a (Ljava/util/Random;)I getBlocksToGrowWhenBonemealed
	a (Lnet/minecraft/server/GeneratorAccess;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	a_ (Lnet/minecraft/server/IBlockData;)Z isRandomlyTicking
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c ()Lnet/minecraft/server/BlockGrowingTop; getHeadBlock
	h (Lnet/minecraft/server/IBlockData;)Z canGrowInto
net/minecraft/server/Position net/minecraft/core/PositionImpl
	a x
	b y
	c z
	a ()D x
	b ()D y
	c ()D z
net/minecraft/server/PathfinderGoalRandomLookaround net/minecraft/world/entity/ai/goal/RandomLookAroundGoal
	a mob
	b relX
	c relZ
	d lookTime
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
net/minecraft/server/LootEnchantLevel net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction
	a levels
	b treasure
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootEnchantLevel;)Lnet/minecraft/server/LootValue; access$100
	a (Lnet/minecraft/server/LootValue;)Ldaa$a; enchantWithLevels
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
	b (Lnet/minecraft/server/LootEnchantLevel;)Z access$200
net/minecraft/server/EnumBlockMirror net/minecraft/world/level/block/Mirror
	d rotation
	e $VALUES
	a ()Lnet/minecraft/server/PointGroupO; rotation
	a (II)I mirror
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumBlockRotation; getRotation
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; mirror
net/minecraft/server/EntityZombie$GroupDataZombie net/minecraft/world/entity/monster/Zombie$ZombieGroupData
	a isBaby
	b canSpawnJockey
net/minecraft/server/ItemFireworks$EffectType net/minecraft/world/item/FireworkRocketItem$Shape
	f BY_ID
	g id
	h name
	i $VALUES
	a ()I getId
	a (I)Lnet/minecraft/server/ItemFireworks$EffectType; byId
	a (Lnet/minecraft/server/ItemFireworks$EffectType;)I lambda$static$0
	b ()Ljava/lang/String; getName
	b (I)[Lnet/minecraft/server/ItemFireworks$EffectType; lambda$static$1
eng$a net/minecraft/client/sounds/LoopingAudioStream$AudioStreamProvider
ebd$a net/minecraft/client/renderer/block/model/ItemTransform$Deserializer
	a DEFAULT_ROTATION
	b DEFAULT_TRANSLATION
	c DEFAULT_SCALE
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lebd; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/server/Vector3fa;)Lnet/minecraft/server/Vector3fa; getVector3f
net/minecraft/server/GenLayerZoomVoronoiFixed net/minecraft/world/level/biome/FuzzyOffsetConstantColumnBiomeZoomer
	b $VALUES
	a (JIIILnet/minecraft/server/BiomeManager$Provider;)Lnet/minecraft/server/BiomeBase; getBiome
net/minecraft/server/TileEntityCommand net/minecraft/world/level/block/entity/CommandBlockEntity
	a powered
	b auto
	c conditionMet
	g sendToClient
	h commandBlock
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Z)V setPowered
	b (Z)V setAutomatic
	c (Z)V setSendToClient
	f ()Z isPowered
	g ()Z isAutomatic
	h ()V onModeSwitch
	j ()Z wasConditionMet
	k ()Z markConditionMet
	l ()Z isSendToClient
	m ()Lnet/minecraft/server/TileEntityCommand$Type; getMode
	r ()V clearRemoved
	t ()Z onlyOpCanSetNbt
	x ()Z isConditional
	y ()V scheduleTick
net/minecraft/server/RecipeMapExtend net/minecraft/world/item/crafting/MapExtendingRecipe
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/WorldMap;)Z isExplorationMap
	af_ ()Z isSpecial
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
bvb$2$1 net/minecraft/world/level/block/ChestBlock$2$1
	a val$first
	b val$second
	c val$container
	d this$0
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
eng$b net/minecraft/client/sounds/LoopingAudioStream$NoCloseBuffer
ear$1 net/minecraft/client/renderer/block/ModelBlockRenderer$1
	a $SwitchMap$net$minecraft$core$Direction
bdl$1 net/minecraft/world/entity/monster/Illusioner$1
aaz$1 net/minecraft/server/network/ServerHandshakePacketListenerImpl$1
	a $SwitchMap$net$minecraft$network$ConnectionProtocol
dpk$b net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeSlot
	a this$0
	b icon
	c isSelected
	a (Ldfj;Lejv;)V drawSlot
	a (Ldpk$b;)Ldpk$a; access$100
	b (Ldfj;IIF)V renderButton
	b (Ldfj;Lejv;)V drawSelection
	e (Z)V setSelected
	g ()Z isHovered
dpk$a net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon
	a CREATIVE
	b SURVIVAL
	c ADVENTURE
	d SPECTATOR
	e VALUES
	f name
	g command
	h renderStack
	i $VALUES
	a ()Lnet/minecraft/server/IChatBaseComponent; getName
	a (Ldpk$a;)Ljava/lang/String; access$200
	a (Ldpk$a;Lefg;II)V access$600
	a (Lefg;II)V drawIcon
	a (Lnet/minecraft/server/EnumGamemode;)Ljava/util/Optional; access$000
	b ()Ljava/lang/String; getCommand
	b (Ldpk$a;)Ljava/util/Optional; access$300
	b (Lnet/minecraft/server/EnumGamemode;)Ljava/util/Optional; getFromGameType
	c ()Ljava/util/Optional; getNext
	c (Ldpk$a;)Lnet/minecraft/server/IChatBaseComponent; access$400
net/minecraft/server/GameTestHarnessBatch net/minecraft/gametest/framework/GameTestBatch
	a name
	b testFunctions
	c beforeBatchFunction
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/WorldServer;)V runBeforeBatchFunction
	b ()Ljava/util/Collection; getTestFunctions
doy$1 net/minecraft/client/gui/screens/achievement/StatsScreen$1
net/minecraft/server/LootItemFunction net/minecraft/world/level/storage/loot/functions/LootItemFunction
	a (Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)Ljava/util/function/Consumer; decorate
	a (Ljava/util/function/Consumer;Ljava/util/function/BiFunction;Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/ItemStack;)V lambda$decorate$0
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
net/minecraft/server/BlockAir net/minecraft/world/level/block/AirBlock
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
net/minecraft/server/NoiseGenerator3 net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise
	a noiseLevels
	b highestFreqValueFactor
	c highestFreqInputFactor
	a (DDDD)D getSurfaceNoiseValue
	a (DDZ)D getValue
net/minecraft/server/EntitySilverfish net/minecraft/world/entity/monster/Silverfish
	b friendsGoal
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	aB ()Z isMovementNoisy
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkSliverfishSpawnRules
	ba ()D getMyRidingOffset
	dB ()Lnet/minecraft/server/EnumMonsterType; getMobType
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	j ()V tick
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	n (F)V setYBodyRot
	o ()V registerGoals
net/minecraft/server/ChatTypeAdapterFactory net/minecraft/util/LowerCaseEnumTypeAdapterFactory
	a (Ljava/lang/Object;)Ljava/lang/String; toLowercase
	a (Lnet/minecraft/server/ChatTypeAdapterFactory;Ljava/lang/Object;)Ljava/lang/String; access$000
dur$1 net/minecraft/client/model/ParrotModel$1
	a $SwitchMap$net$minecraft$client$model$ParrotModel$State
ny$c net/minecraft/network/chat/NbtComponent$StorageNbtComponent
	g id
	a (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/stream/Stream; getData
	d ()Lnet/minecraft/server/ChatBaseComponent; plainCopy
	g ()Lnet/minecraft/server/IChatMutableComponent; plainCopy
	j ()Lnet/minecraft/server/MinecraftKey; getId
	k ()Lny$c; plainCopy
net/minecraft/server/EntityPiglin net/minecraft/world/entity/monster/piglin/Piglin
	bo MEMORY_TYPES
	bp DATA_BABY_ID
	bq DATA_IS_CHARGING_CROSSBOW
	br DATA_IS_DANCING
	bs SPEED_MODIFIER_BABY_UUID
	bt SPEED_MODIFIER_BABY
	bu inventory
	d SENSOR_TYPES
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L ()Z shouldDespawnInPeaceful
	N ()V customServerAiStep
	U_ ()V onCrossbowAttackPerformed
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/server/BehaviorController; makeBrain
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/Entity;Z)Z startRiding
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IProjectile;F)V shootCrossbowProjectile
	a (Lnet/minecraft/server/ItemProjectileWeapon;)Z canFireProjectileWeapon
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z canReplaceCurrentItem
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/SoundEffect;)V playSound
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Z)V setBaby
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/Entity; getTopPassenger
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/EntityItem;)V pickUpItem
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkPiglinSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Z)V setChargingCrossbow
	bb ()D getPassengersRidingOffset
	c (Lnet/minecraft/server/WorldServer;)V finishConversion
	cI ()Lnet/minecraft/server/BehaviorController; getBrain
	cJ ()Larc$b; brainProvider
	d (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	d (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V maybeWearArmor
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eN ()Lnet/minecraft/server/EntityPiglinArmPose; getArmPose
	eP ()V playConvertedSound
	eS ()Lnet/minecraft/server/IInventory; getInventory
	eT ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eU ()Z isDancing
	eV ()Lnet/minecraft/server/ItemStack; createSpawnWeapon
	eW ()Z isChargingCrossbow
	h (D)Z removeWhenFarAway
	i (Lnet/minecraft/server/ItemStack;)Z wantsToPickUp
	k (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; addToInventory
	l (Lnet/minecraft/server/ItemStack;)Z canAddToInventory
	m ()Z canHunt
	m (Lnet/minecraft/server/ItemStack;)V holdInMainHand
	n (Lnet/minecraft/server/ItemStack;)V holdInOffHand
	o (Lnet/minecraft/server/ItemStack;)Z canReplaceCurrentItem
	u (Z)V setDancing
	v (Z)V setCannotHunt
	w_ ()Z isBaby
ny$b net/minecraft/network/chat/NbtComponent$EntityNbtComponent
	g selectorPattern
	h compiledSelector
	a (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/stream/Stream; getData
	d ()Lnet/minecraft/server/ChatBaseComponent; plainCopy
	d (Ljava/lang/String;)Lnet/minecraft/server/EntitySelector; compileSelector
	g ()Lnet/minecraft/server/IChatMutableComponent; plainCopy
	j ()Ljava/lang/String; getSelector
	k ()Lny$b; plainCopy
ny$a net/minecraft/network/chat/NbtComponent$BlockNbtComponent
	g posPattern
	h compiledPos
	a (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/stream/Stream; getData
	d ()Lnet/minecraft/server/ChatBaseComponent; plainCopy
	d (Ljava/lang/String;)Lnet/minecraft/server/IVectorPosition; compilePos
	g ()Lnet/minecraft/server/IChatMutableComponent; plainCopy
	j ()Ljava/lang/String; getPos
	k ()Lny$a; plainCopy
cgo$1 net/minecraft/world/level/chunk/UpgradeData$1
net/minecraft/server/StructureFeature net/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature
	a DIRECT_CODEC
	b CODEC
	c LIST_CODEC
	d feature
	e config
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;Lnet/minecraft/server/DefinedStructureManager;JLnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BiomeBase;ILnet/minecraft/server/StructureSettingsFeature;)Lnet/minecraft/server/StructureStart; generate
	a (Lnet/minecraft/server/StructureFeature;)Lnet/minecraft/server/StructureGenerator; lambda$static$0
net/minecraft/server/DefinedStructureProcessorNop net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
	b ()Lnet/minecraft/server/DefinedStructureProcessorNop; lambda$static$0
net/minecraft/server/PathfinderGoalUseItem net/minecraft/world/entity/ai/goal/UseItemGoal
	a mob
	b item
	c canUseSelector
	d finishUsingSound
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
net/minecraft/server/MethodProfilerResultsField net/minecraft/util/profiling/ResultField
	a percentage
	b globalPercentage
	c count
	d name
	a ()I getColor
	a (Lnet/minecraft/server/MethodProfilerResultsField;)I compareTo
net/minecraft/server/LootItemConditionSurvivesExplosion net/minecraft/world/level/storage/loot/predicates/ExplosionCondition
	a INSTANCE
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lnet/minecraft/server/LootItemConditionType; getType
	c ()Ldbl$a; survivesExplosion
	d ()Lnet/minecraft/server/LootItemConditionSurvivesExplosion; access$000
	e ()Lnet/minecraft/server/LootItemCondition; lambda$survivesExplosion$0
net/minecraft/server/MinecraftEncryption net/minecraft/util/Crypt
	a LOGGER
	a ()Ljavax/crypto/SecretKey; generateSecretKey
	a (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; setupCipher
	a (ILjava/security/Key;)Ljavax/crypto/Cipher; getCipher
	a (ILjava/security/Key;[B)[B cipherData
	a (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B digestData
	a (Ljava/lang/String;[[B)[B digestData
	a (Ljava/security/Key;[B)[B encryptUsingKey
	a (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; decryptByteToSecretKey
	a ([B)Ljava/security/PublicKey; byteToPublicKey
	b ()Ljava/security/KeyPair; generateKeyPair
	b (Ljava/security/Key;[B)[B decryptUsingKey
net/minecraft/server/CustomFunction net/minecraft/commands/CommandFunction
	a entries
	b id
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lnet/minecraft/server/CustomFunction;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lnet/minecraft/server/MinecraftKey;Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/List;)Lnet/minecraft/server/CustomFunction; fromLines
	b ()[Lcy$c; getEntries
net/minecraft/server/PacketDecrypter net/minecraft/network/CipherDecoder
	a cipher
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V decode
dbi$a net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionInverted;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionInverted; deserialize
bhf$a net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition
	a time
	b activity
	a ()I getTime
	b ()Lnet/minecraft/server/Activity; getActivity
net/minecraft/server/HeightMap$Type net/minecraft/world/level/levelgen/Heightmap$Types
	g CODEC
	h serializationKey
	i usage
	j isOpaque
	k REVERSE_LOOKUP
	l $VALUES
	a ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;)Lnet/minecraft/server/HeightMap$Type; getFromKey
	a (Ljava/util/HashMap;)V lambda$static$2
	a (Lnet/minecraft/server/IBlockData;)Z lambda$static$1
	b ()Ljava/lang/String; getSerializationKey
	b (Lnet/minecraft/server/IBlockData;)Z lambda$static$0
	c ()Z sendToClient
	d ()Z keepAfterWorldgen
	e ()Ljava/util/function/Predicate; isOpaque
aet$a net/minecraft/util/CsvOutput$Builder
	a headers
	a (Ljava/io/Writer;)Lnet/minecraft/server/CSVWriter; build
	a (Ljava/lang/String;)Laet$a; addColumn
net/minecraft/server/BlockCoralDead net/minecraft/world/level/block/BaseCoralPlantBlock
	a SHAPE
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
net/minecraft/server/AttributeDefaults net/minecraft/world/entity/ai/attributes/DefaultAttributes
	a LOGGER
	b SUPPLIERS
	a ()V validate
	a (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/AttributeProvider; getSupplier
	a (Lnet/minecraft/server/MinecraftKey;)V lambda$validate$2
	b (Lnet/minecraft/server/EntityTypes;)Z hasSupplier
	c (Lnet/minecraft/server/EntityTypes;)Z lambda$validate$1
	d (Lnet/minecraft/server/EntityTypes;)Z lambda$validate$0
net/minecraft/server/RecipeBlasting net/minecraft/world/item/crafting/BlastingRecipe
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
net/minecraft/server/ISteerable net/minecraft/world/entity/ItemSteerable
	N_ ()F getSteeringSpeed
	O_ ()Z boost
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/SaddleStorage;Lnet/minecraft/server/Vec3D;)Z travel
	a_ (Lnet/minecraft/server/Vec3D;)V travelWithInput
net/minecraft/server/StructureAbstract net/minecraft/world/level/levelgen/structure/BeardedStructureStart
	b ()V calculateBoundingBox
net/minecraft/server/LootValue net/minecraft/world/level/storage/loot/RandomIntGenerator
	a CONSTANT
	b UNIFORM
	c BINOMIAL
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (Ljava/util/Random;)I getInt
me$1 net/minecraft/nbt/DoubleTag$1
	a ()Ljava/lang/String; getName
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagDouble; load
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; load
	c ()Z isValue
net/minecraft/server/ArgumentSerializerVoid net/minecraft/commands/synchronization/EmptyArgumentSerializer
	a constructor
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
bsw$a net/minecraft/world/level/biome/BiomeSpecialEffects$Builder
	a fogColor
	b waterColor
	c waterFogColor
	d skyColor
	e foliageColorOverride
	f grassColorOverride
	g grassColorModifier
	h ambientParticle
	i ambientLoopSoundEvent
	j ambientMoodSettings
	k ambientAdditionsSettings
	l backgroundMusic
	a ()Lnet/minecraft/server/BiomeFog; build
	a (I)Lbsw$a; fogColor
	a (Lnet/minecraft/server/BiomeFog$GrassColor;)Lbsw$a; grassColorModifier
	a (Lnet/minecraft/server/BiomeParticles;)Lbsw$a; ambientParticle
	a (Lnet/minecraft/server/CaveSound;)Lbsw$a; ambientAdditionsSound
	a (Lnet/minecraft/server/CaveSoundSettings;)Lbsw$a; ambientMoodSound
	a (Lnet/minecraft/server/Music;)Lbsw$a; backgroundMusic
	a (Lnet/minecraft/server/SoundEffect;)Lbsw$a; ambientLoopSound
	b ()Ljava/lang/IllegalStateException; lambda$build$3
	b (I)Lbsw$a; waterColor
	c ()Ljava/lang/IllegalStateException; lambda$build$2
	c (I)Lbsw$a; waterFogColor
	d ()Ljava/lang/IllegalStateException; lambda$build$1
	d (I)Lbsw$a; skyColor
	e ()Ljava/lang/IllegalStateException; lambda$build$0
	e (I)Lbsw$a; foliageColorOverride
	f (I)Lbsw$a; grassColorOverride
dxi$1 net/minecraft/client/particle/DustParticle$1
net/minecraft/server/PathfinderGoalFollowParent net/minecraft/world/entity/ai/goal/FollowParentGoal
	a animal
	b parent
	c speedModifier
	d timeToRecalcPath
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PacketPlayInClientCommand net/minecraft/network/protocol/game/ServerboundClientCommandPacket
	a action
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/PacketPlayInClientCommand$EnumClientCommand; getAction
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
dhb$a com/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType
	a WORLD_TEMPLATE
	b MINIGAME
	c ADVENTUREMAP
	d EXPERIENCE
	e INSPIRATION
	f $VALUES
net/minecraft/server/WorldGenFeatureRadiusConfiguration net/minecraft/world/level/levelgen/feature/configurations/ReplaceSphereConfiguration
	a CODEC
	b targetState
	c replaceState
	d radius
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lnet/minecraft/server/WorldGenFeatureRadiusConfiguration;)Lnet/minecraft/server/IntSpread; lambda$null$2
	b ()Lnet/minecraft/server/IntSpread; radius
	b (Lnet/minecraft/server/WorldGenFeatureRadiusConfiguration;)Lnet/minecraft/server/IBlockData; lambda$null$1
	c (Lnet/minecraft/server/WorldGenFeatureRadiusConfiguration;)Lnet/minecraft/server/IBlockData; lambda$null$0
net/minecraft/server/EntityZombieVillager net/minecraft/world/entity/monster/ZombieVillager
	CONVERTING DATA_CONVERTING_ID
	bp gossips
	bq tradeOffers
	br villagerXp
	c DATA_VILLAGER_DATA
	conversionPlayer conversionStarter
	conversionTime villagerConversionTime
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (I)V setVillagerXp
	a (Lnet/minecraft/server/NBTBase;)V setGossips
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTBase;)V lambda$addAdditionalSaveData$0
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/WorldServer;)V finishConversion
	dG ()F getVoicePitch
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eL ()Lnet/minecraft/server/SoundEffect; getStepSound
	eM ()Lnet/minecraft/server/ItemStack; getSkull
	eN ()Z convertsInWater
	eY ()I getVillagerXp
	h (D)Z removeWhenFarAway
	j ()V tick
	setOffers (Lnet/minecraft/server/NBTTagCompound;)V setTradeOffers
	startConversion (Ljava/util/UUID;I)V startConverting
net/minecraft/server/EntityEgg net/minecraft/world/entity/projectile/ThrownEgg
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/MovingObjectPositionEntity;)V onHitEntity
	h ()Lnet/minecraft/server/Item; getDefaultItem
net/minecraft/server/IMojangStatistics net/minecraft/world/SnooperPopulator
	T ()Z isSnooperEnabled
	a (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooper
	b (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooperInitial
net/minecraft/server/WorldGenFeatureDeltaConfiguration net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration
	a CODEC
	b contents
	c rim
	d size
	e rimSize
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lnet/minecraft/server/WorldGenFeatureDeltaConfiguration;)Lnet/minecraft/server/IntSpread; lambda$null$3
	b ()Lnet/minecraft/server/IBlockData; contents
	b (Lnet/minecraft/server/WorldGenFeatureDeltaConfiguration;)Lnet/minecraft/server/IntSpread; lambda$null$2
	c ()Lnet/minecraft/server/IBlockData; rim
	c (Lnet/minecraft/server/WorldGenFeatureDeltaConfiguration;)Lnet/minecraft/server/IBlockData; lambda$null$1
	d ()Lnet/minecraft/server/IntSpread; size
	d (Lnet/minecraft/server/WorldGenFeatureDeltaConfiguration;)Lnet/minecraft/server/IBlockData; lambda$null$0
	e ()Lnet/minecraft/server/IntSpread; rimSize
net/minecraft/server/DragonControllerFly net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase
	b firstTick
	c currentPath
	d targetLocation
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
eoi$a net/minecraft/realms/RepeatedNarrator$Params
	a narration
	b rateLimiter
	a (Leoi$a;)Lcom/google/common/util/concurrent/RateLimiter; access$000
	b (Leoi$a;)Ljava/lang/String; access$100
bv$a net/minecraft/advancements/critereon/LightPredicate$Builder
	a composite
	a ()Lbv$a; light
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lbv$a; setComposite
	b ()Lnet/minecraft/server/CriterionConditionLight; build
net/minecraft/server/PacketPlayInFlying net/minecraft/network/protocol/game/ServerboundMovePlayerPacket
	f onGround
	hasLook hasRot
	pitch xRot
	yaw yRot
	a (D)D getX
	a (F)F getYRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	a (Z)V setHasPosition
	b ()Z isOnGround
	b (D)D getY
	b (F)F getXRot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z hasPosition
	c (D)D getZ
	d ()Z hasRotation
as$a net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance
	a level
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Las$a; constructedBeacon
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/TileEntityBeacon;)Z matches
	c ()Las$a; constructedBeacon
net/minecraft/server/SensorVillagerHostiles net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor
	a ACCEPTABLE_DISTANCE_FROM_HOSTILES
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/EntityLiving;)Ljava/util/Optional; getNearestHostile
	a (Lnet/minecraft/server/EntityLiving;Ljava/util/List;)Ljava/util/Optional; lambda$getNearestHostile$2
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)I compareMobDistance
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	b (Lnet/minecraft/server/EntityLiving;)Ljava/util/Optional; getVisibleEntities
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z isClose
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)I lambda$null$1
	c (Lnet/minecraft/server/EntityLiving;)Z isHostile
	c (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$null$0
gw$24$1 net/minecraft/core/dispenser/DispenseItemBehavior$8$1
	b this$0
	a ()F getUncertainty
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityPotion;)V lambda$getProjectile$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
	b ()F getPower
net/minecraft/server/Music net/minecraft/sounds/Music
	a CODEC
	b event
	c minDelay
	d maxDelay
	e replaceCurrentMusic
	a ()Lnet/minecraft/server/SoundEffect; getEvent
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lnet/minecraft/server/Music;)Ljava/lang/Boolean; lambda$null$3
	b ()I getMinDelay
	b (Lnet/minecraft/server/Music;)Ljava/lang/Integer; lambda$null$2
	c ()I getMaxDelay
	c (Lnet/minecraft/server/Music;)Ljava/lang/Integer; lambda$null$1
	d ()Z replaceCurrentMusic
	d (Lnet/minecraft/server/Music;)Lnet/minecraft/server/SoundEffect; lambda$null$0
net/minecraft/server/GameRules net/minecraft/world/level/GameRules
	ANNOUNCE_ADVANCEMENTS RULE_ANNOUNCE_ADVANCEMENTS
	COMMAND_BLOCK_OUTPUT RULE_COMMANDBLOCKOUTPUT
	DISABLE_ELYTRA_MOVEMENT_CHECK RULE_DISABLE_ELYTRA_MOVEMENT_CHECK
	DISABLE_RAIDS RULE_DISABLE_RAIDS
	DO_DAYLIGHT_CYCLE RULE_DAYLIGHT
	DO_ENTITY_DROPS RULE_DOENTITYDROPS
	DO_FIRE_TICK RULE_DOFIRETICK
	DO_IMMEDIATE_RESPAWN RULE_DO_IMMEDIATE_RESPAWN
	DO_INSOMNIA RULE_DOINSOMNIA
	DO_LIMITED_CRAFTING RULE_LIMITED_CRAFTING
	DO_MOB_LOOT RULE_DOMOBLOOT
	DO_MOB_SPAWNING RULE_DOMOBSPAWNING
	DO_PATROL_SPAWNING RULE_DO_PATROL_SPAWNING
	DO_TILE_DROPS RULE_DOBLOCKDROPS
	DO_TRADER_SPAWNING RULE_DO_TRADER_SPAWNING
	DO_WEATHER_CYCLE RULE_WEATHER_CYCLE
	DROWNING_DAMAGE RULE_DROWNING_DAMAGE
	FALL_DAMAGE RULE_FALL_DAMAGE
	FIRE_DAMAGE RULE_FIRE_DAMAGE
	FORGIVE_DEAD_PLAYERS RULE_FORGIVE_DEAD_PLAYERS
	H LOGGER
	I GAME_RULE_TYPES
	J rules
	KEEP_INVENTORY RULE_KEEPINVENTORY
	LOG_ADMIN_COMMANDS RULE_LOGADMINCOMMANDS
	MAX_COMMAND_CHAIN_LENGTH RULE_MAX_COMMAND_CHAIN_LENGTH
	MAX_ENTITY_CRAMMING RULE_MAX_ENTITY_CRAMMING
	MOB_GRIEFING RULE_MOBGRIEFING
	NATURAL_REGENERATION RULE_NATURAL_REGENERATION
	RANDOM_TICK_SPEED RULE_RANDOMTICKING
	REDUCED_DEBUG_INFO RULE_REDUCEDDEBUGINFO
	SEND_COMMAND_FEEDBACK RULE_SENDCOMMANDFEEDBACK
	SHOW_DEATH_MESSAGES RULE_SHOWDEATHMESSAGES
	SPAWN_RADIUS RULE_SPAWN_RADIUS
	SPECTATORS_GENERATE_CHUNKS RULE_SPECTATORSGENERATECHUNKS
	UNIVERSAL_ANGER RULE_UNIVERSAL_ANGER
	a ()Lnet/minecraft/server/NBTTagCompound; createTag
	a (Lcom/mojang/serialization/DynamicLike;)V loadFromTag
	a (Lcom/mojang/serialization/DynamicLike;Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleValue;)V lambda$loadFromTag$5
	a (Ljava/lang/String;Lnet/minecraft/server/GameRules$GameRuleCategory;Lnet/minecraft/server/GameRules$GameRuleDefinition;)Lnet/minecraft/server/GameRules$GameRuleKey; register
	a (Ljava/util/Map$Entry;)Lnet/minecraft/server/GameRules$GameRuleValue; lambda$copy$6
	a (Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules;Lnet/minecraft/server/MinecraftServer;)V assignCap
	a (Lnet/minecraft/server/GameRules$GameRuleVisitor;)V visitGameRuleTypes
	a (Lnet/minecraft/server/GameRules$GameRuleVisitor;Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleDefinition;)V callVisitorCap
	a (Lnet/minecraft/server/GameRules;Lnet/minecraft/server/MinecraftServer;)V assignFrom
	a (Lnet/minecraft/server/GameRules;Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/GameRules$GameRuleKey;)V lambda$assignFrom$8
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/GameRules$GameRuleBoolean;)V lambda$static$2
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleValue;)V lambda$createTag$4
	b ()Lnet/minecraft/server/GameRules; copy
	b (Ljava/util/Map$Entry;)Lnet/minecraft/server/GameRules$GameRuleValue; lambda$new$3
	b (Lnet/minecraft/server/GameRules$GameRuleVisitor;Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleDefinition;)V lambda$visitGameRuleTypes$7
	b (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/GameRules$GameRuleBoolean;)V lambda$static$1
	c ()Lorg/apache/logging/log4j/Logger; access$500
	d (Lnet/minecraft/server/GameRules$GameRuleKey;)Ljava/lang/String; lambda$static$0
	get (Lnet/minecraft/server/GameRules$GameRuleKey;)Lnet/minecraft/server/GameRules$GameRuleValue; getRule
net/minecraft/server/ParticleParam net/minecraft/core/particles/ParticleOptions
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToNetwork
	getParticle ()Lnet/minecraft/server/Particle; getType
baj$1 net/minecraft/world/entity/animal/Parrot$1
	a (Lnet/minecraft/server/EntityInsentient;)Z test
net/minecraft/server/EntityDrowned net/minecraft/world/entity/monster/Drowned
	d searchingForLand
	navigationLand groundNavigation
	navigationWater waterNavigation
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityDrowned;)Z access$100
	a (Lnet/minecraft/server/EntityDrowned;Lnet/minecraft/server/NavigationAbstract;)Lnet/minecraft/server/NavigationAbstract; access$002
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkDrownedSpawnRules
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z isDeepEnoughToSpawn
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z canReplaceCurrentItem
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	aI ()V updateSwimming
	au ()Lnet/minecraft/server/SoundEffect; getSwimSound
	b (Lnet/minecraft/server/EntityDrowned;)Z access$200
	bU ()Z isPushedByFluid
	c (Lnet/minecraft/server/EntityDrowned;)Z access$300
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Z supportsBreakDoorGoal
	eL ()Lnet/minecraft/server/SoundEffect; getStepSound
	eM ()Lnet/minecraft/server/ItemStack; getSkull
	eN ()Z convertsInWater
	eO ()Z closeToNextPos
	eW ()Z wantsToSwim
	g (Lnet/minecraft/server/Vec3D;)V travel
	i (Lnet/minecraft/server/EntityLiving;)Z okTarget
	m ()V addBehaviourGoals
	t (Z)V setSearchingForLand
net/minecraft/server/EntityGhast$PathfinderGoalGhastIdleMove net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal
	a ghast
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/server/CriterionTriggerConsumeItem net/minecraft/advancements/critereon/ConsumeItemTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lat$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;)V trigger
	a (Lnet/minecraft/server/ItemStack;Lat$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/PacketPlayInCustomPayload net/minecraft/network/protocol/game/ServerboundCustomPayloadPacket
	a BRAND
	tag identifier
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getIdentifier
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketDataSerializer; getData
net/minecraft/server/BlockPumpkinCarved net/minecraft/world/level/block/CarvedPumpkinBlock
	a FACING
	b snowGolemBase
	c snowGolemFull
	d ironGolemBase
	e ironGolemFull
	f PUMPKINS_PREDICATE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSpawnGolem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V trySpawnGolem
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c ()Lnet/minecraft/server/ShapeDetector; getOrCreateSnowGolemBase
	e ()Lnet/minecraft/server/ShapeDetector; getOrCreateIronGolemBase
	getIronGolemShape ()Lnet/minecraft/server/ShapeDetector; getOrCreateIronGolemFull
	getSnowmanShape ()Lnet/minecraft/server/ShapeDetector; getOrCreateSnowGolemFull
	h (Lnet/minecraft/server/IBlockData;)Z lambda$static$0
net/minecraft/server/ChatHoverable net/minecraft/network/chat/HoverEvent
	a LOGGER
	b action
	c value
	a ()Lnet/minecraft/server/ChatHoverable$EnumHoverAction; getAction
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ChatHoverable; deserialize
	a (Lnet/minecraft/server/ChatHoverable$EnumHoverAction;)Ljava/lang/Object; getValue
	b ()Lcom/google/gson/JsonObject; serialize
	c ()Lorg/apache/logging/log4j/Logger; access$100
net/minecraft/server/WorldGenDecoratorHeightmapSpreadDouble net/minecraft/world/level/levelgen/placement/HeightmapDoubleDecorator
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;)Lnet/minecraft/server/HeightMap$Type; type
net/minecraft/server/WorldGenFeatureBastionPieces net/minecraft/data/worldgen/BastionPieces
	a START
	a ()V bootstrap
net/minecraft/server/IResourceManager net/minecraft/server/packs/resources/ResourceManager
	a ()Ljava/util/Set; getNamespaces
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; listResources
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/IResource; getResource
	b ()Ljava/util/stream/Stream; listPacks
	b (Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Lnet/minecraft/server/MinecraftKey;)Ljava/util/List; getResources
cuw$a net/minecraft/world/level/material/LavaFluid$Flowing
	a (Lcef$a;)V createFluidStateDefinition
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d (Lnet/minecraft/server/Fluid;)I getAmount
cuw$b net/minecraft/world/level/material/LavaFluid$Source
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d (Lnet/minecraft/server/Fluid;)I getAmount
net/minecraft/server/PathfinderGoalBreed net/minecraft/world/entity/ai/goal/BreedGoal
	b level
	d PARTNER_TARGETING
	e partnerClass
	f loveTime
	g speedModifier
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
	g ()V breed
	h ()Lnet/minecraft/server/EntityAnimal; getFreePartner
dxi$a net/minecraft/client/particle/DustParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleParamRedstone;Ldwl;DDDDDD)Ldxy; createParticle
be$a net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder
	a isOnFire
	b isCrouching
	c isSprinting
	d isSwimming
	e isBaby
	a ()Lbe$a; flags
	a (Ljava/lang/Boolean;)Lbe$a; setOnFire
	b ()Lnet/minecraft/server/CriterionConditionEntityFlags; build
	b (Ljava/lang/Boolean;)Lbe$a; setCrouching
	c (Ljava/lang/Boolean;)Lbe$a; setSprinting
	d (Ljava/lang/Boolean;)Lbe$a; setSwimming
	e (Ljava/lang/Boolean;)Lbe$a; setIsBaby
net/minecraft/server/IBlockAccess net/minecraft/world/level/BlockGetter
	J ()I getMaxLightLevel
	a (Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/stream/Stream; getBlockStates
	a (Lnet/minecraft/server/RayTrace;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object; traverseBlocks
	a (Lnet/minecraft/server/RayTrace;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MovingObjectPositionBlock; lambda$clip$0
	a (Lnet/minecraft/server/VoxelShape;Ljava/util/function/Supplier;)D getBlockFloorHeight
	b (Lnet/minecraft/server/RayTrace;)Lnet/minecraft/server/MovingObjectPositionBlock; lambda$clip$1
	f (Lnet/minecraft/server/BlockPosition;)I getLightBlock
	g (Lnet/minecraft/server/BlockPosition;)I getLightEmission
	getBuildHeight ()I getMaxBuildHeight
	getFluid (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	getTileEntity (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	getType (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	h (Lnet/minecraft/server/BlockPosition;)D getBlockFloorHeight
	j (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; lambda$getBlockFloorHeight$2
	rayTrace (Lnet/minecraft/server/RayTrace;)Lnet/minecraft/server/MovingObjectPositionBlock; clip
	rayTrace (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/MovingObjectPositionBlock; clipWithInteractionOverride
net/minecraft/server/ArgumentChatComponent net/minecraft/commands/arguments/ComponentArgument
	a ERROR_INVALID_JSON
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentChatComponent; textComponent
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IChatBaseComponent; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; getComponent
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
cv net/minecraft/advancements/critereon/package-info
cw net/minecraft/advancements/package-info
net/minecraft/server/ICompletionProvider net/minecraft/commands/SharedSuggestionProvider
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;Lnet/minecraft/server/MinecraftKey;)V lambda$suggestResource$1
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)V lambda$suggestResource$4
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/MinecraftKey;)V lambda$suggestResource$3
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V filterResources
	a (Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V filterResources
	a (Ljava/lang/String;Ljava/lang/String;)Z matchesSubStr
	a (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; suggestCoordinates
	a (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; lambda$suggestResource$2
	a ([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/lang/String;Ljava/lang/String;)Z lambda$suggest$5
	b (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; suggest2DCoordinates
	b (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; lambda$suggestResource$0
	l ()Ljava/util/Collection; getOnlinePlayerNames
	m ()Ljava/util/Collection; getAllTeams
	n ()Ljava/util/Collection; getAvailableSoundEvents
	o ()Ljava/util/stream/Stream; getRecipeNames
	p ()Ljava/util/Set; levels
	q ()Lnet/minecraft/server/IRegistryCustom; registryAccess
	r ()Ljava/util/Collection; getSelectedEntities
	s ()Ljava/util/Collection; getRelevantCoordinates
	t ()Ljava/util/Collection; getAbsoluteCoordinates
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdRoomCrossing net/minecraft/world/level/levelgen/structure/StrongholdPieces$RoomCrossing
	a type
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdRoomCrossing; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/PacketEncrypter net/minecraft/network/CipherEncoder
	a cipher
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/server/CriterionConditionDistance net/minecraft/advancements/critereon/DistancePredicate
	a ANY
	b x
	c y
	d z
	e horizontal
	f absolute
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (DDDDDD)Z matches
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionDistance; fromJson
	a (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lnet/minecraft/server/CriterionConditionDistance; horizontal
	b (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lnet/minecraft/server/CriterionConditionDistance; vertical
bzs$a net/minecraft/world/level/block/SkullBlock$Type
die$b com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldSelectionList
	a this$0
	a (I)V selectItem
	a (Ldfj;)V renderBackground
	a (Ldie$a;)V setSelected
	a (Ldlc$a;)V setSelected
	a (Lnet/minecraft/server/WorldInfo;)V addEntry
	b ()Z isFocused
	c ()I getMaxPosition
bdb$c net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f level
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	g ()Lnet/minecraft/server/Vec3D; getWaterPos
bdb$b net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal
	g drowned
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
bdb$a net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal
	b drowned
	a ()Z canUse
	b ()Z canContinueToUse
net/minecraft/server/WorldGenFeatureBasaltPillar net/minecraft/world/level/levelgen/feature/BasaltPillarFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)V placeBaseHangOff
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
	b (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Z placeHangOff
die$a com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry
	a this$0
	b levelSummary
	c name
	d id
	e info
	a (DDI)Z mouseClicked
	a (Ldfj;IIIIIIIZF)V render
	a (Ldfj;Lnet/minecraft/server/WorldInfo;III)V renderItem
qi$1 net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundPlayerInfoPacket$Action
net/minecraft/server/Clearable net/minecraft/world/Clearable
	a (Ljava/lang/Object;)V tryClear
	clear ()V clearContent
bos$a net/minecraft/world/item/crafting/ShapedRecipe$Serializer
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/ShapedRecipes;)V toNetwork
	b (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ShapedRecipes; fromJson
	b (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ShapedRecipes; fromNetwork
net/minecraft/server/StatisticList net/minecraft/stats/Stats
	SNEAK_TIME CROUCH_TIME
	a (Ljava/lang/String;Lnet/minecraft/server/Counter;)Lnet/minecraft/server/MinecraftKey; makeCustomStat
	a (Ljava/lang/String;Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/StatisticWrapper; makeRegistryStatType
net/minecraft/server/ArgumentChatFormat net/minecraft/commands/arguments/ColorArgument
	a ERROR_INVALID_VALUE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentChatFormat; color
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/EnumChatFormat; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/EnumChatFormat; getColor
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
net/minecraft/server/TicketType net/minecraft/server/level/TicketType
	i name
	j comparator
	loadPeriod timeout
	a ()Ljava/util/Comparator; getComparator
	a (Ljava/lang/String;Ljava/util/Comparator;)Lnet/minecraft/server/TicketType; create
	a (Ljava/lang/String;Ljava/util/Comparator;I)Lnet/minecraft/server/TicketType; create
	a (Lnet/minecraft/server/Unit;Lnet/minecraft/server/Unit;)I lambda$static$1
	b ()J timeout
	b (Lnet/minecraft/server/Unit;Lnet/minecraft/server/Unit;)I lambda$static$0
ej net/minecraft/commands/arguments/blocks/package-info
bhw$1 net/minecraft/world/food/FoodProperties$1
net/minecraft/server/EntitySpider$PathfinderGoalSpiderMeleeAttack net/minecraft/world/entity/monster/Spider$SpiderAttackGoal
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
	b ()Z canContinueToUse
net/minecraft/server/ItemHorseArmor net/minecraft/world/item/HorseArmorItem
	a protection
	b texture
	f ()Lnet/minecraft/server/MinecraftKey; getTexture
	g ()I getProtection
eu net/minecraft/commands/arguments/coordinates/package-info
lb$1 net/minecraft/gametest/framework/GameTestBatchRunner$1
	a this$0
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V testStructureLoaded
	b (Lnet/minecraft/server/GameTestHarnessInfo;)V testPassed
	c (Lnet/minecraft/server/GameTestHarnessInfo;)V testFailed
bdb$f net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal
	a drowned
	a ()Z canUse
	c ()V start
	d ()V stop
net/minecraft/server/BlockStemAttached net/minecraft/world/level/block/AttachedStemBlock
	a FACING
	b fruit
	c AABBS
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	b ()Lnet/minecraft/server/Item; getSeedItem
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
bdb$e net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal
	a drowned
	b speedModifier
	c seaLevel
	d stuck
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bdb$d net/minecraft/world/entity/monster/Drowned$DrownedMoveControl
	i drowned
	a ()V tick
ab$a net/minecraft/advancements/AdvancementRewards$Builder
	a experience
	b loot
	c recipes
	d function
	a ()Lnet/minecraft/server/AdvancementRewards; build
	a (I)Lab$a; experience
	a (Lnet/minecraft/server/MinecraftKey;)Lab$a; loot
	b (I)Lab$a; addExperience
	b (Lnet/minecraft/server/MinecraftKey;)Lab$a; addLootTable
	c (Lnet/minecraft/server/MinecraftKey;)Lab$a; recipe
	d (Lnet/minecraft/server/MinecraftKey;)Lab$a; addRecipe
	e (Lnet/minecraft/server/MinecraftKey;)Lab$a; function
	f (Lnet/minecraft/server/MinecraftKey;)Lab$a; runs
net/minecraft/server/ChatMessageException net/minecraft/network/chat/TranslatableFormatException
net/minecraft/server/ItemPotion net/minecraft/world/item/PotionItem
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbni;)V appendHoverText
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	d_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	e (Lnet/minecraft/server/ItemStack;)Z isFoil
	e_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
	f (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; getDescriptionId
	r ()Lnet/minecraft/server/ItemStack; getDefaultInstance
net/minecraft/server/DataConverterEntityNameAbstract net/minecraft/util/datafix/fixes/SimpleEntityRenameFix
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
fa net/minecraft/commands/arguments/item/package-info
net/minecraft/server/BlockChorusFruit net/minecraft/world/level/block/ChorusPlantBlock
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
fb net/minecraft/commands/arguments/package-info
cre$c net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftPiece
	a type
	a ()Lnet/minecraft/server/IBlockData; getPlanksBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/StructureBoundingBox;IIII)Z isSupportingBox
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b ()Lnet/minecraft/server/IBlockData; getFenceBlock
net/minecraft/server/WorldGenFeatureTreeConfiguration net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration
	a CODEC
	b trunkProvider
	c leavesProvider
	d decorators
	e fromSapling
	f foliagePlacer
	g trunkPlacer
	h minimumSize
	i maxWaterDepth
	j ignoreVines
	l heightmap
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$9
	a (Ljava/util/List;)Lnet/minecraft/server/WorldGenFeatureTreeConfiguration; withDecorators
	a (Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Lnet/minecraft/server/HeightMap$Type; lambda$null$8
	b ()V setFromSapling
	b (Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Ljava/lang/Boolean; lambda$null$7
	c (Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Ljava/lang/Integer; lambda$null$6
	d (Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Ljava/util/List; lambda$null$5
	e (Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Lnet/minecraft/server/FeatureSize; lambda$null$4
	f (Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Lnet/minecraft/server/TrunkPlacer; lambda$null$3
	g (Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Lnet/minecraft/server/WorldGenFoilagePlacer; lambda$null$2
	h (Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Lnet/minecraft/server/WorldGenFeatureStateProvider; lambda$null$1
	i (Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Lnet/minecraft/server/WorldGenFeatureStateProvider; lambda$null$0
net/minecraft/server/EntitySlime$PathfinderGoalSlimeIdle net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal
	a slime
	a ()Z canUse
	e ()V tick
net/minecraft/server/EULA net/minecraft/server/Eula
	a LOGGER
	b file
	c agreed
	a ()Z hasAgreedToEULA
	b ()Z readFile
	c ()V saveDefaults
net/minecraft/server/CriterionTriggerLevitation net/minecraft/advancements/critereon/LevitationTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lbu$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Vec3D;I)V trigger
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Vec3D;ILbu$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
ff net/minecraft/commands/arguments/selector/options/package-info
net/minecraft/server/AdvancementRewards net/minecraft/advancements/AdvancementRewards
	a EMPTY
	b experience
	c loot
	d recipes
	e function
	a ()[Lnet/minecraft/server/MinecraftKey; getRecipes
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/AdvancementRewards; deserialize
	a (Lnet/minecraft/server/EntityPlayer;)V grant
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/CustomFunction;)V lambda$grant$0
	b ()Lcom/google/gson/JsonElement; serializeToJson
fg net/minecraft/commands/arguments/selector/package-info
dyl$e net/minecraft/client/particle/SpellParticle$WitchProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/PacketSplitter net/minecraft/network/Varint21FrameDecoder
fh net/minecraft/commands/exceptions/package-info
fi net/minecraft/commands/package-info
net/minecraft/server/PacketPlayOutEntityMetadata net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket
	a id
	b packedItems
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/List; getUnpackedData
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getId
net/minecraft/server/MaterialPredicate net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate
	a AIR
	b material
	a (Lnet/minecraft/server/IBlockData;)Z test
	a (Lnet/minecraft/server/Material;)Lnet/minecraft/server/MaterialPredicate; forMaterial
net/minecraft/server/Schedule net/minecraft/world/entity/schedule/Schedule
	e timelines
	a (I)Lnet/minecraft/server/Activity; getActivityAt
	a (ILjava/util/Map$Entry;)D lambda$getActivityAt$1
	a (Ljava/lang/String;)Lnet/minecraft/server/ScheduleBuilder; register
	a (Lnet/minecraft/server/Activity;)V ensureTimelineExistsFor
	a (Lnet/minecraft/server/Activity;Ljava/util/Map$Entry;)Z lambda$getAllTimelinesExceptFor$0
	b (Lnet/minecraft/server/Activity;)Lnet/minecraft/server/ScheduleActivity; getTimelineFor
	c (Lnet/minecraft/server/Activity;)Ljava/util/List; getAllTimelinesExceptFor
bsw$1 net/minecraft/world/level/biome/BiomeSpecialEffects$1
net/minecraft/server/EntitySnowman net/minecraft/world/entity/animal/SnowGolem
	b DATA_PUMPKIN_ID
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	K_ ()Z readyForShearing
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$mobInteract$1
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/SoundCategory;)V shear
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	ce ()Lnet/minecraft/server/Vec3D; getLeashOffset
	dN ()Z isSensitiveToWater
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	i (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$0
	k ()V aiStep
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	o ()V registerGoals
	setHasPumpkin (Z)V setPumpkin
net/minecraft/server/NonNullList net/minecraft/core/NonNullList
	a list
	b defaultValue
	a ()Lnet/minecraft/server/NonNullList; create
	a (ILjava/lang/Object;)Lnet/minecraft/server/NonNullList; withSize
	a (Ljava/lang/Object;[Ljava/lang/Object;)Lnet/minecraft/server/NonNullList; of
dyl$b net/minecraft/client/particle/SpellParticle$InstantProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dyl$a net/minecraft/client/particle/SpellParticle$AmbientMobProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
ft net/minecraft/commands/synchronization/brigadier/package-info
dyl$d net/minecraft/client/particle/SpellParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
fu net/minecraft/commands/synchronization/package-info
dyl$c net/minecraft/client/particle/SpellParticle$MobProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/TrunkPlacer net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer
	c CODEC
	d baseHeight
	e heightRandA
	f heightRandB
	a ()Lnet/minecraft/server/TrunkPlacers; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; trunkPlacerParts
	a (Ljava/util/Random;)I getTreeHeight
	a (Lnet/minecraft/server/IBlockData;)Z lambda$isDirt$3
	a (Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/StructureBoundingBox;)V setBlock
	a (Lnet/minecraft/server/TrunkPlacer;)Ljava/lang/Integer; lambda$trunkPlacerParts$2
	a (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isDirt
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;ILnet/minecraft/server/BlockPosition;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)V placeLogIfFree
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Z placeLog
	a (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;)V setDirtAt
	b (Lnet/minecraft/server/TrunkPlacer;)Ljava/lang/Integer; lambda$trunkPlacerParts$1
	c (Lnet/minecraft/server/TrunkPlacer;)Ljava/lang/Integer; lambda$trunkPlacerParts$0
fw net/minecraft/core/BlockMath
	a vanillaUvTransformLocalToGlobal
	b vanillaUvTransformGlobalToLocal
	c LOGGER
	a (Lf;)Lf; blockCenterToCorner
	a (Lf;Lnet/minecraft/server/EnumDirection;Ljava/util/function/Supplier;)Lf; getUVLockTransform
	a (Ljava/util/EnumMap;)V lambda$static$1
	b (Lf;)Lf; blockCornerToCenter
	b (Ljava/util/EnumMap;)V lambda$static$0
net/minecraft/server/IRegistryCustom net/minecraft/core/RegistryAccess
	a LOGGER
	b REGISTRIES
	c BUILTIN
	a ()Lnet/minecraft/server/IRegistry; dimensionTypes
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Codec;)V put
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V put
	a (Lcom/mojang/serialization/DataResult$PartialResult;)V lambda$readRegistry$8
	a (Lnet/minecraft/server/IRegistry;)Ljava/lang/IllegalStateException; lambda$copy$5
	a (Lnet/minecraft/server/IRegistryCustom$Dimension;Lnet/minecraft/server/IRegistry;)V copy
	a (Lnet/minecraft/server/IRegistryCustom$Dimension;Lnet/minecraft/server/RegistryReadOps;)V load
	a (Lnet/minecraft/server/IRegistryCustom$Dimension;Lnet/minecraft/server/ResourceKey;)V copyBuiltin
	a (Lnet/minecraft/server/IRegistryCustom$Dimension;Lvh$b$a;Lgn$a;)V addBuiltinElements
	a (Lnet/minecraft/server/RegistryMaterials;)Lnet/minecraft/server/RegistryMaterials; lambda$readRegistry$6
	a (Lnet/minecraft/server/RegistryReadOps;Lnet/minecraft/server/IRegistryCustom$Dimension;Lgn$a;)V readRegistry
	a (Lnet/minecraft/server/ResourceKey;)Ljava/util/Optional; registry
	b ()Lnet/minecraft/server/IRegistryCustom$Dimension; builtin
	b (Lnet/minecraft/server/IRegistryCustom$Dimension;Lnet/minecraft/server/ResourceKey;)V lambda$null$3
	b (Lnet/minecraft/server/ResourceKey;)Lnet/minecraft/server/IRegistryWritable; registryOrThrow
	c ()Ljava/util/Map; access$000
	c (Lnet/minecraft/server/ResourceKey;)Ljava/lang/IllegalStateException; lambda$readRegistry$7
	d ()Lnet/minecraft/server/IRegistryCustom$Dimension; lambda$static$4
	d (Lnet/minecraft/server/ResourceKey;)Z lambda$null$2
	e ()Lcom/google/common/collect/ImmutableMap; lambda$static$1
	e (Lnet/minecraft/server/ResourceKey;)Ljava/lang/IllegalStateException; lambda$registryOrThrow$0
dbz$a net/minecraft/world/level/timers/FunctionTagCallback$Serializer
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallbackTag; deserialize
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/CustomFunctionCallbackTag;)V serialize
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/CustomFunctionCallbackTimer;)V serialize
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallbackTimer; deserialize
dbi$1 net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$1
net/minecraft/server/EntityPositionTypes net/minecraft/world/entity/SpawnPlacements
	a DATA_BY_TYPE
	a (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/EntityPositionTypes$Surface; getPlacementType
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/EntityPositionTypes$Surface;Lnet/minecraft/server/HeightMap$Type;Lara$b;)V register
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkSpawnRules
	b (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/HeightMap$Type; getHeightmapType
aet$1 net/minecraft/util/CsvOutput$1
net/minecraft/server/ArgumentUUID net/minecraft/commands/arguments/UuidArgument
	a ERROR_INVALID_UUID
	b EXAMPLES
	c ALLOWED_CHARACTERS
	a ()Lnet/minecraft/server/ArgumentUUID; uuid
	a (Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID; getUuid
dhs$a com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus
	a bytesWritten
	b totalBytes
	c this$0
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPieceWeight net/minecraft/world/level/levelgen/structure/StrongholdPieces$PieceWeight
	a pieceClass
	b weight
	c placeCount
	d maxPlaceCount
	a ()Z isValid
	a (I)Z doPlace
net/minecraft/server/EnumDragonRespawn net/minecraft/world/level/dimension/end/DragonRespawnAnimation
	f $VALUES
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EnderDragonBattle;Ljava/util/List;ILnet/minecraft/server/BlockPosition;)V tick
net/minecraft/server/LootCollector net/minecraft/world/level/storage/loot/ValidationContext
	a problems
	b context
	c params
	d conditionResolver
	e visitedConditions
	f tableResolver
	g visitedTables
	h contextCache
	a ()Lcom/google/common/collect/Multimap; getProblems
	a (Ljava/lang/String;)V reportProblem
	a (Ljava/lang/String;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootCollector; enterTable
	a (Lnet/minecraft/server/LootContextParameterSet;)Lnet/minecraft/server/LootCollector; setParams
	a (Lnet/minecraft/server/LootItemUser;)V validateUser
	a (Lnet/minecraft/server/MinecraftKey;)Z hasVisitedTable
	b ()Ljava/lang/String; getContext
	b (Ljava/lang/String;)Lnet/minecraft/server/LootCollector; forChild
	b (Ljava/lang/String;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootCollector; enterCondition
	b (Lnet/minecraft/server/MinecraftKey;)Z hasVisitedCondition
	c ()Ljava/lang/String; lambda$new$0
	c (Ljava/lang/String;)Ljava/lang/String; lambda$enterCondition$3
	c (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootTable; resolveLootTable
	d (Ljava/lang/String;)Ljava/lang/String; lambda$enterTable$2
	d (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootItemCondition; resolveCondition
	e (Ljava/lang/String;)Ljava/lang/String; lambda$forChild$1
ckz$a net/minecraft/world/level/levelgen/feature/SwamplandHutFeature$FeatureStart
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)V generatePieces
dnl$a net/minecraft/client/gui/screens/BackupConfirmScreen$Listener
net/minecraft/server/DataConverterCoral net/minecraft/util/datafix/fixes/RenamedCoralFix
	a RENAMED_IDS
net/minecraft/server/BossBattleServer net/minecraft/server/level/ServerBossEvent
	h players
	i unmodifiablePlayers
	a (Lnet/minecraft/server/BossBattle$BarColor;)V setColor
	a (Lnet/minecraft/server/BossBattle$BarStyle;)V setOverlay
	a (Lnet/minecraft/server/IChatBaseComponent;)V setName
	b ()V removeAllPlayers
	g ()Z isVisible
	sendUpdate (Lnet/minecraft/server/PacketPlayOutBoss$Action;)V broadcast
	setCreateFog (Z)Lnet/minecraft/server/BossBattle; setCreateWorldFog
	setDarkenSky (Z)Lnet/minecraft/server/BossBattle; setDarkenScreen
	setPlayMusic (Z)Lnet/minecraft/server/BossBattle; setPlayBossMusic
	setProgress (F)V setPercent
net/minecraft/server/PacketPlayOutLightUpdate net/minecraft/network/protocol/game/ClientboundLightUpdatePacket
	a x
	b z
	c skyYMask
	d blockYMask
	e emptySkyYMask
	f emptyBlockYMask
	g skyUpdates
	h blockUpdates
	i trustEdges
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getZ
	d ()I getSkyYMask
	e ()I getEmptySkyYMask
	f ()Ljava/util/List; getSkyUpdates
	g ()I getBlockYMask
	h ()I getEmptyBlockYMask
	i ()Ljava/util/List; getBlockUpdates
	j ()Z getTrustEdges
net/minecraft/server/PacketPlayInSetCreativeSlot net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket
	b itemStack
	slot slotNum
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getSlotNum
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	getItemStack ()Lnet/minecraft/server/ItemStack; getItem
net/minecraft/server/IpBanList net/minecraft/server/players/IpBanList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/JsonListEntry; createEntry
	a (Ljava/lang/String;)Z isBanned
	c (Ljava/net/SocketAddress;)Ljava/lang/String; getIpFromAddress
bhw$a net/minecraft/world/food/FoodProperties$Builder
	a nutrition
	b saturationModifier
	c isMeat
	d canAlwaysEat
	e fastFood
	f effects
	a ()Lbhw$a; meat
	a (F)Lbhw$a; saturationMod
	a (I)Lbhw$a; nutrition
	a (Lnet/minecraft/server/MobEffect;F)Lbhw$a; effect
	b ()Lbhw$a; alwaysEat
	c ()Lbhw$a; fast
	d ()Lnet/minecraft/server/FoodInfo; build
net/minecraft/server/BlockLever net/minecraft/world/level/block/LeverBlock
	b NORTH_AABB
	c SOUTH_AABB
	d WEST_AABB
	e EAST_AABB
	f UP_AABB_Z
	g UP_AABB_X
	h DOWN_AABB_Z
	i DOWN_AABB_X
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;F)V makeParticle
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b_ (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; pull
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V updateNeighbours
ha net/minecraft/core/dispenser/package-info
apt$1 net/minecraft/world/effect/MobEffects$1
	a (II)Z isDurationEffectTick
	a (Lnet/minecraft/server/EntityLiving;I)V applyEffectTick
net/minecraft/server/LootItemFunctionExplorationMap net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction
	a DEFAULT_FEATURE
	b DEFAULT_DECORATION
	d LOGGER
	e destination
	f mapDecoration
	g zoom
	h searchRadius
	i skipKnownStructures
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionExplorationMap;)Lnet/minecraft/server/StructureGenerator; access$100
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
	b (Lnet/minecraft/server/LootItemFunctionExplorationMap;)Lnet/minecraft/server/MapIcon$Type; access$200
	c ()Ldab$a; makeExplorationMap
	c (Lnet/minecraft/server/LootItemFunctionExplorationMap;)B access$300
	d ()Lorg/apache/logging/log4j/Logger; access$600
	d (Lnet/minecraft/server/LootItemFunctionExplorationMap;)I access$400
	e (Lnet/minecraft/server/LootItemFunctionExplorationMap;)Z access$500
net/minecraft/server/BlockRepeater net/minecraft/world/level/block/RepeaterBlock
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isLocked
	g (Lnet/minecraft/server/IBlockData;)I getDelay
	h (Lnet/minecraft/server/IBlockData;)Z isAlternateInput
hb net/minecraft/core/package-info
net/minecraft/server/ContainerStonecutter net/minecraft/world/inventory/StonecutterMenu
	c inputSlot
	containerAccess access
	containerProperty selectedRecipeIndex
	d resultSlot
	i recipes
	inventory container
	j input
	k lastSoundTime
	l slotUpdateListener
	resultInventory resultContainer
	world level
	a ()Lnet/minecraft/server/Containers; getType
	a (Ljava/lang/Runnable;)V registerUpdateListener
	a (Lnet/minecraft/server/ContainerStonecutter;)Ljava/lang/Runnable; access$000
	a (Lnet/minecraft/server/ContainerStonecutter;J)J access$302
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;I)Z clickMenuButton
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$removed$1
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/ItemStack;)V setupRecipeList
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	b (Lnet/minecraft/server/ContainerStonecutter;)Lnet/minecraft/server/InventoryCraftResult; access$100
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	c (Lnet/minecraft/server/ContainerStonecutter;)V access$200
	d (I)Z isValidRecipeIndex
	d (Lnet/minecraft/server/ContainerStonecutter;)J access$300
	e ()I getSelectedRecipeIndex
	f ()Ljava/util/List; getRecipes
	g ()I getNumRecipes
	h ()Z hasInputItem
	i ()V setupResultSlot
	j ()V lambda$new$0
dyl$1 net/minecraft/client/particle/SpellParticle$1
net/minecraft/server/DataConverterItemStackUUID net/minecraft/util/datafix/fixes/ItemStackUUIDFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$2
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	a (Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Boolean; lambda$null$0
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateAttributeModifiers$5
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAttributeModifiers
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateSkullOwner
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateSkullOwner$6
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$4
hj net/minecraft/core/particles/package-info
net/minecraft/server/LootItemFunctionSetTag net/minecraft/world/level/storage/loot/functions/SetNbtFunction
	a tag
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionSetTag;)Lnet/minecraft/server/NBTTagCompound; access$000
	a (Lnet/minecraft/server/NBTTagCompound;)Ldaf$a; setTag
	a (Lnet/minecraft/server/NBTTagCompound;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$setTag$0
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
net/minecraft/server/EntitySlice net/minecraft/util/ClassInstanceMultiMap
	a byClass
	b baseClass
	c allInstances
	a ()Ljava/util/List; getAllInstances
	a (Ljava/lang/Class;)Ljava/util/Collection; find
	b (Ljava/lang/Class;)Ljava/util/List; lambda$find$0
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPieceWeight net/minecraft/world/level/levelgen/structure/NetherBridgePieces$PieceWeight
	a pieceClass
	b weight
	c placeCount
	d maxPlaceCount
	e allowInRow
	a ()Z isValid
	a (I)Z doPlace
ho net/minecraft/data/advancements/AdvancementProvider
	b LOGGER
	c GSON
	d generator
	e tabs
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Lnet/minecraft/server/Advancement;)Ljava/nio/file/Path; createPath
	a (Ljava/util/Set;Ljava/nio/file/Path;Lnet/minecraft/server/HashCache;Lnet/minecraft/server/Advancement;)V lambda$run$0
	a (Lnet/minecraft/server/HashCache;)V run
hp net/minecraft/data/advancements/AdventureAdvancements
	a EXPLORABLE_BIOMES
	b MOBS_TO_KILL
	a (Ljava/util/function/Consumer;)V accept
	a (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addMobsToKill
	a (Lnet/minecraft/server/Advancement$SerializedAdvancement;Ljava/util/List;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addBiomes
hq net/minecraft/data/advancements/HusbandryAdvancements
	a BREEDABLE_ANIMALS
	b FISH
	c FISH_BUCKETS
	d EDIBLE_ITEMS
	a (Ljava/util/function/Consumer;)V accept
	a (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addFood
	a (Lnet/minecraft/server/Advancement$SerializedAdvancement;Ljava/lang/Integer;Lnet/minecraft/server/MinecraftKey;)V lambda$addCatVariants$0
	b (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addBreedable
	c (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addFishBuckets
	d (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addFish
	e (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addCatVariants
net/minecraft/server/GameRules$GameRuleCategory net/minecraft/world/level/GameRules$Category
	h descriptionId
	i $VALUES
	a ()Ljava/lang/String; getDescriptionId
hr net/minecraft/data/advancements/NetherAdvancements
	a EXPLORABLE_BIOMES
	b DISTRACT_PIGLIN_PLAYER_ARMOR_PREDICATE
	a (Ljava/util/function/Consumer;)V accept
net/minecraft/server/LootItemFunctionCopyName net/minecraft/world/level/storage/loot/functions/CopyNameFunction
	a source
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionCopyName$Source;)Ldaf$a; copyName
	a (Lnet/minecraft/server/LootItemFunctionCopyName$Source;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$copyName$0
	a (Lnet/minecraft/server/LootItemFunctionCopyName;)Lnet/minecraft/server/LootItemFunctionCopyName$Source; access$000
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
net/minecraft/server/IEntityAngerable net/minecraft/world/entity/NeutralMob
	I_ ()V forgetCurrentTargetAndRefreshUniversalAnger
	a (Lnet/minecraft/server/World;)Z isAngryAtAllPlayers
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/NBTTagCompound;)V readPersistentAngerSaveData
	a (Lnet/minecraft/server/WorldServer;Z)V updatePersistentAnger
	a_ (Lnet/minecraft/server/EntityLiving;)Z isAngryAt
	anger ()V startPersistentAngerTimer
	b (Lnet/minecraft/server/EntityHuman;)V playerDied
	c (Lnet/minecraft/server/NBTTagCompound;)V addPersistentAngerSaveData
	cY ()Lnet/minecraft/server/EntityLiving; getLastHurtByMob
	e (Lnet/minecraft/server/EntityHuman;)V setLastHurtByPlayer
	getAnger ()I getRemainingPersistentAngerTime
	getAngerTarget ()Ljava/util/UUID; getPersistentAngerTarget
	getGoalTarget ()Lnet/minecraft/server/EntityLiving; getTarget
	pacify ()V stopBeingAngry
	setAnger (I)V setRemainingPersistentAngerTime
	setAngerTarget (Ljava/util/UUID;)V setPersistentAngerTarget
	setGoalTarget (Lnet/minecraft/server/EntityLiving;)V setTarget
	setLastDamager (Lnet/minecraft/server/EntityLiving;)V setLastHurtByMob
hs net/minecraft/data/advancements/StoryAdvancements
	a (Ljava/util/function/Consumer;)V accept
ht net/minecraft/data/advancements/TheEndAdvancements
	a (Ljava/util/function/Consumer;)V accept
hu net/minecraft/data/advancements/package-info
dea$a com/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph
	a this$0
	b width
	c height
	d bearingX
	e bearingY
	f advance
	g index
	a ()F getBearingX
	a (II)V upload
	d ()I getPixelWidth
	e ()I getPixelHeight
	f ()Z isColored
	g ()F getOversample
	l ()F getBearingY
hv net/minecraft/data/info/BlockListReport
	b GSON
	c generator
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/HashCache;)V run
hw net/minecraft/data/info/CommandsReport
	b GSON
	c generator
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/HashCache;)V run
hx net/minecraft/data/info/RegistryDumpReport
	b GSON
	c generator
	a ()Ljava/lang/String; getName
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/MinecraftKey;)V lambda$run$0
	a (Lnet/minecraft/server/HashCache;)V run
	a (Lnet/minecraft/server/IRegistry;)Lcom/google/gson/JsonElement; dumpRegistry
dpr$c net/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i
	a x
	b y
hy net/minecraft/data/info/package-info
dpr$b net/minecraft/client/gui/screens/inventory/BookEditScreen$LineInfo
	a style
	b contents
	c asComponent
	d x
	e y
	a (Ldpr$b;)Lnet/minecraft/server/IChatBaseComponent; access$200
	b (Ldpr$b;)I access$300
	c (Ldpr$b;)I access$400
	d (Ldpr$b;)Ljava/lang/String; access$800
	e (Ldpr$b;)Lnet/minecraft/server/ChatModifier; access$900
hz net/minecraft/data/loot/BlockLoot
	a HAS_SILK_TOUCH
	b HAS_NO_SILK_TOUCH
	c HAS_SHEARS
	d HAS_SHEARS_OR_SILK_TOUCH
	e HAS_NO_SHEARS_OR_SILK_TOUCH
	f EXPLOSION_RESISTANT
	g NORMAL_LEAVES_SAPLING_CHANCES
	h JUNGLE_LEAVES_SAPLING_CHANGES
	i map
	A (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$59
	B (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$58
	C (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$57
	D (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$56
	E (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$55
	F (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$54
	G (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$53
	H (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$52
	I (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$51
	J (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$50
	K (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$49
	L (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$48
	M (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$47
	N (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$46
	O (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$45
	P (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$44
	Q (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$43
	R (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$42
	S (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$41
	T (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$40
	U (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$39
	V (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$38
	W (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$37
	X (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$36
	Y (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$35
	Z (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$34
	a ()Lcyv$a; noDrop
	a (Ljava/util/function/BiConsumer;)V accept
	a (Lnet/minecraft/server/Block;)Lcyv$a; createDoorTable
	a (Lnet/minecraft/server/Block;Lcyv$a;)V add
	a (Lnet/minecraft/server/Block;Lczn$a;)Lcyv$a; createSilkTouchDispatchTable
	a (Lnet/minecraft/server/Block;Ldbl$a;Lczn$a;)Lcyv$a; createSelfDropDispatchTable
	a (Lnet/minecraft/server/Block;Ljava/util/function/Function;)V add
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)V otherWhenSilkTouch
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;[F)Lcyv$a; createLeavesDrops
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Lcyv$a; createSinglePropConditionTable
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/IMaterial;)V dropOther
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/LootValue;)Lcyv$a; createSingleItemTableWithSilkTouch
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Item;)Lcyv$a; createOreDrop
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Item;Lnet/minecraft/server/Item;Ldbl$a;)Lcyv$a; createCropDrops
	a (Lnet/minecraft/server/IMaterial;)Lcyv$a; createSingleItemTable
	a (Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/LootItemConditionUser;)Ljava/lang/Object; applyExplosionCondition
	a (Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/LootItemFunctionUser;)Ljava/lang/Object; applyExplosionDecay
	a (Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/LootValue;)Lcyv$a; createSingleItemTable
	aA (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$7
	aB (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$6
	aC (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$5
	aD (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$4
	aE (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$3
	aF (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$2
	aG (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$1
	aH (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$0
	aa (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$33
	ab (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$32
	ac (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$31
	ad (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$30
	ae (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$29
	af (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$28
	ag (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$27
	ah (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$26
	ai (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$25
	aj (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$24
	ak (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$23
	al (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$22
	am (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$21
	an (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$20
	ao (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$19
	ap (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$18
	aq (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$17
	ar (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$16
	as (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$15
	at (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$14
	au (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$13
	av (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$12
	aw (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$11
	ax (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$10
	ay (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$9
	az (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$8
	b (Lnet/minecraft/server/Block;)V dropPottedContents
	b (Lnet/minecraft/server/Block;Lczn$a;)Lcyv$a; createShearsDispatchTable
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)Lcyv$a; createDoublePlantWithSeedDrops
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;[F)Lcyv$a; createOakLeavesDrops
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/IMaterial;)Lcyv$a; createSingleItemTableWithSilkTouch
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/Item;)Lcyv$a; createStemDrops
	b (Lnet/minecraft/server/IMaterial;)Lcyv$a; createSilkTouchOnlyTable
	c (Lnet/minecraft/server/Block;)V dropWhenSilkTouch
	c (Lnet/minecraft/server/Block;Lczn$a;)Lcyv$a; createSilkTouchOrShearsDispatchTable
	c (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)V addNetherVinesDropTable
	c (Lnet/minecraft/server/Block;Lnet/minecraft/server/IMaterial;)Lcyv$a; createMushroomBlockDrop
	c (Lnet/minecraft/server/Block;Lnet/minecraft/server/Item;)Lcyv$a; createAttachedStemDrops
	c (Lnet/minecraft/server/IMaterial;)Lcyv$a; createPotFlowerItemTable
	d (Lnet/minecraft/server/Block;)V dropSelf
	d (Lnet/minecraft/server/IMaterial;)Lcyv$a; createShearsOnlyDrop
	e (Lnet/minecraft/server/Block;)Lcyv$a; createSlabItemTable
	f (Lnet/minecraft/server/Block;)Lcyv$a; createNameableBlockEntityTable
	g (Lnet/minecraft/server/Block;)Lcyv$a; createShulkerBoxDrop
	h (Lnet/minecraft/server/Block;)Lcyv$a; createBannerDrop
	i (Lnet/minecraft/server/Block;)Lcyv$a; createBeeNestDrop
	j (Lnet/minecraft/server/Block;)Lcyv$a; createBeeHiveDrop
	k (Lnet/minecraft/server/Block;)Lcyv$a; createGrassDrops
	l (Lnet/minecraft/server/Block;)Lcyv$a; createDoublePlantShearsDrop
	m (Lnet/minecraft/server/Block;)Lcyv$a; lambda$dropPottedContents$73
	n (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$72
	o (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$71
	p (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$70
	q (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$69
	r (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$68
	s (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$67
	t (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$66
	u (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$65
	v (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$64
	w (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$63
	x (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$62
	y (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$61
	z (Lnet/minecraft/server/Block;)Lcyv$a; lambda$accept$60
net/minecraft/server/RecipeCampfire net/minecraft/world/item/crafting/CampfireCookingRecipe
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
net/minecraft/server/DataConverterZombie net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix
	a RANDOM
	a (I)I getVillagerProfession
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
ebk$a net/minecraft/client/renderer/block/model/multipart/MultiPart$Deserializer
	a context
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonArray;)Ljava/util/List; getSelectors
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lebk; deserialize
dpr$a net/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache
	a EMPTY
	b fullText
	c cursor
	d cursorAtEnd
	e lineStarts
	f lines
	g selection
	a ()Ldpr$a; access$000
	a (I)I findLineStart
	a (II)I changeLine
	a (Ldkr;Ldpr$c;)I getIndexAtPosition
	a (Ldpr$a;)[Ldpr$b; access$100
	b (I)I findLineEnd
	b (Ldpr$a;)[Lead; access$500
	c (Ldpr$a;)Ldpr$c; access$600
	d (Ldpr$a;)Z access$700
net/minecraft/server/PacketPlayOutEntityDestroy net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket
	a entityIds
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()[I getEntityIds
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
ia net/minecraft/data/loot/ChestLoot
	a (Ljava/util/function/BiConsumer;)V accept
bpq$11 net/minecraft/world/item/enchantment/EnchantmentCategory$6
	a (Lnet/minecraft/server/Item;)Z canEnchant
net/minecraft/server/BlockRoots net/minecraft/world/level/block/RootsBlock
	a SHAPE
	ah_ ()Lnet/minecraft/server/BlockBase$EnumRandomOffset; getOffsetType
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
ib net/minecraft/data/loot/EntityLoot
	a ENTITY_ON_FIRE
	b SPECIAL_LOOT_TABLE_TYPES
	c map
	a (Ljava/util/function/BiConsumer;)V accept
	a (Lnet/minecraft/server/EntityTypes;Lcyv$a;)V add
	a (Lnet/minecraft/server/IMaterial;)Lcyv$a; createSheepTable
	a (Lnet/minecraft/server/MinecraftKey;Lcyv$a;)V add
	a (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$0
bpq$10 net/minecraft/world/item/enchantment/EnchantmentCategory$5
	a (Lnet/minecraft/server/Item;)Z canEnchant
net/minecraft/server/EntityMinecartMobSpawner net/minecraft/world/entity/vehicle/MinecartSpawner
	b spawner
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	ci ()Z onlyOpCanSetNbt
	j ()V tick
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	u ()Lnet/minecraft/server/MobSpawnerAbstract; getSpawner
ic net/minecraft/data/loot/FishingLoot
	a IN_JUNGLE
	b IN_JUNGLE_HILLS
	c IN_JUNGLE_EDGE
	d IN_BAMBOO_JUNGLE
	e IN_MODIFIED_JUNGLE
	f IN_MODIFIED_JUNGLE_EDGE
	g IN_BAMBOO_JUNGLE_HILLS
	a (Ljava/util/function/BiConsumer;)V accept
	a (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$0
bpq$13 net/minecraft/world/item/enchantment/EnchantmentCategory$8
	a (Lnet/minecraft/server/Item;)Z canEnchant
id net/minecraft/data/loot/GiftLoot
	a (Ljava/util/function/BiConsumer;)V accept
	a (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$12
	b (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$11
	c (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$10
	d (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$9
	e (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$8
	f (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$7
	g (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$6
	h (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$5
	i (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$4
	j (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$3
	k (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$2
	l (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$1
	m (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$0
bpq$12 net/minecraft/world/item/enchantment/EnchantmentCategory$7
	a (Lnet/minecraft/server/Item;)Z canEnchant
net/minecraft/server/AttributeBase net/minecraft/world/entity/ai/attributes/Attribute
	a defaultValue
	b syncable
	c descriptionId
	a (D)D sanitizeValue
	a (Z)Lnet/minecraft/server/AttributeBase; setSyncable
	b ()Z isClientSyncable
	getDefault ()D getDefaultValue
	getName ()Ljava/lang/String; getDescriptionId
ie net/minecraft/data/loot/LootTableProvider
	b LOGGER
	c GSON
	d generator
	e subProviders
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;Ljava/lang/String;)V lambda$run$4
	a (Ljava/nio/file/Path;Lnet/minecraft/server/HashCache;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/LootTable;)V lambda$run$5
	a (Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; createPath
	a (Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V lambda$run$1
	a (Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;Lnet/minecraft/server/MinecraftKey;Lcyv$a;)V lambda$null$0
	a (Lnet/minecraft/server/HashCache;)V run
	a (Lnet/minecraft/server/LootCollector;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/LootTable;)V lambda$run$3
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootItemCondition; lambda$run$2
crv$1 net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$1
bpq$14 net/minecraft/world/item/enchantment/EnchantmentCategory$9
	a (Lnet/minecraft/server/Item;)Z canEnchant
ig net/minecraft/data/loot/PiglinBarterLoot
	a (Ljava/util/function/BiConsumer;)V accept
	a (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$2
	b (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$1
	c (Lnet/minecraft/server/NBTTagCompound;)V lambda$accept$0
net/minecraft/server/BlockPressurePlateAbstract net/minecraft/world/level/block/BasePressurePlateBlock
	a PRESSED_AABB
	b AABB
	c TOUCH_AABB
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOnSound
	a (Lnet/minecraft/server/IBlockData;I)Lnet/minecraft/server/IBlockData; setSignalForState
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V updateNeighbours
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)V checkPressed
	ai_ ()Z isPossibleToRespawnInThis
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOffSound
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getSignalStrength
	b_ (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	c ()I getPressedTime
	f (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	getPower (Lnet/minecraft/server/IBlockData;)I getSignalForState
ih net/minecraft/data/loot/package-info
ii net/minecraft/data/models/BlockModelGenerators
	a blockStateOutput
	b modelOutput
	c skippedAutoModelsOutput
	A ()V createComposter
	B ()V createDaylightDetector
	C ()V createFarmland
	D ()V createFire
	E ()V createSoulFire
	F ()V createFrostedIce
	G ()V createGrassBlocks
	H ()V createCocoa
	I ()V createGrassPath
	J ()V createHopper
	K ()V createIronBars
	L ()V createLever
	M ()V createLilyPad
	N ()V createNetherPortalBlock
	O ()V createNetherrack
	P ()V createObserver
	Q ()V createPistons
	R ()V createPistonHeads
	S ()V createScaffolding
	T ()V createRedstoneLamp
	U ()V createRedstoneTorch
	V ()V createRepeater
	W ()V createSeaPickle
	X ()V createSnowBlocks
	Y ()V createStonecutter
	Z ()V createStructureBlock
	a ()V run
	a (I)Ljava/util/List; createBambooModels
	a (ILjava/lang/String;Liz;)Lnet/minecraft/server/MinecraftKey; createTurtleEggModel
	a (Lii;)Ljava/util/function/BiConsumer; access$000
	a (Lii;Lnet/minecraft/server/Block;)V access$1000
	a (Lii;Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;)V access$400
	a (Lii;Lnet/minecraft/server/Item;)V access$900
	a (Lip$d;Lnet/minecraft/server/BlockPropertyDoubleBlockHalf;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lip$d; configureDoorHalf
	a (Lir;)Lir; lambda$createSoulFire$21
	a (Liz;)Lii$b; family
	a (Liz;Lnet/minecraft/server/MinecraftKey;)Liz; lambda$createChorusFlower$9
	a (Ljava/lang/Boolean;Ljava/lang/Boolean;)Lir; lambda$createTripwireHook$28
	a (Ljava/lang/Comparable;Lir;Lir;Ljava/lang/Comparable;)Lir; lambda$createEmptyOrFullDispatch$5
	a (Ljava/lang/Integer;)Lir; lambda$createSweetBerryBush$27
	a (Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Boolean;)Lir; lambda$createRepeater$24
	a (Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/server/MinecraftKey; createTurtleEggModel
	a (Ljava/lang/String;I)Lir; lambda$createBambooModels$3
	a (Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List; wrapModels
	a (Ljb$a;[Lnet/minecraft/server/Block;)V createColoredBlockWithRandomRotations
	a (Lnet/minecraft/server/Block;)V skipAutoItemBlock
	a (Lnet/minecraft/server/Block;II)Lnet/minecraft/server/MinecraftKey; lambda$null$6
	a (Lnet/minecraft/server/Block;Lii$c;)V createCrossBlockWithDefaultItem
	a (Lnet/minecraft/server/Block;Lii$c;Liz;)V createCrossBlockWithDefaultItem
	a (Lnet/minecraft/server/Block;Liz;)V createPumpkinVariant
	a (Lnet/minecraft/server/Block;Liz;Lix;)V createTrivialBlock
	a (Lnet/minecraft/server/Block;Liz;Ljava/lang/Integer;)Lir; lambda$createStems$0
	a (Lnet/minecraft/server/Block;Ljava/lang/String;)V createSimpleFlatItemModel
	a (Lnet/minecraft/server/Block;Ljava/lang/String;Lix;Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftKey; createSuffixedVariant
	a (Lnet/minecraft/server/Block;Ljava/util/function/Function;)V createBeeNest
	a (Lnet/minecraft/server/Block;Ljb$a;)V createAxisAlignedPillarBlock
	a (Lnet/minecraft/server/Block;Ljb$a;Ljb$a;)V createRotatedPillarWithHorizontalVariant
	a (Lnet/minecraft/server/Block;Ljb;)Lii$b; family
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)V createNonTemplateModelBlock
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;Lii$c;)V createPlant
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;Ljava/util/function/BiFunction;)V createCraftingTableLike
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)V createCoral
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/IBlockState;[I)V createCropBlock
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Item;)V createAirLikeBlock
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;)Lio; access$100
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lir;)V createGrassLikeBlock
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Liz;)V createPistonVariant
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; access$300
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; access$500
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; access$700
	a (Lnet/minecraft/server/BlockPropertyJigsawOrientation;)Lir; lambda$createJigsaw$31
	a (Lnet/minecraft/server/BlockPropertyJigsawOrientation;Lir;)Lir; applyRotation
	a (Lnet/minecraft/server/BlockPropertyStructureMode;)Lir; lambda$createStructureBlock$26
	a (Lnet/minecraft/server/BlockStateBoolean;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lip; createBooleanModelDispatch
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lip; createEmptyOrFullDispatch
	a (Lnet/minecraft/server/Item;)V createSimpleFlatItemModel
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/MinecraftKey;)V delegateItemModel
	a (Lnet/minecraft/server/ItemMonsterEgg;)V lambda$run$36
	a (Lnet/minecraft/server/MinecraftKey;)[Lir; createRotatedVariants
	a (Lnet/minecraft/server/MinecraftKey;Liz;)V lambda$createGrassBlocks$23
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/Integer;)Lir; lambda$createSnowBlocks$25
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/Block;)Lii$a; blockEntityModels
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Ljava/lang/Boolean;Lnet/minecraft/server/BlockPropertyTrackPosition;)Lir; lambda$createActiveRail$1
	a ([ILit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lnet/minecraft/server/Block;Ljava/lang/Integer;)Lir; lambda$createCropBlock$7
	a ([Lnet/minecraft/server/Block;)V createCampfires
	a ([Lnet/minecraft/server/MinecraftKey;Ljava/lang/Integer;)Lir; lambda$createRespawnAnchor$30
	aa ()V createSweetBerryBush
	ab ()V createTripwire
	ac ()V createTripwireHook
	ad ()V createTurtleEgg
	ae ()V createVine
	af ()V createMagmaBlock
	ag ()V createInfestedStone
	ah ()V createRespawnAnchor
	ai ()V createJigsaw
	b ()Lip; createHorizontalFacingDispatch
	b (Lii;)Ljava/util/function/Consumer; access$200
	b (Lir;)Lir; lambda$createSoulFire$20
	b (Liz;)V lambda$run$35
	b (Liz;Lnet/minecraft/server/MinecraftKey;)Liz; lambda$createCommandBlock$2
	b (Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/util/List; lambda$createTurtleEgg$29
	b (Ljb$a;[Lnet/minecraft/server/Block;)V createColoredBlockWithStateRotations
	b (Lnet/minecraft/server/Block;)V createSimpleFlatItemModel
	b (Lnet/minecraft/server/Block;Lii$c;)V createCrossBlock
	b (Lnet/minecraft/server/Block;Lii$c;Liz;)V createCrossBlock
	b (Lnet/minecraft/server/Block;Ljb$a;)V createHorizontallyRotatedBlock
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)V createCoralFans
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;Lii$c;)V createGrowingPlant
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;)Lil; access$1300
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; access$600
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; access$1100
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; createDoor
	b (Lnet/minecraft/server/MinecraftKey;)Lir; lambda$wrapModels$10
	b (Lnet/minecraft/server/MinecraftKey;Liz;)V lambda$createGrassBlocks$22
	c ()Lip; createHorizontalFacingDispatchAlt
	c (Lir;)Lir; lambda$createSoulFire$19
	c (Liz;)V lambda$run$34
	c (Lnet/minecraft/server/Block;)V createRotatedMirroredVariantBlock
	c (Lnet/minecraft/server/Block;Lii$c;)V createDoublePlant
	c (Lnet/minecraft/server/Block;Ljb$a;)V createTrivialBlock
	c (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)V createStems
	c (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;)V delegateItemModel
	c (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; access$800
	c (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; access$1200
	c (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; createFenceGate
	c (Lnet/minecraft/server/MinecraftKey;Liz;)V lambda$createFurnace$8
	d ()Lip; createTorchHorizontalDispatch
	d (Lir;)Lir; lambda$createSoulFire$18
	d (Liz;)Lnet/minecraft/server/MinecraftKey; lambda$run$33
	d (Lnet/minecraft/server/Block;)V createRotatedVariantBlock
	d (Lnet/minecraft/server/Block;Ljb$a;)Lii$b; family
	d (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)Lii$a; blockEntityModels
	d (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;)Lio; createRotatedVariant
	d (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; access$1400
	d (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; createWall
	d (Lnet/minecraft/server/MinecraftKey;Liz;)V lambda$createBarrel$4
	e ()Lip; createFacingDispatch
	e (Lir;)Lir; lambda$createSoulFire$17
	e (Liz;)V lambda$run$32
	e (Lnet/minecraft/server/Block;)V createTrivialCube
	e (Lnet/minecraft/server/Block;Ljb$a;)V createFurnace
	e (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)V createWoolBlocks
	e (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;)Lio; createSimpleBlock
	e (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lio; createRotatedVariant
	e (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; createStairs
	f ()Lip; createRotatedPillar
	f (Lir;)Lir; lambda$createFire$16
	f (Lnet/minecraft/server/Block;)Lii$b; family
	f (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)V createGlassBlocks
	f (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;)Lil; createAxisAlignedPillarBlock
	f (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; createButton
	f (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; createOrientableTrapdoor
	g ()V createSunflower
	g (Lir;)Lir; lambda$createFire$15
	g (Lnet/minecraft/server/Block;)V createDoor
	g (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)V createChiseledSandsone
	g (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;)V createAxisAlignedPillarBlockCustomModel
	g (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; createFence
	g (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; createTrapdoor
	h ()V createTallSeagrass
	h (Lir;)Lir; lambda$createFire$14
	h (Lnet/minecraft/server/Block;)V createOrientableTrapdoor
	h (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)V createWeightedPressurePlate
	h (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;)V createAirLikeBlock
	h (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; createRotatedPillarWithHorizontalVariant
	h (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; createSlab
	i ()V createBamboo
	i (Lir;)Lir; lambda$createFire$13
	i (Lnet/minecraft/server/Block;)V createTrapdoor
	i (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)V copyModel
	i (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Lil; createPressurePlate
	j ()Lip; createColumnWithFacing
	j (Lir;)Lir; lambda$createFire$12
	j (Lnet/minecraft/server/Block;)Lii$d; woodProvider
	j (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)V createNormalTorch
	j (Lnet/minecraft/server/Block;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)V createDoubleBlock
	k ()V createBarrel
	k (Lir;)Lir; lambda$createFire$11
	k (Lnet/minecraft/server/Block;)V createNonTemplateModelBlock
	k (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)V createBedItem
	l ()V createBell
	l (Lnet/minecraft/server/Block;)V createPassiveRail
	l (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)V createNetherRoots
	m ()V createGrindstone
	m (Lnet/minecraft/server/Block;)V createActiveRail
	n ()V createBookshelf
	n (Lnet/minecraft/server/Block;)V createCommandBlock
	o ()V createRedstoneWire
	o (Lnet/minecraft/server/Block;)V createAnvil
	p ()V createComparator
	p (Lnet/minecraft/server/Block;)V createMushroomBlock
	q ()V createSmoothStoneSlab
	q (Lnet/minecraft/server/Block;)V createDispenserBlock
	r ()V createBrewingStand
	r (Lnet/minecraft/server/Block;)V createNyliumBlock
	s ()V createCakeBlock
	s (Lnet/minecraft/server/Block;)V createRotatableColumn
	t ()V createCartographyTable
	t (Lnet/minecraft/server/Block;)Ljava/util/List; createFloorFireModels
	u ()V createSmithingTable
	u (Lnet/minecraft/server/Block;)Ljava/util/List; createSideFireModels
	v ()V createPumpkins
	v (Lnet/minecraft/server/Block;)Ljava/util/List; createTopFireModels
	w ()V createCauldron
	w (Lnet/minecraft/server/Block;)V createLantern
	x ()V createChorusFlower
	x (Lnet/minecraft/server/Block;)V createNonTemplateHorizontalBlock
	y ()V createEndPortalFrame
	y (Lnet/minecraft/server/Block;)V createShulkerBox
	z ()V createChorusPlant
der$c com/mojang/blaze3d/platform/PngInfo$StbReaderSeekableByteChannel
	b channel
	a (I)V skip
	a (J)I eof
	b (JI)I read
ij net/minecraft/data/models/ItemModelGenerators
	a output
	a ()V run
	a (Lnet/minecraft/server/Item;Lix;)V generateFlatItem
	a (Lnet/minecraft/server/Item;Ljava/lang/String;Lix;)V generateFlatItem
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/Item;Lix;)V generateFlatItem
ik net/minecraft/data/models/ModelProvider
	b LOGGER
	c GSON
	d generator
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Lnet/minecraft/server/Block;)Ljava/nio/file/Path; createBlockStatePath
	a (Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; createModelPath
	a (Ljava/util/Map;Lil;)V lambda$run$0
	a (Ljava/util/Map;Lnet/minecraft/server/Block;)Z lambda$run$2
	a (Ljava/util/Map;Lnet/minecraft/server/MinecraftKey;Ljava/util/function/Supplier;)V lambda$run$1
	a (Ljava/util/Set;Ljava/util/Map;Lnet/minecraft/server/Block;)V lambda$run$3
	a (Ljava/util/function/BiFunction;Ljava/nio/file/Path;Lnet/minecraft/server/HashCache;Ljava/lang/Object;Ljava/util/function/Supplier;)V lambda$saveCollection$4
	a (Lnet/minecraft/server/HashCache;)V run
	a (Lnet/minecraft/server/HashCache;Ljava/nio/file/Path;Ljava/util/Map;Ljava/util/function/BiFunction;)V saveCollection
net/minecraft/server/ItemSpectralArrow net/minecraft/world/item/SpectralArrowItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityArrow; createArrow
il net/minecraft/data/models/blockstates/BlockStateGenerator
	a ()Lnet/minecraft/server/Block; getBlock
net/minecraft/server/PacketPlayOutWorldBorder$EnumWorldBorderAction net/minecraft/network/protocol/game/ClientboundSetBorderPacket$Type
	g $VALUES
im net/minecraft/data/models/blockstates/Condition
	a ()Lim$c; condition
	a (Lnet/minecraft/server/BlockStateList;)V validate
	a ([Lim;)Lim; and
	b ([Lim;)Lim; or
in net/minecraft/data/models/blockstates/MultiPartGenerator
	a block
	b parts
	a ()Lnet/minecraft/server/Block; getBlock
	a (Lim;Lir;)Lin; with
	a (Lim;Ljava/util/List;)Lin; with
	a (Lim;[Lir;)Lin; with
	a (Lir;)Lin; with
	a (Ljava/util/List;)Lin; with
	a (Lnet/minecraft/server/Block;)Lin; multiPart
	a (Lnet/minecraft/server/BlockStateList;Lin$b;)V lambda$get$0
	b ()Lcom/google/gson/JsonElement; get
io net/minecraft/data/models/blockstates/MultiVariantGenerator
	a block
	b baseVariants
	c seenProperties
	d declaredPropertySets
	a ()Lnet/minecraft/server/Block; getBlock
	a (Lcom/google/common/collect/ImmutableList$Builder;Lir;Lir;)V lambda$null$5
	a (Lcom/mojang/datafixers/util/Pair;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Lip;)Lio; with
	a (Ljava/util/List;Lcom/google/common/collect/ImmutableList$Builder;Lir;)V lambda$mergeVariants$6
	a (Ljava/util/List;Ljava/util/List;)Ljava/util/List; mergeVariants
	a (Ljava/util/Map;Lcom/google/gson/JsonObject;)V lambda$get$4
	a (Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V lambda$get$3
	a (Lnet/minecraft/server/Block;)Lio; multiVariant
	a (Lnet/minecraft/server/Block;Lir;)Lio; multiVariant
	a (Lnet/minecraft/server/Block;[Lir;)Lio; multiVariant
	a (Lnet/minecraft/server/IBlockState;)V lambda$with$0
	b ()Lcom/google/gson/JsonElement; get
	b (Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream; lambda$get$2
net/minecraft/server/VillagePlaceRecord net/minecraft/world/entity/ai/village/poi/PoiRecord
	a pos
	b poiType
	c freeTickets
	d setDirty
	a ()I getFreeTickets
	a (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$codec$3
	a (Lnet/minecraft/server/VillagePlaceRecord;)Ljava/lang/Integer; lambda$null$2
	b ()Z acquireTicket
	b (Lnet/minecraft/server/VillagePlaceRecord;)Lnet/minecraft/server/VillagePlaceType; lambda$null$1
	c ()Z releaseTicket
	c (Lnet/minecraft/server/VillagePlaceRecord;)Lnet/minecraft/server/BlockPosition; lambda$null$0
	d ()Z hasSpace
	e ()Z isOccupied
	f ()Lnet/minecraft/server/BlockPosition; getPos
	g ()Lnet/minecraft/server/VillagePlaceType; getPoiType
ip net/minecraft/data/models/blockstates/PropertyDispatch
	a values
	a ()Ljava/util/Map; getEntries
	a (Liq;)Z lambda$verifyComplete$1
	a (Liq;Ljava/util/List;)V putValue
	a (Lnet/minecraft/server/IBlockState;)Lip$a; property
	a (Lnet/minecraft/server/IBlockState;Liq;)Ljava/util/stream/Stream; lambda$verifyComplete$0
	a (Lnet/minecraft/server/IBlockState;Lnet/minecraft/server/IBlockState;)Lip$b; properties
	a (Lnet/minecraft/server/IBlockState;Lnet/minecraft/server/IBlockState;Lnet/minecraft/server/IBlockState;)Lip$c; properties
	a (Lnet/minecraft/server/IBlockState;Lnet/minecraft/server/IBlockState;Lnet/minecraft/server/IBlockState;Lnet/minecraft/server/IBlockState;)Lip$d; properties
	a (Lnet/minecraft/server/IBlockState;Lnet/minecraft/server/IBlockState;Lnet/minecraft/server/IBlockState;Lnet/minecraft/server/IBlockState;Lnet/minecraft/server/IBlockState;)Lip$e; properties
	b ()Ljava/util/List; getDefinedProperties
	c ()V verifyComplete
iq net/minecraft/data/models/blockstates/Selector
	a EMPTY
	b COMPARE_BY_NAME
	c values
	a ()Liq; empty
	a (Lcfg$a;)Liq; extend
	a (Liq;)Liq; extend
	a ([Lcfg$a;)Liq; of
	b ()Ljava/lang/String; getKey
	b (Lcfg$a;)Ljava/lang/String; lambda$static$0
ir net/minecraft/data/models/blockstates/Variant
	a values
	a ()Lir; variant
	a (Lcom/google/gson/JsonArray;Lir;)V lambda$convertList$1
	a (Lcom/google/gson/JsonObject;Lit$a;)V lambda$get$0
	a (Lir;Lir;)Lir; merge
	a (Lit;Ljava/lang/Object;)Lir; with
	a (Ljava/util/List;)Lcom/google/gson/JsonElement; convertList
	b ()Lcom/google/gson/JsonElement; get
is net/minecraft/data/models/blockstates/VariantProperties
	a X_ROT
	b Y_ROT
	c MODEL
	d UV_LOCK
	e WEIGHT
	a (Lis$a;)Lcom/google/gson/JsonElement; lambda$static$1
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonElement; lambda$static$2
	b (Lis$a;)Lcom/google/gson/JsonElement; lambda$static$0
bds$1 net/minecraft/world/entity/monster/Ravager$1
abs$a net/minecraft/server/packs/repository/Pack$PackConstructor
it net/minecraft/data/models/blockstates/VariantProperty
	a key
	b serializer
	a (Lit;)Ljava/lang/String; access$000
	a (Ljava/lang/Object;)Lit$a; withValue
	b (Lit;)Ljava/util/function/Function; access$100
iu net/minecraft/data/models/blockstates/package-info
iv net/minecraft/data/models/model/DelegatedModel
	a parent
	a ()Lcom/google/gson/JsonElement; get
iw net/minecraft/data/models/model/ModelLocationUtils
	a (Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; decorateBlockModelLocation
	a (Lnet/minecraft/server/Block;)Lnet/minecraft/server/MinecraftKey; getModelLocation
	a (Lnet/minecraft/server/Block;Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; getModelLocation
	a (Lnet/minecraft/server/Item;)Lnet/minecraft/server/MinecraftKey; getModelLocation
	a (Lnet/minecraft/server/Item;Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; getModelLocation
	b (Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; decorateItemModelLocation
csy$b net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette
	a DEFAULT_BLOCK_STATE
	b ids
	c lastId
	a (I)Lnet/minecraft/server/IBlockData; stateFor
	a (Lnet/minecraft/server/IBlockData;)I idFor
	a (Lnet/minecraft/server/IBlockData;I)V addMapping
ix net/minecraft/data/models/model/ModelTemplate
	a model
	b requiredSlots
	c suffix
	a (Lcom/google/gson/JsonObject;Lja;Lnet/minecraft/server/MinecraftKey;)V lambda$null$1
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/MinecraftKey;)V lambda$null$0
	a (Liz;)Ljava/util/Map; createMap
	a (Ljava/util/Map;)Lcom/google/gson/JsonElement; lambda$create$2
	a (Lnet/minecraft/server/Block;Liz;Ljava/util/function/BiConsumer;)Lnet/minecraft/server/MinecraftKey; create
	a (Lnet/minecraft/server/Block;Ljava/lang/String;Liz;Ljava/util/function/BiConsumer;)Lnet/minecraft/server/MinecraftKey; createWithSuffix
	a (Lnet/minecraft/server/MinecraftKey;Liz;Ljava/util/function/BiConsumer;)Lnet/minecraft/server/MinecraftKey; create
	b (Lnet/minecraft/server/Block;Ljava/lang/String;Liz;Ljava/util/function/BiConsumer;)Lnet/minecraft/server/MinecraftKey; createWithOverride
csy$a net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette
	a blocks
	b cache
	a ()Ljava/util/List; blocks
	a (Lnet/minecraft/server/Block;)Ljava/util/List; blocks
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/DefinedStructure$BlockInfo;)Z lambda$null$0
	b (Lnet/minecraft/server/Block;)Ljava/util/List; lambda$blocks$1
net/minecraft/server/LightEngineStorageBlock net/minecraft/world/level/lighting/BlockLightSectionStorage
	d (J)I getLightValue
iy net/minecraft/data/models/model/ModelTemplates
	A FENCE_GATE_OPEN
	B FENCE_GATE_WALL_CLOSED
	C FENCE_GATE_WALL_OPEN
	D PRESSURE_PLATE_UP
	E PRESSURE_PLATE_DOWN
	F PARTICLE_ONLY
	G SLAB_BOTTOM
	H SLAB_TOP
	I LEAVES
	J STAIRS_STRAIGHT
	K STAIRS_INNER
	L STAIRS_OUTER
	M TRAPDOOR_TOP
	N TRAPDOOR_BOTTOM
	O TRAPDOOR_OPEN
	P ORIENTABLE_TRAPDOOR_TOP
	Q ORIENTABLE_TRAPDOOR_BOTTOM
	R ORIENTABLE_TRAPDOOR_OPEN
	S CROSS
	T TINTED_CROSS
	U FLOWER_POT_CROSS
	V TINTED_FLOWER_POT_CROSS
	W RAIL_FLAT
	X RAIL_CURVED
	Y RAIL_RAISED_NE
	Z RAIL_RAISED_SW
	a CUBE
	aA WALL_TORCH
	aB PISTON
	aC PISTON_HEAD
	aD PISTON_HEAD_SHORT
	aE SEAGRASS
	aF TURTLE_EGG
	aG TWO_TURTLE_EGGS
	aH THREE_TURTLE_EGGS
	aI FOUR_TURTLE_EGGS
	aJ SINGLE_FACE
	aK FLAT_ITEM
	aL FLAT_HANDHELD_ITEM
	aM FLAT_HANDHELD_ROD_ITEM
	aN SHULKER_BOX_INVENTORY
	aO BED_INVENTORY
	aP BANNER_INVENTORY
	aQ SKULL_INVENTORY
	aa CARPET
	ab CORAL_FAN
	ac CORAL_WALL_FAN
	ad GLAZED_TERRACOTTA
	ae CHORUS_FLOWER
	af DAYLIGHT_DETECTOR
	ag STAINED_GLASS_PANE_NOSIDE
	ah STAINED_GLASS_PANE_NOSIDE_ALT
	ai STAINED_GLASS_PANE_POST
	aj STAINED_GLASS_PANE_SIDE
	ak STAINED_GLASS_PANE_SIDE_ALT
	al COMMAND_BLOCK
	am ANVIL
	an STEMS
	ao ATTACHED_STEM
	ap CROP
	aq FARMLAND
	ar FIRE_FLOOR
	as FIRE_SIDE
	at FIRE_SIDE_ALT
	au FIRE_UP
	av FIRE_UP_ALT
	aw CAMPFIRE
	ax LANTERN
	ay HANGING_LANTERN
	az TORCH
	b CUBE_DIRECTIONAL
	c CUBE_ALL
	d CUBE_MIRRORED_ALL
	e CUBE_COLUMN
	f CUBE_COLUMN_HORIZONTAL
	g CUBE_TOP
	h CUBE_BOTTOM_TOP
	i CUBE_ORIENTABLE
	j CUBE_ORIENTABLE_TOP_BOTTOM
	k CUBE_ORIENTABLE_VERTICAL
	l BUTTON
	m BUTTON_PRESSED
	n BUTTON_INVENTORY
	o DOOR_BOTTOM
	p DOOR_BOTTOM_HINGE
	q DOOR_TOP
	r DOOR_TOP_HINGE
	s FENCE_POST
	t FENCE_SIDE
	u FENCE_INVENTORY
	v WALL_POST
	w WALL_LOW_SIDE
	x WALL_TALL_SIDE
	y WALL_INVENTORY
	z FENCE_GATE_CLOSED
	a (I)[Lix; lambda$static$1
	a (Ljava/lang/String;Ljava/lang/String;[Lja;)Lix; create
	a (Ljava/lang/String;[Lja;)Lix; create
	a ([Lja;)Lix; create
	b (I)Lix; lambda$static$0
	b (Ljava/lang/String;[Lja;)Lix; createItem
iz net/minecraft/data/models/model/TextureMapping
	a slots
	b forcedSlots
	A (Lnet/minecraft/server/Block;)Liz; campfire
	B (Lnet/minecraft/server/Block;)Liz; layer0
	C (Lnet/minecraft/server/Block;)Lnet/minecraft/server/MinecraftKey; getBlockTexture
	a ()Ljava/util/stream/Stream; getForced
	a (Lja;)Lnet/minecraft/server/MinecraftKey; get
	a (Lja;Lja;)Liz; copySlot
	a (Lja;Lnet/minecraft/server/MinecraftKey;)Liz; put
	a (Lnet/minecraft/server/Block;)Liz; cube
	a (Lnet/minecraft/server/Block;Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; getBlockTexture
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)Liz; attachedStem
	a (Lnet/minecraft/server/Item;)Liz; particleFromItem
	a (Lnet/minecraft/server/Item;Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; getItemTexture
	a (Lnet/minecraft/server/MinecraftKey;)Liz; defaultTexture
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Liz; column
	b (Lja;Lja;)Liz; copyForced
	b (Lja;Lnet/minecraft/server/MinecraftKey;)Liz; putForced
	b (Lnet/minecraft/server/Block;)Liz; defaultTexture
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)Liz; pane
	b (Lnet/minecraft/server/Item;)Liz; layer0
	b (Lnet/minecraft/server/MinecraftKey;)Liz; cube
	b (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/MinecraftKey;)Liz; door
	c (Lja;Lnet/minecraft/server/MinecraftKey;)Liz; copyAndUpdate
	c (Lnet/minecraft/server/Block;)Liz; cross
	c (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)Liz; craftingTable
	c (Lnet/minecraft/server/Item;)Lnet/minecraft/server/MinecraftKey; getItemTexture
	c (Lnet/minecraft/server/MinecraftKey;)Liz; cross
	d (Lja;Lnet/minecraft/server/MinecraftKey;)Liz; singleSlot
	d (Lnet/minecraft/server/Block;)Liz; plant
	d (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)Liz; fletchingTable
	d (Lnet/minecraft/server/MinecraftKey;)Liz; plant
	e (Lnet/minecraft/server/Block;)Liz; rail
	e (Lnet/minecraft/server/MinecraftKey;)Liz; rail
	f (Lnet/minecraft/server/Block;)Liz; wool
	f (Lnet/minecraft/server/MinecraftKey;)Liz; wool
	g (Lnet/minecraft/server/Block;)Liz; stem
	g (Lnet/minecraft/server/MinecraftKey;)Liz; crop
	h (Lnet/minecraft/server/Block;)Liz; pattern
	h (Lnet/minecraft/server/MinecraftKey;)Liz; particle
	i (Lnet/minecraft/server/Block;)Liz; fan
	i (Lnet/minecraft/server/MinecraftKey;)Liz; torch
	j (Lnet/minecraft/server/Block;)Liz; column
	j (Lnet/minecraft/server/MinecraftKey;)Liz; layer0
	k (Lnet/minecraft/server/Block;)Liz; cubeTop
	l (Lnet/minecraft/server/Block;)Liz; logColumn
	m (Lnet/minecraft/server/Block;)Liz; cubeBottomTop
	n (Lnet/minecraft/server/Block;)Liz; cubeBottomTopWithWall
	o (Lnet/minecraft/server/Block;)Liz; columnWithWall
	p (Lnet/minecraft/server/Block;)Liz; door
	q (Lnet/minecraft/server/Block;)Liz; particle
	r (Lnet/minecraft/server/Block;)Liz; fire0
	s (Lnet/minecraft/server/Block;)Liz; fire1
	t (Lnet/minecraft/server/Block;)Liz; lantern
	u (Lnet/minecraft/server/Block;)Liz; torch
	v (Lnet/minecraft/server/Block;)Liz; commandBlock
	w (Lnet/minecraft/server/Block;)Liz; orientableCube
	x (Lnet/minecraft/server/Block;)Liz; orientableCubeOnlyTop
	y (Lnet/minecraft/server/Block;)Liz; orientableCubeSameEnds
	z (Lnet/minecraft/server/Block;)Liz; top
net/minecraft/server/EntityGiantZombie net/minecraft/world/entity/monster/Giant
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
net/minecraft/server/MobSpawnerPhantom net/minecraft/world/level/levelgen/PhantomSpawner
	a nextTick
	a (Lnet/minecraft/server/WorldServer;ZZ)I tick
net/minecraft/server/LootItem net/minecraft/world/level/storage/loot/entries/LootItem
	g item
	a ()Lnet/minecraft/server/LootEntryType; getType
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/server/IMaterial;)Lczp$a; lootTableItem
	a (Lnet/minecraft/server/IMaterial;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; lambda$lootTableItem$0
	a (Lnet/minecraft/server/LootItem;)Lnet/minecraft/server/Item; access$000
ja net/minecraft/data/models/model/TextureSlot
	A CROP
	B DIRT
	C FIRE
	D LANTERN
	E PLATFORM
	F UNSTICKY
	G TORCH
	H LAYER0
	I LIT_LOG
	J id
	K parent
	a ALL
	b TEXTURE
	c PARTICLE
	d END
	e BOTTOM
	f TOP
	g FRONT
	h BACK
	i SIDE
	j NORTH
	k SOUTH
	l EAST
	m WEST
	n UP
	o DOWN
	p CROSS
	q PLANT
	r WALL
	s RAIL
	t WOOL
	u PATTERN
	v PANE
	w EDGE
	x FAN
	y STEM
	z UPPER_STEM
	a ()Ljava/lang/String; getId
	a (Ljava/lang/String;)Lja; create
	a (Ljava/lang/String;Lja;)Lja; create
	b ()Lja; getParent
net/minecraft/server/GeneratorAccessSeed net/minecraft/world/level/WorldGenLevel
	a (Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/StructureGenerator;)Ljava/util/stream/Stream; startsForFeature
jb net/minecraft/data/models/model/TexturedModel
	a CUBE
	b CUBE_MIRRORED
	c COLUMN
	d COLUMN_HORIZONTAL
	e CUBE_TOP_BOTTOM
	f CUBE_TOP
	g ORIENTABLE_ONLY_TOP
	h ORIENTABLE
	i CARPET
	j GLAZED_TERRACOTTA
	k CORAL_FAN
	l PARTICLE_ONLY
	m ANVIL
	n LEAVES
	o LANTERN
	p HANGING_LANTERN
	q SEAGRASS
	r COLUMN_ALT
	s COLUMN_HORIZONTAL_ALT
	t TOP_BOTTOM_WITH_WALL
	u COLUMN_WITH_WALL
	v mapping
	w template
	a ()Lix; getTemplate
	a (Ljava/util/function/Consumer;)Ljb; updateTextures
	a (Ljava/util/function/Function;Lix;)Ljb$a; createDefault
	a (Ljava/util/function/Function;Lix;Lnet/minecraft/server/Block;)Ljb; lambda$createDefault$0
	a (Lnet/minecraft/server/Block;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lnet/minecraft/server/MinecraftKey; createWithSuffix
	a (Lnet/minecraft/server/Block;Ljava/util/function/BiConsumer;)Lnet/minecraft/server/MinecraftKey; create
	a (Lnet/minecraft/server/MinecraftKey;)Ljb; createAllSame
	b ()Liz; getMapping
jc net/minecraft/data/models/model/package-info
jd net/minecraft/data/models/package-info
je net/minecraft/data/package-info
jf net/minecraft/data/recipes/FinishedRecipe
	a ()Lcom/google/gson/JsonObject; serializeRecipe
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
jg net/minecraft/data/recipes/RecipeProvider
	b LOGGER
	c GSON
	d generator
	a ()Ljava/lang/String; getName
	a (Ljava/util/Set;Lnet/minecraft/server/HashCache;Ljava/nio/file/Path;Ljf;)V lambda$run$0
	a (Ljava/util/function/Consumer;)V buildShapelessRecipes
	a (Ljava/util/function/Consumer;Ljava/lang/String;Lnet/minecraft/server/RecipeSerializerCooking;I)V cookRecipes
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V woodFromLogs
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/Tag;)V planksFromLog
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/Item;Lnet/minecraft/server/Item;)V netheriteSmithing
	a (Lnet/minecraft/server/Block;)Lbc$a; insideOf
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;Lnet/minecraft/server/IMaterial;)Lbn$a; has
	a (Lnet/minecraft/server/HashCache;)V run
	a (Lnet/minecraft/server/HashCache;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V saveRecipe
	a (Lnet/minecraft/server/IMaterial;)Lbn$a; has
	a (Lnet/minecraft/server/Tag;)Lbn$a; has
	a ([Lnet/minecraft/server/CriterionConditionItem;)Lbn$a; inventoryTrigger
	b (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V woodenBoat
	b (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/Tag;)V planksFromLogs
	b (Lnet/minecraft/server/HashCache;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V saveAdvancement
	c (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V woodenButton
	d (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V woodenDoor
	e (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V woodenFence
	f (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V woodenFenceGate
	g (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V woodenPressurePlate
	h (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V woodenSlab
	i (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V woodenStairs
	j (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V woodenTrapdoor
	k (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V woodenSign
	l (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V coloredWoolFromWhiteWoolAndDye
	m (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V carpetFromWool
	n (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V coloredCarpetFromWhiteCarpetAndDye
	o (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V bedFromPlanksAndWool
	p (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V bedFromWhiteBedAndDye
	q (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V banner
	r (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V stainedGlassFromGlassAndDye
	s (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V stainedGlassPaneFromStainedGlass
	t (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V stainedGlassPaneFromGlassPaneAndDye
	u (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V coloredTerracottaFromTerracottaAndDye
	v (Ljava/util/function/Consumer;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IMaterial;)V concretePowder
dea$1 com/mojang/blaze3d/font/TrueTypeGlyphProvider$1
jh net/minecraft/data/recipes/ShapedRecipeBuilder
	a LOGGER
	b result
	c count
	d rows
	e key
	f advancement
	g group
	a (Ljava/lang/Character;Lnet/minecraft/server/IMaterial;)Ljh; define
	a (Ljava/lang/Character;Lnet/minecraft/server/RecipeItemStack;)Ljh; define
	a (Ljava/lang/Character;Lnet/minecraft/server/Tag;)Ljh; define
	a (Ljava/lang/String;)Ljh; pattern
	a (Ljava/lang/String;Lnet/minecraft/server/CriterionInstance;)Ljh; unlockedBy
	a (Ljava/util/function/Consumer;)V save
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/MinecraftKey;)V save
	a (Lnet/minecraft/server/IMaterial;)Ljh; shaped
	a (Lnet/minecraft/server/IMaterial;I)Ljh; shaped
	a (Lnet/minecraft/server/MinecraftKey;)V ensureValid
	b (Ljava/lang/String;)Ljh; group
der$a com/mojang/blaze3d/platform/PngInfo$StbReader
	a closed
	a (I)V skip
	a (J)I eof
	a (JI)V skip
	a (JJI)I read
	b (JI)I read
ji net/minecraft/data/recipes/ShapelessRecipeBuilder
	a LOGGER
	b result
	c count
	d ingredients
	e advancement
	f group
	a (Ljava/lang/String;)Lji; group
	a (Ljava/lang/String;Lnet/minecraft/server/CriterionInstance;)Lji; unlockedBy
	a (Ljava/util/function/Consumer;)V save
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/MinecraftKey;)V save
	a (Lnet/minecraft/server/IMaterial;)Lji; shapeless
	a (Lnet/minecraft/server/IMaterial;I)Lji; shapeless
	a (Lnet/minecraft/server/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/server/RecipeItemStack;)Lji; requires
	a (Lnet/minecraft/server/RecipeItemStack;I)Lji; requires
	a (Lnet/minecraft/server/Tag;)Lji; requires
	b (Lnet/minecraft/server/IMaterial;)Lji; requires
	b (Lnet/minecraft/server/IMaterial;I)Lji; requires
der$b com/mojang/blaze3d/platform/PngInfo$StbReaderBufferedChannel
	b channel
	c readBufferAddress
	d bufferSize
	e read
	f consumed
	a (I)V skip
	b (I)V fillReadBuffer
	b (JI)I read
jj net/minecraft/data/recipes/SimpleCookingRecipeBuilder
	a result
	b ingredient
	c experience
	d cookingTime
	e advancement
	f group
	g serializer
	a (Ljava/lang/String;)Ljj; group
	a (Ljava/lang/String;Lnet/minecraft/server/CriterionInstance;)Ljj; unlockedBy
	a (Ljava/util/function/Consumer;)V save
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/MinecraftKey;)V save
	a (Lnet/minecraft/server/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;FI)Ljj; campfireCooking
	a (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;FILnet/minecraft/server/RecipeSerializerCooking;)Ljj; cooking
	b (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;FI)Ljj; blasting
	c (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;FI)Ljj; smelting
	d (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;FI)Ljj; smoking
crv$e net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData
	a rotation
	b position
	c wallType
net/minecraft/server/TrunkPlacers net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType
	a STRAIGHT_TRUNK_PLACER
	b FORKING_TRUNK_PLACER
	c GIANT_TRUNK_PLACER
	d MEGA_JUNGLE_TRUNK_PLACER
	e DARK_OAK_TRUNK_PLACER
	f FANCY_TRUNK_PLACER
	g codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/TrunkPlacers; register
net/minecraft/server/EntityTameableAnimal net/minecraft/world/entity/TamableAnimal
	bo DATA_FLAGS_ID
	bp DATA_OWNERUUID_ID
	willSit orderedToSit
	B_ ()Lnet/minecraft/server/Entity; getOwner
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z wantsToAttack
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bF ()Lnet/minecraft/server/ScoreboardTeamBase; getTeam
	c (Lnet/minecraft/server/EntityLiving;)Z canAttack
	e ()V defineSynchedData
	eL ()V reassessTameGoals
	i (Lnet/minecraft/server/EntityLiving;)Z isOwnedBy
	isSitting ()Z isInSittingPose
	isTamed ()Z isTame
	isWillSit ()Z isOrderedToSit
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
	setSitting (Z)V setInSittingPose
	setTamed (Z)V setTame
	setWillSit (Z)V setOrderedToSit
	t (Z)V spawnTamingParticles
jk net/minecraft/data/recipes/SingleItemRecipeBuilder
	a result
	b ingredient
	c count
	d advancement
	e group
	f type
	a (Ljava/lang/String;)Ljk; group
	a (Ljava/lang/String;Lnet/minecraft/server/CriterionInstance;)Ljk; unlocks
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/MinecraftKey;)V save
	a (Lnet/minecraft/server/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;)Ljk; stonecutting
	a (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;I)Ljk; stonecutting
crv$f net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SecondFloorRoomCollection
	a (Ljava/util/Random;)Ljava/lang/String; get1x1
	a (Ljava/util/Random;Z)Ljava/lang/String; get1x2SideEntrance
	b (Ljava/util/Random;)Ljava/lang/String; get1x1Secret
	b (Ljava/util/Random;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Ljava/util/Random;)Ljava/lang/String; get1x2Secret
	d (Ljava/util/Random;)Ljava/lang/String; get2x2
	e (Ljava/util/Random;)Ljava/lang/String; get2x2Secret
jl net/minecraft/data/recipes/SpecialRecipeBuilder
	a serializer
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljl;)Lnet/minecraft/server/RecipeSerializerComplex; access$000
	a (Lnet/minecraft/server/RecipeSerializerComplex;)Ljl; special
crv$g net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid
	a grid
	b width
	c height
	d valueIfOutside
	a (II)I get
	a (III)V set
	a (IIII)V setif
	a (IIIII)V set
	a (Lcrv$g;)I access$500
	b (III)Z edgesTo
	b (Lcrv$g;)I access$600
jm net/minecraft/data/recipes/UpgradeRecipeBuilder
	a base
	b addition
	c result
	d advancement
	e type
	a (Ljava/lang/String;Lnet/minecraft/server/CriterionInstance;)Ljm; unlocks
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/MinecraftKey;)V save
	a (Lnet/minecraft/server/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/Item;)Ljm; smithing
crv$h net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$ThirdFloorRoomCollection
jn net/minecraft/data/recipes/package-info
crv$i net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$WoodlandMansionPiece
	d templateName
	e rotation
	f mirror
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/DefinedStructureManager;)V loadTemplate
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/WorldGenCanyon net/minecraft/world/level/levelgen/carver/CanyonWorldCarver
	m rs
	a (DDDI)Z skip
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenCarverConfiguration;)Z isStartChunk
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenFeatureConfigurationChance;)Z isStartChunk
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;JIIIDDDFFFIIDLjava/util/BitSet;)V genCanyon
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/server/WorldGenCarverConfiguration;)Z carve
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/server/WorldGenFeatureConfigurationChance;)Z carve
jp net/minecraft/data/structures/SnbtToNbt
	b dumpSnbtTo
	c LOGGER
	d generator
	e filters
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; applyFilters
	a (Ljava/nio/file/Path;)Z lambda$run$0
	a (Ljava/nio/file/Path;Ljava/lang/String;)Ljp$b; readStructure
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; getName
	a (Ljava/util/List;Ljava/nio/file/Path;Ljava/nio/file/Path;)V lambda$run$2
	a (Ljp$a;)Ljp; addFilter
	a (Lnet/minecraft/server/HashCache;)V run
	a (Lnet/minecraft/server/HashCache;Ljava/nio/file/Path;Ljp$b;)V lambda$run$3
	a (Lnet/minecraft/server/HashCache;Ljp$b;Ljava/nio/file/Path;)V storeStructureIfChanged
	b (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljp$b; lambda$null$1
jq net/minecraft/data/structures/StructureUpdater
	a LOGGER
	a (Ljava/lang/String;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; apply
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; patchVersion
	b (Ljava/lang/String;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; updateStructure
jr net/minecraft/data/structures/package-info
js net/minecraft/data/tags/BlockTagsProvider
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; getPath
	b ()V addTags
jt net/minecraft/data/tags/EntityTypeTagsProvider
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; getPath
	b ()V addTags
ju net/minecraft/data/tags/FluidTagsProvider
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; getPath
	b ()V addTags
cre$1 net/minecraft/world/level/levelgen/structure/MineShaftPieces$1
	a $SwitchMap$net$minecraft$world$level$levelgen$feature$MineshaftFeature$Type
	b $SwitchMap$net$minecraft$core$Direction
jv net/minecraft/data/tags/ItemTagsProvider
	d blockTags
	a ()Ljava/lang/String; getName
	a (Laej$e;Laej$e;)V copy
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; getPath
	b ()V addTags
crv$a net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FirstFloorRoomCollection
	a (Ljava/util/Random;)Ljava/lang/String; get1x1
	a (Ljava/util/Random;Z)Ljava/lang/String; get1x2SideEntrance
	b (Ljava/util/Random;)Ljava/lang/String; get1x1Secret
	b (Ljava/util/Random;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Ljava/util/Random;)Ljava/lang/String; get1x2Secret
	d (Ljava/util/Random;)Ljava/lang/String; get2x2
	e (Ljava/util/Random;)Ljava/lang/String; get2x2Secret
net/minecraft/server/BlockSmoker net/minecraft/world/level/block/SmokerBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V openContainer
jw net/minecraft/data/tags/TagsProvider
	b generator
	c registry
	d LOGGER
	e GSON
	f builders
	a (Laej$e;)Ljw$a; tag
	a (Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/server/HashCache;Lnet/minecraft/server/MinecraftKey;Laej$a;)V lambda$run$2
	a (Lnet/minecraft/server/HashCache;)V run
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; getPath
	a (Lnet/minecraft/server/Tag;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; lambda$run$0
	b ()V addTags
	b (Laej$e;)Laej$a; getOrCreateRawBuilder
	b (Lnet/minecraft/server/MinecraftKey;)Laej$a; lambda$getOrCreateRawBuilder$3
	c (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/Object; lambda$run$1
crv$b net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection
	a (Ljava/util/Random;)Ljava/lang/String; get1x1
	a (Ljava/util/Random;Z)Ljava/lang/String; get1x2SideEntrance
	b (Ljava/util/Random;)Ljava/lang/String; get1x1Secret
	b (Ljava/util/Random;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Ljava/util/Random;)Ljava/lang/String; get1x2Secret
	d (Ljava/util/Random;)Ljava/lang/String; get2x2
	e (Ljava/util/Random;)Ljava/lang/String; get2x2Secret
bpe$a net/minecraft/world/item/crafting/UpgradeRecipe$Serializer
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/RecipeSmithing;)V toNetwork
	b (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/RecipeSmithing; fromJson
	b (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/RecipeSmithing; fromNetwork
zc$1 net/minecraft/server/commands/data/StorageDataAccessor$1
	a val$arg
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandDataAccessor; access
jx net/minecraft/data/tags/package-info
crv$c net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionGrid
	a random
	b baseGrid
	c thirdFloorGrid
	d floorRooms
	e entranceX
	f entranceY
	a ()V print
	a (Lcrv$c;)Lcrv$g; access$100
	a (Lcrv$g;)Z cleanEdges
	a (Lcrv$g;II)Z isHouse
	a (Lcrv$g;IIII)Z isRoomId
	a (Lcrv$g;IILnet/minecraft/server/EnumDirection;I)V recursiveCorridor
	a (Lcrv$g;Lcrv$g;)V identifyRooms
	b ()V setupThirdFloor
	b (Lcrv$c;)Lcrv$g; access$200
	b (Lcrv$g;IIII)Lnet/minecraft/server/EnumDirection; get1x2RoomDirection
	c (Lcrv$c;)I access$300
	d (Lcrv$c;)I access$400
	e (Lcrv$c;)[Lcrv$g; access$1000
crv$d net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionPiecePlacer
	a structureManager
	b random
	c startX
	d startY
	a (Ljava/util/List;Lcrv$e;)V entrance
	a (Ljava/util/List;Lcrv$e;Lcrv$g;Lnet/minecraft/server/EnumDirection;IIII)V traverseOuterWalls
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lcrv$b;)V addRoom2x2Secret
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lcrv$g;Lcrv$g;)V createRoof
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/EnumDirection;Lcrv$b;)V addRoom1x1
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;Lcrv$b;)V addRoom2x2
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;Lcrv$b;Z)V addRoom1x2
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Lcrv$c;)V createMansion
	b (Ljava/util/List;Lcrv$e;)V traverseWallPiece
	c (Ljava/util/List;Lcrv$e;)V traverseTurn
	d (Ljava/util/List;Lcrv$e;)V traverseInnerTurn
net/minecraft/server/DataConverterFlattenData net/minecraft/util/datafix/fixes/BlockStateData
	a LOGGER
	b MAP
	c BLOCK_DEFAULTS
	d ID_BY_OLD
	e ID_BY_OLD_NAME
	a ()V finalizeMaps
	a (I)Ljava/lang/String; upgradeBlock
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; upgradeBlockStateTag
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$1
	a (Ljava/lang/String;)Ljava/lang/String; upgradeBlock
	b (I)Lcom/mojang/serialization/Dynamic; getTag
	b (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$0
	b (Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; parse
	map (ILjava/lang/String;[Ljava/lang/String;)V register
dc$b net/minecraft/commands/Commands$ParseFunction
net/minecraft/server/BlockPoweredRail net/minecraft/world/level/block/PoweredRailBlock
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V updateState
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;ZI)Z findPoweredRailSignal
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ZILnet/minecraft/server/BlockPropertyTrackPosition;)Z isSameRailWithPower
	d ()Lnet/minecraft/server/IBlockState; getShapeProperty
net/minecraft/server/PathfinderGoalOwnerHurtByTarget net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal
	a tameAnimal
	b ownerLastHurtBy
	c timestamp
	a ()Z canUse
	c ()V start
net/minecraft/server/DoubleBlockFinder$Result net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult
bul$2 net/minecraft/world/level/block/Block$2
net/minecraft/server/CriterionTriggerCuredZombieVillager net/minecraft/advancements/critereon/CuredZombieVillagerTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lau$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityZombie;Lnet/minecraft/server/EntityVillager;)V trigger
	a (Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/LootTableInfo;Lau$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
bul$1 net/minecraft/world/level/block/Block$1
	a (Lnet/minecraft/server/VoxelShape;)Ljava/lang/Boolean; load
net/minecraft/server/BehaviorPosition net/minecraft/world/entity/ai/behavior/PositionTracker
	a ()Lnet/minecraft/server/Vec3D; currentPosition
	a (Lnet/minecraft/server/EntityLiving;)Z isVisibleBy
	b ()Lnet/minecraft/server/BlockPosition; currentBlockPosition
net/minecraft/server/VoxelShapeCollision net/minecraft/world/phys/shapes/CollisionContext
	a ()Lnet/minecraft/server/VoxelShapeCollision; empty
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/VoxelShapeCollision; of
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/FluidTypeFlowing;)Z canStandOnFluid
	a (Lnet/minecraft/server/Item;)Z isHoldingItem
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/BlockPosition;Z)Z isAbove
	b ()Z isDescending
eay$c net/minecraft/client/renderer/block/model/BlockModelDefinition$MissingVariantException
	a this$0
net/minecraft/server/PacketPlayInUpdateSign net/minecraft/network/protocol/game/ServerboundSignUpdatePacket
	a pos
	b lines
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()[Ljava/lang/String; getLines
net/minecraft/server/ChunkProviderFlat net/minecraft/world/level/levelgen/FlatLevelSource
	d CODEC
	e settings
	a ()Lcom/mojang/serialization/Codec; codec
	a (I)[Lnet/minecraft/server/IBlockData; lambda$getBaseColumn$1
	a (II)Lnet/minecraft/server/IBlockAccess; getBaseColumn
	a (IILnet/minecraft/server/HeightMap$Type;)I getBaseHeight
	a (J)Lnet/minecraft/server/ChunkGenerator; withSeed
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/IChunkAccess;)V fillFromNoise
	a (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; lambda$getBaseColumn$0
	a (Lnet/minecraft/server/RegionLimitedWorldAccess;Lnet/minecraft/server/IChunkAccess;)V buildSurfaceAndBedrock
	c ()I getSpawnHeight
	g ()Lnet/minecraft/server/GeneratorSettingsFlat; settings
bds$c net/minecraft/world/entity/monster/Ravager$RavagerNodeEvaluator
	a (Lnet/minecraft/server/IBlockAccess;ZZLnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathType;)Lnet/minecraft/server/PathType; evaluateBlockPathType
net/minecraft/server/ChatComponentContextual net/minecraft/network/chat/ContextAwareComponent
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatMutableComponent; resolve
eay$b net/minecraft/client/renderer/block/model/BlockModelDefinition$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; getVariants
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Leay; deserialize
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Lebk; getMultiPart
eay$a net/minecraft/client/renderer/block/model/BlockModelDefinition$Context
	a gson
	b definition
	a ()Lnet/minecraft/server/BlockStateList; getDefinition
	a (Lnet/minecraft/server/BlockStateList;)V setDefinition
ks net/minecraft/data/worldgen/biome/BiomeReport
	b LOGGER
	c GSON
	d generator
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; createPath
	a (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeBase; lambda$run$0
	a (Lnet/minecraft/server/HashCache;)V run
net/minecraft/server/CriterionTriggerChangedDimension net/minecraft/advancements/critereon/ChangeDimensionTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Laq$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/ResourceKey;)V trigger
	a (Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/ResourceKey;Laq$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
kv net/minecraft/data/worldgen/biome/package-info
kw net/minecraft/gametest/framework/BeforeBatch
	a ()Ljava/lang/String; batch
kx net/minecraft/gametest/framework/GameTest
	a ()I timeoutTicks
	b ()Ljava/lang/String; batch
	c ()I rotationSteps
	d ()Z required
	e ()Ljava/lang/String; template
	f ()J setupTicks
bul$a net/minecraft/world/level/block/Block$BlockStatePairKey
	a first
	b second
	c direction
net/minecraft/server/CriterionConditionEntityEquipment net/minecraft/advancements/critereon/EntityEquipmentPredicate
	a ANY
	b CAPTAIN
	c head
	d chest
	e legs
	f feet
	g mainhand
	h offhand
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionEntityEquipment; fromJson
	a (Lnet/minecraft/server/Entity;)Z matches
jm$a net/minecraft/data/recipes/UpgradeRecipeBuilder$Result
	a id
	b base
	c addition
	d result
	e advancement
	f advancementId
	g type
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
net/minecraft/server/EntitySheep net/minecraft/world/entity/animal/Sheep
	bo DATA_WOOL_ID
	bp ITEM_BY_DYE
	bq COLORARRAY_BY_COLOR
	br eatAnimationTick
	bs eatBlockGoal
	B ()V ate
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	J ()Lnet/minecraft/server/MinecraftKey; getDefaultLootTable
	K_ ()Z readyForShearing
	N ()V customServerAiStep
	a (B)V handleEntityEvent
	a (Ljava/util/EnumMap;)V lambda$static$0
	a (Ljava/util/Random;)Lnet/minecraft/server/EnumColor; getRandomSheepColor
	a (Lnet/minecraft/server/EntityAnimal;Lnet/minecraft/server/EntityAnimal;)Lnet/minecraft/server/EnumColor; getOffspringColor
	a (Lnet/minecraft/server/EnumColor;)[F getColorArray
	a (Lnet/minecraft/server/EnumColor;Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/InventoryCrafting; makeContainer
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$mobInteract$2
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/RecipeCrafting;)Lnet/minecraft/server/ItemStack; lambda$getOffspringColor$3
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/SoundCategory;)V shear
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EnumColor;Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/EnumColor; lambda$getOffspringColor$4
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntitySheep; getBreedOffspring
	c (Lnet/minecraft/server/EnumColor;)[F createSheepColor
	d (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/EnumColor; lambda$static$1
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	k ()V aiStep
	o ()V registerGoals
	y (F)F getHeadEatPositionScale
	z (F)F getHeadEatAngleScale
biz$5 net/minecraft/world/inventory/LoomMenu$5
	a this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
net/minecraft/server/ProtoChunkTickList net/minecraft/world/level/chunk/ProtoTickList
	a ignore
	b chunkPos
	c toBeTicked
	a ()I size
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	a (Lnet/minecraft/server/TickList;Ljava/util/function/Function;)V copyOut
	b ()Lnet/minecraft/server/NBTTagList; save
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
cgv$b net/minecraft/world/level/chunk/storage/RegionFile$CommitOp
biz$6 net/minecraft/world/inventory/LoomMenu$6
	a val$access
	b this$0
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$onTake$0
biz$3 net/minecraft/world/inventory/LoomMenu$3
	a this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
biz$4 net/minecraft/world/inventory/LoomMenu$4
	a this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
biz$1 net/minecraft/world/inventory/LoomMenu$1
	a this$0
	X_ ()V setChanged
biz$2 net/minecraft/world/inventory/LoomMenu$2
	a this$0
	X_ ()V setChanged
ld net/minecraft/gametest/framework/GameTestGenerator
net/minecraft/server/ShapedRecipes net/minecraft/world/item/crafting/ShapedRecipe
	items recipeItems
	key id
	a ()Lnet/minecraft/server/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lcom/google/gson/JsonArray;)[Ljava/lang/String; access$100
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ItemStack; itemFromJson
	a (Ljava/lang/String;)I firstNonSpace
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;IIZ)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/ShapedRecipes;)I access$300
	a ([Ljava/lang/String;)[Ljava/lang/String; shrink
	a ([Ljava/lang/String;Ljava/util/Map;II)Lnet/minecraft/server/NonNullList; access$200
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	b (Lcom/google/gson/JsonArray;)[Ljava/lang/String; patternFromJson
	b (Lcom/google/gson/JsonObject;)Ljava/util/Map; access$000
	b (Ljava/lang/String;)I lastNonSpace
	b (Lnet/minecraft/server/ShapedRecipes;)I access$400
	b ([Ljava/lang/String;Ljava/util/Map;II)Lnet/minecraft/server/NonNullList; dissolvePattern
	c ()Lnet/minecraft/server/ItemStack; getResultItem
	c (Lcom/google/gson/JsonObject;)Ljava/util/Map; keyFromJson
	c (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$itemFromJson$0
	c (Lnet/minecraft/server/ShapedRecipes;)Ljava/lang/String; access$500
	d ()Ljava/lang/String; getGroup
	d (Lnet/minecraft/server/ShapedRecipes;)Lnet/minecraft/server/NonNullList; access$600
	e (Lnet/minecraft/server/ShapedRecipes;)Lnet/minecraft/server/ItemStack; access$700
	f ()Lnet/minecraft/server/MinecraftKey; getId
	i ()I getWidth
	j ()I getHeight
net/minecraft/server/CommandWeather net/minecraft/server/commands/WeatherCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I setClear
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	b (Lnet/minecraft/server/CommandListenerWrapper;I)I setRain
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	c (Lnet/minecraft/server/CommandListenerWrapper;I)I setThunder
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
bds$a net/minecraft/world/entity/monster/Ravager$RavagerMeleeAttackGoal
	b this$0
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
bds$b net/minecraft/world/entity/monster/Ravager$RavagerNavigation
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
net/minecraft/server/WorldGenFeatureRandomPatch net/minecraft/world/level/levelgen/feature/RandomPatchFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Z place
net/minecraft/server/PathfinderGoalRandomFly net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal
	g ()Lnet/minecraft/server/Vec3D; getPosition
	j ()Lnet/minecraft/server/Vec3D; getTreePos
net/minecraft/server/WorldGenDecoratorRangeVeryBiased net/minecraft/world/level/levelgen/placement/VeryBiasedRangeDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureChanceDecoratorRangeConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/ContainerProperty net/minecraft/world/inventory/DataSlot
	a prevValue
	a ()Lnet/minecraft/server/ContainerProperty; standalone
	a (Lnet/minecraft/server/IContainerProperties;I)Lnet/minecraft/server/ContainerProperty; forContainer
	a ([II)Lnet/minecraft/server/ContainerProperty; shared
	c ()Z checkAndClearUpdateFlag
lk net/minecraft/gametest/framework/GameTestServer
	j LOGGER
	k testBatches
	l spawnPos
	m TEST_GAME_RULES
	n TEST_SETTINGS
	o testTracker
	R_ ()Z shouldInformAdmins
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	a (Lnet/minecraft/server/CrashReport;)V onServerCrash
	a (Lnet/minecraft/server/EnumGamemode;ZI)Z publishServer
	a (Lnet/minecraft/server/GameRules;)V lambda$static$0
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V lambda$tickServer$2
	aZ ()Z haveTestsStarted
	b (Lnet/minecraft/server/GameTestHarnessInfo;)V lambda$tickServer$1
	b (Lnet/minecraft/server/WorldServer;)V startTests
	d ()Z initServer
	e ()V onServerExit
	f ()Z isHardcore
	g ()I getOperatorUserPermissionLevel
	h ()I getFunctionCompilationLevel
	i ()Z shouldRconBroadcast
	j ()Z isDedicatedServer
	k ()I getRateLimitPacketsPerSecond
	l ()Z isEpollEnabled
	m ()Z isCommandBlockEnabled
	n ()Z isPublished
	o ()Ljava/util/Optional; getModdedStatus
net/minecraft/server/DataConverterRiding net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix
	a ()Ljava/lang/IllegalStateException; lambda$null$4
	a (Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$cap$6
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$5
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Either; lambda$null$2
	b ()Ljava/lang/IllegalStateException; lambda$null$3
	c ()Ljava/lang/IllegalStateException; lambda$null$1
	d ()Ljava/lang/IllegalStateException; lambda$null$0
ln net/minecraft/gametest/framework/JUnitLikeTestReporter
	a document
	b testSuite
	c stopwatch
	d destination
	a ()V finish
	a (Ljava/io/File;)V save
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V onTestFailed
	a (Lnet/minecraft/server/GameTestHarnessInfo;Ljava/lang/String;)Lorg/w3c/dom/Element; createTestCase
	b (Lnet/minecraft/server/GameTestHarnessInfo;)V onTestSuccess
cq$a net/minecraft/advancements/critereon/TickTrigger$TriggerInstance
net/minecraft/server/BehaviorSchedule net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
lr net/minecraft/gametest/framework/TeamcityTestReporter
	a LOGGER
	b ESCAPER
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V onTestFailed
	b (Lnet/minecraft/server/GameTestHarnessInfo;)V onTestSuccess
net/minecraft/server/WorldGenDungeons net/minecraft/world/level/levelgen/feature/MonsterRoomFeature
	a LOGGER
	ab MOBS
	ac AIR
	a (Ljava/util/Random;)Lnet/minecraft/server/EntityTypes; randomEntityId
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/DataConverterRegistry net/minecraft/util/datafix/DataFixers
	a SAME
	b SAME_NAMESPACED
	c DATA_FIXER
	a ()Lcom/mojang/datafixers/DataFixer; getDataFixer
	a (Lcom/mojang/datafixers/DataFixerBuilder;)V addFixers
	a (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$2
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator; createRenamer
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; lambda$createRenamer$4
	a (Ljava/util/Map;)Ljava/util/function/UnaryOperator; createRenamer
	a (Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String; lambda$createRenamer$3
	b ()Lcom/mojang/datafixers/DataFixer; createFixerUpper
	b (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$1
	c (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$0
lx net/minecraft/gametest/framework/package-info
czu$f net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount
	a TYPE
	b bonusMultiplier
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lczu$b; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Ljava/util/Random;II)I calculateNewCount
net/minecraft/server/LootTables net/minecraft/world/level/storage/loot/BuiltInLootTables
	A JUNGLE_TEMPLE
	B JUNGLE_TEMPLE_DISPENSER
	C IGLOO_CHEST
	D WOODLAND_MANSION
	E UNDERWATER_RUIN_SMALL
	F UNDERWATER_RUIN_BIG
	G BURIED_TREASURE
	H SHIPWRECK_MAP
	I SHIPWRECK_SUPPLY
	J SHIPWRECK_TREASURE
	K PILLAGER_OUTPOST
	L BASTION_TREASURE
	M BASTION_OTHER
	N BASTION_BRIDGE
	O BASTION_HOGLIN_STABLE
	P RUINED_PORTAL
	Q SHEEP_WHITE
	R SHEEP_ORANGE
	S SHEEP_MAGENTA
	T SHEEP_LIGHT_BLUE
	U SHEEP_YELLOW
	V SHEEP_LIME
	W SHEEP_PINK
	X SHEEP_GRAY
	Y SHEEP_LIGHT_GRAY
	Z SHEEP_CYAN
	a EMPTY
	aA IMMUTABLE_LOCATIONS
	aa SHEEP_PURPLE
	ab SHEEP_BLUE
	ac SHEEP_BROWN
	ad SHEEP_GREEN
	ae SHEEP_RED
	af SHEEP_BLACK
	ag FISHING
	ah FISHING_JUNK
	ai FISHING_TREASURE
	aj FISHING_FISH
	ak CAT_MORNING_GIFT
	al ARMORER_GIFT
	am BUTCHER_GIFT
	an CARTOGRAPHER_GIFT
	ao CLERIC_GIFT
	ap FARMER_GIFT
	aq FISHERMAN_GIFT
	ar FLETCHER_GIFT
	as LEATHERWORKER_GIFT
	at LIBRARIAN_GIFT
	au MASON_GIFT
	av SHEPHERD_GIFT
	aw TOOLSMITH_GIFT
	ax WEAPONSMITH_GIFT
	ay PIGLIN_BARTERING
	az LOCATIONS
	b SPAWN_BONUS_CHEST
	c END_CITY_TREASURE
	d SIMPLE_DUNGEON
	e VILLAGE_WEAPONSMITH
	f VILLAGE_TOOLSMITH
	g VILLAGE_ARMORER
	h VILLAGE_CARTOGRAPHER
	i VILLAGE_MASON
	j VILLAGE_SHEPHERD
	k VILLAGE_BUTCHER
	l VILLAGE_FLETCHER
	m VILLAGE_FISHER
	n VILLAGE_TANNERY
	o VILLAGE_TEMPLE
	p VILLAGE_DESERT_HOUSE
	q VILLAGE_PLAINS_HOUSE
	r VILLAGE_TAIGA_HOUSE
	s VILLAGE_SNOWY_HOUSE
	t VILLAGE_SAVANNA_HOUSE
	u ABANDONED_MINESHAFT
	v NETHER_BRIDGE
	w STRONGHOLD_LIBRARY
	x STRONGHOLD_CROSSING
	y STRONGHOLD_CORRIDOR
	z DESERT_PYRAMID
	a ()Ljava/util/Set; all
	a (Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; register
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; register
azy$a net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal
	i cat
	a ()Z canUse
	b ()Z canContinueToUse
lz net/minecraft/locale/package-info
azy$b net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal
	a cat
	b ownerPlayer
	c goalPos
	d onBedTicks
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; lambda$canUse$1
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPosition; lambda$canUse$0
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z spaceIsOccupied
	h ()V giveMorningGift
net/minecraft/server/EntityVindicator net/minecraft/world/entity/monster/Vindicator
	b DOOR_BREAKING_PREDICATE
	bo isJohnny
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	N ()V customServerAiStep
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityVindicator;)Ljava/util/Random; access$100
	a (Lnet/minecraft/server/EnumDifficulty;)Z lambda$static$0
	a (Lnet/minecraft/server/IChatBaseComponent;)V setCustomName
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/server/EntityVindicator;)Z access$200
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eL ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	eM ()Ljava/util/function/Predicate; access$000
	m ()Lbcv$a; getArmPose
	o ()V registerGoals
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
net/minecraft/server/CommandDataAccessorTile net/minecraft/server/commands/data/BlockDataAccessor
	a PROVIDER
	b ERROR_NOT_A_BLOCK_ENTITY
	c entity
	d pos
	a ()Lnet/minecraft/server/NBTTagCompound; getData
	a (Ldr$h;DI)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Ljava/lang/String;)Lza$c; lambda$static$0
	a (Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/server/NBTTagCompound;)V setData
	b ()Lnet/minecraft/server/IChatBaseComponent; getModifiedSuccess
	c ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; access$000
net/minecraft/server/WorldGenCaves net/minecraft/world/level/levelgen/carver/CaveWorldCarver
	a ()I getCaveBound
	a (DDDI)Z skip
	a (Ljava/util/Random;)F getThickness
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenCarverConfiguration;)Z isStartChunk
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenFeatureConfigurationChance;)Z isStartChunk
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;JIIIDDDFDLjava/util/BitSet;)V genRoom
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;JIIIDDDFFFIIDLjava/util/BitSet;)V genTunnel
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/server/WorldGenCarverConfiguration;)Z carve
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/server/WorldGenFeatureConfigurationChance;)Z carve
	b ()D getYScale
	b (Ljava/util/Random;)I getCaveY
net/minecraft/server/EntityVex net/minecraft/world/entity/monster/Vex
	b DATA_FLAGS_ID
	bo hasLimitedLife
	bp limitedLifeTicks
	c owner
	d boundOrigin
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (I)V setLimitedLife
	a (IZ)V setVexFlag
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityInsentient;)V setOwner
	a (Lnet/minecraft/server/EntityVex;)Ljava/util/Random; access$000
	a (Lnet/minecraft/server/EnumMoveType;Lnet/minecraft/server/Vec3D;)V move
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	aQ ()F getBrightness
	b (I)Z getVexFlag
	b (Lnet/minecraft/server/EntityVex;)Lnet/minecraft/server/ControllerMove; access$100
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityVex;)Lnet/minecraft/server/ControllerMove; access$200
	d (Lnet/minecraft/server/EntityVex;)Ljava/util/Random; access$300
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityVex;)Ljava/util/Random; access$400
	eK ()Lnet/minecraft/server/EntityInsentient; getOwner
	eL ()Lnet/minecraft/server/BlockPosition; getBoundOrigin
	f (Lnet/minecraft/server/EntityVex;)Ljava/util/Random; access$500
	g (Lnet/minecraft/server/BlockPosition;)V setBoundOrigin
	g (Lnet/minecraft/server/EntityVex;)Ljava/util/Random; access$600
	h (Lnet/minecraft/server/EntityVex;)Lnet/minecraft/server/ControllerMove; access$700
	i (Lnet/minecraft/server/EntityVex;)Lnet/minecraft/server/EntityInsentient; access$800
	j ()V tick
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	o ()V registerGoals
	setCharging (Z)V setIsCharging
net/minecraft/server/ItemAir net/minecraft/world/item/AirItem
	a block
	a ()Ljava/lang/String; getDescriptionId
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbni;)V appendHoverText
net/minecraft/server/GenLayerSpecial$Special3 net/minecraft/world/level/newbiome/layer/AddEdgeLayer$IntroduceSpecial
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
drg$a net/minecraft/client/gui/screens/packs/TransferableSelectionList$PackEntry
	a minecraft
	b screen
	c parent
	d pack
	e nameDisplayCache
	f descriptionDisplayCache
	g incompatibleNameDisplayCache
	h incompatibleDescriptionDisplayCache
	a ()Z showHoverOverlay
	a (DDI)Z mouseClicked
	a (Ldfj;IIIIIIIZF)V render
	a (Ldjw;Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/FormattedString; cacheName
	a (Z)V lambda$mouseClicked$0
	b (Ldjw;Lnet/minecraft/server/IChatBaseComponent;)Ldlr; cacheDescription
dan$a net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetCount; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetCount;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/VillagePlaceSection net/minecraft/world/entity/ai/village/poi/PoiSection
	a LOGGER
	b records
	c byType
	d setDirty
	e isValid
	a ()Z isValid
	a (Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;)V lambda$refresh$10
	a (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$codec$2
	a (Ljava/util/Map$Entry;)Ljava/util/stream/Stream; lambda$getRecords$5
	a (Ljava/util/function/Consumer;)V refresh
	a (Ljava/util/function/Predicate;Ljava/util/Map$Entry;)Z lambda$getRecords$4
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getRecords
	a (Lnet/minecraft/server/BlockPosition;)V remove
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z exists
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;)V add
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;I)Lnet/minecraft/server/VillagePlaceRecord; lambda$null$9
	a (Lnet/minecraft/server/VillagePlaceRecord;)Z add
	a (Lnet/minecraft/server/VillagePlaceSection;)Ljava/util/List; lambda$null$1
	a (Lnet/minecraft/server/VillagePlaceType;)Ljava/util/Set; lambda$add$8
	b ()V clear
	b (Ljava/lang/Runnable;)Lnet/minecraft/server/VillagePlaceSection; lambda$codec$3
	b (Lnet/minecraft/server/BlockPosition;)I getFreeTickets
	b (Lnet/minecraft/server/VillagePlaceSection;)Ljava/lang/Boolean; lambda$null$0
	b (Lnet/minecraft/server/VillagePlaceType;)Ljava/lang/Object; lambda$add$6
	c (Lnet/minecraft/server/BlockPosition;)Z release
	d (Lnet/minecraft/server/BlockPosition;)Ljava/util/Optional; getType
	e (Lnet/minecraft/server/BlockPosition;)Ljava/lang/Object; lambda$add$7
net/minecraft/server/AttributeModifiable net/minecraft/world/entity/ai/attributes/AttributeInstance
	a attribute
	b modifiersByOperation
	c modifierById
	d permanentModifiers
	e baseValue
	f dirty
	g cachedValue
	h onDirty
	a (Ljava/util/UUID;)Lnet/minecraft/server/AttributeModifier; getModifier
	a (Lnet/minecraft/server/AttributeModifiable;)V replaceFrom
	a (Lnet/minecraft/server/AttributeModifier$Operation;)Ljava/util/Set; getModifiers
	a (Lnet/minecraft/server/AttributeModifier$Operation;Ljava/util/Set;)V lambda$replaceFrom$1
	a (Lnet/minecraft/server/AttributeModifier;)Z hasModifier
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	addModifier (Lnet/minecraft/server/AttributeModifier;)V addPermanentModifier
	b (Ljava/util/UUID;)V removeModifier
	b (Lnet/minecraft/server/AttributeModifier$Operation;)Ljava/util/Collection; getModifiersOrEmpty
	b (Lnet/minecraft/server/AttributeModifier;)V addTransientModifier
	c (Ljava/util/UUID;)Z removePermanentModifier
	c (Lnet/minecraft/server/AttributeModifier$Operation;)Ljava/util/Set; lambda$getModifiers$0
	d ()V setDirty
	e ()V removeModifiers
	e (Lnet/minecraft/server/AttributeModifier;)V addModifier
	g ()Lnet/minecraft/server/NBTTagCompound; save
	h ()D calculateValue
	setValue (D)V setBaseValue
net/minecraft/server/MemoryTarget net/minecraft/world/entity/ai/memory/WalkTarget
	a target
	b speedModifier
	c closeEnoughDist
	a ()Lnet/minecraft/server/BehaviorPosition; getTarget
	b ()F getSpeedModifier
	c ()I getCloseEnoughDist
net/minecraft/server/GenLayerSpecial$Special1 net/minecraft/world/level/newbiome/layer/AddEdgeLayer$CoolWarm
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/ItemTippedArrow net/minecraft/world/item/TippedArrowItem
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbni;)V appendHoverText
	f (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; getDescriptionId
	r ()Lnet/minecraft/server/ItemStack; getDefaultInstance
net/minecraft/server/GenLayerSpecial$Special2 net/minecraft/world/level/newbiome/layer/AddEdgeLayer$HeatIce
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/ILightAccess net/minecraft/world/level/chunk/LightChunkGetter
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;)V onLightUpdate
	c (II)Lnet/minecraft/server/IBlockAccess; getChunkForLighting
	getWorld ()Lnet/minecraft/server/IBlockAccess; getLevel
mx net/minecraft/nbt/package-info
net/minecraft/server/BlockTrapdoor net/minecraft/world/level/block/TrapDoorBlock
	c POWERED
	d WATERLOGGED
	e EAST_OPEN_AABB
	f WEST_OPEN_AABB
	g SOUTH_OPEN_AABB
	h NORTH_OPEN_AABB
	i BOTTOM_AABB
	j TOP_AABB
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)V playSound
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/PistonUtil net/minecraft/world/level/block/piston/PistonMath
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/EnumDirection;D)Lnet/minecraft/server/AxisAlignedBB; getMovementArea
czu$b net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Ljava/util/Random;II)I calculateNewCount
czu$c net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaDeserializer
net/minecraft/server/BlockRespawnAnchor net/minecraft/world/level/block/RespawnAnchorBlock
	a CHARGE
	b RESPAWN_HORIZONTAL_OFFSETS
	c RESPAWN_OFFSETS
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/World;)Z isWaterThatWouldFlow
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/ICollisionAccess;Lnet/minecraft/server/BlockPosition;)Ljava/util/Optional; findStandUpPosition
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/ICollisionAccess;Lnet/minecraft/server/BlockPosition;Z)Ljava/util/Optional; findStandUpPosition
	a (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;I)I getScaledChargeLevel
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/ItemStack;)Z isRespawnFuel
	a (Lnet/minecraft/server/World;)Z canSetSpawn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z lambda$explode$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V charge
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V explode
	h (Lnet/minecraft/server/IBlockData;)Z canBeCharged
czu$d net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops
	a TYPE
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lczu$b; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Ljava/util/Random;II)I calculateNewCount
net/minecraft/server/BlockBase$Info net/minecraft/world/level/block/state/BlockBehaviour$Properties
	a material
	b materialColor
	c hasCollision
	d soundType
	e lightEmission
	f explosionResistance
	g destroyTime
	h requiresCorrectToolForDrops
	i isRandomlyTicking
	j friction
	k speedFactor
	l jumpFactor
	m drops
	n canOcclude
	o isAir
	p isValidSpawn
	q isRedstoneConductor
	r isSuffocating
	s isViewBlocking
	t hasPostProcess
	u emissiveRendering
	v dynamicShape
	a ()Lnet/minecraft/server/BlockBase$Info; noCollission
	a (F)Lnet/minecraft/server/BlockBase$Info; friction
	a (FF)Lnet/minecraft/server/BlockBase$Info; strength
	a (Lced$d;)Lnet/minecraft/server/BlockBase$Info; isValidSpawn
	a (Lced$e;)Lnet/minecraft/server/BlockBase$Info; isRedstoneConductor
	a (Ljava/util/function/ToIntFunction;)Lnet/minecraft/server/BlockBase$Info; lightLevel
	a (Lnet/minecraft/server/Block;)Lnet/minecraft/server/BlockBase$Info; dropsLike
	a (Lnet/minecraft/server/BlockBase$Info;)Lnet/minecraft/server/Material; access$000
	a (Lnet/minecraft/server/BlockBase;)Lnet/minecraft/server/BlockBase$Info; copy
	a (Lnet/minecraft/server/IBlockData;)I lambda$new$0
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z lambda$new$5
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z lambda$new$1
	a (Lnet/minecraft/server/Material;)Lnet/minecraft/server/BlockBase$Info; of
	a (Lnet/minecraft/server/Material;Ljava/util/function/Function;)Lnet/minecraft/server/BlockBase$Info; of
	a (Lnet/minecraft/server/Material;Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/BlockBase$Info; of
	a (Lnet/minecraft/server/Material;Lnet/minecraft/server/MaterialMapColor;)Lnet/minecraft/server/BlockBase$Info; of
	a (Lnet/minecraft/server/MaterialMapColor;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/MaterialMapColor; lambda$new$6
	a (Lnet/minecraft/server/SoundEffectType;)Lnet/minecraft/server/BlockBase$Info; sound
	b ()Lnet/minecraft/server/BlockBase$Info; noOcclusion
	b (F)Lnet/minecraft/server/BlockBase$Info; speedFactor
	b (Lced$e;)Lnet/minecraft/server/BlockBase$Info; isSuffocating
	b (Lnet/minecraft/server/BlockBase$Info;)Z access$100
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z lambda$new$4
	c ()Lnet/minecraft/server/BlockBase$Info; instabreak
	c (F)Lnet/minecraft/server/BlockBase$Info; jumpFactor
	c (Lced$e;)Lnet/minecraft/server/BlockBase$Info; isViewBlocking
	c (Lnet/minecraft/server/BlockBase$Info;)Lnet/minecraft/server/MinecraftKey; access$200
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z lambda$new$3
	d ()Lnet/minecraft/server/BlockBase$Info; randomTicks
	d (F)Lnet/minecraft/server/BlockBase$Info; strength
	d (Lced$e;)Lnet/minecraft/server/BlockBase$Info; hasPostProcess
	d (Lnet/minecraft/server/BlockBase$Info;)F access$300
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z lambda$new$2
	e ()Lnet/minecraft/server/BlockBase$Info; dynamicShape
	e (Lced$e;)Lnet/minecraft/server/BlockBase$Info; emissiveRendering
	e (Lnet/minecraft/server/BlockBase$Info;)Z access$400
	f ()Lnet/minecraft/server/BlockBase$Info; noDrops
	f (Lnet/minecraft/server/BlockBase$Info;)Lnet/minecraft/server/SoundEffectType; access$500
	g ()Lnet/minecraft/server/BlockBase$Info; air
	g (Lnet/minecraft/server/BlockBase$Info;)F access$600
	h ()Lnet/minecraft/server/BlockBase$Info; requiresCorrectToolForDrops
	h (Lnet/minecraft/server/BlockBase$Info;)F access$700
	i (Lnet/minecraft/server/BlockBase$Info;)F access$800
	j (Lnet/minecraft/server/BlockBase$Info;)Z access$900
	k (Lnet/minecraft/server/BlockBase$Info;)Ljava/util/function/Function; access$1000
	l (Lnet/minecraft/server/BlockBase$Info;)Ljava/util/function/ToIntFunction; access$1100
	m (Lnet/minecraft/server/BlockBase$Info;)Z access$1200
	n (Lnet/minecraft/server/BlockBase$Info;)F access$1300
	o (Lnet/minecraft/server/BlockBase$Info;)Z access$1400
	p (Lnet/minecraft/server/BlockBase$Info;)Z access$1500
	q (Lnet/minecraft/server/BlockBase$Info;)Lced$e; access$1600
	r (Lnet/minecraft/server/BlockBase$Info;)Lced$e; access$1700
	s (Lnet/minecraft/server/BlockBase$Info;)Lced$e; access$1800
	t (Lnet/minecraft/server/BlockBase$Info;)Lced$e; access$1900
	u (Lnet/minecraft/server/BlockBase$Info;)Lced$e; access$2000
	v (Lnet/minecraft/server/BlockBase$Info;)Lced$d; access$2200
czu$e net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionApplyBonus; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionApplyBonus;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonParseException; lambda$deserialize$0
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
czu$a net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount
	a TYPE
	b extraRounds
	c probability
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lczu$b; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Ljava/util/Random;II)I calculateNewCount
net/minecraft/server/DataConverterEntityBlockState net/minecraft/util/datafix/fixes/EntityBlockStateFix
	a MAP
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateFallingBlock
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; updateBlockToBlockState
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateEntity
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Integer; lambda$null$7
	a (Lcom/mojang/serialization/Dynamic;)Ljava/lang/Integer; lambda$null$8
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$updateFallingBlock$10
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Unit;)Ljava/lang/Integer; lambda$null$9
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$updateBlockToBlockState$12
	a (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$null$11
	a (Ljava/lang/String;)I getBlockId
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$5
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$4
	b (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$null$6
	c (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	d (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
net/minecraft/server/LootItemConditionReference net/minecraft/world/level/storage/loot/predicates/ConditionReference
	a LOGGER
	b name
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/LootItemConditionReference;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	a (Lnet/minecraft/server/MinecraftKey;)Ldbl$a; conditionReference
	b ()Lnet/minecraft/server/LootItemConditionType; getType
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootItemCondition; lambda$conditionReference$0
net/minecraft/server/ChatClickable net/minecraft/network/chat/ClickEvent
	a action
	b value
	a ()Lnet/minecraft/server/ChatClickable$EnumClickAction; getAction
	b ()Ljava/lang/String; getValue
net/minecraft/server/EntityBoat$EnumBoatType net/minecraft/world/entity/vehicle/Boat$Type
	g name
	h planks
	i $VALUES
	a ()Ljava/lang/String; getName
	a (I)Lnet/minecraft/server/EntityBoat$EnumBoatType; byId
	a (Ljava/lang/String;)Lnet/minecraft/server/EntityBoat$EnumBoatType; byName
	b ()Lnet/minecraft/server/Block; getPlanks
net/minecraft/server/LootItemFunctionSetAttribute net/minecraft/world/level/storage/loot/functions/SetAttributesFunction
	a modifiers
	a (Ljava/lang/String;Lnet/minecraft/server/AttributeBase;Lnet/minecraft/server/AttributeModifier$Operation;Lnet/minecraft/server/LootValueBounds;)Ldak$c; modifier
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionSetAttribute;)Ljava/util/List; access$800
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
	c ()Ldak$a; setAttributes
nq net/minecraft/network/chat/CommonComponents
	a OPTION_ON
	b OPTION_OFF
	c GUI_DONE
	d GUI_CANCEL
	e GUI_YES
	f GUI_NO
	g GUI_PROCEED
	h GUI_BACK
	i CONNECT_FAILED
	a (Lnet/minecraft/server/IChatBaseComponent;Z)Lnet/minecraft/server/IChatMutableComponent; optionStatus
	a (Z)Lnet/minecraft/server/IChatBaseComponent; optionStatus
net/minecraft/server/DragonControllerLandedFlame net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase
	b flameTicks
	c flameCount
	d flame
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	e ()V end
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	j ()V resetFlameCount
net/minecraft/server/ChunkConverter net/minecraft/world/level/chunk/UpgradeData
	a EMPTY
	b LOGGER
	c DIRECTIONS
	d sides
	e index
	f MAP
	g CHUNKY_FIXERS
	a ()Z isEmpty
	a (Lnet/minecraft/server/Chunk;)V upgrade
	a (Lnet/minecraft/server/Chunk;Lnet/minecraft/server/EnumDirection8;)V upgradeSides
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateState
	a (Lnet/minecraft/server/World;Lcgo$a;)V lambda$upgrade$0
	b ()Lnet/minecraft/server/NBTTagCompound; write
	b (Lnet/minecraft/server/Chunk;)V upgradeInside
	c ()Ljava/util/Map; access$200
	d ()Ljava/util/Set; access$300
net/minecraft/server/ItemMilkBucket net/minecraft/world/item/MilkBucketItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	d_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	e_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
net/minecraft/server/PacketPlayOutSpawnEntityExperienceOrb net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket
	a id
	b x
	c y
	d z
	e value
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()I getValue
net/minecraft/server/BlockFacingHorizontal net/minecraft/world/level/block/HorizontalDirectionalBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
net/minecraft/server/PacketPlayOutNBTQuery net/minecraft/network/protocol/game/ClientboundTagQueryPacket
	a transactionId
	b tag
	a ()Z isSkippable
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getTransactionId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/NBTTagCompound; getTag
net/minecraft/server/DataConverterBanner net/minecraft/util/datafix/fixes/ItemBannerColorFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
cyr$a net/minecraft/world/level/storage/loot/IntLimiter$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootIntegerLimit; deserialize
	a (Lnet/minecraft/server/LootIntegerLimit;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
oc net/minecraft/network/chat/SubStringSource
	a plainText
	b charStyles
	c reverseCharModifier
	a ()Ljava/lang/String; getPlainText
	a (I)I lambda$create$0
	a (IIZ)Ljava/util/List; substring
	a (Ljava/lang/String;)Ljava/lang/String; lambda$create$1
	a (Ljava/lang/StringBuilder;Ljava/util/List;ILnet/minecraft/server/ChatModifier;I)Z lambda$null$2
	a (Ljava/lang/StringBuilder;Ljava/util/List;Lnet/minecraft/server/ChatModifier;Ljava/lang/String;)Ljava/util/Optional; lambda$create$3
	a (Lnet/minecraft/server/IChatFormatted;)Loc; create
	a (Lnet/minecraft/server/IChatFormatted;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Ljava/util/function/UnaryOperator;)Loc; create
oh net/minecraft/network/chat/package-info
net/minecraft/server/IResourceManager$Empty net/minecraft/server/packs/resources/ResourceManager$Empty
	b $VALUES
	a ()Ljava/util/Set; getNamespaces
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; listResources
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/IResource; getResource
	b ()Ljava/util/stream/Stream; listPacks
	b (Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Lnet/minecraft/server/MinecraftKey;)Ljava/util/List; getResources
oi net/minecraft/network/package-info
net/minecraft/server/BlockGrassPath net/minecraft/world/level/block/GrassPathBlock
	a SHAPE
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c_ (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/server/EntitySpectralArrow net/minecraft/world/entity/projectile/SpectralArrow
	a (Lnet/minecraft/server/EntityLiving;)V doPostHurtEffects
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	j ()V tick
	m ()Lnet/minecraft/server/ItemStack; getPickupItem
net/minecraft/server/PathfinderGoalBreath net/minecraft/world/entity/ai/goal/BreathAirGoal
	a mob
	C_ ()Z isInterruptable
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z givesAir
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	g ()V findAirPosition
cyr$1 net/minecraft/world/level/storage/loot/IntLimiter$1
wf$a$2 net/minecraft/server/commands/AdvancementCommands$Action$2
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Advancement;)Z perform
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Advancement;Ljava/lang/String;)Z performCriterion
wf$a$1 net/minecraft/server/commands/AdvancementCommands$Action$1
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Advancement;)Z perform
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Advancement;Ljava/lang/String;)Z performCriterion
yq$a net/minecraft/server/commands/TeleportCommand$LookAt
	a position
	b entity
	c anchor
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;)V perform
der$1 com/mojang/blaze3d/platform/PngInfo$1
net/minecraft/server/DynamicOpsNBT net/minecraft/nbt/NbtOps
	a INSTANCE
	a ()Lnet/minecraft/server/NBTBase; empty
	a (B)Lnet/minecraft/server/NBTBase; createByte
	a (BB)Lnet/minecraft/server/NBTList; createGenericList
	a (BBB)Z typesMatch
	a (D)Lnet/minecraft/server/NBTBase; createDouble
	a (F)Lnet/minecraft/server/NBTBase; createFloat
	a (I)Lnet/minecraft/server/NBTBase; createInt
	a (J)Lnet/minecraft/server/NBTBase; createLong
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/NBTBase;)Ljava/lang/Object; convertTo
	a (Ljava/lang/Number;)Lnet/minecraft/server/NBTBase; createNumeric
	a (Ljava/lang/String;)Lnet/minecraft/server/NBTBase; createString
	a (Ljava/lang/String;Ljava/lang/String;)Z lambda$remove$14
	a (Ljava/nio/ByteBuffer;)Lnet/minecraft/server/NBTBase; createByteList
	a (Ljava/util/List;Lnet/minecraft/server/NBTTagCompound;Lcom/mojang/datafixers/util/Pair;)V lambda$mergeToMap$5
	a (Ljava/util/function/BiConsumer;Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;)V lambda$null$7
	a (Ljava/util/stream/IntStream;)Lnet/minecraft/server/NBTBase; createIntList
	a (Ljava/util/stream/LongStream;)Lnet/minecraft/server/NBTBase; createLongList
	a (Ljava/util/stream/Stream;)Lnet/minecraft/server/NBTBase; createMap
	a (Lnet/minecraft/server/NBTBase;)Lcom/mojang/serialization/DataResult; getNumberValue
	a (Lnet/minecraft/server/NBTBase;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; mergeToMap
	a (Lnet/minecraft/server/NBTBase;Ljava/lang/String;)Lnet/minecraft/server/NBTBase; remove
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)Lcom/mojang/serialization/DataResult; mergeToList
	a (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;)Lcom/mojang/serialization/DataResult; mergeToList
	a (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;)Lcom/mojang/serialization/DataResult; mergeToMap
	a (Lnet/minecraft/server/NBTList;Lnet/minecraft/server/NBTBase;)V lambda$fillMany$2
	a (Lnet/minecraft/server/NBTList;Lnet/minecraft/server/NBTBase;Ljava/util/List;)V fillMany
	a (Lnet/minecraft/server/NBTList;Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;)V fillOne
	a (Lnet/minecraft/server/NBTTagCompound;Lcom/mojang/datafixers/util/Pair;)V lambda$createMap$9
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; lambda$getMapValues$6
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/util/function/BiConsumer;)V lambda$getMapEntries$8
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;)V lambda$remove$15
	a (S)Lnet/minecraft/server/NBTBase; createShort
	a (Z)Lnet/minecraft/server/NBTBase; createBoolean
	b (Ljava/util/stream/Stream;)Lnet/minecraft/server/NBTBase; createList
	b (Lnet/minecraft/server/NBTBase;)Lcom/mojang/serialization/DataResult; getStringValue
	b (Lnet/minecraft/server/NBTList;Lnet/minecraft/server/NBTBase;)V lambda$fillMany$1
	b (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;)V lambda$mergeToMap$4
	c (Lnet/minecraft/server/NBTBase;)Lcom/mojang/serialization/DataResult; getMapValues
	c (Lnet/minecraft/server/NBTList;Lnet/minecraft/server/NBTBase;)V lambda$fillOne$0
	c (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;)V lambda$mergeToMap$3
	d (Lnet/minecraft/server/NBTBase;)Lcom/mojang/serialization/DataResult; getMapEntries
	e (Lnet/minecraft/server/NBTBase;)Lcom/mojang/serialization/DataResult; getMap
	f (Lnet/minecraft/server/NBTBase;)Lcom/mojang/serialization/DataResult; getStream
	g (Lnet/minecraft/server/NBTBase;)Lcom/mojang/serialization/DataResult; getList
	h (Lnet/minecraft/server/NBTBase;)Lcom/mojang/serialization/DataResult; getByteBuffer
	i (Lnet/minecraft/server/NBTBase;)Lcom/mojang/serialization/DataResult; getIntStream
	j (Lnet/minecraft/server/NBTBase;)Lcom/mojang/serialization/DataResult; getLongStream
	k (Lnet/minecraft/server/NBTBase;)Ljava/lang/Long; lambda$createList$13
	l (Lnet/minecraft/server/NBTBase;)Ljava/lang/Integer; lambda$createList$12
	m (Lnet/minecraft/server/NBTBase;)Ljava/lang/Byte; lambda$createList$11
	n (Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; lambda$getStream$10
net/minecraft/server/Vector3fa com/mojang/math/Vector3f
	a XN
	b XP
	c YN
	d YP
	e ZN
	f ZP
	g x
	h y
	i z
	a ()F x
	a (F)Lnet/minecraft/server/Quaternion; rotationDegrees
	a (FF)V clamp
	a (FFF)V set
	a (Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)V map
	a (Lnet/minecraft/server/Matrix3f;)V transform
	a (Lnet/minecraft/server/Quaternion;)V transform
	a (Lnet/minecraft/server/Vector3fa;)V add
	a (Lnet/minecraft/server/Vector3fa;F)V lerp
	b ()F y
	b (F)V mul
	b (FFF)V mul
	b (Lnet/minecraft/server/Vector3fa;)V sub
	c ()F z
	c (F)Lnet/minecraft/server/Quaternion; rotation
	c (FFF)V add
	c (Lnet/minecraft/server/Vector3fa;)F dot
	d ()Z normalize
	d (Lnet/minecraft/server/Vector3fa;)V cross
	e ()Lnet/minecraft/server/Vector3fa; copy
net/minecraft/server/DataConverterEntityZombifiedPiglinRename net/minecraft/util/datafix/fixes/EntityZombifiedPiglinRenameFix
	a RENAMED_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/server/JsonList net/minecraft/server/players/StoredUserList
	a LOGGER
	b GSON
	c file
	d map
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/JsonListEntry; createEntry
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	b ()Ljava/io/File; getFile
	b (Lnet/minecraft/server/JsonListEntry;)V remove
	c (Lnet/minecraft/server/JsonListEntry;)Lcom/google/gson/JsonObject; lambda$save$0
	d ()Ljava/util/Collection; getEntries
	d (Ljava/lang/Object;)Z contains
	g ()V removeExpired
	getEntries ()[Ljava/lang/String; getUserList
net/minecraft/server/BlockSeaPickle net/minecraft/world/level/block/SeaPickleBlock
	a PICKLES
	b WATERLOGGED
	c ONE_AABB
	d TWO_AABB
	e THREE_AABB
	f FOUR_AABB
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	h (Lnet/minecraft/server/IBlockData;)Z isDead
net/minecraft/server/UserCache$UserCacheEntry net/minecraft/server/players/GameProfileCache$GameProfileInfo
	a profile
	b expirationDate
	c lastAccess
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	a (J)V setLastAccess
	a (Lnet/minecraft/server/UserCache$UserCacheEntry;)Ljava/util/Date; access$100
	b ()Ljava/util/Date; getExpirationDate
	c ()J getLastAccess
net/minecraft/server/PacketPlayOutEntityHeadRotation net/minecraft/network/protocol/game/ClientboundRotateHeadPacket
	a entityId
	b yHeadRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getEntity
	b ()B getYHeadRot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/CriterionTriggerTamedAnimal net/minecraft/advancements/critereon/TameAnimalTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lco$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityAnimal;)V trigger
	a (Lnet/minecraft/server/LootTableInfo;Lco$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/WorldGenFoilagePlacerJungle net/minecraft/world/level/levelgen/feature/foliageplacers/MegaJungleFoliagePlacer
	a CODEC
	b height
	a ()Lnet/minecraft/server/WorldGenFoilagePlacers; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	a (Ljava/util/Random;ILnet/minecraft/server/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;ILcni$b;IILjava/util/Set;ILnet/minecraft/server/StructureBoundingBox;)V createFoliage
	a (Lnet/minecraft/server/WorldGenFoilagePlacerJungle;)Ljava/lang/Integer; lambda$null$0
aax$a$a net/minecraft/server/network/ServerConnectionListener$LatencySimulator$DelayedMessage
	a ctx
	b msg
net/minecraft/server/PacketPlayOutOpenWindowHorse net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket
	a containerId
	b size
	c entityId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getSize
	d ()I getEntityId
csy$1 net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
net/minecraft/server/PlayerList net/minecraft/server/players/PlayerList
	a LOGGER
	b USERBANLIST_FILE
	c IPBANLIST_FILE
	d OPLIST_FILE
	e WHITELIST_FILE
	g BAN_DATE_FORMAT
	hasWhitelist doWhiteList
	j playersByUUID
	k bans
	l ipBans
	o stats
	operators ops
	p advancements
	playerFileData playerIo
	s registryHolder
	u overrideGameMode
	v allowCheatsForAllPlayers
	w sendAllPlayerInfoIn
	a (I)V setViewDistance
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IChatBaseComponent;)V broadcastToTeam
	a (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/NBTTagCompound; load
	a (Lnet/minecraft/server/EntityPlayer;I)V sendPlayerPermissionLevel
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/WorldServer;)V updatePlayerGameMode
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/WorldServer;)V sendLevelInfo
	a (Lnet/minecraft/server/EnumGamemode;)V setOverrideGameMode
	a (Lnet/minecraft/server/NetworkManager;Lnet/minecraft/server/EntityPlayer;)V placeNewPlayer
	a (Lnet/minecraft/server/Packet;Lnet/minecraft/server/ResourceKey;)V broadcastAll
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Entity; lambda$placeNewPlayer$0
	addOp (Lcom/mojang/authlib/GameProfile;)V op
	attemptLogin (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/IChatBaseComponent; canPlayerLogin
	b (Ljava/lang/String;)Ljava/util/List; getPlayersWithAddress
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IChatBaseComponent;)V broadcastToAllExceptTeam
	b (Z)V setAllowCheatsForAllPlayers
	c (Lcom/mojang/authlib/GameProfile;)V blackList
	d (Lcom/mojang/authlib/GameProfile;)V whiteList
	d (Lnet/minecraft/server/EntityPlayer;)V sendPlayerPermissionLevel
	disconnect (Lnet/minecraft/server/EntityPlayer;)V remove
	e ()[Ljava/lang/String; getPlayerNamesArray
	f (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	f (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/AdvancementDataPlayer; getPlayerAdvancements
	getHasWhitelist ()Z isUsingWhitelist
	getIPBans ()Lnet/minecraft/server/IpBanList; getIpBans
	getOPs ()Lnet/minecraft/server/OpList; getOps
	getPlayer (Ljava/lang/String;)Lnet/minecraft/server/EntityPlayer; getPlayerByName
	getProfileBans ()Lnet/minecraft/server/GameProfileBanList; getBans
	getStatisticManager (Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ServerStatisticManager; getPlayerStats
	getWhitelist ()Lnet/minecraft/server/WhiteList; getWhiteList
	getWhitelisted ()[Ljava/lang/String; getWhiteListNames
	isWhitelisted (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	l ()[Ljava/lang/String; getOpNames
	moveToWorld (Lnet/minecraft/server/EntityPlayer;Z)Lnet/minecraft/server/EntityPlayer; respawn
	processLogin (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/EntityPlayer; getPlayerForLogin
	reload ()V reloadResources
	reloadWhitelist ()V reloadWhiteList
	removeOp (Lcom/mojang/authlib/GameProfile;)V deop
	save ()Lnet/minecraft/server/NBTTagCompound; getSingleplayerData
	savePlayerFile (Lnet/minecraft/server/EntityPlayer;)V save
	savePlayers ()V saveAll
	sendAll (Lnet/minecraft/server/Packet;)V broadcastAll
	sendMessage (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/ChatMessageType;Ljava/util/UUID;)V broadcastMessage
	sendPacketNearby (Lnet/minecraft/server/EntityHuman;DDDDLnet/minecraft/server/ResourceKey;Lnet/minecraft/server/Packet;)V broadcast
	sendScoreboard (Lnet/minecraft/server/ScoreboardServer;Lnet/minecraft/server/EntityPlayer;)V updateEntireScoreboard
	setHasWhitelist (Z)V setUsingWhiteList
	setPlayerFileData (Lnet/minecraft/server/WorldServer;)V setLevel
	shutdown ()V removeAll
	u ()Z isAllowCheatsForAllPlayers
	updateClient (Lnet/minecraft/server/EntityPlayer;)V sendAllPlayerInfo
czv$1 net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$1
net/minecraft/server/PacketPlayInTeleportAccept net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket
	a id
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/DataConverterSchemaV1800 net/minecraft/util/datafix/schemas/V1800
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/BlockSlime net/minecraft/world/level/block/SlimeBlock
	a (Lnet/minecraft/server/Entity;)V bounceUp
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/Entity;)V updateEntityAfterFallOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V stepOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;F)V fallOn
net/minecraft/server/DataConverterSchemaV1801 net/minecraft/util/datafix/schemas/V1801
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/NibbleArray net/minecraft/world/level/chunk/DataLayer
	a data
	a (I)Ljava/lang/String; layerToString
	a (II)V set
	a (III)I get
	a (IIII)V set
	asBytes ()[B getData
	b ()Lnet/minecraft/server/NibbleArray; copy
	b (I)I get
	b (III)I getIndex
	c ()Z isEmpty
	c (I)Z isFirst
	d (I)I getPosition
net/minecraft/server/ContainerUtil net/minecraft/world/ContainerHelper
	a (Ljava/util/List;I)Lnet/minecraft/server/ItemStack; takeItem
	a (Ljava/util/List;II)Lnet/minecraft/server/ItemStack; removeItem
	a (Lnet/minecraft/server/IInventory;Ljava/util/function/Predicate;IZ)I clearOrCountMatchingItems
	a (Lnet/minecraft/server/ItemStack;Ljava/util/function/Predicate;IZ)I clearOrCountMatchingItems
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NonNullList;)Lnet/minecraft/server/NBTTagCompound; saveAllItems
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NonNullList;Z)Lnet/minecraft/server/NBTTagCompound; saveAllItems
	b (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NonNullList;)V loadAllItems
net/minecraft/server/CommandData net/minecraft/server/commands/data/DataCommands
	a ALL_PROVIDERS
	b TARGET_PROVIDERS
	c SOURCE_PROVIDERS
	d ERROR_MERGE_UNCHANGED
	e ERROR_GET_NOT_NUMBER
	f ERROR_GET_NON_EXISTENT
	g ERROR_MULTIPLE_TAGS
	h ERROR_EXPECTED_LIST
	i ERROR_EXPECTED_OBJECT
	j ERROR_INVALID_INDEX
	a (ILnet/minecraft/server/NBTTagCompound;Ldr$h;Ljava/util/List;)I insertAtIndex
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lza$b;)V lambda$register$21
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/NBTTagCompound;Ldr$h;Ljava/util/List;)I lambda$null$20
	a (Lcom/mojang/brigadier/context/CommandContext;Lza$c;Lza$a;Ljava/util/List;)I manipulateData
	a (Ldr$h;Lnet/minecraft/server/CommandDataAccessor;)Lnet/minecraft/server/NBTBase; getSingleTag
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	a (Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder; decorateModification
	a (Ljava/util/function/BiConsumer;Lza$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$decorateModification$28
	a (Ljava/util/function/Function;)Lza$c; lambda$static$6
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$7
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;)I getData
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;Ldr$h;)I removeData
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;Ldr$h;D)I getNumeric
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;Lnet/minecraft/server/NBTTagCompound;)I mergeData
	a (Lza$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$15
	a (Lza$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$14
	a (Lza$c;Lza$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$null$27
	a (Lza$c;Lza$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$26
	a (Lza$c;Lza$c;Lza$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$null$25
	a (Lza$c;Lza$c;Lza$a;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$null$24
	a (Lza$c;Lza$c;Lza$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$23
	b (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/NBTTagCompound;Ldr$h;Ljava/util/List;)I lambda$null$19
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	b (Ljava/util/function/Function;)Lza$c; lambda$static$5
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;Ldr$h;)I getData
	b (Lza$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$13
	b (Lza$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$12
	b (Lza$c;Lza$c;Lza$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$22
	c (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/NBTTagCompound;Ldr$h;Ljava/util/List;)I lambda$null$18
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	c (Lza$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$9
	c (Lza$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$11
	d (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/NBTTagCompound;Ldr$h;Ljava/util/List;)I lambda$null$17
	d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	d (Lza$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$10
	e (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/NBTTagCompound;Ldr$h;Ljava/util/List;)I lambda$null$16
	e (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	e (Lza$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$8
net/minecraft/server/EntityProjectile net/minecraft/world/entity/projectile/ThrowableProjectile
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	j ()V tick
	k ()F getGravity
net/minecraft/server/ThreadWatchdog net/minecraft/server/dedicated/ServerWatchdog
	a LOGGER
	b server
	c maxTickTime
	a ()V exit
net/minecraft/server/BossBattle$BarColor net/minecraft/world/BossEvent$BossBarColor
	h name
	i formatting
	j $VALUES
	a ()Lnet/minecraft/server/EnumChatFormat; getFormatting
	a (Ljava/lang/String;)Lnet/minecraft/server/BossBattle$BarColor; byName
	b ()Ljava/lang/String; getName
aoz$1 net/minecraft/world/Snooper$1
	a this$0
cuo$a net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap
	b currentLowestY
	c topSections
	a ()Lcuo$a; copy
	a (Lcuo$a;)Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap; access$000
	a (Lcuo$a;I)I access$102
	b ()Lnet/minecraft/server/LightEngineStorageArray; copy
	b (Lcuo$a;)I access$100
net/minecraft/server/EntityPiglinAbstract net/minecraft/world/entity/monster/piglin/AbstractPiglin
	b DATA_IMMUNE_TO_ZOMBIFICATION
	conversionTicks timeInOverworld
	A ()Lnet/minecraft/server/EntityLiving; getTarget
	F ()V playAmbientSound
	M ()V sendDebugPackets
	N ()V customServerAiStep
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	ba ()D getMyRidingOffset
	c (Lnet/minecraft/server/WorldServer;)V finishConversion
	e ()V defineSynchedData
	eM ()Z isAdult
	eN ()Lnet/minecraft/server/EntityPiglinArmPose; getArmPose
	eO ()Z isHoldingMeleeWeapon
	eP ()V playConvertedSound
	eS ()V applyOpenDoorsAbility
	m ()Z canHunt
net/minecraft/server/WorldGenMineshaftPieces$WorldGenMineshaftStairs net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftStairs
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/StructureBoundingBox; findStairs
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
dry$g net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleList
	a this$0
	a (Ldfj;IIF)V render
	a (Ljava/util/Map$Entry;)V lambda$new$1
	b (Ljava/util/Map$Entry;)V lambda$null$0
dry$e net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$IntegerRuleEntry
	a this$0
	e input
	a (Ldfj;IIIIIIIZF)V render
	a (Lnet/minecraft/server/GameRules$GameRuleInt;Ljava/lang/String;)V lambda$new$0
net/minecraft/server/CommandTellRaw net/minecraft/server/commands/TellRawCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
dry$f net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry
	a tooltip
	d this$0
	a (Ldry$f;)Ljava/util/List; access$1000
dry$c net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$EntryFactory
dry$d net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$GameRuleEntry
	a label
	b children
	c this$0
	a (Ldfj;II)V renderLabel
	av_ ()Ljava/util/List; children
net/minecraft/server/BiomeRegistry net/minecraft/data/worldgen/biome/Biomes
	a PLAINS
	b THE_VOID
	c TO_NAME
	a (I)Lnet/minecraft/server/ResourceKey; byId
	a (ILnet/minecraft/server/ResourceKey;Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeBase; register
dry$a net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$BooleanRuleEntry
	a this$0
	e checkbox
	a (Ldfj;IIIIIIIZF)V render
	a (Lnet/minecraft/server/GameRules$GameRuleBoolean;Ldlg;)V lambda$new$0
net/minecraft/server/EntityIllagerWizard$Spell net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell
	g id
	h spellColor
	i $VALUES
	a (I)Lnet/minecraft/server/EntityIllagerWizard$Spell; byId
	a (Lnet/minecraft/server/EntityIllagerWizard$Spell;)I access$000
	b (Lnet/minecraft/server/EntityIllagerWizard$Spell;)[D access$100
dry$b net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$CategoryRuleEntry
	a this$0
	b label
	a (Ldfj;IIIIIIIZF)V render
	av_ ()Ljava/util/List; children
net/minecraft/server/TickListEmpty net/minecraft/world/level/EmptyTickList
	a INSTANCE
	a ()I size
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;I)V scheduleTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	b ()Lnet/minecraft/server/TickListEmpty; empty
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
net/minecraft/server/EnchantmentVanishing net/minecraft/world/item/enchantment/VanishingCurseEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
	c ()Z isCurse
net/minecraft/server/BehaviorWalkAwayOutOfRange net/minecraft/world/entity/ai/behavior/SetWalkTargetFromAttackTargetIfTargetOutOfReach
	b speedModifier
	a (Lnet/minecraft/server/EntityLiving;)V clearWalkTarget
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)V setWalkAndLookTarget
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
cva$a net/minecraft/world/level/material/WaterFluid$Flowing
	a (Lcef$a;)V createFluidStateDefinition
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d (Lnet/minecraft/server/Fluid;)I getAmount
dxr$a net/minecraft/client/particle/HugeExplosionSeedParticle$Provider
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dxa$1 net/minecraft/client/particle/BreakingItemParticle$1
cuo$1 net/minecraft/world/level/lighting/SkyLightSectionStorage$1
	a $SwitchMap$net$minecraft$core$Direction
cva$b net/minecraft/world/level/material/WaterFluid$Source
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d (Lnet/minecraft/server/Fluid;)I getAmount
bn$a net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance
	a slotsOccupied
	b slotsFull
	c slotsEmpty
	d predicates
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/CriterionConditionItem;)Z lambda$matches$0
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/ItemStack;III)Z matches
	a ([Lnet/minecraft/server/CriterionConditionItem;)Lbn$a; hasItems
	a ([Lnet/minecraft/server/IMaterial;)Lbn$a; hasItems
net/minecraft/server/BossBattleCustom net/minecraft/server/bossevents/CustomBossEvent
	h id
	i players
	j value
	k max
	a (I)V setValue
	a (Ljava/util/Collection;)Z setPlayers
	a (Ljava/util/UUID;)V addOfflinePlayer
	a (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; lambda$getDisplayName$0
	a (Lnet/minecraft/server/EntityPlayer;)V addPlayer
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/BossBattleCustom; load
	b ()V removeAllPlayers
	b (I)V setMax
	b (Lnet/minecraft/server/EntityPlayer;)V removePlayer
	c ()I getValue
	c (Lnet/minecraft/server/EntityPlayer;)V onPlayerConnect
	d ()I getMax
	d (Lnet/minecraft/server/EntityPlayer;)V onPlayerDisconnect
	e ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	f ()Lnet/minecraft/server/NBTTagCompound; save
	getKey ()Lnet/minecraft/server/MinecraftKey; getTextId
net/minecraft/server/PathfinderGoalUniversalAngerReset net/minecraft/world/entity/ai/goal/target/ResetUniversalAngerTargetGoal
	a mob
	b alertOthersOfSameType
	c lastHurtByPlayerTimestamp
	a ()Z canUse
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/IEntityAngerable; lambda$start$1
	b (Lnet/minecraft/server/EntityInsentient;)Z lambda$start$0
	c ()V start
	g ()Z wasHurtByPlayer
	h ()Ljava/util/List; getNearbyMobsOfSameType
dao$1 net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$1
net/minecraft/server/VoxelShapes net/minecraft/world/phys/shapes/Shapes
	a INFINITY
	b BLOCK
	c EMPTY
	a ()Lnet/minecraft/server/VoxelShape; empty
	a (DD)I findBits
	a (DDD)I lastC
	a (II)J lcm
	a (ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Lnet/minecraft/server/VoxelShapeMerger; createIndexMerger
	a (Lnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/VoxelShape; create
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/IWorldReader;DLnet/minecraft/server/VoxelShapeCollision;Lnet/minecraft/server/EnumAxisCycle;Ljava/util/stream/Stream;)D collide
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/stream/Stream;D)D collide
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/IWorldReader;DLnet/minecraft/server/VoxelShapeCollision;Ljava/util/stream/Stream;)D collide
	a (Lnet/minecraft/server/OperatorBoolean;Lnet/minecraft/server/VoxelShapeDiscrete;IILnet/minecraft/server/VoxelShapeDiscrete;IIIII)Z lambda$null$1
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/VoxelShape; getFaceShape
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;)Lnet/minecraft/server/VoxelShape; or
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/EnumDirection;)Z blockOccudes
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/OperatorBoolean;)Lnet/minecraft/server/VoxelShape; join
	a (Lnet/minecraft/server/VoxelShape;[Lnet/minecraft/server/VoxelShape;)Lnet/minecraft/server/VoxelShape; or
	a (Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/OperatorBoolean;Lnet/minecraft/server/VoxelShapeDiscrete;ILnet/minecraft/server/VoxelShapeDiscrete;IIII)Z lambda$null$2
	a (Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/OperatorBoolean;Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/VoxelShapeDiscrete;III)Z lambda$joinIsNotEmpty$3
	a (Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/OperatorBoolean;)Z joinIsNotEmpty
	a ([DLnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/VoxelShape;)V lambda$collide$4
	b ()Lnet/minecraft/server/VoxelShape; block
	b (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;)Z faceShapeOccludes
	b (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/EnumDirection;)Z mergedFaceOccludes
	b (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/OperatorBoolean;)Lnet/minecraft/server/VoxelShape; joinUnoptimized
	c ()Lnet/minecraft/server/VoxelShapeCube; lambda$static$0
	c (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/OperatorBoolean;)Z joinIsNotEmpty
	create (DDDDDD)Lnet/minecraft/server/VoxelShape; box
bas$1 net/minecraft/world/entity/animal/Squid$1
net/minecraft/server/CaveSound net/minecraft/world/level/biome/AmbientAdditionsSettings
	a CODEC
	b soundEvent
	c tickChance
	a ()Lnet/minecraft/server/SoundEffect; getSoundEvent
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/CaveSound;)Ljava/lang/Double; lambda$null$1
	b ()D getTickChance
	b (Lnet/minecraft/server/CaveSound;)Lnet/minecraft/server/SoundEffect; lambda$null$0
net/minecraft/server/PacketPlayOutPlayerListHeaderFooter net/minecraft/network/protocol/game/ClientboundTabListPacket
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/IChatBaseComponent; getHeader
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/IChatBaseComponent; getFooter
net/minecraft/server/PacketStatusOutListener net/minecraft/network/protocol/status/ClientStatusPacketListener
	a (Lnet/minecraft/server/PacketStatusOutPong;)V handlePongResponse
	a (Lnet/minecraft/server/PacketStatusOutServerInfo;)V handleStatusResponse
dfv$a com/mojang/realmsclient/client/FileDownload$DownloadCountingOutputStream
	a this$0
	b listener
	a (Ljava/awt/event/ActionListener;)V setListener
dfe$1 com/mojang/blaze3d/vertex/BufferBuilder$1
dfv$c com/mojang/realmsclient/client/FileDownload$ResourcePackProgressListener
	a this$0
	b tempFile
	c downloadStatus
	d worldDownload
dfv$b com/mojang/realmsclient/client/FileDownload$ProgressListener
	a this$0
	b worldName
	c tempFile
	d levelStorageSource
	e downloadStatus
bas$a net/minecraft/world/entity/animal/Squid$SquidFleeGoal
	a this$0
	b fleeTicks
	a ()Z canUse
	c ()V start
	e ()V tick
net/minecraft/server/BehaviorCooldown net/minecraft/world/entity/ai/behavior/VillagerCalmDown
	a (Lnet/minecraft/server/EntityVillager;)Z isCloseToEntityThatHurtMe
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityLiving;)Z lambda$isCloseToEntityThatHurtMe$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
ry net/minecraft/network/protocol/game/DebugEntityNameGenerator
	a NAMES_FIRST_PART
	b NAMES_SECOND_PART
	a (Ljava/util/Random;[Ljava/lang/String;)Ljava/lang/String; getRandomString
	a (Ljava/util/UUID;)Ljava/lang/String; getEntityName
	a (Lnet/minecraft/server/Entity;)Ljava/lang/String; getEntityName
	b (Ljava/util/UUID;)Ljava/util/Random; getRandom
net/minecraft/server/TileEntityStructure$UpdateType net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType
	e $VALUES
net/minecraft/server/PacketPlayOutWorldParticles net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket
	a x
	b y
	c z
	d xDist
	e yDist
	f zDist
	g maxSpeed
	h count
	i overrideLimiter
	j particle
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/Particle;)Lnet/minecraft/server/ParticleParam; readParticle
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Z isOverrideLimiter
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()F getXDist
	g ()F getYDist
	h ()F getZDist
	i ()F getMaxSpeed
	j ()I getCount
	k ()Lnet/minecraft/server/ParticleParam; getParticle
net/minecraft/server/DataConverterKeybind2 net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic; lambda$null$1
net/minecraft/server/BlockStairs net/minecraft/world/level/block/StairBlock
	d WATERLOGGED
	e TOP_AABB
	f BOTTOM_AABB
	g OCTET_NNN
	h OCTET_NNP
	i OCTET_NPN
	j OCTET_NPP
	k OCTET_PNN
	o OCTET_PNP
	p OCTET_PPN
	q OCTET_PPP
	r TOP_SHAPES
	s BOTTOM_SHAPES
	t SHAPE_BY_STATE
	u base
	v baseState
	a (ILnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;)Lnet/minecraft/server/VoxelShape; makeStairShape
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V destroy
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V attack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;)[Lnet/minecraft/server/VoxelShape; makeShapes
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;I)Lnet/minecraft/server/VoxelShape; lambda$makeShapes$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V stepOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Explosion;)V wasExploded
	a_ (Lnet/minecraft/server/IBlockData;)Z isRandomlyTicking
	b (I)[Lnet/minecraft/server/VoxelShape; lambda$makeShapes$1
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c_ (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
	d (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)V prepareRender
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z canTakeShape
	f ()F getExplosionResistance
	g (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPropertyStairsShape; getStairsShape
	h (Lnet/minecraft/server/IBlockData;)Z isStairs
	l (Lnet/minecraft/server/IBlockData;)I getShapeIndex
azi$1 net/minecraft/world/entity/ai/village/ReputationEventType$1
	f val$name
net/minecraft/server/PacketDebug net/minecraft/network/protocol/game/DebugPackets
	a LOGGER
	a (Ljava/util/List;Ljava/lang/String;Lnet/minecraft/server/ReputationType;Ljava/lang/Integer;)V lambda$null$6
	a (Ljava/util/List;Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V lambda$writeBrain$7
	a (Lnet/minecraft/server/EntityBee;)V sendBeeInfo
	a (Lnet/minecraft/server/EntityLiving;)V sendEntityBrain
	a (Lnet/minecraft/server/EntityLiving;J)Ljava/util/List; getMemoryDescriptions
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/PacketDataSerializer;)V writeBrain
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureStart;)V sendStructurePacket
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/String;)V lambda$writeBrain$5
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/Activity;)V lambda$writeBrain$4
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/PathfinderGoalWrapped;)V lambda$sendGoalSelector$2
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/Raid;)V lambda$sendRaids$3
	a (Lnet/minecraft/server/TileEntityBeehive;)V sendHiveInfo
	a (Lnet/minecraft/server/VillagePlaceType;)Z lambda$sendPoiPacketsForChunk$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V sendNeighborsUpdatePacket
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/PathEntity;F)V sendPathFindingPacket
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/PathfinderGoalSelector;)V sendGoalSelector
	a (Lnet/minecraft/server/WorldServer;)V sendGameTestClearPacket
	a (Lnet/minecraft/server/WorldServer;Ljava/lang/Object;)Ljava/lang/String; getShortDescription
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Collection;)V sendRaids
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V sendPoiAddedPacket
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/lang/String;II)V sendGameTestAddMarker
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkCoordIntPair;)V sendPoiPacketsForChunk
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/MinecraftKey;)V sendPacketToAllPlayers
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/VillagePlaceRecord;)V lambda$sendPoiPacketsForChunk$1
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V sendPoiRemovedPacket
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V sendPoiTicketCountPacket
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V sendVillageSectionsPacket
net/minecraft/server/BlockBell net/minecraft/world/level/block/BellBlock
	a FACING
	b ATTACHMENT
	c POWERED
	d NORTH_SOUTH_FLOOR_SHAPE
	e EAST_WEST_FLOOR_SHAPE
	f BELL_TOP_SHAPE
	g BELL_BOTTOM_SHAPE
	h BELL_SHAPE
	i NORTH_SOUTH_BETWEEN
	j EAST_WEST_BETWEEN
	k TO_WEST
	o TO_EAST
	p TO_NORTH
	q TO_SOUTH
	r CEILING_SHAPE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;D)Z isProperHit
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z attemptToRing
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/EntityHuman;Z)Z onHit
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/IProjectile;)V onProjectileHit
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	f (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	h (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/VoxelShape; getVoxelShape
	l (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumDirection; getConnectedDirection
net/minecraft/server/ProtoChunk net/minecraft/world/level/chunk/ProtoChunk
	a LOGGER
	b chunkPos
	c isDirty
	d biomes
	e lightEngine
	f heightmaps
	g status
	h blockEntities
	i blockEntityNbts
	j sections
	k entities
	l lights
	m postProcessing
	n structureStarts
	o structuresRefences
	p upgradeData
	q blockTicks
	r liquidTicks
	s inhabitedTime
	t carvingMasks
	u isLightCorrect
	a (I)Lnet/minecraft/server/ChunkSection; getOrCreateSection
	a (J)V setLastSaveTime
	a (Ljava/util/Map;)V setAllStarts
	a (Lnet/minecraft/server/BiomeStorage;)V setBiomes
	a (Lnet/minecraft/server/Block;)Z lambda$new$0
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/server/ChunkStatus;)V setStatus
	a (Lnet/minecraft/server/Entity;)V addEntity
	a (Lnet/minecraft/server/FluidType;)Z lambda$new$1
	a (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap; getOrCreateHeightmapUnprimed
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/HeightMap$Type;[J)V setHeightmap
	a (Lnet/minecraft/server/LightEngine;)V setLightEngine
	a (Lnet/minecraft/server/NBTTagCompound;)V setBlockEntityNbt
	a (Lnet/minecraft/server/StructureGenerator;)Lnet/minecraft/server/StructureStart; getStartForFeature
	a (Lnet/minecraft/server/StructureGenerator;J)V addReferenceForFeature
	a (Lnet/minecraft/server/StructureGenerator;Lnet/minecraft/server/StructureStart;)V setStartForFeature
	a (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/BitSet; getCarvingMask
	a (Lnet/minecraft/server/WorldGenStage$Features;Ljava/util/BitSet;)V setCarvingMask
	a (SI)V addPackedPostProcess
	a (SILnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/BlockPosition; unpackOffsetCoordinates
	a (Z)V setUnsaved
	b (J)V setInhabitedTime
	b (Ljava/util/Map;)V setAllReferences
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/BlockPosition; getHeighestPosition
	b (Lnet/minecraft/server/NBTTagCompound;)V addEntity
	b (Lnet/minecraft/server/StructureGenerator;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
	b (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/BitSet; getOrCreateCarvingMask
	b (SI)V addLight
	b (Z)V setLightCorrect
	c ()Ljava/util/Set; getBlockEntitiesPos
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	c (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap; lambda$getOrCreateHeightmapUnprimed$2
	c (Lnet/minecraft/server/StructureGenerator;)Lit/unimi/dsi/fastutil/longs/LongSet; lambda$addReferenceForFeature$4
	c (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/BitSet; lambda$getOrCreateCarvingMask$5
	d ()[Lnet/minecraft/server/ChunkSection; getSections
	d (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	d (Lnet/minecraft/server/StructureGenerator;)Lit/unimi/dsi/fastutil/longs/LongSet; lambda$getReferencesForFeature$3
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	e (Lnet/minecraft/server/BlockPosition;)V markPosForPostprocessing
	f ()Ljava/util/Collection; getHeightmaps
	g ()Lnet/minecraft/server/ChunkCoordIntPair; getPos
	h ()Ljava/util/Map; getAllStarts
	i ()Lnet/minecraft/server/BiomeStorage; getBiomes
	i (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbt
	j ()Z isUnsaved
	j (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbtForSaving
	k ()Lnet/minecraft/server/ChunkStatus; getStatus
	k (Lnet/minecraft/server/BlockPosition;)V addLight
	l ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
	l (Lnet/minecraft/server/BlockPosition;)S packOffsetCoordinates
	m ()Ljava/util/stream/Stream; getLights
	n ()Lnet/minecraft/server/TickList; getBlockTicks
	o ()Lnet/minecraft/server/TickList; getLiquidTicks
	p ()Lnet/minecraft/server/ChunkConverter; getUpgradeData
	q ()J getInhabitedTime
	r ()Z isLightCorrect
	s ()Lnet/minecraft/server/ProtoChunkTickList; getBlockTicks
	t ()Lnet/minecraft/server/ProtoChunkTickList; getLiquidTicks
	v ()Ljava/util/Map; getAllReferences
	w ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPackedLights
	x ()Ljava/util/Map; getBlockEntities
	y ()Ljava/util/List; getEntities
	z ()Ljava/util/Map; getBlockEntityNbts
net/minecraft/server/EntityPositionTypes$Surface net/minecraft/world/entity/SpawnPlacements$Type
	e $VALUES
net/minecraft/server/EnchantmentOxygen net/minecraft/world/item/enchantment/OxygenEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
doy$b$a net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemComparator
	a this$1
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/Item;)I compare
doy$b$b net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow
	a this$1
	a (Ldfj;IIIIIIIZF)V render
	a (Ldfj;Lnet/minecraft/server/Statistic;IIZ)V renderStat
net/minecraft/server/PathfinderGoalDefendVillage net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal
	a golem
	b potentialTarget
	c attackTargeting
	a ()Z canUse
	c ()V start
eda$a net/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker
	a color
	b text
	c removeAtTime
	a ()F getR
	b ()F getG
	c ()F getB
	d ()F getA
dao$a net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetDamage; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetDamage;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
eco$1 net/minecraft/client/renderer/chunk/VisGraph$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/ThreadedMailbox net/minecraft/util/thread/ProcessorMailbox
	a queue
	b LOGGER
	c status
	d dispatcher
	e name
	a ()Z setAsScheduled
	a (I)Z lambda$run$0
	a (Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I pollUntil
	a (Ljava/lang/Object;)V tell
	a (Ljava/util/concurrent/Executor;Ljava/lang/String;)Lnet/minecraft/server/ThreadedMailbox; create
	b ()V setAsIdle
	bi ()Ljava/lang/String; name
	c ()Z canBeScheduled
	d ()Z shouldProcess
	e ()Z pollTask
	f ()V registerForExecution
net/minecraft/server/StructurePiece$StructurePieceBlockSelector net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector
	a next
	a ()Lnet/minecraft/server/IBlockData; getNext
	a (Ljava/util/Random;IIIZ)V next
net/minecraft/server/WorldGenMineshaftConfiguration net/minecraft/world/level/levelgen/feature/configurations/MineshaftConfiguration
	a CODEC
	b probability
	c type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/WorldGenMineshaftConfiguration;)Lnet/minecraft/server/WorldGenMineshaft$Type; lambda$null$1
	b (Lnet/minecraft/server/WorldGenMineshaftConfiguration;)Ljava/lang/Float; lambda$null$0
net/minecraft/server/EntityMinecartTNT net/minecraft/world/entity/vehicle/MinecartTNT
	b fuse
	a (B)V handleEntityEvent
	a (IIIZ)V activateMinecart
	a (Lnet/minecraft/server/DamageSource;)V destroy
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;F)Z shouldBlockExplode
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;F)F getBlockExplosionResistance
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	h (D)V explode
	j ()V tick
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	u ()V primeFuse
	v ()I getFuse
	x ()Z isPrimed
net/minecraft/server/CommandHelp net/minecraft/server/commands/HelpCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	b (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
dfv$1 com/mojang/realmsclient/client/FileDownload$1
czv$a net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionExplosionDecay; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
dxa$b net/minecraft/client/particle/BreakingItemParticle$SlimeProvider
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dxa$a net/minecraft/client/particle/BreakingItemParticle$Provider
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleParamItem;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/WorldGenMegaTreeProviderJungle net/minecraft/world/level/block/grower/JungleTreeGrower
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredMegaFeature
	a (Ljava/util/Random;Z)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredFeature
dxa$c net/minecraft/client/particle/BreakingItemParticle$SnowballProvider
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/ChatBaseComponent net/minecraft/network/chat/BaseComponent
	d visualOrderText
	e decomposedWith
	f style
	a ()Ljava/lang/String; getContents
	a (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/IChatMutableComponent; setStyle
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatMutableComponent; append
	b ()Ljava/util/List; getSiblings
	c ()Lnet/minecraft/server/ChatModifier; getStyle
	d ()Lnet/minecraft/server/ChatBaseComponent; plainCopy
	e ()Lnet/minecraft/server/IChatMutableComponent; copy
	f ()Lnet/minecraft/server/FormattedString; getVisualOrderText
	g ()Lnet/minecraft/server/IChatMutableComponent; plainCopy
net/minecraft/server/ArgumentAnchor$Anchor net/minecraft/commands/arguments/EntityAnchorArgument$Anchor
	c BY_NAME
	d name
	e transform
	f $VALUES
	a ()Ljava/util/Map; access$000
	a (Ljava/lang/String;)Lnet/minecraft/server/ArgumentAnchor$Anchor; getByName
	a (Ljava/util/HashMap;)V lambda$static$2
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec3D; apply
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Vec3D; apply
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Vec3D; lambda$static$1
	b (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Vec3D; lambda$static$0
net/minecraft/server/NoiseGeneratorNormal net/minecraft/world/level/levelgen/synth/NormalNoise
	a valueFactor
	b first
	c second
	a (DDD)D getValue
	a (I)D expectedDeviation
	a (Lnet/minecraft/server/SeededRandom;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/server/NoiseGeneratorNormal; create
	a (Lnet/minecraft/server/SeededRandom;I[D)Lnet/minecraft/server/NoiseGeneratorNormal; create
net/minecraft/server/TileEntityDropper net/minecraft/world/level/block/entity/DropperBlockEntity
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
net/minecraft/server/PacketPlayOutLogin net/minecraft/network/protocol/game/ClientboundLoginPacket
	a playerId
	b seed
	c hardcore
	d gameType
	e previousGameType
	f levels
	g registryHolder
	h dimensionType
	i dimension
	j maxPlayers
	k chunkRadius
	l reducedDebugInfo
	m showDeathScreen
	n isDebug
	o isFlat
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getPlayerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()J getSeed
	d ()Z isHardcore
	e ()Lnet/minecraft/server/EnumGamemode; getGameType
	f ()Lnet/minecraft/server/EnumGamemode; getPreviousGameType
	g ()Ljava/util/Set; levels
	h ()Lnet/minecraft/server/IRegistryCustom; registryAccess
	i ()Lnet/minecraft/server/DimensionManager; getDimensionType
	j ()Lnet/minecraft/server/ResourceKey; getDimension
	k ()I getMaxPlayers
	l ()I getChunkRadius
	m ()Z isReducedDebugInfo
	n ()Z shouldShowDeathScreen
	o ()Z isDebug
	p ()Z isFlat
	q ()Lnet/minecraft/server/DimensionManager; lambda$write$0
net/minecraft/server/DataConverterMobSpawner net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
net/minecraft/server/PacketPlayOutOpenBook net/minecraft/network/protocol/game/ClientboundOpenBookPacket
	a hand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/EnumHand; getHand
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/EntityTurtle net/minecraft/world/entity/animal/Turtle
	bo BABY_ON_LAND_SELECTOR
	bp HOME_POS
	bq HAS_EGG
	br LAYING_EGG
	bs TRAVEL_POS
	bt GOING_HOME
	bu TRAVELLING
	bv layEggCounter
	D ()I getAmbientSoundInterval
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/EntityTurtle;)Z access$200
	a (Lnet/minecraft/server/EntityTurtle;Lnet/minecraft/server/BlockPosition;)V access$400
	a (Lnet/minecraft/server/EntityTurtle;Z)V access$500
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLightning;)V thunderHit
	as ()F nextStep
	au ()Lnet/minecraft/server/SoundEffect; getSwimSound
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityTurtle;)Ljava/util/Random; access$300
	b (Lnet/minecraft/server/EntityTurtle;Z)V access$800
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	bU ()Z isPushedByFluid
	c (Lnet/minecraft/server/EntityTurtle;)Lnet/minecraft/server/BlockPosition; access$600
	c (Lnet/minecraft/server/EntityTurtle;Z)V access$900
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkTurtleSpawnRules
	cL ()Z canBreatheUnderwater
	cR ()F getScale
	d (F)V playSwimSound
	d (Lnet/minecraft/server/EntityTurtle;)Lnet/minecraft/server/BlockPosition; access$700
	d (Lnet/minecraft/server/EntityTurtle;Z)V access$1100
	dB ()Lnet/minecraft/server/EnumMonsterType; getMobType
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityTurtle;)I access$1000
	eL ()Z isLayingEgg
	eM ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eP ()Z canFallInLove
	eU ()Z isGoingHome
	eV ()Z isTravelling
	f (Lnet/minecraft/server/EntityTurtle;)Ljava/util/Random; access$1200
	g (Lnet/minecraft/server/EntityTurtle;)I access$1008
	g (Lnet/minecraft/server/Vec3D;)V travel
	h (Lnet/minecraft/server/EntityTurtle;)Z access$1300
	i (Lnet/minecraft/server/EntityLiving;)Z lambda$static$0
	i (Lnet/minecraft/server/EntityTurtle;)Z access$1400
	k ()V aiStep
	k (Lnet/minecraft/server/ItemStack;)Z isFood
	m ()V ageBoundaryReached
	o ()V registerGoals
	u (Z)V setLayingEgg
	v (Z)V setGoingHome
	w (Z)V setTravelling
lk$1 net/minecraft/gametest/framework/GameTestServer$1
	a this$0
net/minecraft/server/NoiseGenerator3Handler net/minecraft/world/level/levelgen/synth/SimplexNoise
	a GRADIENT
	b xo
	c yo
	d zo
	e SQRT_3
	f F2
	g G2
	h p
	a (DD)D getValue
	a (DDD)D getValue
	a (I)I p
	a (IDDDD)D getCornerNoise3D
	a ([IDDD)D dot
net/minecraft/server/EntityPolarBear net/minecraft/world/entity/animal/PolarBear
	bo DATA_STANDING_ID
	bp clientSideStandAnimationO
	bq clientSideStandAnimation
	br warningSoundTicks
	bs PERSISTENT_ANGER_TIME
	bt remainingPersistentAngerTime
	bu persistentAngerTarget
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	E_ ()I getRemainingPersistentAngerTime
	F_ ()Ljava/util/UUID; getPersistentAngerTarget
	G_ ()V startPersistentAngerTimer
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a_ (I)V setRemainingPersistentAngerTime
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkPolarBearSpawnRules
	dL ()F getWaterSlowDown
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eL ()V playWarningSound
	eM ()Z isStanding
	j ()V tick
	k (Lnet/minecraft/server/ItemStack;)Z isFood
	o ()V registerGoals
	t (Z)V setStanding
	y (F)F getStandingAnimationScale
tu net/minecraft/network/protocol/game/package-info
ara$a net/minecraft/world/entity/SpawnPlacements$Data
	a heightMap
	b placement
	c predicate
	a (Lara$a;)Lnet/minecraft/server/EntityPositionTypes$Surface; access$000
	b (Lara$a;)Lnet/minecraft/server/HeightMap$Type; access$100
	c (Lara$a;)Lara$b; access$200
ara$b net/minecraft/world/entity/SpawnPlacements$SpawnPredicate
tx net/minecraft/network/protocol/handshake/package-info
dyu$a net/minecraft/client/particle/TotemParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dyd$1 net/minecraft/client/particle/PlayerCloudParticle$1
net/minecraft/server/WorldGenDecoratorNetherMagma net/minecraft/world/level/levelgen/placement/nether/MagmaDecorator
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WeightedRandom$WeightedRandomChoice net/minecraft/util/WeighedRandom$WeighedRandomItem
	a weight
vh$1 net/minecraft/resources/RegistryReadOps$1
net/minecraft/server/PathfinderGoalWaterJumpAbstract net/minecraft/world/entity/ai/goal/JumpGoal
net/minecraft/server/RemoteStatusReply net/minecraft/server/rcon/NetworkDataOutputStream
	a outputStream
	b dataOutputStream
	a ()[B toByteArray
	a (F)V writeFloat
	a (I)V write
	a (Ljava/lang/String;)V writeString
	a (S)V writeShort
	a ([B)V writeBytes
	b ()V reset
	b (I)V writeInt
net/minecraft/server/EnchantmentTridentChanneling net/minecraft/world/item/enchantment/TridentChannelingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/PathfinderGoalDoorOpen net/minecraft/world/entity/ai/goal/OpenDoorGoal
	a closeDoor
	b forgetTime
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/ResourcePackVanilla net/minecraft/server/packs/VanillaPackResources
	a generatedDir
	b clientObject
	c namespaces
	d LOGGER
	e JAR_FILESYSTEM_BY_TYPE
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Ljava/io/InputStream; getResourceAsStream
	a (Ljava/lang/String;Ljava/net/URL;)Z isResourceUrlValid
	a (Ljava/lang/String;Ljava/nio/file/Path;Ljava/nio/file/Path;)Lnet/minecraft/server/MinecraftKey; lambda$getResources$2
	a (Ljava/util/Collection;ILjava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/function/Predicate;)V getResources
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Ljava/util/function/Predicate;Ljava/nio/file/Path;)Z lambda$getResources$1
	a (Lnet/minecraft/server/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	a (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	b (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResourceAsStream
	d (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/lang/String; createPath
byy$1 net/minecraft/world/level/block/RailState$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
ui net/minecraft/network/protocol/login/package-info
uj net/minecraft/network/protocol/package-info
net/minecraft/server/DataConverterSchemaV135 net/minecraft/util/datafix/schemas/V135
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
ur net/minecraft/network/protocol/status/package-info
net/minecraft/server/ItemScaffolding net/minecraft/world/item/ScaffoldingBlockItem
	b (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/BlockActionContext; updatePlacementContext
	d ()Z mustSurvive
uw net/minecraft/network/syncher/package-info
ux net/minecraft/obfuscate/package-info
uy net/minecraft/package-info
net/minecraft/server/ScheduleActivity net/minecraft/world/entity/schedule/Timeline
	a keyframes
	b previousIndex
	a ()Lcom/google/common/collect/ImmutableList; getKeyframes
	a (I)F getValueAt
	a (IF)Lnet/minecraft/server/ScheduleActivity; addKeyframe
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectSortedMap;Lnet/minecraft/server/ActivityFrame;)V lambda$sortAndDeduplicateKeyframes$0
	a (Ljava/util/Collection;)Lnet/minecraft/server/ScheduleActivity; addKeyframes
	b ()V sortAndDeduplicateKeyframes
net/minecraft/server/CriterionConditionRange net/minecraft/advancements/critereon/WrappedMinMaxBounds
	a ANY
	b ERROR_INTS_ONLY
	c min
	d max
	a ()Ljava/lang/Float; getMin
	a (D)Z matchesSqr
	a (F)Lnet/minecraft/server/CriterionConditionRange; exactly
	a (FF)Lnet/minecraft/server/CriterionConditionRange; between
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionRange; fromJson
	a (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/server/CriterionConditionRange; fromReader
	a (Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Lnet/minecraft/server/CriterionConditionRange; fromReader
	a (Ljava/lang/Float;)Ljava/lang/Float; lambda$fromReader$0
	a (Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float; optionallyFormat
	b ()Ljava/lang/Float; getMax
	b (F)Lnet/minecraft/server/CriterionConditionRange; atLeast
	b (Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float; readNumber
	c ()Lcom/google/gson/JsonElement; serializeToJson
	c (F)Lnet/minecraft/server/CriterionConditionRange; atMost
	c (Lcom/mojang/brigadier/StringReader;Z)Z isAllowedNumber
	d (F)Z matches
net/minecraft/server/BlockSeaGrass net/minecraft/world/level/block/Seagrass
	a SHAPE
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
vc net/minecraft/recipebook/package-info
net/minecraft/server/BlockIce net/minecraft/world/level/block/IceBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	f (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
dyu$1 net/minecraft/client/particle/TotemParticle$1
din$a com/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData
	a newsLink
	b hasUnreadNews
z$a net/minecraft/advancements/AdvancementList$Listener
	a ()V onAdvancementsCleared
	a (Lnet/minecraft/server/Advancement;)V onAddAdvancementRoot
	b (Lnet/minecraft/server/Advancement;)V onRemoveAdvancementRoot
	c (Lnet/minecraft/server/Advancement;)V onAddAdvancementTask
	d (Lnet/minecraft/server/Advancement;)V onRemoveAdvancementTask
vl net/minecraft/resources/package-info
vn net/minecraft/server/ChainedJsonException
	a entries
	b message
	a (Ljava/lang/Exception;)Lvn; forException
	a (Ljava/lang/String;)V prependJsonKey
	b (Ljava/lang/String;)V setFilenameAndFlush
vp net/minecraft/server/ConsoleInputSource
	a (Ljava/lang/String;)V info
	b (Ljava/lang/String;)V warn
net/minecraft/server/FoodMetaData net/minecraft/world/food/FoodData
	e lastFoodLevel
	foodTickTimer tickTimer
	a (F)V addExhaustion
	a (I)V setFoodLevel
	a (Lnet/minecraft/server/EntityHuman;)V tick
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/ItemStack;)V eat
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b ()I getLastFoodLevel
	b (F)V setSaturation
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c ()Z needsFood
	c (F)V setExhaustion
	d ()F getExhaustionLevel
net/minecraft/server/RecipeBookSettings net/minecraft/stats/RecipeBookSettings
	a TAG_FIELDS
	b states
	a ()Lnet/minecraft/server/RecipeBookSettings; copy
	a (Ljava/util/EnumMap;)V lambda$new$0
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/RecipeBookSettings; read
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/util/Map;Lnet/minecraft/server/RecipeBookType;Lcom/mojang/datafixers/util/Pair;)V lambda$read$1
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/RecipeBookType;Lcom/mojang/datafixers/util/Pair;)V lambda$write$2
	a (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/RecipeBookSettings; read
	a (Lnet/minecraft/server/RecipeBookSettings;)V replaceFrom
	a (Lnet/minecraft/server/RecipeBookType;)Z isOpen
	a (Lnet/minecraft/server/RecipeBookType;Z)V setOpen
	b (Lnet/minecraft/server/NBTTagCompound;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	b (Lnet/minecraft/server/RecipeBookType;)Z isFiltering
	b (Lnet/minecraft/server/RecipeBookType;Z)V setFiltering
net/minecraft/server/PacketPlayOutExperience net/minecraft/network/protocol/game/ClientboundSetExperiencePacket
	a experienceProgress
	b totalExperience
	c experienceLevel
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()F getExperienceProgress
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getTotalExperience
	d ()I getExperienceLevel
net/minecraft/server/AutoRecipe net/minecraft/recipebook/ServerPlaceRecipe
	a LOGGER
	b stackedContents
	c inventory
	d menu
	a ()V clearGrid
	a (I)V moveItemToInventory
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/IRecipe;Z)V recipeClicked
	a (Lnet/minecraft/server/IRecipe;Z)V handleRecipeClicked
	a (Lnet/minecraft/server/Slot;Lnet/minecraft/server/ItemStack;)V moveItemToGrid
	a (ZIZ)I getStackSize
	b ()Z testClearGrid
	c ()I getAmountOfFreeSlotsInInventory
vh$b net/minecraft/resources/RegistryReadOps$ResourceAccess
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult; parseElement
	a (Lnet/minecraft/server/IResourceManager;)Lvh$b; forResourceManager
	a (Lnet/minecraft/server/ResourceKey;)Ljava/util/Collection; listResources
net/minecraft/server/DefinedStructureInfo net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings
	a mirror
	b rotation
	c rotationPivot
	d ignoreEntities
	e chunkPos
	f boundingBox
	g keepLiquids
	h random
	i palette
	j processors
	k knownShape
	l finalizeEntities
	a ()Lnet/minecraft/server/DefinedStructureInfo; copy
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;)Lcsy$a; getRandomPalette
	a (Ljava/util/Random;)Lnet/minecraft/server/DefinedStructureInfo; setRandom
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/DefinedStructureInfo; setRotationPivot
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/DefinedStructureInfo; setChunkPos
	a (Lnet/minecraft/server/DefinedStructureProcessor;)Lnet/minecraft/server/DefinedStructureInfo; addProcessor
	a (Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/DefinedStructureInfo; setMirror
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/DefinedStructureInfo; setRotation
	a (Lnet/minecraft/server/StructureBoundingBox;)Lnet/minecraft/server/DefinedStructureInfo; setBoundingBox
	a (Z)Lnet/minecraft/server/DefinedStructureInfo; setIgnoreEntities
	b ()Lnet/minecraft/server/DefinedStructureInfo; clearProcessors
	b (Lnet/minecraft/server/BlockPosition;)Ljava/util/Random; getRandom
	b (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/StructureBoundingBox; calculateBoundingBox
	b (Lnet/minecraft/server/DefinedStructureProcessor;)Lnet/minecraft/server/DefinedStructureInfo; popProcessor
	b (Z)Lnet/minecraft/server/DefinedStructureInfo; setKeepLiquids
	c ()Lnet/minecraft/server/EnumBlockMirror; getMirror
	c (Z)Lnet/minecraft/server/DefinedStructureInfo; setKnownShape
	d ()Lnet/minecraft/server/EnumBlockRotation; getRotation
	d (Z)Lnet/minecraft/server/DefinedStructureInfo; setFinalizeEntities
	e ()Lnet/minecraft/server/BlockPosition; getRotationPivot
	f ()Lnet/minecraft/server/ChunkCoordIntPair; getChunkPos
	g ()Z isIgnoreEntities
	h ()Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	i ()Z getKnownShape
	j ()Ljava/util/List; getProcessors
	k ()V updateBoundingBoxFromChunkPos
	l ()Z shouldKeepLiquids
	m ()Z shouldFinalizeEntities
net/minecraft/server/DataConverterSchemaV106 net/minecraft/util/datafix/schemas/V106
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
net/minecraft/server/DataConverterSchemaV107 net/minecraft/util/datafix/schemas/V107
we net/minecraft/server/bossevents/package-info
net/minecraft/server/WorldGenBlockPlacerColumn net/minecraft/world/level/levelgen/feature/blockplacers/ColumnPlacer
	b CODEC
	c minSize
	d extraSize
	a ()Lnet/minecraft/server/WorldGenBlockPlacers; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)V place
	a (Lnet/minecraft/server/WorldGenBlockPlacerColumn;)Ljava/lang/Integer; lambda$null$1
	b (Lnet/minecraft/server/WorldGenBlockPlacerColumn;)Ljava/lang/Integer; lambda$null$0
dxr$1 net/minecraft/client/particle/HugeExplosionSeedParticle$1
ael$1 net/minecraft/tags/TagContainer$1
	b val$blocks
	c val$items
	d val$fluids
	e val$entityTypes
	a ()Lnet/minecraft/server/Tags; getBlocks
	b ()Lnet/minecraft/server/Tags; getItems
	c ()Lnet/minecraft/server/Tags; getFluids
	d ()Lnet/minecraft/server/Tags; getEntityTypes
dyd$b net/minecraft/client/particle/PlayerCloudParticle$SneezeProvider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/Tags net/minecraft/tags/TagCollection
	a ()Ljava/util/Map; getAllTags
	a (Laej$e;)Lnet/minecraft/server/MinecraftKey; getId
	a (Ljava/lang/Object;)Ljava/util/Collection; getMatchingTags
	a (Ljava/util/Map;)Lnet/minecraft/server/Tags; of
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; getTag
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/Tags; loadFromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/RegistryBlocks;)V serializeToNetwork
	a (Lnet/minecraft/server/Tag;)Lnet/minecraft/server/MinecraftKey; getId
	b ()Ljava/util/Collection; getAvailableTags
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; getTagOrEmpty
	b (Lnet/minecraft/server/Tag;)Lnet/minecraft/server/MinecraftKey; getIdOrThrow
	c ()Lnet/minecraft/server/Tags; empty
	c (Lnet/minecraft/server/MinecraftKey;)Z hasTag
net/minecraft/server/GeneratorSettings net/minecraft/world/level/levelgen/WorldGenSettings
	a CODEC
	b LOGGER
	d generateFeatures
	e generateBonusChest
	f dimensions
	g legacyCustomOptions
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$create$5
	a (Ljava/util/Map$Entry;)Lnet/minecraft/server/ResourceKey; lambda$levels$4
	a (Lnet/minecraft/server/GeneratorSettings;)Ljava/util/Optional; lambda$null$0
	a (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettingBase; lambda$create$8
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/IRegistry;J)Lnet/minecraft/server/ChunkGeneratorAbstract; makeDefaultOverworld
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettings; makeDefault
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/RegistryMaterials;Lnet/minecraft/server/ChunkGenerator;)Lnet/minecraft/server/RegistryMaterials; withOverworld
	a (Lnet/minecraft/server/IRegistryCustom;)Lnet/minecraft/server/GeneratorSettings; demoSettings
	a (Lnet/minecraft/server/IRegistryCustom;Ljava/util/Properties;)Lnet/minecraft/server/GeneratorSettings; create
	a (Lnet/minecraft/server/RegistryMaterials;Ljava/util/function/Supplier;Lnet/minecraft/server/ChunkGenerator;)Lnet/minecraft/server/RegistryMaterials; withOverworld
	a (Lnet/minecraft/server/WorldDimension;Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/DimensionManager; lambda$withOverworld$3
	a (ZLjava/util/OptionalLong;)Lnet/minecraft/server/GeneratorSettings; withSeed
	b (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettingBase; lambda$create$7
	c ()Z generateBonusChest
	c (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettingsFlat; lambda$create$6
	d ()Lnet/minecraft/server/RegistryMaterials; dimensions
	d (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettingBase; lambda$makeDefaultOverworld$2
	f ()Lcom/google/common/collect/ImmutableSet; levels
	getChunkGenerator ()Lnet/minecraft/server/ChunkGenerator; overworld
	getSeed ()J seed
	i ()Z isOldCustomizedWorld
	isDebugWorld ()Z isDebug
	j ()Lnet/minecraft/server/GeneratorSettings; withBonusChest
	k ()Lnet/minecraft/server/GeneratorSettings; withFeaturesToggled
	l ()Lnet/minecraft/server/GeneratorSettings; withBonusChestToggled
	m ()Lcom/mojang/serialization/DataResult; guardExperimental
	n ()Z stable
	shouldGenerateMapFeatures ()Z generateFeatures
dyd$a net/minecraft/client/particle/PlayerCloudParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
vh$a net/minecraft/resources/RegistryReadOps$ReadCache
	a values
	a (Lvh$a;)Ljava/util/Map; access$000
net/minecraft/server/BlockCobbleWall net/minecraft/world/level/block/WallBlock
	b EAST_WALL
	c NORTH_WALL
	d SOUTH_WALL
	e WEST_WALL
	f WATERLOGGED
	g shapeByIndex
	h collisionShapeByIndex
	i POST_TEST
	j NORTH_TEST
	k SOUTH_TEST
	o WEST_TEST
	p EAST_TEST
	a (FFFFFF)Ljava/util/Map; makeShapes
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/VoxelShape;)Z shouldRaisePost
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;)Z isConnected
	a (Lnet/minecraft/server/IBlockData;ZLnet/minecraft/server/EnumDirection;)Z connectsTo
	a (Lnet/minecraft/server/IBlockData;ZZZZLnet/minecraft/server/VoxelShape;)Lnet/minecraft/server/IBlockData; updateSides
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/IBlockData; sideUpdate
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; topUpdate
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;ZZZZ)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/BlockPropertyWallHeight;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;)Lnet/minecraft/server/VoxelShape; applyWallShape
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;)Z isCovered
	a (ZLnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;)Lnet/minecraft/server/BlockPropertyWallHeight; makeWallState
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/TileEntityBeehive net/minecraft/world/level/block/entity/BeehiveBlockEntity
	bees stored
	flowerPos savedFlowerPos
	X_ ()V setChanged
	a (ILnet/minecraft/server/EntityBee;)V setBeeReleaseData
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Entity; lambda$releaseOccupant$1
	a (Lnet/minecraft/server/Entity;ZI)V addOccupantWithPresetTicks
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntityBeehive$ReleaseStatus;)V emptyAllLivingFromHive
	a (Lnet/minecraft/server/IBlockData;)I getHoneyLevel
	a (Lnet/minecraft/server/IBlockData;Ljava/util/List;Lnet/minecraft/server/TileEntityBeehive$ReleaseStatus;Lnet/minecraft/server/TileEntityBeehive$HiveBee;)Z lambda$releaseAllOccupants$0
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	addBee (Lnet/minecraft/server/Entity;Z)V addOccupant
	aj_ ()V tick
	d ()Z isFireNearby
	getBeeCount ()I getOccupantCount
	l ()V sendDebugPackets
	m ()Lnet/minecraft/server/NBTTagList; writeBees
	releaseBee (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntityBeehive$HiveBee;Ljava/util/List;Lnet/minecraft/server/TileEntityBeehive$ReleaseStatus;)Z releaseOccupant
	releaseBees (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntityBeehive$ReleaseStatus;)Ljava/util/List; releaseAllOccupants
	x ()Z hasSavedFlowerPos
	y ()V tickOccupants
net/minecraft/server/EntitySlime net/minecraft/world/entity/monster/Slime
	b targetSquish
	bo ID_SIZE
	bp wasOnGround
	c squish
	d oSquish
	J ()Lnet/minecraft/server/MinecraftKey; getDefaultLootTable
	L ()Z shouldDespawnInPeaceful
	O ()I getMaxHeadXRot
	W ()Lnet/minecraft/server/EntityTypes; getType
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EntitySlime;)F access$000
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a_ (Lnet/minecraft/server/EntityHuman;)V playerTouch
	ac ()V remove
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntitySlime;)Z access$100
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkSlimeSpawnRules
	dF ()F getSoundVolume
	dJ ()V jumpFromGround
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eI ()Lnet/minecraft/server/ParticleParam; getParticleType
	eJ ()I getJumpDelay
	eK ()V decreaseSquish
	eL ()Z isDealsDamage
	eM ()F getAttackDamage
	eQ ()Z isTiny
	eR ()Z doPlayJumpSound
	getSoundJump ()Lnet/minecraft/server/SoundEffect; getJumpSound
	getSoundSquish ()Lnet/minecraft/server/SoundEffect; getSquishSound
	i (Lnet/minecraft/server/Entity;)V push
	i (Lnet/minecraft/server/EntityLiving;)V dealDamage
	j ()V tick
	j (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$0
	m ()F getSoundPitch
	o ()V registerGoals
	x_ ()V refreshDimensions
wq net/minecraft/server/commands/DebugMobSpawningCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/BlockPosition;)I spawnMobs
	a (Lnet/minecraft/server/EnumCreatureType;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
wr net/minecraft/server/commands/DebugPathCommand
	a ERROR_NOT_MOB
	b ERROR_NO_PATH
	c ERROR_NOT_COMPLETE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;)I fillBlocks
dbr$a net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionRandomChanceWithLooting;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionRandomChanceWithLooting; deserialize
net/minecraft/server/WorldGenFeatureMushroomConfiguration net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration
	a CODEC
	b capProvider
	c stemProvider
	d foliageRadius
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration;)Ljava/lang/Integer; lambda$null$2
	b (Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration;)Lnet/minecraft/server/WorldGenFeatureStateProvider; lambda$null$1
	c (Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration;)Lnet/minecraft/server/WorldGenFeatureStateProvider; lambda$null$0
net/minecraft/server/BehaviorPacify net/minecraft/world/entity/ai/behavior/BecomePassiveIfMemoryPresent
	b pacifyDuration
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BlockSmithingTable net/minecraft/world/level/block/SmithingTableBlock
	a CONTAINER_TITLE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$getMenuProvider$0
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
kh$a net/minecraft/data/worldgen/Features$Configs
	a DEFAULT_GRASS_CONFIG
	b TAIGA_GRASS_CONFIG
	c JUNGLE_GRASS_CONFIG
	d DEFAULT_FLOWER_CONFIG
	e DEAD_BUSH_CONFIG
	f SWEET_BERRY_BUSH_CONFIG
	g TALL_GRASS_CONFIG
	h SUGAR_CANE_CONFIG
	i LAVA_SPRING_CONFIG
	j CLOSED_NETHER_SPRING_CONFIG
	k CRIMSON_FOREST_CONFIG
	l WARPED_FOREST_CONFIG
	m NETHER_SPROUTS_CONFIG
kh$b net/minecraft/data/worldgen/Features$Decorators
	a BEEHIVE_0002
	b BEEHIVE_002
	c BEEHIVE_005
	d FIRE
	e HEIGHTMAP
	f TOP_SOLID_HEIGHTMAP
	g HEIGHTMAP_WORLD_SURFACE
	h HEIGHTMAP_DOUBLE
	i RANGE_10_20_ROOFED
	j RANGE_4_8_ROOFED
	k ADD_32
	l HEIGHTMAP_SQUARE
	m HEIGHTMAP_DOUBLE_SQUARE
	n TOP_SOLID_HEIGHTMAP_SQUARE
kh$c net/minecraft/data/worldgen/Features$States
	A RED_MUSHROOM
	B PACKED_ICE
	C BLUE_ICE
	D LILY_OF_THE_VALLEY
	E BLUE_ORCHID
	F POPPY
	G DANDELION
	H DEAD_BUSH
	I MELON
	J PUMPKIN
	K SWEET_BERRY_BUSH
	L FIRE
	M SOUL_FIRE
	N NETHERRACK
	O SOUL_SOIL
	P CRIMSON_ROOTS
	Q LILY_PAD
	R SNOW
	S JACK_O_LANTERN
	T SUNFLOWER
	U CACTUS
	V SUGAR_CANE
	W HUGE_RED_MUSHROOM
	X HUGE_BROWN_MUSHROOM
	Y HUGE_MUSHROOM_STEM
	Z WATER_STATE
	a GRASS
	aA ANCIENT_DEBRIS
	aB BASALT
	aC CRIMSON_FUNGUS
	aD WARPED_FUNGUS
	aE WARPED_ROOTS
	aF NETHER_SPROUTS
	aa LAVA_STATE
	ab WATER
	ac LAVA
	ad DIRT
	ae GRAVEL
	af GRANITE
	ag DIORITE
	ah ANDESITE
	ai COAL_ORE
	aj IRON_ORE
	ak GOLD_ORE
	al REDSTONE_ORE
	am DIAMOND_ORE
	an LAPIS_ORE
	ao STONE
	ap EMERALD_ORE
	aq INFESTED_STONE
	ar SAND
	as CLAY
	at MOSSY_COBBLESTONE
	au SEAGRASS
	av MAGMA_BLOCK
	aw SOUL_SAND
	ax NETHER_GOLD_ORE
	ay NETHER_QUARTZ_ORE
	az BLACKSTONE
	b FERN
	c PODZOL
	d COARSE_DIRT
	e MYCELIUM
	f SNOW_BLOCK
	g ICE
	h OAK_LOG
	i OAK_LEAVES
	j JUNGLE_LOG
	k JUNGLE_LEAVES
	l SPRUCE_LOG
	m SPRUCE_LEAVES
	n ACACIA_LOG
	o ACACIA_LEAVES
	p BIRCH_LOG
	q BIRCH_LEAVES
	r DARK_OAK_LOG
	s DARK_OAK_LEAVES
	t GRASS_BLOCK
	u LARGE_FERN
	v TALL_GRASS
	w LILAC
	x ROSE_BUSH
	y PEONY
	z BROWN_MUSHROOM
dbr$1 net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$1
net/minecraft/server/DataConverterSchemaV100 net/minecraft/util/datafix/schemas/V100
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$4
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
bxv$1 net/minecraft/world/level/block/LecternBlock$1
	a $SwitchMap$net$minecraft$core$Direction
bho$a net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase
	b this$0
	d ()Lnet/minecraft/server/WorldServer; getLevel
	e ()V onUpdated
	f ()Lnet/minecraft/server/Vec3D; getPosition
	g ()Lnet/minecraft/server/EntityMinecartCommandBlock; getMinecart
	h ()Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
net/minecraft/server/DataConverterSchemaV102 net/minecraft/util/datafix/schemas/V102
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
xt net/minecraft/server/commands/RaidCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	a (Lnet/minecraft/server/CommandListenerWrapper;)I glow
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I setBadOmenLevel
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/IChatBaseComponent;)I playSound
	a (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/Raid; getRaid
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	b (Lnet/minecraft/server/CommandListenerWrapper;)I spawnLeader
	b (Lnet/minecraft/server/CommandListenerWrapper;I)I start
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	c (Lnet/minecraft/server/CommandListenerWrapper;)I stop
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	d (Lnet/minecraft/server/CommandListenerWrapper;)I check
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	e (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/WhiteList net/minecraft/server/players/UserWhiteList
	a ()[Ljava/lang/String; getUserList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/JsonListEntry; createEntry
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; find
	b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
	isWhitelisted (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
net/minecraft/server/BlockWallSign net/minecraft/world/level/block/WallSignBlock
	d AABBS
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	i ()Ljava/lang/String; getDescriptionId
net/minecraft/server/SlotResult net/minecraft/world/inventory/ResultSlot
	a craftSlots
	b player
	g removeCount
	a (I)Lnet/minecraft/server/ItemStack; remove
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/ItemStack;I)V onQuickCraft
	b (I)V onSwapCraft
	c (Lnet/minecraft/server/ItemStack;)V checkTakeAchievements
net/minecraft/server/ITileEntity net/minecraft/world/level/block/EntityBlock
	createTile (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
cxx$a net/minecraft/world/level/storage/CommandStorage$Container
	a storage
	a (Ljava/lang/String;)Lnet/minecraft/server/NBTTagCompound; get
	a (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; lambda$getKeys$1
	a (Ljava/lang/String;Lnet/minecraft/server/NBTTagCompound;)V put
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;Lnet/minecraft/server/NBTTagCompound;)V lambda$save$0
	b (Ljava/lang/String;)Ljava/util/stream/Stream; getKeys
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
net/minecraft/server/WorldGenFeatureHugeFungi net/minecraft/world/level/levelgen/feature/HugeFungusFeature
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;)V tryPlaceWeepingVines
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V placeHatDropBlock
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureHugeFungiConfiguration;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;FFF)V placeHatBlock
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureHugeFungiConfiguration;Lnet/minecraft/server/BlockPosition;IZ)V placeStem
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Z)Z isReplaceable
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureHugeFungiConfiguration;)Z place
	a (ZLnet/minecraft/server/IBlockData;)Z lambda$isReplaceable$0
	b (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureHugeFungiConfiguration;Lnet/minecraft/server/BlockPosition;IZ)V placeHat
net/minecraft/server/BlockDirtSnowSpreadable net/minecraft/world/level/block/SpreadingSnowyDirtBlock
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canBeGrass
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canPropagate
ear$d$1 net/minecraft/client/renderer/block/ModelBlockRenderer$Cache$1
	a this$0
net/minecraft/server/LootItemFunctionSetStewEffect net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction
	a effectDurationMap
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionSetStewEffect;)Ljava/util/Map; access$100
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
	c ()Ldas$a; stewEffect
net/minecraft/server/PacketPlayOutRecipes net/minecraft/network/protocol/game/ClientboundRecipePacket
	a state
	b recipes
	c toHighlight
	d bookSettings
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/List; getRecipes
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/List; getHighlights
	d ()Lnet/minecraft/server/RecipeBookSettings; getBookSettings
	e ()Lnet/minecraft/server/PacketPlayOutRecipes$Action; getState
net/minecraft/server/WorldSettings net/minecraft/world/level/LevelSettings
	g dataPackConfig
	a (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/server/DataPackConfiguration;)Lnet/minecraft/server/WorldSettings; parse
	a (Ljava/lang/Number;)Lnet/minecraft/server/EnumDifficulty; lambda$parse$0
	a (Lnet/minecraft/server/DataPackConfiguration;)Lnet/minecraft/server/WorldSettings; withDataPackConfig
	a (Lnet/minecraft/server/EnumDifficulty;)Lnet/minecraft/server/WorldSettings; withDifficulty
	a (Lnet/minecraft/server/EnumGamemode;)Lnet/minecraft/server/WorldSettings; withGameType
	e ()Z allowCommands
	g ()Lnet/minecraft/server/DataPackConfiguration; getDataPackConfig
	getDifficulty ()Lnet/minecraft/server/EnumDifficulty; difficulty
	getGameRules ()Lnet/minecraft/server/GameRules; gameRules
	getGameType ()Lnet/minecraft/server/EnumGamemode; gameType
	getLevelName ()Ljava/lang/String; levelName
	h ()Lnet/minecraft/server/WorldSettings; copy
	isHardcore ()Z hardcore
ear$d$2 net/minecraft/client/renderer/block/ModelBlockRenderer$Cache$2
	a this$0
net/minecraft/server/BlockFlowers net/minecraft/world/level/block/FlowerBlock
	a SHAPE
	b suspiciousStewEffect
	c effectDuration
	ah_ ()Lnet/minecraft/server/BlockBase$EnumRandomOffset; getOffsetType
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c ()Lnet/minecraft/server/MobEffectList; getSuspiciousStewEffect
	d ()I getEffectDuration
net/minecraft/server/SensorNearestPlayers net/minecraft/world/entity/ai/sensing/PlayerSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityHuman;)Z lambda$doTick$1
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityPlayer;)Z lambda$doTick$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
net/minecraft/server/PacketPlayInBEdit net/minecraft/network/protocol/game/ServerboundEditBookPacket
	a book
	b signing
	c hand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/ItemStack; getBook
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z isSigning
	d ()Lnet/minecraft/server/EnumHand; getHand
net/minecraft/server/WorldGenFeatureWeepingVines net/minecraft/world/level/levelgen/feature/WeepingVinesFeature
	a DIRECTIONS
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;III)V placeWeepingVinesColumn
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)V placeRoofNetherWart
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
	b (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)V placeRoofWeepingVines
agr$1 net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix$1
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/IChatMutableComponent; deserialize
net/minecraft/server/PathfinderGoalTradeWithPlayer net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal
	a mob
	a ()Z canUse
	c ()V start
	d ()V stop
dej$k com/mojang/blaze3d/platform/GlStateManager$FboBlitMode
	a BASE
	b EXT
	c NONE
	d $VALUES
dej$l com/mojang/blaze3d/platform/GlStateManager$FboMode
	a BASE
	b ARB
	c EXT
	d $VALUES
dej$m com/mojang/blaze3d/platform/GlStateManager$FogMode
	a LINEAR
	b EXP
	c EXP2
	d value
	e $VALUES
aay$1 net/minecraft/server/network/ServerGamePacketListenerImpl$1
	a $SwitchMap$net$minecraft$world$level$block$entity$CommandBlockEntity$Mode
	b $SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerActionPacket$Action
	c $SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerCommandPacket$Action
	d $SwitchMap$net$minecraft$network$protocol$game$ServerboundClientCommandPacket$Action
dej$n com/mojang/blaze3d/platform/GlStateManager$FogState
	a enable
	b mode
	c density
	d start
	e end
dej$o com/mojang/blaze3d/platform/GlStateManager$LogicOp
	a AND
	b AND_INVERTED
	c AND_REVERSE
	d CLEAR
	e COPY
	f COPY_INVERTED
	g EQUIV
	h INVERT
	i NAND
	j NOOP
	k NOR
	l OR
	m OR_INVERTED
	n OR_REVERSE
	o SET
	p XOR
	q value
	r $VALUES
dej$p com/mojang/blaze3d/platform/GlStateManager$PolygonOffsetState
	a fill
	b line
	c factor
	d units
bud$1 net/minecraft/world/level/block/BaseRailBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
dej$q com/mojang/blaze3d/platform/GlStateManager$SourceFactor
	a CONSTANT_ALPHA
	b CONSTANT_COLOR
	c DST_ALPHA
	d DST_COLOR
	e ONE
	f ONE_MINUS_CONSTANT_ALPHA
	g ONE_MINUS_CONSTANT_COLOR
	h ONE_MINUS_DST_ALPHA
	i ONE_MINUS_DST_COLOR
	j ONE_MINUS_SRC_ALPHA
	k ONE_MINUS_SRC_COLOR
	l SRC_ALPHA
	m SRC_ALPHA_SATURATE
	n SRC_COLOR
	o ZERO
	p value
	q $VALUES
dej$r com/mojang/blaze3d/platform/GlStateManager$StencilFunc
	a func
	b ref
	c mask
dej$s com/mojang/blaze3d/platform/GlStateManager$StencilState
	a func
	b mask
	c fail
	d zfail
	e zpass
dej$t com/mojang/blaze3d/platform/GlStateManager$TexGen
	a S
	b T
	c R
	d Q
	e $VALUES
zd net/minecraft/server/commands/data/package-info
dej$u com/mojang/blaze3d/platform/GlStateManager$TexGenCoord
	a enable
	b coord
	c mode
ze net/minecraft/server/commands/package-info
dej$v com/mojang/blaze3d/platform/GlStateManager$TexGenState
	a s
	b t
	c r
	d q
dej$w com/mojang/blaze3d/platform/GlStateManager$TextureState
	a enable
	b binding
dej$x com/mojang/blaze3d/platform/GlStateManager$Viewport
	a INSTANCE
	b x
	c y
	d width
	e height
	f $VALUES
net/minecraft/server/EntityLightning net/minecraft/world/entity/LightningBolt
	b seed
	d flashes
	f cause
	isEffect visualOnly
	lifeTicks life
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (I)V spawnFire
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	ct ()Lnet/minecraft/server/SoundCategory; getSoundSource
	d (Lnet/minecraft/server/EntityPlayer;)V setCause
	e ()V defineSynchedData
	g ()Lnet/minecraft/server/EntityPlayer; getCause
	j ()V tick
	setEffect (Z)V setVisualOnly
net/minecraft/server/LootItemFunctionCopyNBT$Source net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$DataSource
	e name
	f param
	g getter
	h $VALUES
	a (Ljava/lang/String;)Lnet/minecraft/server/LootItemFunctionCopyNBT$Source; getByName
	a (Lnet/minecraft/server/LootContextParameter;Ljava/util/function/Function;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/NBTBase; lambda$new$0
zl net/minecraft/server/dedicated/package-info
zp net/minecraft/server/gui/package-info
dej$a com/mojang/blaze3d/platform/GlStateManager$AlphaState
	a mode
	b func
	c reference
zq net/minecraft/server/level/BlockDestructionProgress
	a id
	b pos
	c progress
	d updatedRenderTick
	a ()I getId
	a (I)V setProgress
	a (Lzq;)I compareTo
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (I)V updateTick
	c ()I getProgress
	d ()I getUpdatedRenderTick
net/minecraft/server/DataConverterHanging net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix
	a DIRECTIONS
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$5
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$4
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$3
	a (Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic; doFix
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
dej$b com/mojang/blaze3d/platform/GlStateManager$BlendState
	a mode
	b srcRgb
	c dstRgb
	d srcAlpha
	e dstAlpha
dej$c com/mojang/blaze3d/platform/GlStateManager$BooleanState
	a state
	b enabled
	a ()V disable
	a (Z)V setEnabled
	b ()V enable
dej$d com/mojang/blaze3d/platform/GlStateManager$Color
	a r
	b g
	c b
	d a
dej$e com/mojang/blaze3d/platform/GlStateManager$ColorLogicState
	a enable
	b op
dej$f com/mojang/blaze3d/platform/GlStateManager$ColorMask
	a red
	b green
	c blue
	d alpha
dej$g com/mojang/blaze3d/platform/GlStateManager$ColorMaterialState
	a enable
	b face
	c mode
net/minecraft/server/NetworkManager net/minecraft/network/Connection
	a ROOT_MARKER
	b PACKET_MARKER
	c ATTRIBUTE_PROTOCOL
	d NETWORK_WORKER_GROUP
	e NETWORK_EPOLL_WORKER_GROUP
	f LOCAL_WORKER_GROUP
	g LOGGER
	h receiving
	m disconnectedReason
	n encrypted
	o disconnectionHandled
	p receivedPackets
	packetQueue queue
	q sentPackets
	r averageReceivedPackets
	s averageSentPackets
	socketAddress address
	t tickCount
	u handlingFault
	a ()V tick
	a (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/server/Packet;)V channelRead0
	a (Ljava/net/InetAddress;IZ)Lnet/minecraft/server/NetworkManager; connectToServer
	a (Ljava/net/SocketAddress;)Lnet/minecraft/server/NetworkManager; connectToLocalServer
	a (Ljavax/crypto/SecretKey;)V setEncryptionKey
	a (Lnet/minecraft/server/EnumProtocol;Lnet/minecraft/server/EnumProtocol;Lnet/minecraft/server/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V lambda$sendPacket$4
	a (Lnet/minecraft/server/IChatBaseComponent;Lio/netty/util/concurrent/Future;)V lambda$exceptionCaught$3
	a (Lnet/minecraft/server/Packet;Lnet/minecraft/server/PacketListener;)V genericsFtw
	b ()V tickSecond
	b (Lnet/minecraft/server/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V sendPacket
	close (Lnet/minecraft/server/IChatBaseComponent;)V disconnect
	e ()Lnet/minecraft/server/EnumProtocolDirection; getReceiving
	f ()Lnet/minecraft/server/EnumProtocolDirection; getSending
	g ()Z isEncrypted
	getSocketAddress ()Ljava/net/SocketAddress; getRemoteAddress
	i ()Z isConnecting
	isLocal ()Z isMemoryConnection
	j ()Lnet/minecraft/server/PacketListener; getPacketListener
	k ()Lnet/minecraft/server/IChatBaseComponent; getDisconnectedReason
	n ()F getAverageReceivedPackets
	o ()F getAverageSentPackets
	p ()V flushQueue
	q ()Lio/netty/channel/DefaultEventLoopGroup; lambda$static$2
	r ()Lio/netty/channel/epoll/EpollEventLoopGroup; lambda$static$1
	s ()Lio/netty/channel/nio/NioEventLoopGroup; lambda$static$0
	sendPacket (Lnet/minecraft/server/Packet;)V send
	sendPacket (Lnet/minecraft/server/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V send
	setCompressionLevel (I)V setupCompression
	setPacketListener (Lnet/minecraft/server/PacketListener;)V setListener
	stopReading ()V setReadOnly
dej$h com/mojang/blaze3d/platform/GlStateManager$CullState
	a enable
	b mode
dej$i com/mojang/blaze3d/platform/GlStateManager$DepthState
	a mode
	b mask
	c func
net/minecraft/server/WorldGenWoodlandMansion net/minecraft/world/level/levelgen/feature/WoodlandMansionFeature
	a ()Lckx$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z isFeatureChunk
	b ()Z linearSeparation
dej$j com/mojang/blaze3d/platform/GlStateManager$DestFactor
	a CONSTANT_ALPHA
	b CONSTANT_COLOR
	c DST_ALPHA
	d DST_COLOR
	e ONE
	f ONE_MINUS_CONSTANT_ALPHA
	g ONE_MINUS_CONSTANT_COLOR
	h ONE_MINUS_DST_ALPHA
	i ONE_MINUS_DST_COLOR
	j ONE_MINUS_SRC_ALPHA
	k ONE_MINUS_SRC_COLOR
	l SRC_ALPHA
	m SRC_COLOR
	n ZERO
	o value
	p $VALUES
zz net/minecraft/server/level/FeatureSimulator
	a minPos
	b maxPos
	a ()Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;II)Z setBlock
	a (Lnet/minecraft/server/BlockPosition;Z)Z removeBlock
	a (Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/Entity;I)Z destroyBlock
	a (Lnet/minecraft/server/HeightMap$Type;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; getHeightmapPos
	b (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
net/minecraft/server/PathfinderGoalEatTile net/minecraft/world/entity/ai/goal/EatBlockGoal
	a IS_TALL_GRASS
	b mob
	c level
	d eatAnimationTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()I getEatAnimationTick
net/minecraft/server/BiomeBase$TemperatureModifier net/minecraft/world/level/biome/Biome$TemperatureModifier
	c CODEC
	d name
	e BY_NAME
	f $VALUES
	a ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;)Lnet/minecraft/server/BiomeBase$TemperatureModifier; byName
	a (Lnet/minecraft/server/BiomeBase$TemperatureModifier;)Lnet/minecraft/server/BiomeBase$TemperatureModifier; lambda$static$0
	a (Lnet/minecraft/server/BlockPosition;F)F modifyTemperature
	b ()Ljava/lang/String; getName
emt$a net/minecraft/client/searchtree/SearchRegistry$Key
dcu$1 net/minecraft/world/phys/shapes/EntityCollisionContext$1
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/BlockPosition;Z)Z isAbove
net/minecraft/server/ItemBanner net/minecraft/world/item/BannerItem
	a (Lnet/minecraft/server/ItemStack;Ljava/util/List;)V appendHoverTextFromBannerBlockEntityTag
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbni;)V appendHoverText
	b ()Lnet/minecraft/server/EnumColor; getColor
net/minecraft/server/EntityHuman net/minecraft/world/entity/player/Player
	activeContainer containerMenu
	b POSES
	bA zCloak
	bB wasUnderwater
	bG enchantmentSeed
	bH defaultFlySpeed
	bJ gameProfile
	bK reducedDebugInfo
	bL lastItemInMainHand
	bM cooldowns
	bh STANDING_DIMENSIONS
	bi DATA_PLAYER_MODE_CUSTOMISATION
	bj DATA_PLAYER_MAIN_HAND
	bk DATA_SHOULDER_LEFT
	bl DATA_SHOULDER_RIGHT
	br jumpTriggerTime
	bs oBob
	bt bob
	bu takeXpDelay
	bv xCloakO
	bw yCloakO
	bx zCloakO
	by xCloak
	bz yCloak
	c DATA_PLAYER_ABSORPTION_ID
	d DATA_SCORE_ID
	defaultContainer inventoryMenu
	e timeEntitySatOnShoulder
	enderChest enderChestInventory
	exp experienceProgress
	expLevel experienceLevel
	expTotal totalExperience
	g lastLevelUpTime
	hookedFish fishing
	sleepTicks sleepCounter
	Q ()Lnet/minecraft/server/IChatBaseComponent; getName
	a (B)V handleEntityEvent
	a (Lbfu;)Z isModelPartShown
	a (Lcom/mojang/authlib/GameProfile;)Ljava/util/UUID; createPlayerUUID
	a (Ljava/lang/String;Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; lambda$decorateDisplayNameComponent$4
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/ItemStack;)Z mayUseItemAt
	a (Lnet/minecraft/server/CommandBlockListenerAbstract;)V openMinecartCommandBlock
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/Entity;)V crit
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interactOn
	a (Lnet/minecraft/server/EntityHuman;)Z canHarmPlayer
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EnumGamemode;)V setGameMode
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$hurtCurrentlyUsedShield$2
	a (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	a (Lnet/minecraft/server/EnumMainHand;)V setMainArm
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Vec3D;)V makeStuckInBlock
	a (Lnet/minecraft/server/IChatBaseComponent;Z)V displayClientMessage
	a (Lnet/minecraft/server/IChatMutableComponent;)Lnet/minecraft/server/IChatMutableComponent; decorateDisplayNameComponent
	a (Lnet/minecraft/server/ItemStack;ZZ)Lnet/minecraft/server/EntityItem; drop
	a (Lnet/minecraft/server/MinecraftKey;)V awardStat
	a (Lnet/minecraft/server/MinecraftKey;I)V awardStat
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/ParticleParam;)V addParticlesAroundSelf
	a (Lnet/minecraft/server/SoundEffect;FF)V playSound
	a (Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playNotifySound
	a (Lnet/minecraft/server/Statistic;)V resetStat
	a (Lnet/minecraft/server/Statistic;I)V awardStat
	a (Lnet/minecraft/server/TileEntityCommand;)V openCommandBlock
	a (Lnet/minecraft/server/TileEntityJigsaw;)V openJigsawBlock
	a (Lnet/minecraft/server/TileEntityStructure;)V openStructureBlock
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumMoveType;)Lnet/minecraft/server/Vec3D; maybeBackOffFromEdge
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumGamemode;)Z blockActionRestricted
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; eat
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V killed
	a ([Lnet/minecraft/server/MinecraftKey;)V awardRecipesByKey
	aB ()Z isMovementNoisy
	aI ()V updateSwimming
	aL ()V doWaterSplashEffect
	aZ ()V rideTick
	a_ ()Z isSpectator
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	ab ()V resetPos
	ac ()V remove
	addScore (I)V increaseScore
	ai ()I getPortalWaitTime
	applyExhaustion (F)V causeFoodExhaustion
	aq ()F getBlockSpeedFactor
	au ()Lnet/minecraft/server/SoundEffect; getSwimSound
	av ()Lnet/minecraft/server/SoundEffect; getSwimSplashSound
	aw ()Lnet/minecraft/server/SoundEffect; getSwimHighSpeedSplashSound
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/DamageSource;)Z isInvulnerableTo
	b (Lnet/minecraft/server/DamageSource;F)V hurtArmor
	b (Lnet/minecraft/server/Entity;)V magicCrit
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;)V lambda$playShoulderEntityAmbientSound$1
	b (Lnet/minecraft/server/EnumItemSlot;)Lnet/minecraft/server/ItemStack; getItemBySlot
	b (Lnet/minecraft/server/IBlockData;)Z shouldRemoveSoulSpeed
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/Statistic;)V awardStat
	bA ()Z isSwimming
	bT ()Ljava/lang/String; getScoreboardName
	bU ()Z isPushedByFluid
	bX ()Z shouldShowName
	ba ()D getMyRidingOffset
	be ()V removeVehicle
	bk ()I getDimensionChangingDelay
	bm ()Ljava/lang/Iterable; getHandSlots
	bn ()Ljava/lang/Iterable; getArmorSlots
	c (Lnet/minecraft/server/Entity;)V touch
	c (Lnet/minecraft/server/EntityTypes;)Z lambda$playShoulderEntityAmbientSound$0
	c (Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	cO ()Z onSoulSpeedBlock
	cS ()Z isAffectedByFluids
	cW ()Z isAlwaysExperienceDropper
	checkMovement (DDD)V checkMovementStatistics
	closeInventory ()V closeContainer
	ct ()Lnet/minecraft/server/SoundCategory; getSoundSource
	cu ()I getFireImmuneTicks
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	d (Lnet/minecraft/server/Entity;)V lambda$respawnEntityOnShoulder$3
	d (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	d (Lnet/minecraft/server/EntityLiving;)V blockUsingShield
	dH ()Z isImmobile
	dJ ()V jumpFromGround
	dM ()F getSpeed
	dO ()V serverAiStep
	dS ()F getAbsorptionAmount
	dU ()Lnet/minecraft/server/EnumMainHand; getMainArm
	discoverRecipes (Ljava/util/Collection;)I awardRecipes
	dm ()V dropEquipment
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dropItem (Z)Z drop
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/DamageSource;F)V actuallyHurt
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	eB ()I getSleepTimer
	eC ()Z tryToStartFallFlying
	eF ()I getEnchantmentSeed
	eI ()Z isHurt
	eJ ()Z mayBuild
	eN ()Z isReducedDebugInfo
	eQ ()F getCurrentItemAttackStrengthDelay
	eT ()F getLuck
	ei ()Lcom/google/common/collect/ImmutableList; getDismountPoses
	em ()V stopSleeping
	enchantDone (Lnet/minecraft/server/ItemStack;I)V onEnchantmentPerformed
	eo ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	ep ()Z isSecondaryUseActive
	eq ()Z wantsToStopRiding
	er ()Z isStayingOnGroundSurface
	es ()Z updateIsUnderwater
	et ()V updatePlayerPose
	ew ()V sweepAttack
	ex ()V respawn
	ey ()Z isLocalPlayer
	f (Lnet/minecraft/server/BlockPosition;)Z freeAt
	f (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; getProjectile
	g (I)V setRemainingFireTicks
	g (Lnet/minecraft/server/EntityLiving;)V doAutoAttackOnTouch
	g (Lnet/minecraft/server/ItemStack;)Z addItem
	g (Lnet/minecraft/server/NBTTagCompound;)Z setEntityOnShoulder
	g (Lnet/minecraft/server/Vec3D;)V travel
	getAttackCooldown (F)F getAttackStrengthScale
	getBed (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;FZZ)Ljava/util/Optional; findRespawnPositionAndUseSpawnBlock
	getCooldownTracker ()Lnet/minecraft/server/ItemCooldown; getCooldowns
	getEnderChest ()Lnet/minecraft/server/InventoryEnderChest; getEnderChestInventory
	getExpToLevel ()I getXpNeededForNextLevel
	getOfflineUUID (Ljava/lang/String;)Ljava/util/UUID; createPlayerUUID
	getProfile ()Lcom/mojang/authlib/GameProfile; getGameProfile
	giveExp (I)V giveExperiencePoints
	hasBlock (Lnet/minecraft/server/IBlockData;)Z hasCorrectToolForDrops
	i ()Lnet/minecraft/server/ItemCooldown; createItemCooldowns
	isCreativeAndOp ()Z canUseGameMasterBlocks
	isDeeplySleeping ()Z isSleepingLongEnough
	j ()V tick
	j (Lnet/minecraft/server/NBTTagCompound;)V playShoulderEntityAmbientSound
	k ()V aiStep
	levelDown (I)V giveExperienceLevels
	o ()V turtleHelmetTick
	o (F)Lnet/minecraft/server/Vec3D; getRopeHoldPosition
	o (I)Lnet/minecraft/server/SoundEffect; getFallDamageSound
	openBook (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)V openItemGui
	openContainer (Lnet/minecraft/server/ITileInventory;)Ljava/util/OptionalInt; openMenu
	openSign (Lnet/minecraft/server/TileEntitySign;)V openTextEdit
	openTrade (ILnet/minecraft/server/MerchantRecipeList;IIZZ)V sendMerchantOffers
	p ()V moveCloak
	p (F)V hurtCurrentlyUsedShield
	p (Z)V disableShield
	q ()Z isAboveGround
	q (DDD)V checkRidingStatistics
	q (Z)Z canEat
	r (Z)V setReducedDebugInfo
	releaseShoulderEntities ()V removeEntitiesOnShoulder
	removeCursedItems ()V destroyVanishingCursedItems
	resetAttackCooldown ()V resetAttackStrengthTicker
	s (F)V setAbsorptionAmount
	sleep (Lnet/minecraft/server/BlockPosition;)Lcom/mojang/datafixers/util/Either; startSleepInBed
	spawnEntityFromShoulder (Lnet/minecraft/server/NBTTagCompound;)V respawnEntityOnShoulder
	startGliding ()V startFallFlying
	stopGliding ()V stopFallFlying
	undiscoverRecipes (Ljava/util/Collection;)I resetRecipes
	updateAbilities ()V onUpdateAbilities
	wakeup (ZZ)V stopSleepInBed
net/minecraft/server/IReloadable net/minecraft/server/packs/resources/ReloadInstance
	a ()Ljava/util/concurrent/CompletableFuture; done
	b ()F getActualProgress
	c ()Z isApplying
	d ()Z isDone
	e ()V checkExceptions
bok$1 net/minecraft/world/item/crafting/Ingredient$1
net/minecraft/server/PacketPlayOutCloseWindow net/minecraft/network/protocol/game/ClientboundContainerClosePacket
	a containerId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/BlockStateDirection net/minecraft/world/level/block/state/properties/DirectionProperty
	a (Ljava/lang/String;Ljava/util/Collection;)Lnet/minecraft/server/BlockStateDirection; create
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Lnet/minecraft/server/BlockStateDirection; create
	a (Ljava/lang/String;[Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockStateDirection; create
	of (Ljava/lang/String;)Lnet/minecraft/server/BlockStateDirection; create
is$a net/minecraft/data/models/blockstates/VariantProperties$Rotation
	a R0
	b R90
	c R180
	d R270
	e value
	f $VALUES
	a (Lis$a;)I access$000
net/minecraft/server/MinecartTrackLogic net/minecraft/world/level/block/RailState
	a level
	b pos
	c block
	d state
	e isStraight
	f connections
	a ()Ljava/util/List; getConnections
	a (Lnet/minecraft/server/BlockPosition;)Z hasRail
	a (Lnet/minecraft/server/BlockPropertyTrackPosition;)V updateConnections
	a (Lnet/minecraft/server/MinecartTrackLogic;)Z connectsTo
	a (ZZLnet/minecraft/server/BlockPropertyTrackPosition;)Lnet/minecraft/server/MinecartTrackLogic; place
	b ()I countPotentialConnections
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MinecartTrackLogic; getRail
	b (Lnet/minecraft/server/MinecartTrackLogic;)Z canConnectTo
	c ()Lnet/minecraft/server/IBlockData; getState
	c (Lnet/minecraft/server/BlockPosition;)Z hasConnection
	c (Lnet/minecraft/server/MinecartTrackLogic;)V connectTo
	d ()V removeSoftConnections
	d (Lnet/minecraft/server/BlockPosition;)Z hasNeighborRail
net/minecraft/server/WorldGenFeatureTreeCocoa net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator
	a CODEC
	b probability
	a ()Lnet/minecraft/server/WorldGenFeatureTrees; type
	a (ILnet/minecraft/server/BlockPosition;)Z lambda$place$1
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/BlockPosition;)V lambda$place$2
	a (Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V place
	a (Lnet/minecraft/server/WorldGenFeatureTreeCocoa;)Ljava/lang/Float; lambda$static$0
net/minecraft/server/EntityFlying net/minecraft/world/entity/FlyingMob
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	b (FF)Z causeFallDamage
	c_ ()Z onClimbable
	g (Lnet/minecraft/server/Vec3D;)V travel
bok$b net/minecraft/world/item/crafting/Ingredient$TagValue
	a tag
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
net/minecraft/server/IDispenseBehavior net/minecraft/core/dispenser/DispenseItemBehavior
	NONE NOOP
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/Entity;Lnet/minecraft/server/EnumDirection;)V setEntityPokingOutOfBlock
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; lambda$static$0
	c ()V bootStrap
net/minecraft/server/BlockCryingObsidian net/minecraft/world/level/block/CryingObsidianBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
net/minecraft/server/ArgumentBlock net/minecraft/commands/arguments/blocks/BlockStateParser
	a ERROR_NO_TAGS_ALLOWED
	b ERROR_UNKNOWN_BLOCK
	c ERROR_UNKNOWN_PROPERTY
	d ERROR_DUPLICATE_PROPERTY
	e ERROR_INVALID_VALUE
	f ERROR_EXPECTED_VALUE
	g ERROR_EXPECTED_END_OF_PROPERTIES
	h SUGGEST_NOTHING
	i reader
	j forTesting
	k properties
	l vagueProperties
	m id
	n definition
	o state
	p nbt
	q tag
	r tagCursor
	s suggestions
	a (I)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$readBlock$6
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/IBlockState;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder; addSuggestions
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyValue
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	a (Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; lambda$readVagueProperties$8
	a (Ljava/lang/StringBuilder;Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)V appendProperty
	a (Lnet/minecraft/server/IBlockData;)Ljava/lang/String; serialize
	a (Lnet/minecraft/server/IBlockState;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; lambda$readProperties$7
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/String;I)V setValue
	a (Lnet/minecraft/server/Tags;)Z hasBlockEntity
	a (Z)Lnet/minecraft/server/ArgumentBlock; parse
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; suggestPropertyNameOrEnd
	b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	c ()Lnet/minecraft/server/NBTTagCompound; getNbt
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyNameOrEnd
	c (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	d ()Lnet/minecraft/server/MinecraftKey; getTag
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; suggestPropertyName
	e ()V readBlock
	e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyName
	f ()V readTag
	f (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; suggestOpenNbt
	g ()V readProperties
	g (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; suggestEquals
	getBlockData ()Lnet/minecraft/server/IBlockData; getState
	getStateMap ()Ljava/util/Map; getProperties
	h ()V readVagueProperties
	h (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; suggestNextPropertyOrEnd
	i ()V readNbt
	i (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; suggestOpenVaguePropertiesOrNbt
	j ()Ljava/util/Map; getVagueProperties
	j (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; suggestOpenPropertiesOrNbt
	k (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; suggestTag
	l (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; suggestBlockIdOrTag
	m (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/Tags;)Ljava/util/concurrent/CompletableFuture; lambda$static$5
net/minecraft/server/WorldGenDecoratorHeightAbstract net/minecraft/world/level/levelgen/placement/EdgeDecorator
	a (Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;)Lnet/minecraft/server/HeightMap$Type; type
net/minecraft/server/MapIconBanner net/minecraft/world/level/saveddata/maps/MapBanner
	a pos
	b color
	c name
	a ()Lnet/minecraft/server/BlockPosition; getPos
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MapIconBanner; fromWorld
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/MapIconBanner; load
	b ()Lnet/minecraft/server/EnumColor; getColor
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; lambda$fromWorld$0
	c ()Lnet/minecraft/server/MapIcon$Type; getDecoration
	d ()Lnet/minecraft/server/IChatBaseComponent; getName
	e ()Lnet/minecraft/server/NBTTagCompound; save
	f ()Ljava/lang/String; getId
net/minecraft/server/DataConverterSchemaV143 net/minecraft/util/datafix/schemas/V143
net/minecraft/server/SecondaryWorldData net/minecraft/world/level/storage/DerivedLevelData
	a worldData
	b wrapped
	a ()I getXSpawn
	a (F)V setSpawnAngle
	a (I)V setClearWeatherTime
	a (J)V setGameTime
	a (Lcfr$c;)V setWorldBorder
	a (Ljava/util/UUID;)V setWanderingTraderId
	a (Lnet/minecraft/server/BlockPosition;F)V setSpawn
	a (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/server/EnumGamemode;)V setGameType
	a (Z)V setThundering
	b ()I getYSpawn
	b (I)V setXSpawn
	b (J)V setDayTime
	b (Z)V setRaining
	c ()I getZSpawn
	c (I)V setYSpawn
	c (Z)V setInitialized
	d ()F getSpawnAngle
	d (I)V setZSpawn
	e ()J getGameTime
	e (I)V setThunderTime
	f ()J getDayTime
	f (I)V setRainTime
	g ()Ljava/lang/String; getLevelName
	g (I)V setWanderingTraderSpawnDelay
	h ()I getClearWeatherTime
	h (I)V setWanderingTraderSpawnChance
	i ()Z isThundering
	j ()I getThunderTime
	k ()Z isRaining
	l ()I getRainTime
	m ()Lnet/minecraft/server/EnumGamemode; getGameType
	n ()Z isHardcore
	o ()Z getAllowCommands
	p ()Z isInitialized
	q ()Lnet/minecraft/server/GameRules; getGameRules
	r ()Lcfr$c; getWorldBorder
	s ()Lnet/minecraft/server/EnumDifficulty; getDifficulty
	t ()Z isDifficultyLocked
	u ()Lnet/minecraft/server/CustomFunctionCallbackTimerQueue; getScheduledEvents
	v ()I getWanderingTraderSpawnDelay
	w ()I getWanderingTraderSpawnChance
	x ()Ljava/util/UUID; getWanderingTraderId
net/minecraft/server/SensorHoglinSpecific net/minecraft/world/entity/ai/sensing/HoglinSpecificSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z lambda$findNearestRepellent$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityHoglin;)V doTick
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityHoglin;)Ljava/util/Optional; findNearestRepellent
net/minecraft/server/DemoPlayerInteractManager net/minecraft/server/level/DemoMode
	c displayedIntro
	d demoHasEnded
	e demoEndedReminder
	f gameModeTicks
	a ()V tick
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType;Lnet/minecraft/server/EnumDirection;I)V handleBlockBreakAction
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; useItem
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; useItemOn
	f ()V outputDemoReminder
net/minecraft/server/EntityMagmaCube net/minecraft/world/entity/monster/MagmaCube
	J ()Lnet/minecraft/server/MinecraftKey; getDefaultLootTable
	a (IZ)V setSize
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	aQ ()F getBrightness
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkMagmaCubeSpawnRules
	bp ()Z isOnFire
	c (Lnet/minecraft/server/Tag;)V jumpInLiquid
	dJ ()V jumpFromGround
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eI ()Lnet/minecraft/server/ParticleParam; getParticleType
	eJ ()I getJumpDelay
	eK ()V decreaseSquish
	eL ()Z isDealsDamage
	eM ()F getAttackDamage
	eN ()Lnet/minecraft/server/SoundEffect; getSquishSound
	eO ()Lnet/minecraft/server/SoundEffect; getJumpSound
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
net/minecraft/server/DataConverterEntityCodSalmon net/minecraft/util/datafix/fixes/EntityCodSalmonFix
	a RENAMED_IDS
	b RENAMED_EGG_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
dwf$a net/minecraft/client/model/geom/ModelPart$Cube
	a minX
	b minY
	c minZ
	d maxX
	e maxY
	f maxZ
	g polygons
	a (Ldwf$a;)[Ldwf$b; access$000
brc$c net/minecraft/world/level/ClipContext$ShapeGetter
dwf$b net/minecraft/client/model/geom/ModelPart$Polygon
	a vertices
	b normal
dry$g$1 net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleList$1
	a val$this$0
	b val$gameRules
	c val$entries
	d this$1
	a (Lnet/minecraft/server/GameRules$GameRuleCategory;)Ljava/util/Map; lambda$addEntry$2
	a (Lnet/minecraft/server/GameRules$GameRuleKey;Ldry$c;)V addEntry
	a (Lnet/minecraft/server/IChatBaseComponent;Ljava/util/List;Ljava/lang/String;Lnet/minecraft/server/GameRules$GameRuleBoolean;)Ldry$f; lambda$visitBoolean$0
	a (Lnet/minecraft/server/IChatBaseComponent;Ljava/util/List;Ljava/lang/String;Lnet/minecraft/server/GameRules$GameRuleInt;)Ldry$f; lambda$visitInteger$1
	b (Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleDefinition;)V visitBoolean
	c (Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleDefinition;)V visitInteger
net/minecraft/server/DataConverterFlatten net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix
	a MAP
	b IDS
	c DAMAGE_IDS
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$static$1
	a (Ljava/lang/String;I)Ljava/lang/String; updateItem
	a (Ljava/util/HashMap;)V lambda$static$0
dwf$c net/minecraft/client/model/geom/ModelPart$Vertex
	a pos
	b u
	c v
	a (FF)Ldwf$c; remap
net/minecraft/server/EntitySpider$PathfinderGoalSpiderNearestAttackableTarget net/minecraft/world/entity/monster/Spider$SpiderTargetGoal
	a ()Z canUse
net/minecraft/server/EntityRabbit$PathfinderGoalRabbitPanic net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal
	g rabbit
	e ()V tick
net/minecraft/server/DataConverterBlockName net/minecraft/util/datafix/fixes/BlockNameFlatteningFix
	a (Lcom/mojang/datafixers/util/Either;)Ljava/lang/String; lambda$null$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$2
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$3
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
net/minecraft/server/BlockTall net/minecraft/world/level/block/CrossCollisionBlock
	e WATERLOGGED
	f PROPERTY_BY_DIRECTION
	g collisionShapeByIndex
	h shapeByIndex
	i stateToIndex
	a (FFFFF)[Lnet/minecraft/server/VoxelShape; makeShapes
	a (Ljava/util/Map$Entry;)Z lambda$static$0
	a (Lnet/minecraft/server/EnumDirection;)I indexFor
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	g (Lnet/minecraft/server/IBlockData;)I getAABBIndex
	h (Lnet/minecraft/server/IBlockData;)I lambda$getAABBIndex$1
enf$a net/minecraft/client/sounds/ChannelAccess$ChannelHandle
	a this$0
	b channel
	c stopped
	a ()Z isStopped
	a (Lenf$a;)Lddr; access$200
	a (Ljava/util/function/Consumer;)V execute
	b ()V release
	b (Ljava/util/function/Consumer;)V lambda$execute$0
net/minecraft/server/PacketPlayOutUpdateHealth net/minecraft/network/protocol/game/ClientboundSetHealthPacket
	a health
	b food
	c saturation
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()F getHealth
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getFood
	d ()F getSaturation
net/minecraft/server/BehaviorNearestVillage net/minecraft/world/entity/ai/behavior/GoToClosestVillage
	b speedModifier
	c closeEnoughDistance
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)D lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
net/minecraft/server/BlockBase$EnumRandomOffset net/minecraft/world/level/block/state/BlockBehaviour$OffsetType
	d $VALUES
net/minecraft/server/ReloadableProfiled net/minecraft/server/packs/resources/ProfiledReloadInstance
	d LOGGER
	e total
	a (Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V lambda$null$4
	a (Ljava/util/List;)V finish
	a (Ljava/util/concurrent/Executor;Laca$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/IReloadListener;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; lambda$new$7
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V lambda$null$5
	a (Lnet/minecraft/server/IReloadListener;Lnet/minecraft/server/MethodProfiler;Lnet/minecraft/server/MethodProfiler;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Void;)Lacb$a; lambda$null$6
	b (Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V lambda$null$2
	b (Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V lambda$null$3
	f ()I lambda$null$1
	g ()I lambda$null$0
daf$c net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
daf$a net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder
	a conditions
	a (Ldbl$a;)Ldaf$a; when
	b (Ldbl$a;)Ljava/lang/Object; when
	c ()Ljava/lang/Object; unwrap
	d ()Ldaf$a; getThis
	f ()Ldaf$a; unwrap
	g ()[Lnet/minecraft/server/LootItemCondition; getConditions
daf$b net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder
	a constructor
	a ()Ldaf$b; getThis
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Ldaf$a; getThis
net/minecraft/server/EnumResourcePackType net/minecraft/server/packs/PackType
	c directory
	d $VALUES
	a ()Ljava/lang/String; getDirectory
net/minecraft/server/PropertyManager$EditableProperty net/minecraft/server/dedicated/Settings$MutableValue
	a this$0
	b key
	c value
	d serializer
	set (Lnet/minecraft/server/IRegistryCustom;Ljava/lang/Object;)Lnet/minecraft/server/PropertyManager; update
net/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool
	a DIRECT_CODEC
	b CODEC
	c LOGGER
	d name
	e rawTemplates
	f templates
	g fallback
	h maxSize
	a ()Lnet/minecraft/server/MinecraftKey; getFallback
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure; getRandomTemplate
	a (Lnet/minecraft/server/DefinedStructureManager;)I getMaxSize
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure;)I lambda$getMaxSize$2
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate;)Ljava/util/List; lambda$null$0
	b ()Lnet/minecraft/server/MinecraftKey; getName
	b (Ljava/util/Random;)Ljava/util/List; getShuffledTemplates
	c ()I size
net/minecraft/server/WorldChunkManager net/minecraft/world/level/biome/BiomeSource
	a CODEC
	b supportedStructures
	c surfaceBlocks
	d possibleBiomes
	a ()Lcom/mojang/serialization/Codec; codec
	a (IIII)Ljava/util/Set; getBiomesWithin
	a (IIIIILjava/util/function/Predicate;Ljava/util/Random;Z)Lnet/minecraft/server/BlockPosition; findBiomeHorizontal
	a (IIIILjava/util/function/Predicate;Ljava/util/Random;)Lnet/minecraft/server/BlockPosition; findBiomeHorizontal
	a (J)Lnet/minecraft/server/WorldChunkManager; withSeed
	a (Lnet/minecraft/server/StructureGenerator;)Z canGenerateStructure
	a (Lnet/minecraft/server/StructureGenerator;Lnet/minecraft/server/BiomeBase;)Z lambda$null$0
	b ()Ljava/util/List; possibleBiomes
	b (Lnet/minecraft/server/StructureGenerator;)Ljava/lang/Boolean; lambda$canGenerateStructure$1
	c ()Ljava/util/Set; getSurfaceBlocks
dww$a net/minecraft/client/particle/AshParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/WorldGenEndCityPieces$Piece net/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece
	d templateName
	e rotation
	f overwrite
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/DefinedStructureManager;)V loadTemplate
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/PacketCompressor net/minecraft/network/CompressionEncoder
	a encodeBuf
	b deflater
	c threshold
	a ()I getThreshold
	a (I)V setThreshold
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/server/WorldDataMutable net/minecraft/world/level/storage/WritableLevelData
	a (F)V setSpawnAngle
	b (I)V setXSpawn
	c (I)V setYSpawn
	d (I)V setZSpawn
net/minecraft/server/BlockSoil net/minecraft/world/level/block/FarmBlock
	b SHAPE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isUnderCrops
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isNearWater
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;F)V fallOn
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c_ (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
	fade (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V turnToDirt
net/minecraft/server/TileEntityHopper net/minecraft/world/level/block/entity/HopperBlockEntity
	j cooldownTime
	k tickedGameTime
	A ()D getLevelZ
	B ()Ljava/lang/Boolean; lambda$tick$0
	Z_ ()I getContainerSize
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Ljava/util/function/Supplier;)Z tryMoveItems
	a (Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/IHopper;)Z suckInItems
	a (Lnet/minecraft/server/IHopper;Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/stream/Stream; lambda$getItemsAtAndAbove$4
	a (Lnet/minecraft/server/IHopper;Lnet/minecraft/server/IInventory;ILnet/minecraft/server/EnumDirection;)Z tryTakeInItemFromSlot
	a (Lnet/minecraft/server/IHopper;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/EnumDirection;I)Z lambda$suckInItems$3
	a (Lnet/minecraft/server/IInventory;I)Z lambda$isEmptyContainer$2
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/EntityItem;)Z addItem
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/EnumDirection;)Ljava/util/stream/IntStream; getSlots
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/ItemStack;ILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/ItemStack; tryMoveInItem
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/ItemStack;ILnet/minecraft/server/EnumDirection;)Z canPlaceItemInContainer
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z canMergeItems
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/NonNullList;)V setItems
	a (Lnet/minecraft/server/World;DDD)Lnet/minecraft/server/IInventory; getContainerAt
	aj_ ()V tick
	b (Lnet/minecraft/server/Entity;)Ljava/lang/Boolean; lambda$entityInside$5
	b (Lnet/minecraft/server/IHopper;)Lnet/minecraft/server/IInventory; getSourceContainer
	b (Lnet/minecraft/server/IInventory;I)Z lambda$isFullContainer$1
	b (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/EnumDirection;)Z isFullContainer
	b (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/ItemStack;ILnet/minecraft/server/EnumDirection;)Z canTakeItemFromContainer
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IInventory; getContainerAt
	c (Lnet/minecraft/server/IHopper;)Ljava/util/List; getItemsAtAndAbove
	c (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/EnumDirection;)Z isEmptyContainer
	f ()Lnet/minecraft/server/NonNullList; getItems
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	j ()Z inventoryFull
	k ()Z ejectItems
	l ()Lnet/minecraft/server/IInventory; getAttachedContainer
	m ()Z isOnCooldown
	x ()D getLevelX
	y ()Z isOnCustomCooldown
	z ()D getLevelY
net/minecraft/server/CommandSeed net/minecraft/server/commands/SeedCommand
	a (JLnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; lambda$null$1
	a (Lcom/mojang/brigadier/CommandDispatcher;Z)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (ZLnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
net/minecraft/server/DataConverterDye net/minecraft/util/datafix/fixes/DyeItemRenameFix
	a RENAMED_IDS
net/minecraft/server/DataConverterCustomNameEntity net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTagCustomName
net/minecraft/server/BlockPropertyJigsawOrientation net/minecraft/core/FrontAndTop
	m LOOKUP_TOP_FRONT
	n name
	o top
	p front
	q $VALUES
	a ()Ljava/lang/String; getSerializedName
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPropertyJigsawOrientation; fromFrontAndTop
	b ()Lnet/minecraft/server/EnumDirection; front
	b (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)I lookupKey
	c ()Lnet/minecraft/server/EnumDirection; top
djq$1 net/minecraft/client/GraphicsStatus$1
	a $SwitchMap$net$minecraft$client$GraphicsStatus
net/minecraft/server/BehaviorWorkComposter net/minecraft/world/entity/ai/behavior/WorkAtComposter
	b COMPOSTABLE_ITEMS
	a (Lnet/minecraft/server/EntityVillager;)V makeBread
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)V useWorkstation
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/GlobalPos;Lnet/minecraft/server/IBlockData;)V compostItems
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V spawnComposterFillEffects
net/minecraft/server/BehaviorWalkAwayBlock net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory
	b memoryType
	c speedModifier
	d closeEnoughDist
	e tooFarDistance
	f tooLongUnreachableDuration
	a (Lnet/minecraft/server/EntityVillager;J)V dropPOI
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/GlobalPos;)Z tooFar
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z tiredOfTryingToFindTarget
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;JLnet/minecraft/server/BehaviorController;Lnet/minecraft/server/GlobalPos;)V lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/GlobalPos;)Z closeEnough
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/GlobalPos;)Z wrongDimension
net/minecraft/server/PacketPlayInItemName net/minecraft/network/protocol/game/ServerboundRenameItemPacket
	a name
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Ljava/lang/String; getName
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
mf$1 net/minecraft/nbt/EndTag$1
	a ()Ljava/lang/String; getName
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagEnd; load
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; load
	c ()Z isValue
net/minecraft/server/WorldGenDecoratorHeightAverageConfiguration net/minecraft/world/level/levelgen/placement/DepthAverageConfigation
	a CODEC
	c baseline
	d spread
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/WorldGenDecoratorHeightAverageConfiguration;)Ljava/lang/Integer; lambda$null$1
	b (Lnet/minecraft/server/WorldGenDecoratorHeightAverageConfiguration;)Ljava/lang/Integer; lambda$null$0
net/minecraft/server/FeatureSize net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize
	a CODEC
	b minClippedHeight
	a ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; minClippedHeightCodec
	a (II)I getSizeAtHeight
	a (Ljava/util/Optional;)Ljava/util/OptionalInt; lambda$minClippedHeightCodec$0
	a (Ljava/util/OptionalInt;)Ljava/util/Optional; lambda$minClippedHeightCodec$1
	a (Lnet/minecraft/server/FeatureSize;)Ljava/util/OptionalInt; lambda$minClippedHeightCodec$2
	b ()Lnet/minecraft/server/FeatureSizeType; type
	c ()Ljava/util/OptionalInt; minClippedHeight
net/minecraft/server/EntityMushroomCow net/minecraft/world/entity/animal/MushroomCow
	bo DATA_TYPE
	bp effect
	bq effectDuration
	br lastLightningBoltUUID
	K_ ()Z readyForShearing
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/EntityMushroomCow;)Lnet/minecraft/server/EntityMushroomCow$Type; getOffspringType
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$mobInteract$0
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/SoundCategory;)V shear
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLightning;)V thunderHit
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityCow; getBreedOffspring
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkMushroomSpawnRules
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityMushroomCow; getBreedOffspring
	e ()V defineSynchedData
	getVariant ()Lnet/minecraft/server/EntityMushroomCow$Type; getMushroomType
	l (Lnet/minecraft/server/ItemStack;)Ljava/util/Optional; getEffectFromItemStack
	setVariant (Lnet/minecraft/server/EntityMushroomCow$Type;)V setMushroomType
net/minecraft/server/WorldGenSurfaceNetherAbstract net/minecraft/world/level/levelgen/surfacebuilders/NetherCappedSurfaceBuilder
	a seed
	b floorNoises
	c ceilingNoises
	d patchNoise
	a ()Lcom/google/common/collect/ImmutableList; getFloorBlockStates
	a (IIILjava/util/Map$Entry;)Ljava/lang/Double; lambda$apply$1
	a (J)V initNoise
	a (Lcom/google/common/collect/ImmutableList;J)Lcom/google/common/collect/ImmutableMap; initPerlinNoises
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
	b ()Lcom/google/common/collect/ImmutableList; getCeilingBlockStates
	b (IIILjava/util/Map$Entry;)Ljava/lang/Double; lambda$apply$0
	c ()Lnet/minecraft/server/IBlockData; getPatchBlockState
net/minecraft/server/PlayerListBox net/minecraft/server/gui/PlayerListComponent
	a server
	b tickCount
net/minecraft/server/EntityIllagerAbstract net/minecraft/world/entity/monster/AbstractIllager
	dB ()Lnet/minecraft/server/EnumMonsterType; getMobType
	m ()Lbcv$a; getArmPose
	o ()V registerGoals
net/minecraft/server/EntityVillager net/minecraft/world/entity/npc/Villager
	bA lastGossipDecayTime
	bB villagerXp
	bC lastRestockGameTime
	bD numberOfRestocksToday
	bE lastRestockCheckDayTime
	bF assignProfessionWhenSpawned
	bG MEMORY_TYPES
	bH SENSOR_TYPES
	bp FOOD_POINTS
	bq POI_MEMORIES
	br DATA_VILLAGER_DATA
	bs WANTED_ITEMS
	bt updateMerchantTimer
	bu increaseProfessionLevelOnUpdate
	bv lastTradedPlayer
	bw chasing
	bx foodLevel
	by gossips
	bz lastGossipTime
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	M ()V sendDebugPackets
	N ()V customServerAiStep
	a (B)V handleEntityEvent
	a (J)Z wantsToSpawnGolem
	a (JLnet/minecraft/server/EntityVillager;)Z lambda$spawnGolemIfNeeded$10
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/server/BehaviorController; makeBrain
	a (Lnet/minecraft/server/BehaviorController;)V registerBrainGoals
	a (Lnet/minecraft/server/BlockPosition;DD)Lnet/minecraft/server/BlockPosition; findSpawnPositionForGolemInColumn
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/Entity;)V tellWitnessesThatIWasMurdered
	a (Lnet/minecraft/server/EntityLiving;)V setLastHurtByMob
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/VillagePlaceType;)Z lambda$static$3
	a (Lnet/minecraft/server/InventorySubcontainer;Ljava/util/Map$Entry;)I lambda$countFoodPointsInInventory$9
	a (Lnet/minecraft/server/MemoryModuleType;)V releasePoi
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/MemoryModuleType;Lnet/minecraft/server/GlobalPos;)V lambda$releasePoi$7
	a (Lnet/minecraft/server/NBTBase;)V setGossips
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTBase;)V lambda$addAdditionalSaveData$4
	a (Lnet/minecraft/server/ReputationEvent;Lnet/minecraft/server/Entity;)V onReputationEventFrom
	a (Lnet/minecraft/server/ReputationType;)Z lambda$getPlayerReputation$8
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/WorldServer;JI)V spawnGolemIfNeeded
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Entity;Lnet/minecraft/server/EntityLiving;)V lambda$tellWitnessesThatIWasMurdered$6
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V gossip
	b (J)Z golemSpawnConditionsMet
	b (Lnet/minecraft/server/BlockPosition;)V startSleeping
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/EntityItem;)V pickUpItem
	b (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/VillagePlaceType;)Z lambda$static$2
	b (Lnet/minecraft/server/MerchantRecipe;)V rewardTradeXp
	b (Lnet/minecraft/server/MerchantRecipeList;)V setOffers
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityVillager; getBreedOffspring
	bI ()Lnet/minecraft/server/IChatBaseComponent; getTypeName
	c (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/VillagePlaceType;)Z lambda$static$1
	c (Lnet/minecraft/server/WorldServer;)V refreshBrain
	cI ()Lnet/minecraft/server/BehaviorController; getBrain
	cJ ()Larc$b; brainProvider
	canPlant ()Z hasFarmSeeds
	d (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/VillagePlaceType;)Z lambda$static$0
	d (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/EntityIronGolem; trySpawnGolem
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eL ()I getVillagerXp
	eT ()V stopTrading
	eW ()V updateTrades
	eX ()Lnet/minecraft/server/VillagerData; getVillagerData
	eY ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eZ ()Z assignProfessionWhenSpawned
	em ()V stopSleeping
	f ()Z canBreed
	f (Lnet/minecraft/server/EntityHuman;)V setTradingPlayer
	fa ()Z canRestock
	fb ()V restock
	fc ()Z shouldRestock
	fd ()V playWorkSound
	fe ()Z isChasing
	ff ()V eatAndDigestFood
	fg ()Z hasExcessFood
	fh ()Z wantsMoreFood
	fj ()Lnet/minecraft/server/Reputation; getGossips
	fk ()V setUnhappy
	fl ()V resetSpecialPrices
	fm ()Z needsToRestock
	fn ()Z allowedToRestock
	fo ()V catchUpDemand
	fp ()V updateDemand
	fq ()V releaseAllPois
	fr ()Z hungry
	fs ()V eatUntilFull
	ft ()Z shouldIncreaseLevel
	fv ()I countFoodPointsInInventory
	fw ()V maybeDecayGossip
	fx ()V resetNumberOfRestocks
	g (Lnet/minecraft/server/EntityHuman;)I getPlayerReputation
	h (D)Z removeWhenFarAway
	h (Lnet/minecraft/server/EntityHuman;)V startTrading
	i (Lnet/minecraft/server/EntityHuman;)V updateSpecialPrices
	i (Lnet/minecraft/server/EntityLiving;)Z lambda$tellWitnessesThatIWasMurdered$5
	i (Lnet/minecraft/server/ItemStack;)Z wantsToPickUp
	j ()V tick
	m ()V ageBoundaryReached
	populateTrades ()V increaseMerchantCareer
	setExperience (I)V setVillagerXp
	u (Z)V setChasing
	v (I)V digestFood
dej$1 com/mojang/blaze3d/platform/GlStateManager$1
	a $SwitchMap$com$mojang$blaze3d$platform$GlStateManager$FboMode
	b $SwitchMap$com$mojang$blaze3d$platform$GlStateManager$FboBlitMode
	c $SwitchMap$com$mojang$blaze3d$platform$GlStateManager$TexGen
net/minecraft/server/PacketPlayOutSetCooldown net/minecraft/network/protocol/game/ClientboundCooldownPacket
	a item
	b duration
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/Item; getItem
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getDuration
net/minecraft/server/GenLayerRiverMix net/minecraft/world/level/newbiome/layer/RiverMixerLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;II)I applyPixel
net/minecraft/server/ItemSoup net/minecraft/world/item/BowlFoodItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
net/minecraft/server/PacketPlayOutOpenSignEditor net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket
	a pos
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/IJumpable net/minecraft/world/entity/PlayerRideableJumping
	P_ ()Z canJump
	Q_ ()F getJumpRidingScale
	a_ (F)V setJumpRidingScale
	b (I)V handleStartJump
	b_ (I)V onPlayerJump
	c ()V handleStopJump
ecf$a net/minecraft/client/renderer/blockentity/SignRenderer$SignModel
	a sign
	b stick
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
net/minecraft/server/WorldLoadListenerFactory net/minecraft/server/level/progress/ChunkProgressListenerFactory
net/minecraft/server/TileEntityTypes net/minecraft/world/level/block/entity/BlockEntityType
	H LOGGER
	I factory
	J validBlocks
	K dataType
	a ()Lnet/minecraft/server/TileEntity; create
	a (Ljava/lang/String;Lcch$a;)Lnet/minecraft/server/TileEntityTypes; register
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	a (Lnet/minecraft/server/TileEntityTypes;)Lnet/minecraft/server/MinecraftKey; getKey
	isValidBlock (Lnet/minecraft/server/Block;)Z isValid
net/minecraft/server/DataFixTypes net/minecraft/util/datafix/DataFixTypes
	l type
	m $VALUES
	a ()Lcom/mojang/datafixers/DSL$TypeReference; getType
bw$a net/minecraft/advancements/critereon/LocationPredicate$Builder
	a x
	b y
	c z
	d biome
	e feature
	f dimension
	g smokey
	h light
	i block
	j fluid
	a ()Lbw$a; location
	a (Ljava/lang/Boolean;)Lbw$a; setSmokey
	a (Lnet/minecraft/server/CriterionConditionBlock;)Lbw$a; setBlock
	a (Lnet/minecraft/server/CriterionConditionFluid;)Lbw$a; setFluid
	a (Lnet/minecraft/server/CriterionConditionLight;)Lbw$a; setLight
	a (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lbw$a; setX
	a (Lnet/minecraft/server/ResourceKey;)Lbw$a; setBiome
	a (Lnet/minecraft/server/StructureGenerator;)Lbw$a; setFeature
	b ()Lnet/minecraft/server/CriterionConditionLocation; build
	b (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lbw$a; setY
	b (Lnet/minecraft/server/ResourceKey;)Lbw$a; setDimension
	c (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lbw$a; setZ
net/minecraft/server/BlockPistonExtension net/minecraft/world/level/block/piston/PistonHeadBlock
	d EAST_AABB
	e WEST_AABB
	f SOUTH_AABB
	g NORTH_AABB
	h UP_AABB
	i DOWN_AABB
	j UP_ARM_AABB
	k DOWN_ARM_AABB
	o SOUTH_ARM_AABB
	p NORTH_ARM_AABB
	q EAST_ARM_AABB
	r WEST_ARM_AABB
	s SHORT_UP_ARM_AABB
	t SHORT_DOWN_ARM_AABB
	u SHORT_SOUTH_ARM_AABB
	v SHORT_NORTH_ARM_AABB
	w SHORT_EAST_ARM_AABB
	x SHORT_WEST_ARM_AABB
	y SHAPES_SHORT
	z SHAPES_LONG
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/EnumDirection;Z)Lnet/minecraft/server/VoxelShape; calculateShape
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)Z isFittingBase
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Z)[Lnet/minecraft/server/VoxelShape; makeShapes
	a (ZLnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/VoxelShape; lambda$makeShapes$0
	b (I)[Lnet/minecraft/server/VoxelShape; lambda$makeShapes$1
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c_ (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/server/PathfinderGoalTarget net/minecraft/world/entity/ai/goal/target/TargetGoal
	a mustReach
	b reachCache
	c reachCacheTime
	d unseenTicks
	e mob
	f mustSee
	g targetMob
	h unseenMemoryTicks
	a (I)Lnet/minecraft/server/PathfinderGoalTarget; setUnseenMemoryTicks
	a (Lnet/minecraft/server/EntityLiving;)Z canReach
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/PathfinderTargetCondition;)Z canAttack
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	k ()D getFollowDistance
net/minecraft/server/DataConverterVillagerFollowRange net/minecraft/util/datafix/fixes/VillagerFollowRangeFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixValue
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixValue$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
chc$1 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$1
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EnderDragonBattle;Ljava/util/List;ILnet/minecraft/server/BlockPosition;)V tick
chc$5 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$5
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EnderDragonBattle;Ljava/util/List;ILnet/minecraft/server/BlockPosition;)V tick
net/minecraft/server/WorldUpgraderIterator net/minecraft/world/level/storage/McRegionUpgrader
	a LOGGER
	a (Ljava/io/File;Ljava/lang/String;)Z lambda$addRegionFiles$0
	a (Ljava/io/File;Ljava/util/Collection;)V addRegionFiles
	a (Lnet/minecraft/server/Convertable$ConversionSession;)V makeMcrLevelDatBackup
	a (Lnet/minecraft/server/Convertable$ConversionSession;Lnet/minecraft/server/IProgressUpdate;)Z convertLevel
	a (Lnet/minecraft/server/IRegistryCustom$Dimension;Ljava/io/File;Ljava/io/File;Lnet/minecraft/server/WorldChunkManager;IILnet/minecraft/server/IProgressUpdate;)V convertRegion
	a (Lnet/minecraft/server/IRegistryCustom$Dimension;Ljava/io/File;Ljava/lang/Iterable;Lnet/minecraft/server/WorldChunkManager;IILnet/minecraft/server/IProgressUpdate;)V convertRegions
chc$4 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$4
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EnderDragonBattle;Ljava/util/List;ILnet/minecraft/server/BlockPosition;)V tick
net/minecraft/server/IBeaconBeam net/minecraft/world/level/block/BeaconBeamBlock
	a ()Lnet/minecraft/server/EnumColor; getColor
chc$3 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$3
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EnderDragonBattle;Ljava/util/List;ILnet/minecraft/server/BlockPosition;)V tick
net/minecraft/server/WorldGenSurfaceMesaBryce net/minecraft/world/level/levelgen/surfacebuilders/ErodedBadlandsSurfaceBuilder
	K WHITE_TERRACOTTA
	L ORANGE_TERRACOTTA
	M TERRACOTTA
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
chc$2 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$2
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EnderDragonBattle;Ljava/util/List;ILnet/minecraft/server/BlockPosition;)V tick
net/minecraft/server/ArgumentSerializerFloat net/minecraft/commands/synchronization/brigadier/FloatArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lcom/mojang/brigadier/arguments/FloatArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/FloatArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/FloatArgumentType; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
net/minecraft/server/BlockRedstoneLamp net/minecraft/world/level/block/RedstoneLampBlock
	a LIT
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
ecm$c$b net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask
	d region
	e this$1
	a ()V cancel
	a (FFFLecm$b;Ldzl;)Ljava/util/Set; compile
	a (Ldzl;)Ljava/util/concurrent/CompletableFuture; doTask
	a (Lecm$b;Ljava/util/List;Ljava/lang/Throwable;)Lecm$a; lambda$doTask$1
	a (Lecm$b;Ljava/util/Set;Lnet/minecraft/server/TileEntity;)V handleBlockEntity
	a (Ljava/util/List;Ldzl;Leag;)V lambda$doTask$0
net/minecraft/server/PacketPlayOutTags net/minecraft/network/protocol/game/ClientboundUpdateTagsPacket
	a tags
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/ITagRegistry; getTags
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
ecm$c$c net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ResortTransparencyTask
	d this$1
	e compiledChunk
	a ()V cancel
	a (Ldzl;)Ljava/util/concurrent/CompletableFuture; doTask
	a (Lecm$a;Ljava/lang/Throwable;)Lecm$a; lambda$doTask$1
	a (Ljava/lang/Void;)Lecm$a; lambda$doTask$0
net/minecraft/server/BlockCrops net/minecraft/world/level/block/CropBlock
	a SHAPE_BY_AGE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getGrowthSpeed
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/World;)I getBonemealAgeIncrease
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V growCrops
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	a_ (Lnet/minecraft/server/IBlockData;)Z isRandomlyTicking
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c ()Lnet/minecraft/server/BlockStateInteger; getAgeProperty
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	d ()I getMaxAge
	e ()Lnet/minecraft/server/IMaterial; getBaseSeedId
	g (Lnet/minecraft/server/IBlockData;)I getAge
	isRipe (Lnet/minecraft/server/IBlockData;)Z isMaxAge
	setAge (I)Lnet/minecraft/server/IBlockData; getStateForAge
ecm$c$a net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask
	a distAtCreation
	b isCancelled
	c this$1
	a ()V cancel
	a (Ldzl;)Ljava/util/concurrent/CompletableFuture; doTask
	a (Lecm$c$a;)I compareTo
at$a net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance
	a item
	a (Lnet/minecraft/server/CriterionConditionItem;)Lat$a; usedItem
	a (Lnet/minecraft/server/IMaterial;)Lat$a; usedItem
	a (Lnet/minecraft/server/ItemStack;)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	c ()Lat$a; usedItem
net/minecraft/server/BlockChestTrapped net/minecraft/world/level/block/TrappedChestBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b_ (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	c ()Lnet/minecraft/server/Statistic; getOpenChestStat
	e ()Lnet/minecraft/server/TileEntityTypes; lambda$new$0
cym$a net/minecraft/world/level/storage/loot/BinomialDistributionGenerator$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootValueBinomial; deserialize
	a (Lnet/minecraft/server/LootValueBinomial;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
bpq$9 net/minecraft/world/item/enchantment/EnchantmentCategory$4
	a (Lnet/minecraft/server/Item;)Z canEnchant
net/minecraft/server/GameTestHarnessLogger net/minecraft/gametest/framework/LogTestReporter
	a LOGGER
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V onTestFailed
	b (Lnet/minecraft/server/GameTestHarnessInfo;)V onTestSuccess
net/minecraft/server/ItemSaddle net/minecraft/world/item/SaddleItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interactLivingEntity
net/minecraft/server/ExceptionSuppressor net/minecraft/util/ExceptionCollector
	a result
	a ()V throwIfPresent
	a (Ljava/lang/Throwable;)V add
bpq$2 net/minecraft/world/item/enchantment/EnchantmentCategory$10
	a (Lnet/minecraft/server/Item;)Z canEnchant
bpq$1 net/minecraft/world/item/enchantment/EnchantmentCategory$1
	a (Lnet/minecraft/server/Item;)Z canEnchant
net/minecraft/server/DataPackResources net/minecraft/server/ServerResources
	a DATA_RELOAD_INITIAL_TASK
	b resources
	commandDispatcher commands
	d recipes
	e tagManager
	f predicateManager
	g lootTables
	h advancements
	i functionLibrary
	a ()Lnet/minecraft/server/CustomFunctionManager; getFunctionLibrary
	a (Ljava/util/List;Lnet/minecraft/server/CommandDispatcher$ServerType;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; loadResources
	a (Lnet/minecraft/server/DataPackResources;Lnet/minecraft/server/Unit;)Lnet/minecraft/server/DataPackResources; lambda$loadResources$1
	a (Lnet/minecraft/server/DataPackResources;Lnet/minecraft/server/Unit;Ljava/lang/Throwable;)V lambda$loadResources$0
	b ()Lnet/minecraft/server/LootPredicateManager; getPredicateManager
	c ()Lnet/minecraft/server/LootTableRegistry; getLootTables
	d ()Lnet/minecraft/server/ITagRegistry; getTags
	e ()Lnet/minecraft/server/CraftingManager; getRecipeManager
	f ()Lnet/minecraft/server/CommandDispatcher; getCommands
	g ()Lnet/minecraft/server/AdvancementDataWorld; getAdvancements
	h ()Lnet/minecraft/server/IResourceManager; getResourceManager
	i ()V updateGlobals
bpq$4 net/minecraft/world/item/enchantment/EnchantmentCategory$12
	a (Lnet/minecraft/server/Item;)Z canEnchant
bpq$3 net/minecraft/world/item/enchantment/EnchantmentCategory$11
	a (Lnet/minecraft/server/Item;)Z canEnchant
bpq$6 net/minecraft/world/item/enchantment/EnchantmentCategory$14
	a (Lnet/minecraft/server/Item;)Z canEnchant
net/minecraft/server/BehaviorStartAdmiringItem net/minecraft/world/entity/monster/piglin/StartAdmiringItemIfSeen
	b admireDuration
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityPiglin;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityPiglin;J)V start
bpq$5 net/minecraft/world/item/enchantment/EnchantmentCategory$13
	a (Lnet/minecraft/server/Item;)Z canEnchant
bpq$8 net/minecraft/world/item/enchantment/EnchantmentCategory$3
	a (Lnet/minecraft/server/Item;)Z canEnchant
net/minecraft/server/EntityThrownExpBottle net/minecraft/world/entity/projectile/ThrownExperienceBottle
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	h ()Lnet/minecraft/server/Item; getDefaultItem
	k ()F getGravity
bpq$7 net/minecraft/world/item/enchantment/EnchantmentCategory$2
	a (Lnet/minecraft/server/Item;)Z canEnchant
bf$a net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance
	a damage
	a (Lav$a;)Lbf$a; entityHurtPlayer
	a (Lnet/minecraft/server/CriterionConditionDamage;)Lbf$a; entityHurtPlayer
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DamageSource;FFZ)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	c ()Lbf$a; entityHurtPlayer
net/minecraft/server/BlockComposter$ContainerEmpty net/minecraft/world/level/block/ComposterBlock$EmptyContainer
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
net/minecraft/server/ICombinedAccess net/minecraft/world/level/CommonLevelAccessor
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/VoxelShape;)Z isUnobstructed
	a (Lnet/minecraft/server/HeightMap$Type;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; getHeightmapPos
	c (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; getEntityCollisions
	i (Lnet/minecraft/server/BlockPosition;)Ljava/util/Optional; getBiomeName
	r ()Lnet/minecraft/server/IRegistryCustom; registryAccess
net/minecraft/server/PathfinderGoalCatSitOnBed net/minecraft/world/entity/ai/goal/CatLieOnBedGoal
	g cat
	a ()Z canUse
	a (Lnet/minecraft/server/EntityCreature;)I nextStartTick
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/DefinedStructureTestBlock net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest
	a CODEC
	b block
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/server/DefinedStructureTestBlock;)Lnet/minecraft/server/Block; lambda$static$0
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
net/minecraft/server/ChunkConverterPalette$Direction$AxisDirection net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection
	c step
	d $VALUES
	a ()I getStep
net/minecraft/server/CriterionTriggerChanneledLightning net/minecraft/advancements/critereon/ChanneledLightningTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lar$a; createInstance
	a (Ljava/util/List;Lar$a;)Z lambda$trigger$1
	a (Lnet/minecraft/server/EntityPlayer;Ljava/util/Collection;)V trigger
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/LootTableInfo; lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/CriterionTriggerPlayerGeneratesContainerLoot net/minecraft/advancements/critereon/LootTableTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lby$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/MinecraftKey;)V trigger
	a (Lnet/minecraft/server/MinecraftKey;Lby$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/CommandAdvancement net/minecraft/server/commands/AdvancementCommands
	a SUGGEST_ADVANCEMENTS
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$10
	a (Lnet/minecraft/server/Advancement;Ljava/util/List;)V addChildren
	a (Lnet/minecraft/server/Advancement;Lnet/minecraft/server/CommandAdvancement$Filter;)Ljava/util/List; getAdvancements
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/CommandAdvancement$Action;Ljava/util/Collection;)I perform
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/CommandAdvancement$Action;Lnet/minecraft/server/Advancement;Ljava/lang/String;)I performCriterion
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$3
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	c (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
net/minecraft/server/DataConverterLeavesBiome net/minecraft/util/datafix/fixes/ChunkBiomeFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
net/minecraft/server/MobEffect net/minecraft/world/effect/MobEffectInstance
	a LOGGER
	amplification amplifier
	b effect
	g noCounter
	showParticles visible
	a (Lnet/minecraft/server/EntityLiving;)V applyEffect
	a (Lnet/minecraft/server/MobEffect;)V setDetailsFrom
	a (Lnet/minecraft/server/MobEffectList;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/MobEffect; loadSpecifiedEffect
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Z)V setSplash
	b (Lnet/minecraft/server/MobEffect;)Z update
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/MobEffect; load
	b (Z)V setNoCounter
	c (Lnet/minecraft/server/MobEffect;)I compareTo
	c (Lnet/minecraft/server/NBTTagCompound;)V writeDetailsTo
	g ()Ljava/lang/String; getDescriptionId
	getMobEffect ()Lnet/minecraft/server/MobEffectList; getEffect
	h ()Z isNoCounter
	i ()I tickDownDuration
	isShowIcon ()Z showIcon
	isShowParticles ()Z isVisible
net/minecraft/server/AttributeModifier$Operation net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation
	d OPERATIONS
	e value
	f $VALUES
	a ()I toValue
	a (I)Lnet/minecraft/server/AttributeModifier$Operation; fromValue
net/minecraft/server/ControllerMove$Operation net/minecraft/world/entity/ai/control/MoveControl$Operation
	e $VALUES
net/minecraft/server/PathfinderGoalStrollVillageGolem net/minecraft/world/entity/ai/goal/GolemRandomStrollInVillageGoal
	a (Lnet/minecraft/server/EntityVillager;)Z doesVillagerWantGolem
	a (Lnet/minecraft/server/SectionPosition;)Lnet/minecraft/server/BlockPosition; getRandomPoiWithinSection
	a (Lnet/minecraft/server/VillagePlaceType;)Z lambda$getRandomPoiWithinSection$1
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/SectionPosition;)Z lambda$getRandomVillageSection$0
	g ()Lnet/minecraft/server/Vec3D; getPosition
	j ()Lnet/minecraft/server/Vec3D; getPositionTowardsAnywhere
	k ()Lnet/minecraft/server/Vec3D; getPositionTowardsVillagerWhoWantsGolem
	l ()Lnet/minecraft/server/Vec3D; getPositionTowardsPoi
	m ()Lnet/minecraft/server/SectionPosition; getRandomVillageSection
eat$1 net/minecraft/client/renderer/block/model/BlockElement$1
	a $SwitchMap$net$minecraft$core$Direction
ebf$a net/minecraft/client/renderer/block/model/MultiVariant$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lebf; deserialize
agu$1 net/minecraft/util/datafix/fixes/BlockRenameFix$1
	a val$fixBlock
	a (Ljava/lang/String;)Ljava/lang/String; fixBlock
net/minecraft/server/DataConverterPOIRename net/minecraft/util/datafix/fixes/PoiTypeRename
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$4
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; cap
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic; lambda$renameRecords$8
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Ljava/lang/String;)Ljava/lang/String; rename
	b (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	b (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; renameRecords
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$7
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$6
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$cap$5
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$3
	g (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
net/minecraft/server/HorseColor net/minecraft/world/entity/animal/horse/Variant
	h BY_ID
	i id
	j $VALUES
	a ()I getId
	a (I)Lnet/minecraft/server/HorseColor; byId
	b (I)[Lnet/minecraft/server/HorseColor; lambda$static$0
net/minecraft/server/DataConverterOminousBannerBlockEntityRename net/minecraft/util/datafix/fixes/OminousBannerBlockEntityRenameFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/server/WorldGenNether net/minecraft/world/level/levelgen/feature/NetherFortressFeature
	u FORTRESS_ENEMIES
	a ()Lckx$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z isFeatureChunk
	c ()Ljava/util/List; getSpecialEnemies
lt$a net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer
	a level
	b tracker
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V testStructureLoaded
	b (Lnet/minecraft/server/GameTestHarnessInfo;)V testPassed
	c (Lnet/minecraft/server/GameTestHarnessInfo;)V testFailed
net/minecraft/server/Behavior net/minecraft/world/entity/ai/behavior/Behavior
	a entryCondition
	b status
	c endTimestamp
	d minDuration
	e maxDuration
	a ()Lnet/minecraft/server/Behavior$Status; getStatus
	a (J)Z timedOut
	a (Lnet/minecraft/server/EntityLiving;)Z hasRequiredMemories
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	e (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z tryStart
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tickOrStop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V doStop
eg$1 net/minecraft/commands/arguments/blocks/BlockPredicateArgument$1
net/minecraft/server/DataConverterSchemaV808 net/minecraft/util/datafix/schemas/V808
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/server/Sensor net/minecraft/world/entity/ai/sensing/Sensor
	a RANDOM
	b TARGET_CONDITIONS
	c TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	d scanRate
	e timeToTick
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z isEntityTargetable
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V tick
net/minecraft/server/ChunkStatus$Type net/minecraft/world/level/chunk/ChunkStatus$ChunkType
	c $VALUES
net/minecraft/server/EnumToolMaterial net/minecraft/world/item/Tiers
	g level
	h uses
	i speed
	j damage
	k enchantmentValue
	l repairIngredient
	m $VALUES
	a ()I getUses
	b ()F getSpeed
	c ()F getAttackDamageBonus
	d ()I getLevel
	e ()I getEnchantmentValue
	f ()Lnet/minecraft/server/RecipeItemStack; getRepairIngredient
	g ()Lnet/minecraft/server/RecipeItemStack; lambda$static$5
	h ()Lnet/minecraft/server/RecipeItemStack; lambda$static$4
	i ()Lnet/minecraft/server/RecipeItemStack; lambda$static$3
	j ()Lnet/minecraft/server/RecipeItemStack; lambda$static$2
	k ()Lnet/minecraft/server/RecipeItemStack; lambda$static$1
	l ()Lnet/minecraft/server/RecipeItemStack; lambda$static$0
czp$1 net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$1
	a this$0
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
aum$1 net/minecraft/world/entity/ai/behavior/WeightedList$1
dgb$b com/mojang/realmsclient/client/Request$Get
	e ()Ldgb; doConnect
	f ()Ldgb$b; doConnect
dgb$a com/mojang/realmsclient/client/Request$Delete
	e ()Ldgb; doConnect
	f ()Ldgb$a; doConnect
dgb$d com/mojang/realmsclient/client/Request$Put
	c content
	e ()Ldgb; doConnect
	f ()Ldgb$d; doConnect
dgb$c com/mojang/realmsclient/client/Request$Post
	c content
	e ()Ldgb; doConnect
	f ()Ldgb$c; doConnect
net/minecraft/server/BiomeSettingsMobs net/minecraft/world/level/biome/MobSpawnSettings
	a LOGGER
	b EMPTY
	c CODEC
	d creatureGenerationProbability
	e spawners
	f mobSpawnCosts
	g playerSpawnFriendly
	a ()F getCreatureProbability
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lnet/minecraft/server/BiomeSettingsMobs;)Ljava/util/Map; lambda$null$4
	a (Lnet/minecraft/server/EntityTypes;)Lbtd$b; getMobSpawnCost
	a (Lnet/minecraft/server/EnumCreatureType;)Ljava/util/List; getMobs
	b ()Z playerSpawnFriendly
	b (Lnet/minecraft/server/BiomeSettingsMobs;)Ljava/util/Map; lambda$null$3
	b (Lnet/minecraft/server/EnumCreatureType;)Ljava/util/List; lambda$static$1
	c (Lnet/minecraft/server/BiomeSettingsMobs;)Ljava/lang/Float; lambda$null$2
	c (Lnet/minecraft/server/EnumCreatureType;)Lnet/minecraft/server/EnumCreatureType; lambda$static$0
net/minecraft/server/AttributeModifier net/minecraft/world/entity/ai/attributes/AttributeModifier
	a LOGGER
	b amount
	c operation
	d nameGetter
	e id
	a (Ljava/lang/String;)Ljava/lang/String; lambda$new$1
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/AttributeModifier; load
	b (Ljava/lang/String;)Ljava/lang/String; lambda$new$0
	getUniqueId ()Ljava/util/UUID; getId
net/minecraft/server/WorldGenSurfaceConfiguration net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration
	a ()Lnet/minecraft/server/IBlockData; getTopMaterial
	b ()Lnet/minecraft/server/IBlockData; getUnderMaterial
	c ()Lnet/minecraft/server/IBlockData; getUnderwaterMaterial
bgf$1 net/minecraft/world/entity/projectile/FishingHook$1
	a $SwitchMap$net$minecraft$world$entity$projectile$FishingHook$OpenWaterType
net/minecraft/server/BlockUtil$IntBounds net/minecraft/BlockUtil$IntBounds
	a min
	b max
net/minecraft/server/EnumDirection$EnumDirectionLimit net/minecraft/core/Direction$Plane
	c faces
	d axis
	e $VALUES
	a ()Ljava/util/stream/Stream; stream
	a (Ljava/util/Random;)Lnet/minecraft/server/EnumDirection; getRandomDirection
	a (Lnet/minecraft/server/EnumDirection;)Z test
	b (Ljava/util/Random;)Lnet/minecraft/server/EnumDirection$EnumAxis; getRandomAxis
net/minecraft/server/GameRules$GameRuleBoolean net/minecraft/world/level/GameRules$BooleanValue
	b value
	a ()Z get
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	a (Ljava/lang/String;)V deserialize
	a (Lnet/minecraft/server/GameRules$GameRuleBoolean;Lnet/minecraft/server/MinecraftServer;)V setFrom
	a (Lnet/minecraft/server/GameRules$GameRuleValue;Lnet/minecraft/server/MinecraftServer;)V setFrom
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/GameRules$GameRuleBoolean;)V lambda$create$1
	a (Z)Lnet/minecraft/server/GameRules$GameRuleDefinition; access$000
	a (ZLjava/util/function/BiConsumer;)Lnet/minecraft/server/GameRules$GameRuleDefinition; access$200
	a (ZLnet/minecraft/server/GameRules$GameRuleDefinition;)Lnet/minecraft/server/GameRules$GameRuleBoolean; lambda$create$0
	a (ZLnet/minecraft/server/MinecraftServer;)V set
	b ()Ljava/lang/String; serialize
	b (Z)Lnet/minecraft/server/GameRules$GameRuleDefinition; create
	b (ZLjava/util/function/BiConsumer;)Lnet/minecraft/server/GameRules$GameRuleDefinition; create
	c ()I getCommandResult
	d ()Lnet/minecraft/server/GameRules$GameRuleBoolean; getSelf
	e ()Lnet/minecraft/server/GameRules$GameRuleBoolean; copy
	f ()Lnet/minecraft/server/GameRules$GameRuleValue; copy
	g ()Lnet/minecraft/server/GameRules$GameRuleValue; getSelf
net/minecraft/server/VoxelShapeBitSet net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape
	d storage
	e xMin
	f yMin
	g zMin
	h xMax
	i yMax
	j zMax
	a ()Z isEmpty
	a (III)I getIndex
	a (IIII)Z isZStripFull
	a (IIIIZ)V setZStrip
	a (IIIZZ)V setFull
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)I firstFull
	a (Lnet/minecraft/server/OperatorBoolean;Lnet/minecraft/server/VoxelShapeDiscrete;IILnet/minecraft/server/VoxelShapeDiscrete;IILnet/minecraft/server/VoxelShapeBitSet;II[I[ZIII)Z lambda$null$0
	a (Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/OperatorBoolean;)Lnet/minecraft/server/VoxelShapeBitSet; join
	a (Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/OperatorBoolean;Lnet/minecraft/server/VoxelShapeDiscrete;ILnet/minecraft/server/VoxelShapeDiscrete;ILnet/minecraft/server/VoxelShapeBitSet;I[I[ZIII)Z lambda$null$1
	a (Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/OperatorBoolean;Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/VoxelShapeBitSet;[IIII)Z lambda$join$2
	b (III)Z isFull
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)I lastFull
net/minecraft/server/PacketPlayInEntityAction net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket
	a id
	animation action
	c data
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketPlayInEntityAction$EnumPlayerAction; getAction
	d ()I getData
net/minecraft/server/ArgumentProfile net/minecraft/commands/arguments/GameProfileArgument
	a ERROR_UNKNOWN_PLAYER
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentProfile; gameProfile
	a (Lcom/mojang/brigadier/StringReader;)Ldm$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V lambda$listSuggestions$1
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getGameProfiles
	a (Ljava/lang/String;Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/Collection; lambda$parse$0
net/minecraft/server/LootEntryChildrenAbstract net/minecraft/world/level/storage/loot/entries/CompositeEntryBase
	c children
	e composedChildren
	a (Lczg$a;)Lnet/minecraft/server/LootEntryAbstract$Serializer; createSerializer
	a (Lnet/minecraft/server/LootCollector;)V validate
	a ([Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; compose
net/minecraft/server/BlockRedstoneComparator net/minecraft/world/level/block/ComparatorBlock
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EntityItemFrame;)Z lambda$getItemFrame$0
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z shouldTurnOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EntityItemFrame; getItemFrame
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I getOutputSignal
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I getInputSignal
	c (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V checkTickOnNeighbor
	e (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I calculateOutputSignal
	f (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V refreshOutputState
	g (Lnet/minecraft/server/IBlockData;)I getDelay
net/minecraft/server/PacketLoginInEncryptionBegin net/minecraft/network/protocol/login/ServerboundKeyPacket
	a keybytes
	b nonce
	a (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; getSecretKey
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginInListener;)V handle
	b (Ljava/security/PrivateKey;)[B getNonce
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutSelectAdvancementTab net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket
	a tab
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getTab
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
bft$1 net/minecraft/world/entity/player/Player$1
	a $SwitchMap$net$minecraft$world$entity$Pose
net/minecraft/server/WorldGenFeatureVillageConfiguration net/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration
	a CODEC
	b startPool
	c maxDepth
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	b ()I maxDepth
	c ()Ljava/util/function/Supplier; startPool
net/minecraft/server/EnchantmentBinding net/minecraft/world/item/enchantment/BindingCurseEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
	c ()Z isCurse
net/minecraft/server/GenericAttributes net/minecraft/world/entity/ai/attributes/Attributes
	SPAWN_REINFORCEMENTS SPAWN_REINFORCEMENTS_CHANCE
	a (Ljava/lang/String;Lnet/minecraft/server/AttributeBase;)Lnet/minecraft/server/AttributeBase; register
dxl$a net/minecraft/client/particle/ExplodeParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/DataConverterItemStackEnchantment net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix
	a MAP
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$null$6
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$7
	b (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$fixTag$4
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$5
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$3
net/minecraft/server/EntityBlaze$PathfinderGoalBlazeFireball net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal
	a blaze
	b attackStep
	c attackTime
	d lastSeen
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()D getFollowDistance
net/minecraft/server/CommandTeamMsg net/minecraft/server/commands/TeamMsgCommand
	a SUGGEST_STYLE
	b ERROR_NOT_ON_TEAM
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/IChatBaseComponent;)I sendMessage
aum$a net/minecraft/world/entity/ai/behavior/WeightedList$WeightedEntry
	a data
	b weight
	c randWeight
	a ()Ljava/lang/Object; getData
	a (F)V setRandom
	a (Laum$a;)Ljava/lang/Object; access$100
	a (Laum$a;F)V access$400
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	b ()I getWeight
	b (Laum$a;)I access$200
	c ()D getRandWeight
	c (Laum$a;)D access$300
net/minecraft/server/PacketPlayOutServerDifficulty net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket
	a difficulty
	b locked
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Z isLocked
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/EnumDifficulty; getDifficulty
net/minecraft/server/EntityEnderPearl net/minecraft/world/entity/projectile/ThrownEnderpearl
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/MovingObjectPositionEntity;)V onHitEntity
	b (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/Entity; changeDimension
	h ()Lnet/minecraft/server/Item; getDefaultItem
	j ()V tick
net/minecraft/server/PathfinderGoalMoveThroughVillage net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal
	a mob
	b speedModifier
	c path
	d poiPos
	e onlyAtNight
	f visited
	g distanceToPoi
	h canDealWithDoors
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;)Z hasNotVisited
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)D lambda$canUse$0
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	g ()V updateVisited
net/minecraft/server/Container net/minecraft/world/inventory/AbstractContainerMenu
	d dataSlots
	dragType quickcraftType
	e menuType
	f changeUid
	h quickcraftStatus
	i quickcraftSlots
	items lastSlots
	k unSynchedPlayers
	listeners containerListeners
	windowId containerId
	a (II)V setData
	a (IILnet/minecraft/server/InventoryClickType;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ItemStack; clicked
	a (ILnet/minecraft/server/EntityHuman;)Z isValidQuickcraftType
	a (Ljava/util/List;)V setAll
	a (Ljava/util/Set;ILnet/minecraft/server/ItemStack;I)V getQuickCraftSlotCount
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Ljava/lang/Boolean; lambda$stillValid$0
	a (Lnet/minecraft/server/ContainerAccess;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Block;)Z stillValid
	a (Lnet/minecraft/server/ContainerProperty;)Lnet/minecraft/server/ContainerProperty; addDataSlot
	a (Lnet/minecraft/server/EntityHuman;I)Z clickMenuButton
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/IInventory;)V clearContainer
	a (Lnet/minecraft/server/EntityHuman;Z)V setSynched
	a (Lnet/minecraft/server/IContainerProperties;)V addDataSlots
	a (Lnet/minecraft/server/IContainerProperties;I)V checkContainerDataCount
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/IInventory;I)V checkContainerSize
	a (Lnet/minecraft/server/ItemStack;IIZ)Z moveItemStackTo
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z consideredTheSameItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/server/PlayerInventory;)S backup
	a (Lnet/minecraft/server/Slot;)Lnet/minecraft/server/Slot; addSlot
	a (Lnet/minecraft/server/Slot;Lnet/minecraft/server/ItemStack;Z)Z canItemQuickReplace
	a (Lnet/minecraft/server/TileEntity;)I getRedstoneSignalFromBlockEntity
	b ()Lnet/minecraft/server/NonNullList; getItems
	b (I)I getQuickcraftType
	b (II)I getQuickcraftMask
	b (IILnet/minecraft/server/InventoryClickType;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ItemStack; doClick
	b (ILnet/minecraft/server/ItemStack;)V addItem
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/ICrafting;)V removeSlotListener
	b (Lnet/minecraft/server/IInventory;)I getRedstoneSignalFromContainer
	b (Lnet/minecraft/server/Slot;)Z canDragTo
	c ()V broadcastChanges
	c (I)I getQuickcraftHeader
	c (Lnet/minecraft/server/EntityHuman;)Z isSynched
	canUse (Lnet/minecraft/server/EntityHuman;)Z stillValid
	d ()V resetQuickCraft
	e ()Ljava/lang/String; lambda$clicked$2
	f ()Ljava/lang/String; lambda$clicked$1
	getSlot (Lnet/minecraft/server/IInventory;I)Lnet/minecraft/server/Slot; getSlotFor
	shiftClick (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
net/minecraft/server/RemoteConnectionThread net/minecraft/server/rcon/thread/GenericThread
	a running
	b name
	c thread
	d LOGGER
	e UNIQUE_THREAD_ID
	a ()Z start
	b ()V stop
	c ()Z isRunning
czy$d$3 net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$3
	a (Ljava/util/List;Lnet/minecraft/server/NBTBase;)V lambda$merge$1
	a (Lnet/minecraft/server/NBTBase;Ldr$h;Ljava/util/List;)V merge
	a (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;)V lambda$null$0
czy$d$2 net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$2
	a (Ljava/util/List;Lnet/minecraft/server/NBTBase;)V lambda$merge$1
	a (Lnet/minecraft/server/NBTBase;Ldr$h;Ljava/util/List;)V merge
	a (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;)V lambda$null$0
net/minecraft/server/BiomeBase$Geography net/minecraft/world/level/biome/Biome$BiomeCategory
	r CODEC
	s BY_NAME
	t name
	u $VALUES
	a ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;)Lnet/minecraft/server/BiomeBase$Geography; byName
	a (Lnet/minecraft/server/BiomeBase$Geography;)Lnet/minecraft/server/BiomeBase$Geography; lambda$static$0
	b ()Ljava/lang/String; getName
don$b$a net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry
	a this$1
	a ()V select
	a (DDI)Z mouseClicked
	a (Ldfj;II)V blitSlotBg
	a (Ldfj;IIIIIIIZF)V render
	a (Ldfj;IILnet/minecraft/server/Item;)V blitSlot
	a (Ldon$b$a;)V access$100
net/minecraft/server/CustomFunctionCallbackTimerQueue net/minecraft/world/level/timers/TimerQueue
	a LOGGER
	b callbacksRegistry
	c queue
	d sequentialId
	e events
	a ()Ljava/util/Set; getEventsIds
	a (Lcom/mojang/serialization/Dynamic;)V lambda$new$2
	a (Ldcc$a;)Lnet/minecraft/server/NBTTagCompound; storeEvent
	a (Ljava/lang/Object;J)V tick
	a (Ljava/lang/String;)I remove
	a (Ljava/lang/String;JLnet/minecraft/server/CustomFunctionCallbackTimer;)V schedule
	a (Lnet/minecraft/server/NBTTagCompound;)V loadEvent
	b ()Lnet/minecraft/server/NBTTagList; store
	b (Ldcc$a;)Lcom/google/common/primitives/UnsignedLong; lambda$createComparator$1
	c ()Ljava/util/Comparator; createComparator
	c (Ldcc$a;)J lambda$createComparator$0
net/minecraft/server/AreaFactory net/minecraft/world/level/newbiome/area/AreaFactory
azt$a net/minecraft/world/entity/animal/AbstractFish$FishMoveControl
	i fish
	a ()V tick
azt$b net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal
	h fish
	a ()Z canUse
net/minecraft/server/HashCache net/minecraft/data/HashCache
	a LOGGER
	b path
	c cachePath
	d hits
	e oldCache
	f newCache
	g keep
	a ()V purgeStaleAndWrite
	a (Ljava/nio/file/Path;)Ljava/lang/String; getHash
	a (Ljava/nio/file/Path;Ljava/lang/String;)V putNew
	a (Ljava/util/Map$Entry;)Ljava/lang/String; lambda$purgeStaleAndWrite$2
	b ()V removeStale
	b (Ljava/nio/file/Path;)Z had
	b (Ljava/nio/file/Path;Ljava/lang/String;)V lambda$new$1
	c ()Ljava/util/stream/Stream; walkOutputFiles
	c (Ljava/nio/file/Path;)V keep
	d (Ljava/nio/file/Path;)Z lambda$walkOutputFiles$4
	e (Ljava/nio/file/Path;)V lambda$removeStale$3
	f (Ljava/nio/file/Path;)V lambda$new$0
net/minecraft/server/BlockStructure net/minecraft/world/level/block/StructureBlock
	a MODE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/TileEntityStructure;)V trigger
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
dwi$a net/minecraft/client/multiplayer/ClientAdvancements$Listener
	a (Lnet/minecraft/server/Advancement;Lnet/minecraft/server/AdvancementProgress;)V onUpdateAdvancementProgress
	e (Lnet/minecraft/server/Advancement;)V onSelectedTabChanged
net/minecraft/server/GenLayerSpecial net/minecraft/world/level/newbiome/layer/AddEdgeLayer
eg$c net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate
	a tag
	b nbt
	c vagueProperties
	a (Lnet/minecraft/server/ShapeDetectorBlock;)Z test
eg$b net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result
net/minecraft/server/WorldGenHugeMushroomRed net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature
	a (IIII)I getTreeRadiusForHeight
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration;)V makeCap
net/minecraft/server/PacketPlayOutChat net/minecraft/network/protocol/game/ClientboundChatPacket
	a message
	b type
	c sender
	a ()Z isSkippable
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/IChatBaseComponent; getMessage
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z isSystem
	d ()Lnet/minecraft/server/ChatMessageType; getType
	e ()Ljava/util/UUID; getSender
net/minecraft/server/CriterionTriggerInteractBlock net/minecraft/advancements/critereon/ItemUsedOnBlockTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lbr$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V trigger
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;Lbr$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/WorldGenCarverConfigurationEmpty net/minecraft/world/level/levelgen/carver/NoneCarverConfiguration
	b CODEC
	c INSTANCE
	a ()Lnet/minecraft/server/WorldGenCarverConfigurationEmpty; lambda$static$0
bam$a net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal
	a fish
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
net/minecraft/server/CommandReload net/minecraft/server/commands/ReloadCommand
	a LOGGER
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Ljava/util/Collection;Lnet/minecraft/server/CommandListenerWrapper;)V reloadPacks
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/Throwable;)Ljava/lang/Void; lambda$reloadPacks$0
	a (Lnet/minecraft/server/ResourcePackRepository;Lnet/minecraft/server/SaveData;Ljava/util/Collection;)Ljava/util/Collection; discoverNewPacks
dfp$a com/mojang/blaze3d/vertex/VertexFormatElement$Type
	a FLOAT
	b UBYTE
	c BYTE
	d USHORT
	e SHORT
	f UINT
	g INT
	h size
	i name
	j glType
	k $VALUES
	a ()I getSize
	b ()Ljava/lang/String; getName
	c ()I getGlType
czy$d$1 net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$1
	a (Lnet/minecraft/server/NBTBase;Ldr$h;Ljava/util/List;)V merge
net/minecraft/server/RedirectStream net/minecraft/server/LoggedPrintStream
	a LOGGER
	b name
	a (Ljava/lang/String;)V logLine
eje$a net/minecraft/client/renderer/item/ItemProperties$CompassWobble
	a rotation
	b deltaRotation
	c lastUpdateTick
	a (J)Z shouldUpdate
	a (JD)V update
	a (Leje$a;)D access$300
	a (Leje$a;J)Z access$100
	a (Leje$a;JD)V access$200
dfp$b com/mojang/blaze3d/vertex/VertexFormatElement$Usage
	a POSITION
	b NORMAL
	c COLOR
	d UV
	e PADDING
	f GENERIC
	g name
	h setupState
	i clearState
	j $VALUES
	a ()Ljava/lang/String; getName
	a (I)V clearBufferState
	a (IIIJI)V setupBufferState
	a (Ldfp$b;IIIJI)V access$000
	b (I)V lambda$static$9
	b (IIIJI)V lambda$static$10
	c (I)V lambda$static$7
	c (IIIJI)V lambda$static$8
	d (I)V lambda$static$5
	d (IIIJI)V lambda$static$6
	e (I)V lambda$static$3
	e (IIIJI)V lambda$static$4
	f (I)V lambda$static$1
	f (IIIJI)V lambda$static$2
	g (IIIJI)V lambda$static$0
net/minecraft/server/ItemEnderPearl net/minecraft/world/item/EnderpearlItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
drb$d net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$OnlineServerEntry
	a this$0
	b screen
	c minecraft
	d serverData
	e iconLocation
	f lastIconB64
	g icon
	h lastClickTime
	a ()V updateServerList
	a (DDI)Z mouseClicked
	a (II)V swap
	a (III)Z keyPressed
	a (Ldfj;IIIIIIIZF)V render
	a (Ldfj;IILnet/minecraft/server/MinecraftKey;)V drawIcon
	a (Ldrb$d;)Ldwr; access$000
	a (Ljava/lang/String;)Z uploadServerIcon
	b ()Ldwr; getServerData
	c ()Z canJoin
	d ()V lambda$render$1
	e ()V lambda$null$0
drb$b net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$LANHeader
	a minecraft
	a (Ldfj;IIIIIIIZF)V render
net/minecraft/server/CriterionConditionFluid net/minecraft/advancements/critereon/FluidPredicate
	a ANY
	b tag
	c fluid
	d properties
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionFluid; fromJson
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z matches
eci$1 net/minecraft/client/renderer/blockentity/StructureBlockRenderer$1
	a $SwitchMap$net$minecraft$world$level$block$Mirror
	b $SwitchMap$net$minecraft$world$level$block$Rotation
drb$c net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$NetworkServerEntry
	a minecraft
	b serverData
	c LAN_SERVER_HEADER
	d HIDDEN_ADDRESS_TEXT
	e screen
	f lastClickTime
	a ()Lemz; getServerData
	a (DDI)Z mouseClicked
	a (Ldfj;IIIIIIIZF)V render
ecz$a net/minecraft/client/renderer/debug/DebugRenderer$SimpleDebugRenderer
	a ()V clear
	a (Ldfj;Ldzy;DDD)V render
drb$a net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry
x$b$2 net/minecraft/Util$OS$2
	b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
net/minecraft/server/EnumDirection$EnumAxis net/minecraft/core/Direction$Axis
	d CODEC
	e VALUES
	f BY_NAME
	g name
	h $VALUES
	a ()Ljava/lang/String; getSerializedName
	a (DDD)D choose
	a (III)I choose
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumDirection$EnumAxis; byName
	a (Ljava/util/Random;)Lnet/minecraft/server/EnumDirection$EnumAxis; getRandom
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection$EnumAxis; lambda$static$0
	a (Lnet/minecraft/server/EnumDirection;)Z test
	b ()Ljava/lang/String; getName
	c ()Z isVertical
	d ()Z isHorizontal
	e ()Lnet/minecraft/server/EnumDirection$EnumDirectionLimit; getPlane
net/minecraft/server/CriterionTriggerTargetHit net/minecraft/advancements/critereon/TargetBlockTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lcp$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;Lnet/minecraft/server/Vec3D;I)V trigger
	a (Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/Vec3D;ILcp$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
x$b$1 net/minecraft/Util$OS$1
	b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
net/minecraft/server/BlockBlastFurnace net/minecraft/world/level/block/BlastFurnaceBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V openContainer
net/minecraft/server/WorldGenLightStone1 net/minecraft/world/level/levelgen/feature/GlowstoneFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/BlockPowered net/minecraft/world/level/block/PoweredBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	b_ (Lnet/minecraft/server/IBlockData;)Z isSignalSource
eg$a net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate
	a state
	b properties
	c nbt
	a (Lnet/minecraft/server/ShapeDetectorBlock;)Z test
net/minecraft/server/IReloadableResourceManager net/minecraft/server/packs/resources/ReloadableResourceManager
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture; reload
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/IReloadable; createQueuedReload
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/IReloadable; createFullReload
	a (Lnet/minecraft/server/IReloadListener;)V registerReloadListener
czp$c net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase
	b this$0
	a (F)I getWeight
czp$d net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor
czp$e net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootSelectorEntry; deserializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEntryAbstract; deserializeCustom
czp$a net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder
	a weight
	b quality
	c functions
	a ()[Lnet/minecraft/server/LootItemFunction; getFunctions
	a (I)Lczp$a; setWeight
	a (Ldag$a;)Lczp$a; apply
	b (I)Lczp$a; setQuality
	b (Ldag$a;)Ljava/lang/Object; apply
net/minecraft/server/SensorSecondaryPlaces net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)V doTick
czp$b net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder
	c constructor
	b ()Lnet/minecraft/server/LootEntryAbstract; build
	d ()Lczn$a; getThis
	g ()Lczp$b; getThis
zu$b net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release
	a task
	b pos
	c clearQueue
	a (Lzu$b;)J access$200
	b (Lzu$b;)Ljava/lang/Runnable; access$300
	c (Lzu$b;)Z access$400
net/minecraft/server/LightEngineStorageSky net/minecraft/world/level/lighting/SkyLightSectionStorage
	k HORIZONTALS
	l sectionsWithSources
	m sectionsToAddSourcesTo
	n sectionsToRemoveSourcesFrom
	o columnsWithSkySources
	p hasSourceInconsistencies
	a ()Z hasInconsistencies
	a (I)Z hasSectionsBelow
	a (Lnet/minecraft/server/LightEngineLayer;ZZ)V markNewInconsistencies
	b (JZ)V enableLightSources
	d (J)I getLightValue
	f ()V recheckInconsistencyFlag
	j (J)Lnet/minecraft/server/NibbleArray; createDataLayer
	k (J)V onNodeAdded
	l (J)V onNodeRemoved
	m (J)Z hasLightSource
	n (J)Z isAboveData
	o (J)Z lightOnInSection
	p (J)V queueRemoveSource
	q (J)V queueAddSource
zu$a net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message
	a task
	b pos
	c level
	a (Lzu$a;)Ljava/util/function/Function; access$500
	b (Lzu$a;)J access$600
	c (Lzu$a;)Ljava/util/function/IntSupplier; access$700
net/minecraft/server/PacketPlayOutSpawnEntityPainting net/minecraft/network/protocol/game/ClientboundAddPaintingPacket
	a id
	b uuid
	c pos
	d direction
	e motive
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/UUID; getUUID
	d ()Lnet/minecraft/server/BlockPosition; getPos
	e ()Lnet/minecraft/server/EnumDirection; getDirection
	f ()Lnet/minecraft/server/Paintings; getMotive
net/minecraft/server/VoxelShapeMerger net/minecraft/world/phys/shapes/IndexMerger
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Ldcw$a;)Z forMergedIndexes
net/minecraft/server/CommandList net/minecraft/server/commands/ListPlayersCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listPlayers
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/function/Function;)I format
	a (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/IChatBaseComponent; lambda$listPlayersWithUuids$2
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
	b (Lnet/minecraft/server/CommandListenerWrapper;)I listPlayersWithUuids
dfp$b$a com/mojang/blaze3d/vertex/VertexFormatElement$Usage$SetupState
net/minecraft/server/ItemMapEmpty net/minecraft/world/item/EmptyMapItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/Enchantment$Rarity net/minecraft/world/item/enchantment/Enchantment$Rarity
	e weight
	f $VALUES
	a ()I getWeight
dd$a net/minecraft/commands/SharedSuggestionProvider$TextCoordinates
	a DEFAULT_LOCAL
	b DEFAULT_GLOBAL
	c x
	d y
	e z
net/minecraft/server/DataConverterOminousBannerRename net/minecraft/util/datafix/fixes/OminousBannerRenameFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/server/CommandDispatcher net/minecraft/commands/Commands
	a LOGGER
	b dispatcher
	a ()Lcom/mojang/brigadier/CommandDispatcher; getDispatcher
	a (Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; getParseException
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Ljava/lang/String; lambda$validate$8
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$fillUsableCommands$5
	a (Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$new$1
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Collection;)V lambda$new$0
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Map;)V fillUsableCommands
	a (Ldc$b;)Ljava/util/function/Predicate; createValidator
	a (Ldc$b;Ljava/lang/String;)Z lambda$createValidator$6
	a (Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; literal
	a (Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; argument
	a (Ljava/lang/String;Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; lambda$performCommand$2
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I performCommand
	a (Lnet/minecraft/server/EntityPlayer;)V sendCommands
	a (Lnet/minecraft/server/IChatMutableComponent;Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; lambda$performCommand$3
	a (Lnet/minecraft/server/ICompletionProvider;)Z lambda$fillUsableCommands$4
	b ()V validate
	b (Lcom/mojang/brigadier/arguments/ArgumentType;)Z lambda$validate$7
net/minecraft/server/RegistryDataPackCodec net/minecraft/resources/RegistryDataPackCodec
	a directCodec
	b registryKey
	c elementCodec
	a (Lcom/mojang/datafixers/util/Pair;Lnet/minecraft/server/RegistryMaterials;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult; lambda$decode$1
	a (Lnet/minecraft/server/RegistryMaterials;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/RegistryDataPackCodec; create
net/minecraft/server/PathfinderGoalDoorInteract net/minecraft/world/entity/ai/goal/DoorInteractGoal
	a passed
	b doorOpenDirX
	c doorOpenDirZ
	door doorPos
	entity mob
	f hasDoor
	a ()Z canUse
	a (Z)V setOpen
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	g ()Z isOpen
net/minecraft/server/BiomeBase net/minecraft/world/level/biome/Biome
	a LOGGER
	b DIRECT_CODEC
	c NETWORK_CODEC
	d CODEC
	e LIST_CODEC
	f BIOME_INFO_NOISE
	g structuresByStep
	h TEMPERATURE_NOISE
	i FROZEN_TEMPERATURE_NOISE
	j climateSettings
	k generationSettings
	l mobSettings
	m depth
	n scale
	o biomeCategory
	p specialEffects
	q temperatureCache
	a ()I getSkyColor
	a (DD)I getGrassColor
	a (Lbss$d;Lnet/minecraft/server/BiomeBase$Geography;Ljava/lang/Float;Ljava/lang/Float;Lnet/minecraft/server/BiomeFog;)Lnet/minecraft/server/BiomeBase; lambda$null$13
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$14
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJ)V buildSurfaceAt
	a (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeFog; lambda$null$12
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z shouldFreeze
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Z)Z shouldFreeze
	a (Lnet/minecraft/server/RegionLimitedWorldAccess;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/SeededRandom;IIIILnet/minecraft/server/StructureStart;)V lambda$generate$18
	a (Lnet/minecraft/server/StructureGenerator;)Ljava/lang/String; lambda$generate$19
	a (Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/RegionLimitedWorldAccess;JLnet/minecraft/server/SeededRandom;Lnet/minecraft/server/BlockPosition;)V generate
	a (Lnet/minecraft/server/WorldGenFeatureConfigured;)Ljava/lang/String; lambda$generate$20
	b ()Lnet/minecraft/server/BiomeSettingsMobs; getMobSettings
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$7
	b (Lnet/minecraft/server/BiomeBase;)Ljava/lang/Float; lambda$null$11
	b (Lnet/minecraft/server/BlockPosition;)F getHeightAdjustedTemperature
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z shouldSnow
	b (Lnet/minecraft/server/StructureGenerator;)Ljava/lang/Integer; lambda$new$15
	c ()Lnet/minecraft/server/BiomeBase$Precipitation; getPrecipitation
	c (Lnet/minecraft/server/BiomeBase;)Ljava/lang/Float; lambda$null$10
	d ()Z isHumid
	d (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeBase$Geography; lambda$null$9
	e ()Lnet/minecraft/server/BiomeSettingsGeneration; getGenerationSettings
	e (Lnet/minecraft/server/BiomeBase;)Lbss$d; lambda$null$8
	f ()I getFogColor
	f (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeSettingsMobs; lambda$null$6
	g ()I getFoliageColor
	g (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeSettingsGeneration; lambda$null$5
	getAdjustedTemperature (Lnet/minecraft/server/BlockPosition;)F getTemperature
	getHumidity ()F getDownfall
	h ()F getDepth
	h (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeFog; lambda$null$4
	i (Lnet/minecraft/server/BiomeBase;)Ljava/lang/Float; lambda$null$3
	j ()F getScale
	j (Lnet/minecraft/server/BiomeBase;)Ljava/lang/Float; lambda$null$2
	k ()F getBaseTemperature
	k (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeBase$Geography; lambda$null$1
	l ()Lnet/minecraft/server/BiomeFog; getSpecialEffects
	l (Lnet/minecraft/server/BiomeBase;)Lbss$d; lambda$null$0
	m ()I getWaterColor
	n ()I getWaterFogColor
	o ()Ljava/util/Optional; getAmbientParticle
	p ()Ljava/util/Optional; getAmbientLoop
	q ()Ljava/util/Optional; getAmbientMood
	r ()Ljava/util/Optional; getAmbientAdditions
	s ()Ljava/util/Optional; getBackgroundMusic
	t ()Lnet/minecraft/server/BiomeBase$Geography; getBiomeCategory
	u ()Lnet/minecraft/server/NoiseGenerator3; access$100
	v ()I getGrassColorFromTexture
	w ()I getFoliageColorFromTexture
	x ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap; lambda$new$17
	y ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap; lambda$null$16
dhv$a com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type
	a Warning
	b Info
	c colorCode
	d text
	e $VALUES
net/minecraft/server/GameTestHarnessRunner net/minecraft/gametest/framework/GameTestRunner
	a TEST_REPORTER
	a (Ljava/lang/String;)Ljava/util/Collection; lambda$null$0
	a (Ljava/lang/String;Lnet/minecraft/server/EnumChatFormat;Lnet/minecraft/server/EntityPlayer;)V lambda$say$6
	a (Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Collection;Ljava/util/function/Consumer;Ljava/util/List;)Lnet/minecraft/server/GameTestHarnessBatch; lambda$null$2
	a (Ljava/lang/String;ZLjava/lang/String;)Lnet/minecraft/server/ItemStack; createBook
	a (Ljava/lang/StringBuffer;Ljava/lang/String;)V lambda$createBook$4
	a (Ljava/util/Collection;)Ljava/util/Collection; groupTestsIntoBatches
	a (Ljava/util/Collection;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/GameTestHarnessTicker;I)Ljava/util/Collection; runTestBatches
	a (Ljava/util/Map;Ljava/lang/String;)Ljava/util/stream/Stream; lambda$groupTestsIntoBatches$3
	a (Ljava/util/Map;Lnet/minecraft/server/GameTestHarnessTestFunction;)V lambda$groupTestsIntoBatches$1
	a (Lnet/minecraft/server/EntityPlayer;)Z lambda$say$5
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V access$100
	a (Lnet/minecraft/server/GameTestHarnessInfo;Ljava/lang/String;)V access$200
	a (Lnet/minecraft/server/GameTestHarnessInfo;Lnet/minecraft/server/Block;)V access$000
	a (Lnet/minecraft/server/GameTestHarnessInfo;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GameTestHarnessTicker;)V runTest
	a (Lnet/minecraft/server/WorldServer;)V clearMarkers
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V lambda$clearAllTests$8
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/lang/String;)V showRedBox
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GameTestHarnessTicker;I)V clearAllTests
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EnumChatFormat;Ljava/lang/String;)V say
	b (Ljava/util/Collection;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/GameTestHarnessTicker;I)Ljava/util/Collection; runTests
	b (Lnet/minecraft/server/GameTestHarnessInfo;)V access$300
	b (Lnet/minecraft/server/GameTestHarnessInfo;Ljava/lang/String;)V spawnLectern
	b (Lnet/minecraft/server/GameTestHarnessInfo;Lnet/minecraft/server/Block;)V spawnBeacon
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z lambda$clearAllTests$7
	c (Lnet/minecraft/server/GameTestHarnessInfo;)V visualizeFailedTest
	d (Lnet/minecraft/server/GameTestHarnessInfo;)V visualizePassedTest
eeo$1 net/minecraft/client/renderer/entity/EvokerRenderer$1
	a this$0
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityIllagerWizard;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
bhi$1 net/minecraft/world/entity/vehicle/AbstractMinecart$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
net/minecraft/server/WorldGenSurfaceBasaltDeltas net/minecraft/world/level/levelgen/surfacebuilders/BasaltDeltasSurfaceBuilder
	a BASALT
	b BLACKSTONE
	c GRAVEL
	d FLOOR_BLOCK_STATES
	e CEILING_BLOCK_STATES
	a ()Lcom/google/common/collect/ImmutableList; getFloorBlockStates
	b ()Lcom/google/common/collect/ImmutableList; getCeilingBlockStates
	c ()Lnet/minecraft/server/IBlockData; getPatchBlockState
net/minecraft/server/DataConverterSignText net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix
	a GSON
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; updateLine
eje$1 net/minecraft/client/renderer/item/ItemProperties$1
	a rotation
	b rota
	c lastUpdateTick
	a (Lnet/minecraft/server/World;D)D wobble
eje$2 net/minecraft/client/renderer/item/ItemProperties$2
	a wobble
	b wobbleRandom
	a (Ldwl;)Lnet/minecraft/server/BlockPosition; getSpawnPosition
	a (Lnet/minecraft/server/EntityItemFrame;)D getFrameRotation
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;)D getAngleTo
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/BlockPosition; getLodestonePosition
zu$1 net/minecraft/server/level/ChunkTaskPriorityQueueSorter$1
net/minecraft/server/WorldGenFoilagePlacers net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType
	a BLOB_FOLIAGE_PLACER
	b SPRUCE_FOLIAGE_PLACER
	c PINE_FOLIAGE_PLACER
	d ACACIA_FOLIAGE_PLACER
	e BUSH_FOLIAGE_PLACER
	f FANCY_FOLIAGE_PLACER
	g MEGA_JUNGLE_FOLIAGE_PLACER
	h MEGA_PINE_FOLIAGE_PLACER
	i DARK_OAK_FOLIAGE_PLACER
	j codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/WorldGenFoilagePlacers; register
dih$a com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$SettingsSlider
	a this$0
	c minValue
	d maxValue
	a ()V applyValue
	a (DD)V onClick
	a_ (DD)V onRelease
	b ()V updateMessage
net/minecraft/server/ExpirableListEntry net/minecraft/server/players/BanListEntry
	a DATE_FORMAT
	b created
	c source
	d expires
	e reason
	a ()Ljava/util/Date; getCreated
	a (Lcom/google/gson/JsonObject;)V serialize
	e ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	f ()Z hasExpired
net/minecraft/server/MovingObjectPositionBlock net/minecraft/world/phys/BlockHitResult
	b direction
	c blockPos
	d miss
	e inside
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MovingObjectPositionBlock; withPosition
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/MovingObjectPositionBlock; withDirection
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MovingObjectPositionBlock; miss
	c ()Lnet/minecraft/server/MovingObjectPosition$EnumMovingObjectType; getType
	d ()Z isInside
	getBlockPosition ()Lnet/minecraft/server/BlockPosition; getBlockPos
net/minecraft/server/CriterionTriggerImpossible net/minecraft/advancements/critereon/ImpossibleTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Laf$a;)V addPlayerListener
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootDeserializationContext;)Lbm$a; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Laf$a;)V removePlayerListener
cr$a net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance
	a villager
	b item
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/ItemStack;)Z matches
	c ()Lcr$a; tradedWithVillager
net/minecraft/server/AreaTransformer net/minecraft/world/level/newbiome/layer/traits/DimensionTransformer
	a (I)I getParentX
	b (I)I getParentY
dbl$a net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder
	a ()Ldbl$a; invert
	a (Ldbl$a;)Ldbb$a; or
dse$a net/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry
	a this$0
	b minecraft
	c screen
	d summary
	e iconLocation
	f iconFile
	g icon
	h lastClickTime
	a ()V joinWorld
	a (DDI)Z mouseClicked
	a (Ldfj;IIIIIIIZF)V render
	a (Ldse$a;)Lnet/minecraft/server/WorldInfo; access$000
	a (Lnet/minecraft/server/Convertable$ConversionSession;Ljava/lang/String;Z)V lambda$editWorld$6
	a (Lnet/minecraft/server/WorldSettings;Lnet/minecraft/server/GeneratorSettings;Ljava/nio/file/Path;Lnet/minecraft/server/DataPackConfiguration;Lnet/minecraft/server/IRegistryCustom$Dimension;Z)V lambda$recreateWorld$8
	a (Z)V lambda$deleteWorld$4
	a (ZZ)V lambda$joinWorld$0
	b ()V deleteWorld
	c ()V editWorld
	c (Z)V lambda$joinWorld$2
	d ()V recreateWorld
	e ()V loadWorld
	f ()V queueLoadScreen
	g ()Lejk; loadServerIcon
	h ()V lambda$recreateWorld$9
	i ()Ljava/lang/String; lambda$editWorld$7
	j ()Ljava/lang/String; lambda$null$5
	k ()Ljava/lang/String; lambda$null$3
	l ()V lambda$null$1
net/minecraft/server/IPosition net/minecraft/core/Position
	getX ()D x
	getY ()D y
	getZ ()D z
net/minecraft/server/PathfinderGoalFollowEntity net/minecraft/world/entity/ai/goal/FollowMobGoal
	a mob
	b followPredicate
	c followingMob
	d speedModifier
	e navigation
	f timeToRecalcPath
	g stopDistance
	h oldWaterCost
	i areaSize
	a ()Z canUse
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityInsentient;)Z lambda$new$0
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/BlockUtil$Rectangle net/minecraft/BlockUtil$FoundRectangle
	origin minCorner
	side1 axis1Size
	side2 axis2Size
net/minecraft/server/EntityZombie net/minecraft/world/entity/monster/Zombie
	DROWN_CONVERTING DATA_DROWNED_CONVERSION_ID
	b SPEED_MODIFIER_BABY_UUID
	bo DATA_SPECIAL_TYPE_ID
	bq DOOR_BREAKING_PREDICATE
	br breakDoorGoal
	bs canBreakDoors
	bt inWaterTime
	c SPEED_MODIFIER_BABY
	d DATA_BABY_ID
	drownedConversionTime conversionTime
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	T_ ()Z isSunSensitive
	a (Ljava/util/Random;)Z getSpawnAsBabyOdds
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityZombie;)Ljava/util/Random; access$000
	a (Lnet/minecraft/server/EnumDifficulty;)Z lambda$static$0
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V killed
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;)V convertToZombieType
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	ba ()D getMyRidingOffset
	d (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	dB ()Lnet/minecraft/server/EnumMonsterType; getMobType
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Z supportsBreakDoorGoal
	eM ()Lnet/minecraft/server/ItemStack; getSkull
	eN ()Z convertsInWater
	eP ()V doUnderWaterConversion
	eS ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eU ()Z canBreakDoors
	eV ()V randomizeReinforcementsChance
	getSoundStep ()Lnet/minecraft/server/SoundEffect; getStepSound
	h (Lnet/minecraft/server/ItemStack;)Z canHoldItem
	isDrownConverting ()Z isUnderWaterConverting
	j ()V tick
	k ()V aiStep
	m ()V addBehaviourGoals
	o ()V registerGoals
	startDrownedConversion (I)V startUnderWaterConversion
	u (Z)V setCanBreakDoors
	w_ ()Z isBaby
	y (F)V handleAttributes
net/minecraft/server/LootItemConditionUser net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder
	b (Ldbl$a;)Ljava/lang/Object; when
	c ()Ljava/lang/Object; unwrap
net/minecraft/server/ArgumentScoreboardTeam net/minecraft/commands/arguments/TeamArgument
	a EXAMPLES
	b ERROR_TEAM_NOT_FOUND
	a ()Lnet/minecraft/server/ArgumentScoreboardTeam; team
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeam; getTeam
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
net/minecraft/server/BlockComposter$ContainerOutput net/minecraft/world/level/block/ComposterBlock$OutputContainer
	blockData state
	blockPosition pos
	emptied changed
	generatorAccess level
	V_ ()I getMaxStackSize
	X_ ()V setChanged
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
aew$a net/minecraft/util/FastColor$ARGB32
	a (I)I alpha
	a (II)I multiply
	a (IIII)I color
	b (I)I red
	c (I)I green
	d (I)I blue
net/minecraft/server/ArgumentVec3 net/minecraft/commands/arguments/coordinates/Vec3Argument
	a ERROR_NOT_COMPLETE
	b ERROR_MIXED_TYPE
	c EXAMPLES
	d centerCorrect
	a ()Lnet/minecraft/server/ArgumentVec3; vec3
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/Vec3D; getVec3
	a (Z)Lnet/minecraft/server/ArgumentVec3; vec3
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IVectorPosition; getCoordinates
net/minecraft/server/StructureBoundingBox net/minecraft/world/level/levelgen/structure/BoundingBox
	a x0
	b y0
	c z0
	d x1
	e y1
	f z1
	a ()Lnet/minecraft/server/StructureBoundingBox; getUnknownBox
	a (D)V inflate
	a (DDD)V inflate
	a (III)V move
	a (IIII)Z intersects
	a (IIIIII)Lnet/minecraft/server/StructureBoundingBox; createProper
	a (IIIIIIIIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/StructureBoundingBox; orientBox
	a (Lnet/minecraft/server/BaseBlockPosition;)V move
	a (Lnet/minecraft/server/BaseBlockPosition;Lnet/minecraft/server/BaseBlockPosition;)Z intersects
	a (Lnet/minecraft/server/StructureBoundingBox;)Z isInsideOf
	b ()Lnet/minecraft/server/StructureBoundingBox; infinite
	b (III)Lnet/minecraft/server/StructureBoundingBox; moved
	b (IIIIII)Z intersects
	b (Lnet/minecraft/server/BaseBlockPosition;)Z isInside
	b (Lnet/minecraft/server/StructureBoundingBox;)Z intersects
	c ()Lnet/minecraft/server/BaseBlockPosition; getLength
	c (Lnet/minecraft/server/StructureBoundingBox;)V expand
	d ()I getXSpan
	d (Lnet/minecraft/server/StructureBoundingBox;)Lnet/minecraft/server/StructureBoundingBox; getIntersection
	e ()I getYSpan
	f ()I getZSpan
	g ()Lnet/minecraft/server/BaseBlockPosition; getCenter
	h ()Lnet/minecraft/server/NBTTagIntArray; createTag
net/minecraft/server/BehaviorSleep net/minecraft/world/entity/ai/behavior/SleepInBed
	b nextOkStartTime
	a (J)Z timedOut
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
net/minecraft/server/ArgumentVec2 net/minecraft/commands/arguments/coordinates/Vec2Argument
	a ERROR_NOT_COMPLETE
	b EXAMPLES
	c centerCorrect
	a ()Lnet/minecraft/server/ArgumentVec2; vec2
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/Vec2F; getVec2
	a (Z)Lnet/minecraft/server/ArgumentVec2; vec2
net/minecraft/server/CriterionTriggerFishingRodHooked net/minecraft/advancements/critereon/FishingRodHookedTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lbk$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityFishingHook;Ljava/util/Collection;)V trigger
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;Ljava/util/Collection;Lbk$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/ControllerLook net/minecraft/world/entity/ai/control/LookControl
	a mob
	b yMaxRotSpeed
	c xMaxRotAngle
	d hasWanted
	e wantedX
	f wantedY
	g wantedZ
	a ()V tick
	a (DDD)V setLookAt
	a (DDDFF)V setLookAt
	a (FFF)F rotateTowards
	a (Lnet/minecraft/server/Entity;)V setLookAt
	a (Lnet/minecraft/server/Entity;FF)V setLookAt
	a (Lnet/minecraft/server/Vec3D;)V setLookAt
	b ()Z resetXRotOnTick
	b (Lnet/minecraft/server/Entity;)D getWantedY
	c ()Z isHasWanted
	d ()D getWantedX
	e ()D getWantedY
	f ()D getWantedZ
	g ()F getXRotD
	h ()F getYRotD
net/minecraft/server/WorldUpgrader net/minecraft/util/worldupdate/WorldUpgrader
	a LOGGER
	b THREAD_FACTORY
	c levels
	d eraseCache
	e levelStorage
	f thread
	g dataFixer
	h running
	i finished
	j progress
	k totalChunks
	l converted
	m skipped
	n progressMap
	o status
	p REGEX
	q overworldDataStorage
	a ()V cancel
	a (Ljava/io/File;Ljava/lang/String;)Z lambda$getAllChunkPos$2
	a (Ljava/lang/Thread;Ljava/lang/Throwable;)V lambda$new$0
	a (Lnet/minecraft/server/ResourceKey;)F dimensionProgress
	b ()Z isFinished
	b (Lnet/minecraft/server/ResourceKey;)Ljava/util/List; getAllChunkPos
	c ()Lcom/google/common/collect/ImmutableSet; levels
	d ()F getProgress
	e ()I getTotalChunks
	f ()I getConverted
	g ()I getSkipped
	h ()Lnet/minecraft/server/IChatBaseComponent; getStatus
	i ()V work
	j ()Lnet/minecraft/server/WorldPersistentData; lambda$work$1
net/minecraft/server/EntityAreaEffectCloud net/minecraft/world/entity/AreaEffectCloud
	COLOR DATA_COLOR
	affectedEntities victims
	ap owner
	aq ownerUUID
	b LOGGER
	c DATA_RADIUS
	e DATA_WAITING
	f DATA_PARTICLE
	hasColor fixedColor
	potionRegistry potion
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/PotionRegistry;)V setPotion
	a (Z)V setWaiting
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (I)V setDurationOnUse
	e ()V defineSynchedData
	getSource ()Lnet/minecraft/server/EntityLiving; getOwner
	j ()V tick
	k ()Z isWaiting
	n ()F getRadiusOnUse
	o ()F getRadiusPerTick
	p ()I getDurationOnUse
	q ()I getWaitTime
	r ()V use
	s ()Z canUse
	setColor (I)V setFixedColor
	setSource (Lnet/minecraft/server/EntityLiving;)V setOwner
	u ()Lnet/minecraft/server/PotionRegistry; getPotion
	v ()Ljava/util/List; getEffects
	x ()V updateColor
	x_ ()V refreshDimensions
	y_ ()Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
net/minecraft/server/ItemNetherStar net/minecraft/world/item/SimpleFoiledItem
	e (Lnet/minecraft/server/ItemStack;)Z isFoil
net/minecraft/server/BlockTwistingVinesPlant net/minecraft/world/level/block/TwistingVinesPlant
	d SHAPE
	c ()Lnet/minecraft/server/BlockGrowingTop; getHeadBlock
net/minecraft/server/Resource net/minecraft/server/packs/resources/SimpleResource
	a sourceName
	b location
	c resourceStream
	d metadataStream
	e triedMetadata
	f metadata
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadata
	b ()Ljava/io/InputStream; getInputStream
	c ()Z hasMetadata
	d ()Ljava/lang/String; getSourceName
net/minecraft/server/ItemProjectileWeapon net/minecraft/world/item/ProjectileWeaponItem
	a ARROW_ONLY
	b ARROW_OR_FIREWORK
	a (Lnet/minecraft/server/EntityLiving;Ljava/util/function/Predicate;)Lnet/minecraft/server/ItemStack; getHeldProjectile
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	c ()I getEnchantmentValue
	d ()I getDefaultProjectileRange
	d (Lnet/minecraft/server/ItemStack;)Z lambda$static$1
	e ()Ljava/util/function/Predicate; getSupportedHeldProjectiles
	g (Lnet/minecraft/server/ItemStack;)Z lambda$static$0
net/minecraft/server/WorldGenFeatureBamboo net/minecraft/world/level/levelgen/feature/BambooFeature
	a BAMBOO_TRUNK
	ab BAMBOO_FINAL_LARGE
	ac BAMBOO_TOP_LARGE
	ad BAMBOO_TOP_SMALL
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfigurationChance;)Z place
net/minecraft/server/ChatComponentUtils net/minecraft/network/chat/ComponentUtils
	a (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	a (Lcom/mojang/brigadier/Message;)Lnet/minecraft/server/IChatBaseComponent; fromMessage
	a (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; lambda$formatList$0
	a (Ljava/util/Collection;)Lnet/minecraft/server/IChatBaseComponent; formatList
	a (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/server/IChatBaseComponent; formatAndSortList
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ChatModifier;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/ChatModifier; resolveStyle
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatMutableComponent; wrapInSquareBrackets
	a (Lnet/minecraft/server/IChatMutableComponent;Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/IChatMutableComponent; mergeStyles
	b (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/server/IChatMutableComponent; formatList
	filterForDisplay (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatMutableComponent; updateForEntity
net/minecraft/server/BlockMinecartTrack net/minecraft/world/level/block/RailBlock
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V updateState
	d ()Lnet/minecraft/server/IBlockState; getShapeProperty
net/minecraft/server/BlockDragonEgg net/minecraft/world/level/block/DragonEggBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V attack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c ()I getDelayAfterPlace
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V teleport
mo$1 net/minecraft/nbt/NbtOps$1
	a val$tag
	b this$0
	a (Ljava/lang/String;)Lnet/minecraft/server/NBTBase; get
	a (Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; get
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; lambda$entries$0
net/minecraft/server/ArmorMaterial net/minecraft/world/item/ArmorMaterial
	a ()I getEnchantmentValue
	a (Lnet/minecraft/server/EnumItemSlot;)I getDurabilityForSlot
	b ()Lnet/minecraft/server/SoundEffect; getEquipSound
	b (Lnet/minecraft/server/EnumItemSlot;)I getDefenseForSlot
	c ()Lnet/minecraft/server/RecipeItemStack; getRepairIngredient
	d ()Ljava/lang/String; getName
	e ()F getToughness
	f ()F getKnockbackResistance
elk$a net/minecraft/client/resources/model/ModelBakery$BlockStateDefinitionException
net/minecraft/server/PacketPlayInSetCommandBlock net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket
	a pos
	b command
	c trackOutput
	d conditional
	e automatic
	f mode
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/lang/String; getCommand
	d ()Z isTrackOutput
	e ()Z isConditional
	f ()Z isAutomatic
	g ()Lnet/minecraft/server/TileEntityCommand$Type; getMode
net/minecraft/server/NBTTagShort net/minecraft/nbt/ShortTag
	a TYPE
	a ()B getId
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (S)Lnet/minecraft/server/NBTTagShort; valueOf
	b ()Lnet/minecraft/server/NBTTagType; getType
	c ()Lnet/minecraft/server/NBTBase; copy
	d ()Lnet/minecraft/server/NBTTagShort; copy
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
net/minecraft/server/DataConverterObjectiveDisplayName net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$4
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
elk$b net/minecraft/client/resources/model/ModelBakery$ModelGroupKey
	a models
	b coloringValues
	a (Lnet/minecraft/server/BlockStateList;Lnet/minecraft/server/IBlockData;Lebm;)Z lambda$create$0
	a (Lnet/minecraft/server/IBlockData;Lebk;Ljava/util/Collection;)Lelk$b; create
	a (Lnet/minecraft/server/IBlockData;Lelq;Ljava/util/Collection;)Lelk$b; create
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Collection;)Ljava/util/List; getColoringValues
net/minecraft/server/PacketPlayOutEntityEffect net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket
	a entityId
	b effectId
	c effectAmplifier
	d effectDurationTicks
	e flags
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Z isSuperLongDuration
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getEntityId
	d ()B getEffectId
	e ()B getEffectAmplifier
	f ()I getEffectDurationTicks
	g ()Z isEffectVisible
	h ()Z isEffectAmbient
	i ()Z effectShowsIcon
net/minecraft/server/LoginListener$EnumProtocolState net/minecraft/server/network/ServerLoginPacketListenerImpl$State
	h $VALUES
net/minecraft/server/EntityMonster net/minecraft/world/entity/monster/Monster
	L ()Z shouldDespawnInPeaceful
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z isDarkEnoughToSpawn
	au ()Lnet/minecraft/server/SoundEffect; getSwimSound
	av ()Lnet/minecraft/server/SoundEffect; getSwimSplashSound
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkMonsterSpawnRules
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkAnyLightMonsterSpawnRules
	cU ()Z shouldDropExperience
	cV ()Z shouldDropLoot
	ct ()Lnet/minecraft/server/SoundCategory; getSoundSource
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eQ ()V updateNoActionTime
	eR ()Lnet/minecraft/server/AttributeProvider$Builder; createMonsterAttributes
	f (Lnet/minecraft/server/EntityHuman;)Z isPreventingPlayerRest
	f (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; getProjectile
	k ()V aiStep
	o (I)Lnet/minecraft/server/SoundEffect; getFallDamageSound
net/minecraft/server/OldNibbleArray net/minecraft/world/level/chunk/OldDataLayer
	a data
	b depthBits
	c depthBitsPlusFour
	a ()Z isValid
	a (I)V setAll
	a (III)I get
	a (IIII)V set
net/minecraft/server/BlockButtonAbstract net/minecraft/world/level/block/ButtonBlock
	b CEILING_AABB_X
	c CEILING_AABB_Z
	d FLOOR_AABB_X
	e FLOOR_AABB_Z
	f NORTH_AABB
	g SOUTH_AABB
	h WEST_AABB
	i EAST_AABB
	j PRESSED_CEILING_AABB_X
	k PRESSED_CEILING_AABB_Z
	o PRESSED_FLOOR_AABB_X
	p PRESSED_FLOOR_AABB_Z
	q PRESSED_NORTH_AABB
	r PRESSED_SOUTH_AABB
	s PRESSED_WEST_AABB
	t PRESSED_EAST_AABB
	v sensitive
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Z)V playSound
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Z)Lnet/minecraft/server/SoundEffect; getSound
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b_ (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	c ()I getPressDuration
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V press
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V checkPressed
	f (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V updateNeighbours
net/minecraft/server/WorldGenVillage net/minecraft/world/level/levelgen/feature/VillageFeature
net/minecraft/server/DedicatedServerSettings net/minecraft/server/dedicated/DedicatedServerSettings
	path source
	save ()V forceSave
	setProperty (Ljava/util/function/UnaryOperator;)Lnet/minecraft/server/DedicatedServerSettings; update
net/minecraft/server/BlockRedstoneWire net/minecraft/world/level/block/RedStoneWireBlock
	f PROPERTY_BY_DIRECTION
	g SHAPE_DOT
	h SHAPES_FLOOR
	i SHAPES_UP
	j SHAPES_CACHE
	k COLORS
	o crossState
	p shouldSignal
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPropertyRedstoneSide; getConnectingSide
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Z)Lnet/minecraft/server/BlockPropertyRedstoneSide; getConnectingSide
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getConnectionState
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z shouldConnectTo
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;II)V updateIndirectNeighbourShapes
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;FF)V spawnParticlesAlongLine
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I calculateTargetStrength
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V updatePowerStrength
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V updatesOnShapeChange
	b (I)I getColorForPower
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z canSurviveOn
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getMissingConnections
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V checkCornerChangeAt
	b_ (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	d (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V updateNeighborsOfNeighboringWires
	h (Lnet/minecraft/server/IBlockData;)Z shouldConnectTo
	l (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/VoxelShape; calculateShape
	m (Lnet/minecraft/server/IBlockData;)Z isCross
	n (Lnet/minecraft/server/IBlockData;)Z isDot
	o (Lnet/minecraft/server/IBlockData;)I getWireSignal
net/minecraft/server/BiomeManager$Provider net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource
	getBiome (III)Lnet/minecraft/server/BiomeBase; getNoiseBiome
ca$a net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate
	a amplifier
	b duration
	c ambient
	d visible
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonObject;)Lca$a; fromJson
	a (Lnet/minecraft/server/MobEffect;)Z matches
net/minecraft/server/EntityPanda net/minecraft/world/entity/animal/Panda
	PICKUP_PREDICATE PANDA_ITEMS
	bA sitAmountO
	bB onBackAmount
	bC onBackAmountO
	bD rollAmount
	bE rollAmountO
	bF lookAtPlayerGoal
	bo rollCounter
	bp UNHAPPY_COUNTER
	bq SNEEZE_COUNTER
	br EAT_COUNTER
	bs MAIN_GENE_ID
	bt HIDDEN_GENE_ID
	bu DATA_ID_FLAGS
	bv BREED_TARGETING
	bw gotBamboo
	bx didBite
	by rollDelta
	bz sitAmount
	A (F)F getRollAmount
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/EntityPanda;)Z access$100
	a (Lnet/minecraft/server/EntityPanda;Lnet/minecraft/server/EntityPanda;)V setGeneFromParents
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/EntityItem;)V pickUpItem
	b (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$200
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityItem;)Z lambda$static$0
	c (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$300
	d (IZ)V setFlag
	d (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$400
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$500
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	eK ()I getUnhappyCounter
	eL ()Z isSneezing
	eM ()Z isSitting
	eN ()Z isOnBack
	eO ()Z isEating
	eU ()I getSneezeCounter
	eX ()Z isRolling
	eY ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	f (Lnet/minecraft/server/EntityPanda;)Lbai$g; access$700
	fd ()Z isBrown
	ff ()Z isScared
	fg ()V setAttributes
	fh ()Z canPerformAction
	fi ()Lnet/minecraft/server/PathfinderTargetCondition; access$600
	fj ()Ljava/util/function/Predicate; access$800
	fk ()I getEatCounter
	fl ()V handleEating
	fm ()V addEatingParticles
	fn ()V updateSitAmount
	fo ()V updateOnBackAnimation
	fp ()V updateRollAmount
	fq ()V handleRoll
	fr ()V afterSneeze
	fs ()Lnet/minecraft/server/EntityPanda$Gene; getOneOfGenesRandomly
	ft ()V tryToSit
	g (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$900
	getActiveGene ()Lnet/minecraft/server/EntityPanda$Gene; getVariant
	h (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$1000
	i (Lnet/minecraft/server/EntityPanda;)V access$1100
	j ()V tick
	j (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$1200
	k (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$1300
	k (Lnet/minecraft/server/ItemStack;)Z isFood
	l (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$1400
	l (Lnet/minecraft/server/ItemStack;)Z isFoodOrCake
	m (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$1500
	n (Lnet/minecraft/server/EntityPanda;)Ljava/util/Random; access$1600
	o ()V registerGoals
	o (Lnet/minecraft/server/EntityPanda;)Z access$1700
	p (Lnet/minecraft/server/EntityPanda;)Z access$1800
	t (I)V setUnhappyCounter
	t (Z)V sit
	u (I)V setSneezeCounter
	u (Z)V setOnBack
	v (I)V setEatCounter
	v (Z)V eat
	w (I)Z getFlag
	w (Z)V sneeze
	x (Z)V roll
	y (F)F getSitAmount
	z (F)F getLieOnBackAmount
net/minecraft/server/EntityIronGolem net/minecraft/world/entity/animal/IronGolem
	b DATA_FLAGS_ID
	bo PERSISTENT_ANGER_TIME
	bp remainingPersistentAngerTime
	bq persistentAngerTarget
	c attackAnimationTick
	d offerFlowerTick
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	C (Lnet/minecraft/server/Entity;)V doPush
	E_ ()I getRemainingPersistentAngerTime
	F_ ()Ljava/util/UUID; getPersistentAngerTarget
	G_ ()V startPersistentAngerTimer
	a (B)V handleEntityEvent
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a_ (I)V setRemainingPersistentAngerTime
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	ce ()Lnet/minecraft/server/Vec3D; getLeashOffset
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/EntityIronGolem$CrackLevel; getCrackiness
	eL ()I getAttackAnimationTick
	eM ()I getOfferFlowerTick
	eO ()F getAttackDamage
	i (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$0
	k ()V aiStep
	l (I)I decreaseAirSupply
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	o ()V registerGoals
	t (Z)V offerFlower
hh$1 net/minecraft/core/particles/ParticleTypes$1
	a val$codec
	e ()Lcom/mojang/serialization/Codec; codec
net/minecraft/server/WorldGenEnder net/minecraft/world/level/levelgen/feature/SpikeFeature
	a SPIKE_CACHE
	a (Lnet/minecraft/server/GeneratorAccessSeed;)Ljava/util/List; getSpikesForLevel
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEndSpikeConfiguration;)Z place
	a (Lnet/minecraft/server/WorldAccess;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEndSpikeConfiguration;Lnet/minecraft/server/WorldGenEnder$Spike;)V placeSpike
net/minecraft/server/WorldGenCarverConfiguration net/minecraft/world/level/levelgen/carver/CarverConfiguration
	a NONE
net/minecraft/server/MethodProfilerResults net/minecraft/util/profiling/ProfileResults
	a ()J getStartTimeNano
	a (Ljava/io/File;)Z saveResults
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	b ()I getStartTimeTicks
	b (Ljava/lang/String;)Ljava/lang/String; demanglePath
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	e ()Ljava/lang/String; getProfilerResults
	f ()I getTickDuration
	g ()J getNanoDuration
net/minecraft/server/ContainerBeacon$SlotBeacon net/minecraft/world/inventory/BeaconMenu$PaymentSlot
	a this$0
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
net/minecraft/server/CriterionTriggerKilled net/minecraft/advancements/critereon/KilledTrigger
	a id
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lbt$a; createInstance
	a (Lnet/minecraft/server/CriterionTriggerKilled;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;)V trigger
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/DamageSource;Lbt$a;)Z lambda$trigger$0
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/IChunkProvider net/minecraft/world/level/chunk/ChunkSource
	a (II)Lnet/minecraft/server/Chunk; getChunkNow
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/server/BlockPosition;)Z isTickingChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Z isEntityTickingChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V updateChunkForced
	a (Lnet/minecraft/server/Entity;)Z isEntityTickingChunk
	a (ZZ)V setSpawnSettings
	b (II)Z hasChunk
	c (II)Lnet/minecraft/server/IBlockAccess; getChunkForLighting
	getChunkAt (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	getChunkAt (IIZ)Lnet/minecraft/server/Chunk; getChunk
	getName ()Ljava/lang/String; gatherStats
	h ()I getLoadedChunksCount
net/minecraft/server/DataConverterSchemaV1022 net/minecraft/util/datafix/schemas/V1022
	a ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$2
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
net/minecraft/server/CriterionTriggerVillagerTrade net/minecraft/advancements/critereon/TradeTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lcr$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityVillagerAbstract;Lnet/minecraft/server/ItemStack;)V trigger
	a (Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/ItemStack;Lcr$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/GameTestHarnessStructures net/minecraft/gametest/framework/StructureUtils
	a testStructuresDir
	a (I)Lnet/minecraft/server/EnumBlockRotation; getRotationForRotationSteps
	a (ILnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;)V clearBlock
	a (ILnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V lambda$clearSpaceForStructure$0
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/WorldServer;)V createNewEmptyStructureBlock
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;ILnet/minecraft/server/WorldServer;Z)Lnet/minecraft/server/TileEntityStructure; spawnStructure
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/WorldServer;Z)Lnet/minecraft/server/TileEntityStructure; createStructureBlock
	a (Ljava/lang/String;Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/DefinedStructure; getStructureTemplate
	a (Ljava/nio/file/Path;)Lnet/minecraft/server/NBTTagCompound; tryLoadStructure
	a (Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/WorldServer;)Ljava/util/Optional; findStructureBlockContainingPos
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)I lambda$findNearestStructureBlock$3
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/StructureBoundingBox; getStructureBoundingBox
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/WorldServer;)V addCommandBlockAndButtonToStartTest
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;)Z doesStructureContain
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;)V forceLoadChunks
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z lambda$findStructureBlockContainingPos$2
	a (Lnet/minecraft/server/Entity;)Z lambda$clearSpaceForStructure$1
	a (Lnet/minecraft/server/EnumBlockRotation;)I getRotationStepsForRotation
	a (Lnet/minecraft/server/StructureBoundingBox;ILnet/minecraft/server/WorldServer;)V clearSpaceForStructure
	a (Lnet/minecraft/server/TileEntityStructure;)Lnet/minecraft/server/AxisAlignedBB; getStructureBounds
	b (Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/WorldServer;)Lnet/minecraft/server/BlockPosition; findNearestStructureBlock
	b (Lnet/minecraft/server/TileEntityStructure;)Lnet/minecraft/server/StructureBoundingBox; getStructureBoundingBox
	c (Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/WorldServer;)Ljava/util/Collection; findStructureBlocks
net/minecraft/server/ScoreboardObjective net/minecraft/world/scores/Objective
	a scoreboard
	b name
	c criteria
	e formattedDisplayName
	f renderType
	a ()Lnet/minecraft/server/Scoreboard; getScoreboard
	a (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; lambda$createFormattedDisplayName$0
	e ()Lnet/minecraft/server/IChatBaseComponent; getFormattedDisplayName
	g ()Lnet/minecraft/server/IChatBaseComponent; createFormattedDisplayName
net/minecraft/server/VillageSiege net/minecraft/world/entity/ai/village/VillageSiege
	a LOGGER
	b hasSetupSiege
	c siegeState
	d zombiesToSpawn
	e nextSpawnTime
	f spawnX
	g spawnY
	h spawnZ
	a (Lnet/minecraft/server/WorldServer;)Z tryToSetupSiege
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Vec3D; findRandomSpawnPos
	a (Lnet/minecraft/server/WorldServer;ZZ)I tick
	b (Lnet/minecraft/server/WorldServer;)V trySpawn
net/minecraft/server/DefinedStructureManager net/minecraft/world/level/levelgen/structure/templatesystem/StructureManager
	a LOGGER
	b structureRepository
	c fixerUpper
	d resourceManager
	e generatedDir
	a (Ljava/io/InputStream;)Lnet/minecraft/server/DefinedStructure; readStructure
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/DefinedStructure; getOrCreate
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/String;)Ljava/nio/file/Path; createPathToStructure
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/DefinedStructure; readStructure
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/DefinedStructure; get
	b (Lnet/minecraft/server/MinecraftKey;Ljava/lang/String;)Ljava/nio/file/Path; createAndValidatePathToStructure
	c (Lnet/minecraft/server/MinecraftKey;)Z save
	d (Lnet/minecraft/server/MinecraftKey;)V remove
	e (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/DefinedStructure; loadFromResource
	f (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/DefinedStructure; loadFromGenerated
	g (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/DefinedStructure; lambda$get$0
net/minecraft/server/BlockDirectional net/minecraft/world/level/block/DirectionalBlock
net/minecraft/server/PathfinderGoalArrowAttack net/minecraft/world/entity/ai/goal/RangedAttackGoal
	a mob
	b rangedAttackMob
	c target
	d attackTime
	e speedModifier
	f seeTime
	g attackIntervalMin
	h attackIntervalMax
	i attackRadius
	j attackRadiusSqr
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
net/minecraft/server/BlockFurnaceFurace net/minecraft/world/level/block/FurnaceBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V openContainer
net/minecraft/server/LootSelectorTag net/minecraft/world/level/storage/loot/entries/TagEntry
	g tag
	h expand
	a ()Lnet/minecraft/server/LootEntryType; getType
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/Item;)V lambda$createItemStack$0
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/server/LootSelectorTag;)Lnet/minecraft/server/Tag; access$000
	a (Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z expandTag
	a (Lnet/minecraft/server/Tag;)Lczp$a; tagContents
	a (Lnet/minecraft/server/Tag;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; lambda$expandTag$2
	b (Lnet/minecraft/server/LootSelectorTag;)Z access$100
	b (Lnet/minecraft/server/Tag;)Lczp$a; expandTag
	b (Lnet/minecraft/server/Tag;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; lambda$tagContents$1
eag$b$a net/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder
	a textureState
	b transparencyState
	c diffuseLightingState
	d shadeModelState
	e alphaState
	f depthTestState
	g cullState
	h lightmapState
	i overlayState
	j fogState
	k layeringState
	l outputState
	m texturingState
	n writeMaskState
	o lineState
	a (Leaf$a;)Leag$b$a; setAlphaState
	a (Leaf$c;)Leag$b$a; setCullState
	a (Leaf$d;)Leag$b$a; setDepthTestState
	a (Leaf$e;)Leag$b$a; setDiffuseLightingState
	a (Leaf$f;)Leag$b$a; setFogState
	a (Leaf$g;)Leag$b$a; setLayeringState
	a (Leaf$h;)Leag$b$a; setLightmapState
	a (Leaf$i;)Leag$b$a; setLineState
	a (Leaf$k;)Leag$b$a; setOutputState
	a (Leaf$l;)Leag$b$a; setOverlayState
	a (Leaf$n;)Leag$b$a; setShadeModelState
	a (Leaf$o;)Leag$b$a; setTextureState
	a (Leaf$p;)Leag$b$a; setTexturingState
	a (Leaf$q;)Leag$b$a; setTransparencyState
	a (Leaf$r;)Leag$b$a; setWriteMaskState
	a (Leag$c;)Leag$b; createCompositeState
	a (Z)Leag$b; createCompositeState
net/minecraft/server/RemoteControlSession net/minecraft/server/rcon/thread/RconClient
	d LOGGER
	e authed
	f client
	g buf
	h rconPassword
	i serverInterface
	a (IILjava/lang/String;)V send
	a (ILjava/lang/String;)V sendCmdResponse
	b ()V stop
	d ()V sendAuthFailure
	e ()V closeSocket
net/minecraft/server/CriterionConditionPlayer net/minecraft/advancements/critereon/PlayerPredicate
	a ANY
	b level
	c gameType
	d stats
	e recipes
	f advancements
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonArray;Lnet/minecraft/server/Statistic;Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)V lambda$serializeToJson$1
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionPlayer; fromJson
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/MinecraftKey;Lcg$c;)V lambda$serializeToJson$3
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/MinecraftKey;Ljava/lang/Boolean;)V lambda$serializeToJson$2
	a (Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map$Entry;)V lambda$advancementPredicateFromJson$0
	a (Lnet/minecraft/server/Entity;)Z matches
	a (Lnet/minecraft/server/Statistic;)Lnet/minecraft/server/MinecraftKey; getStatValueId
	a (Lnet/minecraft/server/StatisticWrapper;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Statistic; getStat
	b (Lcom/google/gson/JsonElement;)Lcg$c; advancementPredicateFromJson
bo$a net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance
	a item
	b durability
	c delta
	a (Lbg$b;Lnet/minecraft/server/CriterionConditionItem;Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lbo$a; changedDurability
	a (Lnet/minecraft/server/CriterionConditionItem;Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lbo$a; changedDurability
	a (Lnet/minecraft/server/ItemStack;I)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
net/minecraft/server/IBlockLightAccess net/minecraft/world/level/BlockAndTintGetter
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	a (Lnet/minecraft/server/EnumDirection;Z)F getShade
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	e (Lnet/minecraft/server/BlockPosition;)Z canSeeSky
	getLightLevel (Lnet/minecraft/server/BlockPosition;I)I getRawBrightness
net/minecraft/server/BlockTorchWall net/minecraft/world/level/block/WallTorchBlock
	a FACING
	b AABBS
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	h (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/VoxelShape; getShape
	i ()Ljava/lang/String; getDescriptionId
net/minecraft/server/WorldLoadListener net/minecraft/server/level/progress/ChunkProgressListener
	a ()V start
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkStatus;)V onStatusChange
	b ()V stop
mo$a net/minecraft/nbt/NbtOps$NbtRecordBuilder
	a this$0
	a ()Lnet/minecraft/server/NBTTagCompound; initBuilder
	a (Ljava/lang/String;Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; append
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTBase;)Lcom/mojang/serialization/DataResult; build
net/minecraft/server/CommandAdvancement$Filter net/minecraft/server/commands/AdvancementCommands$Mode
	f parents
	g children
	h $VALUES
	a (Lnet/minecraft/server/CommandAdvancement$Filter;)Z access$000
	b (Lnet/minecraft/server/CommandAdvancement$Filter;)Z access$100
net/minecraft/server/DataConverterSettingRename net/minecraft/util/datafix/fixes/OptionsRenameFieldFix
	a fixName
	b fieldFrom
	c fieldTo
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
net/minecraft/server/LootItemFunctionCopyNBT$Action net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy
	d name
	e $VALUES
	a (Ljava/lang/String;)Lnet/minecraft/server/LootItemFunctionCopyNBT$Action; getByName
	a (Lnet/minecraft/server/LootItemFunctionCopyNBT$Action;)Ljava/lang/String; access$100
	a (Lnet/minecraft/server/NBTBase;Ldr$h;Ljava/util/List;)V merge
afi$1 net/minecraft/util/LowerCaseEnumTypeAdapterFactory$1
	a val$lowercaseToConstant
	b this$0
net/minecraft/server/ArgumentCriterionValue net/minecraft/commands/arguments/RangeArgument
	a ()Ldx$b; intRange
	b ()Ldx$a; floatRange
crh$a net/minecraft/world/level/levelgen/structure/NetherFossilPieces$NetherFossilPiece
	d templateLocation
	e rotation
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/DefinedStructureManager;)V loadTemplate
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/LootSelectorEntry net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer
	c weight
	e quality
	f functions
	g compositeFunction
	h entry
	a (Lczp$d;)Lczp$a; simpleBuilder
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/LootSelectorEntry;)Ljava/util/function/BiFunction; access$000
bvb$2 net/minecraft/world/level/block/ChestBlock$2
	a ()Ljava/util/Optional; acceptNone
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
	a (Lnet/minecraft/server/TileEntityChest;)Ljava/util/Optional; acceptSingle
	a (Lnet/minecraft/server/TileEntityChest;Lnet/minecraft/server/TileEntityChest;)Ljava/util/Optional; acceptDouble
	b ()Ljava/lang/Object; acceptNone
net/minecraft/server/DataConverterSchemaV1920 net/minecraft/util/datafix/schemas/V1920
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
bvb$3 net/minecraft/world/level/block/ChestBlock$3
	a val$entity
	a ()Lit/unimi/dsi/fastutil/floats/Float2FloatFunction; acceptNone
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
	a (Lnet/minecraft/server/TileEntityChest;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction; acceptSingle
	a (Lnet/minecraft/server/TileEntityChest;Lnet/minecraft/server/TileEntityChest;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction; acceptDouble
	a (Lnet/minecraft/server/TileEntityChest;Lnet/minecraft/server/TileEntityChest;F)F lambda$acceptDouble$0
	b ()Ljava/lang/Object; acceptNone
net/minecraft/server/PacketPlayOutSetSlot net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket
	a containerId
	b slot
	c itemStack
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getSlot
	d ()Lnet/minecraft/server/ItemStack; getItem
bvb$4 net/minecraft/world/level/block/ChestBlock$4
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/DataPackConfiguration net/minecraft/world/level/DataPackConfig
	a DEFAULT
	b CODEC
	c enabled
	d disabled
	a ()Ljava/util/List; getEnabled
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/DataPackConfiguration;)Ljava/util/List; lambda$null$1
	b ()Ljava/util/List; getDisabled
	b (Lnet/minecraft/server/DataPackConfiguration;)Ljava/util/List; lambda$null$0
emo$a net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$SubSound
	n player
	r ()V tick
emo$b net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance
	n player
	o fade
	r ()V tick
bvb$1 net/minecraft/world/level/block/ChestBlock$1
	a ()Ljava/util/Optional; acceptNone
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
	a (Lnet/minecraft/server/TileEntityChest;)Ljava/util/Optional; acceptSingle
	a (Lnet/minecraft/server/TileEntityChest;Lnet/minecraft/server/TileEntityChest;)Ljava/util/Optional; acceptDouble
	b ()Ljava/lang/Object; acceptNone
net/minecraft/server/LootItemFunctionSetTable net/minecraft/world/level/storage/loot/functions/SetContainerLootTable
	a name
	b seed
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/LootItemFunctionSetTable;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lnet/minecraft/server/MinecraftKey;)Ldaf$a; withLootTable
	a (Lnet/minecraft/server/MinecraftKey;J)Ldaf$a; withLootTable
	a (Lnet/minecraft/server/MinecraftKey;J[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$withLootTable$1
	a (Lnet/minecraft/server/MinecraftKey;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$withLootTable$0
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
	b (Lnet/minecraft/server/LootItemFunctionSetTable;)J access$100
net/minecraft/server/BlockMinecartTrackAbstract net/minecraft/world/level/block/BaseRailBlock
	a FLAT_AABB
	b HALF_BLOCK_AABB
	c isStraight
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPropertyTrackPosition;)Z shouldBeRemoved
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V updateState
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/IBlockData; updateState
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z isRail
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; updateDir
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c ()Z isStraight
	d ()Lnet/minecraft/server/IBlockState; getShapeProperty
	f (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	g (Lnet/minecraft/server/IBlockData;)Z isRail
cbb$1 net/minecraft/world/level/block/TripWireHookBlock$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/DataConverterHeightmapRenaming net/minecraft/util/datafix/fixes/HeightmapRenamingFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
net/minecraft/server/BlockWeepingVines net/minecraft/world/level/block/WeepingVines
	e SHAPE
	a (Ljava/util/Random;)I getBlocksToGrowWhenBonemealed
	d ()Lnet/minecraft/server/Block; getBodyBlock
	h (Lnet/minecraft/server/IBlockData;)Z canGrowInto
eag$a$a net/minecraft/client/renderer/RenderType$CompositeRenderType$EqualsStrategy
	a INSTANCE
	b $VALUES
	a (Leag$a;)I hashCode
	a (Leag$a;Leag$a;)Z equals
net/minecraft/server/EntityHorseZombie net/minecraft/world/entity/animal/horse/ZombieHorse
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	dB ()Lnet/minecraft/server/EnumMonsterType; getMobType
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()V randomizeAttributes
	eL ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eV ()V addBehaviourGoals
net/minecraft/server/GameProfileSerializer net/minecraft/nbt/NbtUtils
	a LOGGER
	a (ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder; indent
	a (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/server/DataFixTypes;Lnet/minecraft/server/NBTTagCompound;I)Lnet/minecraft/server/NBTTagCompound; update
	a (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/server/DataFixTypes;Lnet/minecraft/server/NBTTagCompound;II)Lnet/minecraft/server/NBTTagCompound; update
	a (Ljava/lang/StringBuilder;Lnet/minecraft/server/NBTBase;IZ)Ljava/lang/StringBuilder; prettyPrint
	a (Ljava/util/UUID;)Lnet/minecraft/server/NBTTagIntArray; createUUID
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; writeBlockPos
	a (Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/NBTTagCompound; writeFluidState
	a (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/NBTTagCompound; writeBlockState
	a (Lnet/minecraft/server/IBlockDataHolder;Lnet/minecraft/server/IBlockState;Ljava/lang/String;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/IBlockDataHolder; setValueHelper
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Lnet/minecraft/server/NBTBase;)Ljava/util/UUID; loadUUID
	a (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;Z)Z compareNbt
	a (Lnet/minecraft/server/NBTBase;Z)Ljava/lang/String; prettyPrint
	b (Lnet/minecraft/server/NBTBase;)Ljava/lang/String; prettyPrint
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/BlockPosition; readBlockPos
	c (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/IBlockData; readBlockState
	deserialize (Lnet/minecraft/server/NBTTagCompound;)Lcom/mojang/authlib/GameProfile; readGameProfile
	serialize (Lnet/minecraft/server/NBTTagCompound;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/NBTTagCompound; writeGameProfile
net/minecraft/server/DataConverterSchemaV1931 net/minecraft/util/datafix/schemas/V1931
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/PacketPlayOutCustomPayload net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket
	a BRAND
	b DEBUG_PATHFINDING_PACKET
	c DEBUG_NEIGHBORSUPDATE_PACKET
	d DEBUG_CAVES_PACKET
	e DEBUG_STRUCTURES_PACKET
	f DEBUG_WORLDGENATTEMPT_PACKET
	g DEBUG_POI_TICKET_COUNT_PACKET
	h DEBUG_POI_ADDED_PACKET
	i DEBUG_POI_REMOVED_PACKET
	j DEBUG_VILLAGE_SECTIONS
	k DEBUG_GOAL_SELECTOR
	l DEBUG_BRAIN
	m DEBUG_BEE
	n DEBUG_HIVE
	o DEBUG_GAME_TEST_ADD_MARKER
	p DEBUG_GAME_TEST_CLEAR
	q DEBUG_RAIDS
	r identifier
	s data
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getIdentifier
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketDataSerializer; getData
axw$1 net/minecraft/world/entity/ai/gossip/GossipContainer$1
net/minecraft/server/WorldGenEndTrophy net/minecraft/world/level/levelgen/feature/EndPodiumFeature
	a END_PODIUM_LOCATION
	ab active
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/PacketPlayOutTabComplete net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket
	a id
	b suggestions
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lcom/mojang/brigadier/suggestion/Suggestions; getSuggestions
fs$1 net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$1
	a $SwitchMap$com$mojang$brigadier$arguments$StringArgumentType$StringType
net/minecraft/server/DataConverterJigsawRotation net/minecraft/util/datafix/fixes/JigsawRotationFix
	a renames
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
net/minecraft/server/ArgumentSerializer net/minecraft/commands/synchronization/ArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
net/minecraft/server/CommandTitle net/minecraft/server/commands/TitleCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I clearTitle
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;III)I setTimes
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/PacketPlayOutTitle$EnumTitleAction;)I showTitle
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I resetTitle
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/ItemCrossbow net/minecraft/world/item/CrossbowItem
	c startSoundPlayed
	d midLoadSoundPlayed
	a (I)Lnet/minecraft/server/SoundEffect; getStartSound
	a (ILnet/minecraft/server/ItemStack;)F getPowerForTime
	a (Ljava/util/Random;)[F getShotPitches
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)Z tryLoadProjectiles
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;ZZ)Z loadProjectile
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityLiving;)V lambda$shootProjectile$1
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/ItemStack;)Z lambda$containsChargedProjectile$0
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Item;)Z containsChargedProjectile
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbni;)V appendHoverText
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/server/ItemStack;Z)V setCharged
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/ItemStack;FF)V performShooting
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;FZFFF)V shootProjectile
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V onCrossbowShot
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;I)V onUseTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EntityArrow; getArrow
	a (Z)F getRandomShotPitch
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)V addChargedProjectile
	d ()I getDefaultProjectileRange
	d (Lnet/minecraft/server/ItemStack;)Z isCharged
	d_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	e ()Ljava/util/function/Predicate; getSupportedHeldProjectiles
	e_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
	g (Lnet/minecraft/server/ItemStack;)I getChargeDuration
	k (Lnet/minecraft/server/ItemStack;)Ljava/util/List; getChargedProjectiles
	l (Lnet/minecraft/server/ItemStack;)V clearChargedProjectiles
	m (Lnet/minecraft/server/ItemStack;)F getShootingPower
net/minecraft/server/BlockPropertyBedPart net/minecraft/world/level/block/state/properties/BedPart
	c name
	d $VALUES
	a ()Ljava/lang/String; getSerializedName
net/minecraft/server/LightEngineThreaded net/minecraft/server/level/ThreadedLevelLightEngine
	a LOGGER
	b taskMailbox
	c lightTasks
	d chunkMap
	e sorterMailbox
	f taskPerBatch
	g scheduled
	a (I)V setTaskPerBatch
	a (IILjava/util/function/IntSupplier;Lnet/minecraft/server/LightEngineThreaded$Update;Ljava/lang/Runnable;)V addTask
	a (IILnet/minecraft/server/LightEngineThreaded$Update;Ljava/lang/Runnable;)V addTask
	a (IZZ)I runUpdates
	a (Lnet/minecraft/server/BlockPosition;)V checkBlock
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V updateChunkStatus
	a (Lnet/minecraft/server/ChunkCoordIntPair;Ljava/lang/Runnable;)V lambda$lightChunk$21
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/NibbleArray;Z)V queueSectionData
	a (Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BlockPosition;)V lambda$null$17
	a (Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/IChunkAccess; lambda$lightChunk$20
	a (Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/ChunkCoordIntPair;Z)V lambda$lightChunk$18
	a (Lnet/minecraft/server/IChunkAccess;Z)Ljava/util/concurrent/CompletableFuture; lightChunk
	a (Lnet/minecraft/server/LightEngineThreaded$Update;Ljava/lang/Runnable;)V lambda$addTask$13
	a (Lnet/minecraft/server/SectionPosition;)Ljava/lang/String; lambda$queueSectionData$12
	a (Lnet/minecraft/server/SectionPosition;Z)V updateSectionStatus
	b ()V runUpdate
	b (Lnet/minecraft/server/BlockPosition;)Ljava/lang/String; lambda$checkBlock$1
	b (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/lang/String; lambda$retainData$16
	b (Lnet/minecraft/server/ChunkCoordIntPair;Z)V retainData
	b (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/NibbleArray;Z)V lambda$queueSectionData$11
	b (Lnet/minecraft/server/SectionPosition;Z)Ljava/lang/String; lambda$updateSectionStatus$7
	c ()V lambda$tryScheduleUpdate$22
	c (Lnet/minecraft/server/BlockPosition;)V lambda$checkBlock$0
	c (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/lang/String; lambda$updateChunkStatus$4
	c (Lnet/minecraft/server/ChunkCoordIntPair;Z)Ljava/lang/String; lambda$lightChunk$19
	c (Lnet/minecraft/server/SectionPosition;Z)V lambda$updateSectionStatus$6
	d ()I lambda$retainData$14
	d (Lnet/minecraft/server/ChunkCoordIntPair;)V lambda$updateChunkStatus$3
	d (Lnet/minecraft/server/ChunkCoordIntPair;Z)V lambda$retainData$15
	e ()I lambda$queueSectionData$10
	e (Lnet/minecraft/server/ChunkCoordIntPair;Z)Ljava/lang/String; lambda$enableLightSources$9
	f ()I lambda$updateSectionStatus$5
	f (Lnet/minecraft/server/ChunkCoordIntPair;Z)V lambda$enableLightSources$8
	g ()I lambda$updateChunkStatus$2
	queueUpdate ()V tryScheduleUpdate
net/minecraft/server/DataConverterSchemaV1928 net/minecraft/util/datafix/schemas/V1928
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
net/minecraft/server/DataConverterSchemaV1929 net/minecraft/util/datafix/schemas/V1929
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
dds$a com/mojang/blaze3d/audio/Library$ChannelPool
	a ()Lddr; acquire
	a (Lddr;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
dds$b com/mojang/blaze3d/audio/Library$CountingChannelPool
	a limit
	b activeChannels
	a ()Lddr; acquire
	a (Lddr;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
dds$c com/mojang/blaze3d/audio/Library$Pool
	a STATIC
	b STREAMING
	c $VALUES
net/minecraft/server/PacketListenerPlayIn net/minecraft/network/protocol/game/ServerGamePacketListener
	a (Lnet/minecraft/server/PacketPlayInAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/server/PacketPlayInAdvancements;)V handleSeenAdvancements
	a (Lnet/minecraft/server/PacketPlayInArmAnimation;)V handleAnimate
	a (Lnet/minecraft/server/PacketPlayInAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/server/PacketPlayInBEdit;)V handleEditBook
	a (Lnet/minecraft/server/PacketPlayInBeacon;)V handleSetBeaconPacket
	a (Lnet/minecraft/server/PacketPlayInBlockDig;)V handlePlayerAction
	a (Lnet/minecraft/server/PacketPlayInBlockPlace;)V handleUseItem
	a (Lnet/minecraft/server/PacketPlayInBoatMove;)V handlePaddleBoat
	a (Lnet/minecraft/server/PacketPlayInChat;)V handleChat
	a (Lnet/minecraft/server/PacketPlayInClientCommand;)V handleClientCommand
	a (Lnet/minecraft/server/PacketPlayInCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/server/PacketPlayInCustomPayload;)V handleCustomPayload
	a (Lnet/minecraft/server/PacketPlayInDifficultyChange;)V handleChangeDifficulty
	a (Lnet/minecraft/server/PacketPlayInDifficultyLock;)V handleLockDifficulty
	a (Lnet/minecraft/server/PacketPlayInEnchantItem;)V handleContainerButtonClick
	a (Lnet/minecraft/server/PacketPlayInEntityAction;)V handlePlayerCommand
	a (Lnet/minecraft/server/PacketPlayInEntityNBTQuery;)V handleEntityTagQuery
	a (Lnet/minecraft/server/PacketPlayInFlying;)V handleMovePlayer
	a (Lnet/minecraft/server/PacketPlayInHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/server/PacketPlayInItemName;)V handleRenameItem
	a (Lnet/minecraft/server/PacketPlayInJigsawGenerate;)V handleJigsawGenerate
	a (Lnet/minecraft/server/PacketPlayInKeepAlive;)V handleKeepAlive
	a (Lnet/minecraft/server/PacketPlayInPickItem;)V handlePickItem
	a (Lnet/minecraft/server/PacketPlayInRecipeDisplayed;)V handleRecipeBookSeenRecipePacket
	a (Lnet/minecraft/server/PacketPlayInRecipeSettings;)V handleRecipeBookChangeSettingsPacket
	a (Lnet/minecraft/server/PacketPlayInResourcePackStatus;)V handleResourcePackResponse
	a (Lnet/minecraft/server/PacketPlayInSetCommandBlock;)V handleSetCommandBlock
	a (Lnet/minecraft/server/PacketPlayInSetCommandMinecart;)V handleSetCommandMinecart
	a (Lnet/minecraft/server/PacketPlayInSetCreativeSlot;)V handleSetCreativeModeSlot
	a (Lnet/minecraft/server/PacketPlayInSetJigsaw;)V handleSetJigsawBlock
	a (Lnet/minecraft/server/PacketPlayInSettings;)V handleClientInformation
	a (Lnet/minecraft/server/PacketPlayInSpectate;)V handleTeleportToEntityPacket
	a (Lnet/minecraft/server/PacketPlayInSteerVehicle;)V handlePlayerInput
	a (Lnet/minecraft/server/PacketPlayInStruct;)V handleSetStructureBlock
	a (Lnet/minecraft/server/PacketPlayInTabComplete;)V handleCustomCommandSuggestions
	a (Lnet/minecraft/server/PacketPlayInTeleportAccept;)V handleAcceptTeleportPacket
	a (Lnet/minecraft/server/PacketPlayInTileNBTQuery;)V handleBlockEntityTagQuery
	a (Lnet/minecraft/server/PacketPlayInTrSel;)V handleSelectTrade
	a (Lnet/minecraft/server/PacketPlayInTransaction;)V handleContainerAck
	a (Lnet/minecraft/server/PacketPlayInUpdateSign;)V handleSignUpdate
	a (Lnet/minecraft/server/PacketPlayInUseEntity;)V handleInteract
	a (Lnet/minecraft/server/PacketPlayInUseItem;)V handleUseItemOn
	a (Lnet/minecraft/server/PacketPlayInVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/server/PacketPlayInWindowClick;)V handleContainerClick
net/minecraft/server/NavigationAbstract net/minecraft/world/entity/ai/navigation/PathNavigation
	a mob
	b level
	c path
	d speedModifier
	e tick
	f lastStuckCheck
	g lastStuckCheckPos
	h timeoutCachedNode
	i timeoutTimer
	j lastTimeoutCheck
	k timeoutLimit
	l maxDistanceToWaypoint
	m hasDelayedRecomputation
	n timeLastRecompute
	o nodeEvaluator
	p targetPos
	q reachRange
	r maxVisitedNodesMultiplier
	s pathFinder
	D_ ()V trimPath
	a ()Z canUpdatePath
	a (D)V setSpeedModifier
	a (DDDD)Z moveTo
	a (DDDI)Lnet/minecraft/server/PathEntity; createPath
	a (F)V setMaxVisitedNodesMultiplier
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
	a (Ljava/util/Set;I)Lnet/minecraft/server/PathEntity; createPath
	a (Ljava/util/Set;IZI)Lnet/minecraft/server/PathEntity; createPath
	a (Ljava/util/stream/Stream;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/Entity;D)Z moveTo
	a (Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/PathEntity;D)Z moveTo
	a (Lnet/minecraft/server/Vec3D;)V doStuckDetection
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;III)Z canMoveDirectly
	b ()Lnet/minecraft/server/Vec3D; getTempMobPos
	b (Lnet/minecraft/server/BlockPosition;)V recomputePath
	b (Lnet/minecraft/server/Vec3D;)Z shouldTargetNextNodeInDirection
	c ()V tick
	d (Z)V setCanFloat
	e ()V resetStuckTimeout
	g ()V resetMaxVisitedNodesMultiplier
	h ()Lnet/minecraft/server/BlockPosition; getTargetPos
	i ()Z hasDelayedRecomputation
	j ()V recomputePath
	k ()Lnet/minecraft/server/PathEntity; getPath
	l ()V followThePath
	m ()Z isDone
	n ()Z isInProgress
	o ()V stop
	p ()Z isInLiquid
	q ()Lnet/minecraft/server/PathfinderAbstract; getNodeEvaluator
	r ()Z canFloat
	s ()F getMaxDistanceToWaypoint
net/minecraft/server/PathfinderGoalFishSchool net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal
	a mob
	b timeToRecalcPath
	c nextStartTick
	a ()Z canUse
	a (Lnet/minecraft/server/EntityFishSchool;)I nextStartTick
	b ()Z canContinueToUse
	b (Lnet/minecraft/server/EntityFishSchool;)Z lambda$canUse$1
	c ()V start
	c (Lnet/minecraft/server/EntityFishSchool;)Z lambda$canUse$0
	d ()V stop
	e ()V tick
net/minecraft/server/FeatureSizeThreeLayers net/minecraft/world/level/levelgen/feature/featuresize/ThreeLayersFeatureSize
	c CODEC
	d limit
	e upperLimit
	f lowerSize
	g middleSize
	h upperSize
	a (II)I getSizeAtHeight
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lnet/minecraft/server/FeatureSizeThreeLayers;)Ljava/lang/Integer; lambda$null$4
	b ()Lnet/minecraft/server/FeatureSizeType; type
	b (Lnet/minecraft/server/FeatureSizeThreeLayers;)Ljava/lang/Integer; lambda$null$3
	c (Lnet/minecraft/server/FeatureSizeThreeLayers;)Ljava/lang/Integer; lambda$null$2
	d (Lnet/minecraft/server/FeatureSizeThreeLayers;)Ljava/lang/Integer; lambda$null$1
	e (Lnet/minecraft/server/FeatureSizeThreeLayers;)Ljava/lang/Integer; lambda$null$0
net/minecraft/server/WorldGenMegaTreeProviderDarkOak net/minecraft/world/level/block/grower/DarkOakTreeGrower
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredMegaFeature
	a (Ljava/util/Random;Z)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredFeature
net/minecraft/server/PathfinderGoalCrossbowAttack net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal
	a PATHFINDING_DELAY_RANGE
	b mob
	c crossbowState
	d speedModifier
	e attackRadiusSqr
	f seeTime
	g attackDelay
	h updatePathDelay
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
	g ()Z isHoldingCrossbow
	h ()Z isValidTarget
	j ()Z canRun
net/minecraft/server/EntityComplexPart net/minecraft/world/entity/boss/EnderDragonPart
	c name
	d size
	owner parentMob
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aS ()Z isPickable
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	e ()V defineSynchedData
	s (Lnet/minecraft/server/Entity;)Z is
cri$1 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$1
	a $SwitchMap$net$minecraft$core$Direction
dzs$1 net/minecraft/client/renderer/GpuWarnlistManager$1
axw$b net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry
	a target
	b type
	c value
	a ()I weightedValue
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; load
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; store
axw$a net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips
	a entries
	a ()V decay
	a (Laxw$a;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; access$000
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)I lambda$weightedValue$1
	a (Ljava/util/UUID;)Ljava/util/stream/Stream; unpack
	a (Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Laxw$b; lambda$unpack$2
	a (Ljava/util/function/Predicate;)I weightedValue
	a (Ljava/util/function/Predicate;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Z lambda$weightedValue$0
	a (Lnet/minecraft/server/ReputationType;)V makeSureValueIsntTooLowOrTooHigh
	b ()Z isEmpty
	b (Lnet/minecraft/server/ReputationType;)V remove
net/minecraft/server/PacketPlayInAdvancements$Status net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action
	c $VALUES
net/minecraft/server/DataConverterFurnaceRecipesUsed net/minecraft/util/datafix/fixes/FurnaceRecipeFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$3
	a (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateFurnaceContents
	a (Lcom/mojang/datafixers/types/Type;Ljava/util/List;ILcom/mojang/serialization/Dynamic;)V lambda$updateFurnaceContents$5
	a (Ljava/util/List;ILcom/mojang/datafixers/util/Pair;)V lambda$null$4
	b (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$2
	c (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	d (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
ena$b net/minecraft/client/server/LanServerDetection$LanServerList
	a servers
	b isDirty
	a ()Z isDirty
	a (Ljava/lang/String;Ljava/net/InetAddress;)V addServer
	b ()V markClean
	c ()Ljava/util/List; getServers
net/minecraft/server/IntSpread net/minecraft/util/UniformInt
	a CODEC
	b baseValue
	c spread
	a (I)Lnet/minecraft/server/IntSpread; fixed
	a (II)Lnet/minecraft/server/IntSpread; of
	a (III)Lcom/mojang/serialization/Codec; codec
	a (IIILnet/minecraft/server/IntSpread;)Lcom/mojang/serialization/DataResult; lambda$codec$7
	a (Lcom/mojang/datafixers/util/Either;)Lnet/minecraft/server/IntSpread; lambda$static$5
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ljava/util/Random;)I sample
	a (Lnet/minecraft/server/IntSpread;)Lcom/mojang/datafixers/util/Either; lambda$static$6
	b (Lnet/minecraft/server/IntSpread;)Lnet/minecraft/server/IntSpread; lambda$null$4
	c (Lnet/minecraft/server/IntSpread;)Lcom/mojang/serialization/DataResult; lambda$static$3
	d (Lnet/minecraft/server/IntSpread;)Ljava/lang/Integer; lambda$null$1
	e (Lnet/minecraft/server/IntSpread;)Ljava/lang/Integer; lambda$null$0
ena$a net/minecraft/client/server/LanServerDetection$LanServerDetector
	a serverList
	b pingGroup
	c socket
net/minecraft/server/BlockDirtSnow net/minecraft/world/level/block/SnowyDirtBlock
	a SNOWY
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
dds$1 com/mojang/blaze3d/audio/Library$1
	a ()Lddr; acquire
	a (Lddr;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
net/minecraft/server/EntityCat$PathfinderGoalTemptChance net/minecraft/world/entity/animal/Cat$CatTemptGoal
	chosenTarget selectedPlayer
	d cat
	a ()Z canUse
	e ()V tick
	g ()Z canScare
net/minecraft/server/DataConverterSchemaV1909 net/minecraft/util/datafix/schemas/V1909
net/minecraft/server/Advancement$SerializedAdvancement net/minecraft/advancements/Advancement$Builder
	a parentId
	b parent
	c display
	d rewards
	e criteria
	f requirements
	g requirementsStrategy
	a ()Lnet/minecraft/server/Advancement$SerializedAdvancement; advancement
	a (Lab$a;)Lnet/minecraft/server/Advancement$SerializedAdvancement; rewards
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/Advancement$SerializedAdvancement; fromJson
	a (Ljava/lang/String;Lnet/minecraft/server/Criterion;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addCriterion
	a (Ljava/lang/String;Lnet/minecraft/server/CriterionInstance;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addCriterion
	a (Ljava/util/function/Consumer;Ljava/lang/String;)Lnet/minecraft/server/Advancement; save
	a (Ljava/util/function/Function;)Z canBuild
	a (Lnet/minecraft/server/Advancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; parent
	a (Lnet/minecraft/server/AdvancementDisplay;)Lnet/minecraft/server/Advancement$SerializedAdvancement; display
	a (Lnet/minecraft/server/AdvancementRequirements;)Lnet/minecraft/server/Advancement$SerializedAdvancement; requirements
	a (Lnet/minecraft/server/AdvancementRewards;)Lnet/minecraft/server/Advancement$SerializedAdvancement; rewards
	a (Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/AdvancementFrameType;ZZZ)Lnet/minecraft/server/Advancement$SerializedAdvancement; display
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/AdvancementFrameType;ZZZ)Lnet/minecraft/server/Advancement$SerializedAdvancement; display
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Advancement$SerializedAdvancement; parent
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a ([[Ljava/lang/String;)Lnet/minecraft/server/Advancement$SerializedAdvancement; requirements
	b ()Lcom/google/gson/JsonObject; serializeToJson
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Advancement; build
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/Advancement$SerializedAdvancement; fromNetwork
	c ()Ljava/util/Map; getCriteria
	c (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Advancement; lambda$build$0
net/minecraft/server/DataConverterWallProperty net/minecraft/util/datafix/fixes/WallPropertyFix
	a WALL_BLOCKS
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; upgradeBlockStateTag
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; fixWallProperty
	a (Ljava/lang/String;)Ljava/lang/String; mapProperty
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$upgradeBlockStateTag$2
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixWallProperty$1
net/minecraft/server/RegistryGeneration net/minecraft/data/BuiltinRegistries
	WORLDGEN_BIOME BIOME
	a LOGGER
	b REGISTRY
	c CONFIGURED_SURFACE_BUILDER
	d CONFIGURED_CARVER
	e CONFIGURED_FEATURE
	f CONFIGURED_STRUCTURE_FEATURE
	g PROCESSOR_LIST
	h TEMPLATE_POOL
	j NOISE_GENERATOR_SETTINGS
	k LOADERS
	l WRITABLE_REGISTRY
	a ()V bootstrap
	a (Lnet/minecraft/server/IRegistry;ILnet/minecraft/server/ResourceKey;Ljava/lang/Object;)Ljava/lang/Object; registerMapping
	a (Lnet/minecraft/server/IRegistry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/MinecraftKey;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lnet/minecraft/server/MinecraftKey;Ljava/util/function/Supplier;)V lambda$static$6
	a (Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lnet/minecraft/server/IRegistry; registerSimple
	a (Lnet/minecraft/server/ResourceKey;Ljava/util/function/Supplier;)Lnet/minecraft/server/IRegistry; registerSimple
	a (Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/IRegistryWritable;Ljava/util/function/Supplier;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/server/IRegistryWritable; internalRegister
	b ()Lnet/minecraft/server/BiomeBase; lambda$static$5
	c ()Lnet/minecraft/server/ProcessorList; lambda$static$4
	d ()Lnet/minecraft/server/StructureFeature; lambda$static$3
	e ()Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$static$2
	f ()Lnet/minecraft/server/WorldGenCarverWrapper; lambda$static$1
	g ()Lnet/minecraft/server/WorldGenSurfaceComposite; lambda$static$0
net/minecraft/server/BlockSkullPlayer net/minecraft/world/level/block/PlayerHeadBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
net/minecraft/server/BehaviorRetreat net/minecraft/world/entity/ai/behavior/BackUpIfTooClose
	b tooCloseDistance
	c strafeSpeed
	a (Lnet/minecraft/server/EntityInsentient;)Z isTargetVisible
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityInsentient;)Z isTargetTooClose
	c (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/EntityLiving; getTarget
net/minecraft/server/DataConverterSchemaV1906 net/minecraft/util/datafix/schemas/V1906
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$1
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/server/Potions net/minecraft/world/item/alchemy/Potions
	a (Ljava/lang/String;Lnet/minecraft/server/PotionRegistry;)Lnet/minecraft/server/PotionRegistry; register
net/minecraft/server/RecipeShulkerBox net/minecraft/world/item/crafting/ShulkerBoxColoring
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
net/minecraft/server/PiglinBruteAI net/minecraft/world/entity/monster/piglin/PiglinBruteAi
	a ()Lnet/minecraft/server/BehaviorGateSingle; createIdleLookBehaviors
	a (Lnet/minecraft/server/EntityLiving;)Z isAttackAllowed
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$isNearestValidAttackTarget$1
	a (Lnet/minecraft/server/EntityPiglinAbstract;)Ljava/util/Optional; findNearestValidAttackTarget
	a (Lnet/minecraft/server/EntityPiglinAbstract;Lnet/minecraft/server/EntityLiving;)Z isNearestValidAttackTarget
	a (Lnet/minecraft/server/EntityPiglinAbstract;Lnet/minecraft/server/MemoryModuleType;)Ljava/util/Optional; getTargetIfWithinRange
	a (Lnet/minecraft/server/EntityPiglinBrute;)V initMemories
	a (Lnet/minecraft/server/EntityPiglinBrute;Lnet/minecraft/server/Activity;)V lambda$playActivitySound$3
	a (Lnet/minecraft/server/EntityPiglinBrute;Lnet/minecraft/server/BehaviorController;)Lnet/minecraft/server/BehaviorController; makeBrain
	a (Lnet/minecraft/server/EntityPiglinBrute;Lnet/minecraft/server/EntityLiving;)V wasHurtBy
	b ()Lnet/minecraft/server/BehaviorGateSingle; createIdleMovementBehaviors
	b (Lnet/minecraft/server/EntityPiglinAbstract;Lnet/minecraft/server/EntityLiving;)Z lambda$getTargetIfWithinRange$2
	b (Lnet/minecraft/server/EntityPiglinBrute;)V updateActivity
	b (Lnet/minecraft/server/EntityPiglinBrute;Lnet/minecraft/server/BehaviorController;)V initCoreActivity
	b (Lnet/minecraft/server/EntityPiglinBrute;Lnet/minecraft/server/EntityLiving;)V setAngerTarget
	c (Lnet/minecraft/server/EntityPiglinBrute;)V maybePlayActivitySound
	c (Lnet/minecraft/server/EntityPiglinBrute;Lnet/minecraft/server/BehaviorController;)V initIdleActivity
	c (Lnet/minecraft/server/EntityPiglinBrute;Lnet/minecraft/server/EntityLiving;)Z lambda$initFightActivity$0
	d (Lnet/minecraft/server/EntityPiglinBrute;)V playActivitySound
	d (Lnet/minecraft/server/EntityPiglinBrute;Lnet/minecraft/server/BehaviorController;)V initFightActivity
net/minecraft/server/EntityDamageSourceIndirect net/minecraft/world/damagesource/IndirectEntityDamageSource
	a (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/IChatBaseComponent; getLocalizedDeathMessage
	j ()Lnet/minecraft/server/Entity; getDirectEntity
	k ()Lnet/minecraft/server/Entity; getEntity
net/minecraft/server/DataConverterSchemaV1904 net/minecraft/util/datafix/schemas/V1904
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
bae$1 net/minecraft/world/entity/animal/Fox$1
dwr$a net/minecraft/client/multiplayer/ServerData$ServerPackStatus
	a ENABLED
	b DISABLED
	c PROMPT
	d name
	e $VALUES
	a ()Lnet/minecraft/server/IChatBaseComponent; getName
dfy$b com/mojang/realmsclient/client/RealmsClient$Environment
	a PRODUCTION
	b STAGE
	c LOCAL
	d baseUrl
	e protocol
	f $VALUES
dfy$a com/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse
	a COMPATIBLE
	b OUTDATED
	c OTHER
	d $VALUES
net/minecraft/server/Registry net/minecraft/core/IdMap
	a (Ljava/lang/Object;)I getId
	fromId (I)Ljava/lang/Object; byId
czy$b net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation
	a sourcePathText
	b sourcePath
	c targetPathText
	d targetPath
	e op
	a ()Lcom/google/gson/JsonObject; toJson
	a (Lcom/google/gson/JsonObject;)Lczy$b; fromJson
	a (Ljava/util/function/Supplier;Lnet/minecraft/server/NBTBase;)V apply
net/minecraft/server/BlockHay net/minecraft/world/level/block/HayBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;F)V fallOn
net/minecraft/server/BehaviorForgetAnger net/minecraft/world/entity/ai/behavior/StopBeingAngryIfTargetDead
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/WorldGenFeaturePieces net/minecraft/data/worldgen/Pools
	a EMPTY
	b BUILTIN_EMPTY
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate; bootstrap
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate; register
czy$e net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionCopyNBT; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionCopyNBT;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/LootItemConditionKilledByPlayer net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition
	a INSTANCE
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lnet/minecraft/server/LootItemConditionType; getType
	c ()Ldbl$a; killedByPlayer
	d ()Lnet/minecraft/server/LootItemConditionKilledByPlayer; access$000
	e ()Lnet/minecraft/server/LootItemCondition; lambda$killedByPlayer$0
dlr$a net/minecraft/client/gui/components/MultiLineLabel$TextWithWidth
	a text
	b width
	a (Ldlr$a;)Lnet/minecraft/server/FormattedString; access$000
	b (Ldlr$a;)I access$100
doy$a$a net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList$Entry
	a this$1
	b stat
	c statDisplay
	a (Ldfj;IIIIIIIZF)V render
net/minecraft/server/WorldGenFeatureStateProviderSimpl net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider
	b CODEC
	c state
	a ()Lnet/minecraft/server/WorldGenFeatureStateProviders; type
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getState
	a (Lnet/minecraft/server/WorldGenFeatureStateProviderSimpl;)Lnet/minecraft/server/IBlockData; lambda$static$0
net/minecraft/server/LootItemFunctionEnchant net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction
	a LOGGER
	b enchantments
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Enchantment;Ljava/util/Random;)Lnet/minecraft/server/ItemStack; enchantItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionEnchant;)Ljava/util/List; access$100
	a (ZLnet/minecraft/server/ItemStack;Lnet/minecraft/server/Enchantment;)Z lambda$run$0
	a ([Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$randomApplicableEnchantment$1
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
	c ()Lczz$a; randomEnchantment
	d ()Ldaf$a; randomApplicableEnchantment
jw$1 net/minecraft/data/tags/TagsProvider$1
drk$a net/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient
	a this$0
	b ingredient
	c x
	d y
	a ()I getX
	b ()I getY
	c ()Lnet/minecraft/server/ItemStack; getItem
net/minecraft/server/EntityFishingHook$WaterPosition net/minecraft/world/entity/projectile/FishingHook$OpenWaterType
	d $VALUES
czh$1 net/minecraft/world/level/storage/loot/entries/DynamicLoot$1
net/minecraft/server/WorldGenTreeProviderBirch net/minecraft/world/level/block/grower/BirchTreeGrower
	a (Ljava/util/Random;Z)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredFeature
net/minecraft/server/MobEffectAttackDamage net/minecraft/world/effect/AttackDamageMobEffect
	a multiplier
	a (ILnet/minecraft/server/AttributeModifier;)D getAttributeModifierValue
czy$a net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder
	a source
	b ops
	a ()Lczy$a; getThis
	a (Ljava/lang/String;Ljava/lang/String;)Lczy$a; copy
	a (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/LootItemFunctionCopyNBT$Action;)Lczy$a; copy
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Ldaf$a; getThis
net/minecraft/server/WorldGenFeatureBastionRemnant net/minecraft/world/level/levelgen/feature/BastionFeature
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureVillageConfiguration;)Z isFeatureChunk
dxd$a net/minecraft/client/particle/BubblePopParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/NoiseGeneratorPerlin net/minecraft/world/level/levelgen/synth/ImprovedNoise
	a xo
	b yo
	c zo
	d p
	a (DDDDD)D noise
	a (I)I p
	a (IDDD)D gradDot
	a (IIIDDDDDD)D sampleAndLerp
net/minecraft/server/DataConverterSchemaNamed net/minecraft/util/datafix/schemas/NamespacedSchema
	a NAMESPACED_STRING_CODEC
	b NAMESPACED_STRING
	a ()Lcom/mojang/datafixers/types/Type; namespacedString
	a (Ljava/lang/String;)Ljava/lang/String; ensureNamespaced
dar$a net/minecraft/world/level/storage/loot/functions/SetNbtFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetTag; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetTag;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
daa$1 net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$1
bae$p net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal
	a this$0
	a ()Z canUse
	c ()V start
	e ()V tick
bae$q net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal
	a this$0
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	g ()Z canFoxMove
net/minecraft/server/WorldGenFeatureVillageSnowy net/minecraft/data/worldgen/SnowyVillagePools
	a START
	a ()V bootstrap
net/minecraft/server/SensorVillagerBabies net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/EntityLiving;)Ljava/util/List; getNearestVillagerBabies
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	b (Lnet/minecraft/server/EntityLiving;)Z isVillagerBaby
	c (Lnet/minecraft/server/EntityLiving;)Ljava/util/List; getVisibleEntities
net/minecraft/server/Enchantment net/minecraft/world/item/enchantment/Enchantment
	a slots
	c descriptionId
	d rarity
	itemTarget category
	a (I)I getMinCost
	a (ILnet/minecraft/server/DamageSource;)I getDamageProtection
	a (ILnet/minecraft/server/EnumMonsterType;)F getDamageBonus
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	a (Lnet/minecraft/server/EntityLiving;)Ljava/util/Map; getSlotItems
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;I)V doPostAttack
	b (I)I getMaxCost
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;I)V doPostHurt
	c ()Z isCurse
	c (I)Lnet/minecraft/server/Enchantment; byId
	d ()Lnet/minecraft/server/Enchantment$Rarity; getRarity
	d (I)Lnet/minecraft/server/IChatBaseComponent; getFullname
	f ()Ljava/lang/String; getOrCreateDescriptionId
	g ()Ljava/lang/String; getDescriptionId
	getStartLevel ()I getMinLevel
	h ()Z isTradeable
	i ()Z isDiscoverable
	isCompatible (Lnet/minecraft/server/Enchantment;)Z isCompatibleWith
	isTreasure ()Z isTreasureOnly
dpv$1 net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen$1
	a $SwitchMap$net$minecraft$world$level$block$entity$CommandBlockEntity$Mode
bae$n net/minecraft/world/entity/animal/Fox$FoxPanicGoal
	g this$0
	a ()Z canUse
net/minecraft/server/DefinedStructure$EntityInfo net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo
	a pos
	b blockPos
	c nbt
bae$o net/minecraft/world/entity/animal/Fox$FoxPounceGoal
	a this$0
	C_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
eod$1 net/minecraft/realms/RealmsConnect$1
	a val$hostname
	b val$port
	c val$minecraft
	d this$0
	a (Ldjw;Leoa;)V lambda$run$2
	a (Lnet/minecraft/server/IChatBaseComponent;)V lambda$run$0
	b (Ldjw;Leoa;)V lambda$run$1
bae$t net/minecraft/world/entity/animal/Fox$SleepGoal
	b this$0
	c countdown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	j ()Z canSleep
bae$u net/minecraft/world/entity/animal/Fox$StalkPreyGoal
	a this$0
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
bae$r net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal
	b this$0
	c relX
	d relZ
	e lookTime
	f looksRemaining
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	j ()V resetLook
bae$s net/minecraft/world/entity/animal/Fox$SeekShelterGoal
	b this$0
	c interval
	a ()Z canUse
	c ()V start
net/minecraft/server/WorldGenTreeProviderSpruce net/minecraft/world/level/block/grower/SpruceTreeGrower
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredMegaFeature
	a (Ljava/util/Random;Z)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredFeature
net/minecraft/server/SystemUtils$OS net/minecraft/Util$OS
	f $VALUES
	a (Ljava/io/File;)V openFile
	a (Ljava/lang/String;)V openUri
	a (Ljava/net/URI;)V openUri
	a (Ljava/net/URL;)V openUrl
	b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
	c (Ljava/net/URL;)Ljava/lang/Process; lambda$openUrl$0
net/minecraft/server/BlockSnow net/minecraft/world/level/block/SnowLayerBlock
	b SHAPE_BY_LAYER
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getVisualShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	c_ (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getBlockSupportShape
bae$a net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal
	i this$0
	j trustedLastHurtBy
	k trustedLastHurt
	l timestamp
	a ()Z canUse
	c ()V start
net/minecraft/server/CriterionTriggerAbstract net/minecraft/advancements/critereon/SimpleCriterionTrigger
	a players
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Laf$a;)V addPlayerListener
	a (Lnet/minecraft/server/EntityPlayer;Ljava/util/function/Predicate;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
	b (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;)Ljava/util/Set; lambda$addPlayerListener$0
	b (Lnet/minecraft/server/AdvancementDataPlayer;Laf$a;)V removePlayerListener
bae$d net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal
	a this$0
	b alertableTargeting
	g ()Z hasShelter
	h ()Z alertable
net/minecraft/server/DataConverterUUID net/minecraft/util/datafix/fixes/EntityStringUuidFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
cyv$b net/minecraft/world/level/storage/loot/LootTable$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootTable; deserialize
	a (Lnet/minecraft/server/LootTable;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
bae$e net/minecraft/world/entity/animal/Fox$FoxBreedGoal
	d this$0
	c ()V start
	g ()V breed
cyv$a net/minecraft/world/level/storage/loot/LootTable$Builder
	a pools
	b functions
	c paramSet
	a ()Lcyv$a; unwrap
	a (Lcyu$a;)Lcyv$a; withPool
	a (Ldag$a;)Lcyv$a; apply
	a (Lnet/minecraft/server/LootContextParameterSet;)Lcyv$a; setParamSet
	b ()Lnet/minecraft/server/LootTable; build
	b (Ldag$a;)Ljava/lang/Object; apply
	c ()Ljava/lang/Object; unwrap
bae$b net/minecraft/world/entity/animal/Fox$FaceplantGoal
	a countdown
	b this$0
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bae$c net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector
	a this$0
	a (Lnet/minecraft/server/EntityLiving;)Z test
bae$h net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal
	a this$0
	b fox
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
bae$i net/minecraft/world/entity/animal/Fox$FoxGroupData
	a type
bae$f net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal
	g ticksWaited
	h this$0
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	c ()V start
	e ()V tick
	h ()D acceptedDistance
	k ()Z shouldRecalculatePath
	n ()V onReachedTarget
net/minecraft/server/CommandEnchant net/minecraft/server/commands/EnchantCommand
	a ERROR_NOT_LIVING_ENTITY
	b ERROR_NO_ITEM
	c ERROR_INCOMPATIBLE
	d ERROR_LEVEL_TOO_HIGH
	e ERROR_NOTHING_HAPPENED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$4
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/Enchantment;I)I enchant
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
bae$g net/minecraft/world/entity/animal/Fox$FoxFloatGoal
	a this$0
	a ()Z canUse
	c ()V start
net/minecraft/server/PathfinderGoalRaid net/minecraft/world/entity/ai/goal/PathfindToRaidGoal
	a mob
	a ()Z canUse
	a (Lnet/minecraft/server/Raid;)V recruitNearby
	a (Lnet/minecraft/server/Raid;Lnet/minecraft/server/EntityRaider;)Z lambda$recruitNearby$0
	b ()Z canContinueToUse
	e ()V tick
net/minecraft/server/DoubleBlockFinder$Result$Double net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double
	a first
	b second
bae$l net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal
	b this$0
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLiving;D)V checkAndPerformAttack
	c ()V start
bae$m net/minecraft/world/entity/animal/Fox$FoxMoveControl
	i this$0
	a ()V tick
bae$j net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal
	g this$0
	a ()Z canUse
	b ()Z canContinueToUse
bae$k net/minecraft/world/entity/animal/Fox$FoxLookControl
	h this$0
	a ()V tick
	b ()Z resetXRotOnTick
azl$a net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker
	a this$0
	b levels
	a ()V runAllUpdates
	a (JI)V setLevel
	b (J)I getLevelFromSource
	c (J)I getLevel
net/minecraft/server/Behavior$Status net/minecraft/world/entity/ai/behavior/Behavior$Status
	c $VALUES
czh$a net/minecraft/world/level/storage/loot/entries/DynamicLoot$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorDynamic; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorDynamic;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
net/minecraft/server/WorldGenFeatureVillagePlain net/minecraft/data/worldgen/PlainVillagePools
	a START
	a ()V bootstrap
net/minecraft/server/BlockCoralBase net/minecraft/world/level/block/BaseCoralPlantTypeBlock
	a AABB
	b WATERLOGGED
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V tryScheduleDieTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z scanForWater
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
ani$1 net/minecraft/util/datafix/schemas/V99$1
cyv$1 net/minecraft/world/level/storage/loot/LootTable$1
net/minecraft/server/ChunkSection net/minecraft/world/level/chunk/LevelChunkSection
	GLOBAL_PALETTE GLOBAL_BLOCKSTATE_PALETTE
	blockIds states
	e tickingFluidCount
	yPos bottomBlockY
	a ()V acquire
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/server/ChunkSection;)Z isEmpty
	a (Lnet/minecraft/server/IBlockData;I)V lambda$recalcBlockCounts$0
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()V release
	b (III)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z isEmpty
	d ()Z isRandomlyTicking
	f ()Z isRandomlyTickingFluids
	getBlocks ()Lnet/minecraft/server/DataPaletteBlock; getStates
	getType (III)Lnet/minecraft/server/IBlockData; getBlockState
	getYPosition ()I bottomBlockY
	j ()I getSerializedSize
	setType (IIILnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; setBlockState
	setType (IIILnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
	shouldTick ()Z isRandomlyTickingBlocks
net/minecraft/server/GenLayerZoomerBiome net/minecraft/world/level/biome/NearestNeighborBiomeZoomer
	b $VALUES
	a (JIIILnet/minecraft/server/BiomeManager$Provider;)Lnet/minecraft/server/BiomeBase; getBiome
net/minecraft/server/PathfinderGoalRandomStroll net/minecraft/world/entity/ai/goal/RandomStrollGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f interval
	g forceTrigger
	h checkNoActionTime
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	g ()Lnet/minecraft/server/Vec3D; getPosition
	h ()V trigger
	setTimeBetweenMovement (I)V setInterval
daa$b net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEnchantLevel; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEnchantLevel;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
daa$a net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder
	a levels
	b treasure
	a ()Ldaa$a; getThis
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Ldaf$a; getThis
	e ()Ldaa$a; allowTreasure
net/minecraft/server/DragonControllerHold net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase
	b NEW_TARGET_TARGETING
	c currentPath
	d targetLocation
	e clockwise
	a (Lnet/minecraft/server/EntityEnderCrystal;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DamageSource;Lnet/minecraft/server/EntityHuman;)V onCrystalDestroyed
	a (Lnet/minecraft/server/EntityHuman;)V strafePlayer
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
net/minecraft/server/WorldGenStronghold net/minecraft/world/level/levelgen/feature/StrongholdFeature
	a ()Lckx$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z isFeatureChunk
net/minecraft/server/WorldGenDecoratorConfigured net/minecraft/world/level/levelgen/placement/ConfiguredDecorator
	a CODEC
	b decorator
	c config
	a (Lnet/minecraft/server/WorldGenDecoratorConfigured;)Ljava/lang/Object; decorated
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	b ()Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration; config
	b (Lnet/minecraft/server/WorldGenDecoratorConfigured;)Lnet/minecraft/server/WorldGenDecoratorConfigured; decorated
	c (Lnet/minecraft/server/WorldGenDecoratorConfigured;)Lnet/minecraft/server/WorldGenDecorator; lambda$static$0
net/minecraft/server/RecipeStonecutting net/minecraft/world/item/crafting/StonecutterRecipe
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
net/minecraft/server/CriterionConditionMobEffect net/minecraft/advancements/critereon/MobEffectsPredicate
	a ANY
	b effects
	a ()Lnet/minecraft/server/CriterionConditionMobEffect; effects
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionMobEffect; fromJson
	a (Ljava/util/Map;)Z matches
	a (Lnet/minecraft/server/Entity;)Z matches
	a (Lnet/minecraft/server/EntityLiving;)Z matches
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
	a (Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/CriterionConditionMobEffect; and
	a (Lnet/minecraft/server/MobEffectList;Lca$a;)Lnet/minecraft/server/CriterionConditionMobEffect; and
	b ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/server/CriterionInstanceAbstract net/minecraft/advancements/critereon/AbstractCriterionTriggerInstance
	a criterion
	b player
	a ()Lnet/minecraft/server/MinecraftKey; getCriterion
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	b ()Lbg$b; getPlayerPredicate
net/minecraft/server/IRecipeComplex net/minecraft/world/item/crafting/CustomRecipe
	a id
	af_ ()Z isSpecial
	c ()Lnet/minecraft/server/ItemStack; getResultItem
	f ()Lnet/minecraft/server/MinecraftKey; getId
jw$a net/minecraft/data/tags/TagsProvider$TagAppender
	a builder
	b registry
	c source
	a (Laej$e;)Ljw$a; addTag
	a (Ljava/lang/Object;)Ljw$a; add
	a (Lnet/minecraft/server/MinecraftKey;)Ljw$a; addOptional
	a ([Ljava/lang/Object;)Ljw$a; add
	b (Lnet/minecraft/server/MinecraftKey;)Ljw$a; addOptionalTag
	c (Lnet/minecraft/server/MinecraftKey;)V lambda$add$0
net/minecraft/server/PersistentScoreboard net/minecraft/world/scores/ScoreboardSaveData
	a LOGGER
	b scoreboard
	c delayLoad
	a ()Lnet/minecraft/server/NBTTagList; saveTeams
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/IScoreboardCriteria;)V lambda$loadObjectives$0
	a (Lnet/minecraft/server/NBTTagList;)V loadTeams
	a (Lnet/minecraft/server/Scoreboard;)V setScoreboard
	a (Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/NBTTagList;)V loadTeamPlayers
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b (Lnet/minecraft/server/NBTTagList;)V loadObjectives
	c (Lnet/minecraft/server/NBTTagCompound;)V loadDisplaySlots
	d (Lnet/minecraft/server/NBTTagCompound;)V saveDisplaySlots
	e ()Lnet/minecraft/server/NBTTagList; saveObjectives
net/minecraft/server/DefinedStructureProcessorBlackstoneReplace net/minecraft/world/level/levelgen/structure/templatesystem/BlackstoneReplaceProcessor
	a CODEC
	b INSTANCE
	c replacements
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Ljava/util/HashMap;)V lambda$new$1
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
	b ()Lnet/minecraft/server/DefinedStructureProcessorBlackstoneReplace; lambda$static$0
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdLibrary net/minecraft/world/level/levelgen/structure/StrongholdPieces$Library
	a isTall
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdLibrary; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/WorldGenCavesOcean net/minecraft/world/level/levelgen/carver/UnderwaterCaveWorldCarver
	a (Lnet/minecraft/server/IChunkAccess;IIIIIIII)Z hasWater
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;IIIIIIIILorg/apache/commons/lang3/mutable/MutableBoolean;)Z carveBlock
	a (Lnet/minecraft/server/WorldGenCarverAbstract;Lnet/minecraft/server/IChunkAccess;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;IIIIIIII)Z carveBlock
net/minecraft/server/ItemCooldown$Info net/minecraft/world/item/ItemCooldowns$CooldownInstance
	a this$0
	b startTime
	endTick endTime
	a (Lnet/minecraft/server/ItemCooldown$Info;)I access$000
	b (Lnet/minecraft/server/ItemCooldown$Info;)I access$100
net/minecraft/server/EntitySnowball net/minecraft/world/entity/projectile/Snowball
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/MovingObjectPositionEntity;)V onHitEntity
	h ()Lnet/minecraft/server/Item; getDefaultItem
	m ()Lnet/minecraft/server/ParticleParam; getParticle
net/minecraft/server/ChunkEmpty net/minecraft/world/level/chunk/EmptyLevelChunk
	b BIOMES
	a (II)Z isYSpaceEmpty
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/List;Ljava/util/function/Predicate;)V getEntitiesOfClass
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Chunk$EnumTileEntityState;)Lnet/minecraft/server/TileEntity; getBlockEntity
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/server/Entity;)V addEntity
	a (Lnet/minecraft/server/Entity;I)V removeEntity
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/List;Ljava/util/function/Predicate;)V getEntities
	a (Lnet/minecraft/server/TileEntity;)V addBlockEntity
	a ([Lnet/minecraft/server/BiomeBase;)V lambda$static$0
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/Entity;)V removeEntity
	d (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	f (Lnet/minecraft/server/BlockPosition;)I getLightBlock
	g (Lnet/minecraft/server/BlockPosition;)I getLightEmission
	s ()V markUnsaved
	t ()Z isEmpty
	u ()Lnet/minecraft/server/PlayerChunk$State; getFullStatus
btd$c net/minecraft/world/level/biome/MobSpawnSettings$SpawnerData
	b CODEC
	c type
	d minCount
	e maxCount
	a (Lbtd$c;)Ljava/lang/Integer; lambda$null$3
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	b (Lbtd$c;)Ljava/lang/Integer; lambda$null$2
	c (Lbtd$c;)Ljava/lang/Integer; lambda$null$1
	d (Lbtd$c;)Lnet/minecraft/server/EntityTypes; lambda$null$0
btd$b net/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost
	a CODEC
	b energyBudget
	c charge
	a ()D getEnergyBudget
	a (Lbtd$b;)Ljava/lang/Double; lambda$null$1
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	b ()D getCharge
	b (Lbtd$b;)Ljava/lang/Double; lambda$null$0
net/minecraft/server/PlayerInventory net/minecraft/world/entity/player/Inventory
	extraSlots offhand
	f compartments
	h timesChanged
	itemInHandIndex selected
	Q ()Lnet/minecraft/server/IChatBaseComponent; getName
	X_ ()V setChanged
	Y_ ()V clearContent
	Z_ ()I getContainerSize
	a (D)V swapPaint
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/EntityHuman;)V lambda$hurtArmor$1
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Ljava/util/function/Predicate;ILnet/minecraft/server/IInventory;)I clearOrCountMatchingItems
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/server/DamageSource;F)V hurtArmor
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/server/ItemStack;)V setPickedItem
	a (Lnet/minecraft/server/NBTTagList;)Lnet/minecraft/server/NBTTagList; save
	a (Lnet/minecraft/server/PlayerInventory;)V replaceWith
	a (Lnet/minecraft/server/Tag;)Z contains
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;)V placeItemBackInInventory
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/server/ItemStack;)I findSlotMatchingItem
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isSameItem
	b (Lnet/minecraft/server/NBTTagList;)V load
	c ()Z isEmpty
	c (I)V pickSlot
	c (ILnet/minecraft/server/ItemStack;)Z add
	c (Lnet/minecraft/server/ItemStack;)I findSlotMatchingUnusedItem
	d (I)Z isHotbarSlot
	d (ILnet/minecraft/server/ItemStack;)I addResource
	dropContents ()V dropAll
	e (I)Lnet/minecraft/server/ItemStack; getArmor
	f (Lnet/minecraft/server/ItemStack;)V removeItem
	firstPartial (Lnet/minecraft/server/ItemStack;)I getSlotWithRemainingSpace
	getFirstEmptySlotIndex ()I getFreeSlot
	getHotbarSize ()I getSelectionSize
	getItemInHand ()Lnet/minecraft/server/ItemStack; getSelected
	h (Lnet/minecraft/server/ItemStack;)Z contains
	i ()I getSuitableHotbarSlot
	i (Lnet/minecraft/server/ItemStack;)I addResource
	isSimilarAndNotFull (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z hasRemainingSpaceForItem
	j ()V tick
	j (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; lambda$add$0
	l ()I getTimesChanged
	pickup (Lnet/minecraft/server/ItemStack;)Z add
btd$a net/minecraft/world/level/biome/MobSpawnSettings$Builder
	a spawners
	b mobSpawnCosts
	c creatureGenerationProbability
	d playerCanSpawn
	a ()Lbtd$a; setPlayerCanSpawn
	a (F)Lbtd$a; creatureGenerationProbability
	a (Ljava/util/Map$Entry;)Ljava/util/List; lambda$build$2
	a (Lnet/minecraft/server/EntityTypes;DD)Lbtd$a; addMobCharge
	a (Lnet/minecraft/server/EnumCreatureType;)Ljava/util/List; lambda$new$1
	a (Lnet/minecraft/server/EnumCreatureType;Lbtd$c;)Lbtd$a; addSpawn
	b ()Lnet/minecraft/server/BiomeSettingsMobs; build
	b (Lnet/minecraft/server/EnumCreatureType;)Lnet/minecraft/server/EnumCreatureType; lambda$new$0
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSimpleT net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleTopRoom
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
net/minecraft/server/EntityFishingHook net/minecraft/world/entity/projectile/FishingHook
	ag nibble
	ah timeUntilLured
	ai timeUntilHooked
	aj fishAngle
	ak openWater
	am currentState
	an luck
	ao lureSpeed
	b syncronizedRandom
	c biting
	d outOfWaterTime
	e DATA_HOOKED_ENTITY
	f DATA_BITING
	g life
	hooked hookedIn
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (B)V handleEntityEvent
	a (D)Z shouldRenderAtSqrDistance
	a (DDDFFIZ)V lerpTo
	a (Lnet/minecraft/server/BlockPosition;)V catchingFish
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EntityFishingHook$WaterPosition; getOpenWaterTypeForArea
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;)Z canHitEntity
	a (Lnet/minecraft/server/EntityFishingHook$WaterPosition;Lnet/minecraft/server/EntityFishingHook$WaterPosition;)Lnet/minecraft/server/EntityFishingHook$WaterPosition; lambda$getOpenWaterTypeForArea$0
	a (Lnet/minecraft/server/EntityHuman;)Z shouldStopFishing
	a (Lnet/minecraft/server/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/server/MovingObjectPositionEntity;)V onHitEntity
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aB ()Z isMovementNoisy
	ac ()V remove
	b (Lnet/minecraft/server/BlockPosition;)Z calculateOpenWater
	b (Lnet/minecraft/server/ItemStack;)I retrieve
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bN ()Z canChangeDimensions
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EntityFishingHook$WaterPosition; getOpenWaterTypeForBlock
	e ()V defineSynchedData
	g ()Z isOpenWaterFishing
	getOwner ()Lnet/minecraft/server/EntityHuman; getPlayerOwner
	j ()V tick
	k ()Lnet/minecraft/server/Entity; getHookedIn
	m ()V checkCollision
	n ()V setHookedEntity
	reel ()V bringInHookedEntity
dxu$1 net/minecraft/client/particle/LavaParticle$1
net/minecraft/server/BehaviorLookWalk net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget
	b speedModifier
	c closeEnoughDistance
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/PacketPlayOutUnloadChunk net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket
	a x
	b z
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getZ
net/minecraft/server/PacketPlayInDifficultyLock net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket
	a locked
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Z isLocked
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
it$a net/minecraft/data/models/blockstates/VariantProperty$Value
	a this$0
	b value
	a ()Lit; getKey
	a (Lcom/google/gson/JsonObject;)V addToVariant
dbu$b net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionWeatherCheck;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionWeatherCheck; deserialize
dbu$a net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder
	a isRaining
	b isThundering
	a (Ljava/lang/Boolean;)Ldbu$a; setRaining
	b ()Lnet/minecraft/server/LootItemConditionWeatherCheck; build
	b (Ljava/lang/Boolean;)Ldbu$a; setThundering
dbd$1 net/minecraft/world/level/storage/loot/predicates/ConditionReference$1
net/minecraft/server/RecipeFireworksFade net/minecraft/world/item/crafting/FireworkStarFadeRecipe
	a STAR_INGREDIENT
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
net/minecraft/server/BehaviorOutsideCelebrate net/minecraft/world/entity/ai/behavior/GoOutsideToCelebrate
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
net/minecraft/server/CommandTime net/minecraft/server/commands/TimeCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I setTime
	a (Lnet/minecraft/server/WorldServer;)I getDayTime
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	b (Lnet/minecraft/server/CommandListenerWrapper;I)I addTime
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	c (Lnet/minecraft/server/CommandListenerWrapper;I)I queryTime
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/BehaviorHide net/minecraft/world/entity/ai/behavior/SetHiddenState
	b closeEnoughDist
	c stayHiddenTicks
	d ticksHidden
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
dm$b net/minecraft/commands/arguments/GameProfileArgument$SelectorResult
	a selector
dm$a net/minecraft/commands/arguments/GameProfileArgument$Result
dbu$1 net/minecraft/world/level/storage/loot/predicates/WeatherCheck$1
net/minecraft/server/CriterionTriggerLocation net/minecraft/advancements/critereon/LocationTrigger
	a id
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lbx$a; createInstance
	a (Lnet/minecraft/server/CriterionTriggerLocation;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lnet/minecraft/server/EntityPlayer;)V trigger
	a (Lnet/minecraft/server/EntityPlayer;Lbx$a;)Z lambda$trigger$0
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
dmu$1 net/minecraft/client/gui/font/FontTexture$1
cku$b net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader
	a (Ljava/lang/Long;)Ljava/util/List; load
net/minecraft/server/BlockBarrel net/minecraft/world/level/block/BarrelBlock
	a FACING
	b OPEN
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/DataConverterEntityRename net/minecraft/util/datafix/fixes/EntityTheRenameningFix
	a RENAMED_IDS
	b RENAMED_BLOCKS
	c RENAMED_ITEMS
	a (Ljava/lang/String;)Ljava/lang/String; rename
zm$2 net/minecraft/server/gui/MinecraftServerGui$2
	a this$0
zm$1 net/minecraft/server/gui/MinecraftServerGui$1
	a val$gui
	b val$frame
	c val$server
net/minecraft/server/WorldGenFeaturePillagerOutpost net/minecraft/world/level/levelgen/feature/PillagerOutpostFeature
	u OUTPOST_ENEMIES
	a (Lnet/minecraft/server/ChunkGenerator;JLnet/minecraft/server/SeededRandom;II)Z isNearVillage
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureVillageConfiguration;)Z isFeatureChunk
	c ()Ljava/util/List; getSpecialEnemies
dyx$a net/minecraft/client/particle/WaterCurrentDownParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/WorldGenFeatureBastionUnits net/minecraft/data/worldgen/BastionHousingUnitsPools
	a ()V bootstrap
net/minecraft/server/WhiteListEntry net/minecraft/server/players/UserWhiteListEntry
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
net/minecraft/server/RecipeBookClone net/minecraft/world/item/crafting/BookCloningRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	b (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/NonNullList; getRemainingItems
	b (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/NonNullList; getRemainingItems
net/minecraft/server/BlockUtil net/minecraft/BlockUtil
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/EnumDirection;I)I getLimit
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection$EnumAxis;ILnet/minecraft/server/EnumDirection$EnumAxis;ILjava/util/function/Predicate;)Lnet/minecraft/server/BlockUtil$Rectangle; getLargestRectangleAround
	a ([I)Lcom/mojang/datafixers/util/Pair; getMaxRectangleLocation
net/minecraft/server/BiomeFog$GrassColor net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier
	d CODEC
	e name
	f BY_NAME
	g $VALUES
	a ()Ljava/lang/String; getSerializedName
	a (DDI)I modifyColor
	a (Ljava/lang/String;)Lnet/minecraft/server/BiomeFog$GrassColor; byName
	a (Lnet/minecraft/server/BiomeFog$GrassColor;)Lnet/minecraft/server/BiomeFog$GrassColor; lambda$static$0
	b ()Ljava/lang/String; getName
net/minecraft/server/LootItemConditionMatchTool net/minecraft/world/level/storage/loot/predicates/MatchTool
	a predicate
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lbq$a;)Ldbl$a; toolMatches
	a (Lnet/minecraft/server/LootItemConditionMatchTool;)Lnet/minecraft/server/CriterionConditionItem; access$000
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lnet/minecraft/server/LootItemConditionType; getType
	b (Lbq$a;)Lnet/minecraft/server/LootItemCondition; lambda$toolMatches$0
czy$1 net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$1
net/minecraft/server/DefinedStructureRuleTestType net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType
	a ALWAYS_TRUE_TEST
	b BLOCK_TEST
	c BLOCKSTATE_TEST
	d TAG_TEST
	e RANDOM_BLOCK_TEST
	f RANDOM_BLOCKSTATE_TEST
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$0
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/DefinedStructureRuleTestType; register
dlr$1 net/minecraft/client/gui/components/MultiLineLabel$1
	a ()I getLineCount
	a (Ldfj;II)I renderCentered
	a (Ldfj;IIII)I renderCentered
	b (Ldfj;IIII)I renderLeftAligned
	c (Ldfj;IIII)I renderLeftAlignedNoShadow
net/minecraft/server/BlockHopper net/minecraft/world/level/block/HopperBlock
	c TOP
	d FUNNEL
	e CONVEX_BASE
	f BASE
	g DOWN_SHAPE
	h EAST_SHAPE
	i NORTH_SHAPE
	j SOUTH_SHAPE
	k WEST_SHAPE
	o DOWN_INTERACTION_SHAPE
	p EAST_INTERACTION_SHAPE
	q NORTH_INTERACTION_SHAPE
	r SOUTH_INTERACTION_SHAPE
	s WEST_INTERACTION_SHAPE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V checkPoweredState
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
net/minecraft/server/EntitySlime$PathfinderGoalSlimeRandomJump net/minecraft/world/entity/monster/Slime$SlimeFloatGoal
	a slime
	a ()Z canUse
	e ()V tick
net/minecraft/server/BlockBanner net/minecraft/world/level/block/BannerBlock
	b BY_COLOR
	c SHAPE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/Block; byColor
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
cj$a net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance
	a item
	a (Lnet/minecraft/server/CriterionConditionItem;)Lcj$a; shotCrossbow
	a (Lnet/minecraft/server/IMaterial;)Lcj$a; shotCrossbow
	a (Lnet/minecraft/server/ItemStack;)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
dlr$2 net/minecraft/client/gui/components/MultiLineLabel$2
	b val$font
	c val$lines
	a ()I getLineCount
	a (Ldfj;II)I renderCentered
	a (Ldfj;IIII)I renderCentered
	b (Ldfj;IIII)I renderLeftAligned
	c (Ldfj;IIII)I renderLeftAlignedNoShadow
dbd$a net/minecraft/world/level/storage/loot/predicates/ConditionReference$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionReference;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionReference; deserialize
dar$1 net/minecraft/world/level/storage/loot/functions/SetNbtFunction$1
net/minecraft/server/EntityEnderSignal net/minecraft/world/entity/projectile/EyeOfEnder
	b DATA_ITEM_STACK
	despawnTimer life
	shouldDropItem surviveAfterDeath
	targetX tx
	targetY ty
	targetZ tz
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/BlockPosition;)V signalTo
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aQ ()F getBrightness
	b (Lnet/minecraft/server/ItemStack;)V setItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bK ()Z isAttackable
	c (Lnet/minecraft/server/ItemStack;)V lambda$setItem$0
	e ()V defineSynchedData
	g ()Lnet/minecraft/server/ItemStack; getItem
	h ()Lnet/minecraft/server/ItemStack; getItemRaw
	j ()V tick
	k (DDD)V lerpMotion
net/minecraft/server/ArgumentRegistry net/minecraft/commands/synchronization/ArgumentTypes
	a LOGGER
	b BY_CLASS
	c BY_NAME
	a ()V bootStrap
	a (Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V serializeToJson
	a (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject; serializeNodeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Z isTypeRegistered
	a (Lcom/mojang/brigadier/tree/CommandNode;)Ljava/util/Set; findUsedArgumentTypes
	a (Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Set;Ljava/util/Set;)V findUsedArgumentTypes
	a (Ljava/lang/String;Ljava/lang/Class;Lnet/minecraft/server/ArgumentSerializer;)V register
	a (Ljava/util/Set;Ljava/util/Set;Lcom/mojang/brigadier/tree/CommandNode;)V lambda$findUsedArgumentTypes$0
	a (Lnet/minecraft/server/MinecraftKey;)Lfk$a; get
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserialize
	a (Lnet/minecraft/server/PacketDataSerializer;Lcom/mojang/brigadier/arguments/ArgumentType;)V serialize
	b (Lcom/mojang/brigadier/arguments/ArgumentType;)Lfk$a; get
net/minecraft/server/DataConverterVillagerTrade net/minecraft/util/datafix/fixes/VillagerTradeFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$fix$3
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateItemStack
	a (Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$updateItemStack$5
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$4
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$fix$0
net/minecraft/server/StructureFeatures net/minecraft/data/worldgen/StructureFeatures
	A RUINED_PORTAL_JUNGLE
	B RUINED_PORTAL_SWAMP
	C RUINED_PORTAL_MOUNTAIN
	D RUINED_PORTAL_OCEAN
	E RUINED_PORTAL_NETHER
	a PILLAGER_OUTPOST
	b MINESHAFT
	c MINESHAFT_MESA
	d WOODLAND_MANSION
	e JUNGLE_TEMPLE
	f DESERT_PYRAMID
	g IGLOO
	h SHIPWRECK
	i SHIPWRECH_BEACHED
	j SWAMP_HUT
	k STRONGHOLD
	l OCEAN_MONUMENT
	m OCEAN_RUIN_COLD
	n OCEAN_RUIN_WARM
	o NETHER_BRIDGE
	p NETHER_FOSSIL
	q END_CITY
	r BURIED_TREASURE
	s BASTION_REMNANT
	t VILLAGE_PLAINS
	u VILLAGE_DESERT
	v VILLAGE_SAVANNA
	w VILLAGE_SNOWY
	x VILLAGE_TAIGA
	y RUINED_PORTAL_STANDARD
	z RUINED_PORTAL_DESERT
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate; lambda$static$6
	a (Ljava/lang/String;Lnet/minecraft/server/StructureFeature;)Lnet/minecraft/server/StructureFeature; register
	b ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate; lambda$static$5
	c ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate; lambda$static$4
	d ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate; lambda$static$3
	e ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate; lambda$static$2
	f ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate; lambda$static$1
	g ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate; lambda$static$0
net/minecraft/server/BlockNote net/minecraft/world/level/block/NoteBlock
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V attack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	play (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V playNote
net/minecraft/server/AdvancementProgress net/minecraft/advancements/AdvancementProgress
	a criteria
	b requirements
	a (Ljava/lang/String;)Z grantProgress
	a (Ljava/util/Map;[[Ljava/lang/String;)V update
	a (Ljava/util/Set;Ljava/util/Map$Entry;)Z lambda$update$0
	a (Lnet/minecraft/server/AdvancementProgress;)I compareTo
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b ()Z hasProgress
	b (Ljava/lang/String;)Z revokeProgress
	b (Lnet/minecraft/server/AdvancementProgress;)Ljava/util/Map; access$000
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/AdvancementProgress; fromNetwork
	c ()F getPercent
	d ()Ljava/lang/String; getProgressText
	g ()Ljava/util/Date; getFirstProgressDate
	getAwardedCriteria ()Ljava/lang/Iterable; getCompletedCriteria
	getCriterionProgress (Ljava/lang/String;)Lnet/minecraft/server/CriterionProgress; getCriterion
	h ()I countCompletedRequirements
net/minecraft/server/WorldGenMushrooms net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature
	a (IIII)I getTreeRadiusForHeight
	a (Ljava/util/Random;)I getTreeHeight
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration;)V makeCap
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration;ILnet/minecraft/server/BlockPosition$MutableBlockPosition;)V placeTrunk
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration;)Z isValidPosition
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration;)Z place
net/minecraft/server/BehaviorStartRiding net/minecraft/world/entity/ai/behavior/Mount
	b speedModifier
	a (Lnet/minecraft/server/EntityLiving;)Z isCloseEnoughToStartRiding
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/Entity; getRidableEntity
net/minecraft/server/CommandSpectate net/minecraft/server/commands/SpectateCommand
	a ERROR_SELF
	b ERROR_NOT_SPECTATOR
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;Lnet/minecraft/server/EntityPlayer;)I spectate
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
net/minecraft/server/Packet net/minecraft/network/protocol/Packet
	a ()Z isSkippable
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/WorldGenFeatureHellFlowingLavaConfiguration net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration
	a CODEC
	b state
	c requiresBlockBelow
	d rockCount
	e holeCount
	f validBlocks
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lnet/minecraft/server/WorldGenFeatureHellFlowingLavaConfiguration;)Ljava/util/Set; lambda$null$4
	b (Lnet/minecraft/server/WorldGenFeatureHellFlowingLavaConfiguration;)Ljava/lang/Integer; lambda$null$3
	c (Lnet/minecraft/server/WorldGenFeatureHellFlowingLavaConfiguration;)Ljava/lang/Integer; lambda$null$2
	d (Lnet/minecraft/server/WorldGenFeatureHellFlowingLavaConfiguration;)Ljava/lang/Boolean; lambda$null$1
	e (Lnet/minecraft/server/WorldGenFeatureHellFlowingLavaConfiguration;)Lnet/minecraft/server/Fluid; lambda$null$0
dxd$1 net/minecraft/client/particle/BubblePopParticle$1
dxu$a net/minecraft/client/particle/LavaParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
cdy$1 net/minecraft/world/level/block/piston/PistonHeadBlock$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/NibbleArrayFlat net/minecraft/world/level/lighting/FlatDataLayer
	a ()[B getData
	b (III)I getIndex
net/minecraft/server/SlotShulkerBox net/minecraft/world/inventory/ShulkerBoxSlot
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
net/minecraft/server/GameTestHarnessHelper net/minecraft/gametest/framework/GameTestHelper
	a testInfo
	b finalCheckAdded
	a ()Lnet/minecraft/server/WorldServer; getLevel
	a (I)V setDayTime
	a (III)V pressButton
	a (IIILnet/minecraft/server/Block;)V setBlock
	a (IIILnet/minecraft/server/IBlockData;)V setBlock
	a (ILjava/lang/Runnable;)V succeedOnTickWhen
	a (JLjava/lang/Runnable;)V runAtTickTime
	a (JLnet/minecraft/server/BlockPosition;)V assertAtTickTimeContainerEmpty
	a (JLnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Item;)V assertAtTickTimeContainerContains
	a (Ljava/lang/Runnable;)V succeedIf
	a (Ljava/lang/String;)Ljava/lang/String; lambda$assertBlockProperty$11
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/IBlockData;)Z lambda$assertBlock$7
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/IBlockState;Lnet/minecraft/server/IBlockData;)Z lambda$assertBlockProperty$10
	a (Lnet/minecraft/server/Block;III)V assertBlockPresent
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;)V assertBlockPresent
	a (Lnet/minecraft/server/BlockPosition;)V pressButton
	a (Lnet/minecraft/server/BlockPosition;J)V pulseRedstone
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;Ljava/lang/String;)V assertBlock
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V assertBlock
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V setBlock
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)Z lambda$assertBlockNotPresent$4
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;Ljava/util/function/Function;Ljava/lang/Object;)V assertEntityData
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V setBlock
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)V assertBlockProperty
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockState;Ljava/util/function/Predicate;Ljava/lang/String;)V assertBlockProperty
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Item;)V assertContainerContains
	a (Lnet/minecraft/server/Entity;)Z lambda$killAllEntities$0
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BlockPosition;F)Lnet/minecraft/server/GameTestHarnessSequence; walkTo
	a (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityLiving; makeAboutToDrown
	a (Lnet/minecraft/server/EntityTypes;)V assertEntityPresent
	a (Lnet/minecraft/server/EntityTypes;DDD)V assertEntityTouching
	a (Lnet/minecraft/server/EntityTypes;FFF)Lnet/minecraft/server/Entity; spawn
	a (Lnet/minecraft/server/EntityTypes;III)Lnet/minecraft/server/Entity; spawn
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Entity; spawn
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;D)V assertEntityPresent
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Entity; spawn
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/lang/String; lambda$assertBlockProperty$9
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;Lnet/minecraft/server/IBlockData;)Z lambda$assertBlockProperty$8
	a (Lnet/minecraft/server/Item;FFF)Lnet/minecraft/server/EntityItem; spawnItem
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/BlockPosition;D)V assertItemEntityPresent
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/BlockPosition;DI)V assertItemEntityCountIs
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; absoluteVec
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;)Z lambda$assertEntityNotTouching$13
	b ()V killAllEntities
	b (III)V pullLever
	b (JLjava/lang/Runnable;)V runAfterDelay
	b (Ljava/lang/Runnable;)V succeedWhen
	b (Ljava/lang/String;)Ljava/lang/String; lambda$assertBlock$6
	b (Lnet/minecraft/server/Block;III)V assertBlockNotPresent
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;)V assertBlockNotPresent
	b (Lnet/minecraft/server/BlockPosition;)V useBlock
	b (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V assertBlockState
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)Z lambda$assertBlockPresent$3
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;Ljava/util/function/Function;Ljava/lang/Object;)V succeedWhenEntityData
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Item;)V lambda$assertAtTickTimeContainerContains$14
	b (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BlockPosition;F)V lambda$walkTo$1
	b (Lnet/minecraft/server/EntityTypes;)V assertEntityNotPresent
	b (Lnet/minecraft/server/EntityTypes;DDD)V assertEntityNotTouching
	b (Lnet/minecraft/server/EntityTypes;FFF)Lnet/minecraft/server/EntityInsentient; spawnWithNoFreeWill
	b (Lnet/minecraft/server/EntityTypes;III)Lnet/minecraft/server/EntityInsentient; spawnWithNoFreeWill
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EntityInsentient; spawnWithNoFreeWill
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/EntityInsentient; spawnWithNoFreeWill
	b (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;)Z lambda$assertEntityTouching$12
	c ()V setNight
	c (Ljava/lang/Runnable;)V failIf
	c (Lnet/minecraft/server/Block;III)V succeedWhenBlockPresent
	c (Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;)V succeedWhenBlockPresent
	c (Lnet/minecraft/server/BlockPosition;)V pullLever
	c (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;Ljava/util/function/Function;Ljava/lang/Object;)V lambda$succeedWhenEntityData$16
	c (Lnet/minecraft/server/EntityTypes;III)V assertEntityPresent
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;)V assertEntityPresent
	d ()V succeed
	d (Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;)V lambda$succeedWhenBlockPresent$5
	d (Lnet/minecraft/server/BlockPosition;)V assertContainerEmpty
	d (Lnet/minecraft/server/EntityTypes;III)V assertEntityNotPresent
	d (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;)V assertEntityNotPresent
	e ()Lnet/minecraft/server/GameTestHarnessSequence; startSequence
	e (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; absolutePos
	e (Lnet/minecraft/server/EntityTypes;III)V succeedWhenEntityPresent
	e (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;)V succeedWhenEntityPresent
	f ()J getTick
	f (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; relativePos
	f (Lnet/minecraft/server/EntityTypes;III)V succeedWhenEntityNotPresent
	f (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;)V succeedWhenEntityNotPresent
	g ()Lnet/minecraft/server/EntityHuman; makeMockPlayer
	g (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Block; getBlockType
	g (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;)V lambda$succeedWhenEntityNotPresent$18
	h ()V ensureSingleFinalCheck
	h (Lnet/minecraft/server/BlockPosition;)V lambda$assertAtTickTimeContainerEmpty$15
	h (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;)V lambda$succeedWhenEntityPresent$17
	i ()Lnet/minecraft/server/AxisAlignedBB; getBounds
	i (Lnet/minecraft/server/BlockPosition;)V lambda$pulseRedstone$2
	j ()Ljava/lang/Exception; lambda$failIf$19
blv$1 net/minecraft/world/item/ItemCooldowns$1
net/minecraft/server/ServerGUI net/minecraft/server/gui/MinecraftServerGui
	a MONOSPACED
	b LOGGER
	c server
	d logAppenderThread
	e finalizers
	f isClosing
	a ()V start
	a (Ljava/lang/Runnable;)V addFinalizer
	a (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;)V lambda$buildChatPanel$1
	a (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V print
	a (Ljavax/swing/JTextField;Ljava/awt/event/ActionEvent;)V lambda$buildChatPanel$0
	a (Lnet/minecraft/server/DedicatedServer;)Lnet/minecraft/server/ServerGUI; showFrameFor
	a (Lnet/minecraft/server/ServerGUI;)Ljava/util/concurrent/atomic/AtomicBoolean; access$000
	b ()V close
	b (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V lambda$print$2
	b (Lnet/minecraft/server/ServerGUI;)V access$100
	c ()Ljavax/swing/JComponent; buildInfoPanel
	d ()Ljavax/swing/JComponent; buildPlayerPanel
	e ()Ljavax/swing/JComponent; buildChatPanel
	f ()V runFinalizers
net/minecraft/server/Convertable net/minecraft/world/level/storage/LevelStorageSource
	a LOGGER
	b FORMATTER
	backupUniverse backupDir
	c OLD_SETTINGS_KEYS
	f fixerUpper
	universe baseDir
	a ()Ljava/lang/String; getName
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/server/DataPackConfiguration; readDataPackConfig
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/datafixers/util/Pair; readWorldGenSettings
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/DataPackConfiguration;)Ljava/util/function/BiFunction; access$500
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/DataPackConfiguration;Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/server/WorldDataServer; lambda$getLevelData$4
	a (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/server/DataPackConfiguration; access$1000
	a (Ljava/io/File;Ljava/util/function/BiFunction;)Ljava/lang/Object; readLevelData
	a (Ljava/io/File;Z)Ljava/util/function/BiFunction; levelSummaryReader
	a (Ljava/io/File;ZLjava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/server/WorldInfo; lambda$levelSummaryReader$5
	a (Ljava/lang/String;)Z isNewLevelIdAcceptable
	a (Ljava/nio/file/Path;)Lnet/minecraft/server/Convertable; createDefault
	a (Lnet/minecraft/server/Convertable;)Ljava/nio/file/Path; access$000
	a (Lnet/minecraft/server/Convertable;Ljava/io/File;Ljava/util/function/BiFunction;)Ljava/lang/Object; access$400
	a (Lnet/minecraft/server/Convertable;Ljava/io/File;Z)Ljava/util/function/BiFunction; access$300
	b ()Ljava/util/List; getLevelList
	b (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/server/GeneratorSettings; lambda$readWorldGenSettings$3
	b (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/DataPackConfiguration;)Ljava/util/function/BiFunction; getLevelData
	b (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/server/DataPackConfiguration; getDataPacks
	b (Ljava/lang/String;)Z levelExists
	b (Lnet/minecraft/server/Convertable;)Lcom/mojang/datafixers/DataFixer; access$100
	c ()Ljava/nio/file/Path; getBaseDir
	c (Ljava/lang/String;)Lnet/minecraft/server/Convertable$ConversionSession; createAccess
	c (Lnet/minecraft/server/Convertable;)I access$200
	d ()Ljava/nio/file/Path; getBackupPath
	e ()Lorg/apache/logging/log4j/Logger; access$600
	f ()Ljava/time/format/DateTimeFormatter; access$900
	g ()I getStorageVersion
	h ()Ljava/lang/IllegalStateException; lambda$null$2
	i ()Ljava/lang/IllegalStateException; lambda$null$1
	j ()Ljava/lang/IllegalStateException; lambda$null$0
net/minecraft/server/ArgumentMathOperation net/minecraft/commands/arguments/OperationArgument
	a EXAMPLES
	b ERROR_INVALID_OPERATION
	c ERROR_DIVIDE_BY_ZERO
	a ()Lnet/minecraft/server/ArgumentMathOperation; operation
	a (II)I lambda$getSimpleOperation$6
	a (Lcom/mojang/brigadier/StringReader;)Ldv$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldv$a; getOperation
	a (Ljava/lang/String;)Ldv$a; getOperation
	a (Lnet/minecraft/server/ScoreboardScore;Lnet/minecraft/server/ScoreboardScore;)V lambda$getOperation$0
	b (II)I lambda$getSimpleOperation$5
	b (Ljava/lang/String;)Ldv$b; getSimpleOperation
	c (II)I lambda$getSimpleOperation$4
	d (II)I lambda$getSimpleOperation$3
	e (II)I lambda$getSimpleOperation$2
	f (II)I lambda$getSimpleOperation$1
net/minecraft/server/WorldGenFeatureTreeVineLeaves net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/server/WorldGenFeatureTrees; type
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/BlockPosition;)V lambda$place$1
	a (Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V place
	a (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockStateBoolean;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V addHangingVine
	b ()Lnet/minecraft/server/WorldGenFeatureTreeVineLeaves; lambda$static$0
net/minecraft/server/DataBits net/minecraft/util/BitStorage
	a MAGIC
	b data
	c bits
	d mask
	e size
	f valuesPerLong
	g divideMul
	h divideAdd
	i divideShift
	a ()[J getRaw
	a (I)I get
	a (II)I getAndSet
	a (Ljava/util/function/IntConsumer;)V getAll
	b ()I getSize
	b (I)I cellIndex
	b (II)V set
	c ()I getBits
net/minecraft/server/SoundEffectType net/minecraft/world/level/block/SoundType
	A NYLIUM
	B FUNGUS
	C ROOTS
	D SHROOMLIGHT
	E WEEPING_VINES
	F TWISTING_VINES
	G SOUL_SAND
	H SOUL_SOIL
	I BASALT
	J WART_BLOCK
	K NETHERRACK
	L NETHER_BRICKS
	M NETHER_SPROUTS
	N NETHER_ORE
	O BONE_BLOCK
	P NETHERITE_BLOCK
	Q ANCIENT_DEBRIS
	R LODESTONE
	S CHAIN
	T NETHER_GOLD_ORE
	U GILDED_BLACKSTONE
	V volume
	W pitch
	X breakSound
	Y stepSound
	Z placeSound
	a WOOD
	aa hitSound
	ab fallSound
	b GRAVEL
	c GRASS
	d LILY_PAD
	e STONE
	f METAL
	g GLASS
	h WOOL
	i SAND
	j SNOW
	k LADDER
	l ANVIL
	m SLIME_BLOCK
	n HONEY_BLOCK
	o WET_GRASS
	p CORAL_BLOCK
	q BAMBOO
	r BAMBOO_SAPLING
	s SCAFFOLDING
	t SWEET_BERRY_BUSH
	u CROP
	v HARD_CROP
	w VINE
	x NETHER_WART
	y LANTERN
	z STEM
	a ()F getVolume
	b ()F getPitch
	c ()Lnet/minecraft/server/SoundEffect; getBreakSound
	d ()Lnet/minecraft/server/SoundEffect; getStepSound
	e ()Lnet/minecraft/server/SoundEffect; getPlaceSound
	f ()Lnet/minecraft/server/SoundEffect; getHitSound
	g ()Lnet/minecraft/server/SoundEffect; getFallSound
net/minecraft/server/BehaviorRunIf net/minecraft/world/entity/ai/behavior/RunIf
	b predicate
	c wrappedBehavior
	d checkWhileRunningAlso
	a (J)Z timedOut
	a (Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map; mergeMaps
	a (Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
dmu$a net/minecraft/client/gui/font/FontTexture$Node
	a x
	b y
	c width
	d height
	e left
	f right
	g occupied
	a (Lddz;)Ldmu$a; insert
	a (Ldmu$a;)I access$100
	b (Ldmu$a;)I access$200
net/minecraft/server/ICollisionAccess net/minecraft/world/level/CollisionGetter
	a (Lnet/minecraft/server/Entity;)Z lambda$noCollision$2
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/BiPredicate;)Z noBlockCollision
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/VoxelShape;)Z isUnobstructed
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Z isUnobstructed
	b (Lnet/minecraft/server/AxisAlignedBB;)Z noCollision
	b (Lnet/minecraft/server/Entity;)Z lambda$noCollision$1
	b (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/stream/Stream; getBlockCollisions
	b (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/BiPredicate;)Ljava/util/stream/Stream; getBlockCollisions
	b (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Z noCollision
	c (II)Lnet/minecraft/server/IBlockAccess; getChunkForCollisions
	c (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; getEntityCollisions
	d (Lnet/minecraft/server/Entity;)Z lambda$noCollision$0
	d (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; getCollisions
	getCubes (Lnet/minecraft/server/Entity;)Z noCollision
	getCubes (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;)Z noCollision
	j (Lnet/minecraft/server/Entity;)Z isUnobstructed
net/minecraft/server/DataConverterCustomNameItem net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/server/PathDestination net/minecraft/world/level/pathfinder/Target
	m bestHeuristic
	n bestNode
	o reached
	a (FLnet/minecraft/server/PathPoint;)V updateBest
	c (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/PathDestination; createFromStream
	d ()Lnet/minecraft/server/PathPoint; getBestNode
	e ()V setReached
	f ()Z isReached
net/minecraft/server/ArgumentSerializers net/minecraft/commands/synchronization/brigadier/BrigadierArgumentSerializers
	a ()V bootstrap
	a (B)Z numberHasMin
	a (ZZ)B createNumberFlags
	b (B)Z numberHasMax
efj$1 net/minecraft/client/renderer/entity/LivingEntityRenderer$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$scores$Team$Visibility
net/minecraft/server/DefinedStructureProcessorRule net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor
	a CODEC
	b rules
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/server/DefinedStructureProcessorRule;)Ljava/util/List; lambda$static$0
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
net/minecraft/server/INamableTileEntity net/minecraft/world/Nameable
	getDisplayName ()Lnet/minecraft/server/IChatBaseComponent; getName
	getScoreboardDisplayName ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
mg$1 net/minecraft/nbt/FloatTag$1
	a ()Ljava/lang/String; getName
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagFloat; load
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; load
	c ()Z isValue
net/minecraft/server/BehaviorStopAdmiringItem net/minecraft/world/entity/monster/piglin/StopAdmiringIfItemTooFarAway
	b maxDistanceToItem
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityPiglin;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityPiglin;J)V start
net/minecraft/server/ArgumentParserPosition net/minecraft/commands/arguments/coordinates/WorldCoordinate
	a ERROR_EXPECTED_DOUBLE
	b ERROR_EXPECTED_INT
	c relative
	d value
	a ()Z isRelative
	a (D)D get
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ArgumentParserPosition; parseInt
	a (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/server/ArgumentParserPosition; parseDouble
	b (Lcom/mojang/brigadier/StringReader;)Z isRelative
bug$1 net/minecraft/world/level/block/BedBlock$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/TileEntityChestTrapped net/minecraft/world/level/block/entity/TrappedChestBlockEntity
	h ()V signalOpenCount
net/minecraft/server/EnumInteractionResult net/minecraft/world/InteractionResult
	e $VALUES
	a ()Z consumesAction
	a (Z)Lnet/minecraft/server/EnumInteractionResult; sidedSuccess
	b ()Z shouldSwing
net/minecraft/server/WorldLoadListenerLogger net/minecraft/server/level/progress/LoggerChunkProgressListener
	a LOGGER
	b maxCount
	c count
	d startTime
	e nextTickTime
	a ()V start
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkStatus;)V onStatusChange
	b ()V stop
	c ()I getProgress
alk$1 net/minecraft/util/datafix/schemas/NamespacedSchema$1
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Ljava/lang/Object; write
net/minecraft/server/WorldGenFeatureStateProviderPlainFlower net/minecraft/world/level/levelgen/feature/stateproviders/PlainFlowerProvider
	b CODEC
	c INSTANCE
	d LOW_NOISE_FLOWERS
	e HIGH_NOISE_FLOWERS
	a ()Lnet/minecraft/server/WorldGenFeatureStateProviders; type
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getState
	b ()Lnet/minecraft/server/WorldGenFeatureStateProviderPlainFlower; lambda$static$0
eat$a net/minecraft/client/renderer/block/model/BlockElement$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; getFaces
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Leat; deserialize
	a (Lcom/google/gson/JsonObject;)Leav; getRotation
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/server/Vector3fa; getVector3f
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumDirection; getFacing
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; filterNullFromFaces
	b (Lcom/google/gson/JsonObject;)F getAngle
	c (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/EnumDirection$EnumAxis; getAxis
	d (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/Vector3fa; getTo
	e (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/Vector3fa; getFrom
net/minecraft/server/WorldGenSurfaceNetherForest net/minecraft/world/level/levelgen/surfacebuilders/NetherForestSurfaceBuilder
	a seed
	b AIR
	c decorationNoise
	a (J)V initNoise
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/LootPredicateManager net/minecraft/world/level/storage/loot/PredicateManager
	a LOGGER
	b GSON
	c conditions
	a ()Ljava/util/Set; getKeys
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonElement;)V lambda$apply$0
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/lang/String;Ljava/lang/String;)V lambda$apply$3
	a (Ljava/util/Map;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/LootCollector;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/LootItemCondition;)V lambda$apply$2
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootItemCondition; get
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootTable; lambda$apply$1
net/minecraft/server/TileEntityBeacon$BeaconColorTracker net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection
	a color
	b height
	a ()V increaseHeight
	a (Lnet/minecraft/server/TileEntityBeacon$BeaconColorTracker;)[F access$500
	b ()[F getColor
	c ()I getHeight
net/minecraft/server/EnumChatVisibility net/minecraft/world/entity/player/ChatVisiblity
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Lnet/minecraft/server/EnumChatVisibility; byId
	b ()Ljava/lang/String; getKey
	b (I)[Lnet/minecraft/server/EnumChatVisibility; lambda$static$0
net/minecraft/server/DifficultyDamageScaler net/minecraft/world/DifficultyInstance
	a base
	b effectiveDifficulty
	a ()Lnet/minecraft/server/EnumDifficulty; getDifficulty
	a (F)Z isHarderThan
	a (Lnet/minecraft/server/EnumDifficulty;JJF)F calculateDifficulty
	b ()F getEffectiveDifficulty
	c ()Z isHard
	d ()F getSpecialMultiplier
yj$a net/minecraft/server/commands/SpreadPlayersCommand$Position
	a x
	b z
	a ()V normalize
	a (DD)V set
	a (DDDD)Z clamp
	a (Ljava/util/Random;DDDD)V randomize
	a (Lnet/minecraft/server/IBlockAccess;I)I getSpawnY
	a (Lyj$a;)D dist
	a (Lyj$a;D)D access$002
	b ()F getLength
	b (Lnet/minecraft/server/IBlockAccess;I)Z isSafe
	b (Lyj$a;)V moveAway
	b (Lyj$a;D)D access$102
	c (Lyj$a;)D access$000
	d (Lyj$a;)D access$100
net/minecraft/server/BlockMinecartDetector net/minecraft/world/level/block/DetectorRailBlock
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/AxisAlignedBB; getSearchBB
	a (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List; getInteractingMinecartOfType
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V checkPressed
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V updatePowerToConnected
	b_ (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	d ()Lnet/minecraft/server/IBlockState; getShapeProperty
net/minecraft/server/DataConverterSkeleton net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
net/minecraft/server/CriterionTriggerThrownItemPickedUpByEntity net/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lbp$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Entity;)V trigger
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;Lbp$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
bg$1 net/minecraft/advancements/critereon/EntityPredicate$1
bx$a net/minecraft/advancements/critereon/LocationTrigger$TriggerInstance
	a location
	a (Lnet/minecraft/server/CriterionConditionLocation;)Lbx$a; located
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/WorldServer;DDD)Z matches
	c ()Lbx$a; sleptInBed
	d ()Lbx$a; raidWon
net/minecraft/server/PacketPlayOutViewCentre net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket
	a x
	b z
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getZ
btd$1 net/minecraft/world/level/biome/MobSpawnSettings$1
bck$1 net/minecraft/world/entity/decoration/ArmorStand$1
	a $SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
net/minecraft/server/PacketLoginInListener net/minecraft/network/protocol/login/ServerLoginPacketListener
	a (Lnet/minecraft/server/PacketLoginInCustomPayload;)V handleCustomQueryPacket
	a (Lnet/minecraft/server/PacketLoginInEncryptionBegin;)V handleKey
	a (Lnet/minecraft/server/PacketLoginInStart;)V handleHello
net/minecraft/server/DataConverterBitStorageAlign net/minecraft/util/datafix/fixes/BitStorageAlignFix
	a (II[J)[J addPadding
	a (ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$8
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateSections
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$updateSections$10
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$9
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateHeightmaps
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateHeightmaps$5
	a (Lcom/mojang/serialization/Dynamic;ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$7
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$3
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$4
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; updateBitStorage
	a (Ljava/util/List;)Ljava/lang/Integer; lambda$null$6
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
	b (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
net/minecraft/server/CriterionTriggerPlacedBlock net/minecraft/advancements/critereon/PlacedBlockTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/Block; deserializeBlock
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lcd$a; createInstance
	a (Lnet/minecraft/server/Block;Ljava/lang/String;)V lambda$createInstance$0
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V trigger
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;Lcd$a;)Z lambda$trigger$2
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$deserializeBlock$1
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/AdvancementDataPlayer net/minecraft/server/PlayerAdvancements
	a LOGGER
	b GSON
	c TYPE_TOKEN
	d dataFixer
	data advancements
	e playerList
	f file
	h visible
	i visibilityChanged
	j progressChanged
	l lastSelectedTab
	m isFirstPacket
	a ()V stopListening
	a (Lnet/minecraft/server/Advancement;)V setSelectedTab
	a (Lnet/minecraft/server/Advancement;Lnet/minecraft/server/AdvancementProgress;)V startProgress
	a (Lnet/minecraft/server/AdvancementDataWorld;)V reload
	a (Lnet/minecraft/server/EntityPlayer;)V setPlayer
	b ()V save
	b (Lnet/minecraft/server/AdvancementDataWorld;)V registerListeners
	b (Lnet/minecraft/server/EntityPlayer;)V flushDirty
	c ()V ensureAllVisible
	c (Lnet/minecraft/server/Advancement;)V registerListeners
	c (Lnet/minecraft/server/AdvancementDataWorld;)V checkForAutomaticTriggers
	d (Lnet/minecraft/server/Advancement;)V unregisterListeners
	d (Lnet/minecraft/server/AdvancementDataWorld;)V load
	e (Lnet/minecraft/server/Advancement;)V ensureVisibility
	f (Lnet/minecraft/server/Advancement;)Z shouldBeVisible
	g (Lnet/minecraft/server/Advancement;)Z hasCompletedChildrenOrSelf
	getProgress (Lnet/minecraft/server/Advancement;)Lnet/minecraft/server/AdvancementProgress; getOrStartProgress
	grantCriteria (Lnet/minecraft/server/Advancement;Ljava/lang/String;)Z award
	revokeCritera (Lnet/minecraft/server/Advancement;Ljava/lang/String;)Z revoke
net/minecraft/server/ItemWorldMapBase net/minecraft/world/item/ComplexItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Packet; getUpdatePacket
	ac_ ()Z isComplex
net/minecraft/server/TileEntityMobSpawner net/minecraft/world/level/block/entity/SpawnerBlockEntity
	a spawner
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a_ (II)Z triggerEvent
	aj_ ()V tick
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	t ()Z onlyOpCanSetNbt
net/minecraft/server/TileEntityBlastFurnace net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/ItemStack;)I getBurnDuration
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
net/minecraft/server/BlockPlant net/minecraft/world/level/block/BushBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
net/minecraft/server/PacketPlayInPickItem net/minecraft/network/protocol/game/ServerboundPickItemPacket
	a slot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getSlot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/INamable net/minecraft/util/StringRepresentable
	a (Ljava/util/function/Supplier;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; fromEnum
	a (Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; fromStringResolver
	a ([Ljava/lang/Enum;I)Ljava/lang/Enum; lambda$fromEnum$0
	a ([Lnet/minecraft/server/INamable;)Lcom/mojang/serialization/Keyable; keys
	getName ()Ljava/lang/String; getSerializedName
net/minecraft/server/EnumBlockRotation net/minecraft/world/level/block/Rotation
	e rotation
	f $VALUES
	a ()Lnet/minecraft/server/PointGroupO; rotation
	a (II)I rotate
	a (Ljava/util/Random;)Lnet/minecraft/server/EnumBlockRotation; getRandom
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/EnumBlockRotation; getRotated
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; rotate
	b (Ljava/util/Random;)Ljava/util/List; getShuffled
gn$a net/minecraft/core/RegistryAccess$RegistryData
	a key
	b codec
	c networkCodec
	a ()Lnet/minecraft/server/ResourceKey; key
	b ()Lcom/mojang/serialization/Codec; codec
	c ()Lcom/mojang/serialization/Codec; networkCodec
	d ()Z sendToClient
net/minecraft/server/LevelVersion net/minecraft/world/level/storage/LevelVersion
	a levelDataVersion
	b lastPlayed
	c minecraftVersionName
	d minecraftVersion
	e snapshot
	a ()I levelDataVersion
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/server/LevelVersion; parse
	b ()J lastPlayed
	c ()Ljava/lang/String; minecraftVersionName
	d ()I minecraftVersion
	e ()Z snapshot
au$a net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance
	a zombie
	b villager
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/LootTableInfo;)Z matches
	c ()Lau$a; curedZombieVillager
net/minecraft/server/WorldGenSurfaceSwamp net/minecraft/world/level/levelgen/surfacebuilders/SwampSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/Chunk net/minecraft/world/level/chunk/LevelChunk
	a EMPTY_SECTION
	b LOGGER
	d biomes
	e pendingBlockEntities
	entitySlices entitySections
	heightMap heightmaps
	i upgradeData
	l structureStarts
	lastSaved lastSaveTime
	loc chunkPos
	m structuresRefences
	n postProcessing
	o blockTicks
	p liquidTicks
	q lastSaveHadEntities
	s unsaved
	tileEntities blockEntities
	u fullStatus
	v postLoad
	world level
	x isLightCorrect
	A ()V postProcessGeneration
	B ()V unpackTicks
	a (III)Lnet/minecraft/server/Fluid; getFluidState
	a (ILnet/minecraft/server/BlockPosition;)Z lambda$replaceWithPacketData$5
	a (J)V setLastSaveTime
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/List;Ljava/util/function/Predicate;)V getEntitiesOfClass
	a (Ljava/util/Map;)V setAllStarts
	a (Ljava/util/function/Supplier;)V setFullStatus
	a (Lnet/minecraft/server/BiomeStorage;Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/NBTTagCompound;I)V replaceWithPacketData
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Chunk$EnumTileEntityState;)Lnet/minecraft/server/TileEntity; getBlockEntity
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/TileEntity; promotePendingBlockEntity
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/server/Entity;)V addEntity
	a (Lnet/minecraft/server/Entity;I)V removeEntity
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/List;Ljava/util/function/Predicate;)V getEntities
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/List;Ljava/util/function/Predicate;)V getEntities
	a (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap; getOrCreateHeightmapUnprimed
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/HeightMap$Type;[J)V setHeightmap
	a (Lnet/minecraft/server/NBTTagCompound;)V setBlockEntityNbt
	a (Lnet/minecraft/server/StructureGenerator;)Lnet/minecraft/server/StructureStart; getStartForFeature
	a (Lnet/minecraft/server/StructureGenerator;J)V addReferenceForFeature
	a (Lnet/minecraft/server/StructureGenerator;Lnet/minecraft/server/StructureStart;)V setStartForFeature
	a (Lnet/minecraft/server/TileEntity;)V addBlockEntity
	a (Lnet/minecraft/server/WorldServer;)V packTicks
	a (Z)V setUnsaved
	addEntities ()V runPostLoad
	b (III)Ljava/lang/String; lambda$getFluidState$3
	b (J)V setInhabitedTime
	b (Ljava/util/Map;)V setAllReferences
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/Entity;)V removeEntity
	b (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/BlockPosition; getHeighestPosition
	b (Lnet/minecraft/server/StructureGenerator;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
	b (Z)V setLightCorrect
	c ()Ljava/util/Set; getBlockEntitiesPos
	c (III)Ljava/lang/String; lambda$getBlockState$2
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	c (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Entity; lambda$new$0
	c (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap; lambda$getOrCreateHeightmapUnprimed$1
	c (Lnet/minecraft/server/StructureGenerator;)Lit/unimi/dsi/fastutil/longs/LongSet; lambda$addReferenceForFeature$8
	d ()[Lnet/minecraft/server/ChunkSection; getSections
	d (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	d (Lnet/minecraft/server/StructureGenerator;)Lit/unimi/dsi/fastutil/longs/LongSet; lambda$getReferencesForFeature$7
	d (Z)V setLastSaveHadEntities
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	f ()Ljava/util/Collection; getHeightmaps
	g ()Lnet/minecraft/server/ChunkCoordIntPair; getPos
	getEntitySlices ()[Lnet/minecraft/server/EntitySlice; getEntitySections
	getState ()Lnet/minecraft/server/PlayerChunk$State; getFullStatus
	getTileEntities ()Ljava/util/Map; getBlockEntities
	getWorld ()Lnet/minecraft/server/World; getLevel
	h ()Ljava/util/Map; getAllStarts
	i ()Lnet/minecraft/server/BiomeStorage; getBiomes
	i (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbt
	j ()Z isUnsaved
	j (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbtForSaving
	k ()Lnet/minecraft/server/ChunkStatus; getStatus
	k (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; createBlockEntity
	l ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
	l (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/FluidType; lambda$unpackTicks$10
	m ()Ljava/util/stream/Stream; getLights
	m (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Block; lambda$unpackTicks$9
	markDirty ()V markUnsaved
	n ()Lnet/minecraft/server/TickList; getBlockTicks
	n (Lnet/minecraft/server/BlockPosition;)Z lambda$getLights$6
	o ()Lnet/minecraft/server/TickList; getLiquidTicks
	o (Lnet/minecraft/server/BlockPosition;)Z lambda$replaceWithPacketData$4
	p ()Lnet/minecraft/server/ChunkConverter; getUpgradeData
	q ()J getInhabitedTime
	r ()Z isLightCorrect
	v ()Ljava/util/Map; getAllReferences
net/minecraft/server/DataConverterEntityProjectileOwner net/minecraft/util/datafix/fixes/EntityProjectileOwnerFix
	a (JJ)[I createUUIDArray
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateProjectiles
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateEntity
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateOwnerArrow
	a (Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic; setUUID
	a (Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$updateEntity$0
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateOwnerLlamaSpit
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateItemPotion
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateOwnerThrowable
dyx$1 net/minecraft/client/particle/WaterCurrentDownParticle$1
net/minecraft/server/WorldGenFeatureShipwreck net/minecraft/world/level/levelgen/feature/ShipwreckFeature
	a ()Lckx$a; getStartFactory
cwg$1 net/minecraft/world/level/newbiome/layer/ZoomLayer$1
	a (Lnet/minecraft/server/AreaContextTransformed;IIII)I modeOrRandom
bhr$1 net/minecraft/world/entity/vehicle/MinecartSpawner$1
	a this$0
	a ()Lnet/minecraft/server/World; getLevel
	a (I)V broadcastEvent
	b ()Lnet/minecraft/server/BlockPosition; getPos
bg$a net/minecraft/advancements/critereon/EntityPredicate$Builder
	a entityType
	b distanceToPlayer
	c location
	d effects
	e nbt
	f flags
	g equipment
	h player
	i fishingHook
	j vehicle
	k targetedEntity
	l team
	m catType
	a ()Lbg$a; entity
	a (Ljava/lang/String;)Lbg$a; team
	a (Lnet/minecraft/server/CriterionConditionDistance;)Lbg$a; distance
	a (Lnet/minecraft/server/CriterionConditionEntity;)Lbg$a; vehicle
	a (Lnet/minecraft/server/CriterionConditionEntityEquipment;)Lbg$a; equipment
	a (Lnet/minecraft/server/CriterionConditionEntityFlags;)Lbg$a; flags
	a (Lnet/minecraft/server/CriterionConditionEntityType;)Lbg$a; entityType
	a (Lnet/minecraft/server/CriterionConditionInOpenWater;)Lbg$a; fishingHook
	a (Lnet/minecraft/server/CriterionConditionLocation;)Lbg$a; located
	a (Lnet/minecraft/server/CriterionConditionMobEffect;)Lbg$a; effects
	a (Lnet/minecraft/server/CriterionConditionNBT;)Lbg$a; nbt
	a (Lnet/minecraft/server/CriterionConditionPlayer;)Lbg$a; player
	a (Lnet/minecraft/server/EntityTypes;)Lbg$a; of
	a (Lnet/minecraft/server/MinecraftKey;)Lbg$a; of
	a (Lnet/minecraft/server/Tag;)Lbg$a; of
	b ()Lnet/minecraft/server/CriterionConditionEntity; build
	b (Lnet/minecraft/server/CriterionConditionEntity;)Lbg$a; targetedEntity
	b (Lnet/minecraft/server/MinecraftKey;)Lbg$a; catType
bg$b net/minecraft/advancements/critereon/EntityPredicate$Composite
	a ANY
	b conditions
	c compositePredicates
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/server/LootDeserializationContext;)Lbg$b; fromJson
	a (Ljava/lang/String;Lnet/minecraft/server/LootDeserializationContext;Lcom/google/gson/JsonElement;)Lbg$b; fromElement
	a (Lnet/minecraft/server/CriterionConditionEntity;)Lbg$b; wrap
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/server/LootTableInfo;)Z matches
	a ([Lbg$b;Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonElement; toJson
	a ([Lnet/minecraft/server/LootItemCondition;)Lbg$b; create
	b (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/server/LootDeserializationContext;)[Lbg$b; fromJsonArray
net/minecraft/server/DataConverterSwimStats net/minecraft/util/datafix/fixes/SwimStatsRenameFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
net/minecraft/server/BlockSoulFire net/minecraft/world/level/block/SoulFireBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	c (Lnet/minecraft/server/Block;)Z canSurviveOnBlock
	e (Lnet/minecraft/server/IBlockData;)Z canBurn
net/minecraft/server/EntityGuardian$PathfinderGoalGuardianAttack net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal
	a guardian
	b attackTime
	c elder
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/BehaviorOutside net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot
	b speedModifier
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/MemoryTarget; lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BlockPosition;)Z hasNoBlocksAbove
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/Vec3D; getOutdoorPosition
net/minecraft/server/EntitySkeletonAbstract net/minecraft/world/entity/monster/AbstractSkeleton
	b bowGoal
	c meleeGoal
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	a (Lnet/minecraft/server/ItemProjectileWeapon;)Z canFireProjectileWeapon
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	aZ ()V rideTick
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityArrow; getArrow
	ba ()D getMyRidingOffset
	dB ()Lnet/minecraft/server/EnumMonsterType; getMobType
	eK ()Lnet/minecraft/server/SoundEffect; getStepSound
	eL ()V reassessWeaponGoal
	k ()V aiStep
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	o ()V registerGoals
cku$1 net/minecraft/world/level/levelgen/feature/SpikeFeature$1
net/minecraft/server/PropertyManager net/minecraft/server/dedicated/Settings
	a LOGGER
	a ()Ljava/util/Properties; cloneProperties
	a (Ljava/lang/String;)Ljava/lang/String; getLegacyString
	a (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object; getLegacy
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I get
	a (Ljava/util/function/Function;)Ljava/util/function/Function; wrapNumberDeserializer
	a (Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Number; lambda$wrapNumberDeserializer$0
	a (Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/lang/String;)Ljava/lang/Object; lambda$get$2
	a (Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function; dispatchNumberOrString
	a (Ljava/util/function/IntFunction;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Object; lambda$dispatchNumberOrString$1
	b (Ljava/lang/String;)Ljava/lang/Boolean; getLegacyBoolean
	b (Ljava/lang/String;I)Lnet/minecraft/server/PropertyManager$EditableProperty; getMutable
	b (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/PropertyManager$EditableProperty; getMutable
	b (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/PropertyManager$EditableProperty; getMutable
	b (Ljava/lang/String;Z)Lnet/minecraft/server/PropertyManager$EditableProperty; getMutable
	c (Ljava/lang/String;)Ljava/lang/String; getStringRaw
	getBoolean (Ljava/lang/String;Z)Z get
	getInt (Ljava/lang/String;I)I get
	getLong (Ljava/lang/String;J)J get
	getString (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; get
	loadPropertiesFile (Ljava/nio/file/Path;)Ljava/util/Properties; loadFromFile
	savePropertiesFile (Ljava/nio/file/Path;)V store
net/minecraft/server/CriterionTriggerUsedEnderEye net/minecraft/advancements/critereon/UsedEnderEyeTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (DLcs$a;)Z lambda$trigger$0
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lcs$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/BlockPosition;)V trigger
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/DataConverterSchemaV1125 net/minecraft/util/datafix/schemas/V1125
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$2
	c ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
dqo$a net/minecraft/client/gui/screens/inventory/MerchantScreen$TradeOfferButton
	a index
	b this$0
	a ()I getIndex
	a (Ldfj;II)V renderToolTip
ecm$b$1 net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk$1
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)Z facesCanSeeEachother
net/minecraft/server/LootEntry net/minecraft/world/level/storage/loot/entries/LootPoolEntry
	a (F)I getWeight
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
net/minecraft/server/EntityTippedArrow net/minecraft/world/entity/projectile/Arrow
	COLOR ID_EFFECT_COLOR
	hasColor fixedColor
	potionRegistry potion
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/EntityLiving;)V doPostHurtEffects
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (I)V makeParticle
	b (Lnet/minecraft/server/ItemStack;)V setEffectsFromItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/ItemStack;)I getCustomColor
	e ()V defineSynchedData
	j ()V tick
	m ()Lnet/minecraft/server/ItemStack; getPickupItem
	setColor (I)V setFixedColor
	z ()V updateColor
net/minecraft/server/ContainerShulkerBox net/minecraft/world/inventory/ShulkerBoxMenu
	c container
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
net/minecraft/server/BlockStainedGlassPane net/minecraft/world/level/block/StainedGlassPaneBlock
	a ()Lnet/minecraft/server/EnumColor; getColor
bal$a net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal
	i this$0
	a ()Z canUse
	k ()D getFollowDistance
emv$1 net/minecraft/client/searchtree/SuffixArray$1
	a val$lefts
	b val$rights
	c this$0
bal$b net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal
	a this$0
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V alertOther
	c ()V start
net/minecraft/server/GeneratorAccess net/minecraft/world/level/LevelAccessor
	a (Lnet/minecraft/server/EntityHuman;ILnet/minecraft/server/BlockPosition;I)V levelEvent
	ab ()J dayTime
	b (II)Z hasChunk
	getBlockTickList ()Lnet/minecraft/server/TickList; getBlockTicks
	getChunkProvider ()Lnet/minecraft/server/IChunkProvider; getChunkSource
	getDamageScaler (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/DifficultyDamageScaler; getCurrentDifficultyAt
	getFluidTickList ()Lnet/minecraft/server/TickList; getLiquidTicks
	getWorldData ()Lnet/minecraft/server/WorldData; getLevelData
	l ()Lnet/minecraft/server/MinecraftServer; getServer
	triggerEffect (ILnet/minecraft/server/BlockPosition;I)V levelEvent
	update (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V blockUpdated
net/minecraft/server/ItemTrident net/minecraft/world/item/TridentItem
	a defaultModifiers
	a (Lnet/minecraft/server/EntityLiving;)V lambda$mineBlock$2
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityHuman;)V lambda$releaseUsing$0
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)Z canAttackBlock
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z mineBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	b (Lnet/minecraft/server/EntityLiving;)V lambda$hurtEnemy$1
	c ()I getEnchantmentValue
	d_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	e_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
bal$c net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal
	b this$0
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
	a (Lnet/minecraft/server/EntityLiving;D)V checkAndPerformAttack
	d ()V stop
bal$d net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal
	g this$0
	a ()Z canUse
net/minecraft/server/WorldGenFeatureIceburg net/minecraft/world/level/levelgen/feature/IcebergFeature
	a (III)I getEllipseC
	a (IILnet/minecraft/server/BlockPosition;IID)D signedDistanceEllipse
	a (IILnet/minecraft/server/BlockPosition;ILjava/util/Random;)D signedDistanceCircle
	a (IILnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;ZDLnet/minecraft/server/BlockPosition;II)V carve
	a (Ljava/util/Random;III)I heightDependentRadiusRound
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;IILnet/minecraft/server/BlockPosition;ZIDI)V generateCutOut
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;IIZZLnet/minecraft/server/IBlockData;)V setIcebergBlock
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;IIIIIIZIDZLnet/minecraft/server/IBlockData;)V generateIcebergBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V removeFloatingSnowLayer
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;IIZI)V smooth
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureLakeConfiguration;)Z place
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z belowIsAir
	b (III)I heightDependentRadiusEllipse
	b (Ljava/util/Random;III)I heightDependentRadiusSteep
	c (Lnet/minecraft/server/Block;)Z isIcebergBlock
net/minecraft/server/ArgumentParserSelector net/minecraft/commands/arguments/selector/EntitySelectorParser
	A predicate
	B order
	C currentEntity
	D playerName
	E startPosition
	F entityUUID
	G suggestions
	H hasNameEquals
	I hasNameNotEquals
	J isLimited
	K isSorted
	L hasGamemodeEquals
	M hasGamemodeNotEquals
	N hasTeamEquals
	O hasTeamNotEquals
	P type
	Q typeInverse
	R hasScores
	S hasAdvancements
	a ERROR_INVALID_NAME_OR_UUID
	b ERROR_UNKNOWN_SELECTOR_TYPE
	c ERROR_SELECTORS_NOT_ALLOWED
	checkPermissions usesSelectors
	d ERROR_MISSING_SELECTOR_TYPE
	e ERROR_EXPECTED_END_OF_OPTIONS
	f ERROR_EXPECTED_OPTION_VALUE
	g ORDER_ARBITRARY
	h ORDER_NEAREST
	i ORDER_FURTHEST
	j ORDER_RANDOM
	k SUGGEST_NOTHING
	l reader
	m allowSelectors
	n maxResults
	o includesEntities
	p worldLimited
	q distance
	r level
	s x
	t y
	u z
	v deltaX
	w deltaY
	x deltaZ
	y rotX
	z rotY
	A ()Z hasGamemodeNotEquals
	B ()Z hasTeamEquals
	C ()Z hasTeamNotEquals
	D ()V setTypeLimitedInversely
	E ()Z isTypeLimited
	F ()Z isTypeLimitedInversely
	G ()Z hasScores
	H ()Z hasAdvancements
	I ()V finalizePredicates
	a ()Lnet/minecraft/server/EntitySelector; getSelector
	a (D)V setX
	a (DDD)Lnet/minecraft/server/AxisAlignedBB; createAabb
	a (I)V setMaxResults
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V fillSelectorSuggestions
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Ljava/util/function/BiConsumer;)V setOrder
	a (Ljava/util/function/BiFunction;)V setSuggestions
	a (Ljava/util/function/Predicate;)V addPredicate
	a (Ljava/util/function/ToDoubleFunction;DDLnet/minecraft/server/Entity;)Z lambda$createRotationPredicate$15
	a (Lnet/minecraft/server/CriterionConditionRange;)V setRotX
	a (Lnet/minecraft/server/CriterionConditionRange;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate; createRotationPredicate
	a (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)V setDistance
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)V setLevel
	a (Lnet/minecraft/server/Entity;)Z lambda$finalizePredicates$14
	a (Lnet/minecraft/server/EntityTypes;)V limitToType
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; lambda$getSelector$11
	a (Lnet/minecraft/server/Vec3D;Ljava/util/List;)V lambda$static$7
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)I lambda$null$5
	a (Z)V setIncludesEntities
	b (D)V setY
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestNameOrSelector
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	b (Lnet/minecraft/server/CriterionConditionRange;)V setRotY
	b (Lnet/minecraft/server/Entity;)D lambda$finalizePredicates$13
	b (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; lambda$getSelector$10
	b (Lnet/minecraft/server/Vec3D;Ljava/util/List;)V lambda$static$6
	b (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)I lambda$null$3
	b (Z)V setHasNameEquals
	c ()V parseNameOrUUID
	c (D)V setZ
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestName
	c (Lnet/minecraft/server/Entity;)D lambda$finalizePredicates$12
	c (Lnet/minecraft/server/Vec3D;Ljava/util/List;)V lambda$static$4
	c (Z)V setHasNameNotEquals
	d ()V parseOptions
	d (D)V setDeltaX
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestSelector
	d (Lnet/minecraft/server/Entity;)Z lambda$new$9
	d (Lnet/minecraft/server/Vec3D;Ljava/util/List;)V lambda$static$2
	d (Z)V setLimited
	e ()Z shouldInvertValue
	e (D)V setDeltaY
	e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOpenOptions
	e (Z)V setSorted
	f ()Z isTag
	f (D)V setDeltaZ
	f (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsKeyOrClose
	f (Z)V setHasGamemodeEquals
	g ()Lcom/mojang/brigadier/StringReader; getReader
	g (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsKey
	g (Z)V setHasGamemodeNotEquals
	h ()V setWorldLimited
	h (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsNextOrClose
	h (Z)V setHasTeamEquals
	i ()Lnet/minecraft/server/CriterionConditionValue$FloatRange; getDistance
	i (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestEquals
	i (Z)V setHasTeamNotEquals
	j ()Lnet/minecraft/server/CriterionConditionValue$IntegerRange; getLevel
	j (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$static$8
	j (Z)V setHasScores
	k ()Lnet/minecraft/server/CriterionConditionRange; getRotX
	k (Z)V setHasAdvancements
	l ()Lnet/minecraft/server/CriterionConditionRange; getRotY
	m ()Ljava/lang/Double; getX
	n ()Ljava/lang/Double; getY
	o ()Ljava/lang/Double; getZ
	p ()Ljava/lang/Double; getDeltaX
	q ()Ljava/lang/Double; getDeltaY
	r ()Ljava/lang/Double; getDeltaZ
	s ()Ljava/util/function/BiConsumer; getOrder
	u ()Z isCurrentEntity
	v ()Z hasNameEquals
	w ()Z hasNameNotEquals
	x ()Z isLimited
	y ()Z isSorted
	z ()Z hasGamemodeEquals
net/minecraft/server/RecipeItemStack$StackProvider net/minecraft/world/item/crafting/Ingredient$ItemValue
	a item
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
net/minecraft/server/CommandFill net/minecraft/server/commands/FillCommand
	a ERROR_AREA_TOO_LARGE
	b HOLLOW_CORE
	c ERROR_FAILED
	a ()Lnet/minecraft/server/ArgumentTileLocation; access$000
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ArgumentTileLocation;Lnet/minecraft/server/CommandFill$Mode;Ljava/util/function/Predicate;)I fillBlocks
	a (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$null$5
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
net/minecraft/server/PacketPlayOutOpenWindow net/minecraft/network/protocol/game/ClientboundOpenScreenPacket
	a containerId
	b type
	c title
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/Containers; getType
	d ()Lnet/minecraft/server/IChatBaseComponent; getTitle
net/minecraft/server/BlockConcretePowder net/minecraft/world/level/block/ConcretePowderBlock
	a concrete
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z touchesLiquid
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityFallingBlock;)V onLand
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getDustColor
	canHarden (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z shouldSolidify
	l (Lnet/minecraft/server/IBlockData;)Z canSolidify
net/minecraft/server/IRegistryCustom$Dimension net/minecraft/core/RegistryAccess$RegistryHolder
	a NETWORK_CODEC
	b registries
	a (Lcom/mojang/serialization/codecs/UnboundedMapCodec;)Lcom/mojang/serialization/Codec; captureMap
	a (Lgn$a;)Lcom/mojang/serialization/Codec; lambda$getNetworkCodec$5
	a (Ljava/util/Map$Entry;)Z lambda$null$3
	a (Lnet/minecraft/server/IRegistryCustom$Dimension;)Ljava/util/Map; access$100
	a (Lnet/minecraft/server/RegistryMaterials;)Lnet/minecraft/server/IRegistryWritable; lambda$registry$7
	a (Lnet/minecraft/server/ResourceKey;)Ljava/util/Optional; registry
	a (Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$null$1
	b (Lnet/minecraft/server/IRegistryCustom$Dimension;)Ljava/util/Map; lambda$captureMap$4
	b (Lnet/minecraft/server/RegistryMaterials;)Lcom/mojang/serialization/DataResult; lambda$makeNetworkCodec$0
	c (Lnet/minecraft/server/ResourceKey;)Lcom/mojang/serialization/DataResult; getNetworkCodec
	d ()Lcom/mojang/serialization/Codec; makeNetworkCodec
	d (Lnet/minecraft/server/ResourceKey;)Lnet/minecraft/server/RegistryMaterials; createRegistry
	e (Lnet/minecraft/server/ResourceKey;)Lcom/mojang/serialization/DataResult; lambda$getNetworkCodec$6
	f (Lnet/minecraft/server/ResourceKey;)Lcom/mojang/serialization/DataResult; lambda$makeNetworkCodec$2
net/minecraft/server/EntityArmorStand net/minecraft/world/entity/decoration/ArmorStand
	armorStandInvisible invisible
	b DATA_CLIENT_FLAGS
	bh DATA_RIGHT_LEG_POSE
	bi lastHit
	bj DEFAULT_HEAD_POSE
	bk DEFAULT_BODY_POSE
	bl DEFAULT_LEFT_ARM_POSE
	bm DEFAULT_RIGHT_ARM_POSE
	bn DEFAULT_LEFT_LEG_POSE
	bo DEFAULT_RIGHT_LEG_POSE
	bp MARKER_DIMENSIONS
	bq BABY_DIMENSIONS
	br RIDABLE_MINECARTS
	bv disabledSlots
	c DATA_HEAD_POSE
	d DATA_BODY_POSE
	e DATA_LEFT_ARM_POSE
	f DATA_RIGHT_ARM_POSE
	g DATA_LEFT_LEG_POSE
	A ()Z hasPhysics
	B ()Lnet/minecraft/server/NBTTagCompound; writePose
	C ()V updateInvisibilityStatus
	C (Lnet/minecraft/server/Entity;)V doPush
	D ()V showBreakingParticles
	F ()V playBrokenSound
	Z ()V kill
	a (B)V handleEntityEvent
	a (BIZ)B setBit
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;)Z lambda$static$0
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)Z swapItem
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interactAt
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLightning;)V thunderHit
	aS ()Z isPickable
	aT ()Z isPushable
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EnumItemSlot;)Lnet/minecraft/server/ItemStack; getItemBySlot
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	ba ()D getMyRidingOffset
	bm ()Ljava/lang/Iterable; getHandSlots
	bn ()Ljava/lang/Iterable; getArmorSlots
	ch ()Z ignoreExplosion
	d (Lnet/minecraft/server/EnumItemSlot;)Z isDisabled
	dP ()V pushEntities
	dR ()Z isEffectiveAi
	dU ()Lnet/minecraft/server/EnumMainHand; getMainArm
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	eg ()Z isAffectedByPotions
	eh ()Z attackable
	f (FF)F tickHeadTurn
	f (Lnet/minecraft/server/DamageSource;)V brokenByPlayer
	f (Lnet/minecraft/server/DamageSource;F)V causeDamage
	g (Lnet/minecraft/server/DamageSource;)V brokenByAnything
	g (Lnet/minecraft/server/NBTTagCompound;)V readPose
	g (Lnet/minecraft/server/Vec3D;)V travel
	hasArms ()Z isShowArms
	hasBasePlate ()Z isNoBasePlate
	i (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/EnumItemSlot; getClickedSlot
	j ()V tick
	j (Z)V setInvisible
	k (F)Lnet/minecraft/server/Vec3D; getLightProbePosition
	m (F)V setYHeadRot
	n (F)V setYBodyRot
	o (I)Lnet/minecraft/server/SoundEffect; getFallDamageSound
	r ()Lnet/minecraft/server/Vector3f; getHeadPose
	s (Z)Lnet/minecraft/server/EntitySize; getDimensionsMarker
	setArms (Z)V setShowArms
	setBasePlate (Z)V setNoBasePlate
	t ()Lnet/minecraft/server/Vector3f; getBodyPose
	t (Lnet/minecraft/server/Entity;)Z skipAttackInteraction
	u ()Lnet/minecraft/server/Vector3f; getLeftArmPose
	v ()Lnet/minecraft/server/Vector3f; getRightArmPose
	w_ ()Z isBaby
	x ()Lnet/minecraft/server/Vector3f; getLeftLegPose
	x_ ()V refreshDimensions
	y_ ()Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	z ()Lnet/minecraft/server/Vector3f; getRightLegPose
ccl$1 net/minecraft/world/level/block/entity/CommandBlockEntity$1
	b this$0
	a (Ljava/lang/String;)V setCommand
	d ()Lnet/minecraft/server/WorldServer; getLevel
	e ()V onUpdated
	f ()Lnet/minecraft/server/Vec3D; getPosition
	h ()Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
net/minecraft/server/ItemCooldownPlayer net/minecraft/world/item/ServerItemCooldowns
	a player
	b (Lnet/minecraft/server/Item;I)V onCooldownStarted
	c (Lnet/minecraft/server/Item;)V onCooldownEnded
dwy$a net/minecraft/client/particle/BarrierParticle$Provider
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
anp$1 net/minecraft/util/profiling/FilledProfileResults$1
	a ()J getDuration
	b ()J getCount
	c ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; getCounters
net/minecraft/server/EnchantmentThorns net/minecraft/world/item/enchantment/ThornsEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILjava/util/Random;)Z shouldHit
	a (Ljava/util/Map$Entry;Lnet/minecraft/server/EntityLiving;)V lambda$doPostHurt$0
	a (Lnet/minecraft/server/ItemStack;)Z canEnchant
	b (I)I getMaxCost
	b (ILjava/util/Random;)I getDamage
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;I)V doPostHurt
fk$1 net/minecraft/commands/synchronization/ArgumentTypes$1
net/minecraft/server/WorldGenSurfaceDefaultBlock net/minecraft/world/level/levelgen/surfacebuilders/DefaultSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;I)V apply
net/minecraft/server/WorldGenDecoratorRange net/minecraft/world/level/levelgen/placement/RangeDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureChanceDecoratorRangeConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/NavigationSpider net/minecraft/world/entity/ai/navigation/WallClimberNavigation
	p pathToPosition
	a (Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/Entity;D)Z moveTo
	a (Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/PathEntity; createPath
	c ()V tick
net/minecraft/server/CriterionConditionDamage net/minecraft/advancements/critereon/DamagePredicate
	a ANY
	b dealtDamage
	c takenDamage
	d sourceEntity
	e blocked
	f type
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionDamage; fromJson
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DamageSource;FFZ)Z matches
net/minecraft/server/EntityWitherSkull net/minecraft/world/entity/projectile/WitherSkull
	e DATA_DANGEROUS
	W_ ()Z shouldBurn
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;F)F getBlockExplosionResistance
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/MovingObjectPositionEntity;)V onHitEntity
	aS ()Z isPickable
	bp ()Z isOnFire
	e ()V defineSynchedData
	i ()F getInertia
	isCharged ()Z isDangerous
	setCharged (Z)V setDangerous
ebe$1 net/minecraft/client/renderer/block/model/ItemTransforms$1
	a $SwitchMap$net$minecraft$client$renderer$block$model$ItemTransforms$TransformType
net/minecraft/server/TileEntitySmoker net/minecraft/world/level/block/entity/SmokerBlockEntity
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/ItemStack;)I getBurnDuration
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
net/minecraft/server/Quaternion com/mojang/math/Quaternion
	a ONE
	b i
	c j
	d k
	e r
	a ()F i
	a (F)V mul
	a (FFFF)V set
	a (Lnet/minecraft/server/Quaternion;)V mul
	b ()F j
	b (F)F cos
	c ()F k
	c (F)F sin
	d ()F r
	e ()V conj
	f ()V normalize
	g ()Lnet/minecraft/server/Quaternion; copy
net/minecraft/server/BlockPressurePlateWeighted net/minecraft/world/level/block/WeightedPressurePlateBlock
	weight maxWeight
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOnSound
	a (Lnet/minecraft/server/IBlockData;I)Lnet/minecraft/server/IBlockData; setSignalForState
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOffSound
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getSignalStrength
	c ()I getPressedTime
	g (Lnet/minecraft/server/IBlockData;)I getSignalForState
net/minecraft/server/TileEntityBarrel net/minecraft/world/level/block/entity/BarrelBlockEntity
	b openCount
	Z_ ()I getContainerSize
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/NonNullList;)V setItems
	b_ (Lnet/minecraft/server/EntityHuman;)V stopOpen
	c_ (Lnet/minecraft/server/EntityHuman;)V startOpen
	f ()Lnet/minecraft/server/NonNullList; getItems
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	h ()V recheckOpen
	j ()V scheduleRecheck
	playOpenSound (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/SoundEffect;)V playSound
	setOpenFlag (Lnet/minecraft/server/IBlockData;Z)V updateBlockState
net/minecraft/server/NBTTagList net/minecraft/nbt/ListTag
	a TYPE
	b INLINE_ELEMENT_TYPES
	a ()B getId
	a (ILnet/minecraft/server/NBTBase;)Z setTag
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (Lnet/minecraft/server/NBTBase;)Z updateType
	b ()Lnet/minecraft/server/NBTTagType; getType
	b (I)Lnet/minecraft/server/NBTTagList; getList
	b (ILnet/minecraft/server/NBTBase;)Z addTag
	c ()Lnet/minecraft/server/NBTBase; copy
	c (ILnet/minecraft/server/NBTBase;)V add
	d ()Lnet/minecraft/server/NBTTagList; copy
	d (I)S getShort
	d (ILnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; set
	d_ ()B getElementType
	e (I)I getInt
	e_ ()V stripEmptyChildren
	f (I)[I getIntArray
	g ()V updateTypeAfterRemove
	g (I)[J getLongArray
	h (I)D getDouble
	i (I)F getFloat
	k (I)Lnet/minecraft/server/NBTBase; get
dpl$1 net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen$1
	a this$0
	c ()Lnet/minecraft/server/IChatMutableComponent; createNarrationMessage
net/minecraft/server/EntityGolem net/minecraft/world/entity/animal/AbstractGolem
	D ()I getAmbientSoundInterval
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	b (FF)Z causeFallDamage
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h (D)Z removeWhenFarAway
net/minecraft/server/ItemArmorStand net/minecraft/world/item/ArmorStandItem
	a (Lnet/minecraft/server/Entity;)Z lambda$useOn$0
	a (Lnet/minecraft/server/EntityArmorStand;Ljava/util/Random;)V randomizePose
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
net/minecraft/server/LootItemConditionEntityScore net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition
	a scores
	b entityTarget
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Scoreboard;Ljava/lang/String;Lnet/minecraft/server/LootValueBounds;)Z hasScore
	a (Lnet/minecraft/server/LootItemConditionEntityScore;)Ljava/util/Map; access$100
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;)Ldbg$a; hasScores
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lnet/minecraft/server/LootItemConditionType; getType
	b (Lnet/minecraft/server/LootItemConditionEntityScore;)Lnet/minecraft/server/LootTableInfo$EntityTarget; access$200
net/minecraft/server/EntityCreeper net/minecraft/world/entity/monster/Creeper
	POWERED DATA_IS_POWERED
	b DATA_SWELL_DIR
	bo oldSwell
	bs droppedSkulls
	d DATA_IS_IGNITED
	fuseTicks swell
	maxFuseTicks maxSwell
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	a (I)V setSwellDir
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$mobInteract$0
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLightning;)V thunderHit
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bO ()I getMaxFallDistance
	canCauseHeadDrop ()Z canDropMobsSkull
	createEffectCloud ()V spawnLingeringCloud
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()I getSwellDir
	explode ()V explodeCreeper
	j ()V tick
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	o ()V registerGoals
	setCausedHeadDrop ()V increaseDroppedSkulls
	y (F)F getSwelling
net/minecraft/server/DragonControllerDying net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase
	b targetLocation
	c time
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
net/minecraft/server/ContainerMerchant net/minecraft/world/inventory/MerchantMenu
	e merchantLevel
	f showProgressBar
	g canRestock
	inventoryMerchant tradeContainer
	merchant trader
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/server/MerchantRecipeList;)V setOffers
	a (Z)V setShowProgressBar
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isSameItem
	b (Z)V setCanRestock
	c (ILnet/minecraft/server/ItemStack;)V moveFromInventoryToPaymentSlot
	d (I)V setSelectionHint
	e ()I getTraderXp
	e (I)V setXp
	f ()I getFutureTraderXp
	f (I)V setMerchantLevel
	g ()I getTraderLevel
	g (I)V tryMoveItems
	h ()Z canRestock
	i ()Lnet/minecraft/server/MerchantRecipeList; getOffers
	j ()Z showProgressBar
	k ()V playTradeSound
del$1 com/mojang/blaze3d/platform/InputConstants$1
net/minecraft/server/ThreadNamedUncaughtExceptionHandler net/minecraft/DefaultUncaughtExceptionHandlerWithName
	a logger
net/minecraft/server/CommandExecute net/minecraft/server/commands/ExecuteCommand
	a ERROR_AREA_TOO_LARGE
	b ERROR_CONDITIONAL_FAILED
	c ERROR_CONDITIONAL_FAILED_COUNT
	d CALLBACK_CHAINER
	e SUGGEST_PREDICATE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/ResultConsumer;)Lcom/mojang/brigadier/ResultConsumer; lambda$static$3
	a (Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$null$2
	a (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$51
	a (Lcom/mojang/brigadier/context/CommandContext;I)Lnet/minecraft/server/NBTBase; lambda$null$31
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$4
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z checkScore
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Z checkScore
	a (Lcom/mojang/brigadier/context/CommandContext;Z)I checkIfRegions
	a (Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection; expect
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLwx$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; addConditional
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder; addIfBlocksConditional
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; addConditionals
	a (Lcom/mojang/brigadier/tree/CommandNode;ZLza$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$addConditionals$54
	a (Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrapStores
	a (Lcom/mojang/brigadier/tree/LiteralCommandNode;Lza$c;ZLcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$wrapStores$33
	a (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$null$46
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Ljava/util/Collection;Lnet/minecraft/server/Scoreboard;Lnet/minecraft/server/ScoreboardObjective;ZLcom/mojang/brigadier/context/CommandContext;ZI)V lambda$storeValue$34
	a (Ljava/util/function/IntFunction;I)Lnet/minecraft/server/NBTBase; lambda$null$36
	a (Lnet/minecraft/server/CommandDataAccessor;Ldr$h;)I checkMatchingData
	a (Lnet/minecraft/server/CommandDataAccessor;ZLdr$h;Ljava/util/function/IntFunction;Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$storeData$37
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$6
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;Z)Lnet/minecraft/server/CommandListenerWrapper; storeValue
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;ZZ)Lnet/minecraft/server/CommandListenerWrapper; storeValue
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;Ldr$h;Ljava/util/function/IntFunction;Z)Lnet/minecraft/server/CommandListenerWrapper; storeData
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/LootItemCondition;)Z checkCustomPredicate
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Z)Ljava/util/OptionalInt; checkRegions
	a (Lwx$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$createNumericConditionalHandler$56
	a (Lza$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$53
	a (Lza$c;ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$null$32
	a (ZLcom/mojang/brigadier/context/CommandContext;)I lambda$addIfBlocksConditional$61
	a (ZLwx$a;)Lcom/mojang/brigadier/Command; createNumericConditionalHandler
	a (ZLwx$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$addConditional$58
	a (ZLza$c;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$null$52
	a (ZZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$addIfBlocksConditional$59
	a (ZZLnet/minecraft/server/BossBattleCustom;Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$storeValue$35
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$addConditionals$50
	b (Lcom/mojang/brigadier/context/CommandContext;I)Lnet/minecraft/server/NBTBase; lambda$null$29
	b (Lcom/mojang/brigadier/context/CommandContext;Z)I checkUnlessRegions
	b (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$null$44
	b (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$5
	b (Lwx$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$createNumericConditionalHandler$55
	b (Lza$c;ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$null$30
	b (ZLcom/mojang/brigadier/context/CommandContext;)I lambda$addIfBlocksConditional$60
	b (ZLwx$b;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$addConditional$57
	c (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$48
	c (Lcom/mojang/brigadier/context/CommandContext;I)Lnet/minecraft/server/NBTBase; lambda$null$27
	c (Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt; checkRegions
	c (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$null$42
	c (Lza$c;ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$null$28
	c (ZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$addConditionals$49
	d (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$47
	d (Lcom/mojang/brigadier/context/CommandContext;I)Lnet/minecraft/server/NBTBase; lambda$null$25
	d (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$null$40
	d (Lza$c;ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$null$26
	d (ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$wrapStores$20
	e (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$45
	e (Lcom/mojang/brigadier/context/CommandContext;I)Lnet/minecraft/server/NBTBase; lambda$null$23
	e (Lza$c;ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$null$24
	e (ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$wrapStores$19
	f (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$43
	f (Lcom/mojang/brigadier/context/CommandContext;I)Lnet/minecraft/server/NBTBase; lambda$null$21
	f (Lza$c;ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$null$22
	f (ZLcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$wrapStores$18
	g (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$41
	h (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$39
	i (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$38
	j (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$register$17
	k (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$register$16
	l (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$register$15
	m (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$register$14
	n (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$13
	o (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$12
	p (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$register$11
	q (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$10
	r (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandListenerWrapper; lambda$register$9
	s (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$8
	t (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$7
anp$a net/minecraft/util/profiling/FilledProfileResults$CounterCollector
	a selfValue
	b totalValue
	c children
	a (Lanp$a;)J access$000
	a (Ljava/lang/String;)Lanp$a; lambda$addValue$0
	a (Ljava/util/Iterator;J)V addValue
	b (Lanp$a;)J access$100
	c (Lanp$a;)Ljava/util/Map; access$200
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairs2 net/minecraft/world/level/levelgen/structure/StrongholdPieces$StairsDown
	a isSource
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairs2; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/IEntityAccess net/minecraft/world/level/EntityGetter
	a (DDDDLjava/util/function/Predicate;)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (DDDDZ)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/List; getEntitiesOfClass
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntitiesOfClass
	a (Ljava/lang/Class;Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;DDDLnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/EntityLiving; getNearestEntity
	a (Ljava/lang/Class;Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/List; getNearbyEntities
	a (Ljava/util/List;Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;DDD)Lnet/minecraft/server/EntityLiving; getNearestEntity
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)Z lambda$getEntityCollisions$0
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/VoxelShape;)Z isUnobstructed
	a (Lnet/minecraft/server/PathfinderTargetCondition;DDD)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;DDD)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/List; getNearbyPlayers
	b (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/List; getLoadedEntitiesOfClass
	b (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getLoadedEntitiesOfClass
	b (Ljava/lang/Class;Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;DDDLnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/EntityLiving; getNearestLoadedEntity
	b (Ljava/util/UUID;)Lnet/minecraft/server/EntityHuman; getPlayerByUUID
	c (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; getEntityCollisions
	findNearbyPlayer (Lnet/minecraft/server/Entity;D)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	getPlayers ()Ljava/util/List; players
	isPlayerNearby (DDDD)Z hasNearbyAlivePlayer
fk$a net/minecraft/commands/synchronization/ArgumentTypes$Entry
	a clazz
	b serializer
	c name
net/minecraft/server/TrunkPlacerDarkOak net/minecraft/world/level/levelgen/feature/trunkplacers/DarkOakTrunkPlacer
	a CODEC
	a ()Lnet/minecraft/server/TrunkPlacers; type
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;ILnet/minecraft/server/BlockPosition;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
net/minecraft/server/WorldGenShipwreck net/minecraft/world/level/levelgen/structure/ShipwreckPieces
	a PIVOT
	b STRUCTURE_LOCATION_BEACHED
	c STRUCTURE_LOCATION_OCEAN
	a ()Lnet/minecraft/server/BlockPosition; access$000
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureShipwreckConfiguration;)V addPieces
net/minecraft/server/CriterionConditionNBT net/minecraft/advancements/critereon/NbtPredicate
	a ANY
	b tag
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionNBT; fromJson
	a (Lnet/minecraft/server/Entity;)Z matches
	a (Lnet/minecraft/server/ItemStack;)Z matches
	a (Lnet/minecraft/server/NBTBase;)Z matches
	b (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/NBTTagCompound; getEntityTagToCompare
net/minecraft/server/BlockCauldron net/minecraft/world/level/block/CauldronBlock
	b SHAPE
	c INSIDE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)V setWaterLevel
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V handleRain
net/minecraft/server/SensorType net/minecraft/world/entity/ai/sensing/SensorType
	a DUMMY
	b NEAREST_ITEMS
	c NEAREST_LIVING_ENTITIES
	d NEAREST_PLAYERS
	e NEAREST_BED
	f HURT_BY
	g VILLAGER_HOSTILES
	h VILLAGER_BABIES
	i SECONDARY_POIS
	j GOLEM_DETECTED
	k PIGLIN_SPECIFIC_SENSOR
	l PIGLIN_BRUTE_SPECIFIC_SENSOR
	m HOGLIN_SPECIFIC_SENSOR
	n NEAREST_ADULT
	o factory
	a ()Lnet/minecraft/server/Sensor; create
	a (Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/server/SensorType; register
net/minecraft/server/BlockBamboo net/minecraft/world/level/block/BambooBlock
	a SMALL_SHAPE
	b LARGE_SHAPE
	c COLLISION_SHAPE
	d AGE
	e LEAVES
	f STAGE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getHeightAboveUpToMax
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getDestroyProgress
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;I)V growBamboo
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	a_ (Lnet/minecraft/server/IBlockData;)Z isRandomlyTicking
	ah_ ()Lnet/minecraft/server/BlockBase$EnumRandomOffset; getOffsetType
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getHeightBelowUpToMax
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
net/minecraft/server/LootItemFunctionExplosionDecay net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
	c ()Ldaf$a; explosionDecay
dsd$a net/minecraft/client/gui/screens/worldselection/WorldPreset$PresetEditor
dbk$b net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionBlockStateProperty;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lnet/minecraft/server/Block;Ljava/lang/String;)V lambda$deserialize$1
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/IllegalArgumentException; lambda$deserialize$0
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionBlockStateProperty; deserialize
dbk$a net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder
	a block
	b properties
	a (Lcm$a;)Ldbk$a; setProperties
net/minecraft/server/IDecoratable net/minecraft/world/level/levelgen/Decoratable
	a ()Ljava/lang/Object; squared
	a (I)Ljava/lang/Object; chance
	a (Lnet/minecraft/server/IntSpread;)Ljava/lang/Object; count
	a (Lnet/minecraft/server/WorldGenDecoratorConfigured;)Ljava/lang/Object; decorated
	b (I)Ljava/lang/Object; count
	c (I)Ljava/lang/Object; countRandom
	d (I)Ljava/lang/Object; range
cjy$a net/minecraft/world/level/levelgen/feature/MineshaftFeature$MineShaftStart
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenMineshaftConfiguration;)V generatePieces
net/minecraft/server/TagsFluid net/minecraft/tags/FluidTags
	a HELPER
	a ()Lnet/minecraft/server/Tags; getAllTags
	a (Ljava/lang/String;)Laej$e; bind
	b ()Ljava/util/List; getWrappers
net/minecraft/server/EntityHorseDonkey net/minecraft/world/entity/animal/horse/Donkey
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	fg ()Lnet/minecraft/server/SoundEffect; getEatingSound
	fh ()Lnet/minecraft/server/SoundEffect; getAngrySound
net/minecraft/server/MerchantRecipeList net/minecraft/world/item/trading/MerchantOffers
	a ()Lnet/minecraft/server/NBTTagCompound; createTag
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;I)Lnet/minecraft/server/MerchantRecipe; getRecipeFor
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToStream
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/MerchantRecipeList; createFromStream
dxk$1 net/minecraft/client/particle/EndRodParticle$1
net/minecraft/server/GuiStatsComponent net/minecraft/server/gui/StatsComponent
	a DECIMAL_FORMAT
	b values
	c vp
	d msgs
	e server
	f timer
	a ()V close
	a (Ljava/awt/event/ActionEvent;)V lambda$new$1
	a (Ljava/text/DecimalFormat;)V lambda$static$0
	a ([J)D getAverage
	b ()V tick
dnr$a$a net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry
	a this$1
	b biome
	c name
	a (DDI)Z mouseClicked
	a (Ldfj;IIIIIIIZF)V render
	a (Ldnr$a$a;)Lnet/minecraft/server/BiomeBase; access$300
net/minecraft/server/IWorldDataServer net/minecraft/world/level/storage/ServerLevelData
	a (I)V setClearWeatherTime
	a (Lcfr$c;)V setWorldBorder
	a (Ljava/util/UUID;)V setWanderingTraderId
	a (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	c (Z)V setInitialized
	g (I)V setWanderingTraderSpawnDelay
	getName ()Ljava/lang/String; getLevelName
	getThunderDuration ()I getThunderTime
	getWeatherDuration ()I getRainTime
	h ()I getClearWeatherTime
	h (I)V setWanderingTraderSpawnChance
	o ()Z getAllowCommands
	p ()Z isInitialized
	r ()Lcfr$c; getWorldBorder
	setThunderDuration (I)V setThunderTime
	setTime (J)V setGameTime
	setWeatherDuration (I)V setRainTime
	u ()Lnet/minecraft/server/CustomFunctionCallbackTimerQueue; getScheduledEvents
	v ()I getWanderingTraderSpawnDelay
	w ()I getWanderingTraderSpawnChance
	x ()Ljava/util/UUID; getWanderingTraderId
	y ()Ljava/lang/String; lambda$fillCrashReportCategory$1
	z ()Ljava/lang/String; lambda$fillCrashReportCategory$0
net/minecraft/server/PlayerConnection net/minecraft/server/network/ServerGamePacketListenerImpl
	A awaitingTeleportTime
	B clientIsFloating
	C aboveGroundTickCount
	D clientVehicleIsFloating
	E aboveGroundVehicleTickCount
	awaitingKeepAlive keepAlivePending
	c LOGGER
	chatThrottle chatSpamTickCount
	e tickCount
	h keepAliveChallenge
	j dropSpamTickCount
	k expectedAcks
	l firstGoodX
	lastKeepAlive keepAliveTime
	m firstGoodY
	minecraftServer server
	n firstGoodZ
	networkManager connection
	o lastGoodX
	p lastGoodY
	processedMovePackets knownMovePacketCount
	q lastGoodZ
	r lastVehicle
	receivedMovePackets receivedMovePacketCount
	s vehicleFirstGoodX
	t vehicleFirstGoodY
	teleportAwait awaitingTeleport
	teleportPos awaitingPositionFromClient
	u vehicleFirstGoodZ
	v vehicleLastGoodX
	w vehicleLastGoodY
	x vehicleLastGoodZ
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (DDDFF)V teleport
	a (DDDFFLjava/util/Set;)V teleport
	a (Ljava/lang/String;)V info
	a (Lnet/minecraft/server/Entity;)Z noBlocksAround
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;)Z wasBlockPlacementAttempt
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/IChatBaseComponent;Lio/netty/util/concurrent/Future;)V lambda$disconnect$0
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/AxisAlignedBB;)Z isPlayerCollidingWithAnythingNew
	a (Lnet/minecraft/server/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V send
	a (Lnet/minecraft/server/PacketPlayInAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/server/PacketPlayInAdvancements;)V handleSeenAdvancements
	a (Lnet/minecraft/server/PacketPlayInArmAnimation;)V handleAnimate
	a (Lnet/minecraft/server/PacketPlayInAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/server/PacketPlayInAutoRecipe;Lnet/minecraft/server/IRecipe;)V lambda$handlePlaceRecipe$5
	a (Lnet/minecraft/server/PacketPlayInBEdit;)V handleEditBook
	a (Lnet/minecraft/server/PacketPlayInBeacon;)V handleSetBeaconPacket
	a (Lnet/minecraft/server/PacketPlayInBlockDig;)V handlePlayerAction
	a (Lnet/minecraft/server/PacketPlayInBlockPlace;)V handleUseItem
	a (Lnet/minecraft/server/PacketPlayInBoatMove;)V handlePaddleBoat
	a (Lnet/minecraft/server/PacketPlayInChat;)V handleChat
	a (Lnet/minecraft/server/PacketPlayInClientCommand;)V handleClientCommand
	a (Lnet/minecraft/server/PacketPlayInCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/server/PacketPlayInCustomPayload;)V handleCustomPayload
	a (Lnet/minecraft/server/PacketPlayInDifficultyChange;)V handleChangeDifficulty
	a (Lnet/minecraft/server/PacketPlayInDifficultyLock;)V handleLockDifficulty
	a (Lnet/minecraft/server/PacketPlayInEnchantItem;)V handleContainerButtonClick
	a (Lnet/minecraft/server/PacketPlayInEntityAction;)V handlePlayerCommand
	a (Lnet/minecraft/server/PacketPlayInEntityNBTQuery;)V handleEntityTagQuery
	a (Lnet/minecraft/server/PacketPlayInFlying;)V handleMovePlayer
	a (Lnet/minecraft/server/PacketPlayInHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/server/PacketPlayInItemName;)V handleRenameItem
	a (Lnet/minecraft/server/PacketPlayInJigsawGenerate;)V handleJigsawGenerate
	a (Lnet/minecraft/server/PacketPlayInKeepAlive;)V handleKeepAlive
	a (Lnet/minecraft/server/PacketPlayInPickItem;)V handlePickItem
	a (Lnet/minecraft/server/PacketPlayInRecipeDisplayed;)V handleRecipeBookSeenRecipePacket
	a (Lnet/minecraft/server/PacketPlayInRecipeSettings;)V handleRecipeBookChangeSettingsPacket
	a (Lnet/minecraft/server/PacketPlayInResourcePackStatus;)V handleResourcePackResponse
	a (Lnet/minecraft/server/PacketPlayInSetCommandBlock;)V handleSetCommandBlock
	a (Lnet/minecraft/server/PacketPlayInSetCommandMinecart;)V handleSetCommandMinecart
	a (Lnet/minecraft/server/PacketPlayInSetCreativeSlot;)V handleSetCreativeModeSlot
	a (Lnet/minecraft/server/PacketPlayInSetJigsaw;)V handleSetJigsawBlock
	a (Lnet/minecraft/server/PacketPlayInSettings;)V handleClientInformation
	a (Lnet/minecraft/server/PacketPlayInSpectate;)V handleTeleportToEntityPacket
	a (Lnet/minecraft/server/PacketPlayInSteerVehicle;)V handlePlayerInput
	a (Lnet/minecraft/server/PacketPlayInStruct;)V handleSetStructureBlock
	a (Lnet/minecraft/server/PacketPlayInTabComplete;)V handleCustomCommandSuggestions
	a (Lnet/minecraft/server/PacketPlayInTabComplete;Lcom/mojang/brigadier/suggestion/Suggestions;)V lambda$handleCustomCommandSuggestions$1
	a (Lnet/minecraft/server/PacketPlayInTeleportAccept;)V handleAcceptTeleportPacket
	a (Lnet/minecraft/server/PacketPlayInTileNBTQuery;)V handleBlockEntityTagQuery
	a (Lnet/minecraft/server/PacketPlayInTrSel;)V handleSelectTrade
	a (Lnet/minecraft/server/PacketPlayInTransaction;)V handleContainerAck
	a (Lnet/minecraft/server/PacketPlayInUpdateSign;)V handleSignUpdate
	a (Lnet/minecraft/server/PacketPlayInUseEntity;)V handleInteract
	a (Lnet/minecraft/server/PacketPlayInUseItem;)V handleUseItemOn
	a (Lnet/minecraft/server/PacketPlayInVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/server/PacketPlayInWindowClick;)V handleContainerClick
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;)Z lambda$isPlayerCollidingWithAnythingNew$3
	b (Ljava/lang/String;)V warn
	b (Lnet/minecraft/server/Entity;)Z lambda$isPlayerCollidingWithAnythingNew$2
	b (Lnet/minecraft/server/Packet;)Ljava/lang/String; lambda$send$4
	b (Lnet/minecraft/server/PacketPlayInFlying;)Z containsInvalidValues
	b (Lnet/minecraft/server/PacketPlayInVehicleMove;)Z containsInvalidValues
	isExemptPlayer ()Z isSingleplayerOwner
	sendPacket (Lnet/minecraft/server/Packet;)V send
	syncPosition ()V resetPosition
net/minecraft/server/PacketPlayOutCustomSoundEffect net/minecraft/network/protocol/game/ClientboundCustomSoundPacket
	a name
	b source
	c x
	d y
	e z
	f volume
	g pitch
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getName
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/SoundCategory; getSource
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()F getVolume
	h ()F getPitch
cea$1 net/minecraft/world/level/block/piston/PistonMovingBlockEntity$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	b $SwitchMap$net$minecraft$core$Direction
apv$a net/minecraft/world/entity/AgableMob$AgableMobGroupData
	a groupSize
	b shouldSpawnBaby
	c babySpawnChance
	a ()I getGroupSize
	b ()V increaseGroupSizeByOne
	c ()Z isShouldSpawnBaby
	d ()F getBabySpawnChance
net/minecraft/server/BlockNetherSprouts net/minecraft/world/level/block/NetherSproutsBlock
	a SHAPE
	ah_ ()Lnet/minecraft/server/BlockBase$EnumRandomOffset; getOffsetType
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
dsd$5 net/minecraft/client/gui/screens/worldselection/WorldPreset$5
	a (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettingBase; lambda$generator$0
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/IRegistry;J)Lnet/minecraft/server/ChunkGenerator; generator
dsd$6 net/minecraft/client/gui/screens/worldselection/WorldPreset$6
	a (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettingBase; lambda$generator$1
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/IRegistry;J)Lnet/minecraft/server/ChunkGenerator; generator
	a (Lnet/minecraft/server/IRegistryCustom$Dimension;JZZ)Lnet/minecraft/server/GeneratorSettings; create
	b (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/DimensionManager; lambda$create$0
dsd$3 net/minecraft/client/gui/screens/worldselection/WorldPreset$3
	a (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettingBase; lambda$generator$0
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/IRegistry;J)Lnet/minecraft/server/ChunkGenerator; generator
dsd$4 net/minecraft/client/gui/screens/worldselection/WorldPreset$4
	a (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettingBase; lambda$generator$0
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/IRegistry;J)Lnet/minecraft/server/ChunkGenerator; generator
dsd$1 net/minecraft/client/gui/screens/worldselection/WorldPreset$1
	a (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettingBase; lambda$generator$0
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/IRegistry;J)Lnet/minecraft/server/ChunkGenerator; generator
dsd$2 net/minecraft/client/gui/screens/worldselection/WorldPreset$2
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/IRegistry;J)Lnet/minecraft/server/ChunkGenerator; generator
net/minecraft/server/EntityBird net/minecraft/world/entity/animal/FlyingAnimal
	fa ()Z isFlying
net/minecraft/server/PacketPlayOutTitle$EnumTitleAction net/minecraft/network/protocol/game/ClientboundSetTitlesPacket$Type
	g $VALUES
net/minecraft/server/PacketPlayOutEntityStatus net/minecraft/network/protocol/game/ClientboundEntityEventPacket
	a entityId
	b eventId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getEntity
	b ()B getEventId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
dsd$7 net/minecraft/client/gui/screens/worldselection/WorldPreset$7
	a (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettingBase; lambda$generator$0
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/IRegistry;J)Lnet/minecraft/server/ChunkGenerator; generator
dsd$8 net/minecraft/client/gui/screens/worldselection/WorldPreset$8
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/IRegistry;J)Lnet/minecraft/server/ChunkGenerator; generator
net/minecraft/server/NameReferencingFileConverter$FileConversionException net/minecraft/server/players/OldUsersConverter$ConversionError
net/minecraft/server/LootItemFunctionCopyState net/minecraft/world/level/storage/loot/functions/CopyBlockState
	a block
	b properties
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/Block;)Lczw$a; copyState
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;)Ljava/lang/String; serialize
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionCopyState;)Lnet/minecraft/server/Block; access$200
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;)V lambda$run$0
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
	b (Lnet/minecraft/server/LootItemFunctionCopyState;)Ljava/util/Set; access$300
net/minecraft/server/LootTableInfo net/minecraft/world/level/storage/loot/LootContext
	a random
	d lootTables
	e visitedTables
	f conditions
	g visitedConditions
	h params
	i dynamicDrops
	world level
	a ()Ljava/util/Random; getRandom
	a (Lnet/minecraft/server/LootItemCondition;)Z addVisitedCondition
	a (Lnet/minecraft/server/LootTable;)Z addVisitedTable
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootTable; getLootTable
	a (Lnet/minecraft/server/MinecraftKey;Ljava/util/function/Consumer;)V addDynamicDrops
	b (Lnet/minecraft/server/LootContextParameter;)Ljava/lang/Object; getParam
	b (Lnet/minecraft/server/LootItemCondition;)V removeVisitedCondition
	b (Lnet/minecraft/server/LootTable;)V removeVisitedTable
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootItemCondition; getCondition
	getContextParameter (Lnet/minecraft/server/LootContextParameter;)Ljava/lang/Object; getParamOrNull
	getWorld ()Lnet/minecraft/server/WorldServer; getLevel
	hasContextParameter (Lnet/minecraft/server/LootContextParameter;)Z hasParam
net/minecraft/server/BlockBubbleColumn net/minecraft/world/level/block/BubbleColumnBlock
	a DRAG_DOWN
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z canExistIn
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Z)V growColumn
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z getDrag
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/FluidType; takeLiquid
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/CommandSetBlock net/minecraft/server/commands/SetBlockCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ArgumentTileLocation;Lnet/minecraft/server/CommandSetBlock$Mode;Ljava/util/function/Predicate;)I setBlock
	a (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$null$3
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/ShapeDetectorShape net/minecraft/world/level/portal/PortalInfo
	pitch xRot
	position pos
	velocity speed
	yaw yRot
net/minecraft/server/WorldGenFeatureBasaltColumnsConfiguration net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration
	a CODEC
	b reach
	c height
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/WorldGenFeatureBasaltColumnsConfiguration;)Lnet/minecraft/server/IntSpread; lambda$null$1
	am_ ()Lnet/minecraft/server/IntSpread; reach
	b ()Lnet/minecraft/server/IntSpread; height
	b (Lnet/minecraft/server/WorldGenFeatureBasaltColumnsConfiguration;)Lnet/minecraft/server/IntSpread; lambda$null$0
de$a net/minecraft/commands/arguments/AngleArgument$SingleAngle
	a angle
	b isRelative
	a (Lnet/minecraft/server/CommandListenerWrapper;)F getAngle
net/minecraft/server/PacketPlayOutKeepAlive net/minecraft/network/protocol/game/ClientboundKeepAlivePacket
	a id
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()J getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/CriterionTrigger net/minecraft/advancements/CriterionTrigger
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Laf$a;)V addPlayerListener
	b (Lnet/minecraft/server/AdvancementDataPlayer;Laf$a;)V removePlayerListener
dly$a net/minecraft/client/gui/components/SubtitleOverlay$Subtitle
	a this$0
	b text
	c time
	d location
	a ()Lnet/minecraft/server/IChatBaseComponent; getText
	a (Lnet/minecraft/server/Vec3D;)V refresh
	b ()J getTime
	c ()Lnet/minecraft/server/Vec3D; getLocation
net/minecraft/server/PacketPlayInKeepAlive net/minecraft/network/protocol/game/ServerboundKeepAlivePacket
	a id
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()J getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/LootItemConditionType net/minecraft/world/level/storage/loot/predicates/LootItemConditionType
net/minecraft/server/IInventoryListener net/minecraft/world/ContainerListener
	a (Lnet/minecraft/server/IInventory;)V containerChanged
dv$a net/minecraft/commands/arguments/OperationArgument$Operation
de$1 net/minecraft/commands/arguments/AngleArgument$1
net/minecraft/server/ResourcePackSource net/minecraft/server/packs/repository/RepositorySource
	a (Ljava/util/function/Consumer;Labs$a;)V loadPacks
net/minecraft/server/VirtualLevelWritable net/minecraft/world/level/LevelSimulatedRW
dwy$1 net/minecraft/client/particle/BarrierParticle$1
ads$a net/minecraft/stats/RecipeBookSettings$TypeSettings
	a open
	b filtering
	a ()Lads$a; copy
	a (Lads$a;)Z access$000
	a (Lads$a;Z)Z access$002
	b (Lads$a;)Z access$100
	b (Lads$a;Z)Z access$102
net/minecraft/server/BlockWoodButton net/minecraft/world/level/block/WoodButtonBlock
	a (Z)Lnet/minecraft/server/SoundEffect; getSound
eju$a net/minecraft/client/renderer/texture/TextureAtlasSprite$Info
	a name
	b width
	c height
	d metadata
	a ()Lnet/minecraft/server/MinecraftKey; name
	a (Leju$a;)Leku; access$000
	b ()I width
	b (Leju$a;)I access$100
	c ()I height
	c (Leju$a;)I access$200
	d (Leju$a;)Lnet/minecraft/server/MinecraftKey; access$300
net/minecraft/server/TagUtil net/minecraft/tags/StaticTagHelper
	a source
	b wrappers
	c collectionGetter
	a ()V resetToEmpty
	a (Ljava/lang/String;)Laej$e; bind
	a (Lnet/minecraft/server/ITagRegistry;)V reset
	a (Lnet/minecraft/server/Tag;Laeh$a;)V lambda$resetToEmpty$1
	a (Lnet/minecraft/server/Tag;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; lambda$null$0
	a (Lnet/minecraft/server/Tags;Laeh$a;)V lambda$reset$2
	b ()Lnet/minecraft/server/Tags; getAllTags
	b (Lnet/minecraft/server/ITagRegistry;)Ljava/util/Set; getMissingTags
	c ()Ljava/util/List; getWrappers
dxk$a net/minecraft/client/particle/EndRodParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/GenLayerDeepOcean net/minecraft/world/level/newbiome/layer/AddDeepOceanLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
eju$b net/minecraft/client/renderer/texture/TextureAtlasSprite$InterpolationData
	a this$0
	b activeFrame
	a ()V uploadInterpolatedFrame
	a (DII)I mix
	a (IIII)I getPixel
	a (Leju$b;)V access$500
net/minecraft/server/DataConverterVillagerProfession net/minecraft/util/datafix/fixes/VillagerDataFix
	a (II)Ljava/lang/String; upgradeData
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/WorldGenFeatureNetherForestVegetation net/minecraft/world/level/levelgen/feature/NetherForestVegetationFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureBlockPileConfiguration;II)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureBlockPileConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/EnumItemSlot$Function net/minecraft/world/entity/EquipmentSlot$Type
	c $VALUES
net/minecraft/server/PathfinderGoalLlamaFollow net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal
	a llama
	b speedModifier
	c distCheckCounter
	a ()Z canUse
	a (Lnet/minecraft/server/Entity;)Z lambda$canUse$0
	a (Lnet/minecraft/server/EntityLlama;I)Z firstIsLeashed
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
net/minecraft/server/BehaviorExpirableMemory net/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry
	b predicate
	c sourceMemory
	d targetMemory
	e durationOfCopy
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
dv$b net/minecraft/commands/arguments/OperationArgument$SimpleOperation
net/minecraft/server/EntityGuardian net/minecraft/world/entity/monster/Guardian
	b DATA_ID_MOVING
	bo clientSideTailAnimation
	bp clientSideTailAnimationO
	bq clientSideTailAnimationSpeed
	br clientSideSpikesAnimation
	bs clientSideSpikesAnimationO
	bt clientSideCachedAttackTarget
	bu clientSideAttackTime
	bv clientSideTouchedGround
	d DATA_ID_ATTACK_TARGET
	goalRandomStroll randomStrollGoal
	A (F)F getAttackAnimationScale
	D ()I getAmbientSoundInterval
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	O ()I getMaxHeadXRot
	a (I)V setActiveAttackTarget
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityGuardian;I)V access$000
	a (Lnet/minecraft/server/EntityGuardian;Z)V access$100
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	aB ()Z isMovementNoisy
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkGuardianSpawnRules
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	cL ()Z canBreatheUnderwater
	dB ()Lnet/minecraft/server/EnumMonsterType; getMobType
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()I getAttackDuration
	eM ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eN ()Z isMoving
	eO ()Z hasActiveAttackTarget
	eP ()Lnet/minecraft/server/EntityLiving; getActiveAttackTarget
	g (Lnet/minecraft/server/Vec3D;)V travel
	getSoundFlop ()Lnet/minecraft/server/SoundEffect; getFlopSound
	k ()V aiStep
	o ()V registerGoals
	t (Z)V setMoving
	y (F)F getTailAnimation
	z (F)F getSpikesAnimation
net/minecraft/server/DamageSource net/minecraft/world/damagesource/DamageSource
	A isFireSource
	B isProjectile
	BURN ON_FIRE
	C scalesWithDifficulty
	D isMagic
	DRYOUT DRY_OUT
	E isExplosion
	FIRE IN_FIRE
	LIGHTNING LIGHTNING_BOLT
	STUCK IN_WALL
	translationIndex msgId
	w bypassArmor
	x bypassInvul
	y bypassMagic
	z exhaustion
	a ()Lnet/minecraft/server/DamageSource; badRespawnPointExplosion
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/DamageSource; thorns
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/DamageSource; trident
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/DamageSource; indirectMobAttack
	a (Lnet/minecraft/server/EntityFireworks;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/DamageSource; fireworks
	a (Lnet/minecraft/server/EntityWitherSkull;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/DamageSource; witherSkull
	b ()Z isProjectile
	b (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/DamageSource; sting
	c ()Lnet/minecraft/server/DamageSource; setProjectile
	c (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/DamageSource; indirectMagic
	d (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/DamageSource; explosion
	getExhaustionCost ()F getFoodExhaustion
	ignoresArmor ()Z isBypassArmor
	ignoresInvulnerability ()Z isBypassInvul
	isStarvation ()Z isBypassMagic
	j ()Lnet/minecraft/server/Entity; getDirectEntity
	projectile (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/DamageSource; thrown
	q ()Ljava/lang/String; getMsgId
	r ()Lnet/minecraft/server/DamageSource; setScalesWithDifficulty
	s ()Z scalesWithDifficulty
	setFire ()Lnet/minecraft/server/DamageSource; setIsFire
	setIgnoreArmor ()Lnet/minecraft/server/DamageSource; bypassArmor
	setIgnoresInvulnerability ()Lnet/minecraft/server/DamageSource; bypassInvul
	setStarvation ()Lnet/minecraft/server/DamageSource; bypassMagic
	v ()Z isCreativePlayer
	w ()Lnet/minecraft/server/Vec3D; getSourcePosition
cs$a net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance
	a level
	a (D)Z matches
dnn$1 net/minecraft/client/gui/screens/ChatScreen$1
	a this$0
	c ()Lnet/minecraft/server/IChatMutableComponent; createNarrationMessage
afy$2 net/minecraft/util/datafix/DataFixers$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/EntityWolf net/minecraft/world/entity/animal/Wolf
	bA PERSISTENT_ANGER_TIME
	bB persistentAngerTarget
	bq PREY_SELECTOR
	br DATA_INTERESTED_ID
	bs DATA_COLLAR_COLOR
	bt DATA_REMAINING_ANGER_TIME
	bu interestedAngle
	bv interestedAngleO
	bw isWet
	bx isShaking
	by shakeAnim
	bz shakeAnimO
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	E_ ()I getRemainingPersistentAngerTime
	F_ ()Ljava/util/UUID; getPersistentAngerTarget
	G_ ()V startPersistentAngerTimer
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	O ()I getMaxHeadXRot
	a (B)V handleEntityEvent
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z wantsToAttack
	a (Lnet/minecraft/server/EntityWolf;)Ljava/util/Random; access$000
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a_ (I)V setRemainingPersistentAngerTime
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityWolf; getBreedOffspring
	ce ()Lnet/minecraft/server/Vec3D; getLeashOffset
	dF ()F getSoundVolume
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eU ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eV ()Z isWet
	eW ()F getTailAngle
	eY ()Z isInterested
	eZ ()V cancelShake
	eq ()I getMaxSpawnClusterSize
	g (FF)F getBodyRollAngle
	j ()V tick
	j (Lnet/minecraft/server/EntityLiving;)Z lambda$static$0
	k ()V aiStep
	k (Lnet/minecraft/server/ItemStack;)Z isFood
	o ()V registerGoals
	u (Z)V setTame
	x (Z)V setIsInterested
	y (F)F getWetShade
	z (F)F getHeadRollAngle
afy$1 net/minecraft/util/datafix/DataFixers$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/Vector3f net/minecraft/core/Rotations
	a ()Lnet/minecraft/server/NBTTagList; save
	e ()F getWrappedX
	f ()F getWrappedY
	g ()F getWrappedZ
dry$a$1 net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$BooleanRuleEntry$1
	a val$this$0
	b val$name
	c val$value
	d val$narration
	e this$1
	c ()Lnet/minecraft/server/IChatMutableComponent; createNarrationMessage
net/minecraft/server/ArraySetSorted net/minecraft/util/SortedArraySet
	a comparator
	b contents
	c size
	a ()Lnet/minecraft/server/ArraySetSorted; create
	a (I)Lnet/minecraft/server/ArraySetSorted; create
	a (Ljava/lang/Object;)Ljava/lang/Object; addOrGet
	a (Ljava/lang/Object;I)V addInternal
	a (Ljava/util/Comparator;)Lnet/minecraft/server/ArraySetSorted; create
	a (Ljava/util/Comparator;I)Lnet/minecraft/server/ArraySetSorted; create
	a (Lnet/minecraft/server/ArraySetSorted;)I access$000
	a (Lnet/minecraft/server/ArraySetSorted;I)V access$200
	a ([Ljava/lang/Object;)[Ljava/lang/Object; castRawArray
	b ()Ljava/lang/Object; first
	b (I)I getInsertionPosition
	b (Ljava/lang/Object;)Ljava/lang/Object; get
	b (Lnet/minecraft/server/ArraySetSorted;)[Ljava/lang/Object; access$100
	c ()Ljava/lang/Object; last
	c (I)V grow
	c (Ljava/lang/Object;)I findIndex
	d (I)V removeInternal
	e (I)Ljava/lang/Object; getInternal
net/minecraft/server/CriterionTriggerPlayerHurtEntity net/minecraft/advancements/critereon/PlayerHurtEntityTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lce$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;FFZ)V trigger
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/DamageSource;FFZLce$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/BlockEnderChest net/minecraft/world/level/block/EnderChestBlock
	c WATERLOGGED
	d SHAPE
	e CONTAINER_TITLE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/DoubleBlockFinder$Result; combine
	a (Lnet/minecraft/server/InventoryEnderChest;ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$use$1
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c ()Lnet/minecraft/server/TileEntityTypes; lambda$new$0
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/RegionFile net/minecraft/world/level/chunk/storage/RegionFile
	b LOGGER
	c PADDING_BUFFER
	dataFile file
	e externalFileDir
	f version
	freeSectors usedSectors
	g header
	h offsets
	i timestamps
	a ()V flush
	a (B)Z isExternalStreamChunk
	a (I)I getNumSectors
	a (II)I packSectorOffset
	a (Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream; createStream
	a (Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Lcgv$b; writeToExternalFile
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)V lambda$writeToExternalFile$1
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/io/DataInputStream; getChunkDataInputStream
	a (Lnet/minecraft/server/ChunkCoordIntPair;B)Ljava/io/DataInputStream; createExternalChunkInputStream
	a (Lnet/minecraft/server/ChunkCoordIntPair;BLjava/io/InputStream;)Ljava/io/DataInputStream; createChunkInputStream
	a (Lnet/minecraft/server/ChunkCoordIntPair;Ljava/nio/ByteBuffer;)V write
	a (Lnet/minecraft/server/RegionFile;)Lnet/minecraft/server/RegionFileCompression; access$000
	b ()Ljava/nio/ByteBuffer; createExternalStub
	b (B)B getExternalChunkVersion
	b (I)I getSectorNumber
	b (Lnet/minecraft/server/ChunkCoordIntPair;)Z doesChunkExist
	c ()V writeHeader
	c (I)I sizeToSectors
	c (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/io/DataOutputStream; getChunkDataOutputStream
	chunkExists (Lnet/minecraft/server/ChunkCoordIntPair;)Z hasChunk
	d ()V padToFullSector
	e (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/nio/file/Path; getExternalChunkPath
	g (Lnet/minecraft/server/ChunkCoordIntPair;)I getOffsetIndex
	h (Lnet/minecraft/server/ChunkCoordIntPair;)V lambda$write$0
bdd$a net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt
	a enderman
	b target
	a ()Z canUse
	c ()V start
	e ()V tick
net/minecraft/server/EntityMinecartAbstract$EnumMinecartType net/minecraft/world/entity/vehicle/AbstractMinecart$Type
	h $VALUES
net/minecraft/server/Tuple net/minecraft/util/Tuple
	a ()Ljava/lang/Object; getA
	a (Ljava/lang/Object;)V setA
	b ()Ljava/lang/Object; getB
	b (Ljava/lang/Object;)V setB
dzq$a net/minecraft/client/renderer/FogRenderer$FogMode
	a FOG_SKY
	b FOG_TERRAIN
	c $VALUES
net/minecraft/server/DataConverterEntityPufferfish net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix
	a RENAMED_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/server/GenLayerTopSoil net/minecraft/world/level/newbiome/layer/AddSnowLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
net/minecraft/server/WorldGenDecoratorCountExtra net/minecraft/world/level/levelgen/placement/CountWithExtraChanceDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyExtraChanceConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$place$0
net/minecraft/server/EntityFireballFireball net/minecraft/world/entity/projectile/Fireball
	e DATA_ITEM_STACK
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/ItemStack;)V lambda$setItem$0
	e ()V defineSynchedData
	g ()Lnet/minecraft/server/ItemStack; getItem
	getItem ()Lnet/minecraft/server/ItemStack; getItemRaw
net/minecraft/server/WorldGenFeatureStateProviderRotatedBlock net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider
	b CODEC
	c block
	a ()Lnet/minecraft/server/WorldGenFeatureStateProviders; type
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getState
	a (Lnet/minecraft/server/WorldGenFeatureStateProviderRotatedBlock;)Lnet/minecraft/server/Block; lambda$static$0
net/minecraft/server/EntityRabbit$PathfinderGoalKillerRabbitMeleeAttack net/minecraft/world/entity/animal/Rabbit$EvilRabbitAttackGoal
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
eju$1 net/minecraft/client/renderer/texture/TextureAtlasSprite$1
net/minecraft/server/LootSelectorEmpty net/minecraft/world/level/storage/loot/entries/EmptyLootItem
	a ()Lnet/minecraft/server/LootEntryType; getType
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
	b ()Lczp$a; emptyItem
crg$a net/minecraft/world/level/levelgen/structure/NetherFossilFeature$FeatureStart
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)V generatePieces
net/minecraft/server/ShulkerUtil net/minecraft/world/ShulkerSharedHelper
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/AxisAlignedBB; openBoundingBox
net/minecraft/server/BlockEnderPortal net/minecraft/world/level/block/EndPortalBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
net/minecraft/server/NetworkManager$QueuedPacket net/minecraft/network/Connection$PacketHolder
	a packet
	b listener
	a (Lnet/minecraft/server/NetworkManager$QueuedPacket;)Lnet/minecraft/server/Packet; access$000
	b (Lnet/minecraft/server/NetworkManager$QueuedPacket;)Lio/netty/util/concurrent/GenericFutureListener; access$100
net/minecraft/server/CommandSpawnpoint net/minecraft/server/commands/SetSpawnCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/BlockPosition;F)I setSpawn
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/CriterionConditionEntityType net/minecraft/advancements/critereon/EntityTypePredicate
	a ANY
	b COMMA_JOINER
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionEntityType; fromJson
	a (Lnet/minecraft/server/EntityTypes;)Z matches
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
	a (Lnet/minecraft/server/Tag;)Lnet/minecraft/server/CriterionConditionEntityType; of
	b (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/CriterionConditionEntityType; of
net/minecraft/server/DataConverterSchemaV702 net/minecraft/util/datafix/schemas/V702
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/BlockOre net/minecraft/world/level/block/OreBlock
	a (Ljava/util/Random;)I xpOnDrop
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
net/minecraft/server/EnchantmentDigging net/minecraft/world/item/enchantment/DiggingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/ItemStack;)Z canEnchant
	b (I)I getMaxCost
net/minecraft/server/DataConverterSchemaV703 net/minecraft/util/datafix/schemas/V703
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
net/minecraft/server/DataConverterSchemaV700 net/minecraft/util/datafix/schemas/V700
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/DataConverterSchemaV701 net/minecraft/util/datafix/schemas/V701
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/DefinedStructure$BlockInfo net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo
	a pos
	b state
	c nbt
gw$1 net/minecraft/core/dispenser/DispenseItemBehavior$1
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
net/minecraft/server/DataConverterSchemaV704 net/minecraft/util/datafix/schemas/V704
	a ITEM_TO_BLOCKENTITY
	b ADD_NAMES
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$5
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$3
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	a (Ljava/util/HashMap;)V lambda$static$6
	a (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$4
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$0
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$2
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$1
net/minecraft/server/CriterionTriggerEffectsChanged net/minecraft/advancements/critereon/EffectsChangedTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Laz$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;)V trigger
	a (Lnet/minecraft/server/EntityPlayer;Laz$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
gw$2 net/minecraft/core/dispenser/DispenseItemBehavior$10
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
net/minecraft/server/DataConverterSchemaV705 net/minecraft/util/datafix/schemas/V705
	b ADD_NAMES
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$25
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$23
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	a (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$24
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerThrowableProjectile$1
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$22
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerThrowableProjectile
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$21
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$20
	e (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$19
	f (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$18
	g (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$17
	h (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$16
	i (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$15
	j (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$14
	k (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$13
	l (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$12
	m (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
	n (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
	o (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
	p (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
	q (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
	r (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
	s (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
	t (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	u (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	v (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
gw$3 net/minecraft/core/dispenser/DispenseItemBehavior$11
	a (Lnet/minecraft/server/EntityLiving;)Z lambda$execute$0
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
dyn$a net/minecraft/client/particle/SplashParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dbk$1 net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$1
net/minecraft/server/IResourcePack net/minecraft/server/packs/PackResources
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	a (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	b (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Z hasResource
net/minecraft/server/IpBanEntry net/minecraft/server/players/IpBanListEntry
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Ljava/lang/String; createIpInfo
	e ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/GameTestHarnessTestCommand net/minecraft/gametest/framework/TestCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$23
	a (Lnet/minecraft/server/CommandListenerWrapper;)I runNearbyTest
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I clearAllTests
	a (Lnet/minecraft/server/CommandListenerWrapper;II)I runAllTests
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I showPos
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;II)I runAllTestsInClass
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;III)I createNewStructure
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;II)V runTests
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/GameTestHarnessTestFunction;I)I runTest
	a (Lnet/minecraft/server/CommandListenerWrapper;ZII)I runLastFailedTests
	a (Lnet/minecraft/server/EntityPlayer;)Z lambda$say$26
	a (Lnet/minecraft/server/EnumChatFormat;Ljava/lang/String;Lnet/minecraft/server/EntityPlayer;)V lambda$say$27
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V lambda$runTests$25
	a (Lnet/minecraft/server/GameTestHarnessTestFunction;Lnet/minecraft/server/WorldServer;)V runTestPreparation
	a (Lnet/minecraft/server/WorldServer;Ljava/lang/String;Lnet/minecraft/server/EnumChatFormat;)V say
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GameTestHarnessCollector;)V runTest
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/GameTestHarnessCollector;)V access$000
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/GameTestHarnessCollector;Lnet/minecraft/server/BlockPosition;)V lambda$runAllNearbyTests$24
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$22
	b (Lnet/minecraft/server/CommandListenerWrapper;)I runAllNearbyTests
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)V say
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/GameTestHarnessCollector;)V showTestSummaryIfAllDone
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$21
	c (Lnet/minecraft/server/CommandListenerWrapper;)I exportNearestTestStructure
	c (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I exportTestStructure
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	d (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I importTestStructure
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	r (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	s (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	t (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	u (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	v (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	w (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	x (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
net/minecraft/server/DataConverterCatType net/minecraft/util/datafix/fixes/CatTypeFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
dsu$3 net/minecraft/client/map/Map$3
	a this$0
dsu$2 net/minecraft/client/map/Map$2
	a this$0
dsu$1 net/minecraft/client/map/Map$1
	a this$0
net/minecraft/server/WorldGenBonusChest net/minecraft/world/level/levelgen/feature/BonusChestFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/EntitySilverfish$PathfinderGoalSilverfishHideInBlock net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal
	h selectedDirection
	i doMerge
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/server/EntityHorseAbstract net/minecraft/world/entity/animal/horse/AbstractHorse
	bA DATA_ID_OWNER_UUID
	bB eatingCounter
	bC mouthCounter
	bD standCounter
	bF eatAnim
	bG eatAnimO
	bH standAnim
	bI standAnimO
	bJ mouthAnim
	bK mouthAnimO
	bo tailCounter
	bp sprintCounter
	bq isJumping
	bs temper
	bu canGallop
	bv gallopSoundCounter
	bw PARENT_HORSE_SELECTOR
	bx MOMMY_TARGETING
	by FOOD_ITEMS
	bz DATA_ID_FLAGS
	canSlide allowStandSliding
	inventoryChest inventory
	jumpPower playerJumpPendingScale
	A (F)F getMouthAnim
	D ()I getAmbientSoundInterval
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L_ ()Z isSaddleable
	M_ ()Z isSaddled
	P_ ()Z canJump
	Q_ ()F getJumpRidingScale
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/EntityAgeable;Lnet/minecraft/server/EntityHorseAbstract;)V setOffspringAttributes
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/IInventory;)V containerChanged
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/SoundCategory;)V equipSaddle
	a (Lnet/minecraft/server/SoundEffectType;)V playGallopSound
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/Vec3D; getDismountLocationInDirection
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	aT ()Z isPushable
	a_ (F)V setJumpRidingScale
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (FF)Z causeFallDamage
	b (I)V handleStartJump
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumInteractionResult; fedFood
	b (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/Vec3D; getDismountLocationForPassenger
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b_ (I)V onPlayerJump
	c ()V handleStopJump
	c (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Z handleEating
	c_ ()Z onClimbable
	cl ()Lnet/minecraft/server/Entity; getControllingPassenger
	d (IZ)V setFlag
	dF ()F getSoundVolume
	dH ()Z isImmobile
	dm ()V dropEquipment
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (FF)I calculateFallDamage
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()V randomizeAttributes
	eL ()V eating
	eM ()V moveTail
	eO ()V openMouth
	eU ()V stand
	eV ()V addBehaviourGoals
	eY ()Z isJumping
	eZ ()Z isEating
	eq ()I getMaxSpawnClusterSize
	er ()Z canBeControlledByRider
	f (Lnet/minecraft/server/EntityHuman;)V openInventory
	fa ()Z isStanding
	fe ()V updateContainerEquipment
	fg ()Lnet/minecraft/server/SoundEffect; getEatingSound
	fi ()Lnet/minecraft/server/AttributeProvider$Builder; createBaseHorseAttributes
	fk ()V followMommy
	fl ()Z canEatGrass
	fm ()V makeMad
	fn ()V playJumpSound
	fo ()Z canParent
	fp ()F generateRandomMaxHealth
	fq ()D generateRandomJumpStrength
	fr ()D generateRandomSpeed
	fs ()Z canWearArmor
	ft ()Z isWearingArmor
	g (Lnet/minecraft/server/Vec3D;)V travel
	getChestSlots ()I getInventorySize
	getJumpStrength ()D getCustomJump
	getMaxDomestication ()I getMaxTemper
	getSoundAngry ()Lnet/minecraft/server/SoundEffect; getAngrySound
	h (Lnet/minecraft/server/EntityHuman;)V doPlayerRide
	hasReproduced ()Z isBred
	i (Lnet/minecraft/server/EntityHuman;)Z tameWithName
	i (Lnet/minecraft/server/EntityLiving;)Z lambda$static$0
	j ()V tick
	k ()V aiStep
	k (Lnet/minecraft/server/Entity;)V positionRider
	k (Lnet/minecraft/server/ItemStack;)Z isFood
	l (Lnet/minecraft/server/ItemStack;)Z isArmor
	loadChest ()V createInventory
	o ()V registerGoals
	t (I)Z getFlag
	v (I)I modifyTemper
	v (Z)V setIsJumping
	w (Z)V setBred
	x (F)V onLeashDistance
	x (Z)V setEating
	y (F)F getEatAnim
	z (F)F getStandAnim
	z (Z)V spawnTamingParticles
net/minecraft/server/Unit net/minecraft/util/Unit
	b $VALUES
net/minecraft/server/WorldGenSurfaceFrozenOcean net/minecraft/world/level/levelgen/surfacebuilders/FrozenOceanSurfaceBuilder
	K icebergNoise
	L icebergRoofNoise
	M seed
	a PACKED_ICE
	b SNOW_BLOCK
	c AIR
	d GRAVEL
	e ICE
	a (J)V initNoise
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/DataConverterItemName net/minecraft/util/datafix/fixes/ItemRenameFix
	a name
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Ljava/lang/String;)Ljava/lang/String; fixItem
hi$1 net/minecraft/core/particles/SimpleParticleType$1
	a (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleType; fromCommand
	a (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleType; fromNetwork
	b (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParam; fromCommand
	b (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParam; fromNetwork
dyn$1 net/minecraft/client/particle/SplashParticle$1
net/minecraft/server/PacketPlayInJigsawGenerate net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket
	a pos
	b levels
	c keepJigsaws
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I levels
	d ()Z keepJigsaws
cxq$1 net/minecraft/world/level/saveddata/maps/MapBanner$1
	a $SwitchMap$net$minecraft$world$item$DyeColor
net/minecraft/server/ItemFireworksCharge net/minecraft/world/item/FireworkStarItem
	a (I)Lnet/minecraft/server/IChatBaseComponent; getColorName
	a (Lnet/minecraft/server/IChatMutableComponent;[I)Lnet/minecraft/server/IChatBaseComponent; appendColors
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbni;)V appendHoverText
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/util/List;)V appendHoverText
net/minecraft/server/RayTrace net/minecraft/world/level/ClipContext
	a from
	b to
	c block
	d fluid
	e collisionContext
	a ()Lnet/minecraft/server/Vec3D; getTo
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getFluidShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getBlockShape
	b ()Lnet/minecraft/server/Vec3D; getFrom
net/minecraft/server/WorldGenMonumentPieces$IWorldGenMonumentPieceSelector net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentRoomFitter
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/BehaviorPanic net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger
	a (Lnet/minecraft/server/EntityLiving;)Z hasHostile
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/EntityLiving;)Z isHurt
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
net/minecraft/server/LightEngineGraphSection net/minecraft/server/level/SectionTracker
	a (J)Z isSource
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (J)I getLevelFromSource
	b (JIZ)V update
	b (JJI)I computeLevelFromNeighbor
ebm$a net/minecraft/client/renderer/block/model/multipart/Selector$Deserializer
	a (Lcom/google/gson/JsonElement;)Lebi; lambda$getCondition$1
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lebm; deserialize
	a (Lcom/google/gson/JsonObject;)Lebi; getCondition
	a (Ljava/util/Map$Entry;)Lebi; getKeyValueCondition
	b (Lcom/google/gson/JsonElement;)Lebi; lambda$getCondition$0
	b (Lcom/google/gson/JsonObject;)Lebi; getSelector
net/minecraft/server/CommandLocateBiome net/minecraft/server/commands/LocateBiomeCommand
	a ERROR_INVALID_BIOME
	b ERROR_BIOME_NOT_FOUND
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/MinecraftKey;)I locateBiome
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$locateBiome$4
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
dpc$1 net/minecraft/client/gui/screens/advancements/AdvancementTabType$1
	a $SwitchMap$net$minecraft$client$gui$screens$advancements$AdvancementTabType
net/minecraft/server/PacketPlayInUseEntity$EnumEntityUseAction net/minecraft/network/protocol/game/ServerboundInteractPacket$Action
	d $VALUES
net/minecraft/server/BlockCoralFanWall net/minecraft/world/level/block/CoralWallFanBlock
	c deadBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
net/minecraft/server/EntityLiving net/minecraft/world/entity/LivingEntity
	HEALTH DATA_HEALTH_ID
	aA yBodyRot
	aB yBodyRotO
	aC yHeadRot
	aD yHeadRotO
	aE flyingSpeed
	aJ oRun
	aK run
	aL animStep
	aM animStepO
	aN rotOffs
	aO deathScore
	aR xxa
	aS yya
	aT zza
	aU lerpSteps
	aV lerpX
	aW lerpY
	aX lerpZ
	aY lerpYRot
	aZ lerpXRot
	activeItem useItem
	ag DATA_LIVING_ENTITY_FLAGS
	ah SLEEPING_DIMENSIONS
	ai swinging
	aj swingingArm
	ak swingTime
	al removeArrowTime
	am removeStingerTime
	ap hurtDir
	ar oAttackAnim
	as attackAnim
	at attackStrengthTicker
	attributeMap attributes
	au animationSpeedOld
	av animationSpeed
	aw animationPosition
	ay timeOffs
	az rotA
	b SPEED_MODIFIER_SPRINTING_UUID
	bA lastDamageStamp
	bB swimAmount
	bC swimAmountO
	ba lyHeadRot
	bb lerpHeadSteps
	bd useItemRemaining
	be fallFlyTicks
	bf autoSpinAttackTicks
	bg brain
	bh DATA_ARROW_COUNT_ID
	bi DATA_STINGER_COUNT_ID
	bj SLEEPING_POS_ID
	bn lastHandItemStacks
	bo lastArmorItemStacks
	bs lastHurtMob
	bt lastHurtMobTimestamp
	bu speed
	bw absorptionAmount
	bx lastPos
	by lastClimbablePos
	bz lastDamageSource
	c SPEED_MODIFIER_SOUL_SPEED_UUID
	d SPEED_MODIFIER_SPRINTING
	deathTicks deathTime
	effects activeEffects
	f DATA_EFFECT_COLOR_ID
	g DATA_EFFECT_AMBIENCE_ID
	hurtTicks hurtTime
	hurtTimestamp lastHurtByMobTimestamp
	jumpTicks noJumpDelay
	killed dead
	killer lastHurtByPlayer
	lastDamage lastHurt
	lastDamageByPlayerTime lastHurtByPlayerTime
	lastDamager lastHurtByMob
	maxNoDamageTicks invulnerableDuration
	ticksFarFromPlayer noActionTime
	updateEffects effectsDirty
	A (Lnet/minecraft/server/Entity;)D getVisibilityPercent
	C ()V updateInvisibilityStatus
	C (Lnet/minecraft/server/Entity;)V doPush
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	Z ()V kill
	a (B)V handleEntityEvent
	a (DDDFFIZ)V lerpTo
	a (DDDZ)Z randomTeleport
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (DZLnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; getFluidFallingAdjustedMovement
	a (F)F getSwimAmount
	a (FDD)V knockback
	a (FI)V lerpHeadTo
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/server/BehaviorController; makeBrain
	a (Ljava/util/List;Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V lambda$handleEquipmentChanges$6
	a (Ljava/util/Map;)V handleHandSwap
	a (Ljava/util/function/Predicate;)Z isHolding
	a (Lnet/minecraft/server/ArgumentAnchor$Anchor;Lnet/minecraft/server/Vec3D;)V lookAt
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/AxisAlignedBB;)V checkAutoSpinAttack
	a (Lnet/minecraft/server/BlockPosition;)V setPosToBed
	a (Lnet/minecraft/server/BlockPosition;Z)V setRecordPlayingNearby
	a (Lnet/minecraft/server/DamageSource;Z)V dropFromLootTable
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;)V dismountVehicle
	a (Lnet/minecraft/server/EntityItem;)V onItemPickup
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/PathfinderTargetCondition;)Z canAttack
	a (Lnet/minecraft/server/EntityLiving;Z)V calculateEntityAnimation
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/server/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/BlockUtil$Rectangle;)Lnet/minecraft/server/Vec3D; getRelativePortalPosition
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/ItemStack;)V setItemInHand
	a (Lnet/minecraft/server/EnumItemSlot;)Z hasItemInSlot
	a (Lnet/minecraft/server/FluidType;)Z canStandOnFluid
	a (Lnet/minecraft/server/Item;)Z isHolding
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/Item;)Z lambda$isHolding$5
	a (Lnet/minecraft/server/ItemStack;I)V spawnItemParticles
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)V addEatEffect
	a (Lnet/minecraft/server/MobEffect;)V onEffectAdded
	a (Lnet/minecraft/server/MobEffect;Z)V onEffectUpdated
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/BlockPosition;)V lambda$addAdditionalSaveData$1
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTBase;)V lambda$addAdditionalSaveData$2
	a (Lnet/minecraft/server/Vec3D;F)Lnet/minecraft/server/Vec3D; handleRelativeFrictionAndCalculateMovement
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; eat
	a (ZLnet/minecraft/server/DamageSource;)Lnet/minecraft/server/LootTableInfo$Builder; createLootContext
	aR ()V markHurt
	aS ()Z isPickable
	aT ()Z isPushable
	aW ()Z isAlive
	aX ()Z isInWall
	aZ ()V rideTick
	af ()V baseTick
	alwaysGivesExp ()Z isAlwaysExperienceDropper
	am ()V outOfWorld
	applyArmorModifier (Lnet/minecraft/server/DamageSource;F)F getDamageAfterArmorAbsorb
	applyBlockingModifier (Lnet/minecraft/server/DamageSource;)Z isDamageSourceBlocked
	applyMagicModifier (Lnet/minecraft/server/DamageSource;F)F getDamageAfterMagicAbsorb
	aq ()F getBlockSpeedFactor
	attackEntity (Lnet/minecraft/server/Entity;)Z doHurtTarget
	b (FF)Z causeFallDamage
	b (Ljava/util/Map;)V handleEquipmentChanges
	b (Lnet/minecraft/server/AttributeBase;)D getAttributeValue
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/ItemStack; getItemInHand
	b (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setLastArmorItem
	b (Lnet/minecraft/server/IBlockData;)Z shouldRemoveSoulSpeed
	b (Lnet/minecraft/server/ItemStack;)V playEquipSound
	b (Lnet/minecraft/server/ItemStack;I)V triggerItemUseEffects
	b (Lnet/minecraft/server/MobEffect;)V onEffectRemoved
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bB ()Z isVisuallySwimming
	bJ ()F getYHeadRot
	bX ()Z shouldShowName
	bl ()V animateHurt
	bm ()Ljava/lang/Iterable; getHandSlots
	bn ()Ljava/lang/Iterable; getArmorSlots
	broadcastItemBreak (Lnet/minecraft/server/EnumHand;)V broadcastBreakEvent
	broadcastItemBreak (Lnet/minecraft/server/EnumItemSlot;)V broadcastBreakEvent
	bs ()Z rideableUnderWater
	c (IZ)V setLivingEntityFlag
	c (Ljava/util/Collection;)Z areAllEffectsAmbient
	c (Lnet/minecraft/server/AttributeBase;)D getAttributeBaseValue
	c (Lnet/minecraft/server/BlockPosition;)V onChangedBlock
	c (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z trapdoorUsableAsLadder
	c (Lnet/minecraft/server/DamageSource;)V playHurtSound
	c (Lnet/minecraft/server/EntityLiving;)Z canAttack
	c (Lnet/minecraft/server/EnumHand;)V startUsingItem
	c (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setLastHandItem
	c (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/SoundEffect; getDrinkingSound
	c (Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/MobEffect; removeEffectNoUpdate
	c (Lnet/minecraft/server/Tag;)V jumpInLiquid
	c (Z)V setOnGround
	cJ ()Larc$b; brainProvider
	cK ()Lnet/minecraft/server/AttributeProvider$Builder; createLivingAttributes
	cL ()Z canBreatheUnderwater
	cM ()Z canSpawnSoulSpeedParticle
	cN ()V spawnSoulSpeedParticle
	cO ()Z onSoulSpeedBlock
	cP ()V removeSoulSpeed
	cQ ()V tryAddSoulSpeed
	cR ()F getScale
	cS ()Z isAffectedByFluids
	cT ()V tickDeath
	cV ()Z shouldDropLoot
	cZ ()I getLastHurtByMobTimestamp
	cc ()Lnet/minecraft/server/AxisAlignedBB; getBoundingBoxForCulling
	clearActiveItem ()V stopUsingItem
	collideNearby ()V pushEntities
	d (Lnet/minecraft/server/DamageSource;)V dropAllDeathLoot
	d (Lnet/minecraft/server/EnumItemSlot;)Lnet/minecraft/server/ItemStack; getLastArmorItem
	d (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/SoundEffect; getEatingSound
	d (Lnet/minecraft/server/MobEffect;)Z canBeAffected
	dE ()F getArmorCoverPercentage
	dG ()F getVoicePitch
	dI ()F getJumpPower
	dK ()V goDownInWater
	dL ()F getWaterSlowDown
	dM ()F getSpeed
	dN ()Z isSensitiveToWater
	dT ()V updateEffectVisibility
	dY ()I getUseItemRemainingTicks
	dZ ()I getTicksUsingItem
	da ()Lnet/minecraft/server/EntityLiving; getLastHurtMob
	damageArmor (Lnet/minecraft/server/DamageSource;F)V hurtArmor
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	damageEntity0 (Lnet/minecraft/server/DamageSource;F)V actuallyHurt
	damageShield (F)V hurtCurrentlyUsedShield
	db ()I getLastHurtMobTimestamp
	dc ()I getNoActionTime
	de ()V removeEffectParticles
	dh ()Ljava/util/Map; getActiveEffectsMap
	di ()Z isInvertedHealAndHarm
	dk ()Z isDeadOrDying
	dl ()Lnet/minecraft/server/DamageSource; getLastDamageSource
	do ()Lnet/minecraft/server/MinecraftKey; getLootTable
	doAITick ()Z isEffectiveAi
	doTick ()V serverAiStep
	dq ()Ljava/util/Optional; getLastClimbablePos
	dr ()Lnet/minecraft/server/IBlockData; getFeetBlockState
	dropDeathLoot (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	dropInventory ()V dropEquipment
	dy ()I getStingerCount
	dz ()V updateSwingTime
	e ()V defineSynchedData
	e (FF)I calculateFallDamage
	e (Lnet/minecraft/server/BlockPosition;)V setSleepingPos
	e (Lnet/minecraft/server/EntityHuman;)V setLastHurtByPlayer
	e (Lnet/minecraft/server/EntityLiving;)V blockedByShield
	e (Lnet/minecraft/server/EnumItemSlot;)Lnet/minecraft/server/ItemStack; getLastHandItem
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	e (Lnet/minecraft/server/MobEffect;)V forceAddEffect
	ed ()Z isSuppressingSlidingDownLadder
	ef ()I getFallFlyingTicks
	eg ()Z isAffectedByPotions
	eh ()Z attackable
	ei ()Lcom/google/common/collect/ImmutableList; getDismountPoses
	ek ()V clearSleepingPos
	en ()Lnet/minecraft/server/EnumDirection; getBedOrientation
	enterCombat ()V onEnterCombat
	entitySleep (Lnet/minecraft/server/BlockPosition;)V startSleeping
	entityWakeup ()V stopSleeping
	exitCombat ()V onLeaveCombat
	f (FF)F tickHeadTurn
	f (Lnet/minecraft/server/BlockPosition;)V lambda$stopSleeping$10
	f (Lnet/minecraft/server/DamageSource;)Z checkTotemDeathProtection
	f (Lnet/minecraft/server/EntityLiving;)V createWitherRose
	f (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/AxisAlignedBB; getLocalBoundsForPose
	f (Lnet/minecraft/server/EnumItemSlot;)B entityEventForEquipmentBreak
	f (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; getProjectile
	f (Lnet/minecraft/server/MobEffect;)V lambda$tickEffects$3
	g (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Vec3D; lambda$null$9
	g (Lnet/minecraft/server/EntityLiving;)V doAutoAttackOnTouch
	g (Lnet/minecraft/server/ItemStack;)V breakItem
	g (Lnet/minecraft/server/Vec3D;)V travel
	g (Z)V setSprinting
	getAbsorptionHearts ()F getAbsorptionAmount
	getActiveItem ()Lnet/minecraft/server/ItemStack; getUseItem
	getArmorStrength ()I getArmorValue
	getAttributeInstance (Lnet/minecraft/server/AttributeBase;)Lnet/minecraft/server/AttributeModifiable; getAttribute
	getAttributeMap ()Lnet/minecraft/server/AttributeMapBase; getAttributes
	getBedPosition ()Ljava/util/Optional; getSleepingPos
	getBehaviorController ()Lnet/minecraft/server/BehaviorController; getBrain
	getEffects ()Ljava/util/Collection; getActiveEffects
	getEquipment (Lnet/minecraft/server/EnumItemSlot;)Lnet/minecraft/server/ItemStack; getItemBySlot
	getExpValue (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	getItemInMainHand ()Lnet/minecraft/server/ItemStack; getMainHandItem
	getItemInOffHand ()Lnet/minecraft/server/ItemStack; getOffhandItem
	getKillingEntity ()Lnet/minecraft/server/EntityLiving; getKillCredit
	getLastDamager ()Lnet/minecraft/server/EntityLiving; getLastHurtByMob
	getMainHand ()Lnet/minecraft/server/EnumMainHand; getMainArm
	getMonsterType ()Lnet/minecraft/server/EnumMonsterType; getMobType
	getRaisedHand ()Lnet/minecraft/server/EnumHand; getUsedItemHand
	getSoundDeath ()Lnet/minecraft/server/SoundEffect; getDeathSound
	getSoundFall (I)Lnet/minecraft/server/SoundEffect; getFallDamageSound
	getSoundHurt (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h (F)F getViewYRot
	h (Lnet/minecraft/server/BlockPosition;)Ljava/lang/Boolean; lambda$checkBedExists$8
	h (Lnet/minecraft/server/EntityLiving;)V lambda$updateFallFlying$7
	h (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; resetForwardDirectionOfRelativePortalPosition
	hasLineOfSight (Lnet/minecraft/server/Entity;)Z canSee
	i (Lnet/minecraft/server/Entity;)V push
	i (Lnet/minecraft/server/EntityLiving;)V lambda$hurt$4
	i (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; handleOnClimbable
	isClimbing ()Z onClimbable
	isDropExperience ()Z shouldDropExperience
	isFrozen ()Z isImmobile
	isGliding ()Z isFallFlying
	isHandRaised ()Z isUsingItem
	isRiptiding ()Z isAutoSpinAttack
	j ()V tick
	j (Lnet/minecraft/server/EntityLiving;)V lambda$tryAddSoulSpeed$0
	jump ()V jumpFromGround
	l ()V stopRiding
	l (I)I decreaseAirSupply
	m ()I getCurrentSwingDuration
	m (F)V setYHeadRot
	m (I)I increaseAirSupply
	movementTick ()V aiStep
	n (F)V setYBodyRot
	n (I)V setNoActionTime
	o ()V swapHandItems
	p ()V detectEquipmentUpdates
	playBlockStepSound ()V playBlockFallSound
	q ()Ljava/util/Map; collectEquipmentChanges
	q (F)V setSpeed
	q (I)V setStingerCount
	r ()V updateFallFlying
	r (F)F getAttackAnim
	r (I)V startAutoSpinAttack
	receive (Lnet/minecraft/server/Entity;I)V take
	releaseActiveItem ()V releaseUsingItem
	s ()V completeUsingItem
	setAbsorptionHearts (F)V setAbsorptionAmount
	setLastDamager (Lnet/minecraft/server/EntityLiving;)V setLastHurtByMob
	setSlot (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	shieldBlock (Lnet/minecraft/server/EntityLiving;)V blockUsingShield
	swingHand (Lnet/minecraft/server/EnumHand;)V swing
	swingHand (Lnet/minecraft/server/EnumHand;Z)V swing
	t ()V updatingUsingItem
	t (F)F getFrictionInfluencedSpeed
	tickPotionEffects ()V tickEffects
	u ()Z shouldTriggerItemUseEffects
	v ()V updateSwimAmount
	x ()Z checkBedExists
	z (Lnet/minecraft/server/Entity;)V setLastHurtMob
net/minecraft/server/UserCache net/minecraft/server/players/GameProfileCache
	a LOGGER
	b usesAuthentication
	c profilesByName
	d profilesByUUID
	e profileRepository
	f gson
	g file
	h operationCount
	a ()Ljava/util/List; load
	a (I)Ljava/util/stream/Stream; getTopMRUProfiles
	a (Lcom/google/gson/JsonArray;Ljava/text/DateFormat;Lnet/minecraft/server/UserCache$UserCacheEntry;)V lambda$save$1
	a (Lcom/google/gson/JsonElement;Ljava/text/DateFormat;)Lnet/minecraft/server/UserCache$UserCacheEntry; readGameProfile
	a (Lcom/mojang/authlib/GameProfile;)V add
	a (Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; lookupGameProfile
	a (Ljava/text/DateFormat;Ljava/util/List;Lcom/google/gson/JsonElement;)V lambda$load$0
	a (Lnet/minecraft/server/UserCache$UserCacheEntry;)V safeAdd
	a (Lnet/minecraft/server/UserCache$UserCacheEntry;Ljava/text/DateFormat;)Lcom/google/gson/JsonElement; writeGameProfile
	a (Z)V setUsesAuthentication
	b ()V save
	c ()Z usesAuthentication
	d ()J getNextOperation
	e ()Ljava/text/DateFormat; createDateFormat
	getProfile (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; get
	getProfile (Ljava/util/UUID;)Lcom/mojang/authlib/GameProfile; get
net/minecraft/server/GenLayerDesert net/minecraft/world/level/newbiome/layer/BiomeEdgeLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
	a ([II)Z checkEdge
	a ([IIIIIIII)Z checkEdgeStrict
bp$a net/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger$TriggerInstance
	a item
	b entity
	a (Lbg$b;Lbq$a;Lbg$b;)Lbp$a; itemPickedUpByEntity
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
net/minecraft/server/MobEffectInfo net/minecraft/world/effect/MobEffectCategory
	d tooltipFormatting
	e $VALUES
	a ()Lnet/minecraft/server/EnumChatFormat; getTooltipFormatting
net/minecraft/server/BlockPumpkin net/minecraft/world/level/block/PumpkinBlock
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$use$0
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	c ()Lnet/minecraft/server/BlockStem; getStem
	d ()Lnet/minecraft/server/BlockStemAttached; getAttachedStem
net/minecraft/server/PathPoint net/minecraft/world/level/pathfinder/Node
	a x
	b y
	c z
	d heapIdx
	e g
	f h
	g f
	h cameFrom
	i closed
	j walkedDistance
	k costMalus
	l type
	m hash
	a ()Lnet/minecraft/server/BlockPosition; asBlockPos
	a (III)Lnet/minecraft/server/PathPoint; cloneAndMove
	a (Lnet/minecraft/server/BlockPosition;)F distanceTo
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToStream
	a (Lnet/minecraft/server/PathPoint;)F distanceTo
	b ()Lnet/minecraft/server/Vec3D; asVec3
	b (III)I createHash
	b (Lnet/minecraft/server/BlockPosition;)F distanceToSqr
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/PathPoint; createFromStream
	b (Lnet/minecraft/server/PathPoint;)F distanceToSqr
	c ()Z inOpenSet
	c (Lnet/minecraft/server/BlockPosition;)F distanceManhattan
	c (Lnet/minecraft/server/PathPoint;)F distanceManhattan
gw$4 net/minecraft/core/dispenser/DispenseItemBehavior$12
	a (Lnet/minecraft/server/EntityHorseAbstract;)Z lambda$execute$0
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
dkm$a net/minecraft/client/color/block/BlockTintCache$LatestCacheInfo
	a x
	b z
	c cache
gw$5 net/minecraft/core/dispenser/DispenseItemBehavior$13
	a (Lnet/minecraft/server/EntityHorseChestedAbstract;)Z lambda$execute$0
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
gw$6 net/minecraft/core/dispenser/DispenseItemBehavior$14
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
gw$7 net/minecraft/core/dispenser/DispenseItemBehavior$15
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntitySmallFireball;)V lambda$execute$0
net/minecraft/server/CommandSay net/minecraft/server/commands/SayCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
gw$8 net/minecraft/core/dispenser/DispenseItemBehavior$16
	b defaultDispenseItemBehavior
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
net/minecraft/server/WorldGenDecoratorCarveMask net/minecraft/world/level/levelgen/placement/CarvingMaskDecorator
	a (Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorCarveMaskConfiguration;I)Z lambda$getPositions$0
	a (Lnet/minecraft/server/ChunkCoordIntPair;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$1
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorCarveMaskConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
gw$9 net/minecraft/core/dispenser/DispenseItemBehavior$17
	b defaultDispenseItemBehavior
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
net/minecraft/server/WorldGenFoilagePlacerBlob net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer
	a CODEC
	b height
	a ()Lnet/minecraft/server/WorldGenFoilagePlacers; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; blobParts
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	a (Ljava/util/Random;ILnet/minecraft/server/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;ILcni$b;IILjava/util/Set;ILnet/minecraft/server/StructureBoundingBox;)V createFoliage
	a (Lnet/minecraft/server/WorldGenFoilagePlacerBlob;)Ljava/lang/Integer; lambda$blobParts$1
	c (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
net/minecraft/server/BlockTallPlant net/minecraft/world/level/block/DoublePlantBlock
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V placeAt
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)J getSeed
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
	ah_ ()Lnet/minecraft/server/BlockBase$EnumRandomOffset; getOffsetType
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V preventCreativeDropFromBottomPart
net/minecraft/server/Items net/minecraft/world/item/Items
	A JUNGLE_SAPLING
	B ACACIA_SAPLING
	C DARK_OAK_SAPLING
	D BEDROCK
	E SAND
	F RED_SAND
	G GRAVEL
	GLOBE_BANNER_PATTERN GLOBE_BANNER_PATTER
	H GOLD_ORE
	I IRON_ORE
	J COAL_ORE
	K NETHER_GOLD_ORE
	L OAK_LOG
	M SPRUCE_LOG
	N BIRCH_LOG
	O JUNGLE_LOG
	P ACACIA_LOG
	Q DARK_OAK_LOG
	R CRIMSON_STEM
	S WARPED_STEM
	T STRIPPED_OAK_LOG
	U STRIPPED_SPRUCE_LOG
	V STRIPPED_BIRCH_LOG
	W STRIPPED_JUNGLE_LOG
	X STRIPPED_ACACIA_LOG
	Y STRIPPED_DARK_OAK_LOG
	Z STRIPPED_CRIMSON_STEM
	aA LAPIS_ORE
	aB LAPIS_BLOCK
	aC DISPENSER
	aD SANDSTONE
	aE CHISELED_SANDSTONE
	aF CUT_SANDSTONE
	aG NOTE_BLOCK
	aH POWERED_RAIL
	aI DETECTOR_RAIL
	aJ STICKY_PISTON
	aK COBWEB
	aL GRASS
	aM FERN
	aN DEAD_BUSH
	aO SEAGRASS
	aP SEA_PICKLE
	aQ PISTON
	aR WHITE_WOOL
	aS ORANGE_WOOL
	aT MAGENTA_WOOL
	aU LIGHT_BLUE_WOOL
	aV YELLOW_WOOL
	aW LIME_WOOL
	aX PINK_WOOL
	aY GRAY_WOOL
	aZ LIGHT_GRAY_WOOL
	aa STRIPPED_WARPED_STEM
	ab STRIPPED_OAK_WOOD
	ac STRIPPED_SPRUCE_WOOD
	ad STRIPPED_BIRCH_WOOD
	ae STRIPPED_JUNGLE_WOOD
	af STRIPPED_ACACIA_WOOD
	ag STRIPPED_DARK_OAK_WOOD
	ah STRIPPED_CRIMSON_HYPHAE
	ai STRIPPED_WARPED_HYPHAE
	aj OAK_WOOD
	ak SPRUCE_WOOD
	al BIRCH_WOOD
	am JUNGLE_WOOD
	an ACACIA_WOOD
	ao DARK_OAK_WOOD
	ap CRIMSON_HYPHAE
	aq WARPED_HYPHAE
	ar OAK_LEAVES
	as SPRUCE_LEAVES
	at BIRCH_LEAVES
	au JUNGLE_LEAVES
	av ACACIA_LEAVES
	aw DARK_OAK_LEAVES
	ax SPONGE
	ay WET_SPONGE
	az GLASS
	b STONE
	bA NETHER_SPROUTS
	bB WEEPING_VINES
	bC TWISTING_VINES
	bD SUGAR_CANE
	bE KELP
	bF BAMBOO
	bG GOLD_BLOCK
	bH IRON_BLOCK
	bI OAK_SLAB
	bJ SPRUCE_SLAB
	bK BIRCH_SLAB
	bL JUNGLE_SLAB
	bM ACACIA_SLAB
	bN DARK_OAK_SLAB
	bO CRIMSON_SLAB
	bP WARPED_SLAB
	bQ STONE_SLAB
	bR SMOOTH_STONE_SLAB
	bS SANDSTONE_SLAB
	bT CUT_STANDSTONE_SLAB
	bU PETRIFIED_OAK_SLAB
	bV COBBLESTONE_SLAB
	bW BRICK_SLAB
	bX STONE_BRICK_SLAB
	bY NETHER_BRICK_SLAB
	bZ QUARTZ_SLAB
	ba CYAN_WOOL
	bb PURPLE_WOOL
	bc BLUE_WOOL
	bd BROWN_WOOL
	be GREEN_WOOL
	bf RED_WOOL
	bg BLACK_WOOL
	bh DANDELION
	bi POPPY
	bj BLUE_ORCHID
	bk ALLIUM
	bl AZURE_BLUET
	bm RED_TULIP
	bn ORANGE_TULIP
	bo WHITE_TULIP
	bp PINK_TULIP
	bq OXEYE_DAISY
	br CORNFLOWER
	bs LILY_OF_THE_VALLEY
	bt WITHER_ROSE
	bu BROWN_MUSHROOM
	bv RED_MUSHROOM
	bw CRIMSON_FUNGUS
	bx WARPED_FUNGUS
	by CRIMSON_ROOTS
	bz WARPED_ROOTS
	c GRANITE
	cA DIAMOND_BLOCK
	cB CRAFTING_TABLE
	cC FARMLAND
	cD FURNACE
	cE LADDER
	cF RAIL
	cG COBBLESTONE_STAIRS
	cH LEVER
	cI STONE_PRESSURE_PLATE
	cJ OAK_PRESSURE_PLATE
	cK SPRUCE_PRESSURE_PLATE
	cL BIRCH_PRESSURE_PLATE
	cM JUNGLE_PRESSURE_PLATE
	cN ACACIA_PRESSURE_PLATE
	cO DARK_OAK_PRESSURE_PLATE
	cP CRIMSON_PRESSURE_PLATE
	cQ WARPED_PRESSURE_PLATE
	cR POLISHED_BLACKSTONE_PRESSURE_PLATE
	cS REDSTONE_ORE
	cT REDSTONE_TORCH
	cU SNOW
	cV ICE
	cW SNOW_BLOCK
	cX CACTUS
	cY CLAY
	cZ JUKEBOX
	ca RED_SANDSTONE_SLAB
	cb CUT_RED_SANDSTONE_SLAB
	cc PURPUR_SLAB
	cd PRISMARINE_SLAB
	ce PRISMARINE_BRICK_SLAB
	cf DARK_PRISMARINE_SLAB
	cg SMOOTH_QUARTZ
	ch SMOOTH_RED_SANDSTONE
	ci SMOOTH_SANDSTONE
	cj SMOOTH_STONE
	ck BRICKS
	cl TNT
	cm BOOKSHELF
	cn MOSSY_COBBLESTONE
	co OBSIDIAN
	cp TORCH
	cq END_ROD
	cr CHORUS_PLANT
	cs CHORUS_FLOWER
	ct PURPUR_BLOCK
	cu PURPUR_PILLAR
	cv PURPUR_STAIRS
	cw SPAWNER
	cx OAK_STAIRS
	cy CHEST
	cz DIAMOND_ORE
	d POLISHED_GRANITE
	dA INFESTED_STONE
	dB INFESTED_COBBLESTONE
	dC INFESTED_STONE_BRICKS
	dD INFESTED_MOSSY_STONE_BRICKS
	dE INFESTED_CRACKED_STONE_BRICKS
	dF INFESTED_CHISELED_STONE_BRICKS
	dG STONE_BRICKS
	dH MOSSY_STONE_BRICKS
	dI CRACKED_STONE_BRICKS
	dJ CHISELED_STONE_BRICKS
	dK BROWN_MUSHROOM_BLOCK
	dL RED_MUSHROOM_BLOCK
	dM MUSHROOM_STEM
	dN IRON_BARS
	dO CHAIN
	dP GLASS_PANE
	dQ MELON
	dR VINE
	dS OAK_FENCE_GATE
	dT SPRUCE_FENCE_GATE
	dU BIRCH_FENCE_GATE
	dV JUNGLE_FENCE_GATE
	dW ACACIA_FENCE_GATE
	dX DARK_OAK_FENCE_GATE
	dY CRIMSON_FENCE_GATE
	dZ WARPED_FENCE_GATE
	da OAK_FENCE
	db SPRUCE_FENCE
	dc BIRCH_FENCE
	dd JUNGLE_FENCE
	de ACACIA_FENCE
	df DARK_OAK_FENCE
	dg CRIMSON_FENCE
	dh WARPED_FENCE
	di PUMPKIN
	dj CARVED_PUMPKIN
	dk NETHERRACK
	dl SOUL_SAND
	dm SOUL_SOIL
	dn BASALT
	do POLISHED_BASALT
	dp SOUL_TORCH
	dq GLOWSTONE
	dr JACK_O_LANTERN
	ds OAK_TRAPDOOR
	dt SPRUCE_TRAPDOOR
	du BIRCH_TRAPDOOR
	dv JUNGLE_TRAPDOOR
	dw ACACIA_TRAPDOOR
	dx DARK_OAK_TRAPDOOR
	dy CRIMSON_TRAPDOOR
	dz WARPED_TRAPDOOR
	e DIORITE
	eA BEACON
	eB COBBLESTONE_WALL
	eC MOSSY_COBBLESTONE_WALL
	eD BRICK_WALL
	eE PRISMARINE_WALL
	eF RED_SANDSTONE_WALL
	eG MOSSY_STONE_BRICK_WALL
	eH GRANITE_WALL
	eI STONE_BRICK_WALL
	eJ NETHER_BRICK_WALL
	eK ANDESITE_WALL
	eL RED_NETHER_BRICK_WALL
	eM SANDSTONE_WALL
	eN END_STONE_BRICK_WALL
	eO DIORITE_WALL
	eP BLACKSTONE_WALL
	eQ POLISHED_BLACKSTONE_WALL
	eR POLISHED_BLACKSTONE_BRICK_WALL
	eS STONE_BUTTON
	eT OAK_BUTTON
	eU SPRUCE_BUTTON
	eV BIRCH_BUTTON
	eW JUNGLE_BUTTON
	eX ACACIA_BUTTON
	eY DARK_OAK_BUTTON
	eZ CRIMSON_BUTTON
	ea BRICK_STAIRS
	eb STONE_BRICK_STAIRS
	ec MYCELIUM
	ed LILY_PAD
	ee NETHER_BRICKS
	ef CRACKED_NETHER_BRICKS
	eg CHISELED_NETHER_BRICKS
	eh NETHER_BRICK_FENCE
	ei NETHER_BRICK_STAIRS
	ej ENCHANTING_TABLE
	ek END_PORTAL_FRAME
	el END_STONE
	em END_STONE_BRICKS
	en DRAGON_EGG
	eo REDSTONE_LAMP
	ep SANDSTONE_STAIRS
	eq EMERALD_ORE
	er ENDER_CHEST
	es TRIPWIRE_HOOK
	et EMERALD_BLOCK
	eu SPRUCE_STAIRS
	ev BIRCH_STAIRS
	ew JUNGLE_STAIRS
	ex CRIMSON_STAIRS
	ey WARPED_STAIRS
	ez COMMAND_BLOCK
	f POLISHED_DIORITE
	fA GRAY_TERRACOTTA
	fB LIGHT_GRAY_TERRACOTTA
	fC CYAN_TERRACOTTA
	fD PURPLE_TERRACOTTA
	fE BLUE_TERRACOTTA
	fF BROWN_TERRACOTTA
	fG GREEN_TERRACOTTA
	fH RED_TERRACOTTA
	fI BLACK_TERRACOTTA
	fJ BARRIER
	fK IRON_TRAPDOOR
	fL HAY_BLOCK
	fM WHITE_CARPET
	fN ORANGE_CARPET
	fO MAGENTA_CARPET
	fP LIGHT_BLUE_CARPET
	fQ YELLOW_CARPET
	fR LIME_CARPET
	fS PINK_CARPET
	fT GRAY_CARPET
	fU LIGHT_GRAY_CARPET
	fV CYAN_CARPET
	fW PURPLE_CARPET
	fX BLUE_CARPET
	fY BROWN_CARPET
	fZ GREEN_CARPET
	fa WARPED_BUTTON
	fb POLISHED_BLACKSTONE_BUTTON
	fc ANVIL
	fd CHIPPED_ANVIL
	fe DAMAGED_ANVIL
	ff TRAPPED_CHEST
	fg LIGHT_WEIGHTED_PRESSURE_PLATE
	fh HEAVY_WEIGHTED_PRESSURE_PLATE
	fi DAYLIGHT_DETECTOR
	fj REDSTONE_BLOCK
	fk NETHER_QUARTZ_ORE
	fl HOPPER
	fm CHISELED_QUARTZ_BLOCK
	fn QUARTZ_BLOCK
	fo QUARTZ_BRICKS
	fp QUARTZ_PILLAR
	fq QUARTZ_STAIRS
	fr ACTIVATOR_RAIL
	fs DROPPER
	ft WHITE_TERRACOTTA
	fu ORANGE_TERRACOTTA
	fv MAGENTA_TERRACOTTA
	fw LIGHT_BLUE_TERRACOTTA
	fx YELLOW_TERRACOTTA
	fy LIME_TERRACOTTA
	fz PINK_TERRACOTTA
	g ANDESITE
	gA BLUE_STAINED_GLASS
	gB BROWN_STAINED_GLASS
	gC GREEN_STAINED_GLASS
	gD RED_STAINED_GLASS
	gE BLACK_STAINED_GLASS
	gF WHITE_STAINED_GLASS_PANE
	gG ORANGE_STAINED_GLASS_PANE
	gH MAGENTA_STAINED_GLASS_PANE
	gI LIGHT_BLUE_STAINED_GLASS_PANE
	gJ YELLOW_STAINED_GLASS_PANE
	gK LIME_STAINED_GLASS_PANE
	gL PINK_STAINED_GLASS_PANE
	gM GRAY_STAINED_GLASS_PANE
	gN LIGHT_GRAY_STAINED_GLASS_PANE
	gO CYAN_STAINED_GLASS_PANE
	gP PURPLE_STAINED_GLASS_PANE
	gQ BLUE_STAINED_GLASS_PANE
	gR BROWN_STAINED_GLASS_PANE
	gS GREEN_STAINED_GLASS_PANE
	gT RED_STAINED_GLASS_PANE
	gU BLACK_STAINED_GLASS_PANE
	gV PRISMARINE
	gW PRISMARINE_BRICKS
	gX DARK_PRISMARINE
	gY PRISMARINE_STAIRS
	gZ PRISMARINE_BRICK_STAIRS
	ga RED_CARPET
	gb BLACK_CARPET
	gc TERRACOTTA
	gd COAL_BLOCK
	ge PACKED_ICE
	gf ACACIA_STAIRS
	gg DARK_OAK_STAIRS
	gh SLIME_BLOCK
	gi GRASS_PATH
	gj SUNFLOWER
	gk LILAC
	gl ROSE_BUSH
	gm PEONY
	gn TALL_GRASS
	go LARGE_FERN
	gp WHITE_STAINED_GLASS
	gq ORANGE_STAINED_GLASS
	gr MAGENTA_STAINED_GLASS
	gs LIGHT_BLUE_STAINED_GLASS
	gt YELLOW_STAINED_GLASS
	gu LIME_STAINED_GLASS
	gv PINK_STAINED_GLASS
	gw GRAY_STAINED_GLASS
	gx LIGHT_GRAY_STAINED_GLASS
	gy CYAN_STAINED_GLASS
	gz PURPLE_STAINED_GLASS
	h POLISHED_ANDESITE
	hA PURPLE_SHULKER_BOX
	hB BLUE_SHULKER_BOX
	hC BROWN_SHULKER_BOX
	hD GREEN_SHULKER_BOX
	hE RED_SHULKER_BOX
	hF BLACK_SHULKER_BOX
	hG WHITE_GLAZED_TERRACOTTA
	hH ORANGE_GLAZED_TERRACOTTA
	hI MAGENTA_GLAZED_TERRACOTTA
	hJ LIGHT_BLUE_GLAZED_TERRACOTTA
	hK YELLOW_GLAZED_TERRACOTTA
	hL LIME_GLAZED_TERRACOTTA
	hM PINK_GLAZED_TERRACOTTA
	hN GRAY_GLAZED_TERRACOTTA
	hO LIGHT_GRAY_GLAZED_TERRACOTTA
	hP CYAN_GLAZED_TERRACOTTA
	hQ PURPLE_GLAZED_TERRACOTTA
	hR BLUE_GLAZED_TERRACOTTA
	hS BROWN_GLAZED_TERRACOTTA
	hT GREEN_GLAZED_TERRACOTTA
	hU RED_GLAZED_TERRACOTTA
	hV BLACK_GLAZED_TERRACOTTA
	hW WHITE_CONCRETE
	hX ORANGE_CONCRETE
	hY MAGENTA_CONCRETE
	hZ LIGHT_BLUE_CONCRETE
	ha DARK_PRISMARINE_STAIRS
	hb SEA_LANTERN
	hc RED_SANDSTONE
	hd CHISELED_RED_SANDSTONE
	he CUT_RED_SANDSTONE
	hf RED_SANDSTONE_STAIRS
	hg REPEATING_COMMAND_BLOCK
	hh CHAIN_COMMAND_BLOCK
	hi MAGMA_BLOCK
	hj NETHER_WART_BLOCK
	hk WARPED_WART_BLOCK
	hl RED_NETHER_BRICKS
	hm BONE_BLOCK
	hn STRUCTURE_VOID
	ho OBSERVER
	hp SHULKER_BOX
	hq WHITE_SHULKER_BOX
	hr ORANGE_SHULKER_BOX
	hs MAGENTA_SHULKER_BOX
	ht LIGHT_BLUE_SHULKER_BOX
	hu YELLOW_SHULKER_BOX
	hv LIME_SHULKER_BOX
	hw PINK_SHULKER_BOX
	hx GRAY_SHULKER_BOX
	hy LIGHT_GRAY_SHULKER_BOX
	hz CYAN_SHULKER_BOX
	i GRASS_BLOCK
	iA RED_CONCRETE_POWDER
	iB BLACK_CONCRETE_POWDER
	iC TURTLE_EGG
	iD DEAD_TUBE_CORAL_BLOCK
	iE DEAD_BRAIN_CORAL_BLOCK
	iF DEAD_BUBBLE_CORAL_BLOCK
	iG DEAD_FIRE_CORAL_BLOCK
	iH DEAD_HORN_CORAL_BLOCK
	iI TUBE_CORAL_BLOCK
	iJ BRAIN_CORAL_BLOCK
	iK BUBBLE_CORAL_BLOCK
	iL FIRE_CORAL_BLOCK
	iM HORN_CORAL_BLOCK
	iN TUBE_CORAL
	iO BRAIN_CORAL
	iP BUBBLE_CORAL
	iQ FIRE_CORAL
	iR HORN_CORAL
	iS DEAD_BRAIN_CORAL
	iT DEAD_BUBBLE_CORAL
	iU DEAD_FIRE_CORAL
	iV DEAD_HORN_CORAL
	iW DEAD_TUBE_CORAL
	iX TUBE_CORAL_FAN
	iY BRAIN_CORAL_FAN
	iZ BUBBLE_CORAL_FAN
	ia YELLOW_CONCRETE
	ib LIME_CONCRETE
	ic PINK_CONCRETE
	id GRAY_CONCRETE
	ie LIGHT_GRAY_CONCRETE
	if CYAN_CONCRETE
	ig PURPLE_CONCRETE
	ih BLUE_CONCRETE
	ii BROWN_CONCRETE
	ij GREEN_CONCRETE
	ik RED_CONCRETE
	il BLACK_CONCRETE
	im WHITE_CONCRETE_POWDER
	in ORANGE_CONCRETE_POWDER
	io MAGENTA_CONCRETE_POWDER
	ip LIGHT_BLUE_CONCRETE_POWDER
	iq YELLOW_CONCRETE_POWDER
	ir LIME_CONCRETE_POWDER
	is PINK_CONCRETE_POWDER
	it GRAY_CONCRETE_POWDER
	iu LIGHT_GRAY_CONCRETE_POWDER
	iv CYAN_CONCRETE_POWDER
	iw PURPLE_CONCRETE_POWDER
	ix BLUE_CONCRETE_POWDER
	iy BROWN_CONCRETE_POWDER
	iz GREEN_CONCRETE_POWDER
	j DIRT
	jA POLISHED_DIORITE_SLAB
	jB MOSSY_COBBLESTONE_SLAB
	jC END_STONE_BRICK_SLAB
	jD SMOOTH_SANDSTONE_SLAB
	jE SMOOTH_QUARTZ_SLAB
	jF GRANITE_SLAB
	jG ANDESITE_SLAB
	jH RED_NETHER_BRICK_SLAB
	jI POLISHED_ANDESITE_SLAB
	jJ DIORITE_SLAB
	jK SCAFFOLDING
	jL IRON_DOOR
	jM OAK_DOOR
	jN SPRUCE_DOOR
	jO BIRCH_DOOR
	jP JUNGLE_DOOR
	jQ ACACIA_DOOR
	jR DARK_OAK_DOOR
	jS CRIMSON_DOOR
	jT WARPED_DOOR
	jU REPEATER
	jV COMPARATOR
	jW STRUCTURE_BLOCK
	jX JIGSAW
	ja FIRE_CORAL_FAN
	jb HORN_CORAL_FAN
	jc DEAD_TUBE_CORAL_FAN
	jd DEAD_BRAIN_CORAL_FAN
	je DEAD_BUBBLE_CORAL_FAN
	jf DEAD_FIRE_CORAL_FAN
	jg DEAD_HORN_CORAL_FAN
	jh BLUE_ICE
	ji CONDUIT
	jj POLISHED_GRANITE_STAIRS
	jk SMOOTH_RED_SANDSTONE_STAIRS
	jl MOSSY_STONE_BRICK_STAIRS
	jm POLISHED_DIORITE_STAIRS
	jn MOSSY_COBBLESTONE_STAIRS
	jo END_STONE_BRICK_STAIRS
	jp STONE_STAIRS
	jq SMOOTH_SANDSTONE_STAIRS
	jr SMOOTH_QUARTZ_STAIRS
	js GRANITE_STAIRS
	jt ANDESITE_STAIRS
	ju RED_NETHER_BRICK_STAIRS
	jv POLISHED_ANDESITE_STAIRS
	jw DIORITE_STAIRS
	jx POLISHED_GRANITE_SLAB
	jy SMOOTH_RED_SANDSTONE_SLAB
	jz MOSSY_STONE_BRICK_SLAB
	k COARSE_DIRT
	l PODZOL
	m CRIMSON_NYLIUM
	mN CAKE
	ma DRIED_KELP_BLOCK
	n WARPED_NYLIUM
	nB BREWING_STAND
	nC CAULDRON
	o COBBLESTONE
	oX FLOWER_POT
	p OAK_PLANKS
	q SPRUCE_PLANKS
	qS LOOM
	qZ COMPOSTER
	r BIRCH_PLANKS
	rA CRYING_OBSIDIAN
	rB BLACKSTONE
	rC BLACKSTONE_SLAB
	rD BLACKSTONE_STAIRS
	rE GILDED_BLACKSTONE
	rF POLISHED_BLACKSTONE
	rG POLISHED_BLACKSTONE_SLAB
	rH POLISHED_BLACKSTONE_STAIRS
	rI CHISELED_POLISHED_BLACKSTONE
	rJ POLISHED_BLACKSTONE_BRICKS
	rK POLISHED_BLACKSTONE_BRICK_SLAB
	rL POLISHED_BLACKSTONE_BRICK_STAIRS
	rM CRACKED_POLISHED_BLACKSTONE_BRICKS
	rN RESPAWN_ANCHOR
	ra BARREL
	rb SMOKER
	rc BLAST_FURNACE
	rd CARTOGRAPHY_TABLE
	re FLETCHING_TABLE
	rf GRINDSTONE
	rg LECTERN
	rh SMITHING_TABLE
	ri STONECUTTER
	rj BELL
	rk LANTERN
	rl SOUL_LANTERN
	rn CAMPFIRE
	ro SOUL_CAMPFIRE
	rp SHROOMLIGHT
	rr BEE_NEST
	rs BEEHIVE
	ru HONEY_BLOCK
	rv HONEYCOMB_BLOCK
	rw LODESTONE
	rx NETHERITE_BLOCK
	ry ANCIENT_DEBRIS
	rz TARGET
	s JUNGLE_PLANKS
	t ACACIA_PLANKS
	u DARK_OAK_PLANKS
	v CRIMSON_PLANKS
	w WARPED_PLANKS
	x OAK_SAPLING
	y SPRUCE_SAPLING
	z BIRCH_SAPLING
	a (Ljava/lang/String;Lnet/minecraft/server/Item;)Lnet/minecraft/server/Item; registerItem
	a (Lnet/minecraft/server/Block;)Lnet/minecraft/server/Item; registerBlock
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/CreativeModeTab;)Lnet/minecraft/server/Item; registerBlock
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Item;)Lnet/minecraft/server/Item; registerBlock
	a (Lnet/minecraft/server/ItemBlock;)Lnet/minecraft/server/Item; registerBlock
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/Item;)Lnet/minecraft/server/Item; registerItem
net/minecraft/server/EntityThrownTrident net/minecraft/world/entity/projectile/ThrownTrident
	ag ID_FOIL
	ai dealtDamage
	f clientSideReturnTridentTickCount
	g ID_LOYALTY
	trident tridentItem
	a (Lnet/minecraft/server/MovingObjectPositionEntity;)V onHitEntity
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/MovingObjectPositionEntity; findHitEntity
	a_ (Lnet/minecraft/server/EntityHuman;)V playerTouch
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	e ()V defineSynchedData
	h ()V tickDespawn
	i ()Lnet/minecraft/server/SoundEffect; getDefaultHitGroundSoundEvent
	j ()V tick
	j (DDD)Z shouldRender
	m ()Lnet/minecraft/server/ItemStack; getPickupItem
	s ()F getWaterInertia
	u ()Z isFoil
	z ()Z isAcceptibleReturnOwner
net/minecraft/server/FluidTypeFlowing net/minecraft/world/level/material/FlowingFluid
	e OCCLUSION_CACHE
	f shapes
	a (IZ)Lnet/minecraft/server/Fluid; getFlowing
	a (Lcef$a;)V createFluidStateDefinition
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)S getCacheKey
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/IBlockData;I)Z lambda$getSlopeDistance$2
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z canPassThroughWall
	a (Lnet/minecraft/server/Fluid;)F getOwnHeight
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getHeight
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)V spread
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockData;)V spreadToSides
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V beforeDestroyingBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/Fluid;)V spreadTo
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isSolidFace
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/Vec3D; getFlow
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;Lnet/minecraft/server/FluidType;)Z canSpreadTo
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canHoldFluid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isWaterHole
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z canPassThrough
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)I sourceNeighborCount
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;I)Lcom/mojang/datafixers/util/Pair; lambda$getSpread$3
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I getSlopeDistance
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)Z lambda$getSpread$4
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getNewLiquid
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Lnet/minecraft/server/Fluid;)I getSpreadDelay
	a (Z)Lnet/minecraft/server/Fluid; getSource
	b (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/VoxelShape; lambda$getShape$5
	b (Lnet/minecraft/server/IWorldReader;)I getSlopeFindDistance
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;I)Lcom/mojang/datafixers/util/Pair; lambda$getSlopeDistance$1
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Ljava/util/Map; getSpread
	c (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z hasSameAbove
	c (Lnet/minecraft/server/IWorldReader;)I getDropOff
	d ()Lnet/minecraft/server/FluidType; getFlowing
	d (Lnet/minecraft/server/Fluid;)I getAmount
	e ()Lnet/minecraft/server/FluidType; getSource
	e (Lnet/minecraft/server/Fluid;)I getLegacyLevel
	f ()Z canConvertToSource
	g (Lnet/minecraft/server/Fluid;)Z affectsFlow
	h (Lnet/minecraft/server/Fluid;)Z isSourceBlockOfThisType
	k ()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap; lambda$static$0
net/minecraft/server/ItemStack$HideFlags net/minecraft/world/item/ItemStack$TooltipPart
	h mask
	i $VALUES
	a ()I getMask
net/minecraft/server/GameTestHarnessTestFunctionArgument net/minecraft/gametest/framework/TestFunctionArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/GameTestHarnessTestFunctionArgument; testFunctionArgument
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/GameTestHarnessTestFunction; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/GameTestHarnessTestFunction; getTestFunction
am$a net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance
	a block
	b item
	c numBees
	a (Lnet/minecraft/server/Block;Lbq$a;Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lam$a; destroyedBeeNest
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/ItemStack;I)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
qt$1 net/minecraft/network/protocol/game/ClientboundSetBorderPacket$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundSetBorderPacket$Type
net/minecraft/server/Item$Info net/minecraft/world/item/Item$Properties
	a maxStackSize
	b maxDamage
	c craftingRemainingItem
	d category
	e rarity
	f foodProperties
	g isFireResistant
	a ()Lnet/minecraft/server/Item$Info; fireResistant
	a (I)Lnet/minecraft/server/Item$Info; stacksTo
	a (Lnet/minecraft/server/CreativeModeTab;)Lnet/minecraft/server/Item$Info; tab
	a (Lnet/minecraft/server/EnumItemRarity;)Lnet/minecraft/server/Item$Info; rarity
	a (Lnet/minecraft/server/FoodInfo;)Lnet/minecraft/server/Item$Info; food
	a (Lnet/minecraft/server/Item$Info;)Lnet/minecraft/server/CreativeModeTab; access$000
	a (Lnet/minecraft/server/Item;)Lnet/minecraft/server/Item$Info; craftRemainder
	b (I)Lnet/minecraft/server/Item$Info; defaultDurability
	b (Lnet/minecraft/server/Item$Info;)Lnet/minecraft/server/EnumItemRarity; access$100
	c (I)Lnet/minecraft/server/Item$Info; durability
	c (Lnet/minecraft/server/Item$Info;)Lnet/minecraft/server/Item; access$200
	d (Lnet/minecraft/server/Item$Info;)I access$300
	e (Lnet/minecraft/server/Item$Info;)I access$400
	f (Lnet/minecraft/server/Item$Info;)Lnet/minecraft/server/FoodInfo; access$500
	g (Lnet/minecraft/server/Item$Info;)Z access$600
net/minecraft/server/PathfinderGoal$Type net/minecraft/world/entity/ai/goal/Goal$Flag
	e $VALUES
net/minecraft/server/WorldGenFeatureNetherrackReplaceBlobs net/minecraft/world/level/levelgen/feature/ReplaceBlobsFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/Block;)Lnet/minecraft/server/BlockPosition; findTarget
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRadiusConfiguration;)Z place
net/minecraft/server/CommandBan net/minecraft/server/commands/BanPlayerCommands
	a ERROR_ALREADY_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/IChatBaseComponent;)I banPlayers
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/DataConverterStriderGravity net/minecraft/util/datafix/fixes/StriderGravityFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/server/EnumAnimation net/minecraft/world/item/UseAnim
	h $VALUES
beg$a net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal
	g this$0
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playDestroyProgressSound
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V playBreakSound
	h ()D acceptedDistance
net/minecraft/server/WorldGenFeatureCoralTree net/minecraft/world/level/levelgen/feature/CoralTreeFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z placeFeature
net/minecraft/server/VoxelShapeSlice net/minecraft/world/phys/shapes/SliceShape
	b delegate
	c axis
	d SLICE_COORDS
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	a (Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/VoxelShapeDiscrete; makeSlice
net/minecraft/server/ItemArmor net/minecraft/world/item/ArmorItem
	a DISPENSE_ITEM_BEHAVIOR
	b slot
	c knockbackResistance
	d material
	j ARMOR_MODIFIER_UUID_PER_SLOT
	k defense
	l toughness
	m defaultModifiers
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Z dispenseArmor
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	ab_ ()Lnet/minecraft/server/ArmorMaterial; getMaterial
	b ()Lnet/minecraft/server/EnumItemSlot; getSlot
	c ()I getEnchantmentValue
	e ()I getDefense
	f ()F getToughness
net/minecraft/server/Block net/minecraft/world/level/block/Block
	REGISTRY_ID BLOCK_STATE_REGISTRY
	a SHAPE_FULL_BLOCK_CACHE
	blockData defaultBlockState
	blockStateList stateDefinition
	d item
	e OCCLUSION_CACHE
	l LOGGER
	name descriptionId
	a (DDDDDD)Lnet/minecraft/server/VoxelShape; box
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/Block;)Z is
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/Explosion;)Z dropFromExplosion
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V lambda$dropResources$3
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/Entity;)V updateEntityAfterFallOn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V dropResources
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V updateOrDestroy
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;II)V updateOrDestroy
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; pushEntitiesUp
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z canSupportCenter
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockAccess;Ljava/util/List;Lbni;)V appendHoverText
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/VoxelShape;)Z isShapeFullBlock
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/EnumDirection;)Z isFaceFull
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V popResource
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V lambda$dropResources$1
	ai_ ()Z isPossibleToRespawnInThis
	asBlock (Lnet/minecraft/server/Item;)Lnet/minecraft/server/Block; byItem
	b (Lnet/minecraft/server/Block;)Z isExceptionForConnection
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateFromNeighbourShapes
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)V dropResources
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V lambda$dropResources$4
	c ()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap; lambda$static$0
	c (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z canSupportRigidBlock
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z shouldRenderFace
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V dropResources
	c (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V handleRain
	c (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V lambda$dropResources$2
	d (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)V prepareRender
	dropExperience (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;I)V popExperience
	dropItems (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/Entity;Lnet/minecraft/server/ItemStack;)V dropResources
	g ()Lnet/minecraft/server/IChatMutableComponent; getName
	getBlockData ()Lnet/minecraft/server/IBlockData; defaultBlockState
	getByCombinedId (I)Lnet/minecraft/server/IBlockData; stateById
	getCombinedId (Lnet/minecraft/server/IBlockData;)I getId
	getDurability ()F getExplosionResistance
	getFrictionFactor ()F getFriction
	getPlacedState (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	getStates ()Lnet/minecraft/server/BlockStateList; getStateDefinition
	getStepSound (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/SoundEffectType; getSoundType
	h ()Lnet/minecraft/server/Item; asItem
	i ()Ljava/lang/String; getDescriptionId
	isTicking (Lnet/minecraft/server/IBlockData;)Z isRandomlyTicking
	j (Lnet/minecraft/server/IBlockData;)V registerDefaultState
	o ()Z hasDynamicShape
	p ()Lnet/minecraft/server/Block; asBlock
	postBreak (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V destroy
	postPlace (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
net/minecraft/server/IWorldTime net/minecraft/world/level/LevelTimeAccess
	ab ()J dayTime
	ae ()F getMoonBrightness
	af ()I getMoonPhase
	f (F)F getTimeOfDay
net/minecraft/server/BlockTorch net/minecraft/world/level/block/TorchBlock
	d AABB
	e flameParticle
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
net/minecraft/server/NBTTagString net/minecraft/nbt/StringTag
	a TYPE
	b EMPTY
	a ()B getId
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;)Lnet/minecraft/server/NBTTagString; valueOf
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTTagType; getType
	b (Ljava/lang/String;)Ljava/lang/String; quoteAndEscape
	c ()Lnet/minecraft/server/NBTBase; copy
	d ()Lnet/minecraft/server/NBTTagString; copy
	f_ ()Ljava/lang/String; getAsString
eaj$1 net/minecraft/client/renderer/Sheets$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$ChestType
net/minecraft/server/EntityCat net/minecraft/world/entity/animal/Cat
	bA lieDownAmountTail
	bB lieDownAmountOTail
	bC relaxStateOneAmount
	bD relaxStateOneAmountO
	bq TEXTURE_BY_TYPE
	br TEMPT_INGREDIENT
	bs DATA_TYPE_ID
	bt IS_LYING
	bu RELAX_STATE_ONE
	bv DATA_COLLAR_COLOR
	bw avoidPlayersGoal
	bx temptGoal
	by lieDownAmount
	bz lieDownAmountO
	A (F)F getRelaxStateOneAmount
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	D ()I getAmbientSoundInterval
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	N ()V customServerAiStep
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)V usePlayerItem
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityCat; getBreedOffspring
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eL ()V reassessTameGoals
	eU ()Lnet/minecraft/server/MinecraftKey; getResourceLocation
	eW ()Z isLying
	eX ()Z isRelaxStateOne
	eZ ()V hiss
	fa ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	fb ()F getAttackDamage
	fc ()V handleLieDown
	fd ()V updateLieDownAmount
	fe ()V updateRelaxStateOneAmount
	h (D)Z removeWhenFarAway
	j ()V tick
	k (Lnet/minecraft/server/ItemStack;)Z isFood
	o ()V registerGoals
	x (Z)V setLying
	y (F)F getLieDownAmount
	y (Z)V setRelaxStateOne
	z (F)F getLieDownAmountTail
net/minecraft/server/BlockSapling net/minecraft/world/level/block/SaplingBlock
	b SHAPE
	c treeGrower
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	grow (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)V advanceTree
net/minecraft/server/WorldGenFeatureCircle net/minecraft/world/level/levelgen/feature/DiskReplaceFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureCircleConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/BlockStoneButton net/minecraft/world/level/block/StoneButtonBlock
	a (Z)Lnet/minecraft/server/SoundEffect; getSound
cgx$a net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper
net/minecraft/server/WorldGenFeatureDefinedStructurePoolFeature net/minecraft/world/level/levelgen/feature/structures/FeaturePoolElement
	a CODEC
	b feature
	c defaultJigsawNBT
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;Z)Z place
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolFeature;)Ljava/util/function/Supplier; lambda$null$0
	b ()Lnet/minecraft/server/NBTTagCompound; fillDefaultJigsawNBT
net/minecraft/server/WorldGenFeatureJunglePyramid net/minecraft/world/level/levelgen/feature/JunglePyramidFeature
	a ()Lckx$a; getStartFactory
net/minecraft/server/CommandBanIp net/minecraft/server/commands/BanIpCommands
	a IP_ADDRESS_PATTERN
	b ERROR_INVALID_IP
	c ERROR_ALREADY_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/server/IChatBaseComponent;)I banIpOrName
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/server/IChatBaseComponent;)I banIp
net/minecraft/server/ArgumentVec2I net/minecraft/commands/arguments/coordinates/ColumnPosArgument
	a ERROR_NOT_COMPLETE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentVec2I; columnPos
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/BlockPosition2D; getColumnPos
can$1 net/minecraft/world/level/block/StructureBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
net/minecraft/server/EntityProjectileThrowable net/minecraft/world/entity/projectile/ThrowableItemProjectile
	b DATA_ITEM_STACK
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/ItemStack;)V lambda$setItem$0
	e ()V defineSynchedData
	g ()Lnet/minecraft/server/ItemStack; getItem
	getItem ()Lnet/minecraft/server/ItemStack; getItemRaw
net/minecraft/server/ArgumentSerializerString net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lcom/mojang/brigadier/arguments/StringArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/StringArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/StringArgumentType; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
net/minecraft/server/ShapeDetector$BlockLoader net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader
	a level
	b loadChunks
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ShapeDetectorBlock; load
net/minecraft/server/ChatClickable$EnumClickAction net/minecraft/network/chat/ClickEvent$Action
	g LOOKUP
	h allowFromServer
	i name
	j $VALUES
	a ()Z isAllowedFromServer
	a (Ljava/lang/String;)Lnet/minecraft/server/ChatClickable$EnumClickAction; getByName
	a (Lnet/minecraft/server/ChatClickable$EnumClickAction;)Lnet/minecraft/server/ChatClickable$EnumClickAction; lambda$static$0
	b ()Ljava/lang/String; getName
net/minecraft/server/ContainerAccess net/minecraft/world/inventory/ContainerLevelAccess
	a NULL
	a (Ljava/util/function/BiConsumer;)V execute
	a (Ljava/util/function/BiConsumer;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Ljava/util/Optional; lambda$execute$0
	a (Ljava/util/function/BiFunction;)Ljava/util/Optional; evaluate
	a (Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object; evaluate
	at (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ContainerAccess; create
net/minecraft/server/ItemStack net/minecraft/world/item/ItemStack
	a CODEC
	b EMPTY
	c ATTRIBUTE_MODIFIER_FORMAT
	d LOGGER
	e LORE_STYLE
	g popTime
	j emptyCacheFlag
	k entityRepresentation
	l cachedBreakBlock
	m cachedBreakBlockResult
	n cachedPlaceBlock
	o cachedPlaceBlockResult
	A ()Lnet/minecraft/server/Entity; getEntityRepresentation
	C ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	D ()I getPopTime
	F ()Z isEdible
	G ()Lnet/minecraft/server/SoundEffect; getDrinkingSound
	H ()Lnet/minecraft/server/SoundEffect; getEatingSound
	J ()I getHideFlags
	a (ILnet/minecraft/server/ItemStack$HideFlags;)Z shouldShowInTooltip
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ljava/lang/String;)Lnet/minecraft/server/NBTTagCompound; getOrCreateTagElement
	a (Ljava/lang/String;Lnet/minecraft/server/NBTBase;)V addTagElement
	a (Ljava/text/DecimalFormat;)V lambda$static$4
	a (Ljava/util/List;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/Enchantment;)V lambda$appendEnchantmentNames$5
	a (Ljava/util/List;Lnet/minecraft/server/NBTTagList;)V appendEnchantmentNames
	a (Lnet/minecraft/server/AttributeBase;Lnet/minecraft/server/AttributeModifier;Lnet/minecraft/server/EnumItemSlot;)V addAttributeModifier
	a (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; lambda$getDisplayName$7
	a (Lnet/minecraft/server/Entity;)V setEntityRepresentation
	a (Lnet/minecraft/server/EntityHuman;Lbni;)Ljava/util/List; getTooltipLines
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interactLivingEntity
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityHuman;)V hurtEnemy
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getAttributeModifiers
	a (Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/ItemStack; setHoverName
	a (Lnet/minecraft/server/IChatMutableComponent;)Lnet/minecraft/server/IChatMutableComponent; lambda$expandBlockState$6
	a (Lnet/minecraft/server/ITagRegistry;Lnet/minecraft/server/ShapeDetectorBlock;)Z hasAdventureModeBreakTagForBlock
	a (Lnet/minecraft/server/ItemStack$HideFlags;)V hideTooltipPart
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/ItemStack; of
	a (Lnet/minecraft/server/ShapeDetectorBlock;Lnet/minecraft/server/ShapeDetectorBlock;)Z areSameBlocks
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;I)V onCraftedBy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V mineBlock
	add (I)V grow
	addEnchantment (Lnet/minecraft/server/Enchantment;I)V enchant
	b (Ljava/lang/String;)Lnet/minecraft/server/NBTTagCompound; getTagElement
	b (Lnet/minecraft/server/ITagRegistry;Lnet/minecraft/server/ShapeDetectorBlock;)Z hasAdventureModePlaceTagForBlock
	b (Lnet/minecraft/server/ItemStack;)Z sameItemStackIgnoreDurability
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V onUseTick
	c (Lnet/minecraft/server/ItemStack;)Z matches
	c (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isSame
	canDestroySpecialBlock (Lnet/minecraft/server/IBlockData;)Z isCorrectToolForDrops
	canEnchant ()Z isEnchantable
	checkEmpty ()V updateEmptyCacheFlag
	cloneAndSubtract (I)Lnet/minecraft/server/ItemStack; split
	cloneItemStack ()Lnet/minecraft/server/ItemStack; copy
	d (I)V setPopTime
	d (Ljava/lang/String;)Ljava/util/Collection; expandBlockState
	d (Lnet/minecraft/server/ItemStack;)Ljava/util/Optional; lambda$null$2
	d (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isSameIgnoreDurability
	damage (ILnet/minecraft/server/EntityLiving;Ljava/util/function/Consumer;)V hurtAndBreak
	doMaterialsMatch (Lnet/minecraft/server/ItemStack;)Z sameItem
	e ()Z isDamageableItem
	e (Lnet/minecraft/server/ItemStack;)Ljava/lang/Integer; lambda$null$1
	equals (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z tagMatches
	f ()Z isDamaged
	f (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/Item; lambda$null$0
	getDamage ()I getDamageValue
	getEnchantments ()Lnet/minecraft/server/NBTTagList; getEnchantmentTags
	getName ()Lnet/minecraft/server/IChatBaseComponent; getHoverName
	getRepairCost ()I getBaseRepairCost
	h ()I getMaxDamage
	hasEnchantments ()Z isEnchanted
	hasName ()Z hasCustomHoverName
	isDamaged (ILjava/util/Random;Lnet/minecraft/server/EntityPlayer;)Z hurt
	j ()Ljava/lang/String; getDescriptionId
	k ()I getUseDuration
	l ()Lnet/minecraft/server/EnumAnimation; getUseAnimation
	m ()Z useOnRelease
	placeItem (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	removeTag (Ljava/lang/String;)V removeTagKey
	s ()V resetHoverName
	setDamage (I)V setDamageValue
	subtract (I)V shrink
	u ()Z hasFoil
	v ()Lnet/minecraft/server/EnumItemRarity; getRarity
	y ()Z isFramed
	z ()Lnet/minecraft/server/EntityItemFrame; getFrame
net/minecraft/server/AttributeProvider$Builder net/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder
	a builder
	b instanceFrozen
	a ()Lnet/minecraft/server/AttributeProvider; build
	a (Lnet/minecraft/server/AttributeBase;)Lnet/minecraft/server/AttributeProvider$Builder; add
	a (Lnet/minecraft/server/AttributeBase;D)Lnet/minecraft/server/AttributeProvider$Builder; add
	a (Lnet/minecraft/server/AttributeBase;Lnet/minecraft/server/AttributeModifiable;)V lambda$create$0
	b (Lnet/minecraft/server/AttributeBase;)Lnet/minecraft/server/AttributeModifiable; create
net/minecraft/server/DataConverterEntityName net/minecraft/util/datafix/fixes/EntityRenameFix
	a name
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	a (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; getEntity
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
net/minecraft/server/BlockBannerAbstract net/minecraft/world/level/block/AbstractBannerBlock
	a color
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	ai_ ()Z isPossibleToRespawnInThis
cyu$b net/minecraft/world/level/storage/loot/LootPool$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootSelector; deserialize
	a (Lnet/minecraft/server/LootSelector;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/Explosion$Effect net/minecraft/world/level/Explosion$BlockInteraction
	d $VALUES
cyu$a net/minecraft/world/level/storage/loot/LootPool$Builder
	a entries
	b conditions
	c functions
	d rolls
	e bonusRolls
	a ()Lcyu$a; unwrap
	a (Lczn$a;)Lcyu$a; add
	a (Ldag$a;)Lcyu$a; apply
	a (Ldbl$a;)Lcyu$a; when
	a (Lnet/minecraft/server/LootValue;)Lcyu$a; setRolls
	a (Lnet/minecraft/server/LootValueBounds;)Lcyu$a; setBonusRolls
	b ()Lnet/minecraft/server/LootSelector; build
	b (Ldag$a;)Ljava/lang/Object; apply
	b (Ldbl$a;)Ljava/lang/Object; when
	c ()Ljava/lang/Object; unwrap
net/minecraft/server/IMerchant net/minecraft/world/item/trading/Merchant
	a (ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$openTradingScreen$0
	a (Lnet/minecraft/server/MerchantRecipe;)V notifyTrade
	a (Lnet/minecraft/server/MerchantRecipeList;)V overrideOffers
	fa ()Z canRestock
	getExperience ()I getVillagerXp
	getTradeSound ()Lnet/minecraft/server/SoundEffect; getNotifyTradeSound
	getTrader ()Lnet/minecraft/server/EntityHuman; getTradingPlayer
	getWorld ()Lnet/minecraft/server/World; getLevel
	isRegularVillager ()Z showProgressBar
	k (Lnet/minecraft/server/ItemStack;)V notifyTradeUpdated
	openTrade (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IChatBaseComponent;I)V openTradingScreen
	setForcedExperience (I)V overrideXp
net/minecraft/server/PersistentIndexed net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData
	a all
	b remaining
	a ()Lit/unimi/dsi/fastutil/longs/LongSet; getAll
	a (J)V addIndex
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (J)Z hasStartIndex
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c (J)Z hasUnhandledIndex
	d (J)V removeIndex
net/minecraft/server/WorldGenFeatureReplaceBlockConfiguration net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration
	a CODEC
	b target
	c state
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/WorldGenFeatureReplaceBlockConfiguration;)Lnet/minecraft/server/IBlockData; lambda$null$1
	b (Lnet/minecraft/server/WorldGenFeatureReplaceBlockConfiguration;)Lnet/minecraft/server/IBlockData; lambda$null$0
net/minecraft/server/PacketPlayOutBoss$Action net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation
	g $VALUES
czg$a net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor
net/minecraft/server/LootEnchantFunction net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction
	a value
	b limit
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootEnchantFunction;)Lnet/minecraft/server/LootValueBounds; access$100
	a (Lnet/minecraft/server/LootValueBounds;)Ldaj$a; lootingMultiplier
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
	b (Lnet/minecraft/server/LootEnchantFunction;)Z access$200
	c ()Z hasLimit
	c (Lnet/minecraft/server/LootEnchantFunction;)I access$300
net/minecraft/server/WorldGenStrongholdPieces net/minecraft/world/level/levelgen/structure/StrongholdPieces
	a STRONGHOLD_PIECE_WEIGHTS
	b currentPieces
	c imposedPiece
	d totalWeight
	e SMOOTH_STONE_SELECTOR
	a ()V resetPieces
	a (Ljava/lang/Class;)Ljava/lang/Class; access$102
	a (Ljava/lang/Class;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece; findAndCreatePieceFactory
	a (Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/StructurePiece; access$000
	b ()Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStones; access$200
	b (Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece; generatePieceFromSmallDoor
	c ()Z updatePieceWeight
	c (Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/StructurePiece; generateAndAddPiece
net/minecraft/server/DataConverterNamedEntity net/minecraft/util/datafix/fixes/NamedEntityFix
	a name
	b entityName
	c type
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/BehaviorFarm net/minecraft/world/entity/ai/behavior/HarvestFarmland
	c nextOkStartTime
	d timeWorkedSoFar
	e validFarmlandAroundVillager
	farmBlock aboveFarmlandPos
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;)Z validPos
	a (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/BlockPosition; getValidFarmland
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
cyu$1 net/minecraft/world/level/storage/loot/LootPool$1
net/minecraft/server/WorldGenFeaturePillagerOutpostPieces net/minecraft/data/worldgen/PillagerOutpostPools
	a START
	a ()V bootstrap
net/minecraft/server/FileUtils net/minecraft/FileUtil
	a COPY_COUNTER_PATTERN
	b RESERVED_WINDOWS_FILENAMES
	a (Ljava/nio/file/Path;)Z isPathNormalized
	a (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; findAvailableName
	b (Ljava/nio/file/Path;)Z isPathPortable
	b (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path; createPathToResource
net/minecraft/server/WorldGenFeatureChoice net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureChoiceConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
ccd$1 net/minecraft/world/level/block/entity/BeehiveBlockEntity$1
bfk$a net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds
	a item
	b value
	c maxUses
	d villagerXp
	a (Ljava/util/Random;)Lnet/minecraft/server/ItemDye; getRandomDye
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
net/minecraft/server/WorldGenEndCity net/minecraft/world/level/levelgen/feature/EndCityFeature
	a ()Lckx$a; getStartFactory
	a (IILnet/minecraft/server/ChunkGenerator;)I access$000
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z isFeatureChunk
	b ()Z linearSeparation
	b (IILnet/minecraft/server/ChunkGenerator;)I getYPositionForFeature
bfk$b net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems
	a item
	b cost
	c maxUses
	d villagerXp
	e priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
bfk$c net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem
	a trades
	b cost
	c maxUses
	d villagerXp
	a (Ljava/util/Map;Lnet/minecraft/server/VillagerType;)Z lambda$new$0
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
	a (Lnet/minecraft/server/VillagerType;)V lambda$new$1
net/minecraft/server/TrunkPlacerMegaJungle net/minecraft/world/level/levelgen/feature/trunkplacers/MegaJungleTrunkPlacer
	b CODEC
	a ()Lnet/minecraft/server/TrunkPlacers; type
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;ILnet/minecraft/server/BlockPosition;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
bfk$d net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds
	a villagerXp
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
net/minecraft/server/MethodProfilerResultsEmpty net/minecraft/util/profiling/EmptyProfileResults
	a EMPTY
	a ()J getStartTimeNano
	a (Ljava/io/File;)Z saveResults
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	b ()I getStartTimeTicks
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	e ()Ljava/lang/String; getProfilerResults
bfk$i net/minecraft/world/entity/npc/VillagerTrades$SuspisciousStewForEmerald
	a effect
	b duration
	c xp
	d priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
bfk$j net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds
	a toItem
	b toCount
	c emeraldCost
	d maxUses
	e villagerXp
	f fromItem
	g fromCount
	h priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
	a (Lnet/minecraft/server/PotionRegistry;)Z lambda$getOffer$0
bfk$k net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds
	a emeraldCost
	b destination
	c destinationType
	d maxUses
	e villagerXp
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
net/minecraft/server/DebugOutputStream net/minecraft/server/DebugLoggedPrintStream
	a (Ljava/lang/String;)V logLine
bfk$e net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds
	a itemStack
	b baseEmeraldCost
	c maxUses
	d villagerXp
	e priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
net/minecraft/server/PathfinderGoalWaterJump net/minecraft/world/entity/ai/goal/DolphinJumpGoal
	a STEPS_TO_CHECK
	b dolphin
	c interval
	d breached
	C_ ()Z isInterruptable
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;III)Z waterIsClear
	b ()Z canContinueToUse
	b (Lnet/minecraft/server/BlockPosition;III)Z surfaceIsClear
	c ()V start
	d ()V stop
	e ()V tick
bfk$g net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems
	a fromItem
	b fromCount
	c emeraldCost
	d toItem
	e toCount
	f maxUses
	g villagerXp
	h priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
bfk$h net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds
	a itemStack
	b emeraldCost
	c numberOfItems
	d maxUses
	e villagerXp
	f priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
net/minecraft/server/EntityFishSchool net/minecraft/world/entity/animal/AbstractSchoolingFish
	b leader
	c schoolSize
	a (Ljava/util/stream/Stream;)V addFollowers
	a (Lnet/minecraft/server/EntityFishSchool;)Lnet/minecraft/server/EntityFishSchool; startFollowing
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/server/EntityFishSchool;)V lambda$addFollowers$1
	c (Lnet/minecraft/server/EntityFishSchool;)Z lambda$addFollowers$0
	eL ()Z canRandomSwim
	eN ()I getMaxSchoolSize
	eO ()Z isFollower
	eP ()V stopFollowing
	eQ ()Z canBeFollowed
	eR ()Z hasFollowers
	eS ()Z inRangeOfLeader
	eT ()V pathToLeader
	eU ()V addFollower
	eV ()V removeFollower
	eq ()I getMaxSpawnClusterSize
	j ()V tick
	o ()V registerGoals
net/minecraft/server/PacketPlayInEnchantItem net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket
	a containerId
	b buttonId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getButtonId
bva$1 net/minecraft/world/level/block/ChainBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
net/minecraft/server/WorldGenFeatureBastionHoglinStable net/minecraft/data/worldgen/BastionHoglinStablePools
	a ()V bootstrap
pq$a net/minecraft/network/protocol/game/ClientboundGameEventPacket$Type
	a TYPES
	b id
	a ()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; access$000
	a (Lpq$a;)I access$100
net/minecraft/server/CriterionInstance net/minecraft/advancements/CriterionTriggerInstance
	a ()Lnet/minecraft/server/MinecraftKey; getCriterion
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
cba$1 net/minecraft/world/level/block/TripWireBlock$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
net/minecraft/server/ResourcePackSourceFolder net/minecraft/server/packs/repository/FolderRepositorySource
	a RESOURCEPACK_FILTER
	c packSource
	file folder
	a (Ljava/io/File;)Ljava/util/function/Supplier; createSupplier
	a (Ljava/util/function/Consumer;Labs$a;)V loadPacks
	b (Ljava/io/File;)Lnet/minecraft/server/IResourcePack; lambda$createSupplier$2
	c (Ljava/io/File;)Lnet/minecraft/server/IResourcePack; lambda$createSupplier$1
	d (Ljava/io/File;)Z lambda$static$0
net/minecraft/server/Counter net/minecraft/stats/StatFormatter
	a (I)Ljava/lang/String; lambda$static$3
	a (Ljava/text/DecimalFormat;)V lambda$static$0
	b (I)Ljava/lang/String; lambda$static$2
	c (I)Ljava/lang/String; lambda$static$1
net/minecraft/server/BlockAccessAir net/minecraft/world/level/EmptyBlockGetter
	b $VALUES
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
net/minecraft/server/DataConverterRecipes net/minecraft/util/datafix/fixes/RecipesFix
	a RECIPES
	a (Ljava/lang/String;)Ljava/lang/String; lambda$new$0
net/minecraft/server/WorldGenFeatureTreeVineTrunk net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/server/WorldGenFeatureTrees; type
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/BlockPosition;)V lambda$place$1
	a (Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V place
	b ()Lnet/minecraft/server/WorldGenFeatureTreeVineTrunk; lambda$static$0
net/minecraft/server/IBlockData net/minecraft/world/level/block/state/BlockState
	b CODEC
	p ()Lnet/minecraft/server/IBlockData; asState
net/minecraft/server/ItemExpBottle net/minecraft/world/item/ExperienceBottleItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	e (Lnet/minecraft/server/ItemStack;)Z isFoil
net/minecraft/server/CriterionTriggerSummonedEntity net/minecraft/advancements/critereon/SummonedEntityTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lcn$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;)V trigger
	a (Lnet/minecraft/server/LootTableInfo;Lcn$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/BehaviorStrollPlaceList net/minecraft/world/entity/ai/behavior/StrollToPoiList
	b strollToMemoryType
	c mustBeCloseToMemoryType
	d speedModifier
	e closeEnoughDist
	f maxDistanceFromPoi
	g nextOkStartTime
	h targetPos
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
net/minecraft/server/CaveSoundSettings net/minecraft/world/level/biome/AmbientMoodSettings
	a CODEC
	b LEGACY_CAVE_SETTINGS
	c soundEvent
	d tickDelay
	e blockSearchExtent
	f soundPositionOffset
	a ()Lnet/minecraft/server/SoundEffect; getSoundEvent
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lnet/minecraft/server/CaveSoundSettings;)Ljava/lang/Double; lambda$null$3
	b ()I getTickDelay
	b (Lnet/minecraft/server/CaveSoundSettings;)Ljava/lang/Integer; lambda$null$2
	c ()I getBlockSearchExtent
	c (Lnet/minecraft/server/CaveSoundSettings;)Ljava/lang/Integer; lambda$null$1
	d ()D getSoundPositionOffset
	d (Lnet/minecraft/server/CaveSoundSettings;)Lnet/minecraft/server/SoundEffect; lambda$null$0
net/minecraft/server/LightEngine net/minecraft/world/level/lighting/LevelLightEngine
	a blockEngine
	b skyEngine
	a ()Z hasLightWork
	a (IZZ)I runUpdates
	a (Lnet/minecraft/server/BlockPosition;)V checkBlock
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/server/EnumSkyBlock;)Lnet/minecraft/server/LightEngineLayerEventListener; getLayerListener
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;)Ljava/lang/String; getDebugData
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/NibbleArray;Z)V queueSectionData
	a (Lnet/minecraft/server/SectionPosition;Z)V updateSectionStatus
	b (Lnet/minecraft/server/BlockPosition;I)I getRawBrightness
	b (Lnet/minecraft/server/ChunkCoordIntPair;Z)V retainData
net/minecraft/server/Activity net/minecraft/world/entity/schedule/Activity
	FLIGHT FIGHT
	p name
	q hashCode
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/Activity; register
net/minecraft/server/BlockPropertyComparatorMode net/minecraft/world/level/block/state/properties/ComparatorMode
	c name
	d $VALUES
	a ()Ljava/lang/String; getSerializedName
net/minecraft/server/DataConverterMissingDimension net/minecraft/util/datafix/fixes/MissingDimensionFix
	a (Lcom/mojang/datafixers/FieldFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; recreateSettings
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; fields
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; optionalFields
	b (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; optionalFields
net/minecraft/server/EntityBoat$EnumStatus net/minecraft/world/entity/vehicle/Boat$Status
	f $VALUES
net/minecraft/server/PacketPlayOutHeldItemSlot net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket
	a slot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getSlot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/BlockPropertyAttachPosition net/minecraft/world/level/block/state/properties/AttachFace
	d name
	e $VALUES
	a ()Ljava/lang/String; getSerializedName
net/minecraft/server/StructureGenerator net/minecraft/world/level/levelgen/feature/StructureFeature
	ENDCITY END_CITY
	FORTRESS NETHER_BRIDGE
	JUNGLE_PYRAMID JUNGLE_TEMPLE
	MANSION WOODLAND_MANSION
	MONUMENT OCEAN_MONUMENT
	a STRUCTURES_REGISTRY
	t NOISE_AFFECTING_FEATURES
	u STEP
	v LOGGER
	w JIGSAW_RENAME
	x RENAMES
	y configuredStructureCodec
	a ()Lckx$a; getStartFactory
	a (IILnet/minecraft/server/StructureBoundingBox;IJ)Lnet/minecraft/server/StructureStart; createStart
	a (Ljava/lang/String;Lnet/minecraft/server/StructureGenerator;Lnet/minecraft/server/WorldGenStage$Decoration;)Lnet/minecraft/server/StructureGenerator; register
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z isFeatureChunk
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/NBTTagCompound;J)Lnet/minecraft/server/StructureStart; loadStaticStart
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;Lnet/minecraft/server/DefinedStructureManager;JLnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BiomeBase;ILnet/minecraft/server/SeededRandom;Lnet/minecraft/server/StructureSettingsFeature;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/StructureStart; generate
	a (Lnet/minecraft/server/StructureFeature;)Lnet/minecraft/server/WorldGenFeatureConfiguration; lambda$new$1
	a (Lnet/minecraft/server/StructureSettingsFeature;JLnet/minecraft/server/SeededRandom;II)Lnet/minecraft/server/ChunkCoordIntPair; getPotentialFeatureChunk
	a (Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/StructureFeature; configured
	b ()Z linearSeparation
	b (Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/StructureFeature; lambda$new$0
	c ()Ljava/util/List; getSpecialEnemies
	f ()Lnet/minecraft/server/WorldGenStage$Decoration; step
	g ()V bootstrap
	h ()Lcom/mojang/serialization/Codec; configuredStructureCodec
	i ()Ljava/lang/String; getFeatureName
	j ()Ljava/util/List; getSpecialAnimals
net/minecraft/server/ItemSkullPlayer net/minecraft/world/item/PlayerHeadItem
	b (Lnet/minecraft/server/NBTTagCompound;)Z verifyTagAfterLoad
	h (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IChatBaseComponent; getName
net/minecraft/server/PacketPlayInAdvancements net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket
	a action
	b tab
	a (Lnet/minecraft/server/Advancement;)Lnet/minecraft/server/PacketPlayInAdvancements; openedTab
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/PacketPlayInAdvancements; closedScreen
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketPlayInAdvancements$Status; getAction
	d ()Lnet/minecraft/server/MinecraftKey; getTab
net/minecraft/server/WorldData net/minecraft/world/level/storage/LevelData
	a ()I getXSpawn
	a (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	b ()I getYSpawn
	c ()I getZSpawn
	d ()F getSpawnAngle
	g ()Ljava/lang/String; lambda$fillCrashReportCategory$1
	getTime ()J getGameTime
	h ()Ljava/lang/String; lambda$fillCrashReportCategory$0
	hasStorm ()Z isRaining
	q ()Lnet/minecraft/server/GameRules; getGameRules
	setStorm (Z)V setRaining
net/minecraft/server/PacketPlayOutCombatEvent$EnumCombatEventType net/minecraft/network/protocol/game/ClientboundPlayerCombatPacket$Event
	d $VALUES
net/minecraft/server/ItemCarrotStick net/minecraft/world/item/FoodOnAStickItem
	a canInteractWith
	b consumeItemDamage
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$use$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/EntityChicken net/minecraft/world/entity/animal/Chicken
	bo flap
	bp flapSpeed
	bq oFlapSpeed
	br oFlap
	bs flapping
	bv FOOD_ITEMS
	chickenJockey isChickenJockey
	eggLayTime eggTime
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityChicken; getBreedOffspring
	d (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	h (D)Z removeWhenFarAway
	k ()V aiStep
	k (Lnet/minecraft/server/Entity;)V positionRider
	k (Lnet/minecraft/server/ItemStack;)Z isFood
	o ()V registerGoals
czx$1 net/minecraft/world/level/storage/loot/functions/CopyNameFunction$1
net/minecraft/server/PlayerChunkMap$EntityTracker net/minecraft/server/level/ChunkMap$TrackedEntity
	a this$0
	e lastSectionPos
	trackedPlayers seenBy
	tracker entity
	trackerEntry serverEntity
	trackingDistance range
	a ()V broadcastRemoved
	a (I)I scaledRange
	a (Lnet/minecraft/server/PlayerChunkMap$EntityTracker;)Lnet/minecraft/server/Entity; access$000
	a (Lnet/minecraft/server/PlayerChunkMap$EntityTracker;Lnet/minecraft/server/SectionPosition;)Lnet/minecraft/server/SectionPosition; access$102
	b ()I getEffectiveRange
	b (Lnet/minecraft/server/PlayerChunkMap$EntityTracker;)Lnet/minecraft/server/SectionPosition; access$100
	broadcastIncludingSelf (Lnet/minecraft/server/Packet;)V broadcastAndSend
	c (Lnet/minecraft/server/PlayerChunkMap$EntityTracker;)Lnet/minecraft/server/EntityTrackerEntry; access$200
	clear (Lnet/minecraft/server/EntityPlayer;)V removePlayer
	track (Ljava/util/List;)V updatePlayers
dbc$a net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionTableBonus;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonParseException; lambda$deserialize$0
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionTableBonus; deserialize
net/minecraft/server/EntityPiglinArmPose net/minecraft/world/entity/monster/piglin/PiglinArmPose
	g $VALUES
edc$1 net/minecraft/client/renderer/debug/HeightMapRenderer$1
	a $SwitchMap$net$minecraft$world$level$levelgen$Heightmap$Types
daq$1 net/minecraft/world/level/storage/loot/functions/SetNameFunction$1
cdg$1 net/minecraft/world/level/block/entity/StructureBlockEntity$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
bmg$1 net/minecraft/world/item/MinecartItem$1
	b defaultDispenseItemBehavior
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
net/minecraft/server/DataConverterRedstoneConnections net/minecraft/util/datafix/fixes/RedstoneWireConnectionsFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateRedstoneConnections
	a (Ljava/lang/String;)Z isConnected
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$4
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateRedstoneConnections$5
	b (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$3
	c (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	d (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
net/minecraft/server/PacketPlayOutScoreboardTeam net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket
	a name
	b displayName
	c playerPrefix
	d playerSuffix
	e nametagVisibility
	f collisionRule
	g color
	h players
	i method
	j options
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/lang/String; getName
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	d ()Ljava/util/Collection; getPlayers
	e ()I getMethod
	f ()I getOptions
	g ()Lnet/minecraft/server/EnumChatFormat; getColor
	h ()Ljava/lang/String; getNametagVisibility
	i ()Ljava/lang/String; getCollisionRule
	j ()Lnet/minecraft/server/IChatBaseComponent; getPlayerPrefix
	k ()Lnet/minecraft/server/IChatBaseComponent; getPlayerSuffix
net/minecraft/server/ChatMessageType net/minecraft/network/chat/ChatType
	d index
	e interrupt
	f $VALUES
	a ()B getIndex
	a (B)Lnet/minecraft/server/ChatMessageType; getForIndex
	b ()Z shouldInterrupt
net/minecraft/server/PacketLoginOutEncryptionBegin net/minecraft/network/protocol/login/ClientboundHelloPacket
	a serverId
	b publicKey
	c nonce
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginOutListener;)V handle
	b ()Ljava/lang/String; getServerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/security/PublicKey; getPublicKey
	d ()[B getNonce
net/minecraft/server/DoubleBlockFinder$BlockType net/minecraft/world/level/block/DoubleBlockCombiner$BlockType
	d $VALUES
net/minecraft/server/RegionFileCompression net/minecraft/world/level/chunk/storage/RegionFileVersion
	a VERSION_GZIP
	b VERSION_DEFLATE
	c VERSION_NONE
	d VERSIONS
	e id
	f inputWrapper
	g outputWrapper
	a ()I getId
	a (I)Lnet/minecraft/server/RegionFileCompression; fromId
	a (Ljava/io/InputStream;)Ljava/io/InputStream; wrap
	a (Ljava/io/OutputStream;)Ljava/io/OutputStream; wrap
	a (Lnet/minecraft/server/RegionFileCompression;)Lnet/minecraft/server/RegionFileCompression; register
	b (I)Z isValidVersion
	b (Ljava/io/InputStream;)Ljava/io/InputStream; lambda$static$0
	b (Ljava/io/OutputStream;)Ljava/io/OutputStream; lambda$static$1
net/minecraft/server/EntityEnderman net/minecraft/world/entity/monster/EnderMan
	b SPEED_MODIFIER_ATTACKING_UUID
	bo DATA_CREEPY
	bp DATA_STARED_AT
	bq ENDERMITE_SELECTOR
	br lastStareSound
	bs targetChangeTime
	bt PERSISTENT_ANGER_TIME
	bu remainingPersistentAngerTime
	bv persistentAngerTarget
	c SPEED_MODIFIER_ATTACKING
	d DATA_CARRY_STATE
	E_ ()I getRemainingPersistentAngerTime
	F_ ()Ljava/util/UUID; getPersistentAngerTarget
	G_ ()V startPersistentAngerTimer
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	K ()Z requiresCustomPersistence
	N ()V customServerAiStep
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;)Z teleportTowards
	a (Lnet/minecraft/server/EntityEnderman;Lnet/minecraft/server/Entity;)Z access$100
	a (Lnet/minecraft/server/EntityEnderman;Lnet/minecraft/server/EntityHuman;)Z access$000
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a_ (I)V setRemainingPersistentAngerTime
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	dN ()Z isSensitiveToWater
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()V playStareSound
	eL ()Z teleport
	eN ()Z isCreepy
	eO ()Z hasBeenStaredAt
	eP ()V setBeingStaredAt
	g (Lnet/minecraft/server/EntityHuman;)Z isLookingAtMe
	getCarried ()Lnet/minecraft/server/IBlockData; getCarriedBlock
	h (Lnet/minecraft/server/EntityLiving;)V setTarget
	i (Lnet/minecraft/server/EntityLiving;)Z lambda$static$0
	k ()V aiStep
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	o ()V registerGoals
	p (DDD)Z teleport
	setCarried (Lnet/minecraft/server/IBlockData;)V setCarriedBlock
net/minecraft/server/BehaviorRemoveMemory net/minecraft/world/entity/ai/behavior/EraseMemoryIf
	b predicate
	c memoryType
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
dxt$a net/minecraft/client/particle/LargeSmokeParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dxc$1 net/minecraft/client/particle/BubbleParticle$1
cdx$1 net/minecraft/world/level/block/piston/PistonBaseBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$level$material$PushReaction
net/minecraft/server/CriterionTriggerItemDurabilityChanged net/minecraft/advancements/critereon/ItemDurabilityTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lbo$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;I)V trigger
	a (Lnet/minecraft/server/ItemStack;ILbo$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece
	a BASE_GRAY
	b BASE_LIGHT
	c BASE_BLACK
	d DOT_DECO_DATA
	e LAMP_BLOCK
	f FILL_BLOCK
	g FILL_KEEP
	h GRIDROOM_SOURCE_INDEX
	i GRIDROOM_TOP_CONNECT_INDEX
	j GRIDROOM_LEFTWING_CONNECT_INDEX
	k GRIDROOM_RIGHTWING_CONNECT_INDEX
	l roomDefinition
	a (I)I getRoomX
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;III)Z spawnElder
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;IIIIII)V generateWaterBox
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;IIIIIILnet/minecraft/server/IBlockData;)V generateBoxOnFillOnly
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;IIZ)V generateDefaultFloor
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructureBoundingBox;IIII)Z chunkIntersects
	b (I)I getRoomY
	b (III)I getRoomIndex
	c (I)I getRoomZ
net/minecraft/server/SaveData net/minecraft/world/level/storage/WorldData
	B ()Lcom/mojang/serialization/Lifecycle; worldGenSettingsLifecycle
	C ()Lnet/minecraft/server/NBTTagCompound; endDragonFightData
	D ()Lnet/minecraft/server/DataPackConfiguration; getDataPackConfig
	F ()Z wasModded
	G ()Ljava/util/Set; getKnownServerBrands
	H ()Lnet/minecraft/server/IWorldDataServer; overworldData
	I ()Lnet/minecraft/server/WorldSettings; getLevelSettings
	a ()Ljava/lang/String; lambda$fillCrashReportCategory$2
	a (Ljava/lang/String;Z)V setModdedInfo
	a (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/server/DataPackConfiguration;)V setDataPackConfig
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; createTag
	a (Lnet/minecraft/server/NBTTagCompound;)V setEndDragonFightData
	b ()Ljava/lang/String; lambda$fillCrashReportCategory$1
	c ()Ljava/lang/String; lambda$fillCrashReportCategory$0
	d (Z)V setDifficultyLocked
	getGeneratorSettings ()Lnet/minecraft/server/GeneratorSettings; worldGenSettings
	getName ()Ljava/lang/String; getLevelName
	i (I)Ljava/lang/String; getStorageVersionName
	o ()Z getAllowCommands
	q ()Lnet/minecraft/server/GameRules; getGameRules
	y ()Lnet/minecraft/server/NBTTagCompound; getLoadedPlayerTag
	z ()I getVersion
net/minecraft/server/ChatComponentNBT net/minecraft/network/chat/NbtComponent
	d interpreting
	e nbtPathPattern
	f compiledNbtPath
	g LOGGER
	a (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/stream/Stream; getData
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatMutableComponent; resolve
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;ILjava/lang/String;)Ljava/util/stream/Stream; lambda$resolve$1
	a (Lnet/minecraft/server/IChatMutableComponent;Lnet/minecraft/server/IChatMutableComponent;)Lnet/minecraft/server/IChatMutableComponent; lambda$resolve$2
	a (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/stream/Stream; lambda$resolve$0
	d (Ljava/lang/String;)Ldr$h; compileNbtPath
	h ()Ljava/lang/String; getNbtPath
	i ()Z isInterpreting
blu$1 net/minecraft/world/item/Item$1
	a $SwitchMap$net$minecraft$world$item$Rarity
net/minecraft/server/LightEngineStorage net/minecraft/world/level/lighting/LayerLightSectionStorage
	a EMPTY_DATA
	b dataSectionSet
	c toMarkNoData
	d toMarkData
	e visibleSectionData
	f updatingSectionData
	g changedSections
	h sectionsAffectedByLightUpdates
	i queuedSections
	j hasToRemove
	k DIRECTIONS
	l layer
	m chunkSource
	n untrustedSections
	o columnsToRetainQueuedDataFor
	p toRemove
	a ()Z hasInconsistencies
	a (JI)V setLevel
	a (JJ)Z lambda$clearQueuedSectionBlocks$0
	a (JLnet/minecraft/server/NibbleArray;Z)V queueSectionData
	a (JZ)Lnet/minecraft/server/NibbleArray; getDataLayer
	a (Lnet/minecraft/server/LightEngineLayer;J)V clearQueuedSectionBlocks
	a (Lnet/minecraft/server/LightEngineLayer;ZZ)V markNewInconsistencies
	a (Lnet/minecraft/server/LightEngineStorageArray;J)Lnet/minecraft/server/NibbleArray; getDataLayer
	b (J)I getLevelFromSource
	b (JI)V setStoredLevel
	b (JZ)V enableLightSources
	b (Lnet/minecraft/server/LightEngineLayer;J)V checkEdgesForSection
	c (J)I getLevel
	c (JZ)V retainData
	d ()V runAllUpdates
	d (J)I getLightValue
	d (JZ)V updateSectionStatus
	e ()V swapSectionMap
	g (J)Z storingLightForSection
	h (J)Lnet/minecraft/server/NibbleArray; getDataLayerData
	i (J)I getStoredLevel
	j (J)Lnet/minecraft/server/NibbleArray; createDataLayer
	k (J)V onNodeAdded
	l (J)V onNodeRemoved
bau$1 net/minecraft/world/entity/animal/Turtle$1
net/minecraft/server/TileInventory net/minecraft/world/SimpleMenuProvider
	a title
	b menuConstructor
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
bbg$a net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal
	a this$0
	b llama
	c ownerLastHurtBy
	d timestamp
	a ()Z canUse
	c ()V start
net/minecraft/server/BlockSkull net/minecraft/world/level/block/SkullBlock
	a ROTATION
	b SHAPE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
net/minecraft/server/DataPaletteHash net/minecraft/world/level/chunk/HashMapPalette
	a registry
	b values
	c resizeHandler
	d reader
	e writer
	f bits
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/server/NBTTagList;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()I getSize
	b (Lnet/minecraft/server/NBTTagList;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/DataWatcher$Item net/minecraft/network/syncher/SynchedEntityData$DataItem
	a accessor
	b value
	c dirty
	a ()Lnet/minecraft/server/DataWatcherObject; getAccessor
	a (Ljava/lang/Object;)V setValue
	a (Lnet/minecraft/server/DataWatcher$Item;)Lnet/minecraft/server/DataWatcherObject; access$000
	a (Z)V setDirty
	b ()Ljava/lang/Object; getValue
	b (Lnet/minecraft/server/DataWatcher$Item;)Ljava/lang/Object; access$100
	c ()Z isDirty
	d ()Lnet/minecraft/server/DataWatcher$Item; copy
bau$a net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal
	d turtle
	a ()Z canUse
	g ()V breed
dfx$a com/mojang/realmsclient/client/Ping$Region
	a US_EAST_1
	b US_WEST_2
	c US_WEST_1
	d EU_WEST_1
	e AP_SOUTHEAST_1
	f AP_SOUTHEAST_2
	g AP_NORTHEAST_1
	h SA_EAST_1
	i name
	j endpoint
	k $VALUES
	a (Ldfx$a;)Ljava/lang/String; access$000
	b (Ldfx$a;)Ljava/lang/String; access$100
bau$d net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal
	g turtle
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	e ()V tick
bau$e net/minecraft/world/entity/animal/Turtle$TurtleMoveControl
	i turtle
	a ()V tick
	g ()V updateSpeed
bau$b net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal
	a turtle
	b speedModifier
	c stuck
	d closeToHomeTryTicks
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/ControllerLookDolphin net/minecraft/world/entity/ai/control/DolphinLookControl
	h maxYRotFromCenter
	a ()V tick
bau$c net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal
	g turtle
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	k ()Z shouldRecalculatePath
bau$h net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal
	h turtle
	a ()Z canUse
bau$i net/minecraft/world/entity/animal/Turtle$TurtleTemptGoal
	a TEMPT_TARGETING
	b turtle
	c speedModifier
	d player
	e calmDown
	f items
	a ()Z canUse
	a (Lnet/minecraft/server/ItemStack;)Z shouldFollowItem
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
bau$f net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal
	a ()Z canUse
net/minecraft/server/TileEntityBeehive$ReleaseStatus net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus
	d $VALUES
net/minecraft/server/RecipeFireworks net/minecraft/world/item/crafting/FireworkRocketRecipe
	a PAPER_INGREDIENT
	b GUNPOWDER_INGREDIENT
	c STAR_INGREDIENT
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	c ()Lnet/minecraft/server/ItemStack; getResultItem
bau$g net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
	a (Lnet/minecraft/server/BlockPosition;)Z isStableDestination
net/minecraft/server/LightEngineLayerEventListener net/minecraft/world/level/lighting/LayerLightEventListener
	a (Lnet/minecraft/server/SectionPosition;)Lnet/minecraft/server/NibbleArray; getDataLayerData
	b (Lnet/minecraft/server/BlockPosition;)I getLightValue
net/minecraft/server/ArgumentBlockPredicate net/minecraft/commands/arguments/blocks/BlockPredicateArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	a ()Lnet/minecraft/server/ArgumentBlockPredicate; blockPredicate
	a (Lcom/mojang/brigadier/StringReader;)Leg$b; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; getBlockPredicate
	a (Leg$a;Lnet/minecraft/server/ITagRegistry;)Ljava/util/function/Predicate; lambda$parse$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/ArgumentBlock;Lnet/minecraft/server/ITagRegistry;)Ljava/util/function/Predicate; lambda$parse$2
net/minecraft/server/IChatBaseComponent$ChatSerializer net/minecraft/network/chat/Component$Serializer
	a GSON
	b JSON_READER_POS
	c JSON_READER_LINESTART
	a ()Ljava/lang/reflect/Field; lambda$static$2
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/IChatMutableComponent; fromJson
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/IChatMutableComponent; deserialize
	a (Lcom/google/gson/stream/JsonReader;)I getPos
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IChatMutableComponent; fromJson
	a (Ljava/lang/String;)Lnet/minecraft/server/IChatMutableComponent; fromJson
	a (Lnet/minecraft/server/ChatModifier;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeStyle
	a (Lnet/minecraft/server/IChatBaseComponent;)Ljava/lang/String; toJson
	a (Lnet/minecraft/server/IChatBaseComponent;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	b ()Ljava/lang/reflect/Field; lambda$static$1
	b (Ljava/lang/String;)Lnet/minecraft/server/IChatMutableComponent; fromJsonLenient
	b (Lnet/minecraft/server/IChatBaseComponent;)Lcom/google/gson/JsonElement; toJsonTree
	c ()Lcom/google/gson/Gson; lambda$static$0
bau$j net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal
	a turtle
	b speedModifier
	c stuck
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/RegistryID net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap
	a EMPTY_SLOT
	b keys
	c values
	d byId
	e nextId
	f size
	a ()V clear
	a (Ljava/lang/Object;I)V addMapping
	b ()I size
	b (I)Z contains
	b (Ljava/lang/Object;)Z contains
	b (Ljava/lang/Object;I)I indexOf
	c ()I nextId
	c (I)I getValue
	c (Ljava/lang/Object;)I add
	d (I)V grow
	d (Ljava/lang/Object;)I hash
	e (I)I findEmpty
	fromId (I)Ljava/lang/Object; byId
net/minecraft/server/IScoreboardCriteria net/minecraft/world/scores/criteria/ObjectiveCriteria
	PLAYER_KILL_COUNT KILL_COUNT_PLAYERS
	TOTAL_KILL_COUNT KILL_COUNT_ALL
	XP EXPERIENCE
	criteria CRITERIA_BY_NAME
	m TEAM_KILL
	n KILLED_BY_TEAM
	o name
	p readOnly
	q renderType
	a (Ljava/lang/String;)Ljava/util/Optional; byName
	a (Ljava/lang/String;ILnet/minecraft/server/StatisticWrapper;)Ljava/util/Optional; lambda$byName$0
	a (Lnet/minecraft/server/StatisticWrapper;Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; getStat
	e ()Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay; getDefaultRenderType
net/minecraft/server/BehaviorTradeVillager net/minecraft/world/entity/ai/behavior/TradeWithVillager
	b trades
	a (Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/server/Item;)Z lambda$figureOutWhatIAmWillingToTrade$0
	a (Lnet/minecraft/server/EntityVillager;Ljava/util/Set;Lnet/minecraft/server/EntityLiving;)V throwHalfStack
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityVillager;)Ljava/util/Set; figureOutWhatIAmWillingToTrade
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
dlq$a net/minecraft/client/gui/components/LockIconButton$Icon
	a LOCKED
	b LOCKED_HOVER
	c LOCKED_DISABLED
	d UNLOCKED
	e UNLOCKED_HOVER
	f UNLOCKED_DISABLED
	g x
	h y
	i $VALUES
	a ()I getX
	b ()I getY
net/minecraft/server/WorldChunkManagerTheEnd net/minecraft/world/level/biome/TheEndBiomeSource
	e CODEC
	f islandNoise
	g biomes
	h seed
	i end
	j highlands
	k midlands
	l islands
	m barrens
	a ()Lcom/mojang/serialization/Codec; codec
	a (J)Lnet/minecraft/server/WorldChunkManager; withSeed
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/NoiseGenerator3Handler;II)F getHeightValue
	a (Lnet/minecraft/server/WorldChunkManagerTheEnd;)Ljava/lang/Long; lambda$null$1
	b (III)Lnet/minecraft/server/BiomeBase; getNoiseBiome
	b (J)Z stable
	b (Lnet/minecraft/server/WorldChunkManagerTheEnd;)Lnet/minecraft/server/IRegistry; lambda$null$0
net/minecraft/server/WorldGenTreeProvider net/minecraft/world/level/block/grower/AbstractTreeGrower
	a (Ljava/util/Random;Z)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z hasFlowers
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z growTree
net/minecraft/server/BlockEndRod net/minecraft/world/level/block/EndRodBlock
	b Y_AXIS_AABB
	c Z_AXIS_AABB
	d X_AXIS_AABB
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	f (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
net/minecraft/server/PacketLoginOutSuccess net/minecraft/network/protocol/login/ClientboundGameProfilePacket
	a gameProfile
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginOutListener;)V handle
	b ()Lcom/mojang/authlib/GameProfile; getGameProfile
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/ResourceDataJson net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener
	a LOGGER
	b PATH_SUFFIX_LENGTH
	c gson
	d directory
	a (Ljava/lang/String;)Z lambda$prepare$0
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/util/Map; prepare
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
net/minecraft/server/SensorHurtBy net/minecraft/world/entity/ai/sensing/HurtBySensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/EntityLiving;)V lambda$doTick$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
net/minecraft/server/LoginListener net/minecraft/server/network/ServerLoginPacketListenerImpl
	b UNIQUE_THREAD_ID
	c LOGGER
	e nonce
	g state
	h tick
	i gameProfile
	j serverId
	l delayedAcceptPlayer
	loginKey secretKey
	networkManager connection
	random RANDOM
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; createFakeProfile
	a (Lio/netty/channel/ChannelFuture;)V lambda$handleAcceptedLogin$0
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/LoginListener;)Lcom/mojang/authlib/GameProfile; access$000
	a (Lnet/minecraft/server/LoginListener;Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; access$002
	a (Lnet/minecraft/server/LoginListener;Lnet/minecraft/server/LoginListener$EnumProtocolState;)Lnet/minecraft/server/LoginListener$EnumProtocolState; access$402
	a (Lnet/minecraft/server/PacketLoginInCustomPayload;)V handleCustomQueryPacket
	a (Lnet/minecraft/server/PacketLoginInEncryptionBegin;)V handleKey
	a (Lnet/minecraft/server/PacketLoginInStart;)V handleHello
	b (Lnet/minecraft/server/LoginListener;)Lnet/minecraft/server/MinecraftServer; access$100
	c ()V handleAcceptedLogin
	c (Lnet/minecraft/server/LoginListener;)Ljavax/crypto/SecretKey; access$200
	d ()Ljava/lang/String; getUserName
	e ()Lorg/apache/logging/log4j/Logger; access$300
net/minecraft/server/NBTTagType net/minecraft/nbt/TagType
	a ()Ljava/lang/String; getName
	a (I)Lnet/minecraft/server/NBTTagType; createInvalid
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; load
	c ()Z isValue
net/minecraft/server/PacketPlayInResourcePackStatus net/minecraft/network/protocol/game/ServerboundResourcePackPacket
	status action
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/PacketPlayInResourcePackStatus$EnumResourcePackStatus; getAction
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/BlockPropertyBambooSize net/minecraft/world/level/block/state/properties/BambooLeaves
	d name
	e $VALUES
	a ()Ljava/lang/String; getSerializedName
net/minecraft/server/PacketPlayOutWorldBorder net/minecraft/network/protocol/game/ClientboundSetBorderPacket
	a type
	b newAbsoluteMaxSize
	c newCenterX
	d newCenterZ
	e newSize
	f oldSize
	g lerpTime
	h warningTime
	i warningBlocks
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/WorldBorder;)V applyChanges
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
czg$1 net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$1
	a val$constructor
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEntryChildrenAbstract; deserializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryChildrenAbstract;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEntryAbstract; deserializeCustom
czx$b net/minecraft/world/level/storage/loot/functions/CopyNameFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionCopyName; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionCopyName;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/MobSpawnerPatrol net/minecraft/world/level/levelgen/PatrolSpawner
	a nextTick
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;Z)Z spawnPatrolMember
	a (Lnet/minecraft/server/WorldServer;ZZ)I tick
net/minecraft/server/EntityEnderman$PathfinderGoalEndermanPickupBlock net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal
	a ()Z canUse
	e ()V tick
dxc$a net/minecraft/client/particle/BubbleParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/WorldGenDecoratorCarveMaskConfiguration net/minecraft/world/level/levelgen/placement/CarvingMaskDecoratorConfiguration
	a CODEC
	c step
	d probability
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/WorldGenDecoratorCarveMaskConfiguration;)Ljava/lang/Float; lambda$null$1
	b (Lnet/minecraft/server/WorldGenDecoratorCarveMaskConfiguration;)Lnet/minecraft/server/WorldGenStage$Features; lambda$null$0
net/minecraft/server/IBlockDataHolder net/minecraft/world/level/block/state/StateHolder
	STATE_TO_VALUE PROPERTY_ENTRY_TO_STRING_FUNCTION
	b values
	c owner
	d propertiesCodec
	e neighbours
	a (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; findNextInCollection
	a (Ljava/util/Map;)V populateNeighbours
	a (Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/Codec; lambda$codec$1
	a (Lnet/minecraft/server/IBlockDataHolder;)Ljava/lang/Object; lambda$codec$0
	a (Lnet/minecraft/server/IBlockState;)Ljava/lang/Object; cycle
	b (Lnet/minecraft/server/IBlockState;)Z hasProperty
	b (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/util/Map; makeNeighbourValues
	d (Lnet/minecraft/server/IBlockState;)Ljava/util/Optional; getOptionalValue
	get (Lnet/minecraft/server/IBlockState;)Ljava/lang/Comparable; getValue
	getStateMap ()Lcom/google/common/collect/ImmutableMap; getValues
	r ()Ljava/util/Collection; getProperties
	set (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/lang/Object; setValue
net/minecraft/server/IAsyncTaskHandlerReentrant net/minecraft/util/thread/ReentrantBlockableEventLoop
	depth reentrantCount
	au ()Z scheduleExecutables
	c (Ljava/lang/Runnable;)V doRunTask
	isEntered ()Z runningTask
net/minecraft/server/ChunkGenerator net/minecraft/world/level/chunk/ChunkGenerator
	a CODEC
	b biomeSource
	c runtimeBiomeSource
	e strongholdSeed
	f strongholdPositions
	structureSettings settings
	a ()Lcom/mojang/serialization/Codec; codec
	a (II)Lnet/minecraft/server/IBlockAccess; getBaseColumn
	a (J)Lnet/minecraft/server/ChunkGenerator; withSeed
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Z hasStronghold
	a (Lnet/minecraft/server/StructureFeature;Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/DefinedStructureManager;JLnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BiomeBase;)V createStructure
	a (Lnet/minecraft/server/StructureStart;)Ljava/lang/String; lambda$createReferences$2
	addDecorations (Lnet/minecraft/server/RegionLimitedWorldAccess;Lnet/minecraft/server/StructureManager;)V applyBiomeDecoration
	addMobs (Lnet/minecraft/server/RegionLimitedWorldAccess;)V spawnOriginalMobs
	b (IILnet/minecraft/server/HeightMap$Type;)I getFirstFreeHeight
	b (Lnet/minecraft/server/StructureStart;)Ljava/lang/String; lambda$createReferences$1
	buildBase (Lnet/minecraft/server/RegionLimitedWorldAccess;Lnet/minecraft/server/IChunkAccess;)V buildSurfaceAndBedrock
	buildNoise (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/IChunkAccess;)V fillFromNoise
	c (IILnet/minecraft/server/HeightMap$Type;)I getFirstOccupiedHeight
	c (Lnet/minecraft/server/StructureStart;)Ljava/lang/String; lambda$createReferences$0
	doCarving (JLnet/minecraft/server/BiomeManager;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/WorldGenStage$Features;)V applyCarvers
	g ()V generateStrongholds
	getGenerationDepth ()I getGenDepth
	getMobsFor (Lnet/minecraft/server/BiomeBase;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/BlockPosition;)Ljava/util/List; getMobsAt
	getWorldChunkManager ()Lnet/minecraft/server/WorldChunkManager; getBiomeSource
	storeStructures (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/IChunkAccess;)V createReferences
daq$a net/minecraft/world/level/storage/loot/functions/SetNameFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetName; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetName;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/BlockTwistingVines net/minecraft/world/level/block/TwistingVines
	e SHAPE
	a (Ljava/util/Random;)I getBlocksToGrowWhenBonemealed
	d ()Lnet/minecraft/server/Block; getBodyBlock
	h (Lnet/minecraft/server/IBlockData;)Z canGrowInto
arc$a net/minecraft/world/entity/ai/Brain$MemoryValue
	a type
	b value
	a (Larc$a;Lnet/minecraft/server/BehaviorController;)V access$400
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V serialize
	a (Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)V lambda$serialize$1
	a (Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Lnet/minecraft/server/ExpirableMemory;)V lambda$null$0
	a (Lnet/minecraft/server/BehaviorController;)V setMemoryInternal
	a (Lnet/minecraft/server/MemoryModuleType;Ljava/util/Optional;)Larc$a; access$600
	b (Lnet/minecraft/server/MemoryModuleType;Ljava/util/Optional;)Larc$a; createUnchecked
dhm$1 com/mojang/realmsclient/gui/screens/RealmsBackupScreen$1
	a this$0
	a (Ljava/util/List;)V lambda$run$0
net/minecraft/server/ItemArmorColorable net/minecraft/world/item/DyeableArmorItem
dyw$a net/minecraft/client/particle/WakeParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/EntityWitch net/minecraft/world/entity/monster/Witch
	b SPEED_MODIFIER_DRINKING_UUID
	bo SPEED_MODIFIER_DRINKING
	bp DATA_USING_ITEM
	bq usingTime
	br healRaidersGoal
	bs attackPlayersGoal
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	d (Lnet/minecraft/server/DamageSource;F)F getDamageAfterMagicAbsorb
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eL ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	eN ()Z canBeLeader
	i (Lnet/minecraft/server/EntityLiving;)Z lambda$registerGoals$0
	k ()V aiStep
	m ()Z isDrinkingPotion
	o ()V registerGoals
	v (Z)V setUsingItem
dyf$1 net/minecraft/client/particle/ReversePortalParticle$1
net/minecraft/server/ArgumentSerializerLong net/minecraft/commands/synchronization/brigadier/LongArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lcom/mojang/brigadier/arguments/LongArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/LongArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/LongArgumentType; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
net/minecraft/server/ProcessorList net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList
	a list
	a ()Ljava/util/List; list
net/minecraft/server/BlockGrowingAbstract net/minecraft/world/level/block/GrowingPlantBlock
	a growthDirection
	b scheduleFluidTicks
	c shape
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c ()Lnet/minecraft/server/BlockGrowingTop; getHeadBlock
	c (Lnet/minecraft/server/Block;)Z canAttachToBlock
	d ()Lnet/minecraft/server/Block; getBodyBlock
net/minecraft/server/GameTestHarnessTestClassArgument net/minecraft/gametest/framework/TestClassNameArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/GameTestHarnessTestClassArgument; testClassName
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; getTestClassName
net/minecraft/server/PlayerMap net/minecraft/server/level/PlayerMap
	a players
	a (J)Ljava/util/stream/Stream; getPlayers
	a (JJLnet/minecraft/server/EntityPlayer;)V updatePlayer
	a (JLnet/minecraft/server/EntityPlayer;)V removePlayer
	a (JLnet/minecraft/server/EntityPlayer;Z)V addPlayer
	a (Lnet/minecraft/server/EntityPlayer;)V ignorePlayer
	b (Lnet/minecraft/server/EntityPlayer;)V unIgnorePlayer
	c (Lnet/minecraft/server/EntityPlayer;)Z ignoredOrUnknown
	d (Lnet/minecraft/server/EntityPlayer;)Z ignored
arc$b net/minecraft/world/entity/ai/Brain$Provider
	a memoryTypes
	b sensorTypes
	c codec
	a ()Lnet/minecraft/server/BehaviorController; lambda$makeBrain$1
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/server/BehaviorController; makeBrain
	b ()Lcom/mojang/serialization/Codec; lambda$null$0
net/minecraft/server/TrunkPlacerGiant net/minecraft/world/level/levelgen/feature/trunkplacers/GiantTrunkPlacer
	a CODEC
	a ()Lnet/minecraft/server/TrunkPlacers; type
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;ILnet/minecraft/server/BlockPosition;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;Lnet/minecraft/server/BlockPosition;III)V placeLogIfFreeWithOffset
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
dnf$1 net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$1
bic$1 net/minecraft/world/inventory/BeaconMenu$1
	a this$0
	V_ ()I getMaxStackSize
	b (ILnet/minecraft/server/ItemStack;)Z canPlaceItem
net/minecraft/server/DataConverterSchemaV2502 net/minecraft/util/datafix/schemas/V2502
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/ResourceNotFoundException net/minecraft/server/packs/ResourcePackFileNotFoundException
net/minecraft/server/BlockKelp net/minecraft/world/level/block/KelpBlock
	e SHAPE
	a (Ljava/util/Random;)I getBlocksToGrowWhenBonemealed
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	c (Lnet/minecraft/server/Block;)Z canAttachToBlock
	d ()Lnet/minecraft/server/Block; getBodyBlock
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	h (Lnet/minecraft/server/IBlockData;)Z canGrowInto
net/minecraft/server/BlockChain net/minecraft/world/level/block/ChainBlock
	a WATERLOGGED
	b Y_AXIS_AABB
	c Z_AXIS_AABB
	d X_AXIS_AABB
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/DataConverterSchemaV2505 net/minecraft/util/datafix/schemas/V2505
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/DataConverterSchemaV2501 net/minecraft/util/datafix/schemas/V2501
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerFurnace$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerFurnace
net/minecraft/server/EntityRabbit net/minecraft/world/entity/animal/Rabbit
	bo DATA_TYPE_ID
	bp KILLER_BUNNY
	bq jumpTicks
	br jumpDuration
	bs wasOnGround
	bt jumpDelayTicks
	bu moreCarrotTicks
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	N ()V customServerAiStep
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityRabbit;)Z access$000
	a (Lnet/minecraft/server/EntityRabbit;I)I access$402
	a (Lnet/minecraft/server/GeneratorAccess;)I getRandomRabbitType
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	aN ()Z canSpawnSprintParticle
	b (DD)V facePoint
	b (Lnet/minecraft/server/EntityRabbit;)Z access$100
	b (Lnet/minecraft/server/Item;)Z isTemptingItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityRabbit; getBreedOffspring
	c (Lnet/minecraft/server/EntityRabbit;)Lnet/minecraft/server/ControllerJump; access$200
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkRabbitSpawnRules
	ce ()Lnet/minecraft/server/Vec3D; getLeashOffset
	ct ()Lnet/minecraft/server/SoundCategory; getSoundSource
	d (Lnet/minecraft/server/EntityRabbit;)Z access$300
	dI ()F getJumpPower
	dJ ()V jumpFromGround
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()V startJumping
	eL ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eO ()V enableJumpControl
	eU ()V disableJumpControl
	eV ()V setLandingDelay
	eW ()V checkLandingDelay
	eX ()Z wantsMoreFood
	getSoundJump ()Lnet/minecraft/server/SoundEffect; getJumpSound
	i (D)V setSpeedModifier
	k ()V aiStep
	k (Lnet/minecraft/server/ItemStack;)Z isFood
	o ()V registerGoals
	o (Z)V setJumping
	y (F)F getJumpCompletion
net/minecraft/server/PathfinderGoalZombieAttack net/minecraft/world/entity/ai/goal/ZombieAttackGoal
	b zombie
	c raiseArmTicks
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart net/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece
	a previousPiece
	b portalRoomPiece
	c pendingChildren
	ao_ ()Lnet/minecraft/server/BlockPosition; getLocatorPosition
net/minecraft/server/EntityPotion net/minecraft/world/entity/projectile/ThrownPotion
	b WATER_SENSITIVE
	a (Ljava/util/List;Lnet/minecraft/server/Entity;)V applySplash
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V dowseFire
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/PotionRegistry;)V makeAreaOfEffectCloud
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/MovingObjectPositionBlock;)V onHitBlock
	h ()Lnet/minecraft/server/Item; getDefaultItem
	k ()F getGravity
	splash ()V applyWater
net/minecraft/server/ChunkConverterPalette net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix
	a LOGGER
	b VIRTUAL
	c FIX
	d PUMPKIN
	e SNOWY_PODZOL
	f SNOWY_GRASS
	g SNOWY_MYCELIUM
	h UPPER_SUNFLOWER
	i UPPER_LILAC
	j UPPER_TALL_GRASS
	k UPPER_LARGE_FERN
	l UPPER_ROSE_BUSH
	m UPPER_PEONY
	n FLOWER_POT_MAP
	o SKULL_MAP
	p DOOR_MAP
	q NOTE_BLOCK_MAP
	r DYE_COLOR_MAP
	s BED_BLOCK_MAP
	t BANNER_BLOCK_MAP
	u AIR
	a ()Lcom/mojang/serialization/Dynamic; access$000
	a (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; getName
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String; getProperty
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$4
	a (Ljava/util/HashMap;)V lambda$static$6
	a (Ljava/util/Map;ILjava/lang/String;)V addBeds
	a (Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V mapSkull
	a (Ljava/util/Map;Ljava/lang/String;I)V mapDoor
	a (Lnet/minecraft/server/RegistryID;Lcom/mojang/serialization/Dynamic;)I idFor
	a (ZZZZ)I getSideMask
	b ()Ljava/util/BitSet; access$100
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	b (Ljava/util/HashMap;)V lambda$static$5
	b (Ljava/util/Map;ILjava/lang/String;)V addBanners
	c ()Ljava/util/BitSet; access$200
	c (Ljava/util/HashMap;)V lambda$static$3
	d ()Lcom/mojang/serialization/Dynamic; access$400
	d (Ljava/util/HashMap;)V lambda$static$2
	e ()Lcom/mojang/serialization/Dynamic; access$500
	e (Ljava/util/HashMap;)V lambda$static$1
	f ()Lcom/mojang/serialization/Dynamic; access$600
	f (Ljava/util/HashMap;)V lambda$static$0
	g ()Ljava/util/Map; access$700
	h ()Ljava/util/Map; access$800
	i ()Ljava/util/Map; access$900
	j ()Lcom/mojang/serialization/Dynamic; access$1000
	k ()Ljava/util/Map; access$1100
	l ()Ljava/util/Map; access$1200
	m ()Ljava/util/Map; access$1300
	n ()Lcom/mojang/serialization/Dynamic; access$1400
	o ()Lcom/mojang/serialization/Dynamic; access$1500
	p ()Lcom/mojang/serialization/Dynamic; access$1600
	q ()Lcom/mojang/serialization/Dynamic; access$1700
	r ()Lcom/mojang/serialization/Dynamic; access$1800
	s ()Lcom/mojang/serialization/Dynamic; access$1900
	t ()Lorg/apache/logging/log4j/Logger; access$2100
net/minecraft/server/RecipeBookType net/minecraft/world/inventory/RecipeBookType
	e $VALUES
net/minecraft/server/LootItemConditionAlternative net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition
	a terms
	b composedPredicate
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/LootItemConditionAlternative;)[Lnet/minecraft/server/LootItemCondition; access$100
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	a ([Ldbl$a;)Ldbb$a; alternative
	b ()Lnet/minecraft/server/LootItemConditionType; getType
dyw$1 net/minecraft/client/particle/WakeParticle$1
net/minecraft/server/DefinedStructurePiece net/minecraft/world/level/levelgen/structure/TemplateStructurePiece
	a template
	b placeSettings
	c templatePosition
	d LOGGER
	a (III)V move
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/DefinedStructure;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;)V setup
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	ap_ ()Lnet/minecraft/server/EnumBlockRotation; getRotation
net/minecraft/server/DataConverterPOI net/minecraft/util/datafix/fixes/ReorganizePoi
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; cap
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
dcw$a net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer
net/minecraft/server/EnumDifficulty net/minecraft/world/Difficulty
	e BY_ID
	f id
	g key
	h $VALUES
	a ()I getId
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumDifficulty; byName
	b ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	b (I)[Lnet/minecraft/server/EnumDifficulty; lambda$static$0
	c ()Ljava/lang/String; getKey
	d ()Lnet/minecraft/server/EnumDifficulty; nextById
	getById (I)Lnet/minecraft/server/EnumDifficulty; byId
net/minecraft/server/BlockWitherSkull net/minecraft/world/level/block/WitherSkullBlock
	c witherPatternFull
	d witherPatternBase
	a (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$getOrCreateWitherBase$1
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntitySkull;)V checkSpawn
	b (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$getOrCreateWitherFull$0
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)Z canSpawnMob
	c ()Lnet/minecraft/server/ShapeDetector; getOrCreateWitherFull
	d ()Lnet/minecraft/server/ShapeDetector; getOrCreateWitherBase
net/minecraft/server/EntityCod net/minecraft/world/entity/animal/Cod
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/ItemStack; getBucketItemStack
	eM ()Lnet/minecraft/server/SoundEffect; getFlopSound
net/minecraft/server/IMinecraftServer net/minecraft/server/ServerInterface
	executeRemoteCommand (Ljava/lang/String;)Ljava/lang/String; runCommand
	getDedicatedServerProperties ()Lnet/minecraft/server/DedicatedServerProperties; getProperties
	getPlayers ()[Ljava/lang/String; getPlayerNames
	getPlugins ()Ljava/lang/String; getPluginNames
	getVersion ()Ljava/lang/String; getServerVersion
	getWorld ()Ljava/lang/String; getLevelIdName
	h_ ()Ljava/lang/String; getServerIp
	i_ ()Ljava/lang/String; getServerName
	p ()I getServerPort
net/minecraft/server/VoxelShapeMergerIdentical net/minecraft/world/phys/shapes/IdenticalMerger
	a coords
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Ldcw$a;)Z forMergedIndexes
dhm$a com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionList
	a this$0
	a (DDI)Z mouseClicked
	a (I)V selectItem
	a (IIDDI)V itemClicked
	a (Ldfj;)V renderBackground
	a (Ldgd;)V addEntry
	a (Ldhm$b;)V setSelected
	a (Ldlc$a;)V setSelected
	b ()Z isFocused
	b (I)V selectInviteListItem
	c ()I getMaxPosition
	d ()I getRowWidth
	e ()I getScrollbarPosition
dhm$b com/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry
	a this$0
	b backup
	a (Ldfj;IIII)V drawRestore
	a (Ldfj;IIIIIIIZF)V render
	a (Ldfj;Ldgd;IIII)V renderBackupItem
	a (Ljava/util/Date;)Ljava/lang/String; getMediumDatePresentation
	b (Ldfj;IIII)V drawInfo
dyf$a net/minecraft/client/particle/ReversePortalParticle$ReversePortalProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/PacketPlayOutEntityEquipment net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket
	a entity
	b slots
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getEntity
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/List; getSlots
mh$1 net/minecraft/nbt/IntArrayTag$1
	a ()Ljava/lang/String; getName
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagIntArray; load
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; load
dbt$b net/minecraft/world/level/storage/loot/predicates/TimeCheck$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionTimeCheck;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionTimeCheck; deserialize
dbt$a net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder
	a period
	b value
	a (J)Ldbt$a; setPeriod
	b ()Lnet/minecraft/server/LootItemConditionTimeCheck; build
dbc$1 net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$1
net/minecraft/server/DataConverterLang net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
net/minecraft/server/TagsItem net/minecraft/tags/ItemTags
	a HELPER
	a ()Lnet/minecraft/server/Tags; getAllTags
	a (Ljava/lang/String;)Laej$e; bind
	b ()Ljava/util/List; getWrappers
net/minecraft/server/ChestLock net/minecraft/world/LockCode
	a NO_LOCK
	a (Lnet/minecraft/server/ItemStack;)Z unlocksWith
	a (Lnet/minecraft/server/NBTTagCompound;)V addToTag
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/ChestLock; fromTag
dbt$1 net/minecraft/world/level/storage/loot/predicates/TimeCheck$1
net/minecraft/server/WorldGenFeatureOceanRuinPieces net/minecraft/world/level/levelgen/structure/OceanRuinPieces
	a WARM_RUINS
	b RUINS_BRICK
	c RUINS_CRACKED
	d RUINS_MOSSY
	e BIG_RUINS_BRICK
	f BIG_RUINS_MOSSY
	g BIG_RUINS_CRACKED
	h BIG_WARM_RUINS
	a (Ljava/util/Random;)Lnet/minecraft/server/MinecraftKey; getSmallWarmRuin
	a (Ljava/util/Random;II)Ljava/util/List; allPositions
	a (Lnet/minecraft/server/DefinedStructureManager;Ljava/util/Random;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureOceanRuinConfiguration;Ljava/util/List;)V addClusterRuins
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureOceanRuinConfiguration;)V addPieces
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureOceanRuinConfiguration;ZF)V addPiece
	b (Ljava/util/Random;)Lnet/minecraft/server/MinecraftKey; getBigWarmRuin
dnf$a net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Builder
	a metadata
	b texturePattern
	a (Lcom/google/gson/JsonObject;)Ldnd; fromJson
	a (Lnet/minecraft/server/IResourceManager;)Lddy; create
dnf$b net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Glyph
	a width
	b height
	c sourceX
	d sourceY
	e source
	a (II)V upload
	b ()F getBoldOffset
	c ()F getShadowOffset
	d ()I getPixelWidth
	e ()I getPixelHeight
	f ()Z isColored
	g ()F getOversample
net/minecraft/server/PotionRegistry net/minecraft/world/item/alchemy/Potion
	a name
	b effects
	a ()Ljava/util/List; getEffects
	a (Ljava/lang/String;)Lnet/minecraft/server/PotionRegistry; byName
	b ()Z hasInstantEffects
	b (Ljava/lang/String;)Ljava/lang/String; getName
net/minecraft/server/NBTCompressedStreamTools net/minecraft/nbt/NbtIo
	a (Ljava/io/DataInput;)Lnet/minecraft/server/NBTTagCompound; read
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; readUnnamedTag
	a (Ljava/io/DataInput;Lnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagCompound; read
	a (Ljava/io/File;)Lnet/minecraft/server/NBTTagCompound; readCompressed
	a (Ljava/io/InputStream;)Lnet/minecraft/server/NBTTagCompound; readCompressed
	a (Lnet/minecraft/server/NBTBase;Ljava/io/DataOutput;)V writeUnnamedTag
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/io/File;)V writeCompressed
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/io/OutputStream;)V writeCompressed
	b (Ljava/io/File;)Lnet/minecraft/server/NBTTagCompound; read
	b (Lnet/minecraft/server/NBTTagCompound;Ljava/io/File;)V write
net/minecraft/server/DataConverterEntity net/minecraft/util/datafix/fixes/EntityIdFix
	a ID_MAP
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$2
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$3
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$1
	a (Ljava/util/HashMap;)V lambda$static$0
net/minecraft/server/BiomeParticles net/minecraft/world/level/biome/AmbientParticleSettings
	a CODEC
	b options
	c probability
	a ()Lnet/minecraft/server/ParticleParam; getOptions
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ljava/util/Random;)Z canSpawn
	a (Lnet/minecraft/server/BiomeParticles;)Ljava/lang/Float; lambda$null$1
	b (Lnet/minecraft/server/BiomeParticles;)Lnet/minecraft/server/ParticleParam; lambda$null$0
net/minecraft/server/PathEntity net/minecraft/world/level/pathfinder/Path
	a nodes
	b openSet
	c closedSet
	d targetNodes
	e nextNodeIndex
	f target
	g distToTarget
	h reached
	a ()V advance
	a (I)Lnet/minecraft/server/PathPoint; getNode
	a (ILnet/minecraft/server/PathPoint;)V replaceNode
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Vec3D; getNextEntityPos
	a (Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/Vec3D; getEntityPosAtNode
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToStream
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/PathDestination;)V lambda$writeToStream$0
	a (Lnet/minecraft/server/PathEntity;)Z sameAs
	a ([Lnet/minecraft/server/PathPoint;[Lnet/minecraft/server/PathPoint;Ljava/util/Set;)V setDebug
	b ()Z notStarted
	b (I)V truncateNodes
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/PathEntity; createFromStream
	c ()Z isDone
	c (I)V setNextNodeIndex
	d ()Lnet/minecraft/server/PathPoint; getEndNode
	d (I)Lnet/minecraft/server/BlockPosition; getNodePos
	e ()I getNodeCount
	f ()I getNextNodeIndex
	g ()Lnet/minecraft/server/BlockPosition; getNextNodePos
	h ()Lnet/minecraft/server/PathPoint; getNextNode
	i ()Lnet/minecraft/server/PathPoint; getPreviousNode
	j ()Z canReach
	k ()[Lnet/minecraft/server/PathPoint; getOpenSet
	l ()[Lnet/minecraft/server/PathPoint; getClosedSet
	m ()Lnet/minecraft/server/BlockPosition; getTarget
	n ()F getDistToTarget
bxx$1 net/minecraft/world/level/block/LeverBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	b $SwitchMap$net$minecraft$core$Direction
	c $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
net/minecraft/server/WorldGenFeatureBastionExtra net/minecraft/data/worldgen/BastionSharedPools
	a ()V bootstrap
net/minecraft/server/BlockTileEntity net/minecraft/world/level/block/BaseEntityBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
net/minecraft/server/GenLayer net/minecraft/world/level/newbiome/layer/Layer
	a LOGGER
	b area
	a (Lnet/minecraft/server/IRegistry;II)Lnet/minecraft/server/BiomeBase; get
by$a net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance
	a lootTable
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/MinecraftKey;)Lby$a; lootTableUsed
	b (Lnet/minecraft/server/MinecraftKey;)Z matches
bh$1 net/minecraft/advancements/critereon/EntityTypePredicate$1
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lnet/minecraft/server/EntityTypes;)Z matches
net/minecraft/server/CommandAdvancement$Action net/minecraft/server/commands/AdvancementCommands$Action
	c key
	d $VALUES
	a ()Ljava/lang/String; getKey
	a (Lnet/minecraft/server/EntityPlayer;Ljava/lang/Iterable;)I perform
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Advancement;)Z perform
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Advancement;Ljava/lang/String;)Z performCriterion
crp$1 net/minecraft/world/level/levelgen/structure/StrongholdPieces$1
	a (I)Z doPlace
crp$2 net/minecraft/world/level/levelgen/structure/StrongholdPieces$2
	a (I)Z doPlace
net/minecraft/server/OpListEntry net/minecraft/server/players/ServerOpListEntry
	a level
	b bypassesPlayerLimit
	a ()I getLevel
	a (Lcom/google/gson/JsonObject;)V serialize
	b ()Z getBypassesPlayerLimit
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
dzz$1 net/minecraft/client/renderer/OutlineBufferSource$1
net/minecraft/server/MobSpawnerAbstract net/minecraft/world/level/BaseSpawner
	a LOGGER
	e spin
	f oSpin
	j displayEntity
	mobs spawnPotentials
	spawnData nextSpawnData
	a ()Lnet/minecraft/server/World; getLevel
	a (DDDLnet/minecraft/server/Entity;)Lnet/minecraft/server/Entity; lambda$tick$0
	a (I)V broadcastEvent
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (I)Z onEventTriggered
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c ()V tick
	d ()Lnet/minecraft/server/Entity; getOrCreateDisplayEntity
	e ()D getSpin
	f ()D getoSpin
	getMobName ()Lnet/minecraft/server/MinecraftKey; getEntityId
	h ()Z isNearPlayer
	i ()V delay
	setMobName (Lnet/minecraft/server/EntityTypes;)V setEntityId
	setSpawnData (Lnet/minecraft/server/MobSpawnerData;)V setNextSpawnData
net/minecraft/server/VillagerTrades$IMerchantRecipeOption net/minecraft/world/entity/npc/VillagerTrades$ItemListing
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
net/minecraft/server/EntityPufferFish net/minecraft/world/entity/animal/Pufferfish
	b PUFF_STATE
	bo NO_SPECTATORS_AND_NO_WATER_MOB
	c inflateCounter
	d deflateTimer
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityInsentient;)V touch
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EntityPufferFish;I)I access$102
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a_ (Lnet/minecraft/server/EntityHuman;)V playerTouch
	b (Lnet/minecraft/server/EntityPufferFish;I)I access$202
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/ItemStack; getBucketItemStack
	eM ()Lnet/minecraft/server/SoundEffect; getFlopSound
	eO ()Ljava/util/function/Predicate; access$000
	i (Lnet/minecraft/server/EntityLiving;)Z lambda$static$0
	j ()V tick
	k ()V aiStep
	o ()V registerGoals
	s (I)F getScale
net/minecraft/server/BehaviorWalkAway net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom
	b walkAwayFromMemory
	c speedModifier
	d desiredDistance
	e toPosition
	a (Lnet/minecraft/server/EntityCreature;)Lnet/minecraft/server/Vec3D; getPosToAvoid
	a (Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/Vec3D;F)V moveAwayFrom
	a (Lnet/minecraft/server/MemoryModuleType;FIZ)Lnet/minecraft/server/BehaviorWalkAway; pos
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityCreature;)Z alreadyWalkingAwayFromPosWithSameSpeed
	b (Lnet/minecraft/server/MemoryModuleType;FIZ)Lnet/minecraft/server/BehaviorWalkAway; entity
ebe$a net/minecraft/client/renderer/block/model/ItemTransforms$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;Ljava/lang/String;)Lebd; getTransform
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lebe; deserialize
crp$3 net/minecraft/world/level/levelgen/structure/StrongholdPieces$3
	a $SwitchMap$net$minecraft$world$level$levelgen$structure$StrongholdPieces$StrongholdPiece$SmallDoorType
	b $SwitchMap$net$minecraft$core$Direction
ebe$b net/minecraft/client/renderer/block/model/ItemTransforms$TransformType
	a NONE
	b THIRD_PERSON_LEFT_HAND
	c THIRD_PERSON_RIGHT_HAND
	d FIRST_PERSON_LEFT_HAND
	e FIRST_PERSON_RIGHT_HAND
	f HEAD
	g GUI
	h GROUND
	i FIXED
	j $VALUES
	a ()Z firstPerson
net/minecraft/server/PacketPlayOutMap net/minecraft/network/protocol/game/ClientboundMapItemDataPacket
	a mapId
	b scale
	c trackingPosition
	d locked
	e decorations
	f startX
	g startY
	h width
	i height
	j mapColors
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/WorldMap;)V applyToMap
	b ()I getMapId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()B getScale
net/minecraft/server/PacketPlayInVehicleMove net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket
	a x
	b y
	c z
	d yRot
	e xRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	getPitch ()F getXRot
	getYaw ()F getYRot
av$a net/minecraft/advancements/critereon/DamagePredicate$Builder
	a dealtDamage
	b takenDamage
	c sourceEntity
	d blocked
	e type
	a ()Lav$a; damageInstance
	a (Law$a;)Lav$a; type
	a (Ljava/lang/Boolean;)Lav$a; blocked
	a (Lnet/minecraft/server/CriterionConditionDamageSource;)Lav$a; type
	a (Lnet/minecraft/server/CriterionConditionEntity;)Lav$a; sourceEntity
	a (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lav$a; dealtDamage
	b ()Lnet/minecraft/server/CriterionConditionDamage; build
	b (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lav$a; takenDamage
net/minecraft/server/EntityCow net/minecraft/world/entity/animal/Cow
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityCow; getBreedOffspring
	dF ()F getSoundVolume
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	o ()V registerGoals
net/minecraft/server/ItemRecord net/minecraft/world/item/RecordItem
	a BY_NAME
	b analogOutput
	c sound
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbni;)V appendHoverText
	a (Lnet/minecraft/server/SoundEffect;)Lnet/minecraft/server/ItemRecord; getBySound
	f ()I getAnalogOutput
	g ()Lnet/minecraft/server/IChatMutableComponent; getDisplayName
	v ()Lnet/minecraft/server/SoundEffect; getSound
bh$b net/minecraft/advancements/critereon/EntityTypePredicate$TypePredicate
	b type
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lnet/minecraft/server/EntityTypes;)Z matches
net/minecraft/server/Recipes net/minecraft/world/item/crafting/RecipeType
	a (Ljava/lang/String;)Lnet/minecraft/server/Recipes; register
	a (Lnet/minecraft/server/IRecipe;Lnet/minecraft/server/World;Lnet/minecraft/server/IInventory;)Ljava/util/Optional; tryMatch
bh$a net/minecraft/advancements/critereon/EntityTypePredicate$TagPredicate
	b tag
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lnet/minecraft/server/EntityTypes;)Z matches
net/minecraft/server/TileEntityLootable net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity
	Y_ ()V clearContent
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IBlockAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/MinecraftKey;)V setLootTable
	a (Lnet/minecraft/server/NonNullList;)V setItems
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/server/NBTTagCompound;)Z tryLoadLootTable
	c ()Z isEmpty
	c (Lnet/minecraft/server/NBTTagCompound;)Z trySaveLootTable
	d (Lnet/minecraft/server/EntityHuman;)V unpackLootTable
	e (Lnet/minecraft/server/EntityHuman;)Z canOpen
	f ()Lnet/minecraft/server/NonNullList; getItems
net/minecraft/server/BlockFungi net/minecraft/world/level/block/FungusBlock
	a SHAPE
	b feature
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
net/minecraft/server/WorldGenMinable net/minecraft/world/level/levelgen/feature/OreFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureOreConfiguration;DDDDDDIIIII)Z doPlace
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureOreConfiguration;)Z place
net/minecraft/server/ChatModifier$ChatModifierSerializer net/minecraft/network/chat/Style$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/ChatModifier; deserialize
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/MinecraftKey; getFont
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; getOptionalFlag
	a (Lnet/minecraft/server/ChatModifier;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	b (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ChatHoverable; getHoverEvent
	c (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ChatClickable; getClickEvent
	d (Lcom/google/gson/JsonObject;)Ljava/lang/String; getInsertion
	e (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ChatHexColor; getTextColor
net/minecraft/server/CriterionTriggerTick net/minecraft/advancements/critereon/TickTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lcq$a; createInstance
	a (Lcq$a;)Z lambda$trigger$0
	a (Lnet/minecraft/server/EntityPlayer;)V trigger
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
del$a com/mojang/blaze3d/platform/InputConstants$Key
	a name
	b type
	c value
	d displayName
	e NAME_MAP
	a ()Ldel$b; getType
	a (Ldel$b;ILjava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; lambda$new$0
	b ()I getValue
	c ()Ljava/lang/String; getName
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	e ()Ljava/util/OptionalInt; getNumericKeyValue
	f ()Ljava/util/Map; access$200
del$b com/mojang/blaze3d/platform/InputConstants$Type
	a KEYSYM
	b SCANCODE
	c MOUSE
	d map
	e defaultPrefix
	f displayTextSupplier
	g $VALUES
	a (I)Ldel$a; getOrCreate
	a (Ldel$b;)Ljava/util/function/BiFunction; access$100
	a (Ldel$b;Ljava/lang/String;I)V addKey
	a (Ljava/lang/Integer;Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$2
	b (I)Ldel$a; lambda$getOrCreate$3
	b (Ldel$b;)Ljava/lang/String; access$300
	b (Ljava/lang/Integer;Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$1
	c (Ljava/lang/Integer;Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; lambda$static$0
zr$a$1 net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure$1
crp$q net/minecraft/world/level/levelgen/structure/StrongholdPieces$Turn
bit$3 net/minecraft/world/inventory/GrindstoneMenu$3
	a this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
net/minecraft/server/BlockTripwireHook net/minecraft/world/level/block/TripWireHookBlock
	d NORTH_AABB
	e SOUTH_AABB
	f WEST_AABB
	g EAST_AABB
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V notifyNeighbors
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;ZZILnet/minecraft/server/IBlockData;)V calculateState
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ZZZZ)V playSound
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b_ (Lnet/minecraft/server/IBlockData;)Z isSignalSource
bit$4 net/minecraft/world/inventory/GrindstoneMenu$4
	a val$access
	b this$0
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/World;)I getExperienceAmount
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$onTake$0
	e (Lnet/minecraft/server/ItemStack;)I getExperienceFromItem
net/minecraft/server/ChunkGeneratorAbstract net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator
	d CODEC
	e random
	f defaultBlock
	g defaultFluid
	h settings
	i BEARD_KERNEL
	j BIOME_WEIGHTS
	k AIR
	l chunkHeight
	m chunkWidth
	n chunkCountX
	o chunkCountY
	p chunkCountZ
	q minLimitPerlinNoise
	r maxLimitPerlinNoise
	s mainPerlinNoise
	t surfaceNoise
	u depthNoise
	v islandNoise
	w seed
	x height
	a ()Lcom/mojang/serialization/Codec; codec
	a (DI)Lnet/minecraft/server/IBlockData; generateBaseState
	a (II)Lnet/minecraft/server/IBlockAccess; getBaseColumn
	a (III)D getContribution
	a (IIIDDDD)D sampleAndClampNoise
	a (IILnet/minecraft/server/HeightMap$Type;)I getBaseHeight
	a (II[Lnet/minecraft/server/IBlockData;Ljava/util/function/Predicate;)I iterateNoiseColumn
	a (J)Lnet/minecraft/server/ChunkGenerator; withSeed
	a (JLnet/minecraft/server/ResourceKey;)Z stable
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lnet/minecraft/server/BiomeBase;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/BlockPosition;)Ljava/util/List; getMobsAt
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lit/unimi/dsi/fastutil/objects/ObjectList;IILit/unimi/dsi/fastutil/objects/ObjectList;Lnet/minecraft/server/StructureStart;)V lambda$fillFromNoise$6
	a (Lnet/minecraft/server/ChunkGeneratorAbstract;)Ljava/util/function/Supplier; lambda$null$2
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/IChunkAccess;)V fillFromNoise
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/Random;)V setBedrock
	a (Lnet/minecraft/server/RegionLimitedWorldAccess;)V spawnOriginalMobs
	a (Lnet/minecraft/server/RegionLimitedWorldAccess;Lnet/minecraft/server/IChunkAccess;)V buildSurfaceAndBedrock
	a ([DII)V fillNoiseColumn
	a ([F)V lambda$static$5
	b (II)[D makeAndFillNoiseColumn
	b (III)D computeContribution
	b (Lnet/minecraft/server/ChunkGeneratorAbstract;)Ljava/lang/Long; lambda$null$1
	b ([F)V lambda$static$4
	c (II)D getRandomDensity
	c (Lnet/minecraft/server/ChunkGeneratorAbstract;)Lnet/minecraft/server/WorldChunkManager; lambda$null$0
	e ()I getGenDepth
	f ()I getSeaLevel
bit$1 net/minecraft/world/inventory/GrindstoneMenu$1
	a this$0
	X_ ()V setChanged
bit$2 net/minecraft/world/inventory/GrindstoneMenu$2
	a this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
net/minecraft/server/TileEntityBanner net/minecraft/world/level/block/entity/BannerBlockEntity
	a name
	color baseColor
	g receivedData
	h patterns
	patterns itemPatterns
	Q ()Lnet/minecraft/server/IChatBaseComponent; getName
	S ()Lnet/minecraft/server/IChatBaseComponent; getCustomName
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Ljava/util/function/Supplier;)Lnet/minecraft/server/EnumColor; getBaseColor
	a (Lnet/minecraft/server/EnumColor;Lnet/minecraft/server/NBTTagList;)Ljava/util/List; createPatterns
	a (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getItem
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/IChatBaseComponent;)V setCustomName
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/NBTTagList; getItemPatterns
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumColor;)V fromItem
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; lambda$getItem$0
	b (Lnet/minecraft/server/ItemStack;)I getPatternCount
	c ()Ljava/util/List; getPatterns
	c (Lnet/minecraft/server/ItemStack;)V removeLastPattern
net/minecraft/server/MobEffectHealthBoost net/minecraft/world/effect/HealthBoostMobEffect
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AttributeMapBase;I)V removeAttributeModifiers
arc$1 net/minecraft/world/entity/ai/Brain$1
	a val$memoryTypes
	b val$sensorTypes
	c val$codecReference
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;Lnet/minecraft/server/MemoryModuleType;)Lcom/mojang/serialization/DataResult; lambda$null$3
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;Larc$a;)V lambda$encode$8
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult; lambda$captureRead$6
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/MinecraftKey;)Ljava/lang/Object; lambda$keys$2
	a (Lcom/mojang/serialization/DynamicOps;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/datafixers/util/Pair;)V lambda$decode$4
	a (Lnet/minecraft/server/BehaviorController;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder; encode
	a (Lnet/minecraft/server/MemoryModuleType;)Lcom/mojang/serialization/DataResult; lambda$captureRead$5
	a (Lnet/minecraft/server/MemoryModuleType;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/MinecraftKey; lambda$null$0
	a (Lnet/minecraft/server/MemoryModuleType;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; captureRead
	a (Lnet/minecraft/server/MemoryModuleType;Lnet/minecraft/server/ExpirableMemory;)Larc$a; lambda$captureRead$7
	b (Lnet/minecraft/server/MemoryModuleType;)Ljava/util/stream/Stream; lambda$keys$1
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece14 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StairsRoom
	a (Ljava/util/List;IIIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece14; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/BlockDaylightDetector net/minecraft/world/level/block/DaylightDetectorBlock
	b INVERTED
	c SHAPE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b_ (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	c_ (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V updateSignalStrength
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece
	a previousPiece
	b availableBridgePieces
	c availableCastlePieces
	d pendingChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece12 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$MonsterThrone
	a hasPlacedSpawner
	a (Ljava/util/List;IIIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece12; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece13 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$RoomCrossing
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece13; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/PathfinderGoalBowShoot net/minecraft/world/entity/ai/goal/RangedBowAttackGoal
	a mob
	b speedModifier
	c attackIntervalMin
	d attackRadiusSqr
	e attackTime
	f seeTime
	g strafingClockwise
	h strafingBackwards
	i strafingTime
	a ()Z canUse
	a (I)V setMinAttackInterval
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z isHoldingBow
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece10 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorRightTurnPiece
	a isNeedingChest
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece10; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece11 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleStalkRoom
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece11; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/BehaviorGate$Execution net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy
	c $VALUES
	a (Lnet/minecraft/server/WeightedList;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V apply
dzz$a net/minecraft/client/renderer/OutlineBufferSource$EntityOutlineGenerator
	g delegate
	h x
	i y
	j z
	k u
	l v
	a (DDD)Ldfn; vertex
	a (FF)Ldfn; uv
	a (FFFFFFFFFIIFFF)V vertex
	a (II)Ldfn; overlayCoords
	a (IIII)Ldfn; color
	b (FFF)Ldfn; normal
	b (II)Ldfn; uv2
	b (IIII)V defaultColor
	d ()V endVertex
	k ()V unsetDefaultColor
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece8 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorLeftTurnPiece
	a isNeedingChest
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece8; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/BehaviorCelebrateLocation net/minecraft/world/entity/ai/behavior/GoToCelebrateLocation
	b closeEnoughDist
	c speedModifier
	a (Ljava/util/Random;)I getRandomOffset
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/BlockPosition; getCelebrateLocation
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; getNearbyPos
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece7 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorCrossingPiece
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece7; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/ChunkProviderServer net/minecraft/server/level/ServerChunkCache
	allowAnimals spawnFriendlies
	allowMonsters spawnEnemies
	b CHUNK_STATUSES
	cacheChunk lastChunk
	cachePos lastChunkPos
	cacheStatus lastChunkStatus
	chunkGenerator generator
	chunkMapDistance distanceManager
	lastTickTime lastInhabitedUpdate
	p lastSpawnState
	playerChunkMap chunkMap
	serverThread mainThread
	serverThreadQueue mainThreadProcessor
	world level
	worldPersistentData dataStorage
	a ()Lnet/minecraft/server/LightEngineThreaded; getLightEngine
	a (II)Lnet/minecraft/server/Chunk; getChunkNow
	a (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	a (JLjava/util/function/Consumer;)V getFullChunk
	a (JLjava/util/function/Function;)Z checkChunkFuture
	a (JLnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/ChunkStatus;)V storeInCache
	a (JZLbsd$d;ZILnet/minecraft/server/PlayerChunk;)V lambda$tickChunks$5
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage; lambda$getChunkFuture$4
	a (Lnet/minecraft/server/BlockPosition;)Z isTickingChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Z isEntityTickingChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V updateChunkForced
	a (Lnet/minecraft/server/ChunkProviderServer;)Ljava/lang/Thread; access$100
	a (Lnet/minecraft/server/Entity;)Z isEntityTickingChunk
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;)V onLightUpdate
	a (Lnet/minecraft/server/IChunkAccess;)Lnet/minecraft/server/IChunkAccess; lambda$getChunk$1
	a (Lnet/minecraft/server/PlayerChunk;I)Z chunkAbsent
	a (Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/EnumSkyBlock;)V lambda$onLightUpdate$6
	a (ZLnet/minecraft/server/PlayerChunk$Failure;)Lnet/minecraft/server/IChunkAccess; lambda$getChunk$2
	a (ZZ)V setSpawnSettings
	addTicket (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V addRegionTicket
	b ()I getTickingGenerated
	b (IILnet/minecraft/server/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; getChunkFuture
	b (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/lang/String; getChunkDebugData
	b (Lnet/minecraft/server/ChunkProviderServer;)Lnet/minecraft/server/WorldServer; access$200
	broadcastIncludingSelf (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Packet;)V broadcastAndSend
	c ()Lnet/minecraft/server/World; getLevel
	c (II)Lnet/minecraft/server/IBlockAccess; getChunkForLighting
	c (Lnet/minecraft/server/ChunkProviderServer;)Z access$300
	d (IILnet/minecraft/server/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; lambda$getChunkFuture$3
	d (Lnet/minecraft/server/ChunkProviderServer;)Lnet/minecraft/server/LightEngineThreaded; access$400
	e ()Ljava/lang/String; gatherStats
	e (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; lambda$getChunk$0
	f ()I getPendingTasksCount
	flagDirty (Lnet/minecraft/server/BlockPosition;)V blockChanged
	getChunk (J)Lnet/minecraft/server/PlayerChunk; getVisibleChunkIfPresent
	getChunkGenerator ()Lnet/minecraft/server/ChunkGenerator; getGenerator
	getWorldPersistentData ()Lnet/minecraft/server/WorldPersistentData; getDataStorage
	h ()I getLoadedChunksCount
	isLoaded (II)Z hasChunk
	j ()Lnet/minecraft/server/VillagePlace; getPoiManager
	k ()Lbsd$d; getLastSpawnState
	l ()Lnet/minecraft/server/LightEngine; getLightEngine
	m ()Lnet/minecraft/server/IBlockAccess; getLevel
	movePlayer (Lnet/minecraft/server/EntityPlayer;)V move
	removeTicket (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V removeRegionTicket
	runTasks ()Z pollTask
	tickDistanceManager ()Z runDistanceManagerUpdates
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece9 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorPiece
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece9; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenFeatureRandomPatchConfiguration net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration
	a CODEC
	b stateProvider
	c blockPlacer
	d whitelist
	e blacklist
	f tries
	g xspread
	h yspread
	i zspread
	j canReplace
	l project
	m needWater
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$11
	a (Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Ljava/lang/Boolean; lambda$null$10
	b (Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Ljava/lang/Boolean; lambda$null$9
	c (Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Ljava/lang/Boolean; lambda$null$8
	d (Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Ljava/lang/Integer; lambda$null$7
	e (Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Ljava/lang/Integer; lambda$null$6
	f (Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Ljava/lang/Integer; lambda$null$5
	g (Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Ljava/lang/Integer; lambda$null$4
	h (Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Ljava/util/List; lambda$null$3
	i (Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Ljava/util/List; lambda$null$2
	j (Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Lnet/minecraft/server/WorldGenBlockPlacer; lambda$null$1
	k (Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Lnet/minecraft/server/WorldGenFeatureStateProvider; lambda$null$0
net/minecraft/server/StructurePiece net/minecraft/world/level/levelgen/structure/StructurePiece
	a orientation
	b mirror
	c rotation
	d type
	e SHAPE_CHECK_BLOCKS
	m CAVE_AIR
	n boundingBox
	o genDepth
	a (II)I getWorldX
	a (III)V move
	a (Ljava/util/List;Lnet/minecraft/server/StructureBoundingBox;)Lnet/minecraft/server/StructurePiece; findCollisionPiece
	a (Lnet/minecraft/server/ChunkCoordIntPair;I)Z isCloseToChunk
	a (Lnet/minecraft/server/EnumDirection;)V setOrientation
	a (Lnet/minecraft/server/GeneratorAccessSeed;IIILnet/minecraft/server/StructureBoundingBox;)V generateAirColumnUp
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/IBlockData;IIILnet/minecraft/server/StructureBoundingBox;)V placeBlock
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;IIIIIILnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Z)V generateBox
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;IIIIIILnet/minecraft/server/IBlockData;Z)V generateUpperHalfSphere
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;IIIIIIZLjava/util/Random;Lnet/minecraft/server/StructurePiece$StructurePieceBlockSelector;)V generateBox
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;FIIIIIILnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;ZZ)V generateMaybeBox
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;FIIILnet/minecraft/server/IBlockData;)V maybeGenerateBlock
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockDoor;)V createDoor
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;Lnet/minecraft/server/MinecraftKey;)Z createDispenser
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;IIILnet/minecraft/server/MinecraftKey;)Z createChest
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Z)V generateBox
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/StructureBoundingBox;ZLjava/util/Random;Lnet/minecraft/server/StructurePiece$StructurePieceBlockSelector;)V generateBox
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/IBlockAccess;IIILnet/minecraft/server/StructureBoundingBox;)Lnet/minecraft/server/IBlockData; getBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; reorient
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/StructureBoundingBox;)Z edgesLiquid
	a (Lnet/minecraft/server/IWorldReader;IIILnet/minecraft/server/StructureBoundingBox;)Z isInterior
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IBlockData;)Z createChest
	ao_ ()Lnet/minecraft/server/BlockPosition; getLocatorPosition
	ap_ ()Lnet/minecraft/server/EnumBlockRotation; getRotation
	b (II)I getWorldZ
	b (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/IBlockData;IIILnet/minecraft/server/StructureBoundingBox;)V fillColumnDown
	b (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;IIIIII)V generateAirBox
	c (III)Lnet/minecraft/server/BlockPosition; getWorldPos
	d (I)I getWorldY
	f ()Lnet/minecraft/server/NBTTagCompound; createTag
	g ()Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	h ()I getGenDepth
	i ()Lnet/minecraft/server/EnumDirection; getOrientation
	j ()Lnet/minecraft/server/EnumBlockMirror; getMirror
	k ()Lnet/minecraft/server/WorldGenFeatureStructurePieceType; getType
dip$1 com/mojang/realmsclient/util/RealmsUtil$1
	a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; load
bsw$b$2 net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$2
	a (DDI)I modifyColor
bsw$b$3 net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$3
	a (DDI)I modifyColor
net/minecraft/server/BlockSweetBerryBush net/minecraft/world/level/block/SweetBerryBushBlock
	a AGE
	b SAPLING_SHAPE
	c MID_GROWTH_SHAPE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	a_ (Lnet/minecraft/server/IBlockData;)Z isRandomlyTicking
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
bsw$b$1 net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$1
	a (DDI)I modifyColor
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece net/minecraft/world/level/levelgen/structure/NetherBridgePieces$NetherBridgePiece
	a (Ljava/util/List;)I updatePieceWeight
	a (Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;IIIII)V generateLightPost
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructureBoundingBox;)Z isOkBox
	a (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15;Ljava/util/List;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece; generatePiece
	a (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;IZ)Lnet/minecraft/server/StructurePiece; generateAndAddPiece
	a (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15;Ljava/util/List;Ljava/util/Random;IIZ)Lnet/minecraft/server/StructurePiece; generateChildForward
	b (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15;Ljava/util/List;Ljava/util/Random;IIZ)Lnet/minecraft/server/StructurePiece; generateChildLeft
	c (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15;Ljava/util/List;Ljava/util/Random;IIZ)Lnet/minecraft/server/StructurePiece; generateChildRight
net/minecraft/server/EntityMinecartChest net/minecraft/world/entity/vehicle/MinecartChest
	Z_ ()I getContainerSize
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/DamageSource;)V destroy
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	s ()I getDefaultDisplayOffset
net/minecraft/server/Item net/minecraft/world/item/Item
	RANDOM random
	a rarity
	craftingResult craftingRemainingItem
	d isFireResistant
	durability maxDamage
	e BY_BLOCK
	f BASE_ATTACK_DAMAGE_UUID
	foodInfo foodProperties
	g BASE_ATTACK_SPEED_UUID
	i category
	name descriptionId
	a (Lnet/minecraft/server/CreativeModeTab;)Z allowdedIn
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/DamageSource;)Z canBeHurtBy
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)Z canAttackBlock
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interactLivingEntity
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbni;)V appendHoverText
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z mineBlock
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/RayTrace$FluidCollisionOption;)Lnet/minecraft/server/MovingObjectPositionBlock; getPlayerPOVHitResult
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;I)V onUseTick
	ac_ ()Z isComplex
	ad_ ()Lnet/minecraft/server/SoundEffect; getEatingSound
	ae_ ()Lnet/minecraft/server/SoundEffect; getDrinkingSound
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;)V onCraftedBy
	b (Lnet/minecraft/server/NBTTagCompound;)Z verifyTagAfterLoad
	c ()I getEnchantmentValue
	canDestroySpecialBlock (Lnet/minecraft/server/IBlockData;)Z isCorrectToolForDrops
	d_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	e (Lnet/minecraft/server/ItemStack;)Z isFoil
	e_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
	f (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; getDescriptionId
	f_ (Lnet/minecraft/server/ItemStack;)Z isEnchantable
	getById (I)Lnet/minecraft/server/Item; byId
	getFoodInfo ()Lnet/minecraft/server/FoodInfo; getFoodProperties
	getItemOf (Lnet/minecraft/server/Block;)Lnet/minecraft/server/Item; byBlock
	getMaxDurability ()I getMaxDamage
	getName ()Ljava/lang/String; getDescriptionId
	h ()Lnet/minecraft/server/Item; asItem
	h (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IChatBaseComponent; getName
	i (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumItemRarity; getRarity
	isFood ()Z isEdible
	j (Lnet/minecraft/server/ItemStack;)Z useOnRelease
	l ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	m ()Ljava/lang/String; getOrCreateDescriptionId
	n ()Z shouldOverrideMultiplayerNbt
	p ()Z hasCraftingRemainingItem
	q ()Lnet/minecraft/server/CreativeModeTab; getItemCategory
	r ()Lnet/minecraft/server/ItemStack; getDefaultInstance
	u ()Z isFireResistant
	usesDurability ()Z canBeDepleted
le$1 net/minecraft/gametest/framework/GameTestHelper$1
	b this$0
	a_ ()Z isSpectator
	b_ ()Z isCreative
net/minecraft/server/GameTestHarnessRegistry net/minecraft/gametest/framework/GameTestRegistry
	a testFunctions
	b testClassNames
	c beforeBatchFunctions
	d lastFailedTests
	a ()Ljava/util/Collection; getAllTestFunctions
	a (Ljava/lang/Class;)V register
	a (Ljava/lang/String;)Ljava/util/Collection; getTestFunctionsForClassName
	a (Ljava/lang/String;Lnet/minecraft/server/GameTestHarnessTestFunction;)Z lambda$findTestFunction$1
	a (Ljava/lang/reflect/Method;)V register
	a (Ljava/lang/reflect/Method;Ljava/lang/Object;)V lambda$turnMethodIntoConsumer$2
	a (Lnet/minecraft/server/GameTestHarnessTestFunction;)V rememberFailedTest
	a (Lnet/minecraft/server/GameTestHarnessTestFunction;Ljava/lang/String;)Z isTestFunctionPartOfClass
	b ()Ljava/util/Collection; getAllTestClassNames
	b (Ljava/lang/String;)Z isTestClass
	b (Ljava/lang/String;Lnet/minecraft/server/GameTestHarnessTestFunction;)Z lambda$getTestFunctionsForClassName$0
	b (Ljava/lang/reflect/Method;)Ljava/util/Collection; useTestGeneratorMethod
	c ()Ljava/util/Collection; getLastFailedTests
	c (Ljava/lang/String;)Ljava/util/function/Consumer; getBeforeBatchFunction
	c (Ljava/lang/reflect/Method;)Lnet/minecraft/server/GameTestHarnessTestFunction; turnMethodIntoTestFunction
	d ()V forgetFailedTests
	d (Ljava/lang/String;)Ljava/util/Optional; findTestFunction
	d (Ljava/lang/reflect/Method;)Ljava/util/function/Consumer; turnMethodIntoConsumer
	e (Ljava/lang/String;)Lnet/minecraft/server/GameTestHarnessTestFunction; getTestFunction
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece4 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorStairsPiece
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece4; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece3 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeStraight
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece3; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/PosRuleTestTrue net/minecraft/world/level/levelgen/structure/templatesystem/PosAlwaysTrueTest
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/server/PosRuleTestType; getType
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z test
	b ()Lnet/minecraft/server/PosRuleTestTrue; lambda$static$0
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece6 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleEntrance
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece6; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece5 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorTBalconyPiece
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece5; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/LootEntryAlternatives net/minecraft/world/level/storage/loot/entries/AlternativesEntry
	a ()Lnet/minecraft/server/LootEntryType; getType
	a (Lnet/minecraft/server/LootCollector;)V validate
	a ([Lczn$a;)Lcze$a; alternatives
	a ([Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; compose
	a ([Lnet/minecraft/server/LootEntryChildren;Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z lambda$compose$0
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece2 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeEndFiller
	a selfSeed
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece2; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece1 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeCrossing
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece1; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
due$a net/minecraft/client/model/HumanoidModel$ArmPose
	a EMPTY
	b ITEM
	c BLOCK
	d BOW_AND_ARROW
	e THROW_SPEAR
	f CROSSBOW_CHARGE
	g CROSSBOW_HOLD
	h twoHanded
	i $VALUES
	a ()Z isTwoHanded
biw$2 net/minecraft/world/inventory/InventoryMenu$2
	a this$0
	c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
net/minecraft/server/BlockEnderPortalFrame net/minecraft/world/level/block/EndPortalFrameBlock
	EYE HAS_EYE
	c BASE_SHAPE
	d EYE_SHAPE
	e FULL_SHAPE
	f portalShape
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c ()Lnet/minecraft/server/ShapeDetector; getOrCreatePortalShape
	c_ (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
biw$1 net/minecraft/world/inventory/InventoryMenu$1
	a val$slot
	b this$0
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/EntityHuman;)Z mayPickup
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
net/minecraft/server/Entity net/minecraft/world/entity/Entity
	A walkDist
	AIR_TICKS DATA_AIR_SUPPLY_ID
	B moveDist
	D xOld
	E yOld
	F zOld
	G maxUpStep
	I pushthrough
	M fluidHeight
	N wasEyeInWater
	O fluidOnEyes
	POSE DATA_POSE
	S DATA_SHARED_FLAGS_ID
	Y noCulling
	aA pistonDeltas
	aB pistonDeltasGameTime
	ac portalEntrancePos
	ae stringUUID
	am nextStep
	an nextFlap
	aq DATA_CUSTOM_NAME
	ar DATA_CUSTOM_NAME_VISIBLE
	as DATA_SILENT
	at DATA_NO_GRAVITY
	attachedToPlayer forcedLoading
	au movedSinceLastChunkCheck
	av packetCoordinates
	ay tags
	az forceChunkAddition
	boundingBox bb
	c EMPTY_LIST
	chunkX xChunk
	chunkY yChunk
	chunkZ zChunk
	d INITIAL_AABB
	datawatcher entityData
	dead removed
	e viewScale
	entityCount ENTITY_COUNTER
	f type
	fireTicks remainingFireTicks
	h LOGGER
	headHeight eyeHeight
	i blocksBuilding
	impulse hasImpulse
	inPortal isInsidePortal
	inWater wasTouchingWater
	j boardingCooldown
	justCreated firstTick
	lastPitch xRotO
	lastX xo
	lastY yo
	lastYaw yRotO
	lastZ zo
	loc position
	locBlock blockPosition
	mot deltaMovement
	noDamageTicks invulnerableTime
	noclip noPhysics
	pitch xRot
	portalTicks portalTime
	positionChanged horizontalCollision
	size dimensions
	ticksLived tickCount
	uniqueID uuid
	v verticalCollision
	velocityChanged hurtMarked
	world level
	x stuckSpeedMultiplier
	yaw yRot
	z walkDistO
	E ()V processPortalCooldown
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	Q ()Lnet/minecraft/server/IChatBaseComponent; getName
	R_ ()Z shouldInformAdmins
	S ()Lnet/minecraft/server/IChatBaseComponent; getCustomName
	T ()I getTeamColor
	V ()Lnet/minecraft/server/Vec3D; getPacketCoordinates
	a ()Z acceptsSuccess
	a (B)V handleEntityEvent
	a (D)Z shouldRenderAtSqrDistance
	a (DD)V turn
	a (DDDFFIZ)V lerpTo
	a (DDF)Lnet/minecraft/server/Vec3D; getCollisionHorizontalEscapeVector
	a (DFZ)Lnet/minecraft/server/MovingObjectPosition; pick
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (FI)V lerpHeadTo
	a (FLnet/minecraft/server/Vec3D;)V moveRelative
	a (Ljava/lang/Class;)Z hasPassenger
	a (Lnet/minecraft/server/ArgumentAnchor$Anchor;Lnet/minecraft/server/Vec3D;)V lookAt
	a (Lnet/minecraft/server/AxisAlignedBB;)V setBoundingBox
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isColliding
	a (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; lambda$getDisplayName$9
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;)Z lambda$collide$1
	a (Lnet/minecraft/server/Entity;D)Z closerThan
	a (Lnet/minecraft/server/Entity;ILnet/minecraft/server/DamageSource;)V awardKillScore
	a (Lnet/minecraft/server/Entity;Lapx$a;)V positionRider
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/World;Lnet/minecraft/server/VoxelShapeCollision;Lnet/minecraft/server/StreamAccumulator;)Lnet/minecraft/server/Vec3D; collideBoundingBoxHeuristically
	a (Lnet/minecraft/server/Entity;Z)Z startRiding
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interact
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interactAt
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;)V doEnchantDamageEffects
	a (Lnet/minecraft/server/EntityPlayer;)Z broadcastToPlayer
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EnumBlockMirror;)F mirror
	a (Lnet/minecraft/server/EnumBlockRotation;)F rotate
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;D)D applyPistonMovementRestriction
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/BlockUtil$Rectangle;)Lnet/minecraft/server/Vec3D; getRelativePortalPosition
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;F)Z shouldBlockExplode
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;F)F getBlockExplosionResistance
	a (Lnet/minecraft/server/IBlockData;)V onInsideBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)Z lambda$null$3
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Vec3D;)V makeStuckInBlock
	a (Lnet/minecraft/server/IChatBaseComponent;Ljava/util/UUID;)V sendMessage
	a (Lnet/minecraft/server/IMaterial;)Lnet/minecraft/server/EntityItem; spawnAtLocation
	a (Lnet/minecraft/server/IMaterial;I)Lnet/minecraft/server/EntityItem; spawnAtLocation
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EntityItem; spawnAtLocation
	a (Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityItem; spawnAtLocation
	a (Lnet/minecraft/server/ScoreboardTeamBase;)Z isAlliedTo
	a (Lnet/minecraft/server/Tag;)Z isEyeInFluid
	a (Lnet/minecraft/server/Tag;D)Z updateFluidHeightAndDoFluidPushing
	a (Lnet/minecraft/server/Vec3D;)V setPacketCoordinates
	a (Lnet/minecraft/server/Vec3D;FF)Lnet/minecraft/server/Vec3D; getInputVector
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/VoxelShapeCollision;Lnet/minecraft/server/StreamAccumulator;)Lnet/minecraft/server/Vec3D; collideBoundingBox
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/StreamAccumulator;)Lnet/minecraft/server/Vec3D; collideBoundingBoxLegacy
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumMoveType;)Lnet/minecraft/server/Vec3D; maybeBackOffFromEdge
	a (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/ShapeDetectorShape; findDimensionEntryPoint
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Z)Ljava/util/Optional; getExitPortal
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockUtil$Rectangle;)Lnet/minecraft/server/ShapeDetectorShape; lambda$findDimensionEntryPoint$4
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Entity;)V lambda$teleportTo$10
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V killed
	a (ZLjava/util/Set;)V fillIndirectPassengers
	a ([D)Lnet/minecraft/server/NBTTagList; newDoubleList
	a ([F)Lnet/minecraft/server/NBTTagList; newFloatList
	aF ()Z isInWaterRainOrBubble
	aG ()Z isInWaterOrBubble
	aH ()Z isUnderWater
	aI ()V updateSwimming
	aJ ()Z updateInWaterStateAndDoFluidPushing
	aK ()V updateInWaterStateAndDoWaterCurrentPushing
	aL ()V doWaterSplashEffect
	aM ()Lnet/minecraft/server/IBlockData; getBlockStateOn
	aN ()Z canSpawnSprintParticle
	aO ()V spawnSprintParticle
	aP ()Z isInLava
	aQ ()F getBrightness
	aU ()Z repositionEntityAfterLoad
	aY ()Z canBeCollidedWith
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	a_ (Ljava/util/UUID;)V setUUID
	a_ (Lnet/minecraft/server/NBTTagCompound;)Z saveAsPassenger
	a_ (Z)V setDropContainerContent
	ab ()V resetPos
	addScoreboardTag (Ljava/lang/String;)Z addTag
	ae ()V reapplyPosition
	ah ()Z isOnPortalCooldown
	ai ()I getPortalWaitTime
	am ()V outOfWorld
	ao ()Lnet/minecraft/server/BlockPosition; getOnPos
	appendEntityCrashDetails (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	ar ()Lnet/minecraft/server/BlockPosition; getBlockPosBelowThatAffectsMyMovement
	as ()F nextStep
	ay ()Z makeFlySound
	b ()Z acceptsFailure
	b (D)V setViewScale
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/AxisAlignedBB;)Z isFree
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/Vec3D; getDismountLocationForPassenger
	b (Lnet/minecraft/server/EntityPlayer;)V startSeenByPlayer
	b (Lnet/minecraft/server/IBlockData;)Z lambda$move$0
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)Z lambda$isInWall$2
	b (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; removeAction
	b (Lnet/minecraft/server/Tag;)D getFluidHeight
	b (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; limitPistonMovement
	b (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/Entity; changeDimension
	bB ()Z isVisuallySwimming
	bC ()Z isVisuallyCrawling
	bD ()Z isGlowing
	bG ()I getMaxAirSupply
	bI ()Lnet/minecraft/server/IChatBaseComponent; getTypeName
	bK ()Z isAttackable
	bM ()V removeAfterChangingDimensions
	bO ()I getMaxFallDistance
	bQ ()Z displayFireAnimation
	bU ()Z isPushedByFluid
	bV ()D getViewScale
	bX ()Z shouldShowName
	ba ()D getMyRidingOffset
	bb ()D getPassengersRidingOffset
	bc ()Z showVehicleHealth
	be ()V removeVehicle
	bf ()F getPickRadius
	bh ()Lnet/minecraft/server/Vec2F; getRotationVector
	bi ()Lnet/minecraft/server/Vec3D; getForward
	bl ()V animateHurt
	bm ()Ljava/lang/Iterable; getHandSlots
	bo ()Ljava/lang/Iterable; getAllSlots
	bs ()Z rideableUnderWater
	bu ()Z isSteppingCarefully
	burnFromLava ()V lavaHurt
	bv ()Z isSuppressingBounce
	bw ()Z isDiscrete
	bx ()Z isDescending
	by ()Z isCrouching
	c (D)D getX
	c (DDD)V setPacketCoordinates
	c (FF)Lnet/minecraft/server/Vec3D; calculateViewVector
	c (Lnet/minecraft/server/EntityHuman;)Z isInvisibleTo
	c (Lnet/minecraft/server/EntityPlayer;)V stopSeenByPlayer
	c (Lnet/minecraft/server/EntityPose;)Z canEnterPose
	c (Lnet/minecraft/server/Vec3D;)D getHorizontalDistanceSqr
	cE ()D getRandomY
	ca ()Lnet/minecraft/server/ChatHoverable; createHoverEvent
	canPortal ()Z canChangeDimensions
	cc ()Lnet/minecraft/server/AxisAlignedBB; getBoundingBoxForCulling
	ce ()Lnet/minecraft/server/Vec3D; getLeashOffset
	ch ()Z ignoreExplosion
	checkBlockCollisions ()V checkInsideBlocks
	ci ()Z onlyOpCanSetNbt
	cj ()Z checkAndResetForcedChunkAdditionFlag
	ck ()Z checkAndResetUpdateChunkPos
	co ()Ljava/util/stream/Stream; getSelfAndPassengers
	collide (Lnet/minecraft/server/Entity;)V push
	cr ()Z isControlledByLocalInstance
	cw ()D getFluidJumpThreshold
	d (D)D getRandomX
	d (F)V playSwimSound
	d (FF)Lnet/minecraft/server/Vec3D; calculateUpVector
	d (Lnet/minecraft/server/BlockPosition;)V handleInsidePortal
	d (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/AxisAlignedBB; getBoundingBoxForPose
	d (Lnet/minecraft/server/NBTTagCompound;)Z save
	d (Lnet/minecraft/server/Vec3D;)V moveTo
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	decouple ()V unRide
	die ()V remove
	doPortalTick ()V handleNetherPortal
	e (D)D getY
	e (DDD)Z isFree
	e (F)F playFlySound
	e (I)V setId
	e (Lnet/minecraft/server/EntityPose;)F getEyeHeight
	e (Lnet/minecraft/server/Vec3D;)D distanceToSqr
	enderTeleportAndLoad (DDD)V teleportToWithTicket
	enderTeleportTo (DDD)V teleportTo
	entityBaseTick ()V baseTick
	extinguish ()V clearFire
	f (D)D getZ
	f (DDD)V absMoveTo
	f (F)Lnet/minecraft/server/Vec3D; getViewVector
	g (D)D getRandomZ
	g (DDD)V setPosAndOldPos
	g (F)F getViewXRot
	g (Lnet/minecraft/server/Entity;)F distanceTo
	g (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; collide
	getAdjustedDirection ()Lnet/minecraft/server/EnumDirection; getMotionDirection
	getAirTicks ()I getAirSupply
	getAllPassengers ()Ljava/util/Collection; getIndirectPassengers
	getArmorItems ()Ljava/lang/Iterable; getArmorSlots
	getChunkCoordinates ()Lnet/minecraft/server/BlockPosition; blockPosition
	getCommandListener ()Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
	getCustomNameVisible ()Z isCustomNameVisible
	getDataWatcher ()Lnet/minecraft/server/DataWatcher; getEntityData
	getDefaultPortalCooldown ()I getDimensionChangingDelay
	getEntityType ()Lnet/minecraft/server/EntityTypes; getType
	getFireTicks ()I getRemainingFireTicks
	getFlag (I)Z getSharedFlag
	getHeadHeight ()F getEyeHeight
	getHeadHeight (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	getHeadRotation ()F getYHeadRot
	getHeadY ()D getEyeY
	getHeight ()F getBbHeight
	getLookDirection ()Lnet/minecraft/server/Vec3D; getLookAngle
	getMaxFireTicks ()I getFireImmuneTicks
	getMinecraftServer ()Lnet/minecraft/server/MinecraftServer; getServer
	getMot ()Lnet/minecraft/server/Vec3D; getDeltaMovement
	getName ()Ljava/lang/String; getScoreboardName
	getPositionVector ()Lnet/minecraft/server/Vec3D; position
	getPushReaction ()Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	getRidingPassenger ()Lnet/minecraft/server/Entity; getControllingPassenger
	getSaveID ()Ljava/lang/String; getEncodeId
	getScoreboardDisplayName ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	getScoreboardTags ()Ljava/util/Set; getTags
	getScoreboardTeam ()Lnet/minecraft/server/ScoreboardTeamBase; getTeam
	getSoundCategory ()Lnet/minecraft/server/SoundCategory; getSoundSource
	getSoundSplash ()Lnet/minecraft/server/SoundEffect; getSwimSplashSound
	getSoundSplashHighSpeed ()Lnet/minecraft/server/SoundEffect; getSwimHighSpeedSplashSound
	getSoundSwim ()Lnet/minecraft/server/SoundEffect; getSwimSound
	getUniqueID ()Ljava/util/UUID; getUUID
	getUniqueIDString ()Ljava/lang/String; getStringUUID
	getWidth ()F getBbWidth
	getWorld ()Lnet/minecraft/server/World; getCommandSenderWorld
	h (DDD)D distanceToSqr
	h (F)F getViewYRot
	h (Lnet/minecraft/server/Entity;)D distanceToSqr
	hasSinglePlayerPassenger ()Z hasOnePlayerPassenger
	i (DDD)V push
	i (F)Lnet/minecraft/server/Vec3D; getUpVector
	i (Z)V setGlowing
	inBlock ()Z isInWall
	initDatawatcher ()V defineSynchedData
	isBurning ()Z isOnFire
	isCollidable ()Z isPushable
	isFireProof ()Z fireImmune
	isIgnoreBlockTrigger ()Z isIgnoringBlockTriggers
	isInteractable ()Z isPickable
	isInvulnerable (Lnet/minecraft/server/DamageSource;)Z isInvulnerableTo
	isSameVehicle (Lnet/minecraft/server/Entity;)Z isPassengerOfSameVehicle
	isSneaking ()Z isShiftKeyDown
	j (DDD)Z shouldRender
	j (F)Lnet/minecraft/server/Vec3D; getEyePosition
	j (Lnet/minecraft/server/Entity;)Z canCollideWith
	k ()Z isInBubbleColumn
	k (DDD)V lerpMotion
	k (F)Lnet/minecraft/server/Vec3D; getLightProbePosition
	k (I)Z hasPermissions
	k (Lnet/minecraft/server/Entity;)V positionRider
	k (Z)V onAboveBubbleCol
	killEntity ()V kill
	l (DDD)V moveTowardsClosestSpace
	l (F)Lnet/minecraft/server/Vec3D; getPosition
	l (Lnet/minecraft/server/Entity;)V onPassengerTurned
	l (Z)V onInsideBubbleColumn
	loadData (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	locX ()D getX
	locY ()D getY
	locZ ()D getZ
	m ()V updateFluidOnEyes
	n ()Ljava/lang/String; lambda$fillCrashReportCategory$8
	n (F)V setYBodyRot
	n (Lnet/minecraft/server/Entity;)Z canRide
	o ()Ljava/lang/String; lambda$fillCrashReportCategory$7
	o (F)Lnet/minecraft/server/Vec3D; getRopeHoldPosition
	onLightningStrike (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLightning;)V thunderHit
	p ()Ljava/lang/String; lambda$fillCrashReportCategory$6
	passengerTick ()V rideTick
	pickup (Lnet/minecraft/server/EntityHuman;)V playerTouch
	playStepSound ()Z isMovementNoisy
	q ()Ljava/lang/String; lambda$fillCrashReportCategory$5
	q (Lnet/minecraft/server/Entity;)Z canAddPassenger
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
	recalcPosition ()V setLocationFromBoundingbox
	removeScoreboardTag (Ljava/lang/String;)Z removeTag
	resetPortalCooldown ()V setPortalCooldown
	s (Lnet/minecraft/server/Entity;)Z is
	save (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; saveWithoutId
	saveData (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	setAirTicks (I)V setAirSupply
	setEquipment (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	setFireTicks (I)V setRemainingFireTicks
	setFlag (IZ)V setSharedFlag
	setHeadRotation (F)V setYHeadRot
	setLocation (DDDFF)V absMoveTo
	setMot (DDD)V setDeltaMovement
	setMot (Lnet/minecraft/server/Vec3D;)V setDeltaMovement
	setOnFire (I)V setSecondsOnFire
	setPosition (DDD)V setPos
	setPositionRaw (DDD)V setPosRaw
	setPositionRotation (DDDFF)V moveTo
	setPositionRotation (Lnet/minecraft/server/BlockPosition;FF)V moveTo
	setSneaking (Z)V setShiftKeyDown
	setYawPitch (FF)V setRot
	spawnIn (Lnet/minecraft/server/World;)V setLevel
	t (Lnet/minecraft/server/Entity;)Z skipAttackInteraction
	teleportAndSync (DDD)V moveTo
	u (Lnet/minecraft/server/Entity;)V copyPosition
	updateSize ()V refreshDimensions
	v (Lnet/minecraft/server/Entity;)V restoreFrom
	velocityChanged ()V markHurt
	w (Lnet/minecraft/server/Entity;)Z hasPassenger
	y ()I getPermissionLevel
	y (Lnet/minecraft/server/Entity;)Z hasIndirectPassenger
cys$c$a net/minecraft/world/level/storage/loot/LootContext$EntityTarget$Serializer
	a (Lcom/google/gson/stream/JsonReader;)Lnet/minecraft/server/LootTableInfo$EntityTarget; read
	a (Lcom/google/gson/stream/JsonWriter;Lnet/minecraft/server/LootTableInfo$EntityTarget;)V write
net/minecraft/server/PacketPlayInRecipeDisplayed net/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket
	a recipe
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getRecipe
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/ArgumentSerializerInteger net/minecraft/commands/synchronization/brigadier/IntegerArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/IntegerArgumentType; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
ez$c net/minecraft/commands/arguments/item/ItemPredicateArgument$TagPredicate
	a tag
	b nbt
	a (Lnet/minecraft/server/ItemStack;)Z test
net/minecraft/server/GameTestHarnessBatchRunner net/minecraft/gametest/framework/GameTestBatchRunner
	a LOGGER
	b firstTestNorthWestCorner
	c level
	d testTicker
	e testsPerRow
	f allTestInfos
	g northWestCorners
	h batches
	i currentBatchTracker
	j currentBatchIndex
	k nextTestNorthWestCorner
	a ()Ljava/util/List; getTestInfos
	a (I)V runBatch
	a (Ljava/util/Collection;)V createStructuresForBatch
	a (Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/GameTestHarnessBatch;)V lambda$new$0
	a (Lnet/minecraft/server/GameTestHarnessBatchRunner;Lnet/minecraft/server/GameTestHarnessInfo;)V access$000
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V testCompleted
	b ()V start
	b (Lnet/minecraft/server/GameTestHarnessInfo;)V lambda$runBatch$1
ez$b net/minecraft/commands/arguments/item/ItemPredicateArgument$Result
ez$a net/minecraft/commands/arguments/item/ItemPredicateArgument$ItemPredicate
	a item
	b nbt
	a (Lnet/minecraft/server/ItemStack;)Z test
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece
	d entryDoor
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType; randomSmallDoor
	a (Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType;III)V generateSmallDoor
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructureBoundingBox;)Z isOkBox
	a (Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;II)Lnet/minecraft/server/StructurePiece; generateSmallDoorChildForward
	b (Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;II)Lnet/minecraft/server/StructurePiece; generateSmallDoorChildLeft
	c (Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;II)Lnet/minecraft/server/StructurePiece; generateSmallDoorChildRight
net/minecraft/server/EnchantmentQuickCharge net/minecraft/world/item/enchantment/QuickChargeEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
bdp$f net/minecraft/world/entity/monster/Phantom$PhantomLookControl
	h this$0
	a ()V tick
bdp$g net/minecraft/world/entity/monster/Phantom$PhantomMoveControl
	i this$0
	j speed
	a ()V tick
bdp$h net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal
	b this$0
	g ()Z touchingTarget
net/minecraft/server/RecipiesShield net/minecraft/world/item/crafting/ShieldDecorationRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
bdp$i net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal
	a this$0
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/CommandAttribute net/minecraft/server/commands/AttributeCommand
	a AVAILABLE_ATTRIBUTES
	b ERROR_NOT_LIVING_ENTITY
	c ERROR_NO_SUCH_ATTRIBUTE
	d ERROR_NO_SUCH_MODIFIER
	e ERROR_MODIFIER_ALREADY_PRESENT
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$5
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;Lnet/minecraft/server/AttributeBase;D)I getAttributeValue
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;Lnet/minecraft/server/AttributeBase;Ljava/util/UUID;)I removeModifier
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;Lnet/minecraft/server/AttributeBase;Ljava/util/UUID;D)I getAttributeModifier
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;Lnet/minecraft/server/AttributeBase;Ljava/util/UUID;Ljava/lang/String;DLnet/minecraft/server/AttributeModifier$Operation;)I addModifier
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/EntityLiving; getLivingEntity
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AttributeBase;)Lnet/minecraft/server/AttributeModifiable; getAttributeInstance
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	b (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;Lnet/minecraft/server/AttributeBase;D)I getAttributeBase
	b (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AttributeBase;)Lnet/minecraft/server/EntityLiving; getEntityWithAttribute
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	c (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;Lnet/minecraft/server/AttributeBase;D)I setAttributeBase
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
net/minecraft/server/DataConverterTypes net/minecraft/util/datafix/fixes/References
	a ()Ljava/lang/String; lambda$static$24
	b ()Ljava/lang/String; lambda$static$23
	c ()Ljava/lang/String; lambda$static$22
	d ()Ljava/lang/String; lambda$static$21
	e ()Ljava/lang/String; lambda$static$20
	f ()Ljava/lang/String; lambda$static$19
	g ()Ljava/lang/String; lambda$static$18
	h ()Ljava/lang/String; lambda$static$17
	i ()Ljava/lang/String; lambda$static$16
	j ()Ljava/lang/String; lambda$static$15
	k ()Ljava/lang/String; lambda$static$14
	l ()Ljava/lang/String; lambda$static$13
	m ()Ljava/lang/String; lambda$static$12
	n ()Ljava/lang/String; lambda$static$11
	o ()Ljava/lang/String; lambda$static$10
	p ()Ljava/lang/String; lambda$static$9
	q ()Ljava/lang/String; lambda$static$8
	r ()Ljava/lang/String; lambda$static$7
	s ()Ljava/lang/String; lambda$static$6
	t ()Ljava/lang/String; lambda$static$5
	u ()Ljava/lang/String; lambda$static$4
	v ()Ljava/lang/String; lambda$static$3
	w ()Ljava/lang/String; lambda$static$2
	x ()Ljava/lang/String; lambda$static$1
	y ()Ljava/lang/String; lambda$static$0
net/minecraft/server/EntityBat net/minecraft/world/entity/ambient/Bat
	b DATA_ID_FLAGS
	c BAT_RESTING_TARGETING
	d targetPosition
	C (Lnet/minecraft/server/Entity;)V doPush
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	N ()V customServerAiStep
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aB ()Z isMovementNoisy
	aT ()Z isPushable
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkBatSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bP ()Z isIgnoringBlockTriggers
	dF ()F getSoundVolume
	dG ()F getVoicePitch
	dP ()V pushEntities
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eJ ()Z isHalloween
	isAsleep ()Z isResting
	j ()V tick
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	setAsleep (Z)V setResting
net/minecraft/server/BlockFence net/minecraft/world/level/block/FenceBlock
	i occlusionByIndex
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getVisualShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;ZLnet/minecraft/server/EnumDirection;)Z connectsTo
	c (Lnet/minecraft/server/Block;)Z isSameFence
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
cgs$a net/minecraft/world/level/chunk/storage/IOWorker$PendingStore
	a data
	b result
	a (Lcgs$a;)Lnet/minecraft/server/NBTTagCompound; access$000
	a (Lcgs$a;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; access$002
	b (Lcgs$a;)Ljava/util/concurrent/CompletableFuture; access$100
net/minecraft/server/WorldGenFeatureTreeAlterGround net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator
	a CODEC
	b provider
	a ()Lnet/minecraft/server/WorldGenFeatureTrees; type
	a (ILnet/minecraft/server/BlockPosition;)Z lambda$place$1
	a (Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)V lambda$place$2
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)V placeCircle
	a (Lnet/minecraft/server/WorldGenFeatureTreeAlterGround;)Lnet/minecraft/server/WorldGenFeatureStateProvider; lambda$static$0
	b (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)V placeBlockAt
c$1 com/mojang/math/OctahedralGroup$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
net/minecraft/server/ItemGlassBottle net/minecraft/world/item/BottleItem
	a (Lnet/minecraft/server/EntityAreaEffectCloud;)Z lambda$use$0
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; turnBottleIntoItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
due$1 net/minecraft/client/model/HumanoidModel$1
	a $SwitchMap$net$minecraft$client$model$HumanoidModel$ArmPose
net/minecraft/server/CriterionTriggerShotCrossbow net/minecraft/advancements/critereon/ShotCrossbowTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lcj$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;)V trigger
	a (Lnet/minecraft/server/ItemStack;Lcj$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
bdp$b net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal
	a this$0
	b attackTargeting
	c nextScanTick
	a ()Z canUse
	b ()Z canContinueToUse
net/minecraft/server/EntityBoat net/minecraft/world/entity/vehicle/Boat
	aA isAboveBubbleColumn
	aB bubbleColumnDirectionIsDown
	aC bubbleMultiplier
	aD bubbleAngle
	aE bubbleAngleO
	ag DATA_ID_BUBBLE_TIME
	ah paddlePositions
	ai invFriction
	aj outOfControlTicks
	ak deltaRotation
	al lerpSteps
	am lerpX
	an lerpY
	ao lerpZ
	ap lerpYRot
	aq lerpXRot
	ar inputLeft
	as inputRight
	at inputUp
	au inputDown
	av waterLevel
	aw landFriction
	ax status
	ay oldStatus
	az lastYd
	b DATA_ID_HURT
	c DATA_ID_HURTDIR
	d DATA_ID_DAMAGE
	e DATA_ID_TYPE
	f DATA_ID_PADDLE_LEFT
	g DATA_ID_PADDLE_RIGHT
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (DDDFFIZ)V lerpTo
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (I)Z getPaddleState
	a (IF)F getRowingTime
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/Entity;)V clampRotation
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)Z canVehicleCollide
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interact
	a (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/BlockUtil$Rectangle;)Lnet/minecraft/server/Vec3D; getRelativePortalPosition
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (ZZ)V setPaddleState
	a (ZZZZ)V setInput
	aB ()Z isMovementNoisy
	aH ()Z isUnderWater
	aS ()Z isPickable
	aT ()Z isPushable
	aY ()Z canBeCollidedWith
	b (F)F getBubbleAngle
	b (I)V setHurtTime
	b (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/Vec3D; getDismountLocationForPassenger
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bZ ()Lnet/minecraft/server/EnumDirection; getMotionDirection
	bb ()D getPassengersRidingOffset
	bl ()V animateHurt
	c (I)V setHurtDir
	cl ()Lnet/minecraft/server/Entity; getControllingPassenger
	d (I)V setBubbleTime
	e ()V defineSynchedData
	g ()Lnet/minecraft/server/Item; getDropItem
	getType ()Lnet/minecraft/server/EntityBoat$EnumBoatType; getBoatType
	h ()Lnet/minecraft/server/SoundEffect; getPaddleSound
	i ()F getWaterLevelAbove
	i (Lnet/minecraft/server/Entity;)V push
	j ()V tick
	j (Lnet/minecraft/server/Entity;)Z canCollideWith
	k ()F getGroundFriction
	k (Lnet/minecraft/server/Entity;)V positionRider
	k (Z)V onAboveBubbleCol
	l (Lnet/minecraft/server/Entity;)V onPassengerTurned
	n ()I getHurtTime
	o ()I getHurtDir
	q ()V tickBubbleColumn
	q (Lnet/minecraft/server/Entity;)Z canAddPassenger
	r ()V tickLerp
	s ()Lnet/minecraft/server/EntityBoat$EnumStatus; getStatus
	t ()Z checkInWater
	u ()Lnet/minecraft/server/EntityBoat$EnumStatus; isUnderwater
	v ()V floatBoat
	x ()V controlBoat
	z ()I getBubbleTime
bdp$c net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal
	a this$0
	b nextSweepTick
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()V setAnchorAboveTarget
net/minecraft/server/ChunkTaskQueueSorter net/minecraft/server/level/ChunkTaskPriorityQueueSorter
	a LOGGER
	b queues
	c sleeping
	d mailbox
	a ()Ljava/lang/String; getDebugStatus
	a (ILnet/minecraft/server/ChunkCoordIntPair;ILnet/minecraft/server/ChunkTaskQueue;)V lambda$null$9
	a (ILnet/minecraft/server/Mailbox;)Lnet/minecraft/server/ChunkTaskQueue; lambda$new$0
	a (Ljava/lang/Long;)Ljava/lang/String; lambda$null$17
	a (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; lambda$null$13
	a (Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Lzu$a; message
	a (Ljava/lang/Runnable;JZ)Lzu$b; release
	a (Ljava/lang/Runnable;Lnet/minecraft/server/Mailbox;)Ljava/lang/Runnable; lambda$message$2
	a (Ljava/util/Map$Entry;)Ljava/lang/String; lambda$getDebugStatus$18
	a (Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Lzu$a; message
	a (Ljava/util/function/IntSupplier;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/util/function/IntConsumer;)V lambda$onLevelChange$10
	a (Lnet/minecraft/server/ChunkCoordIntPair;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V onLevelChange
	a (Lnet/minecraft/server/ChunkTaskQueue;Lnet/minecraft/server/Mailbox;)V pollTask
	a (Lnet/minecraft/server/ChunkTaskQueue;Lnet/minecraft/server/Mailbox;Ljava/util/List;)V lambda$null$15
	a (Lnet/minecraft/server/Mailbox;)Lnet/minecraft/server/Mailbox; getReleaseProcessor
	a (Lnet/minecraft/server/Mailbox;JLjava/lang/Runnable;Z)V release
	a (Lnet/minecraft/server/Mailbox;JZLjava/lang/Runnable;)V lambda$release$11
	a (Lnet/minecraft/server/Mailbox;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletableFuture; lambda$null$14
	a (Lnet/minecraft/server/Mailbox;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V submit
	a (Lnet/minecraft/server/Mailbox;Ljava/util/function/IntSupplier;JLjava/util/function/Function;Z)V lambda$submit$12
	a (Lnet/minecraft/server/Mailbox;Lnet/minecraft/server/Mailbox;)Laod$b; lambda$getReleaseProcessor$8
	a (Lnet/minecraft/server/Mailbox;Lnet/minecraft/server/Mailbox;Z)V lambda$null$4
	a (Lnet/minecraft/server/Mailbox;Lzu$b;)V lambda$null$6
	a (Lnet/minecraft/server/Mailbox;Z)Lnet/minecraft/server/Mailbox; getProcessor
	a (Lnet/minecraft/server/Mailbox;ZLnet/minecraft/server/Mailbox;)Laod$b; lambda$getProcessor$5
	a (Lnet/minecraft/server/Mailbox;ZLzu$a;)V lambda$null$3
	a (Lnet/minecraft/server/PlayerChunk;Ljava/lang/Runnable;)Lzu$a; message
	a (Lnet/minecraft/server/PlayerChunk;Ljava/util/function/Function;)Lzu$a; message
	b (Ljava/lang/Runnable;Lnet/minecraft/server/Mailbox;)V lambda$null$1
	b (Lnet/minecraft/server/ChunkTaskQueue;Lnet/minecraft/server/Mailbox;)V lambda$pollTask$16
	b (Lnet/minecraft/server/Mailbox;)Lnet/minecraft/server/ChunkTaskQueue; getQueue
	b (Lnet/minecraft/server/Mailbox;Lnet/minecraft/server/Mailbox;)V lambda$null$7
bdp$d net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl
	a this$0
	a ()V clientTick
bzp$1 net/minecraft/world/level/block/ShulkerBoxBlock$1
	a $SwitchMap$net$minecraft$world$item$DyeColor
bdp$e net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal
	a this$0
	c angle
	d distance
	e height
	f clockwise
	a ()Z canUse
	c ()V start
	e ()V tick
	h ()V selectNext
net/minecraft/server/WorldGenDecoratorContext net/minecraft/world/level/levelgen/placement/DecorationContext
	a level
	b generator
	a ()I getGenDepth
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/BitSet; getCarvingMask
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	b ()I getSeaLevel
net/minecraft/server/OldChunkLoader net/minecraft/world/level/chunk/storage/OldChunkStorage
	a (Lnet/minecraft/server/IRegistryCustom$Dimension;Lnet/minecraft/server/OldChunkLoader$OldChunk;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/WorldChunkManager;)V convertToAnvilFormat
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/OldChunkLoader$OldChunk; load
net/minecraft/server/LootItemFunctionSetCount net/minecraft/world/level/storage/loot/functions/SetItemCountFunction
	a value
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionSetCount;)Lnet/minecraft/server/LootValue; access$000
	a (Lnet/minecraft/server/LootValue;)Ldaf$a; setCount
	a (Lnet/minecraft/server/LootValue;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$setCount$0
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
bif$5 net/minecraft/world/inventory/CartographyTableMenu$5
	a val$access
	b this$0
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$onTake$0
net/minecraft/server/OldChunkLoader$OldChunk net/minecraft/world/level/chunk/storage/OldChunkStorage$OldLevelChunk
	a lastUpdated
	b terrainPopulated
	c heightmap
	d blockLight
	e skyLight
	f data
	g blocks
	h entities
	i blockEntities
	j blockTicks
	k x
	l z
net/minecraft/server/VillagerProfession net/minecraft/world/entity/npc/VillagerProfession
	p name
	q jobPoiType
	r requestedItems
	s secondaryPoi
	t workSound
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;Lnet/minecraft/server/VillagePlaceType;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/server/SoundEffect;)Lnet/minecraft/server/VillagerProfession; register
	a (Ljava/lang/String;Lnet/minecraft/server/VillagePlaceType;Lnet/minecraft/server/SoundEffect;)Lnet/minecraft/server/VillagerProfession; register
	b ()Lnet/minecraft/server/VillagePlaceType; getJobPoiType
	c ()Lcom/google/common/collect/ImmutableSet; getRequestedItems
	d ()Lcom/google/common/collect/ImmutableSet; getSecondaryPoi
	e ()Lnet/minecraft/server/SoundEffect; getWorkSound
cfp$a net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener
	a worldBorder
	a (Lnet/minecraft/server/WorldBorder;D)V onBorderSizeSet
	a (Lnet/minecraft/server/WorldBorder;DD)V onBorderCenterSet
	a (Lnet/minecraft/server/WorldBorder;DDJ)V onBorderSizeLerping
	a (Lnet/minecraft/server/WorldBorder;I)V onBorderSetWarningTime
	b (Lnet/minecraft/server/WorldBorder;D)V onBorderSetDamagePerBlock
	b (Lnet/minecraft/server/WorldBorder;I)V onBorderSetWarningBlocks
	c (Lnet/minecraft/server/WorldBorder;D)V onBorderSetDamageSafeZOne
net/minecraft/server/DataConverterSchemaV2551 net/minecraft/util/datafix/schemas/V2551
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$5
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$null$4
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$null$3
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$null$2
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$null$1
	f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$null$0
bcm$1 net/minecraft/world/entity/decoration/ItemFrame$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
dhp$1 com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen$1
	a $SwitchMap$com$mojang$realmsclient$gui$RealmsWorldSlotButton$Action
aao net/minecraft/server/level/package-info
net/minecraft/server/ITileEntityContainer net/minecraft/world/inventory/MenuConstructor
net/minecraft/server/DefinedStructureTestTag net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest
	a CODEC
	b tag
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/server/DefinedStructureTestTag;)Lnet/minecraft/server/Tag; lambda$static$1
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
	b ()Lnet/minecraft/server/Tags; lambda$static$0
net/minecraft/server/EnchantmentLootBonus net/minecraft/world/item/enchantment/LootBonusEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/Fluid net/minecraft/world/level/material/FluidState
	a CODEC
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z shouldRenderBackwardUpFace
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Vec3D; getFlow
	d ()F getOwnHeight
	d (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getShape
	e ()I getAmount
	f ()Z isRandomlyTicking
	getBlockData ()Lnet/minecraft/server/IBlockData; createLegacyBlock
	h ()Lnet/minecraft/server/ParticleParam; getDripParticle
	i ()F getExplosionResistance
aas net/minecraft/server/level/progress/ProcessorChunkProgressListener
	a delegate
	b mailbox
	a ()V start
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkStatus;)V onStatusChange
	b ()V stop
	b (Lnet/minecraft/server/ChunkCoordIntPair;)V lambda$updateSpawnPos$0
	b (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkStatus;)V lambda$onStatusChange$1
net/minecraft/server/BlockIronBars net/minecraft/world/level/block/IronBarsBlock
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getVisualShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/server/IBlockData;Z)Z attachsTo
aau net/minecraft/server/level/progress/package-info
aat net/minecraft/server/level/progress/StoringChunkProgressListener
	a delegate
	b statuses
	c spawnPos
	d fullDiameter
	e radius
	f diameter
	g started
	a ()V start
	a (II)Lnet/minecraft/server/ChunkStatus; getStatus
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkStatus;)V onStatusChange
	b ()V stop
	c ()I getFullDiameter
	d ()I getDiameter
	e ()I getProgress
net/minecraft/server/WorldGenTaigaStructure net/minecraft/world/level/levelgen/feature/BlockBlobFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureLakeConfiguration;)Z place
aaw net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl
	a server
	b connection
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/PacketHandshakingInSetProtocol;)V handleIntention
bif$3 net/minecraft/world/inventory/CartographyTableMenu$3
	a this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
bif$4 net/minecraft/world/inventory/CartographyTableMenu$4
	a this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
vh$b$1 net/minecraft/resources/RegistryReadOps$ResourceAccess$1
	a val$manager
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult; parseElement
	a (Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair; lambda$parseElement$1
	a (Ljava/lang/String;)Z lambda$listResources$0
	a (Lnet/minecraft/server/ResourceKey;)Ljava/util/Collection; listResources
bif$1 net/minecraft/world/inventory/CartographyTableMenu$1
	a this$0
	X_ ()V setChanged
net/minecraft/server/WeightedRandomEnchant net/minecraft/world/item/enchantment/EnchantmentInstance
bif$2 net/minecraft/world/inventory/CartographyTableMenu$2
	a this$0
	X_ ()V setChanged
net/minecraft/server/WorldGenDecoratorChance net/minecraft/world/level/levelgen/placement/ChanceDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorDungeonConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/PacketPlayOutAdvancements net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket
	a reset
	b added
	c removed
	d progress
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/Map; getAdded
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/Set; getRemoved
	d ()Ljava/util/Map; getProgress
	e ()Z shouldReset
net/minecraft/server/DataConverterSchemaV2568 net/minecraft/util/datafix/schemas/V2568
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
abd net/minecraft/server/package-info
abc net/minecraft/server/network/package-info
net/minecraft/server/WorldGenCavesHell net/minecraft/world/level/levelgen/carver/NetherWorldCarver
	a ()I getCaveBound
	a (Ljava/util/Random;)F getThickness
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;IIIIIIIILorg/apache/commons/lang3/mutable/MutableBoolean;)Z carveBlock
	b ()D getYScale
	b (Ljava/util/Random;)I getCaveY
net/minecraft/server/CriterionProgress net/minecraft/advancements/CriterionProgress
	a DATE_FORMAT
	b obtained
	a ()Z isDone
	a (Ljava/lang/String;)Lnet/minecraft/server/CriterionProgress; fromJson
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b ()V grant
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/CriterionProgress; fromNetwork
	c ()V revoke
	e ()Lcom/google/gson/JsonElement; serializeToJson
	getDate ()Ljava/util/Date; getObtained
net/minecraft/server/ItemWearable net/minecraft/world/item/Wearable
abp net/minecraft/server/packs/metadata/package-info
abo net/minecraft/server/packs/metadata/pack/package-info
abq net/minecraft/server/packs/package-info
net/minecraft/server/DataConverterItemLoreComponentize net/minecraft/util/datafix/fixes/ItemLoreFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixLoreList$5
	a (Ljava/lang/String;)Ljava/lang/String; fixLoreEntry
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; fixLoreList
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
net/minecraft/server/PacketPlayInBlockDig net/minecraft/network/protocol/game/ServerboundPlayerActionPacket
	a pos
	b direction
	c action
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/EnumDirection; getDirection
	d ()Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType; getAction
net/minecraft/server/GenLayerOcean net/minecraft/world/level/newbiome/layer/OceanMixerLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;II)I applyPixel
net/minecraft/server/EntityShulker net/minecraft/world/entity/monster/Shulker
	COLOR DATA_COLOR_ID
	b DATA_ATTACH_FACE_ID
	bp COVERED_ARMOR_MODIFIER_UUID
	bq COVERED_ARMOR_MODIFIER
	br currentPeekAmountO
	bs currentPeekAmount
	bt oldAttachPosition
	bu clientSideTeleportInterpolation
	c DATA_ATTACH_POS_ID
	d DATA_PEEK_ID
	F ()V playAmbientSound
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	O ()I getMaxHeadXRot
	a (DDDFFIZ)V lerpTo
	a (I)V setRawPeekAmount
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z canAttachOnBlockFace
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityShulker;)Ljava/util/Random; access$100
	a (Lnet/minecraft/server/EnumColor;)V setColor
	a (Lnet/minecraft/server/EnumMoveType;Lnet/minecraft/server/Vec3D;)V move
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aB ()Z isMovementNoisy
	aY ()Z canBeCollidedWith
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityShulker;)Ljava/util/Random; access$200
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bf ()F getPickRadius
	c (Lnet/minecraft/server/EntityShulker;)Ljava/util/Random; access$300
	ct ()Lnet/minecraft/server/SoundCategory; getSoundSource
	d (DDD)V setPos
	d (Lnet/minecraft/server/EntityShulker;)Ljava/util/Random; access$400
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityShulker;)Ljava/util/Random; access$500
	eK ()Z teleportSomewhere
	eL ()Lnet/minecraft/server/EnumDirection; getAttachFace
	eM ()Lnet/minecraft/server/BlockPosition; getAttachPosition
	eN ()I getRawPeekAmount
	eO ()I getClientSideTeleportInterpolation
	eP ()Lnet/minecraft/server/BlockPosition; getOldAttachPosition
	eQ ()Z hasValidInterpolationPositions
	eR ()V setDefaultColor
	eS ()Lnet/minecraft/server/EnumColor; getColor
	eT ()Z isClosed
	eo ()I getMaxHeadYRot
	g (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EnumDirection; findAttachableFace
	h (Lnet/minecraft/server/BlockPosition;)V setAttachPosition
	i (Lnet/minecraft/server/Entity;)V push
	j ()V tick
	k ()V aiStep
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	o ()V registerGoals
	r ()Lnet/minecraft/server/EntityAIBodyControl; createBodyControl
	y (F)F getClientPeekAmount
net/minecraft/server/DataConverterPiston net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix
	a ()Ljava/lang/IllegalStateException; lambda$fix$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	b ()Ljava/lang/IllegalStateException; lambda$fix$0
crb$a net/minecraft/world/level/levelgen/structure/IglooPieces$IglooPiece
	d templateLocation
	e rotation
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/DefinedStructureManager;)V loadTemplate
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/NoiseGenerator net/minecraft/world/level/levelgen/synth/SurfaceNoise
	a (DDDD)D getSurfaceNoiseValue
aby net/minecraft/server/packs/repository/package-info
net/minecraft/server/BehaviorFollowAdult net/minecraft/world/entity/ai/behavior/BabyFollowAdult
	b followRange
	c speedModifier
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getNearestAdult
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/ItemRestricted net/minecraft/world/item/GameMasterBlockItem
	c (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getPlacementState
net/minecraft/server/WorldGenEndIsland net/minecraft/world/level/levelgen/feature/EndIslandFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/AutoRecipeAbstract net/minecraft/recipebook/PlaceRecipe
	a (IIILnet/minecraft/server/IRecipe;Ljava/util/Iterator;I)V placeRecipe
	a (Ljava/util/Iterator;IIII)V addItemToSlot
im$1 net/minecraft/data/models/blockstates/Condition$1
acg net/minecraft/server/packs/resources/ResourceManagerReloadListener
	a (Laca$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/IResourceManager;)V lambda$reload$0
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
net/minecraft/server/DataPaletteBlock net/minecraft/world/level/chunk/PalettedContainer
	a storage
	b globalPalette
	c dummyPaletteResize
	d registry
	e reader
	f writer
	g defaultValue
	h palette
	i bits
	j lock
	a ()V acquire
	a (I)Ljava/lang/Object; get
	a (III)Ljava/lang/Object; get
	a (ILjava/lang/Object;)Ljava/lang/Object; getAndSet
	a (Lcgl$a;)V count
	a (Lcgl$a;Lit/unimi/dsi/fastutil/ints/Int2IntMap$Entry;)V lambda$count$3
	a (Lit/unimi/dsi/fastutil/ints/Int2IntMap;I)V lambda$count$2
	a (Ljava/lang/Thread;)Ljava/lang/String; lambda$acquire$1
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;Ljava/lang/String;)V write
	a (Lnet/minecraft/server/NBTTagList;[J)V read
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()V release
	b (I)V setBits
	b (III)I getIndex
	b (IIILjava/lang/Object;)Ljava/lang/Object; getAndSetUnchecked
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getSerializedSize
	c (IIILjava/lang/Object;)V set
	c (ILjava/lang/Object;)I lambda$new$0
	contains (Ljava/util/function/Predicate;)Z maybeHas
	setBlock (IIILjava/lang/Object;)Ljava/lang/Object; getAndSet
	setBlockIndex (ILjava/lang/Object;)V set
net/minecraft/server/EnchantmentManager net/minecraft/world/item/enchantment/EnchantmentHelper
	a (ILnet/minecraft/server/ItemStack;Z)Ljava/util/List; getAvailableEnchantmentResults
	a (Lbpr$a;ILnet/minecraft/server/Enchantment;)V lambda$runIterationOnItem$1
	a (Lbpr$a;Ljava/lang/Iterable;)V runIterationOnInventory
	a (Lbpr$a;Lnet/minecraft/server/ItemStack;)V runIterationOnItem
	a (Ljava/lang/Iterable;Lnet/minecraft/server/DamageSource;)I getDamageProtection
	a (Ljava/util/Collection;Lnet/minecraft/server/Enchantment;)Z isEnchantmentCompatible
	a (Ljava/util/List;Lnet/minecraft/server/WeightedRandomEnchant;)V filterCompatibleEnchantments
	a (Ljava/util/Map;Lnet/minecraft/server/ItemStack;)V setEnchantments
	a (Ljava/util/Map;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/Enchantment;)V lambda$deserializeEnchantments$0
	a (Ljava/util/Random;IILnet/minecraft/server/ItemStack;)I getEnchantmentCost
	a (Ljava/util/Random;Lnet/minecraft/server/ItemStack;IZ)Lnet/minecraft/server/ItemStack; enchantItem
	a (Lnet/minecraft/server/Enchantment;Lnet/minecraft/server/EntityLiving;)I getEnchantmentLevel
	a (Lnet/minecraft/server/Enchantment;Lnet/minecraft/server/EntityLiving;Ljava/util/function/Predicate;)Ljava/util/Map$Entry; getRandomItemWith
	a (Lnet/minecraft/server/EntityLiving;)F getSweepingDamageRatio
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;)V doPostHurtEffects
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;Lnet/minecraft/server/Enchantment;I)V lambda$doPostDamageEffects$5
	a (Lnet/minecraft/server/ItemStack;)Ljava/util/Map; getEnchantments
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumMonsterType;)F getDamageBonus
	a (Lnet/minecraft/server/NBTTagList;)Ljava/util/Map; deserializeEnchantments
	a (Lorg/apache/commons/lang3/mutable/MutableFloat;Lnet/minecraft/server/EnumMonsterType;Lnet/minecraft/server/Enchantment;I)V lambda$getDamageBonus$3
	a (Lorg/apache/commons/lang3/mutable/MutableInt;Lnet/minecraft/server/DamageSource;Lnet/minecraft/server/Enchantment;I)V lambda$getDamageProtection$2
	b (Ljava/util/Random;Lnet/minecraft/server/ItemStack;IZ)Ljava/util/List; selectEnchantment
	b (Lnet/minecraft/server/Enchantment;Lnet/minecraft/server/EntityLiving;)Ljava/util/Map$Entry; getRandomItemWith
	b (Lnet/minecraft/server/EntityLiving;)I getKnockbackBonus
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;)V doPostDamageEffects
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;Lnet/minecraft/server/Enchantment;I)V lambda$doPostHurtEffects$4
	b (Lnet/minecraft/server/ItemStack;)I getFishingLuckBonus
	c (Lnet/minecraft/server/ItemStack;)I getFishingSpeedBonus
	d (Lnet/minecraft/server/ItemStack;)Z hasBindingCurse
	e (Lnet/minecraft/server/EntityLiving;)I getDepthStrider
	f (Lnet/minecraft/server/ItemStack;)I getLoyalty
	g (Lnet/minecraft/server/EntityLiving;)I getMobLooting
	g (Lnet/minecraft/server/ItemStack;)I getRiptide
	getDigSpeedEnchantmentLevel (Lnet/minecraft/server/EntityLiving;)I getBlockEfficiency
	getEnchantmentLevel (Lnet/minecraft/server/Enchantment;Lnet/minecraft/server/ItemStack;)I getItemEnchantmentLevel
	getFireAspectEnchantmentLevel (Lnet/minecraft/server/EntityLiving;)I getFireAspect
	getOxygenEnchantmentLevel (Lnet/minecraft/server/EntityLiving;)I getRespiration
	h (Lnet/minecraft/server/EntityLiving;)Z hasAquaAffinity
	h (Lnet/minecraft/server/ItemStack;)Z hasChanneling
	i (Lnet/minecraft/server/EntityLiving;)Z hasFrostWalker
	i (Lnet/minecraft/server/ItemStack;)Z lambda$getRandomItemWith$6
	j (Lnet/minecraft/server/EntityLiving;)Z hasSoulSpeed
	shouldNotDrop (Lnet/minecraft/server/ItemStack;)Z hasVanishingCurse
acb$1 net/minecraft/server/packs/resources/ProfiledReloadInstance$1
vh$b$a net/minecraft/resources/RegistryReadOps$ResourceAccess$MemoryMap
	a data
	b ids
	c lifecycles
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult; parseElement
	a (Lnet/minecraft/server/IRegistryCustom$Dimension;Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Encoder;ILjava/lang/Object;Lcom/mojang/serialization/Lifecycle;)V add
	a (Lnet/minecraft/server/ResourceKey;)Ljava/util/Collection; listResources
	a (Lnet/minecraft/server/ResourceKey;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair; lambda$parseElement$2
	a (Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/ResourceKey;)Lnet/minecraft/server/MinecraftKey; lambda$listResources$1
	b (Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/ResourceKey;)Z lambda$listResources$0
acm net/minecraft/server/packs/resources/package-info
net/minecraft/server/WorldGenFeatureRandom2Configuration net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRandom2;)Z place
net/minecraft/server/ResourcePackMetaParser net/minecraft/server/packs/metadata/MetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
net/minecraft/server/BehaviorMakeLoveAnimal net/minecraft/world/entity/ai/behavior/AnimalMakeLove
	b partnerType
	c speedModifier
	d spawnChildAtTime
	a (Lnet/minecraft/server/EntityAnimal;)Lnet/minecraft/server/EntityAnimal; getBreedTarget
	a (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityAnimal; lambda$findValidBreedPartner$1
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAnimal;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAnimal;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityAnimal;)Z hasBreedTargetOfRightType
	b (Lnet/minecraft/server/EntityLiving;)Z lambda$findValidBreedPartner$0
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAnimal;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	c (Lnet/minecraft/server/EntityAnimal;)Ljava/util/Optional; findValidBreedPartner
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAnimal;J)V tick
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAnimal;J)V stop
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
net/minecraft/server/WorldProviderNormal net/minecraft/server/level/PlayerRespawnLogic
	a (Lnet/minecraft/server/WorldServer;IIZ)Lnet/minecraft/server/BlockPosition; getOverworldRespawnPos
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkCoordIntPair;Z)Lnet/minecraft/server/BlockPosition; getSpawnPosInChunk
net/minecraft/server/ItemArrow net/minecraft/world/item/ArrowItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityArrow; createArrow
net/minecraft/server/CriterionConditionLocation net/minecraft/advancements/critereon/LocationPredicate
	a ANY
	b LOGGER
	c x
	d y
	e z
	f biome
	g feature
	h dimension
	i smokey
	j light
	k block
	l fluid
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionLocation; fromJson
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonElement;)V lambda$serializeToJson$0
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/ResourceKey; lambda$fromJson$1
	a (Lnet/minecraft/server/ResourceKey;)Lnet/minecraft/server/CriterionConditionLocation; inBiome
	a (Lnet/minecraft/server/StructureGenerator;)Lnet/minecraft/server/CriterionConditionLocation; inFeature
	a (Lnet/minecraft/server/WorldServer;DDD)Z matches
	a (Lnet/minecraft/server/WorldServer;FFF)Z matches
	b (Lnet/minecraft/server/ResourceKey;)Lnet/minecraft/server/CriterionConditionLocation; inDimension
eha$1 net/minecraft/client/renderer/entity/VindicatorRenderer$1
	a this$0
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityVindicator;FFFFFF)V render
net/minecraft/server/PathfinderGoalStrollVillage net/minecraft/world/entity/ai/goal/MoveBackToVillageGoal
	a ()Z canUse
	g ()Lnet/minecraft/server/Vec3D; getPosition
net/minecraft/server/PotionBrewer$PredicatedCombination net/minecraft/world/item/alchemy/PotionBrewing$Mix
	a from
	b ingredient
	c to
	a (Lnet/minecraft/server/PotionBrewer$PredicatedCombination;)Lnet/minecraft/server/RecipeItemStack; access$000
	b (Lnet/minecraft/server/PotionBrewer$PredicatedCombination;)Ljava/lang/Object; access$100
	c (Lnet/minecraft/server/PotionBrewer$PredicatedCombination;)Ljava/lang/Object; access$200
net/minecraft/server/DoubleListOffset net/minecraft/world/phys/shapes/OffsetDoubleList
	a delegate
	b offset
net/minecraft/server/CriterionTriggerPlayerInteractedWithEntity net/minecraft/advancements/critereon/PlayerInteractTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lcf$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Entity;)V trigger
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;Lcf$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/VillagerType net/minecraft/world/entity/npc/VillagerType
	h name
	i BY_BIOME
	a (Ljava/lang/String;)Lnet/minecraft/server/VillagerType; register
	a (Ljava/util/HashMap;)V lambda$static$0
	a (Ljava/util/Optional;)Lnet/minecraft/server/VillagerType; byBiome
	a (Lnet/minecraft/server/ResourceKey;)Ljava/util/Optional; lambda$byBiome$1
cyo$a net/minecraft/world/level/storage/loot/ConstantIntValue$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootValueConstant; deserialize
	a (Lnet/minecraft/server/LootValueConstant;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
adb net/minecraft/server/players/package-info
net/minecraft/server/IEntitySelector net/minecraft/world/entity/EntitySelector
	a ENTITY_STILL_ALIVE
	b LIVING_ENTITY_STILL_ALIVE
	c ENTITY_NOT_BEING_RIDDEN
	d CONTAINER_ENTITY_SELECTOR
	e NO_CREATIVE_OR_SPECTATOR
	f ATTACK_ALLOWED
	g NO_SPECTATORS
	a (DDDD)Ljava/util/function/Predicate; withinDistance
	a (DDDDLnet/minecraft/server/Entity;)Z lambda$withinDistance$5
	a (Lnet/minecraft/server/Entity;)Ljava/util/function/Predicate; pushableBy
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)Z lambda$notRiding$7
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/ScoreboardTeamBase;Lnet/minecraft/server/ScoreboardTeamBase$EnumTeamPush;Lnet/minecraft/server/Entity;)Z lambda$pushableBy$6
	b (Lnet/minecraft/server/Entity;)Ljava/util/function/Predicate; notRiding
	c (Lnet/minecraft/server/Entity;)Z lambda$static$4
	d (Lnet/minecraft/server/Entity;)Z lambda$static$3
	e (Lnet/minecraft/server/Entity;)Z lambda$static$2
	f (Lnet/minecraft/server/Entity;)Z lambda$static$1
	g (Lnet/minecraft/server/Entity;)Z lambda$static$0
net/minecraft/server/ContainerLoom net/minecraft/world/inventory/LoomMenu
	containerAccess access
	craftInventory inputContainer
	d selectedBannerPatternIndex
	e slotUpdateListener
	f bannerSlot
	g dyeSlot
	h patternSlot
	i resultSlot
	j lastSoundTime
	resultInventory outputContainer
	a (Ljava/lang/Runnable;)V registerUpdateListener
	a (Lnet/minecraft/server/ContainerLoom;)Ljava/lang/Runnable; access$000
	a (Lnet/minecraft/server/ContainerLoom;J)J access$402
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;I)Z clickMenuButton
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$removed$1
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	b (Lnet/minecraft/server/ContainerLoom;)Lnet/minecraft/server/Slot; access$100
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	c (Lnet/minecraft/server/ContainerLoom;)Lnet/minecraft/server/Slot; access$200
	d (Lnet/minecraft/server/ContainerLoom;)Lnet/minecraft/server/ContainerProperty; access$300
	e ()I getSelectedBannerPatternIndex
	e (Lnet/minecraft/server/ContainerLoom;)J access$400
	f ()Lnet/minecraft/server/Slot; getBannerSlot
	g ()Lnet/minecraft/server/Slot; getDyeSlot
	h ()Lnet/minecraft/server/Slot; getPatternSlot
	i ()Lnet/minecraft/server/Slot; getResultSlot
	j ()V setupResultSlot
	k ()V lambda$new$0
net/minecraft/server/EntitySquid net/minecraft/world/entity/animal/Squid
	b xBodyRot
	bo zBodyRotO
	bp tentacleMovement
	bq oldTentacleMovement
	br tentacleAngle
	bs oldTentacleAngle
	bt speed
	bu tentacleSpeed
	bv rotateSpeed
	bw tx
	bx ty
	by tz
	c xBodyRotO
	d zBodyRot
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (FFF)V setMovementVector
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntitySquid;)Z access$100
	aB ()Z isMovementNoisy
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkSquidSpawnRules
	dF ()F getSoundVolume
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Z hasMovementVector
	eL ()V spawnInk
	g (Lnet/minecraft/server/Vec3D;)V travel
	i (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; rotateVector
	k ()V aiStep
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	o ()V registerGoals
adf net/minecraft/server/rcon/package-info
net/minecraft/server/TileEntityBeacon net/minecraft/world/level/block/entity/BeaconBlockEntity
	a BEACON_EFFECTS
	b VALID_EFFECTS
	c beamSections
	chestLock lockKey
	containerProperties dataAccess
	customName name
	g checkingBeamSections
	i lastCheckY
	primaryEffect primaryPower
	secondaryEffect secondaryPower
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (I)Lnet/minecraft/server/MobEffectList; access$400
	a (III)V updateBase
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/SoundEffect;)V playSound
	a (Lnet/minecraft/server/TileEntityBeacon;)I access$000
	a (Lnet/minecraft/server/TileEntityBeacon;I)I access$002
	a (Lnet/minecraft/server/TileEntityBeacon;Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/MobEffectList; access$102
	aj_ ()V tick
	al_ ()V setRemoved
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (I)Lnet/minecraft/server/MobEffectList; getValidEffectById
	b (Lnet/minecraft/server/TileEntityBeacon;)Lnet/minecraft/server/MobEffectList; access$100
	b (Lnet/minecraft/server/TileEntityBeacon;Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/MobEffectList; access$202
	c (Lnet/minecraft/server/TileEntityBeacon;)Lnet/minecraft/server/MobEffectList; access$200
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	d (Lnet/minecraft/server/TileEntityBeacon;)Ljava/util/List; access$300
	f ()Ljava/util/List; getBeamSections
	h ()I getLevels
	i ()D getViewDistance
net/minecraft/server/ParticleType net/minecraft/core/particles/SimpleParticleType
	a DESERIALIZER
	b codec
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/server/Particle; getType
	e ()Lcom/mojang/serialization/Codec; codec
	f ()Lnet/minecraft/server/ParticleType; getType
net/minecraft/server/CommandLocate net/minecraft/server/commands/LocateCommand
	a ERROR_FAILED
	a (IIII)F dist
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ljava/util/Map$Entry;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; lambda$showLocateResult$2
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Ljava/lang/String;)I showLocateResult
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/StructureGenerator;)I locate
adk net/minecraft/server/rcon/thread/package-info
cza$a net/minecraft/world/level/storage/loot/RandomValueBounds$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootValueBounds; deserialize
	a (Lnet/minecraft/server/LootValueBounds;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/DataConverterBlockEntityUUID net/minecraft/util/datafix/fixes/BlockEntityUUIDFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateSkull$2
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateSkull
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateConduit
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateSkull$1
adq net/minecraft/sounds/package-info
net/minecraft/server/DataConverterChunkStatus2 net/minecraft/util/datafix/fixes/ChunkStatusFix2
	a RENAMES_AND_DOWNGRADES
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
net/minecraft/server/ContainerGrindstone net/minecraft/world/inventory/GrindstoneMenu
	containerAccess access
	craftInventory repairSlots
	resultInventory resultSlots
	a (Ljava/util/Map$Entry;)Z lambda$removeNonCurses$0
	a (Lnet/minecraft/server/ContainerGrindstone;)Lnet/minecraft/server/IInventory; access$000
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$removed$1
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/ItemStack;II)Lnet/minecraft/server/ItemStack; removeNonCurses
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; mergeEnchants
	e ()V createResult
jp$a net/minecraft/data/structures/SnbtToNbt$Filter
	a (Ljava/lang/String;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; apply
net/minecraft/server/GenLayerRiver net/minecraft/world/level/newbiome/layer/RiverLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
	c (I)I riverFilter
jp$b net/minecraft/data/structures/SnbtToNbt$TaskResult
	a name
	b payload
	c snbtPayload
	d hash
	a (Ljp$b;)Ljava/lang/String; access$000
	b (Ljp$b;)Ljava/lang/String; access$100
	c (Ljp$b;)Ljava/lang/String; access$200
	d (Ljp$b;)[B access$300
net/minecraft/server/EntityBee net/minecraft/world/entity/animal/Bee
	bC beePollinateGoal
	bD goToHiveGoal
	bE goToKnownFlowerGoal
	bF underWaterTicks
	bo DATA_FLAGS_ID
	bp DATA_REMAINING_ANGER_TIME
	bq PERSISTENT_ANGER_TIME
	br persistentAngerTarget
	bs rollAmount
	bt rollAmountO
	bu timeSinceSting
	by remainingCooldownBeforeLocatingNewHive
	bz remainingCooldownBeforeLocatingNewFlower
	cannotEnterHiveTicks stayOutOfHiveCountdown
	flowerPos savedFlowerPos
	ticksSincePollination ticksWithoutNectarSinceExitingHive
	A (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$4000
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	B (Lnet/minecraft/server/EntityBee;)Ljava/util/Random; access$4100
	C (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$4300
	D (Lnet/minecraft/server/EntityBee;)Ljava/util/Random; access$4400
	E (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$4500
	E_ ()I getRemainingPersistentAngerTime
	F (Lnet/minecraft/server/EntityBee;)Ljava/util/Random; access$4600
	F_ ()Ljava/util/UUID; getPersistentAngerTarget
	G (Lnet/minecraft/server/EntityBee;)Ljava/util/Random; access$4700
	G_ ()V startPersistentAngerTimer
	H (Lnet/minecraft/server/EntityBee;)I access$3000
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	I (Lnet/minecraft/server/EntityBee;)Lazx$e; access$4800
	J (Lnet/minecraft/server/EntityBee;)I access$5200
	K (Lnet/minecraft/server/EntityBee;)Ljava/util/Random; access$5300
	L (Lnet/minecraft/server/EntityBee;)Ljava/util/Random; access$5400
	M ()V sendDebugPackets
	M (Lnet/minecraft/server/EntityBee;)V access$5500
	N ()V customServerAiStep
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityBee;)Lazx$k; access$700
	a (Lnet/minecraft/server/EntityBee;I)I access$3002
	a (Lnet/minecraft/server/EntityBee;Lnet/minecraft/server/BlockPosition;)Z access$2400
	a (Lnet/minecraft/server/EntityBee;Lnet/minecraft/server/BlockPosition;I)Z access$1600
	a (Lnet/minecraft/server/EntityBee;Z)V access$4200
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/World;DDDDDLnet/minecraft/server/ParticleParam;)V spawnFluidParticle
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a_ (I)V setRemainingPersistentAngerTime
	ay ()Z makeFlySound
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/BlockPosition;I)Z closerThan
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$900
	b (Lnet/minecraft/server/EntityBee;I)I access$3802
	b (Lnet/minecraft/server/EntityBee;Lnet/minecraft/server/BlockPosition;)V access$2500
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityBee; getBreedOffspring
	c (Lnet/minecraft/server/EntityBee;)Ljava/util/Random; access$1000
	c (Lnet/minecraft/server/EntityBee;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; access$1502
	c (Lnet/minecraft/server/Tag;)V jumpInLiquid
	canPollinate ()Z isTiredOfLookingForNectar
	ce ()Lnet/minecraft/server/Vec3D; getLeashOffset
	d (IZ)V setFlag
	d (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$1100
	d (Lnet/minecraft/server/EntityBee;Lnet/minecraft/server/BlockPosition;)Z access$3300
	dB ()Lnet/minecraft/server/EnumMonsterType; getMobType
	dF ()F getSoundVolume
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$1200
	e (Lnet/minecraft/server/EntityBee;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; access$3202
	eM ()I getTravellingTicks
	eN ()Ljava/util/List; getBlacklistedHives
	eO ()V resetTicksWithoutNectarSinceExitingHive
	eW ()Lnet/minecraft/server/PathfinderGoalSelector; getGoalSelector
	eZ ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	f (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$1300
	f (Lnet/minecraft/server/EntityBee;Lnet/minecraft/server/BlockPosition;)Z access$5100
	fa ()Z isFlying
	fb ()V dropOffNectar
	fd ()Z wantsToEnterHive
	fe ()V updateRollAmount
	ff ()Z isHiveNearFire
	fh ()V resetNumCropsGrownSincePollination
	fi ()V incrementNumCropsGrownSincePollination
	fj ()Z isHiveValid
	fk ()Z isRolling
	g (Lnet/minecraft/server/EntityBee;)Z access$1400
	getFlowerPos ()Lnet/minecraft/server/BlockPosition; getSavedFlowerPos
	getNumCropsGrownSincePollination ()I getCropsGrownSincePollination
	h (Lnet/minecraft/server/BlockPosition;)V pathfindRandomlyTowards
	h (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/BlockPosition; access$1500
	hasFlowerPos ()Z hasSavedFlowerPos
	hasHivePos ()Z hasHive
	i (Lnet/minecraft/server/BlockPosition;)Z doesHiveHaveSpace
	i (Lnet/minecraft/server/EntityBee;)Z access$1800
	j ()V tick
	j (Lnet/minecraft/server/BlockPosition;)Z isTooFarAway
	j (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$1900
	k ()V aiStep
	k (Lnet/minecraft/server/BlockPosition;)Z isFlowerValid
	k (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$2000
	k (Lnet/minecraft/server/ItemStack;)Z isFood
	l (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$2100
	m (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$2200
	n (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$2300
	o ()V registerGoals
	o (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$2600
	p (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$2700
	q (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$2800
	r (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$2900
	s (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$3100
	setCannotEnterHiveTicks (I)V setStayOutOfHiveCountdown
	setFlowerPos (Lnet/minecraft/server/BlockPosition;)V setSavedFlowerPos
	t (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/BlockPosition; access$3200
	u (I)Z getFlag
	u (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$3400
	v (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$3500
	v (Z)V setRolling
	w (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/NavigationAbstract; access$3600
	x (Lnet/minecraft/server/EntityBee;)I access$3700
	y (F)F getRollAmount
	y (Lnet/minecraft/server/EntityBee;)I access$3800
	z (Lnet/minecraft/server/EntityBee;)Ljava/util/Random; access$3900
net/minecraft/server/PacketPlayInArmAnimation net/minecraft/network/protocol/game/ServerboundSwingPacket
	a hand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/EnumHand; getHand
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/Mailbox net/minecraft/util/thread/ProcessorHandle
	a (Ljava/lang/Object;)V tell
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/server/Mailbox; of
	a (Ljava/util/concurrent/CompletableFuture;Lcom/mojang/datafixers/util/Either;)V lambda$askEither$0
	b (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; ask
	bi ()Ljava/lang/String; name
	c (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; askEither
acb$a net/minecraft/server/packs/resources/ProfiledReloadInstance$State
	a name
	b preparationResult
	c reloadResult
	d preparationNanos
	e reloadNanos
	a (Lacb$a;)Lnet/minecraft/server/MethodProfilerResults; access$000
	b (Lacb$a;)Lnet/minecraft/server/MethodProfilerResults; access$100
	c (Lacb$a;)Ljava/util/concurrent/atomic/AtomicLong; access$200
	d (Lacb$a;)Ljava/util/concurrent/atomic/AtomicLong; access$300
	e (Lacb$a;)Ljava/lang/String; access$400
net/minecraft/server/EntityEnderman$PathfinderGoalPlayerWhoLookedAtTarget net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal
	i enderman
	j pendingTarget
	k aggroTime
	l teleportTime
	m startAggroTargetConditions
	n continueAggroTargetConditions
	a ()Z canUse
	a (Lnet/minecraft/server/EntityEnderman;Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/RecipeSingleItem net/minecraft/world/item/crafting/SingleItemRecipe
	e type
	f serializer
	key id
	a ()Lnet/minecraft/server/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	c ()Lnet/minecraft/server/ItemStack; getResultItem
	d ()Ljava/lang/String; getGroup
	f ()Lnet/minecraft/server/MinecraftKey; getId
	g ()Lnet/minecraft/server/Recipes; getType
net/minecraft/server/WorldGenFeatureEmptyConfiguration net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration
	a CODEC
	b INSTANCE
	b ()Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration; lambda$static$0
aea net/minecraft/stats/package-info
ct$a net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance
	a item
	a (Lnet/minecraft/server/CriterionConditionItem;)Lct$a; usedTotem
	a (Lnet/minecraft/server/IMaterial;)Lct$a; usedTotem
	a (Lnet/minecraft/server/ItemStack;)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
net/minecraft/server/GameProfilerFiller net/minecraft/util/profiling/ProfilerFiller
	a ()V startTick
	a (Ljava/util/function/Supplier;)V push
	a (Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;)Lnet/minecraft/server/GameProfilerFiller; tee
	b ()V endTick
	b (Ljava/util/function/Supplier;)V popPush
	c (Ljava/lang/String;)V incrementCounter
	c (Ljava/util/function/Supplier;)V incrementCounter
	enter (Ljava/lang/String;)V push
	exit ()V pop
	exitEnter (Ljava/lang/String;)V popPush
net/minecraft/server/CommandPardon net/minecraft/server/commands/PardonCommand
	a ERROR_NOT_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I pardonPlayers
net/minecraft/server/EntityPose net/minecraft/world/entity/Pose
	h $VALUES
net/minecraft/server/DataConverterEquipment net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix
	a ()Ljava/lang/IllegalStateException; lambda$null$0
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$2
	a (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
net/minecraft/server/StatisticWrapper net/minecraft/stats/StatType
	a registry
	b map
	c displayName
	a (Ljava/lang/Object;)Z contains
	a (Ljava/lang/Object;Lnet/minecraft/server/Counter;)Lnet/minecraft/server/Statistic; get
	a (Lnet/minecraft/server/Counter;Ljava/lang/Object;)Lnet/minecraft/server/Statistic; lambda$get$0
	b ()I size
	b (Ljava/lang/Object;)Lnet/minecraft/server/Statistic; get
	c ()Ljava/lang/String; getTranslationKey
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
aeo net/minecraft/tags/package-info
net/minecraft/server/ProtoChunkExtension net/minecraft/world/level/chunk/ImposterProtoChunk
	a wrapped
	J ()I getMaxLightLevel
	a (J)V setLastSaveTime
	a (Ljava/util/Map;)V setAllStarts
	a (Lnet/minecraft/server/BiomeStorage;)V setBiomes
	a (Lnet/minecraft/server/Block;)Z lambda$getBlockTicks$0
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/server/ChunkStatus;)V setStatus
	a (Lnet/minecraft/server/Entity;)V addEntity
	a (Lnet/minecraft/server/FluidType;)Z lambda$getLiquidTicks$1
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/HeightMap$Type;[J)V setHeightmap
	a (Lnet/minecraft/server/NBTTagCompound;)V setBlockEntityNbt
	a (Lnet/minecraft/server/StructureGenerator;)Lnet/minecraft/server/StructureStart; getStartForFeature
	a (Lnet/minecraft/server/StructureGenerator;J)V addReferenceForFeature
	a (Lnet/minecraft/server/StructureGenerator;Lnet/minecraft/server/StructureStart;)V setStartForFeature
	a (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/BitSet; getCarvingMask
	a (Z)V setUnsaved
	b (Ljava/util/Map;)V setAllReferences
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/BlockPosition; getHeighestPosition
	b (Lnet/minecraft/server/StructureGenerator;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
	b (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/BitSet; getOrCreateCarvingMask
	b (Z)V setLightCorrect
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	c (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap$Type; fixType
	d ()[Lnet/minecraft/server/ChunkSection; getSections
	d (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	e (Lnet/minecraft/server/BlockPosition;)V markPosForPostprocessing
	g ()Lnet/minecraft/server/ChunkCoordIntPair; getPos
	h ()Ljava/util/Map; getAllStarts
	i ()Lnet/minecraft/server/BiomeStorage; getBiomes
	i (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbt
	j ()Z isUnsaved
	j (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbtForSaving
	k ()Lnet/minecraft/server/ChunkStatus; getStatus
	m ()Ljava/util/stream/Stream; getLights
	n ()Lnet/minecraft/server/TickList; getBlockTicks
	o ()Lnet/minecraft/server/TickList; getLiquidTicks
	r ()Z isLightCorrect
	s ()Lnet/minecraft/server/ProtoChunkTickList; getBlockTicks
	t ()Lnet/minecraft/server/ProtoChunkTickList; getLiquidTicks
	u ()Lnet/minecraft/server/Chunk; getWrapped
	v ()Ljava/util/Map; getAllReferences
net/minecraft/server/RegistryWriteOps net/minecraft/resources/RegistryWriteOps
	b registryHolder
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/IRegistryCustom;)Lnet/minecraft/server/RegistryWriteOps; create
	a (Ljava/lang/Object;Ljava/lang/Object;Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult; encode
net/minecraft/server/MinecraftSerializableUUID net/minecraft/core/SerializableUUID
	a CODEC
	a (JJ)[I leastMostToIntArray
	a (Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID; readUUID
	a (Ljava/util/UUID;)[I uuidToIntArray
	a (Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult; lambda$static$0
	a ([I)Ljava/util/UUID; uuidFromIntArray
	b (Ljava/util/UUID;)Ljava/util/stream/IntStream; lambda$static$1
net/minecraft/server/WorldGenFeatureDesertPyramid net/minecraft/world/level/levelgen/feature/DesertPyramidFeature
	a ()Lckx$a; getStartFactory
im$a net/minecraft/data/models/blockstates/Condition$CompositeCondition
	a operation
	b subconditions
	a (Lnet/minecraft/server/BlockStateList;)V validate
	a (Lnet/minecraft/server/BlockStateList;Lim;)V lambda$validate$0
	b ()Lcom/google/gson/JsonElement; get
im$c net/minecraft/data/models/blockstates/Condition$TerminalCondition
	a terms
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/IBlockState;Ljava/lang/String;)V lambda$get$0
	a (Lnet/minecraft/server/BlockStateList;)V validate
	a (Lnet/minecraft/server/BlockStateList;Lnet/minecraft/server/IBlockState;)Z lambda$validate$1
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Lim$c; term
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lim$c; term
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/String;)V putValue
	a (Lnet/minecraft/server/IBlockState;Ljava/util/stream/Stream;)Ljava/lang/String; joinValues
	b ()Lcom/google/gson/JsonElement; get
	b (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Lim$c; negatedTerm
	b (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lim$c; negatedTerm
	c (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String; getTerm
im$b net/minecraft/data/models/blockstates/Condition$Operation
	a AND
	b OR
	c id
	d $VALUES
	a (Lim$b;)Ljava/lang/String; access$000
net/minecraft/server/WorldGenFeatureStateProviderWeighted net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider
	b CODEC
	c weightedList
	a ()Lnet/minecraft/server/WorldGenFeatureStateProviders; type
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getState
	a (Lnet/minecraft/server/IBlockData;I)Lnet/minecraft/server/WorldGenFeatureStateProviderWeighted; add
	a (Lnet/minecraft/server/WeightedList;)Lcom/mojang/serialization/DataResult; create
	a (Lnet/minecraft/server/WorldGenFeatureStateProviderWeighted;)Lnet/minecraft/server/WeightedList; lambda$static$0
net/minecraft/server/EntitySkeleton net/minecraft/world/entity/monster/Skeleton
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/SoundEffect; getStepSound
net/minecraft/server/BehaviorHomeRaid net/minecraft/world/entity/ai/behavior/LocateHidingPlaceDuringRaid
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
net/minecraft/server/FoodInfo net/minecraft/world/food/FoodProperties
	a nutrition
	b saturationModifier
	c isMeat
	d canAlwaysEat
	e fastFood
	f effects
	c ()Z isMeat
	d ()Z canAlwaysEat
	e ()Z isFastFood
	f ()Ljava/util/List; getEffects
crs$1 net/minecraft/world/level/levelgen/structure/StructureStart$1
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenMineshaftConfiguration;)V generatePieces
net/minecraft/server/WorldGenFoilagePlacerDarkOak net/minecraft/world/level/levelgen/feature/foliageplacers/DarkOakFoliagePlacer
	a CODEC
	a ()Lnet/minecraft/server/WorldGenFoilagePlacers; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	a (Ljava/util/Random;ILnet/minecraft/server/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;ILcni$b;IILjava/util/Set;ILnet/minecraft/server/StructureBoundingBox;)V createFoliage
	b (Ljava/util/Random;IIIIZ)Z shouldSkipLocationSigned
afb net/minecraft/util/HeapDumper
	a hotspotMBean
	a ()Lcom/sun/management/HotSpotDiagnosticMXBean; getHotspotMBean
	a (Ljava/lang/String;Z)V dumpHeap
net/minecraft/server/BlockPropertyStairsShape net/minecraft/world/level/block/state/properties/StairsShape
	f name
	g $VALUES
	a ()Ljava/lang/String; getSerializedName
afd net/minecraft/util/InsensitiveStringMap
	a map
	a (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; put
net/minecraft/server/DataConverterSchemaV2509 net/minecraft/util/datafix/schemas/V2509
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/BlockNylium net/minecraft/world/level/block/NyliumBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canBeNylium
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
net/minecraft/server/ItemHoneyBottle net/minecraft/world/item/HoneyBottleItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	ad_ ()Lnet/minecraft/server/SoundEffect; getEatingSound
	ae_ ()Lnet/minecraft/server/SoundEffect; getDrinkingSound
	d_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	e_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
afg net/minecraft/util/LimitedCapacityList
	a items
	b clazz
	c locks
	d size
	e head
	a ()I getSize
	a (Ljava/lang/Object;)Ljava/lang/Object; add
	b ()I getMaxSize
	c ()[Ljava/lang/Object; getItems
net/minecraft/server/ReputationEvent net/minecraft/world/entity/ai/village/ReputationEventType
	a ZOMBIE_VILLAGER_CURED
	b GOLEM_KILLED
	c VILLAGER_HURT
	d VILLAGER_KILLED
	e TRADE
	a (Ljava/lang/String;)Lnet/minecraft/server/ReputationEvent; register
net/minecraft/server/DataConverterSchemaV2522 net/minecraft/util/datafix/schemas/V2522
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/CrashReportCallable net/minecraft/CrashReportDetail
beb$a net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal
	a this$0
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
beb$b net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal
	a this$0
	b copyOwnerTargeting
	a ()Z canUse
	c ()V start
afm net/minecraft/util/SmoothDouble
	a targetValue
	b remainingValue
	c lastAmount
	a ()V reset
	a (DD)D getNewDeltaValue
beb$c net/minecraft/world/entity/monster/Vex$VexMoveControl
	i this$0
	a ()V tick
net/minecraft/server/PacketPlayInEntityAction$EnumPlayerAction net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action
	j $VALUES
beb$d net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal
	a this$0
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
afo net/minecraft/util/StringDecomposer
	a STOP_ITERATION
	a (Ljava/lang/String;)Ljava/lang/String; filterBrokenSurrogates
	a (Ljava/lang/String;ILnet/minecraft/server/ChatModifier;Lnet/minecraft/server/ChatModifier;Lnet/minecraft/server/FormattedStringEmpty;)Z iterateFormatted
	a (Ljava/lang/String;ILnet/minecraft/server/ChatModifier;Lnet/minecraft/server/FormattedStringEmpty;)Z iterateFormatted
	a (Ljava/lang/String;Lnet/minecraft/server/ChatModifier;Lnet/minecraft/server/FormattedStringEmpty;)Z iterate
	a (Ljava/lang/StringBuilder;ILnet/minecraft/server/ChatModifier;I)Z lambda$filterBrokenSurrogates$1
	a (Lnet/minecraft/server/ChatModifier;Lnet/minecraft/server/FormattedStringEmpty;IC)Z feedChar
	a (Lnet/minecraft/server/FormattedStringEmpty;Lnet/minecraft/server/ChatModifier;Ljava/lang/String;)Ljava/util/Optional; lambda$iterateFormatted$0
	a (Lnet/minecraft/server/IChatFormatted;Lnet/minecraft/server/ChatModifier;Lnet/minecraft/server/FormattedStringEmpty;)Z iterateFormatted
	b (Ljava/lang/String;Lnet/minecraft/server/ChatModifier;Lnet/minecraft/server/FormattedStringEmpty;)Z iterateBackwards
	c (Ljava/lang/String;Lnet/minecraft/server/ChatModifier;Lnet/minecraft/server/FormattedStringEmpty;)Z iterateFormatted
net/minecraft/server/WorldGenFeatureJigsaw net/minecraft/world/level/levelgen/feature/JigsawFeature
	u startY
	v doExpansionHack
	w projectStartToHeightmap
	a ()Lckx$a; getStartFactory
	a (Lnet/minecraft/server/StructureGenerator;IILnet/minecraft/server/StructureBoundingBox;IJ)Lnet/minecraft/server/StructureStart; lambda$getStartFactory$0
	a (Lnet/minecraft/server/WorldGenFeatureJigsaw;)I access$000
	b (Lnet/minecraft/server/WorldGenFeatureJigsaw;)Z access$100
	c (Lnet/minecraft/server/WorldGenFeatureJigsaw;)Z access$200
bdp$1 net/minecraft/world/entity/monster/Phantom$1
net/minecraft/server/PathfinderGoalOfferFlower net/minecraft/world/entity/ai/goal/OfferFlowerGoal
	a OFFER_TARGER_CONTEXT
	b golem
	c villager
	d tick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
afv net/minecraft/util/VisibleForDebug
net/minecraft/server/Enchantments net/minecraft/world/item/enchantment/Enchantments
	ARROW_DAMAGE POWER_ARROWS
	ARROW_FIRE FLAMING_ARROWS
	ARROW_INFINITE INFINITY_ARROWS
	ARROW_KNOCKBACK PUNCH_ARROWS
	DAMAGE_ALL SHARPNESS
	DAMAGE_ARTHROPODS BANE_OF_ARTHROPODS
	DAMAGE_UNDEAD SMITE
	DIG_SPEED BLOCK_EFFICIENCY
	DURABILITY UNBREAKING
	LOOT_BONUS_BLOCKS BLOCK_FORTUNE
	LOOT_BONUS_MOBS MOB_LOOTING
	LUCK FISHING_LUCK
	LURE FISHING_SPEED
	M ARMOR_SLOTS
	OXYGEN RESPIRATION
	PROTECTION_ENVIRONMENTAL ALL_DAMAGE_PROTECTION
	PROTECTION_EXPLOSIONS BLAST_PROTECTION
	PROTECTION_FALL FALL_PROTECTION
	PROTECTION_FIRE FIRE_PROTECTION
	PROTECTION_PROJECTILE PROJECTILE_PROTECTION
	SWEEPING SWEEPING_EDGE
	WATER_WORKER AQUA_AFFINITY
	a (Ljava/lang/String;Lnet/minecraft/server/Enchantment;)Lnet/minecraft/server/Enchantment; register
net/minecraft/server/ProcessorLists net/minecraft/data/worldgen/ProcessorLists
	A BRIDGE
	B ROOF
	C HIGH_WALL
	D HIGH_RAMPART
	E ADD_GILDED_BLACKSTONE
	F REMOVE_GILDED_BLACKSTONE
	a EMPTY
	b ZOMBIE_PLAINS
	c ZOMBIE_SAVANNA
	d ZOMBIE_SNOWY
	e ZOMBIE_TAIGA
	f ZOMBIE_DESERT
	g MOSSIFY_10_PERCENT
	h MOSSIFY_20_PERCENT
	i MOSSIFY_70_PERCENT
	j STREET_PLAINS
	k STREET_SAVANNA
	l STREET_SNOWY_OR_TAIGA
	m FARM_PLAINS
	n FARM_SAVANNA
	o FARM_SNOWY
	p FARM_TAIGA
	q FARM_DESERT
	r OUTPOST_ROT
	s BOTTOM_RAMPART
	t TREASURE_ROOMS
	u HOUSING
	v SIDE_WALL_DEGRADATION
	w STABLE_DEGRADATION
	x BASTION_GENERIC_DEGRADATION
	y RAMPART_DEGRADATION
	z ENTRANCE_REPLACEMENT
	a (Ljava/lang/String;Lcom/google/common/collect/ImmutableList;)Lnet/minecraft/server/ProcessorList; register
net/minecraft/server/DataConverterSchemaV2519 net/minecraft/util/datafix/schemas/V2519
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/BlockAnvil net/minecraft/world/level/block/AnvilBlock
	b BASE
	c X_LEG1
	d X_LEG2
	e X_TOP
	f Z_LEG1
	g Z_LEG2
	h Z_TOP
	i X_AXIS_AABB
	j Z_AXIS_AABB
	k CONTAINER_TITLE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/EntityFallingBlock;)V falling
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$getMenuProvider$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityFallingBlock;)V onBroken
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityFallingBlock;)V onLand
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; damage
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getDustColor
net/minecraft/server/BehaviorAttack net/minecraft/world/entity/ai/behavior/MeleeAttack
	b cooldownBetweenAttacks
	a (Lnet/minecraft/server/EntityInsentient;)Z isHoldingUsableProjectileWeapon
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/Item;)Z lambda$isHoldingUsableProjectileWeapon$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/EntityLiving; getAttackTarget
aeh$a net/minecraft/tags/StaticTagHelper$Wrapper
	a name
	b tag
	a ()Lnet/minecraft/server/MinecraftKey; getName
	a (Ljava/lang/Object;)Z contains
	a (Ljava/util/function/Function;)V rebind
	b ()Ljava/util/List; getValues
	c ()Lnet/minecraft/server/Tag; resolve
bba$a net/minecraft/world/entity/animal/horse/Horse$HorseGroupData
	a variant
net/minecraft/server/WorldPersistentData net/minecraft/world/level/storage/DimensionDataStorage
	a LOGGER
	c fixerUpper
	d dataFolder
	data cache
	a ()V save
	a (Ljava/io/PushbackInputStream;)Z isGzip
	a (Ljava/lang/String;)Ljava/io/File; getDataFile
	a (Ljava/lang/String;I)Lnet/minecraft/server/NBTTagCompound; readTagFromDisk
	a (Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/server/PersistentBase; computeIfAbsent
	a (Lnet/minecraft/server/PersistentBase;)V set
	b (Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/server/PersistentBase; get
	c (Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/server/PersistentBase; readSavedData
agv net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw
	a name
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/DSL$TypeReference;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
	b (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
net/minecraft/server/ArgumentEntity net/minecraft/commands/arguments/EntityArgument
	a ERROR_NOT_SINGLE_ENTITY
	b ERROR_NOT_SINGLE_PLAYER
	c ERROR_ONLY_PLAYERS_ALLOWED
	d NO_ENTITIES_FOUND
	e NO_PLAYERS_FOUND
	f ERROR_SELECTORS_NOT_ALLOWED
	g EXAMPLES
	h single
	i playersOnly
	a ()Lnet/minecraft/server/ArgumentEntity; entity
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/EntitySelector; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/Entity; getEntity
	a (Lnet/minecraft/server/ArgumentEntity;)Z access$000
	a (Lnet/minecraft/server/ICompletionProvider;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V lambda$listSuggestions$0
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getEntities
	b (Lnet/minecraft/server/ArgumentEntity;)Z access$100
	c ()Lnet/minecraft/server/ArgumentEntity; player
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getOptionalEntities
	d ()Lnet/minecraft/server/ArgumentEntity; players
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getOptionalPlayers
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/EntityPlayer; getPlayer
	f (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getPlayers
	multipleEntities ()Lnet/minecraft/server/ArgumentEntity; entities
net/minecraft/server/ItemDebugStick net/minecraft/world/item/DebugStickItem
	a (Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object; getRelative
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/ItemStack;)V handleInteraction
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IChatBaseComponent;)V message
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;)Ljava/lang/String; getNameHelper
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;Z)Lnet/minecraft/server/IBlockData; cycleState
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)Z canAttackBlock
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	e (Lnet/minecraft/server/ItemStack;)Z isFoil
net/minecraft/server/ToolMaterial net/minecraft/world/item/Tier
	a ()I getUses
	b ()F getSpeed
	c ()F getAttackDamageBonus
	d ()I getLevel
	e ()I getEnchantmentValue
	f ()Lnet/minecraft/server/RecipeItemStack; getRepairIngredient
dxn$c net/minecraft/client/particle/FireworkParticles$SparkParticle
	D flicker
	E engine
	F fadeR
	G fadeG
	H fadeB
	I hasFade
	b trail
	a ()V tick
	a (Ldfn;Ldjh;F)V render
	a (Z)V setTrail
	b (Z)V setFlicker
ced$d net/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate
dxn$b net/minecraft/client/particle/FireworkParticles$OverlayParticle
	a (Ldfn;Ldjh;F)V render
	b ()Ldyc; getRenderType
	b (F)F getQuadSize
ced$e net/minecraft/world/level/block/state/BlockBehaviour$StatePredicate
dxn$e net/minecraft/client/particle/FireworkParticles$Starter
	B explosions
	C twinkleDelay
	a life
	b engine
	a ()V tick
	a (DDDDDD[I[IZZ)V createParticle
	a (DI[I[IZZ)V createParticleBall
	a (D[[D[I[IZZZ)V createParticleShape
	a ([I[IZZ)V createParticleBurst
	c ()Z isFarAwayFromCamera
net/minecraft/server/PacketListener net/minecraft/network/PacketListener
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
net/minecraft/server/CommandScoreboard net/minecraft/server/commands/ScoreboardCommand
	a ERROR_OBJECTIVE_ALREADY_EXISTS
	b ERROR_DISPLAY_SLOT_ALREADY_EMPTY
	c ERROR_DISPLAY_SLOT_ALREADY_SET
	d ERROR_TRIGGER_ALREADY_ENABLED
	e ERROR_NOT_TRIGGER
	f ERROR_NO_VALUE
	a ()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; createRenderTypeModify
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$17
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listTrackedPlayers
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I clearDisplaySlot
	a (Lnet/minecraft/server/CommandListenerWrapper;ILnet/minecraft/server/ScoreboardObjective;)I setDisplaySlot
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I listTrackedPlayerScores
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/server/IScoreboardCriteria;Lnet/minecraft/server/IChatBaseComponent;)I addObjective
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)I getScore
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I resetScores
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTriggers
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;)I enableTrigger
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;I)I setScore
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;Ldv$a;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;)I performOperation
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardObjective;)I removeObjective
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardObjective;Lnet/minecraft/server/IChatBaseComponent;)I setDisplayName
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardObjective;Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay;)I setRenderType
	a (Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay;Lcom/mojang/brigadier/context/CommandContext;)I lambda$createRenderTypeModify$20
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	b (Lnet/minecraft/server/CommandListenerWrapper;)I listObjectives
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;)I resetScore
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;I)I addScore
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	c (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$1
	c (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;I)I removeScore
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
dxn$d net/minecraft/client/particle/FireworkParticles$SparkProvider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/Blocks net/minecraft/world/level/block/Blocks
	cP POLISHED_BASALT
	A (Lnet/minecraft/server/IBlockData;)I lambda$static$7
	B (Lnet/minecraft/server/IBlockData;)I lambda$static$6
	a ()V rebuildCache
	a (I)Ljava/util/function/ToIntFunction; litBlockEmission
	a (ILnet/minecraft/server/IBlockData;)I lambda$litBlockEmission$0
	a (Ljava/lang/String;Lnet/minecraft/server/Block;)Lnet/minecraft/server/Block; register
	a (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/BlockBed; bed
	a (Lnet/minecraft/server/EnumColor;Lnet/minecraft/server/BlockBase$Info;)Lnet/minecraft/server/BlockShulkerBox; shulkerBox
	a (Lnet/minecraft/server/EnumColor;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/MaterialMapColor; lambda$bed$1
	a (Lnet/minecraft/server/IBlockData;)I lambda$static$39
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z always
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Ljava/lang/Boolean; never
	a (Lnet/minecraft/server/MaterialMapColor;)Lnet/minecraft/server/Block; netherStem
	a (Lnet/minecraft/server/MaterialMapColor;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/MaterialMapColor; lambda$netherStem$3
	a (Lnet/minecraft/server/MaterialMapColor;Lnet/minecraft/server/MaterialMapColor;)Lnet/minecraft/server/BlockRotatable; log
	a (Lnet/minecraft/server/MaterialMapColor;Lnet/minecraft/server/MaterialMapColor;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/MaterialMapColor; lambda$log$2
	a (Z)Lnet/minecraft/server/BlockPiston; pistonBase
	b ()Lnet/minecraft/server/BlockLeaves; leaves
	b (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/BlockStainedGlass; stainedGlass
	b (Lnet/minecraft/server/IBlockData;)I lambda$static$38
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z never
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Ljava/lang/Boolean; always
	c ()Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$static$36
	c (Lnet/minecraft/server/IBlockData;)I lambda$static$37
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z lambda$pistonBase$5
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Ljava/lang/Boolean; ocelotOrParrot
	d ()Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$static$35
	d (Lnet/minecraft/server/IBlockData;)I lambda$static$34
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z lambda$shulkerBox$4
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z lambda$static$30
	e ()Lnet/minecraft/server/TileEntityTypes; lambda$static$12
	e (Lnet/minecraft/server/IBlockData;)I lambda$static$33
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z lambda$static$28
	f (Lnet/minecraft/server/IBlockData;)I lambda$static$32
	f (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z lambda$static$13
	g (Lnet/minecraft/server/IBlockData;)I lambda$static$31
	h (Lnet/minecraft/server/IBlockData;)I lambda$static$29
	i (Lnet/minecraft/server/IBlockData;)I lambda$static$27
	j (Lnet/minecraft/server/IBlockData;)I lambda$static$26
	k (Lnet/minecraft/server/IBlockData;)I lambda$static$25
	l (Lnet/minecraft/server/IBlockData;)I lambda$static$24
	m (Lnet/minecraft/server/IBlockData;)I lambda$static$23
	n (Lnet/minecraft/server/IBlockData;)I lambda$static$22
	o (Lnet/minecraft/server/IBlockData;)I lambda$static$21
	p (Lnet/minecraft/server/IBlockData;)I lambda$static$20
	q (Lnet/minecraft/server/IBlockData;)I lambda$static$19
	r (Lnet/minecraft/server/IBlockData;)I lambda$static$18
	s (Lnet/minecraft/server/IBlockData;)I lambda$static$17
	t (Lnet/minecraft/server/IBlockData;)I lambda$static$16
	u (Lnet/minecraft/server/IBlockData;)I lambda$static$15
	v (Lnet/minecraft/server/IBlockData;)I lambda$static$14
	w (Lnet/minecraft/server/IBlockData;)I lambda$static$11
	x (Lnet/minecraft/server/IBlockData;)I lambda$static$10
	y (Lnet/minecraft/server/IBlockData;)I lambda$static$9
	z (Lnet/minecraft/server/IBlockData;)I lambda$static$8
net/minecraft/server/UtilColor net/minecraft/util/StringUtil
	a STRIP_COLOR_PATTERN
	a (I)Ljava/lang/String; formatTickDuration
	a (Ljava/lang/String;)Ljava/lang/String; stripColor
	a (Ljava/lang/String;IZ)Ljava/lang/String; truncateStringIfNecessary
	b (Ljava/lang/String;)Z isNullOrEmpty
net/minecraft/server/LootEntryAbstract$Serializer net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootEntryAbstract; deserialize
	b (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
	deserializeType (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEntryAbstract; deserializeCustom
	serializeType (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
net/minecraft/server/WorldGenCarvers net/minecraft/data/worldgen/Carvers
	a CAVE
	b CANYON
	c OCEAN_CAVE
	d UNDERWATER_CANYON
	e UNDERWATER_CAVE
	f NETHER_CAVE
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenCarverWrapper;)Lnet/minecraft/server/WorldGenCarverWrapper; register
dxn$a net/minecraft/client/particle/FireworkParticles$FlashProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/WorldGenDecoratorSpread32Above net/minecraft/world/level/levelgen/placement/Spread32Decorator
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/FeatureSizeType net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType
	a TWO_LAYERS_FEATURE_SIZE
	b THREE_LAYERS_FEATURE_SIZE
	c codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/FeatureSizeType; register
cuk$1 net/minecraft/world/level/lighting/LayerLightSectionStorage$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/EntityHorseChestedAbstract net/minecraft/world/entity/animal/horse/AbstractChestedHorse
	bw DATA_ID_CHEST
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bb ()D getPassengersRidingOffset
	dm ()V dropEquipment
	e ()V defineSynchedData
	eK ()V randomizeAttributes
	eL ()Lnet/minecraft/server/AttributeProvider$Builder; createBaseChestedHorseAttributes
	eN ()I getInventorySize
	eO ()V playChestEquipsSound
	eU ()I getInventoryColumns
	isCarryingChest ()Z hasChest
	setCarryingChest (Z)V setChest
net/minecraft/server/LootValueBounds net/minecraft/world/level/storage/loot/RandomValueBounds
	d min
	e max
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (F)Lnet/minecraft/server/LootValueBounds; exactly
	a (FF)Lnet/minecraft/server/LootValueBounds; between
	a (I)Z matchesValue
	a (Ljava/util/Random;)I getInt
	a (Lnet/minecraft/server/LootValueBounds;)F access$000
	b ()F getMin
	b (Ljava/util/Random;)F getFloat
	b (Lnet/minecraft/server/LootValueBounds;)F access$100
	c ()F getMax
net/minecraft/server/VillagerData net/minecraft/world/entity/npc/VillagerData
	a CODEC
	b NEXT_LEVEL_XP_THRESHOLDS
	c type
	d profession
	e level
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lnet/minecraft/server/VillagerData;)Ljava/lang/Integer; lambda$null$4
	b (I)I getMinXpPerLevel
	b (Lnet/minecraft/server/VillagerData;)Lnet/minecraft/server/VillagerProfession; lambda$null$3
	c (I)I getMaxXpPerLevel
	c (Lnet/minecraft/server/VillagerData;)Lnet/minecraft/server/VillagerType; lambda$null$1
	d ()Lnet/minecraft/server/VillagerProfession; lambda$null$2
	d (I)Z canLevelUp
	e ()Lnet/minecraft/server/VillagerType; lambda$null$0
	withLevel (I)Lnet/minecraft/server/VillagerData; setLevel
	withProfession (Lnet/minecraft/server/VillagerProfession;)Lnet/minecraft/server/VillagerData; setProfession
	withType (Lnet/minecraft/server/VillagerType;)Lnet/minecraft/server/VillagerData; setType
cc$a net/minecraft/advancements/critereon/NetherTravelTrigger$TriggerInstance
	a entered
	b exited
	c distance
	a (Lnet/minecraft/server/CriterionConditionDistance;)Lcc$a; travelledThroughNether
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Vec3D;DDD)Z matches
net/minecraft/server/ShapeDetectorBuilder net/minecraft/world/level/block/state/pattern/BlockPatternBuilder
	a COMMA_JOINED
	b pattern
	c lookup
	d height
	e width
	a ()Lnet/minecraft/server/ShapeDetectorBuilder; start
	a (CLjava/util/function/Predicate;)Lnet/minecraft/server/ShapeDetectorBuilder; where
	a ([Ljava/lang/String;)Lnet/minecraft/server/ShapeDetectorBuilder; aisle
	b ()Lnet/minecraft/server/ShapeDetector; build
	c ()[[[Ljava/util/function/Predicate; createPattern
	d ()V ensureAllCharactersMatched
dak$1 net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$1
	a $SwitchMap$net$minecraft$world$entity$ai$attributes$AttributeModifier$Operation
dmn$a net/minecraft/client/gui/components/toasts/Toast$Visibility
	a SHOW
	b HIDE
	c soundEvent
	d $VALUES
	a (Lenm;)V playSound
net/minecraft/server/DragonControllerCharge net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase
	b LOGGER
	c targetLocation
	d timeSinceCharge
	a (Lnet/minecraft/server/Vec3D;)V setTarget
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
net/minecraft/server/DataConverterBeehive net/minecraft/util/datafix/fixes/BeehivePoiRenameFix
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/server/EnumMainHand net/minecraft/world/entity/HumanoidArm
	c name
	d $VALUES
	a ()Lnet/minecraft/server/EnumMainHand; getOpposite
	b ()Lnet/minecraft/server/IChatBaseComponent; getName
net/minecraft/server/CriterionConditionEnchantments net/minecraft/advancements/critereon/EnchantmentPredicate
	a ANY
	b NONE
	c enchantment
	d level
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionEnchantments; fromJson
	a (Ljava/util/Map;)Z containedIn
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
	b (Lcom/google/gson/JsonElement;)[Lnet/minecraft/server/CriterionConditionEnchantments; fromJsonArray
azv$a net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData
	a leader
net/minecraft/server/DataConverterRecipeRename net/minecraft/util/datafix/fixes/RecipesRenameningFix
	a RECIPES
	a (Ljava/lang/String;)Ljava/lang/String; lambda$new$0
net/minecraft/server/LightEngineThreaded$Update net/minecraft/server/level/ThreadedLevelLightEngine$TaskType
	c $VALUES
net/minecraft/server/IWorldInventory net/minecraft/world/WorldlyContainer
net/minecraft/server/BehaviorInteractDoor net/minecraft/world/entity/ai/behavior/InteractWithDoor
	b lastCheckedNode
	c remainingCooldown
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z lambda$areOtherMobsComingThroughDoor$1
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$areOtherMobsComingThroughDoor$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z lambda$areOtherMobsComingThroughDoor$2
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BlockPosition;)Z areOtherMobsComingThroughDoor
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/GlobalPos;)Z isDoorTooFarAway
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)V closeDoorsThatIHaveOpenedOrPassedThrough
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BlockPosition;)Z isMobComingThroughDoor
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BlockPosition;)V rememberDoorToClose
net/minecraft/server/BehaviorHuntHoglin net/minecraft/world/entity/monster/piglin/StartHuntingHoglin
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityPiglin;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityPiglin;J)V start
bwo$1 net/minecraft/world/level/block/FenceGateBlock$1
	a $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
acs$1 net/minecraft/server/players/PlayerList$1
	a this$0
	a (Lnet/minecraft/server/WorldBorder;D)V onBorderSizeSet
	a (Lnet/minecraft/server/WorldBorder;DD)V onBorderCenterSet
	a (Lnet/minecraft/server/WorldBorder;DDJ)V onBorderSizeLerping
	a (Lnet/minecraft/server/WorldBorder;I)V onBorderSetWarningTime
	b (Lnet/minecraft/server/WorldBorder;D)V onBorderSetDamagePerBlock
	b (Lnet/minecraft/server/WorldBorder;I)V onBorderSetWarningBlocks
	c (Lnet/minecraft/server/WorldBorder;D)V onBorderSetDamageSafeZOne
net/minecraft/server/LootItemFunctionUser net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder
	b (Ldag$a;)Ljava/lang/Object; apply
	c ()Ljava/lang/Object; unwrap
net/minecraft/server/DataConverterPOIRebuild net/minecraft/util/datafix/fixes/ForcePoiRebuild
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; cap
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	b (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$cap$4
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
dak$d net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetAttribute; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetAttribute;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
dak$b net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier
	a name
	b attribute
	c operation
	d amount
	e id
	f slots
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldak$b; deserialize
	a (Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonObject; serialize
	a (Ldak$b;)Ljava/util/UUID; access$000
	a (Ljava/lang/String;)Lnet/minecraft/server/AttributeModifier$Operation; operationFromString
	a (Lnet/minecraft/server/AttributeModifier$Operation;)Ljava/lang/String; operationToString
	b (Ldak$b;)[Lnet/minecraft/server/EnumItemSlot; access$100
	c (Ldak$b;)Lnet/minecraft/server/AttributeBase; access$200
	d (Ldak$b;)Ljava/lang/String; access$300
	e (Ldak$b;)Lnet/minecraft/server/LootValueBounds; access$400
	f (Ldak$b;)Lnet/minecraft/server/AttributeModifier$Operation; access$500
bq$a net/minecraft/advancements/critereon/ItemPredicate$Builder
	a enchantments
	b storedEnchantments
	c item
	d tag
	e count
	f durability
	g potion
	h nbt
	a ()Lbq$a; item
	a (Lnet/minecraft/server/CriterionConditionEnchantments;)Lbq$a; hasEnchantment
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lbq$a; withCount
	a (Lnet/minecraft/server/IMaterial;)Lbq$a; of
	a (Lnet/minecraft/server/NBTTagCompound;)Lbq$a; hasNbt
	a (Lnet/minecraft/server/PotionRegistry;)Lbq$a; isPotion
	a (Lnet/minecraft/server/Tag;)Lbq$a; of
	b ()Lnet/minecraft/server/CriterionConditionItem; build
	b (Lnet/minecraft/server/CriterionConditionEnchantments;)Lbq$a; hasStoredEnchantment
	b (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lbq$a; hasDurability
dak$c net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder
	a name
	b attribute
	c operation
	d amount
	e id
	f slots
	a ()Ldak$b; build
	a (Ljava/util/UUID;)Ldak$c; withUuid
	a (Lnet/minecraft/server/EnumItemSlot;)Ldak$c; forSlot
dak$a net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder
	a modifiers
	a ()Ldak$a; getThis
	a (Ldak$c;)Ldak$a; withModifier
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Ldaf$a; getThis
net/minecraft/server/GenLayerCleaner net/minecraft/world/level/newbiome/layer/RiverInitLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
net/minecraft/server/BiomeSettings net/minecraft/data/worldgen/BiomeDefaultFeatures
	A (Lbst$a;)V addSavannaTrees
	B (Lbst$a;)V addShatteredSavannaTrees
	C (Lbst$a;)V addMountainTrees
	D (Lbst$a;)V addMountainEdgeTrees
	E (Lbst$a;)V addJungleTrees
	F (Lbst$a;)V addJungleEdgeTrees
	G (Lbst$a;)V addBadlandsTrees
	H (Lbst$a;)V addSnowyTrees
	I (Lbst$a;)V addJungleGrass
	J (Lbst$a;)V addSavannaGrass
	K (Lbst$a;)V addShatteredSavannaGrass
	L (Lbst$a;)V addSavannaExtraGrass
	M (Lbst$a;)V addBadlandGrass
	N (Lbst$a;)V addForestFlowers
	O (Lbst$a;)V addForestGrass
	P (Lbst$a;)V addSwampVegetation
	Q (Lbst$a;)V addMushroomFieldVegetation
	R (Lbst$a;)V addPlainVegetation
	S (Lbst$a;)V addDesertVegetation
	T (Lbst$a;)V addGiantTaigaVegetation
	U (Lbst$a;)V addDefaultFlowers
	V (Lbst$a;)V addWarmFlowers
	W (Lbst$a;)V addDefaultGrass
	X (Lbst$a;)V addTaigaGrass
	Y (Lbst$a;)V addPlainGrass
	Z (Lbst$a;)V addDefaultMushrooms
	a (Lbst$a;)V addDefaultOverworldLandMesaStructures
	a (Lbtd$a;)V farmAnimals
	a (Lbtd$a;II)V warmOceanSpawns
	a (Lbtd$a;III)V oceanSpawns
	aa (Lbst$a;)V addDefaultExtraVegetation
	ab (Lbst$a;)V addBadlandExtraVegetation
	ac (Lbst$a;)V addJungleExtraVegetation
	ad (Lbst$a;)V addDesertExtraVegetation
	ae (Lbst$a;)V addSwampExtraVegetation
	af (Lbst$a;)V addDesertExtraDecoration
	ag (Lbst$a;)V addFossilDecoration
	ah (Lbst$a;)V addColdOceanExtraVegetation
	ai (Lbst$a;)V addDefaultSeagrass
	aj (Lbst$a;)V addLukeWarmKelp
	ak (Lbst$a;)V addDefaultSprings
	al (Lbst$a;)V addIcebergs
	am (Lbst$a;)V addBlueIce
	an (Lbst$a;)V addSurfaceFreezing
	ao (Lbst$a;)V addNetherDefaultOres
	ap (Lbst$a;)V addAncientDebris
	b (Lbst$a;)V addDefaultOverworldLandStructures
	b (Lbtd$a;)V ambientSpawns
	b (Lbtd$a;III)V monsters
	c (Lbst$a;)V addDefaultOverworldOceanStructures
	c (Lbtd$a;)V commonSpawns
	d (Lbst$a;)V addDefaultCarvers
	d (Lbtd$a;)V plainsSpawns
	e (Lbst$a;)V addOceanCarvers
	e (Lbtd$a;)V snowySpawns
	f (Lbst$a;)V addDefaultLakes
	f (Lbtd$a;)V desertSpawns
	g (Lbst$a;)V addDesertLakes
	g (Lbtd$a;)V mooshroomSpawns
	h (Lbst$a;)V addDefaultMonsterRoom
	h (Lbtd$a;)V baseJungleSpawns
	i (Lbst$a;)V addDefaultUndergroundVariety
	i (Lbtd$a;)V endSpawns
	j (Lbst$a;)V addDefaultOres
	k (Lbst$a;)V addExtraGold
	l (Lbst$a;)V addExtraEmeralds
	m (Lbst$a;)V addInfestedStone
	n (Lbst$a;)V addDefaultSoftDisks
	o (Lbst$a;)V addSwampClayDisk
	p (Lbst$a;)V addMossyStoneBlock
	q (Lbst$a;)V addFerns
	r (Lbst$a;)V addBerryBushes
	s (Lbst$a;)V addSparseBerryBushes
	t (Lbst$a;)V addLightBambooVegetation
	u (Lbst$a;)V addBambooVegetation
	v (Lbst$a;)V addTaigaTrees
	w (Lbst$a;)V addWaterTrees
	x (Lbst$a;)V addBirchTrees
	y (Lbst$a;)V addOtherBirchTrees
	z (Lbst$a;)V addTallBirchTrees
net/minecraft/server/CommandTag net/minecraft/server/commands/TagCommand
	a ERROR_ADD_FAILED
	b ERROR_REMOVE_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$2
	a (Ljava/util/Collection;)Ljava/util/Collection; getTags
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I listTags
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Ljava/lang/String;)I addTag
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Ljava/lang/String;)I removeTag
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/TileEntityChest net/minecraft/world/level/block/entity/ChestBlockEntity
	a openness
	b oOpenness
	j tickInterval
	viewingCount openCount
	Z_ ()I getContainerSize
	a (F)F getOpenNess
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getOpenCount
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/NonNullList;)V setItems
	a (Lnet/minecraft/server/TileEntityChest;Lnet/minecraft/server/TileEntityChest;)V swapContents
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/TileEntityContainer;III)I getOpenCount
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/TileEntityContainer;IIIII)I getOpenCount
	a_ (II)Z triggerEvent
	aj_ ()V tick
	b_ (Lnet/minecraft/server/EntityHuman;)V stopOpen
	c_ (Lnet/minecraft/server/EntityHuman;)V startOpen
	f ()Lnet/minecraft/server/NonNullList; getItems
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	onOpen ()V signalOpenCount
	playOpenSound (Lnet/minecraft/server/SoundEffect;)V playSound
net/minecraft/server/CommandPardonIP net/minecraft/server/commands/PardonIpCommand
	a ERROR_INVALID
	b ERROR_NOT_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I unban
net/minecraft/server/BlockPotatoes net/minecraft/world/level/block/PotatoBlock
	a SHAPE_BY_AGE
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	e ()Lnet/minecraft/server/IMaterial; getBaseSeedId
net/minecraft/server/InventoryCrafting net/minecraft/world/inventory/CraftingContainer
	b width
	c height
	container menu
	X_ ()V setChanged
	Y_ ()V clearContent
	Z_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (II)Lnet/minecraft/server/ItemStack; getItem
	c ()Z isEmpty
	f ()I getHeight
	g ()I getWidth
czr$a net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder
	a entries
	a ()Lczr$a; getThis
	b ()Lnet/minecraft/server/LootEntryAbstract; build
	c (Lczn$a;)Lczr$a; then
	d ()Lczn$a; getThis
bfv$a net/minecraft/world/entity/player/StackedContents$RecipePicker
	a this$0
	b recipe
	c ingredients
	d ingredientCount
	e items
	f itemCount
	g data
	h path
	a ()[I getUniqueAvailableIngredientItems
	a (I)Z dfs
	a (ILit/unimi/dsi/fastutil/ints/IntList;)Z tryPick
	a (ZI)V visit
	a (ZII)Z hasConnection
	b ()I getMinIngredientCount
	b (I)Z isSatisfied
	b (ILit/unimi/dsi/fastutil/ints/IntList;)I tryPickAll
	b (ZI)Z hasVisited
	b (ZII)Z hasResidual
	c (I)V setSatisfied
	c (ZI)I getVisitedIndex
	c (ZII)V toggleResidual
	d (I)I getSatisfiedIndex
	d (ZII)I getIndex
net/minecraft/server/PacketPlayOutWorldEvent net/minecraft/network/protocol/game/ClientboundLevelEventPacket
	a type
	b pos
	c data
	d globalEvent
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Z isGlobalEvent
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getType
	d ()I getData
	e ()Lnet/minecraft/server/BlockPosition; getPos
dyq$a net/minecraft/client/particle/SuspendedParticle$CrimsonSporeProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/BehaviorAdmireTimeout net/minecraft/world/entity/monster/piglin/StopAdmiringIfTiredOfTryingToReachItem
	b maxTimeToReachItem
	c disableTime
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityPiglin;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityPiglin;J)V start
net/minecraft/server/LootEntryType net/minecraft/world/level/storage/loot/entries/LootPoolEntryType
dyq$c net/minecraft/client/particle/SuspendedParticle$WarpedSporeProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dyq$b net/minecraft/client/particle/SuspendedParticle$UnderwaterProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
cfg$a net/minecraft/world/level/block/state/properties/Property$Value
	a property
	b value
	a ()Lnet/minecraft/server/IBlockState; getProperty
	b ()Ljava/lang/Comparable; value
aqk$1 net/minecraft/world/entity/Mob$1
	a $SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	b $SwitchMap$net$minecraft$world$entity$EquipmentSlot
net/minecraft/server/ItemElytra net/minecraft/world/item/ElytraItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	d (Lnet/minecraft/server/ItemStack;)Z isFlyEnabled
an$a net/minecraft/advancements/critereon/BlockPredicate$Builder
	a block
	b blocks
	c properties
	d nbt
	a ()Lan$a; block
	a (Lnet/minecraft/server/Block;)Lan$a; of
	a (Lnet/minecraft/server/CriterionTriggerProperties;)Lan$a; setProperties
	a (Lnet/minecraft/server/NBTTagCompound;)Lan$a; hasNbt
	a (Lnet/minecraft/server/Tag;)Lan$a; of
	b ()Lnet/minecraft/server/CriterionConditionBlock; build
net/minecraft/server/DimensionManager net/minecraft/world/level/dimension/DimensionType
	E brightnessRamp
	OVERWORLD OVERWORLD_LOCATION
	OVERWORLD_IMPL DEFAULT_OVERWORLD
	OVERWORLD_KEY OVERWORLD_EFFECTS
	THE_END END_LOCATION
	THE_END_IMPL DEFAULT_END
	THE_END_KEY END_EFFECTS
	THE_NETHER NETHER_LOCATION
	THE_NETHER_IMPL DEFAULT_NETHER
	THE_NETHER_KEY NETHER_EFFECTS
	createDragonBattle createDragonFight
	d DIRECT_CODEC
	e MOON_BRIGHTNESS_PER_PHASE
	effects effectsLocation
	genLayerZoomer biomeZoomer
	l OVERWORLD_CAVES_LOCATION
	m DEFAULT_OVERWORLD_CAVES
	n CODEC
	a (F)[F fillBrightnessRamp
	a (I)F brightness
	a (J)F timeOfDay
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; parseLegacy
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$6
	a (Ljava/util/Optional;)Ljava/util/OptionalLong; lambda$null$0
	a (Ljava/util/OptionalLong;)Ljava/util/Optional; lambda$null$1
	a (Lnet/minecraft/server/DimensionManager;)Z equalTo
	a (Lnet/minecraft/server/DimensionManager;Lnet/minecraft/server/DimensionManager;)D getTeleportationScale
	a (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/DimensionManager; lambda$defaultDimensions$10
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/IRegistry;J)Lnet/minecraft/server/ChunkGenerator; defaultEndGenerator
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/IRegistry;J)Lnet/minecraft/server/RegistryMaterials; defaultDimensions
	a (Lnet/minecraft/server/IRegistryCustom$Dimension;)Lnet/minecraft/server/IRegistryCustom$Dimension; registerBuiltin
	a (Lnet/minecraft/server/ResourceKey;Ljava/io/File;)Ljava/io/File; getStorageFolder
	b (J)I moonPhase
	b (Lnet/minecraft/server/DimensionManager;)Ljava/lang/Float; lambda$null$5
	b (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/DimensionManager; lambda$defaultDimensions$9
	b (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/IRegistry;J)Lnet/minecraft/server/ChunkGenerator; defaultNetherGenerator
	c (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/MinecraftKey; lambda$null$4
	c (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettingBase; lambda$defaultNetherGenerator$8
	d (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/MinecraftKey; lambda$null$3
	d (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/GeneratorSettingBase; lambda$defaultEndGenerator$7
	e (Lnet/minecraft/server/DimensionManager;)Ljava/util/OptionalLong; lambda$null$2
	getCoordinateScale ()D coordinateScale
	getGenLayerZoomer ()Lnet/minecraft/server/GenLayerZoomer; getBiomeZoomer
	getLogicalHeight ()I logicalHeight
	getSuffix ()Ljava/lang/String; getFileSuffix
	isBedWorks ()Z bedWorks
	isCreateDragonBattle ()Z createDragonFight
	isFixedTime ()Z hasFixedTime
	isNatural ()Z natural
	isNether ()Z ultraWarm
	isPiglinSafe ()Z piglinSafe
	isRespawnAnchorWorks ()Z respawnAnchorWorks
	o ()Lnet/minecraft/server/Tag; infiniburn
	p ()Lnet/minecraft/server/MinecraftKey; effectsLocation
net/minecraft/server/BehaviorBetterJob net/minecraft/world/entity/ai/behavior/PoiCompetitorScan
	b profession
	a (Lnet/minecraft/server/EntityVillager;)Z hasJobSite
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityVillager;)Lnet/minecraft/server/EntityVillager; selectWinner
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/GlobalPos;Lnet/minecraft/server/VillagePlaceType;)V lambda$start$1
	a (Lnet/minecraft/server/GlobalPos;Lnet/minecraft/server/VillagePlaceType;Lnet/minecraft/server/EntityVillager;)Z competesForSameJobsite
	a (Lnet/minecraft/server/VillagePlaceType;Lnet/minecraft/server/VillagerProfession;)Z hasMatchingProfession
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	b (Lnet/minecraft/server/GlobalPos;Lnet/minecraft/server/VillagePlaceType;Lnet/minecraft/server/EntityVillager;)Z lambda$null$0
net/minecraft/server/BlockStem net/minecraft/world/level/block/StemBlock
	b SHAPE_BY_AGE
	blockFruit fruit
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c ()Lnet/minecraft/server/Item; getSeedItem
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	d ()Lnet/minecraft/server/BlockStemmed; getFruit
net/minecraft/server/DispenseBehaviorShulkerBox net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
net/minecraft/server/TileEntityDispenser net/minecraft/world/level/block/entity/DispenserBlockEntity
	a RANDOM
	Z_ ()I getContainerSize
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/NonNullList;)V setItems
	f ()Lnet/minecraft/server/NonNullList; getItems
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	h ()I getRandomSlot
net/minecraft/server/PathfinderGoalRandomTargetNonTamed net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal
	i tamableMob
	a ()Z canUse
	b ()Z canContinueToUse
net/minecraft/server/PlayerChunk$State net/minecraft/server/level/ChunkHolder$FullChunkStatus
	e $VALUES
	isAtLeast (Lnet/minecraft/server/PlayerChunk$State;)Z isOrAfter
net/minecraft/server/LootItemConditions net/minecraft/world/level/storage/loot/predicates/LootItemConditions
	a INVERTED
	b ALTERNATIVE
	c RANDOM_CHANCE
	d RANDOM_CHANCE_WITH_LOOTING
	e ENTITY_PROPERTIES
	f KILLED_BY_PLAYER
	g ENTITY_SCORES
	h BLOCK_STATE_PROPERTY
	i MATCH_TOOL
	j TABLE_BONUS
	k SURVIVES_EXPLOSION
	l DAMAGE_SOURCE_PROPERTIES
	m LOCATION_CHECK
	n WEATHER_CHECK
	o REFERENCE
	p TIME_CHECK
	a ()Ljava/lang/Object; createGsonAdapter
	a (Ljava/lang/Object;)Z lambda$orConditions$2
	a (Ljava/lang/String;Lnet/minecraft/server/LootSerializer;)Lnet/minecraft/server/LootItemConditionType; register
	a ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; andConditions
	a ([Ljava/util/function/Predicate;Ljava/lang/Object;)Z lambda$orConditions$3
	b (Ljava/lang/Object;)Z lambda$andConditions$0
	b ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; orConditions
	b ([Ljava/util/function/Predicate;Ljava/lang/Object;)Z lambda$andConditions$1
net/minecraft/server/EnchantmentTridentLoyalty net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/ResourceDataAbstract net/minecraft/server/packs/resources/SimplePreparableReloadListener
	a (Laca$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; lambda$reload$0
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Ljava/lang/Object;)V lambda$reload$1
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
byu$1 net/minecraft/world/level/block/PoweredRailBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$Mirror
net/minecraft/server/LootContextParameter net/minecraft/world/level/storage/loot/parameters/LootContextParam
	a name
	a ()Lnet/minecraft/server/MinecraftKey; getName
net/minecraft/server/BossBattle$BarStyle net/minecraft/world/BossEvent$BossBarOverlay
	f name
	g $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/BossBattle$BarStyle; byName
alj net/minecraft/util/datafix/package-info
ali net/minecraft/util/datafix/fixes/package-info
gc$a$3 net/minecraft/core/Direction$Axis$3
	a (DDD)D choose
	a (III)I choose
net/minecraft/server/SharedConstants net/minecraft/SharedConstants
	a NETTY_LEAK_DETECTION
	allowedCharacters ILLEGAL_FILE_CHARACTERS
	b MAXIMUM_TICK_TIME_NANOS
	c CHECK_DATA_FIXER_SCHEMA
	d IS_RUNNING_IN_IDE
	f CURRENT_VERSION
	a (Lcom/mojang/bridge/game/GameVersion;)V setVersion
	a (Ljava/lang/String;)Ljava/lang/String; filterText
	getGameVersion ()Lcom/mojang/bridge/game/GameVersion; getCurrentVersion
net/minecraft/server/GameTestHarnessAssertionPosition net/minecraft/gametest/framework/GameTestAssertPosException
	a absolutePos
	b relativePos
	c tick
	a ()Ljava/lang/String; getMessageToShowAtBlock
	b ()Lnet/minecraft/server/BlockPosition; getRelativePos
	c ()Lnet/minecraft/server/BlockPosition; getAbsolutePos
net/minecraft/server/CommandDataAccessorEntity net/minecraft/server/commands/data/EntityDataAccessor
	a PROVIDER
	b ERROR_NO_PLAYERS
	c entity
	a ()Lnet/minecraft/server/NBTTagCompound; getData
	a (Ldr$h;DI)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Ljava/lang/String;)Lza$c; lambda$static$0
	a (Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/server/NBTTagCompound;)V setData
	b ()Lnet/minecraft/server/IChatBaseComponent; getModifiedSuccess
byd$1 net/minecraft/world/level/block/Mirror$1
	a $SwitchMap$net$minecraft$world$level$block$Mirror
bhk$1 net/minecraft/world/entity/vehicle/Boat$1
	a $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type
	b $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Status
net/minecraft/server/LootItemConditionTableBonus net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition
	a enchantment
	b values
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/Enchantment;[F)Ldbl$a; bonusLevelFlatChance
	a (Lnet/minecraft/server/LootItemConditionTableBonus;)Lnet/minecraft/server/Enchantment; access$000
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lnet/minecraft/server/LootItemConditionType; getType
	b (Lnet/minecraft/server/Enchantment;[F)Lnet/minecraft/server/LootItemCondition; lambda$bonusLevelFlatChance$0
	b (Lnet/minecraft/server/LootItemConditionTableBonus;)[F access$100
net/minecraft/server/DataConverterPlayerUUID net/minecraft/util/datafix/fixes/PlayerUUIDFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
net/minecraft/server/BlockBase net/minecraft/world/level/block/state/BlockBehaviour
	aA dynamicShape
	aB properties
	aC drops
	ar UPDATE_SHAPE_ORDER
	at hasCollision
	av isRandomlyTicking
	durability explosionResistance
	frictionFactor friction
	stepSound soundType
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)J getSeed
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;II)V updateIndirectNeighbourShapes
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getVisualShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/IProjectile;)V onProjectileHit
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
	ah_ ()Lnet/minecraft/server/BlockBase$EnumRandomOffset; getOffsetType
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	c_ (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
	canPlace (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
	doPhysics (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	dropNaturally (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getBlockSupportShape
	f (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getLightBlock
	getDamage (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getDestroyProgress
	getInventory (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	getItem ()Lnet/minecraft/server/Item; asItem
	getPushReaction (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	interact (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	isComplexRedstone (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	isPowerSource (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	isTileEntity ()Z isEntityBlock
	p ()Lnet/minecraft/server/Block; asBlock
	r ()Lnet/minecraft/server/MinecraftKey; getLootTable
	remove (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	s ()Lnet/minecraft/server/MaterialMapColor; defaultMaterialColor
	tick (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	tickAlways (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	updateState (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
net/minecraft/server/BehaviorMakeLove net/minecraft/world/entity/ai/behavior/VillagerMakeLove
	b birthTimestamp
	a (Lnet/minecraft/server/EntityAgeable;)Z lambda$isBreedingPossible$0
	a (Lnet/minecraft/server/EntityVillager;)Z isBreedingPossible
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/BlockPosition;)Z canReach
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/BlockPosition;)V giveBedToChild
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityVillager;)V tryToGiveBirth
	b (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/BlockPosition;)Z lambda$takeVacantBed$1
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Ljava/util/Optional; takeVacantBed
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityVillager;)Ljava/util/Optional; breed
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
net/minecraft/server/World net/minecraft/world/level/Level
	THE_END END
	THE_NETHER NETHER
	a DIRECTIONS
	d skyDarken
	debugWorld isDebug
	dimensionKey dimension
	e LOGGER
	f RESOURCE_KEY_CODEC
	lastRainLevel oRainLevel
	lastThunderLevel oThunderLevel
	methodProfiler profiler
	n randValue
	o addend
	serverThread thread
	tickingTileEntities updatingBlockEntities
	tileEntityList blockEntityList
	tileEntityListPending pendingBlockEntities
	tileEntityListTick tickableBlockEntities
	tileEntityListUnload blockEntitiesToUnload
	worldData levelData
	x dimensionType
	D (Lnet/minecraft/server/BlockPosition;)Z isInWorldBoundsHorizontal
	E (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getPendingBlockEntityAt
	O ()Ljava/lang/String; gatherChunkSourceStats
	P ()V updateSkyBrightness
	Q ()V prepareWeather
	R ()V disconnect
	V ()Z isThundering
	a ()Ljava/lang/String; lambda$fillReportDetails$4
	a (DDDDDDLnet/minecraft/server/NBTTagCompound;)V createFireworks
	a (DDDLnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FFZ)V playLocalSound
	a (F)F getSunAngle
	a (II)Lnet/minecraft/server/IChunkAccess; getChunk
	a (IIII)Lnet/minecraft/server/BlockPosition; getBlockRandomPos
	a (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	a (ILnet/minecraft/server/BlockPosition;I)V destroyBlockProgress
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntitiesOfClass
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldMap; getMapData
	a (Ljava/util/Collection;)V addAllPendingBlockEntities
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/Entity;)V guardEntityTick
	a (Lnet/minecraft/server/Block;)Ljava/lang/String; lambda$neighborChanged$0
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;)V neighborChanged
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/EnumDirection;)V updateNeighborsAtExceptFromFacing
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)Z loadedAndEntityCanStandOn
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;Lnet/minecraft/server/EnumDirection;)Z loadedAndEntityCanStandOnFace
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)Z setBlock
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;II)Z setBlock
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V onBlockStateChange
	a (Lnet/minecraft/server/BlockPosition;Z)Z removeBlock
	a (Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/Entity;I)Z destroyBlock
	a (Lnet/minecraft/server/CrashReport;)Lnet/minecraft/server/CrashReportSystemDetails; fillReportDetails
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;)Z mayInteract
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/Packet;)V sendPacketToServer
	a (Lnet/minecraft/server/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/server/ParticleParam;ZDDDDDD)V addParticle
	a (Lnet/minecraft/server/TileEntity;)Z addBlockEntity
	a (Lnet/minecraft/server/WorldMap;)V setMapData
	applyPhysics (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V updateNeighborsAt
	b ()Ljava/lang/String; lambda$fillReportDetails$3
	b (F)F getThunderLevel
	b (I)Z isOutsideBuildHeight
	b (ILnet/minecraft/server/BlockPosition;I)V globalLevelEvent
	b (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getLoadedEntitiesOfClass
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V setBlocksDirty
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V blockEntityChanged
	b (Lnet/minecraft/server/ParticleParam;DDDDDD)V addAlwaysVisibleParticle
	b (Lnet/minecraft/server/ParticleParam;ZDDDDDD)V addAlwaysVisibleParticle
	b (Lnet/minecraft/server/TileEntity;)Ljava/lang/String; lambda$tickBlockEntities$2
	broadcastEntityEffect (Lnet/minecraft/server/Entity;B)V broadcastEntityEvent
	c ()I getSkyDarken
	c (F)V setThunderLevel
	c (I)V setSkyFlashTime
	c (II)Lnet/minecraft/server/IBlockAccess; getChunkForCollisions
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	c (Lnet/minecraft/server/TileEntity;)Ljava/lang/Object; lambda$addBlockEntity$1
	createExplosion (Lnet/minecraft/server/Entity;DDDFZLnet/minecraft/server/Explosion$Effect;)Lnet/minecraft/server/Explosion; explode
	createExplosion (Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;Lnet/minecraft/server/ExplosionDamageCalculator;DDDFZLnet/minecraft/server/Explosion$Effect;)Lnet/minecraft/server/Explosion; explode
	d ()Lnet/minecraft/server/BiomeManager; getBiomeManager
	d (F)F getRainLevel
	d (I)Z isOutsideSpawnableHeight
	d (II)Lnet/minecraft/server/Chunk; getChunk
	d (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/DifficultyDamageScaler; getCurrentDifficultyAt
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	e (F)V setRainLevel
	f ()Lnet/minecraft/server/WorldBorder; getWorldBorder
	getBlockFacePower (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	getBlockPower (Lnet/minecraft/server/BlockPosition;)I getDirectSignalTo
	getChunkAtWorldCoords (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Chunk; getChunkAt
	getCraftingManager ()Lnet/minecraft/server/CraftingManager; getRecipeManager
	getDimensionKey ()Lnet/minecraft/server/ResourceKey; dimension
	getMethodProfiler ()Lnet/minecraft/server/GameProfilerFiller; getProfiler
	getMethodProfilerSupplier ()Ljava/util/function/Supplier; getProfilerSupplier
	getMinecraftServer ()Lnet/minecraft/server/MinecraftServer; getServer
	getTime ()J getGameTime
	getWorldMapCount ()I getFreeMapId
	h ()Lnet/minecraft/server/WorldData; getLevelData
	isBlockFacePowered (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z hasSignal
	isBlockIndirectlyPowered (Lnet/minecraft/server/BlockPosition;)Z hasNeighborSignal
	isDebugWorld ()Z isDebug
	isOutsideWorld (Lnet/minecraft/server/BlockPosition;)Z isOutsideBuildHeight
	isSavingDisabled ()Z noSave
	isValidLocation (Lnet/minecraft/server/BlockPosition;)Z isInWorldBounds
	j (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getTopBlockState
	k ()Lnet/minecraft/server/DimensionManager; dimensionType
	l (Lnet/minecraft/server/BlockPosition;)Z isInSpawnableBounds
	notify (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;I)V sendBlockUpdated
	p ()Lnet/minecraft/server/ITagRegistry; getTagManager
	p (Lnet/minecraft/server/BlockPosition;)Z isLoaded
	playBlockAction (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;II)V blockEvent
	removeTileEntity (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	s (Lnet/minecraft/server/BlockPosition;)I getBestNeighborSignal
	s_ ()Z isClientSide
	setSpawnFlags (ZZ)V setSpawnSettings
	setTileEntity (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	setTypeUpdate (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z setBlockAndUpdate
	t_ ()I getSeaLevel
	u (Lnet/minecraft/server/BlockPosition;)Z isHumidAt
	u_ ()Ljava/util/Random; getRandom
	updateAdjacentComparators (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V updateNeighbourForOutputSignal
net/minecraft/server/Reputation net/minecraft/world/entity/ai/gossip/GossipContainer
	a gossips
	a ()Ljava/util/Map; getGossipEntries
	a (II)I mergeValuesForTransfer
	a (Laxw$b;)V lambda$update$8
	a (Lcom/mojang/serialization/DataResult;)Ljava/util/stream/Stream; lambda$update$7
	a (Lcom/mojang/serialization/Dynamic;)V update
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; store
	a (Lcom/mojang/serialization/DynamicOps;Laxw$b;)Lcom/mojang/serialization/Dynamic; lambda$store$6
	a (Ljava/util/Map$Entry;)Ljava/util/stream/Stream; lambda$unpack$1
	a (Ljava/util/Map;Ljava/util/UUID;)V lambda$getGossipEntries$0
	a (Ljava/util/Random;I)Ljava/util/Collection; selectGossipsForTransfer
	a (Ljava/util/UUID;)Laxw$a; getOrCreate
	a (Ljava/util/UUID;Ljava/util/function/Predicate;)I getReputation
	a (Ljava/util/UUID;Lnet/minecraft/server/ReputationType;)V remove
	a (Ljava/util/UUID;Lnet/minecraft/server/ReputationType;I)V add
	a (Ljava/util/function/DoublePredicate;Lnet/minecraft/server/ReputationType;Laxw$a;)Z lambda$getCountForType$4
	a (Lnet/minecraft/server/Reputation;Ljava/util/Random;I)V transferFrom
	a (Lnet/minecraft/server/ReputationType;)V remove
	a (Lnet/minecraft/server/ReputationType;II)I mergeValuesForAddition
	a (Lnet/minecraft/server/ReputationType;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer; lambda$add$5
	a (Lnet/minecraft/server/ReputationType;Ljava/util/function/DoublePredicate;)J getCountForType
	b ()V decay
	b (Laxw$b;)V lambda$transferFrom$3
	b (Ljava/util/UUID;)Laxw$a; lambda$getOrCreate$2
	b (Ljava/util/UUID;Lnet/minecraft/server/ReputationType;I)V remove
	c ()Ljava/util/stream/Stream; unpack
gc$a$1 net/minecraft/core/Direction$Axis$1
	a (DDD)D choose
	a (III)I choose
gc$a$2 net/minecraft/core/Direction$Axis$2
	a (DDD)D choose
	a (III)I choose
net/minecraft/server/WorldGenFeatureBastionTreasure net/minecraft/data/worldgen/BastionTreasureRoomPools
	a ()V bootstrap
dyq$1 net/minecraft/client/particle/SuspendedParticle$1
net/minecraft/server/IFluidSource net/minecraft/world/level/block/BucketPickup
	removeFluid (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/FluidType; takeLiquid
net/minecraft/server/LootSelectorDynamic net/minecraft/world/level/storage/loot/entries/DynamicLoot
	g name
	a ()Lnet/minecraft/server/LootEntryType; getType
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/server/LootSelectorDynamic;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lnet/minecraft/server/MinecraftKey;)Lczp$a; dynamicEntry
	a (Lnet/minecraft/server/MinecraftKey;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; lambda$dynamicEntry$0
net/minecraft/server/ItemChorusFruit net/minecraft/world/item/ChorusFruitItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
dhx$1 com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen$1
	a this$0
net/minecraft/server/WorldGenTreeProviderAcacia net/minecraft/world/level/block/grower/AcaciaTreeGrower
	a (Ljava/util/Random;Z)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredFeature
net/minecraft/server/DefinedStructureTestRandomBlockState net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest
	a CODEC
	b blockState
	d probability
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/DefinedStructureTestRandomBlockState;)Ljava/lang/Float; lambda$null$1
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
	b (Lnet/minecraft/server/DefinedStructureTestRandomBlockState;)Lnet/minecraft/server/IBlockData; lambda$null$0
net/minecraft/server/ArgumentTileLocation net/minecraft/commands/arguments/blocks/BlockInput
	a state
	b properties
	c tag
	a ()Lnet/minecraft/server/IBlockData; getState
	a (Lnet/minecraft/server/ShapeDetectorBlock;)Z test
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z test
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;I)Z place
	b ()Lnet/minecraft/server/NBTTagCompound; getTag
	c ()Ljava/util/Set; getDefinedProperties
net/minecraft/server/ResourcePackSourceVanilla net/minecraft/server/packs/repository/ServerPacksSource
	a vanillaPack
	a ()Lnet/minecraft/server/IResourcePack; lambda$loadPacks$0
	a (Ljava/util/function/Consumer;Labs$a;)V loadPacks
net/minecraft/server/WorldGenDesertPyramidPiece net/minecraft/world/level/levelgen/structure/DesertPyramidPiece
	e hasPlacedChest
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/BlockStructureVoid net/minecraft/world/level/block/StructureVoidBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	f (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
net/minecraft/server/PacketPlayInWindowClick net/minecraft/network/protocol/game/ServerboundContainerClickPacket
	a containerId
	button buttonNum
	d uid
	item itemStack
	shift clickType
	slot slotNum
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getSlotNum
	d ()I getButtonNum
	e ()S getUid
	f ()Lnet/minecraft/server/ItemStack; getItem
	g ()Lnet/minecraft/server/InventoryClickType; getClickType
net/minecraft/server/PacketPlayOutNamedEntitySpawn net/minecraft/network/protocol/game/ClientboundAddPlayerPacket
	a entityId
	b playerId
	c x
	d y
	e z
	f yRot
	g xRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getEntityId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/UUID; getPlayerId
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()B getyRot
	h ()B getxRot
net/minecraft/server/PacketPlayInSpectate net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket
	a uuid
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	a (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/Entity; getEntity
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/EntityLeash net/minecraft/world/entity/decoration/LeashFenceKnotEntity
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/Entity;)V dropItem
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interact
	a (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/server/EnumDirection;)V setDirection
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EntityLeash; getOrCreateKnot
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	d (DDD)V setPos
	g ()V recalculateBoundingBox
	h ()Z survives
	i ()I getWidth
	k ()I getHeight
	m ()V playPlacementSound
	o (F)Lnet/minecraft/server/Vec3D; getRopeHoldPosition
net/minecraft/server/BehaviorFindAdmirableItem net/minecraft/world/entity/ai/behavior/GoToWantedItem
	b predicate
	c maxDistToWalk
	d speedModifier
	a (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityItem; getClosestLovedItem
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
aeh$1 net/minecraft/tags/StaticTagHelper$1
net/minecraft/server/ItemBookAndQuill net/minecraft/world/item/WritableBookItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/NBTTagCompound;)Z makeSureTagIsValid
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/DragonControllerLandedAttack net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase
	b attackingTicks
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
net/minecraft/server/BlockChorusFlower net/minecraft/world/level/block/ChorusFlowerBlock
	b plant
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;I)V generatePlant
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;II)V growTreeRecursive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V placeDeadFlower
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;I)V placeGrownFlower
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/IProjectile;)V onProjectileHit
	a_ (Lnet/minecraft/server/IBlockData;)Z isRandomlyTicking
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z allNeighborsEmpty
anj net/minecraft/util/datafix/schemas/package-info
dxn$1 net/minecraft/client/particle/FireworkParticles$1
	a $SwitchMap$net$minecraft$world$item$FireworkRocketItem$Shape
anl net/minecraft/util/package-info
wn$a net/minecraft/server/commands/DataPackCommand$Inserter
net/minecraft/server/PacketPlayOutBlockBreak net/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket
	a action
	b LOGGER
	c pos
	d state
	e allGood
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/IBlockData; getState
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/BlockPosition; getPos
	d ()Z allGood
	e ()Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType; action
net/minecraft/server/BlockLoom net/minecraft/world/level/block/LoomBlock
	a CONTAINER_TITLE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$getMenuProvider$0
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdCorridor net/minecraft/world/level/levelgen/structure/StrongholdPieces$FillerCorridor
	a steps
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/StructureBoundingBox; findPieceBox
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/RecipeSmithing net/minecraft/world/item/crafting/UpgradeRecipe
	a base
	b addition
	c result
	d id
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/ItemStack;)Z isAdditionIngredient
	a (Lnet/minecraft/server/RecipeSmithing;)Lnet/minecraft/server/RecipeItemStack; access$000
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	b (Lnet/minecraft/server/RecipeSmithing;)Lnet/minecraft/server/RecipeItemStack; access$100
	c ()Lnet/minecraft/server/ItemStack; getResultItem
	c (Lnet/minecraft/server/RecipeSmithing;)Lnet/minecraft/server/ItemStack; access$200
	f ()Lnet/minecraft/server/MinecraftKey; getId
	g ()Lnet/minecraft/server/Recipes; getType
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
net/minecraft/server/EntityMinecartFurnace net/minecraft/world/entity/vehicle/MinecartFurnace
	b xPush
	c zPush
	d DATA_ID_FUEL
	e fuel
	f INGREDIENT
	a (Lnet/minecraft/server/DamageSource;)V destroy
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interact
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V moveAlongTrack
	e ()V defineSynchedData
	g ()D getMaxSpeed
	i ()V applyNaturalSlowdown
	j ()V tick
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	o (Z)V setHasFuel
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	u ()Z hasFuel
anx net/minecraft/util/profiling/package-info
anz net/minecraft/util/thread/NamedThreadFactory
	a LOGGER
	b group
	c threadNumber
	d namePrefix
	a (Ljava/lang/Runnable;Ljava/lang/Thread;Ljava/lang/Throwable;)V lambda$newThread$0
net/minecraft/server/NBTTagIntArray net/minecraft/nbt/IntArrayTag
	a TYPE
	a ()B getId
	a (I)Lnet/minecraft/server/NBTTagInt; get
	a (ILnet/minecraft/server/NBTBase;)Z setTag
	a (ILnet/minecraft/server/NBTTagInt;)Lnet/minecraft/server/NBTTagInt; set
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (Ljava/util/List;)[I toArray
	b ()Lnet/minecraft/server/NBTTagType; getType
	b (I)Lnet/minecraft/server/NBTTagInt; remove
	b (ILnet/minecraft/server/NBTBase;)Z addTag
	b (ILnet/minecraft/server/NBTTagInt;)V add
	c ()Lnet/minecraft/server/NBTBase; copy
	c (I)Lnet/minecraft/server/NBTBase; remove
	c (ILnet/minecraft/server/NBTBase;)V add
	d ()Lnet/minecraft/server/NBTTagIntArray; copy
	d (ILnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; set
	d_ ()B getElementType
	getInts ()[I getAsIntArray
ced$1 net/minecraft/world/level/block/state/BlockBehaviour$1
	a $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
net/minecraft/server/MemoryModuleType net/minecraft/world/entity/ai/memory/MemoryModuleType
	MOBS LIVING_ENTITIES
	NEAREST_VISIBLE_ADULY NEAREST_VISIBLE_ADULT
	NEAREST_VISIBLE_NEMSIS NEAREST_VISIBLE_NEMESIS
	VISIBLE_MOBS VISIBLE_LIVING_ENTITIES
	ai codec
	a (Ljava/lang/String;)Lnet/minecraft/server/MemoryModuleType; register
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/MemoryModuleType; register
	getSerializer ()Ljava/util/Optional; getCodec
net/minecraft/server/DedicatedServer net/minecraft/server/dedicated/DedicatedServer
	j LOGGER
	k SHA1
	propertyManager settings
	q gui
	remoteControlCommandListener rconConsoleSource
	remoteControlListener rconThread
	remoteStatusListener queryThreadGs4
	serverCommandQueue consoleInput
	C ()Z isNetherEnabled
	P ()Z isSpawningMonsters
	R_ ()Z shouldInformAdmins
	T ()Z isSnooperEnabled
	W ()Z isSpawningAnimals
	X ()Z areNpcsEnabled
	a (ILnet/minecraft/server/DedicatedServerProperties;)Lnet/minecraft/server/DedicatedServerProperties; lambda$setPlayerIdleTimeout$2
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Ljava/lang/String;)Ljava/lang/String; runCommand
	a (Lnet/minecraft/server/EnumGamemode;ZI)Z publishServer
	a (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooper
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)Z isUnderSpawnProtection
	a (ZLnet/minecraft/server/DedicatedServerProperties;)Lnet/minecraft/server/DedicatedServerProperties; lambda$storeUsingWhiteList$4
	aU ()Z forceSynchronousWrites
	aZ ()Ljava/lang/String; getPackHash
	ad ()Lnet/minecraft/server/PlayerList; getPlayerList
	ag ()Z hasGui
	aj ()I getSpawnProtectionRadius
	al ()Z repliesToStatus
	at ()I getAbsoluteMaxWorldSize
	aw ()I getCompressionThreshold
	b (I)I getScaledTrackingDistance
	b (Ljava/util/function/BooleanSupplier;)V tickChildren
	b (Lnet/minecraft/server/CrashReport;)Lnet/minecraft/server/CrashReport; fillReport
	bb ()Lnet/minecraft/server/DedicatedPlayerList; getPlayerList
	bc ()V showGui
	bf ()Lorg/apache/logging/log4j/Logger; access$000
	bn ()V waitForRetry
	bo ()Ljava/lang/String; lambda$fillReport$1
	bp ()Ljava/lang/String; lambda$fillReport$0
	convertNames ()Z convertOldUsers
	d ()Z initServer
	d (I)V setPlayerIdleTimeout
	e ()V onServerExit
	f ()Z isHardcore
	f (Ljava/lang/String;)V lambda$runCommand$3
	g ()I getOperatorUserPermissionLevel
	g_ ()Lnet/minecraft/server/DedicatedServerProperties; getProperties
	getMaxTickTime ()J getMaxTickLength
	h ()I getFunctionCompilationLevel
	h_ ()Ljava/lang/String; getServerIp
	handleCommandQueue ()V handleConsoleInputs
	i ()Z shouldRconBroadcast
	i_ ()Ljava/lang/String; getServerName
	issueCommand (Ljava/lang/String;Lnet/minecraft/server/CommandListenerWrapper;)V handleConsoleInput
	j ()Z isDedicatedServer
	j_ ()Ljava/lang/String; getPluginNames
	k ()I getRateLimitPacketsPerSecond
	k_ ()Ljava/lang/String; getLevelIdName
	l ()Z isEpollEnabled
	m ()Z isCommandBlockEnabled
	n ()Z isPublished
	o ()Ljava/util/Optional; getModdedStatus
	p ()I getServerPort
	q ()V forceDifficulty
	setHasWhitelist (Z)V storeUsingWhiteList
	t ()V stopServer
net/minecraft/server/PacketPlayOutStatistic net/minecraft/network/protocol/game/ClientboundAwardStatsPacket
	a stats
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/Statistic;)I getId
	a (Lnet/minecraft/server/StatisticWrapper;Lnet/minecraft/server/PacketDataSerializer;)V readStat
	b ()Ljava/util/Map; getStats
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
bgy$1 net/minecraft/world/entity/raid/Raid$1
	a $SwitchMap$net$minecraft$world$entity$raid$Raid$RaiderType
	b $SwitchMap$net$minecraft$world$Difficulty
net/minecraft/server/ILightEngine net/minecraft/world/level/lighting/LightEventListener
	a ()Z hasLightWork
	a (IZZ)I runUpdates
	a (Lnet/minecraft/server/BlockPosition;)V checkBlock
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/server/BlockPosition;Z)V updateSectionStatus
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/server/SectionPosition;Z)V updateSectionStatus
aoe net/minecraft/util/thread/package-info
aog net/minecraft/util/worldupdate/package-info
net/minecraft/server/PacketPlayOutUpdateAttributes net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket
	a entityId
	b attributes
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getEntityId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/List; getValues
net/minecraft/server/BlockWeb net/minecraft/world/level/block/WebBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
net/minecraft/server/RecipeSerializerCooking net/minecraft/world/item/crafting/SimpleCookingSerializer
	v defaultCookingTime
	w factory
	a (Ljava/lang/String;)Ljava/lang/IllegalStateException; lambda$fromJson$0
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/RecipeCooking;)V toNetwork
	b (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/RecipeCooking; fromJson
	b (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/RecipeCooking; fromNetwork
dnr$1 net/minecraft/client/gui/screens/CreateBuffetWorldScreen$1
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece2 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentCoreRoom
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece1 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentBuilding
	p sourceRoom
	q coreRoom
	r childPieces
	a (Ljava/util/Random;)Ljava/util/List; generateRoomGraph
	a (Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateEntranceArchs
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (ZILnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateWing
	b (Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateEntranceWall
	c (Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateRoofPiece
	d (Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateLowerWall
	e (Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateMiddleWall
	f (Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateUpperWall
net/minecraft/server/IDragonController net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance
	a ()Z isSitting
	a (Lnet/minecraft/server/DamageSource;F)F onHurt
	a (Lnet/minecraft/server/EntityEnderCrystal;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DamageSource;Lnet/minecraft/server/EntityHuman;)V onCrystalDestroyed
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	e ()V end
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	getControllerPhase ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	h ()F getTurnSpeed
net/minecraft/server/CommandClone net/minecraft/server/commands/CloneCommands
	a FILTER_AIR
	b ERROR_OVERLAP
	c ERROR_AREA_TOO_LARGE
	d ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;Lnet/minecraft/server/CommandClone$Mode;)I clone
	a (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$null$11
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	b (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$null$9
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	c (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$null$7
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	d (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$null$5
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	e (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$null$3
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	f (Lnet/minecraft/server/ShapeDetectorBlock;)Z lambda$static$1
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece4 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXYRoom
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
vk$a net/minecraft/resources/ResourceLocation$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/MinecraftKey; deserialize
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece3 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXRoom
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece6 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYZRoom
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece5 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYRoom
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
net/minecraft/server/EnchantmentLure net/minecraft/world/item/enchantment/FishingSpeedEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/LootItemFunctionConditional net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction
	a compositePredicates
	c predicates
	a (Ljava/util/function/Function;)Ldaf$a; simpleBuilder
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootCollector;)V validate
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; apply
boy$a net/minecraft/world/item/crafting/SingleItemRecipe$Serializer
	v factory
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/RecipeSingleItem;)V toNetwork
	b (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/RecipeSingleItem; fromJson
	b (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/RecipeSingleItem; fromNetwork
net/minecraft/server/Vec2F net/minecraft/world/phys/Vec2
	a ZERO
	b ONE
	c UNIT_X
	d NEG_UNIT_X
	e UNIT_Y
	f NEG_UNIT_Y
	g MAX
	h MIN
	i x
	j y
	a ()Lnet/minecraft/server/Vec2F; normalized
	a (F)Lnet/minecraft/server/Vec2F; scale
	a (Lnet/minecraft/server/Vec2F;)F dot
	b ()F length
	b (F)Lnet/minecraft/server/Vec2F; add
	b (Lnet/minecraft/server/Vec2F;)Lnet/minecraft/server/Vec2F; add
	c ()F lengthSquared
	c (Lnet/minecraft/server/Vec2F;)Z equals
	d ()Lnet/minecraft/server/Vec2F; negated
	d (Lnet/minecraft/server/Vec2F;)F distanceToSqr
net/minecraft/server/BlockCarrots net/minecraft/world/level/block/CarrotBlock
	a SHAPE_BY_AGE
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	e ()Lnet/minecraft/server/IMaterial; getBaseSeedId
ekk$1 net/minecraft/client/resources/SkinManager$1
	a val$sessionService
	b this$0
	a (Ljava/lang/String;)Ljava/util/Map; load
aae$1 net/minecraft/server/level/ServerChunkCache$1
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece8 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentWingRoom
	p mainDesign
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
net/minecraft/server/EntityGuardianElder net/minecraft/world/entity/monster/ElderGuardian
	b ELDER_SIZE_SCALE
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	N ()V customServerAiStep
	d (Lnet/minecraft/server/EntityPlayer;)Z lambda$customServerAiStep$0
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()I getAttackDuration
	eL ()Lnet/minecraft/server/SoundEffect; getFlopSound
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece7 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleZRoom
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
net/minecraft/server/CommandReplaceItem net/minecraft/server/commands/ReplaceItemCommand
	a ERROR_NOT_A_CONTAINER
	b ERROR_INAPPLICABLE_SLOT
	c ERROR_ENTITY_SLOT
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;ILnet/minecraft/server/ItemStack;)I setEntityItem
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/ItemStack;)I setBlockItem
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
net/minecraft/server/SeededRandom net/minecraft/world/level/levelgen/WorldgenRandom
	a count
	a ()I getCount
	a (I)V consumeCount
	a (II)J setBaseChunkSeed
	a (IIJJ)Ljava/util/Random; seedSlimeChunk
	a (JII)J setDecorationSeed
	a (JIII)J setLargeFeatureWithSalt
	b (JII)J setFeatureSeed
	c (JII)J setLargeFeatureSeed
net/minecraft/server/SectionPosition net/minecraft/core/SectionPos
	a ()I x
	a (I)I blockToSectionCoord
	a (III)Lnet/minecraft/server/SectionPosition; of
	a (IIIIII)Ljava/util/stream/Stream; betweenClosedStream
	a (J)Lnet/minecraft/server/SectionPosition; of
	a (JIII)J offset
	a (JLnet/minecraft/server/EnumDirection;)J offset
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/SectionPosition; of
	a (Lnet/minecraft/server/ChunkCoordIntPair;I)Lnet/minecraft/server/SectionPosition; of
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/SectionPosition; of
	a (Lnet/minecraft/server/SectionPosition;I)Ljava/util/stream/Stream; cube
	a (S)I sectionRelativeX
	b ()I y
	b (I)I sectionRelative
	b (III)J asLong
	b (J)I x
	b (Lnet/minecraft/server/BlockPosition;)S sectionRelativePos
	b (Lnet/minecraft/server/ChunkCoordIntPair;I)Ljava/util/stream/Stream; aroundChunk
	b (S)I sectionRelativeY
	c ()I z
	c (I)I sectionToBlockCoord
	c (III)Lnet/minecraft/server/BaseBlockPosition; offset
	c (J)I y
	c (S)I sectionRelativeZ
	d ()I minBlockX
	d (III)Lnet/minecraft/server/SectionPosition; offset
	d (J)I z
	d (S)I relativeToBlockX
	e ()I minBlockY
	e (J)J blockToSection
	e (S)I relativeToBlockY
	f ()I minBlockZ
	f (J)J getZeroNode
	f (S)I relativeToBlockZ
	g ()I maxBlockX
	g (S)Lnet/minecraft/server/BlockPosition; relativeToBlockPos
	h ()I maxBlockY
	i ()I maxBlockZ
	p ()Lnet/minecraft/server/BlockPosition; origin
	q ()Lnet/minecraft/server/BlockPosition; center
	r ()Lnet/minecraft/server/ChunkCoordIntPair; chunk
	s ()J asLong
	t ()Ljava/util/stream/Stream; blocksInside
apk net/minecraft/world/damagesource/package-info
net/minecraft/server/ChatModifier net/minecraft/network/chat/Style
	a EMPTY
	b DEFAULT_FONT
	a (I)Lnet/minecraft/server/ChatModifier; withColor
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/ChatModifier; withFont
	a ([Lnet/minecraft/server/EnumChatFormat;)Lnet/minecraft/server/ChatModifier; applyFormats
	b (Lnet/minecraft/server/ChatModifier;)Ljava/lang/Boolean; access$100
	b (Lnet/minecraft/server/EnumChatFormat;)Lnet/minecraft/server/ChatModifier; applyFormat
	c (Ljava/lang/Boolean;)Lnet/minecraft/server/ChatModifier; withUnderlined
	c (Lnet/minecraft/server/ChatModifier;)Ljava/lang/Boolean; access$200
	c (Lnet/minecraft/server/EnumChatFormat;)Lnet/minecraft/server/ChatModifier; applyLegacyFormat
	d (Ljava/lang/Boolean;)Lnet/minecraft/server/ChatModifier; withStrikethrough
	d (Lnet/minecraft/server/ChatModifier;)Ljava/lang/Boolean; access$300
	e (Ljava/lang/Boolean;)Lnet/minecraft/server/ChatModifier; withObfuscated
	e (Lnet/minecraft/server/ChatModifier;)Ljava/lang/Boolean; access$400
	f (Lnet/minecraft/server/ChatModifier;)Ljava/lang/Boolean; access$500
	g ()Z isEmpty
	g (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatHexColor; access$600
	h (Lnet/minecraft/server/ChatModifier;)Ljava/lang/String; access$700
	i (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatClickable; access$800
	isRandom ()Z isObfuscated
	j (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatHoverable; access$900
	k (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/MinecraftKey; access$1000
	setBold (Ljava/lang/Boolean;)Lnet/minecraft/server/ChatModifier; withBold
	setChatClickable (Lnet/minecraft/server/ChatClickable;)Lnet/minecraft/server/ChatModifier; withClickEvent
	setChatHoverable (Lnet/minecraft/server/ChatHoverable;)Lnet/minecraft/server/ChatModifier; withHoverEvent
	setChatModifier (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; applyTo
	setColor (Lnet/minecraft/server/ChatHexColor;)Lnet/minecraft/server/ChatModifier; withColor
	setColor (Lnet/minecraft/server/EnumChatFormat;)Lnet/minecraft/server/ChatModifier; withColor
	setInsertion (Ljava/lang/String;)Lnet/minecraft/server/ChatModifier; withInsertion
	setItalic (Ljava/lang/Boolean;)Lnet/minecraft/server/ChatModifier; withItalic
net/minecraft/server/BehaviorProfession net/minecraft/world/entity/ai/behavior/ResetProfession
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
net/minecraft/server/CriterionTriggerRecipeUnlocked net/minecraft/advancements/critereon/RecipeUnlockedTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lch$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/IRecipe;)V trigger
	a (Lnet/minecraft/server/IRecipe;Lch$a;)Z lambda$trigger$0
	a (Lnet/minecraft/server/MinecraftKey;)Lch$a; unlocked
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/Chunk$EnumTileEntityState net/minecraft/world/level/chunk/LevelChunk$EntityCreationType
	d $VALUES
net/minecraft/server/EnumCreatureType net/minecraft/world/entity/MobCategory
	g CODEC
	h BY_NAME
	i max
	j isFriendly
	k isPersistent
	l name
	m noDespawnDistance
	n despawnDistance
	o $VALUES
	a ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumCreatureType; byName
	a (Lnet/minecraft/server/EnumCreatureType;)Lnet/minecraft/server/EnumCreatureType; lambda$static$0
	b ()Ljava/lang/String; getName
	c ()I getMaxInstancesPerChunk
	d ()Z isFriendly
	e ()Z isPersistent
	f ()I getDespawnDistance
	g ()I getNoDespawnDistance
net/minecraft/server/DataConverterSavedDataUUID net/minecraft/util/datafix/fixes/SavedDataUUIDFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$7
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$6
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$5
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$4
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$3
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	g (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
net/minecraft/server/BlockEndGateway net/minecraft/world/level/block/EndGatewayBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
apu net/minecraft/world/effect/package-info
net/minecraft/server/EntityFireworks net/minecraft/world/entity/projectile/FireworkRocketEntity
	FIREWORK_ITEM DATA_ID_FIREWORKS_ITEM
	SHOT_AT_ANGLE DATA_SHOT_AT_ANGLE
	c DATA_ATTACHED_TO_TARGET
	expectedLifespan lifetime
	ridingEntity attachedToEntity
	ticksFlown life
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (B)V handleEntityEvent
	a (D)Z shouldRenderAtSqrDistance
	a (I)V lambda$tick$0
	a (Lnet/minecraft/server/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/server/MovingObjectPositionEntity;)V onHitEntity
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bK ()Z isAttackable
	e ()V defineSynchedData
	g ()Lnet/minecraft/server/ItemStack; getItem
	hasExplosions ()Z hasExplosion
	j ()V tick
	j (DDD)Z shouldRender
	m ()V dealExplosionDamage
	n ()Z isAttachedToEntity
apz net/minecraft/world/entity/EntityEvent
net/minecraft/server/Vec3D net/minecraft/world/phys/Vec3
	a ZERO
	a ()D x
	a (D)Lnet/minecraft/server/Vec3D; scale
	a (DDD)Lnet/minecraft/server/Vec3D; subtract
	a (F)Lnet/minecraft/server/Vec3D; xRot
	a (FF)Lnet/minecraft/server/Vec3D; directionFromRotation
	a (I)Lnet/minecraft/server/Vec3D; fromRGB24
	a (Ljava/util/EnumSet;)Lnet/minecraft/server/Vec3D; align
	a (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/Vec3D; atCenterOf
	a (Lnet/minecraft/server/BaseBlockPosition;D)Lnet/minecraft/server/Vec3D; upFromBottomCenterOf
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)D get
	a (Lnet/minecraft/server/IPosition;D)Z closerThan
	a (Lnet/minecraft/server/Vec2F;)Lnet/minecraft/server/Vec3D; directionFromRotation
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; vectorTo
	a (Lnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/Vec3D; lerp
	b ()D y
	b (F)Lnet/minecraft/server/Vec3D; yRot
	b (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/Vec3D; atLowerCornerOf
	b (Lnet/minecraft/server/Vec3D;)D dot
	c ()D z
	c (DDD)D distanceToSqr
	c (F)Lnet/minecraft/server/Vec3D; zRot
	c (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/Vec3D; atBottomCenterOf
	c (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; cross
	d ()Lnet/minecraft/server/Vec3D; normalize
	d (DDD)Lnet/minecraft/server/Vec3D; multiply
	d (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; subtract
	distanceSquared (Lnet/minecraft/server/Vec3D;)D distanceToSqr
	e ()Lnet/minecraft/server/Vec3D; reverse
	e (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; add
	f ()D length
	f (Lnet/minecraft/server/Vec3D;)D distanceTo
	g ()D lengthSqr
	h (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; multiply
net/minecraft/server/PacketPlayOutRecipeUpdate net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket
	a recipes
	a (Lnet/minecraft/server/IRecipe;Lnet/minecraft/server/PacketDataSerializer;)V toNetwork
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/IllegalArgumentException; lambda$fromNetwork$0
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/List; getRecipes
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
net/minecraft/server/TileEntityComparator net/minecraft/world/level/block/entity/ComparatorBlockEntity
	a output
	a (I)V setOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	d ()I getOutputSignal
net/minecraft/server/ItemBoneMeal net/minecraft/world/item/BoneMealItem
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V addGrowthParticles
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z growCrop
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z growWaterPlant
net/minecraft/server/EntityRabbit$PathfinderGoalEatCarrots net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal
	entity rabbit
	h wantsToRaid
	i canRaid
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	e ()V tick
crk$a net/minecraft/world/level/levelgen/structure/OceanRuinPieces$OceanRuinPiece
	d biomeType
	e integrity
	f templateLocation
	g rotation
	h isLarge
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getHeight
	a (Lnet/minecraft/server/DefinedStructureManager;)V loadTemplate
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
afl$1 net/minecraft/util/RewindableStream$1
	a this$0
	b index
net/minecraft/server/RayTrace$FluidCollisionOption net/minecraft/world/level/ClipContext$Fluid
	e $VALUES
	predicate canPick
	a (Lnet/minecraft/server/Fluid;)Z canPick
	b (Lnet/minecraft/server/Fluid;)Z lambda$static$1
	c (Lnet/minecraft/server/Fluid;)Z lambda$static$0
net/minecraft/server/StructureSettingsFeature net/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration
	a CODEC
	b spacing
	c separation
	d salt
	a ()I spacing
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lnet/minecraft/server/StructureSettingsFeature;)Lcom/mojang/serialization/DataResult; lambda$static$4
	b ()I separation
	b (Lnet/minecraft/server/StructureSettingsFeature;)Ljava/lang/Integer; lambda$null$2
	c ()I salt
	c (Lnet/minecraft/server/StructureSettingsFeature;)Ljava/lang/Integer; lambda$null$1
	d (Lnet/minecraft/server/StructureSettingsFeature;)Ljava/lang/Integer; lambda$null$0
net/minecraft/server/PacketPlayOutResourcePackSend net/minecraft/network/protocol/game/ClientboundResourcePackPacket
	a url
	b hash
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/lang/String; getUrl
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/lang/String; getHash
dya$1 net/minecraft/client/particle/ParticleEngine$1
bcv$b net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal
	a this$0
	a ()Z canUse
aqq net/minecraft/world/entity/OwnableEntity
	A_ ()Ljava/util/UUID; getOwnerUUID
	B_ ()Lnet/minecraft/server/Entity; getOwner
bcv$a net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose
	a CROSSED
	b ATTACKING
	c SPELLCASTING
	d BOW_AND_ARROW
	e CROSSBOW_HOLD
	f CROSSBOW_CHARGE
	g CELEBRATING
	h NEUTRAL
	i $VALUES
dyr$b net/minecraft/client/particle/SuspendedTownParticle$DolphinSpeedProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
aqs net/minecraft/world/entity/PlayerRideable
net/minecraft/server/SensorNearestItems net/minecraft/world/entity/ai/sensing/NearestItemSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityItem;)Z lambda$doTick$2
	a (Lnet/minecraft/server/EntityItem;)Z lambda$doTick$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)V doTick
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	b (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityItem;)Z lambda$doTick$1
dyr$a net/minecraft/client/particle/SuspendedTownParticle$ComposterFillProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dyr$d net/minecraft/client/particle/SuspendedTownParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dyr$c net/minecraft/client/particle/SuspendedTownParticle$HappyVillagerProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
aae$a net/minecraft/server/level/ServerChunkCache$MainThreadExecutor
	a this$0
	au ()Z scheduleExecutables
	av ()Ljava/lang/Thread; getRunningThread
	c (Ljava/lang/Runnable;)V doRunTask
	d (Ljava/lang/Runnable;)Z shouldRun
	e (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	y ()Z pollTask
aqv net/minecraft/world/entity/PowerableMob
	S_ ()Z isPowered
jh$a net/minecraft/data/recipes/ShapedRecipeBuilder$Result
	a this$0
	b id
	c result
	d count
	e group
	f pattern
	g key
	h advancement
	i advancementId
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
net/minecraft/server/EntityItem net/minecraft/world/entity/item/ItemEntity
	ITEM DATA_ITEM
	b bobOffs
	f health
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	Q ()Lnet/minecraft/server/IChatBaseComponent; getName
	a (F)F getSpin
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityItem;)V tryToMerge
	a (Lnet/minecraft/server/EntityItem;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityItem;Lnet/minecraft/server/ItemStack;)V merge
	a (Lnet/minecraft/server/EntityItem;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)V merge
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z areMergable
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;I)Lnet/minecraft/server/ItemStack; merge
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aB ()Z isMovementNoisy
	aC ()Z fireImmune
	a_ (Lnet/minecraft/server/EntityHuman;)V playerTouch
	b (Lnet/minecraft/server/EntityItem;)Z lambda$mergeWithNeighbours$0
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/Entity; changeDimension
	bK ()Z isAttackable
	defaultPickupDelay ()V setDefaultPickUpDelay
	e ()V defineSynchedData
	getItemStack ()Lnet/minecraft/server/ItemStack; getItem
	h (I)V burn
	j ()V tick
	k ()I getAge
	mergeNearby ()V mergeWithNeighbours
	n ()V setNoPickUpDelay
	o ()V setNeverPickUp
	p ()Z hasPickUpDelay
	q ()V setUnlimitedLifetime
	r ()V setExtendedLifetime
	s ()V makeFakeItem
	setItemStack (Lnet/minecraft/server/ItemStack;)V setItem
	setPickupDelay (I)V setPickUpDelay
	t ()Lnet/minecraft/server/EntityItem; copy
	u ()V setUnderwaterMovement
	v ()V setUnderLavaMovement
	z ()Z isMergable
net/minecraft/server/CommandKill net/minecraft/server/commands/KillCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I kill
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/TileEntityPiston net/minecraft/world/level/block/piston/PistonMovingBlockEntity
	a movedState
	b direction
	c extending
	g isSourcePiston
	h NOCLIP
	i progress
	j progressO
	k lastTicked
	l deathTicks
	a (F)F getProgress
	a (Lnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/AxisAlignedBB; moveByPositionAndProgress
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/Entity;)Z matchesStickyCritera
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/AxisAlignedBB;)D getMovement
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/EnumDirection;D)V fixEntityWithinPistonBase
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/Entity;DLnet/minecraft/server/EnumDirection;)V moveEntityByPiston
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	aj_ ()V tick
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (F)F getXOff
	b (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/Entity;)Z lambda$moveStuckEntities$1
	c (F)F getYOff
	d ()Z isExtending
	d (F)F getZOff
	e (F)F getExtendedProgress
	f ()Lnet/minecraft/server/EnumDirection; getDirection
	f (F)V moveCollidedEntities
	g (F)V moveStuckEntities
	h ()Z isSourcePiston
	i ()D getViewDistance
	j ()Lnet/minecraft/server/EnumDirection; getMovementDirection
	k ()Lnet/minecraft/server/IBlockData; getMovedState
	l ()V finalTick
	m ()J getLastTicked
	x ()Lnet/minecraft/server/IBlockData; getCollisionRelatedBlockState
	y ()Z isStickyForEntities
	z ()Lnet/minecraft/server/EnumDirection; lambda$static$0
dca$a net/minecraft/world/level/timers/TimerCallback$Serializer
	a id
	b cls
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/CustomFunctionCallbackTimer;)V serialize
	b ()Ljava/lang/Class; getCls
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallbackTimer; deserialize
dnr$a net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList
	a this$0
	a (Ldlc$a;)V setSelected
	a (Ldnr$a$a;)V setSelected
	a (Ljava/util/Map$Entry;)V lambda$new$1
	b ()Z isFocused
	b (Ljava/util/Map$Entry;)Ljava/lang/String; lambda$new$0
dbo$1 net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$1
byv$1 net/minecraft/world/level/block/PressurePlateBlock$1
	a $SwitchMap$net$minecraft$world$level$block$PressurePlateBlock$Sensitivity
net/minecraft/server/EntityGhast$ControllerGhast net/minecraft/world/entity/monster/Ghast$GhastMoveControl
	i ghast
	j floatDuration
	a ()V tick
	a (Lnet/minecraft/server/Vec3D;I)Z canReach
net/minecraft/server/CommandException net/minecraft/commands/CommandRuntimeException
	a message
	a ()Lnet/minecraft/server/IChatBaseComponent; getComponent
net/minecraft/server/DataConverterWorldGenSettings net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix
	a SPLITTER
	b LAYER_SPLITTER
	c OLD_AMOUNT_SPLITTER
	d AMOUNT_SPLITTER
	e BLOCK_SPLITTER
	a (Lcom/google/common/base/Splitter;ILjava/lang/String;)Ljava/lang/String; lambda$fixString$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	a (Ljava/lang/String;)Ljava/lang/String; fixString
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$1
net/minecraft/server/ItemLingeringPotion net/minecraft/world/item/LingeringPotionItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbni;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
arl net/minecraft/world/entity/ai/attributes/package-info
net/minecraft/server/PacketDataSerializer net/minecraft/network/FriendlyByteBuf
	a source
	a ()[B readByteArray
	a (I)I getVarIntSize
	a (J)I getVarLongSize
	a (Lcom/mojang/serialization/Codec;)Ljava/lang/Object; readWithCodec
	a (Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V writeWithCodec
	a (Ljava/lang/Class;)Ljava/lang/Enum; readEnum
	a (Ljava/lang/Enum;)Lnet/minecraft/server/PacketDataSerializer; writeEnum
	a (Ljava/lang/String;)Lnet/minecraft/server/PacketDataSerializer; writeUtf
	a (Ljava/lang/String;I)Lnet/minecraft/server/PacketDataSerializer; writeUtf
	a (Ljava/util/Collection;Ljava/util/function/BiConsumer;)V writeCollection
	a (Ljava/util/Date;)Lnet/minecraft/server/PacketDataSerializer; writeDate
	a (Ljava/util/UUID;)Lnet/minecraft/server/PacketDataSerializer; writeUUID
	a (Ljava/util/function/BiConsumer;Ljava/lang/Object;)V lambda$writeCollection$0
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/PacketDataSerializer; writeBlockPos
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/PacketDataSerializer; writeChunkPos
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/PacketDataSerializer; writeComponent
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/PacketDataSerializer; writeItem
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/PacketDataSerializer; writeResourceLocation
	a (Lnet/minecraft/server/MovingObjectPositionBlock;)V writeBlockHitResult
	a (Lnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagCompound; readNbt
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/PacketDataSerializer; writeNbt
	a (Lnet/minecraft/server/SectionPosition;)Lnet/minecraft/server/PacketDataSerializer; writeSectionPos
	a ([B)Lnet/minecraft/server/PacketDataSerializer; writeByteArray
	a ([I)Lnet/minecraft/server/PacketDataSerializer; writeVarIntArray
	a ([J)Lnet/minecraft/server/PacketDataSerializer; writeLongArray
	a ([JI)[J readLongArray
	b ()[I readVarIntArray
	b (I)[B readByteArray
	b (J)Lnet/minecraft/server/PacketDataSerializer; writeVarLong
	b ([J)[J readLongArray
	c ()[J readLongArray
	c (I)[I readVarIntArray
	d ()[B accessByteBufWithCorrectSize
	d (I)Lnet/minecraft/server/PacketDataSerializer; writeVarInt
	e ()Lnet/minecraft/server/BlockPosition; readBlockPos
	e (I)Ljava/lang/String; readUtf
	f ()Lnet/minecraft/server/ChunkCoordIntPair; readChunkPos
	g ()Lnet/minecraft/server/SectionPosition; readSectionPos
	h ()Lnet/minecraft/server/IChatBaseComponent; readComponent
	i ()I readVarInt
	j ()J readVarLong
	k ()Ljava/util/UUID; readUUID
	l ()Lnet/minecraft/server/NBTTagCompound; readNbt
	m ()Lnet/minecraft/server/NBTTagCompound; readAnySizeNbt
	n ()Lnet/minecraft/server/ItemStack; readItem
	o ()Ljava/lang/String; readUtf
	p ()Lnet/minecraft/server/MinecraftKey; readResourceLocation
	q ()Ljava/util/Date; readDate
	r ()Lnet/minecraft/server/MovingObjectPositionBlock; readBlockHitResult
net/minecraft/server/PacketPlayInFlying$PacketPlayInPositionLook net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
cqy$a net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces$BuriedTreasurePiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/IBlockData;)Z isLiquid
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/Ticket net/minecraft/server/level/Ticket
	a type
	b ticketLevel
	d createdTick
	identifier key
	a (J)V setCreatedTick
	a (Lnet/minecraft/server/Ticket;)I compareTo
	b ()I getTicketLevel
	b (J)Z timedOut
	getTicketType ()Lnet/minecraft/server/TicketType; getType
net/minecraft/server/WorldGenDecoratorEmerald net/minecraft/world/level/levelgen/placement/EmeraldPlacementDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$place$0
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/EntityAIBodyControl net/minecraft/world/entity/ai/control/BodyRotationControl
	a mob
	b headStableTime
	c lastStableYHeadRot
	a ()V clientTick
	b ()V rotateBodyIfNecessary
	c ()V rotateHeadIfNecessary
	d ()V rotateHeadTowardsFront
	e ()Z notCarryingMobPassengers
	f ()Z isMoving
net/minecraft/server/RecipeItemStack net/minecraft/world/item/crafting/Ingredient
	a EMPTY
	b values
	choices itemStacks
	d stackingIds
	a ()[Lnet/minecraft/server/ItemStack; getItems
	a (I)[Lnet/minecraft/server/ItemStack; lambda$dissolve$2
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/RecipeItemStack; fromJson
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/RecipeItemStack$Provider; valueFromJson
	a (Ljava/util/stream/Stream;)Lnet/minecraft/server/RecipeItemStack; of
	a (Lnet/minecraft/server/ItemStack;)Z test
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$valueFromJson$7
	a (Lnet/minecraft/server/PacketDataSerializer;)V toNetwork
	a (Lnet/minecraft/server/RecipeItemStack$Provider;)Ljava/util/stream/Stream; lambda$dissolve$1
	a (Lnet/minecraft/server/Tag;)Lnet/minecraft/server/RecipeItemStack; of
	a ([Lnet/minecraft/server/IMaterial;)Lnet/minecraft/server/RecipeItemStack; of
	a ([Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/RecipeItemStack; of
	b ()Lit/unimi/dsi/fastutil/ints/IntList; getStackingIds
	b (I)[Lnet/minecraft/server/RecipeItemStack$Provider; lambda$new$0
	b (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/RecipeItemStack$Provider; lambda$fromJson$6
	b (Ljava/util/stream/Stream;)Lnet/minecraft/server/RecipeItemStack; fromValues
	b (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/RecipeItemStack$StackProvider; lambda$of$4
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/RecipeItemStack; fromNetwork
	buildChoices ()V dissolve
	c ()Lcom/google/gson/JsonElement; toJson
	c (Lnet/minecraft/server/ItemStack;)Z lambda$of$3
	c (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/RecipeItemStack$StackProvider; lambda$fromNetwork$5
	d ()Z isEmpty
	e ()Lnet/minecraft/server/RecipeItemStack; of
net/minecraft/server/DataWatcherRegistry net/minecraft/network/syncher/EntityDataSerializers
	a BYTE
	b INT
	c FLOAT
	d STRING
	e COMPONENT
	f OPTIONAL_COMPONENT
	g ITEM_STACK
	h BLOCK_STATE
	i BOOLEAN
	j PARTICLE
	k ROTATIONS
	l BLOCK_POS
	m OPTIONAL_BLOCK_POS
	n DIRECTION
	o OPTIONAL_UUID
	p COMPOUND_TAG
	q VILLAGER_DATA
	r OPTIONAL_UNSIGNED_INT
	s POSE
	t SERIALIZERS
	a (I)Lnet/minecraft/server/DataWatcherSerializer; getSerializer
	a (Lnet/minecraft/server/DataWatcherSerializer;)V registerSerializer
	b (Lnet/minecraft/server/DataWatcherSerializer;)I getSerializedId
net/minecraft/server/DataConverterHealth net/minecraft/util/datafix/fixes/EntityHealthFix
	a ENTITIES
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/server/WorldGenFeatureVillages net/minecraft/data/worldgen/VillagePools
	a ()V bootstrap
dyr$1 net/minecraft/client/particle/SuspendedTownParticle$1
net/minecraft/server/NavigationFlying net/minecraft/world/entity/ai/navigation/FlyingPathNavigation
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
	a (Lnet/minecraft/server/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;III)Z canMoveDirectly
	a (Z)V setCanOpenDoors
	b ()Lnet/minecraft/server/Vec3D; getTempMobPos
	b (Z)V setCanPassDoors
	c ()V tick
	d ()Z canPassDoors
	e ()Z canOpenDoors
net/minecraft/server/IBlockState net/minecraft/world/level/block/state/properties/Property
	a clazz
	b name
	c hashCode
	d codec
	e valueCodec
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/IBlockDataHolder;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; parseValue
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$new$1
	a (Lnet/minecraft/server/IBlockDataHolder;)Lcfg$a; value
	a (Lnet/minecraft/server/IBlockDataHolder;Ljava/lang/Comparable;)Lnet/minecraft/server/IBlockDataHolder; lambda$parseValue$2
	b ()I generateHashCode
	b (Ljava/lang/Comparable;)Lcfg$a; value
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	c ()Ljava/util/stream/Stream; getAllValues
	c (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$null$0
	d ()Lcom/mojang/serialization/Codec; codec
	e ()Lcom/mojang/serialization/Codec; valueCodec
	getType ()Ljava/lang/Class; getValueClass
	getValues ()Ljava/util/Collection; getPossibleValues
net/minecraft/server/DataConverterChunkLightRemove net/minecraft/util/datafix/fixes/ChunkLightRemoveFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
net/minecraft/server/IInventory net/minecraft/world/Container
	a (Ljava/util/Set;)Z hasAnyOf
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/Item;)I countItem
	b (ILnet/minecraft/server/ItemStack;)Z canPlaceItem
	closeContainer (Lnet/minecraft/server/EntityHuman;)V stopOpen
	getSize ()I getContainerSize
	splitStack (II)Lnet/minecraft/server/ItemStack; removeItem
	splitWithoutUpdate (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	update ()V setChanged
net/minecraft/server/GenLayerIcePlains net/minecraft/world/level/newbiome/layer/RemoveTooMuchOceanLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/IBlockFragilePlantElement net/minecraft/world/level/block/BonemealableBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
net/minecraft/server/EntitySmallFireball net/minecraft/world/entity/projectile/SmallFireball
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/server/MovingObjectPositionEntity;)V onHitEntity
	aS ()Z isPickable
ack$b net/minecraft/server/packs/resources/SimpleReloadableResourceManager$ResourcePackLoadingFailure
	a pack
	a ()Lnet/minecraft/server/IResourcePack; getPack
net/minecraft/server/AttributeMapBase net/minecraft/world/entity/ai/attributes/AttributeMap
	a LOGGER
	b attributes
	c dirtyAttributes
	d supplier
	a (Lcom/google/common/collect/Multimap;)V removeAttributeModifiers
	a (Ljava/lang/String;)V lambda$load$6
	a (Lnet/minecraft/server/AttributeBase;)Lnet/minecraft/server/AttributeModifiable; getInstance
	a (Lnet/minecraft/server/AttributeBase;Ljava/util/Collection;)V lambda$removeAttributeModifiers$2
	a (Lnet/minecraft/server/AttributeBase;Ljava/util/UUID;)Z hasModifier
	a (Lnet/minecraft/server/AttributeBase;Lnet/minecraft/server/AttributeModifier;)V lambda$addTransientAttributeModifiers$3
	a (Lnet/minecraft/server/AttributeMapBase;)V assignValues
	a (Lnet/minecraft/server/AttributeModifiable;)V onAttributeModified
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/AttributeBase;)V lambda$load$5
	a (Lnet/minecraft/server/NBTTagList;)V load
	b ()Ljava/util/Collection; getSyncableAttributes
	b (Lcom/google/common/collect/Multimap;)V addTransientAttributeModifiers
	b (Lnet/minecraft/server/AttributeBase;)Z hasAttribute
	b (Lnet/minecraft/server/AttributeBase;Ljava/util/UUID;)D getModifierValue
	b (Lnet/minecraft/server/AttributeModifiable;)V lambda$assignValues$4
	c ()Lnet/minecraft/server/NBTTagList; save
	c (Lnet/minecraft/server/AttributeBase;)D getValue
	c (Lnet/minecraft/server/AttributeModifiable;)Z lambda$getSyncableAttributes$0
	d (Lnet/minecraft/server/AttributeBase;)D getBaseValue
	e (Lnet/minecraft/server/AttributeBase;)Lnet/minecraft/server/AttributeModifiable; lambda$getInstance$1
	getAttributes ()Ljava/util/Set; getDirtyAttributes
ack$a net/minecraft/server/packs/resources/SimpleReloadableResourceManager$FailingReloadInstance
	a exception
	b failedFuture
	a ()Ljava/util/concurrent/CompletableFuture; done
	b ()F getActualProgress
	c ()Z isApplying
	d ()Z isDone
	e ()V checkExceptions
net/minecraft/server/EntityRavager net/minecraft/world/entity/monster/Ravager
	b NO_RAVAGER_AND_ALIVE
	bo attackTick
	bp stunnedTick
	bq roarTick
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	D (Lnet/minecraft/server/Entity;)Z canSee
	H ()V updateControlFlags
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/Entity;)V strongKnockback
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/Entity;)Z lambda$static$0
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	bb ()D getPassengersRidingOffset
	cl ()Lnet/minecraft/server/Entity; getControllingPassenger
	dH ()Z isImmobile
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityLiving;)V blockedByShield
	eK ()I getAttackTick
	eL ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	eM ()I getStunnedTick
	eN ()Z canBeLeader
	eW ()I getRoarTick
	eX ()V stunEffect
	eY ()V roar
	eo ()I getMaxHeadYRot
	er ()Z canBeControlledByRider
	k ()V aiStep
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	o ()V registerGoals
net/minecraft/server/LootTable net/minecraft/world/level/storage/loot/LootTable
	b DEFAULT_PARAM_SET
	c LOGGER
	d paramSet
	e pools
	f functions
	g compositeFunction
	a (Ljava/util/List;ILjava/util/Random;)V shuffleAndSplitItems
	a (Ljava/util/function/Consumer;)Ljava/util/function/Consumer; createStackSplitter
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/ItemStack;)V lambda$createStackSplitter$0
	a (Lnet/minecraft/server/IInventory;Ljava/util/Random;)Ljava/util/List; getAvailableSlots
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/LootTable;)Lnet/minecraft/server/LootContextParameterSet; access$100
	b ()Lcyv$a; lootTable
	b (Lnet/minecraft/server/LootTable;)[Lnet/minecraft/server/LootSelector; access$300
	c ()Lorg/apache/logging/log4j/Logger; access$200
	c (Lnet/minecraft/server/LootTable;)[Lnet/minecraft/server/LootItemFunction; access$400
	fillInventory (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/LootTableInfo;)V fill
	getLootContextParameterSet ()Lnet/minecraft/server/LootContextParameterSet; getParamSet
	populateLoot (Lnet/minecraft/server/LootTableInfo;)Ljava/util/List; getRandomItems
	populateLoot (Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)V getRandomItems
	populateLootDirect (Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)V getRandomItemsRaw
net/minecraft/server/RegistryReadOps net/minecraft/resources/RegistryReadOps
	b LOGGER
	c resources
	d registryHolder
	e readCache
	f jsonOps
	a ()Lorg/apache/logging/log4j/Logger; access$100
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$decodeElement$2
	a (Lcom/mojang/datafixers/util/Pair;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/util/Pair; lambda$decodeElement$3
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/IRegistryCustom$Dimension;)Lnet/minecraft/server/RegistryReadOps; create
	a (Lcom/mojang/serialization/DynamicOps;Lvh$b;Lnet/minecraft/server/IRegistryCustom$Dimension;)Lnet/minecraft/server/RegistryReadOps; create
	a (Ljava/lang/Object;)Ljava/util/function/Supplier; lambda$null$1
	a (Ljava/lang/Object;Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/DataResult; decodeElement
	a (Lnet/minecraft/server/IRegistryWritable;)Lcom/mojang/serialization/DataResult; lambda$registry$11
	a (Lnet/minecraft/server/IRegistryWritable;Lnet/minecraft/server/ResourceKey;)Ljava/lang/Object; lambda$null$8
	a (Lnet/minecraft/server/IRegistryWritable;Lnet/minecraft/server/ResourceKey;Lcom/mojang/datafixers/util/Pair;)Ljava/util/function/Supplier; lambda$readAndRegisterElement$9
	a (Lnet/minecraft/server/RegistryMaterials;Ljava/util/function/Supplier;)Lnet/minecraft/server/RegistryMaterials; lambda$null$4
	a (Lnet/minecraft/server/RegistryMaterials;Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult; decodeElements
	a (Lnet/minecraft/server/ResourceKey;)Lcom/mojang/serialization/DataResult; registry
	a (Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Codec;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/RegistryMaterials;)Lcom/mojang/serialization/DataResult; lambda$decodeElements$5
	a (Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/IRegistryWritable;Lcom/mojang/serialization/Codec;Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/serialization/DataResult; readAndRegisterElement
	b (Ljava/lang/Object;)Ljava/lang/Object; lambda$null$0
	b (Lnet/minecraft/server/IRegistryWritable;Lnet/minecraft/server/ResourceKey;)Ljava/lang/Object; lambda$readAndRegisterElement$7
	b (Lnet/minecraft/server/ResourceKey;)Lvh$a; readCache
	c (Lnet/minecraft/server/IRegistryWritable;Lnet/minecraft/server/ResourceKey;)Ljava/lang/Object; lambda$readAndRegisterElement$6
	c (Lnet/minecraft/server/ResourceKey;)Lcom/mojang/serialization/DataResult; lambda$registry$12
	d (Lnet/minecraft/server/ResourceKey;)Lvh$a; lambda$readCache$10
net/minecraft/server/DataConverterChunkStatus net/minecraft/util/datafix/fixes/ChunkStatusFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
ank$a net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$AttributeDescription
	a name
	b getter
	c description
	d type
	a ()Ljavax/management/MBeanAttributeInfo; asMBeanAttributeInfo
	a (Lank$a;)Ljava/util/function/Supplier; access$100
	b (Lank$a;)Ljava/lang/String; access$200
	c (Lank$a;)Ljavax/management/MBeanAttributeInfo; access$300
net/minecraft/server/SensorPiglinBruteSpecific net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
net/minecraft/server/EnchantmentWeaponDamage net/minecraft/world/item/enchantment/DamageEnchantment
	a type
	d NAMES
	e MIN_COST
	f LEVEL_COST
	g LEVEL_COST_SPAN
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/server/EnumMonsterType;)F getDamageBonus
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;I)V doPostAttack
	a (Lnet/minecraft/server/ItemStack;)Z canEnchant
	b (I)I getMaxCost
net/minecraft/server/FluidTypes net/minecraft/world/level/material/Fluids
	a (Ljava/lang/String;Lnet/minecraft/server/FluidType;)Lnet/minecraft/server/FluidType; register
net/minecraft/server/WorldGenMineshaftPieces$WorldGenMineshaftRoom net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftRoom
	b childEntranceBoxes
	a (III)V move
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/LootSerialization net/minecraft/world/level/storage/loot/Deserializers
	a ()Lcom/google/gson/GsonBuilder; createConditionSerializer
	b ()Lcom/google/gson/GsonBuilder; createFunctionSerializer
	c ()Lcom/google/gson/GsonBuilder; createLootTableSerializer
net/minecraft/server/MobSpawner net/minecraft/world/level/CustomSpawner
	a (Lnet/minecraft/server/WorldServer;ZZ)I tick
net/minecraft/server/MobEffects net/minecraft/world/effect/MobEffects
	ABSORBTION ABSORPTION
	FASTER_DIG DIG_SPEED
	FASTER_MOVEMENT MOVEMENT_SPEED
	INCREASE_DAMAGE DAMAGE_BOOST
	RESISTANCE DAMAGE_RESISTANCE
	SLOWER_DIG DIG_SLOWDOWN
	SLOWER_MOVEMENT MOVEMENT_SLOWDOWN
	a (ILjava/lang/String;Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/MobEffectList; register
net/minecraft/server/BehaviorStrollRandom net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll
	b speedModifier
	c maxXyDist
	d maxYDist
	a (Lnet/minecraft/server/EntityCreature;)V setRandomPos
	a (Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/SectionPosition;)V setTargetedPos
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/MemoryTarget; lambda$setRandomPos$1
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/MemoryTarget; lambda$setTargetedPos$0
net/minecraft/server/EntitySenses net/minecraft/world/entity/ai/sensing/Sensing
	a mob
	b seen
	c unseen
	a ()V tick
	a (Lnet/minecraft/server/Entity;)Z canSee
net/minecraft/server/WorldGenBlockPlacerDoublePlant net/minecraft/world/level/levelgen/feature/blockplacers/DoublePlantPlacer
	b CODEC
	c INSTANCE
	a ()Lnet/minecraft/server/WorldGenBlockPlacers; type
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)V place
	b ()Lnet/minecraft/server/WorldGenBlockPlacerDoublePlant; lambda$static$0
net/minecraft/server/GenLayerZoomVoronoi net/minecraft/world/level/biome/FuzzyOffsetBiomeZoomer
	b $VALUES
	a (D)D sqr
	a (J)D getFiddle
	a (JIIIDDD)D getFiddledDistance
	a (JIIILnet/minecraft/server/BiomeManager$Provider;)Lnet/minecraft/server/BiomeBase; getBiome
auq net/minecraft/world/entity/ai/behavior/package-info
net/minecraft/server/CommandSpreadPlayers net/minecraft/server/commands/SpreadPlayersCommand
	a ERROR_FAILED_TO_SPREAD_TEAMS
	b ERROR_FAILED_TO_SPREAD_ENTITIES
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Ljava/util/Collection;)I getNumberOfTeams
	a (Ljava/util/Collection;Lnet/minecraft/server/WorldServer;[Lyj$a;IZ)D setPlayerPositions
	a (Ljava/util/Random;IDDDD)[Lyj$a; createInitialPositions
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Vec2F;FFIZLjava/util/Collection;)I spreadPlayers
	a (Lnet/minecraft/server/Vec2F;DLnet/minecraft/server/WorldServer;Ljava/util/Random;DDDDI[Lyj$a;Z)V spreadPositions
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
aus net/minecraft/world/entity/ai/control/Control
ddu$a com/mojang/blaze3d/audio/OggAudioStream$OutputConcat
	a buffers
	b bufferSize
	c byteCount
	d currentBuffer
	a ()Ljava/nio/ByteBuffer; get
	a (F)V put
	a (Lddu$a;)I access$000
	b ()V createNewBuffer
net/minecraft/server/LootEntrySequence net/minecraft/world/level/storage/loot/entries/SequentialEntry
	a ()Lnet/minecraft/server/LootEntryType; getType
	a ([Lczn$a;)Lczr$a; sequential
	a ([Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; compose
	a ([Lnet/minecraft/server/LootEntryChildren;Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z lambda$compose$0
net/minecraft/server/DataConverterPainting net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix
	a MAP
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Ljava/util/HashMap;)V lambda$static$0
auz net/minecraft/world/entity/ai/control/package-info
cl$a net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance
	a block
	b state
	a (Lnet/minecraft/server/Block;)Lcl$a; slidesDownBlock
	a (Lnet/minecraft/server/IBlockData;)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
net/minecraft/server/WorldServer net/minecraft/server/level/ServerLevel
	L blockEvents
	Q tickTime
	a END_SPAWN_POINT
	chunkProvider chunkSource
	dragonBattle dragonFight
	entitiesByUUID entitiesByUuid
	entitiesToAdd toAddAfterTick
	everyoneSleeping allPlayersSleeping
	mobSpawners customSpawners
	navigators navigations
	nextTickListBlock blockTicks
	nextTickListFluid liquidTicks
	persistentRaid raids
	portalTravelAgent portalForcer
	savingDisabled noSave
	structureManager structureFeatureManager
	ticking handlingTick
	worldDataServer serverLevelData
	x LOGGER
	A ()Ljava/lang/Iterable; getAllEntities
	C ()J getSeed
	D (Lnet/minecraft/server/BlockPosition;)V lambda$null$11
	E ()Lnet/minecraft/server/WorldServer; getLevel
	F ()Lnet/minecraft/server/Scoreboard; getScoreboard
	G ()Lnet/minecraft/server/IChunkProvider; getChunkSource
	H ()Lnet/minecraft/server/TickList; getLiquidTicks
	I ()Lnet/minecraft/server/TickList; getBlockTicks
	a (I)Lnet/minecraft/server/Entity; getEntity
	a (III)Lnet/minecraft/server/BiomeBase; getUncachedNoiseBiome
	a (IIZZ)V setWeatherParameters
	a (ILnet/minecraft/server/BlockPosition;I)V destroyBlockProgress
	a (Ljava/io/Writer;)V dumpBlockEntities
	a (Ljava/io/Writer;Ljava/lang/Iterable;)V dumpEntities
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldMap; getMapData
	a (Ljava/nio/file/Path;)V saveDebugReport
	a (Ljava/util/function/Predicate;)Ljava/util/List; getPlayers
	a (Lnet/minecraft/server/BiomeBase;Lnet/minecraft/server/BiomeBase;)Z lambda$findNearestBiome$9
	a (Lnet/minecraft/server/BiomeBase;Lnet/minecraft/server/BlockPosition;II)Lnet/minecraft/server/BlockPosition; findNearestBiome
	a (Lnet/minecraft/server/Block;)Z lambda$new$0
	a (Lnet/minecraft/server/BlockActionData;)Z doBlockEvent
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; findLightingTargetAround
	a (Lnet/minecraft/server/BlockPosition;F)V setDefaultSpawnPos
	a (Lnet/minecraft/server/BlockPosition;I)Z isCloseToVillage
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V blockUpdated
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;II)V blockEvent
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V onBlockStateChange
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;I)V sendBlockUpdated
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;)V lambda$onBlockStateChange$14
	a (Lnet/minecraft/server/Chunk;I)V tickChunk
	a (Lnet/minecraft/server/Entity;B)V broadcastEntityEvent
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;Lnet/minecraft/server/ExplosionDamageCalculator;DDDFZLnet/minecraft/server/Explosion$Effect;)Lnet/minecraft/server/Explosion; explode
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)V tickPassenger
	a (Lnet/minecraft/server/EntityHuman;DDDLnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EntityHuman;ILnet/minecraft/server/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;)Z mayInteract
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EntityLiving;)Z lambda$findLightingTargetAround$6
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ParticleParam;ZDDDIDDDD)Z sendParticles
	a (Lnet/minecraft/server/EntityPlayer;ZDDDLnet/minecraft/server/Packet;)Z sendParticles
	a (Lnet/minecraft/server/EntityTypes;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/server/EnumDirection;Z)F getShade
	a (Lnet/minecraft/server/FluidType;)Z lambda$new$1
	a (Lnet/minecraft/server/MinecraftServer;)Lnet/minecraft/server/WorldPersistentData; lambda$new$2
	a (Lnet/minecraft/server/NextTickListEntry;)V tickLiquid
	a (Lnet/minecraft/server/ParticleParam;DDDIDDDD)I sendParticles
	a (Lnet/minecraft/server/ReputationEvent;Lnet/minecraft/server/Entity;Lnet/minecraft/server/ReputationHandler;)V onReputationEvent
	a (Lnet/minecraft/server/SectionPosition;)Z isVillage
	a (Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/StructureGenerator;)Ljava/util/stream/Stream; startsForFeature
	a (Lnet/minecraft/server/StructureBoundingBox;)V clearBlockEvents
	a (Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/BlockActionData;)Z lambda$clearBlockEvents$15
	a (Lnet/minecraft/server/StructureGenerator;Lnet/minecraft/server/BlockPosition;IZ)Lnet/minecraft/server/BlockPosition; findNearestMapFeature
	a (Lnet/minecraft/server/WorldMap;)V setMapData
	a (Lnet/minecraft/server/WorldServer;)V makeObsidianPlatform
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V lambda$makeObsidianPlatform$17
	a_ (Lnet/minecraft/server/BlockPosition;)Z isVillage
	addAllEntitiesSafely (Lnet/minecraft/server/Entity;)Z tryAddFreshEntityWithPassengers
	addEntity0 (Lnet/minecraft/server/Entity;)Z addEntity
	addEntityChunk (Lnet/minecraft/server/Entity;)Z loadFromChunk
	addEntitySerialized (Lnet/minecraft/server/Entity;)Z addWithUUID
	addEntityTeleport (Lnet/minecraft/server/Entity;)V addFromAnotherDimension
	addPlayer0 (Lnet/minecraft/server/EntityPlayer;)V addPlayer
	addPlayerCommand (Lnet/minecraft/server/EntityPlayer;)V addDuringCommandTeleport
	addPlayerJoin (Lnet/minecraft/server/EntityPlayer;)V addNewPlayer
	addPlayerPortal (Lnet/minecraft/server/EntityPlayer;)V addDuringPortalTeleport
	addPlayerRespawn (Lnet/minecraft/server/EntityPlayer;)V addRespawnedPlayer
	ai ()V saveLevelData
	aj ()V runBlockEvents
	ak ()Lnet/minecraft/server/PersistentRaid; lambda$new$3
	b ()V tickTime
	b (ILnet/minecraft/server/BlockPosition;I)V globalLevelEvent
	b (Ljava/lang/String;)Lnet/minecraft/server/WorldMap; lambda$getMapData$10
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;)V lambda$null$13
	b (Lnet/minecraft/server/NextTickListEntry;)V tickBlock
	b (Lnet/minecraft/server/SectionPosition;)I sectionsToVillage
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V lambda$makeObsidianPlatform$16
	b_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Raid; getRaidAt
	c (Ljava/util/UUID;)Lnet/minecraft/server/Entity; findAddedOrPendingEntity
	c (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;)V lambda$onBlockStateChange$12
	c (Lnet/minecraft/server/Entity;)Z addFreshEntity
	c_ (Lnet/minecraft/server/BlockPosition;)Z isRaided
	chunkCheck (Lnet/minecraft/server/Entity;)V updateChunkPos
	clearWeather ()V stopWeather
	doMobSpawning (ZZ)V tickCustomSpawners
	doTick (Ljava/util/function/BooleanSupplier;)V tick
	entityJoinedWorld (Lnet/minecraft/server/Entity;)V tickNonPassenger
	everyoneSleeping ()V updateSleepingPlayerList
	g ()Ljava/util/List; getDragons
	g (Lnet/minecraft/server/EntityPlayer;)V lambda$wakeUpAllPlayers$5
	getDragonBattle ()Lnet/minecraft/server/EnderDragonBattle; dragonFight
	getForceLoadedChunks ()Lit/unimi/dsi/fastutil/longs/LongSet; getForcedChunks
	getPersistentRaid ()Lnet/minecraft/server/PersistentRaid; getRaids
	getSpawn ()Lnet/minecraft/server/BlockPosition; getSharedSpawnPos
	getStructureManager ()Lnet/minecraft/server/StructureManager; structureFeatureManager
	getTravelAgent ()Lnet/minecraft/server/PortalTravelAgent; getPortalForcer
	getWorldPersistentData ()Lnet/minecraft/server/WorldPersistentData; getDataStorage
	h (Lnet/minecraft/server/EntityPlayer;)Z lambda$tick$4
	i ()Lnet/minecraft/server/ChunkProviderServer; getChunkSource
	isFlatWorld ()Z isFlat
	isUUIDTaken (Lnet/minecraft/server/Entity;)Z isUUIDUsed
	j ()Lnet/minecraft/server/TickListServer; getBlockTicks
	l ()Lnet/minecraft/server/MinecraftServer; getServer
	m_ ()Z isHandlingTick
	n ()Lnet/minecraft/server/DefinedStructureManager; getStructureManager
	o ()Lnet/minecraft/server/CraftingManager; getRecipeManager
	o_ ()Lnet/minecraft/server/ScoreboardServer; getScoreboard
	p ()Lnet/minecraft/server/ITagRegistry; getTagManager
	q ()Z noSave
	q (Lnet/minecraft/server/Entity;)Ljava/lang/String; lambda$tickPassenger$8
	q_ ()Lnet/minecraft/server/EntityPlayer; getRandomPlayer
	r ()Lnet/minecraft/server/IRegistryCustom; registryAccess
	r (Lnet/minecraft/server/Entity;)Ljava/lang/String; lambda$tickNonPassenger$7
	r_ ()Lnet/minecraft/server/TickListServer; getLiquidTicks
	registerEntity (Lnet/minecraft/server/Entity;)V add
	removeEntity (Lnet/minecraft/server/Entity;)V despawn
	removeEntityFromChunk (Lnet/minecraft/server/Entity;)V removeFromChunk
	removePlayer (Lnet/minecraft/server/EntityPlayer;)V removePlayerImmediately
	setForceLoaded (IIZ)Z setChunkForced
	t ()I getFreeMapId
	unloadChunk (Lnet/minecraft/server/Chunk;)V unload
	unregisterEntity (Lnet/minecraft/server/Entity;)V onEntityRemoved
	v ()F getSharedSpawnAngle
	wakeupPlayers ()V wakeUpAllPlayers
	x ()Ljava/util/List; players
	y ()Lnet/minecraft/server/VillagePlace; getPoiManager
net/minecraft/server/LootItemFunctionType net/minecraft/world/level/storage/loot/functions/LootItemFunctionType
net/minecraft/server/ContainerFurnace net/minecraft/world/inventory/AbstractFurnaceMenu
	c level
	e data
	f recipeType
	furnace container
	g recipeBookType
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IRecipe;)Z recipeMatches
	a (Lnet/minecraft/server/ItemStack;)Z canSmelt
	a (ZLnet/minecraft/server/IRecipe;Lnet/minecraft/server/EntityPlayer;)V handlePlacement
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	b (Lnet/minecraft/server/ItemStack;)Z isFuel
	e ()V clearCraftingContent
	f ()I getResultSlotIndex
	g ()I getGridWidth
	h ()I getGridHeight
	i ()I getSize
	j ()I getBurnProgress
	k ()I getLitProgress
	l ()Z isLit
	m ()Lnet/minecraft/server/RecipeBookType; getRecipeBookType
net/minecraft/server/DispenseBehaviorBoat net/minecraft/core/dispenser/BoatDispenseItemBehavior
	b defaultDispenseItemBehavior
	c type
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
dzu$1 net/minecraft/client/renderer/ItemInHandRenderer$1
	a $SwitchMap$net$minecraft$world$item$UseAnim
net/minecraft/server/InventorySubcontainer net/minecraft/world/SimpleContainer
	a size
	c listeners
	Y_ ()V clearContent
	Z_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IInventoryListener;)V addListener
	a (Lnet/minecraft/server/Item;I)Lnet/minecraft/server/ItemStack; removeItemType
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; addItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isSameItem
	a (Lnet/minecraft/server/NBTTagList;)V fromTag
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/server/IInventoryListener;)V removeListener
	b (Lnet/minecraft/server/ItemStack;)Z canAddItem
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)V moveItemsBetweenStacks
	c ()Z isEmpty
	c (Lnet/minecraft/server/ItemStack;)V moveItemToEmptySlots
	d (Lnet/minecraft/server/ItemStack;)V moveItemToOccupiedSlotsWithSameType
	e (Lnet/minecraft/server/ItemStack;)Z lambda$toString$1
	f ()Ljava/util/List; removeAllItems
	f (Lnet/minecraft/server/ItemStack;)Z lambda$removeAllItems$0
	g ()Lnet/minecraft/server/NBTTagList; createTag
	update ()V setChanged
net/minecraft/server/DataConverterMiscUUID net/minecraft/util/datafix/fixes/LevelUUIDFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$11
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$9
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
	b (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$5
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateWanderingTrader
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateDragonFight
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateCustomBossEvents
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateCustomBossEvents$12
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$10
	g (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$8
	h (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$7
	i (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateDragonFight$6
	j (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$4
	k (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$3
	l (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
net/minecraft/server/WorldGenFeatureVillageSavanna net/minecraft/data/worldgen/SavannaVillagePools
	a START
	a ()V bootstrap
net/minecraft/server/LootItemCondition net/minecraft/world/level/storage/loot/predicates/LootItemCondition
	b ()Lnet/minecraft/server/LootItemConditionType; getType
dns$a$a net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry
	a this$1
	a (DDI)Z mouseClicked
	a (Ldfj;II)V blitSlotBg
	a (Ldfj;IIIIIIIZF)V render
	a (Ldfj;IILnet/minecraft/server/ItemStack;)V blitSlot
net/minecraft/server/DataConverterUUIDBase net/minecraft/util/datafix/fixes/AbstractUUIDFix
	a LOGGER
	b typeReference
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateNamedChoice
	a (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; createUUIDFromML
	a (Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional; createUUIDTag
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; lambda$createUUIDFromString$4
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional; createUUIDFromString
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; replaceUUIDString
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$replaceUUIDMLTag$2
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$replaceUUIDLeastMost$3
	a (Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$updateNamedChoice$0
	b (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; replaceUUIDMLTag
	b (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$replaceUUIDString$1
	c (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; replaceUUIDLeastMost
	d (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; createUUIDFromLongs
net/minecraft/server/CriterionTriggerBeeNestDestroyed net/minecraft/advancements/critereon/BeeNestDestroyedTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/Block; deserializeBlock
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lam$a; createInstance
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/ItemStack;ILam$a;)Z lambda$trigger$1
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Block;Lnet/minecraft/server/ItemStack;I)V trigger
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$deserializeBlock$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
awe net/minecraft/world/entity/ai/goal/MoveIndoorsGoal
	a mob
	b insideX
	c insideZ
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	g ()Z isInside
net/minecraft/server/PlayerConnectionUtils net/minecraft/network/protocol/PacketUtils
	a LOGGER
	a (Lnet/minecraft/server/PacketListener;Lnet/minecraft/server/Packet;)V lambda$ensureRunningOnSameThread$0
	ensureMainThread (Lnet/minecraft/server/Packet;Lnet/minecraft/server/PacketListener;Lnet/minecraft/server/IAsyncTaskHandler;)V ensureRunningOnSameThread
	ensureMainThread (Lnet/minecraft/server/Packet;Lnet/minecraft/server/PacketListener;Lnet/minecraft/server/WorldServer;)V ensureRunningOnSameThread
net/minecraft/server/MerchantRecipe net/minecraft/world/item/trading/MerchantOffer
	buyingItem1 baseCostA
	buyingItem2 costB
	sellingItem result
	specialPrice specialPriceDiff
	a ()Lnet/minecraft/server/ItemStack; getBaseCostA
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z satisfiedBy
	a (Lnet/minecraft/server/MerchantRecipe;)Z isSame
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z take
	c (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isRequiredItem
	e ()V updateDemand
	f ()Lnet/minecraft/server/ItemStack; assemble
	getBuyItem1 ()Lnet/minecraft/server/ItemStack; getCostA
	getBuyItem2 ()Lnet/minecraft/server/ItemStack; getCostB
	getSellingItem ()Lnet/minecraft/server/ItemStack; getResult
	getSpecialPrice ()I getSpecialPriceDiff
	increaseSpecialPrice (I)V addToSpecialPriceDiff
	isFullyUsed ()Z isOutOfStock
	isRewardExp ()Z shouldRewardExp
	q ()V setToOutOfStock
	r ()Z needsRestock
	setSpecialPrice ()V resetSpecialPriceDiff
	setSpecialPrice (I)V setSpecialPriceDiff
	t ()Lnet/minecraft/server/NBTTagCompound; createTag
awo net/minecraft/world/entity/ai/goal/PlayGoal
	a mob
	b followFriend
	c speedModifier
	d playTime
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/RecipeBook net/minecraft/stats/RecipeBook
	c bookSettings
	recipes known
	toBeDisplayed highlight
	a ()Lnet/minecraft/server/RecipeBookSettings; getBookSettings
	a (Lnet/minecraft/server/ContainerRecipeBook;)Z isFiltering
	a (Lnet/minecraft/server/IRecipe;)V add
	a (Lnet/minecraft/server/MinecraftKey;)V add
	a (Lnet/minecraft/server/RecipeBook;)V copyOverData
	a (Lnet/minecraft/server/RecipeBookSettings;)V setBookSettings
	a (Lnet/minecraft/server/RecipeBookType;)Z isOpen
	a (Lnet/minecraft/server/RecipeBookType;Z)V setOpen
	a (Lnet/minecraft/server/RecipeBookType;ZZ)V setBookSetting
	b (Lnet/minecraft/server/IRecipe;)Z contains
	b (Lnet/minecraft/server/RecipeBookType;)Z isFiltering
	b (Lnet/minecraft/server/RecipeBookType;Z)V setFiltering
	c (Lnet/minecraft/server/IRecipe;)V remove
	c (Lnet/minecraft/server/MinecraftKey;)V remove
	d (Lnet/minecraft/server/IRecipe;)Z willHighlight
	d (Lnet/minecraft/server/MinecraftKey;)V addHighlight
	e (Lnet/minecraft/server/IRecipe;)V removeHighlight
	f (Lnet/minecraft/server/IRecipe;)V addHighlight
	hasDiscoveredRecipe (Lnet/minecraft/server/MinecraftKey;)Z contains
net/minecraft/server/EntityHorseMule net/minecraft/world/entity/animal/horse/Mule
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eO ()V playChestEquipsSound
	fg ()Lnet/minecraft/server/SoundEffect; getEatingSound
	fh ()Lnet/minecraft/server/SoundEffect; getAngrySound
net/minecraft/server/AreaTransformer6 net/minecraft/world/level/newbiome/layer/traits/C1Transformer
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
net/minecraft/server/WorldGenDecoratorSolidTop net/minecraft/world/level/levelgen/placement/TopSolidHeightMapDecorator
	a (Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;)Lnet/minecraft/server/HeightMap$Type; type
	a (Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;)Lnet/minecraft/server/HeightMap$Type; type
net/minecraft/server/DataConverterProtoChunk net/minecraft/util/datafix/fixes/ChunkToProtochunkFix
	a ()Ljava/lang/IllegalStateException; lambda$null$5
	a (I)Lit/unimi/dsi/fastutil/shorts/ShortArrayList; lambda$null$2
	a (III)S packOffsetCoordinates
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$7
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$6
	a (Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$null$0
	a (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; lambda$null$1
	a (Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/shorts/ShortList;)Lcom/mojang/serialization/Dynamic; lambda$null$4
	a (Ljava/util/List;Lcom/mojang/serialization/Dynamic;)V lambda$null$3
net/minecraft/server/AreaTransformer7 net/minecraft/world/level/newbiome/layer/traits/CastleTransformer
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/AreaTransformer4 net/minecraft/world/level/newbiome/layer/traits/BishopTransformer
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/AreaTransformer5 net/minecraft/world/level/newbiome/layer/traits/C0Transformer
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
dfj$1 com/mojang/blaze3d/vertex/PoseStack$1
net/minecraft/server/WorldGenHugeMushroomBrown net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature
	a (IIII)I getTreeRadiusForHeight
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration;)V makeCap
net/minecraft/server/AreaTransformer8 net/minecraft/world/level/newbiome/layer/traits/PixelTransformer
gp$1 net/minecraft/core/SectionPos$1
	a cursor
	b val$minX
	c val$minY
	d val$minZ
	e val$maxX
	f val$maxY
	g val$maxZ
net/minecraft/server/NBTList net/minecraft/nbt/CollectionTag
	a (ILnet/minecraft/server/NBTBase;)Z setTag
	b (ILnet/minecraft/server/NBTBase;)Z addTag
	c (I)Lnet/minecraft/server/NBTBase; remove
	c (ILnet/minecraft/server/NBTBase;)V add
	d_ ()B getElementType
axb net/minecraft/world/entity/ai/goal/TakeFlowerGoal
	a villager
	b golem
	c pickupTick
	d takeFlower
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/InventoryUtils net/minecraft/world/Containers
	a RANDOM
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V lambda$dropContents$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/NonNullList;)V dropContents
	dropEntity (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;Lnet/minecraft/server/IInventory;)V dropContents
	dropInventory (Lnet/minecraft/server/World;DDDLnet/minecraft/server/IInventory;)V dropContents
	dropInventory (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IInventory;)V dropContents
	dropItem (Lnet/minecraft/server/World;DDDLnet/minecraft/server/ItemStack;)V dropItemStack
net/minecraft/server/FormattedString net/minecraft/util/FormattedCharSequence
	a EMPTY
	a ()Lnet/minecraft/server/FormattedString; composite
	a (ILnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/FormattedString; codepoint
	a (Ljava/lang/String;Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/FormattedString; forward
	a (Ljava/lang/String;Lnet/minecraft/server/ChatModifier;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lnet/minecraft/server/FormattedString; forward
	a (Ljava/lang/String;Lnet/minecraft/server/ChatModifier;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Lnet/minecraft/server/FormattedStringEmpty;)Z lambda$backward$5
	a (Ljava/lang/String;Lnet/minecraft/server/ChatModifier;Lnet/minecraft/server/FormattedStringEmpty;)Z lambda$backward$4
	a (Ljava/util/List;)Lnet/minecraft/server/FormattedString; composite
	a (Ljava/util/List;Lnet/minecraft/server/FormattedStringEmpty;)Z lambda$fromList$8
	a (Lnet/minecraft/server/ChatModifier;ILnet/minecraft/server/FormattedStringEmpty;)Z lambda$codepoint$1
	a (Lnet/minecraft/server/FormattedString;)Lnet/minecraft/server/FormattedString; composite
	a (Lnet/minecraft/server/FormattedString;Lnet/minecraft/server/FormattedString;)Lnet/minecraft/server/FormattedString; composite
	a (Lnet/minecraft/server/FormattedString;Lnet/minecraft/server/FormattedString;Lnet/minecraft/server/FormattedStringEmpty;)Z lambda$fromPair$7
	a (Lnet/minecraft/server/FormattedStringEmpty;)Z lambda$static$0
	a (Lnet/minecraft/server/FormattedStringEmpty;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lnet/minecraft/server/FormattedStringEmpty; decorateOutput
	a (Lnet/minecraft/server/FormattedStringEmpty;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;ILnet/minecraft/server/ChatModifier;I)Z lambda$decorateOutput$6
	a ([Lnet/minecraft/server/FormattedString;)Lnet/minecraft/server/FormattedString; composite
	b (Ljava/lang/String;Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/FormattedString; backward
	b (Ljava/lang/String;Lnet/minecraft/server/ChatModifier;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lnet/minecraft/server/FormattedString; backward
	b (Ljava/lang/String;Lnet/minecraft/server/ChatModifier;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Lnet/minecraft/server/FormattedStringEmpty;)Z lambda$forward$3
	b (Ljava/lang/String;Lnet/minecraft/server/ChatModifier;Lnet/minecraft/server/FormattedStringEmpty;)Z lambda$forward$2
	b (Ljava/util/List;)Lnet/minecraft/server/FormattedString; fromList
	b (Lnet/minecraft/server/FormattedString;Lnet/minecraft/server/FormattedString;)Lnet/minecraft/server/FormattedString; fromPair
axk net/minecraft/world/entity/ai/goal/package-info
net/minecraft/server/TickListWorldGen net/minecraft/server/level/WorldGenTickList
	a index
	a ()I size
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
mi$1 net/minecraft/nbt/IntTag$1
	a ()Ljava/lang/String; getName
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagInt; load
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; load
	c ()Z isValue
dlc$1 net/minecraft/client/gui/components/AbstractSelectionList$1
net/minecraft/server/EntityFireball net/minecraft/world/entity/projectile/AbstractHurtingProjectile
	dirX xPower
	dirY yPower
	dirZ zPower
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	W_ ()Z shouldBurn
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/Entity;)Z canHitEntity
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aQ ()F getBrightness
	aS ()Z isPickable
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bf ()F getPickRadius
	e ()V defineSynchedData
	h ()Lnet/minecraft/server/ParticleParam; getTrailParticle
	i ()F getInertia
	j ()V tick
net/minecraft/server/DataConverterAddChoices net/minecraft/util/datafix/fixes/AddNewChoices
	a name
	b type
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$cap$1
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
axv net/minecraft/world/entity/ai/goal/target/package-info
net/minecraft/server/DataConverterPotionWater net/minecraft/util/datafix/fixes/ItemWaterPotionFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
axy net/minecraft/world/entity/ai/gossip/package-info
net/minecraft/server/PacketPlayOutPosition$EnumPlayerTeleportFlags net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket$RelativeArgument
	f bit
	g $VALUES
	a ()I getMask
	a (I)Ljava/util/Set; unpack
	a (Ljava/util/Set;)I pack
	b (I)Z isSet
dxf$c net/minecraft/client/particle/CritParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dxf$b net/minecraft/client/particle/CritParticle$MagicProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/EnchantmentProtection net/minecraft/world/item/enchantment/ProtectionEnchantment
	a type
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/server/DamageSource;)I getDamageProtection
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	a (Lnet/minecraft/server/EntityLiving;D)D getExplosionKnockbackAfterDampener
	a (Lnet/minecraft/server/EntityLiving;I)I getFireAfterDampener
	b (I)I getMaxCost
net/minecraft/server/BehaviorTarget net/minecraft/world/entity/ai/behavior/BlockPosTracker
	a blockPos
	b centerPosition
	a ()Lnet/minecraft/server/Vec3D; currentPosition
	a (Lnet/minecraft/server/EntityLiving;)Z isVisibleBy
	b ()Lnet/minecraft/server/BlockPosition; currentBlockPosition
ayd net/minecraft/world/entity/ai/memory/package-info
ayk net/minecraft/world/entity/ai/package-info
ayj net/minecraft/world/entity/ai/navigation/package-info
net/minecraft/server/VoxelShapeSpliterator net/minecraft/world/level/CollisionSpliterator
	a source
	b box
	c context
	d cursor
	e pos
	f entityShape
	g collisionGetter
	h needsBorderCheck
	i predicate
	a (II)Lnet/minecraft/server/IBlockAccess; getChunk
	a (Ljava/util/function/Consumer;)Z collisionCheck
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)Z lambda$new$0
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/AxisAlignedBB;)Z isCloseToBorder
	a (Lnet/minecraft/server/WorldBorder;Lnet/minecraft/server/AxisAlignedBB;)Z isBoxFullyWithinWorldBorder
	b (Ljava/util/function/Consumer;)Z worldBorderCheck
	b (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/AxisAlignedBB;)Z isOutsideBorder
net/minecraft/server/DataConverterRecipeBase net/minecraft/util/datafix/fixes/RecipesRenameFix
	a name
	b renamer
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
dxf$a net/minecraft/client/particle/CritParticle$DamageIndicatorProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dwt$1 net/minecraft/client/multiplayer/ServerStatusPinger$1
	a val$connection
	b val$data
	c val$onPersistentDataChange
	d this$0
	e success
	f receivedPing
	g pingStart
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/PacketStatusOutPong;)V handlePongResponse
	a (Lnet/minecraft/server/PacketStatusOutServerInfo;)V handleStatusResponse
dwt$2 net/minecraft/client/multiplayer/ServerStatusPinger$2
	a val$address
	b val$data
	c this$0
bz$b net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory
net/minecraft/server/ArgumentAngle net/minecraft/commands/arguments/AngleArgument
	a ERROR_NOT_COMPLETE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentAngle; angle
	a (Lcom/mojang/brigadier/StringReader;)Lde$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)F getAngle
dat$a net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSmelt; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
bz$a net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory
net/minecraft/server/DataConverterWorldGenSettingsBuilding net/minecraft/util/datafix/fixes/WorldGenSettingsFix
	a DEFAULTS
	a (JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; noise
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)V lambda$fix$6
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	a (Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic; defaultOverworld
	a (Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object; vanillaLevels
	a (Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic; vanillaBiomeSource
	a (Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V lambda$null$7
	a (Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V lambda$null$8
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map; fixFlatStructures
	a (Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic; lambda$fixFlatStructures$12
	a (Lcom/mojang/serialization/OptionalDynamic;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic; lambda$fixFlatStructures$11
	a (Ljava/lang/String;)Ljava/lang/String; lambda$fix$1
	a (Ljava/lang/String;I)I getInt
	a (Ljava/lang/String;II)I getInt
	a (Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V setSpacing
	a (Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; lambda$fix$2
	a (Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V lambda$null$9
	a (Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V lambda$fixFlatStructures$10
	b (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; lambda$fix$5
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$4
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$3
net/minecraft/server/DispenseBehaviorMaybe net/minecraft/core/dispenser/OptionalDispenseItemBehavior
	dispensed success
	a ()Z isSuccess
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
	a (Z)V setSuccess
brq$h net/minecraft/world/level/GameRules$VisitorCaller
net/minecraft/server/BlockScaffolding net/minecraft/world/level/block/ScaffoldingBlock
	a DISTANCE
	b WATERLOGGED
	c BOTTOM
	d STABLE_SHAPE
	e UNSTABLE_SHAPE
	f UNSTABLE_SHAPE_BOTTOM
	g BELOW_BLOCK
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getDistance
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;I)Z isBottom
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	d (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/WorldGenLakes net/minecraft/world/level/levelgen/feature/LakeFeature
	a AIR
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureLakeConfiguration;)Z place
net/minecraft/server/DataConverterVillage net/minecraft/util/datafix/fixes/SavedDataVillageCropFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; updateCrop
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; updateChildren
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateChildren
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateSingleField
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateDoubleField
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateChildren$0
azc net/minecraft/world/entity/ai/sensing/package-info
aze net/minecraft/world/entity/ai/targeting/package-info
azh net/minecraft/world/entity/ai/util/package-info
net/minecraft/server/ItemTool net/minecraft/world/item/DiggerItem
	a blocks
	b speed
	c attackDamageBaseline
	d defaultModifiers
	a (Lnet/minecraft/server/EntityLiving;)V lambda$mineBlock$1
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z mineBlock
	b (Lnet/minecraft/server/EntityLiving;)V lambda$hurtEnemy$0
	d ()F getAttackDamage
azk net/minecraft/world/entity/ai/village/package-info
dfj$a com/mojang/blaze3d/vertex/PoseStack$Pose
	a pose
	b normal
	a ()Lnet/minecraft/server/Matrix4f; pose
	a (Ldfj$a;)Lnet/minecraft/server/Matrix4f; access$000
	b ()Lnet/minecraft/server/Matrix3f; normal
	b (Ldfj$a;)Lnet/minecraft/server/Matrix3f; access$100
cyx$a net/minecraft/world/level/storage/loot/PredicateManager$CompositePredicate
	a terms
	b composedPredicate
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lnet/minecraft/server/LootItemConditionType; getType
net/minecraft/server/DefinedStructureProcessorGravity net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor
	a CODEC
	b heightmap
	c offset
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/DefinedStructureProcessorGravity;)Ljava/lang/Integer; lambda$null$1
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
	b (Lnet/minecraft/server/DefinedStructureProcessorGravity;)Lnet/minecraft/server/HeightMap$Type; lambda$null$0
azp net/minecraft/world/entity/ai/village/poi/package-info
net/minecraft/server/LocaleLanguage net/minecraft/locale/Language
	a LOGGER
	b GSON
	c UNSUPPORTED_FORMAT_PATTERN
	d instance
	a ()Lnet/minecraft/server/LocaleLanguage; getInstance
	a (Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V loadFromJson
	a (Ljava/lang/String;)Ljava/lang/String; getOrDefault
	a (Ljava/util/List;)Ljava/util/List; getVisualOrder
	a (Lnet/minecraft/server/IChatFormatted;)Lnet/minecraft/server/FormattedString; getVisualOrder
	a (Lnet/minecraft/server/LocaleLanguage;)V inject
	b ()Z isDefaultRightToLeft
	b (Ljava/lang/String;)Z has
	c ()Lnet/minecraft/server/LocaleLanguage; loadDefault
azs net/minecraft/world/entity/ambient/package-info
aw$a net/minecraft/advancements/critereon/DamageSourcePredicate$Builder
	a isProjectile
	b isExplosion
	c bypassesArmor
	d bypassesInvulnerability
	e bypassesMagic
	f isFire
	g isMagic
	h isLightning
	i directEntity
	j sourceEntity
	a ()Law$a; damageType
	a (Lbg$a;)Law$a; direct
	a (Ljava/lang/Boolean;)Law$a; isProjectile
	a (Lnet/minecraft/server/CriterionConditionEntity;)Law$a; direct
	b ()Lnet/minecraft/server/CriterionConditionDamageSource; build
	b (Lbg$a;)Law$a; source
	b (Ljava/lang/Boolean;)Law$a; isExplosion
	b (Lnet/minecraft/server/CriterionConditionEntity;)Law$a; source
	c (Ljava/lang/Boolean;)Law$a; bypassesArmor
	d (Ljava/lang/Boolean;)Law$a; bypassesInvulnerability
	e (Ljava/lang/Boolean;)Law$a; bypassesMagic
	f (Ljava/lang/Boolean;)Law$a; isFire
	g (Ljava/lang/Boolean;)Law$a; isMagic
	h (Ljava/lang/Boolean;)Law$a; isLightning
net/minecraft/server/PacketPlayOutViewDistance net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket
	a radius
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getRadius
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/EnchantmentSlotType net/minecraft/world/item/enchantment/EnchantmentCategory
	o $VALUES
ank$1 net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$1
net/minecraft/server/PacketPlayOutLookAt net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket
	a x
	b y
	c z
	d entity
	e fromAnchor
	f toAnchor
	g atEntity
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Vec3D; getPosition
	b ()Lnet/minecraft/server/ArgumentAnchor$Anchor; getFromAnchor
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/NoiseSamplingSettings net/minecraft/world/level/levelgen/NoiseSamplingSettings
	a CODEC
	b SCALE_RANGE
	c xzScale
	d yScale
	e xzFactor
	f yFactor
	a ()D xzScale
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	b ()D yScale
	c ()D xzFactor
	d ()D yFactor
cyx$1 net/minecraft/world/level/storage/loot/PredicateManager$1
net/minecraft/server/Biomes net/minecraft/world/level/biome/Biomes
	a (Ljava/lang/String;)Lnet/minecraft/server/ResourceKey; register
net/minecraft/server/CommandKick net/minecraft/server/commands/KickCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/IChatBaseComponent;)I kickPlayers
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
ect$b net/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo
	a pos
	b hiveType
	c occupantCount
	d honeyLevel
	e sedated
	f lastSeen
dlc$c net/minecraft/client/gui/components/AbstractSelectionList$TrackedList
	a this$0
	b delegate
	a (I)Ldlc$a; get
	a (ILdlc$a;)Ldlc$a; set
	b (I)Ldlc$a; remove
	b (ILdlc$a;)V add
mi$a net/minecraft/nbt/IntTag$Cache
	a cache
dlc$b net/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection
	a UP
	b DOWN
	c $VALUES
bi$a net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance
	a item
	a (Lnet/minecraft/server/CriterionConditionItem;)Lbi$a; filledBucket
	a (Lnet/minecraft/server/ItemStack;)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
net/minecraft/server/BehaviorBell net/minecraft/world/entity/ai/behavior/SocializeAtBell
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/EntityLiving;)V lambda$null$3
	a (Lnet/minecraft/server/EntityLiving;)Z lambda$null$1
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BehaviorController;Ljava/util/List;)V lambda$start$4
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$null$2
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityLiving;)Z lambda$checkExtraStartConditions$0
dlc$a net/minecraft/client/gui/components/AbstractSelectionList$Entry
	a list
	a (Ldfj;IIIIIIIZF)V render
	a (Ldlc$a;Ldlc;)Ldlc; access$102
	b (DD)Z isMouseOver
ciq$a net/minecraft/world/level/levelgen/feature/BuriedTreasureFeature$BuriedTreasureStart
	a ()Lnet/minecraft/server/BlockPosition; getLocatePos
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfigurationChance;)V generatePieces
net/minecraft/server/RecipeSmoking net/minecraft/world/item/crafting/SmokingRecipe
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
dac$a net/minecraft/world/level/storage/loot/functions/FillPlayerHead$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionFillPlayerHead; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionFillPlayerHead;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
ect$a net/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo
	a uuid
	b id
	c pos
	d path
	e hivePos
	f flowerPos
	g travelTicks
	h goals
	i blacklistedHives
	a ()Ljava/util/UUID; getUuid
	a (Lnet/minecraft/server/BlockPosition;)Z hasHive
	b ()Ljava/lang/String; getName
	c ()Z hasFlower
bvu$1 net/minecraft/world/level/block/DetectorRailBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$Mirror
net/minecraft/server/Scoreboard net/minecraft/world/scores/Scoreboard
	displaySlots displayObjectives
	g displaySlotNames
	a (Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)V onPlayerScoreRemoved
	a (Ljava/util/function/Consumer;Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)V lambda$forAllObjectives$1
	a (Lnet/minecraft/server/Entity;)V entityRemoved
	a (Lnet/minecraft/server/IScoreboardCriteria;)Ljava/util/List; lambda$addObjective$0
	a (Lnet/minecraft/server/NBTTagList;)V loadPlayerScores
	a (Lnet/minecraft/server/NBTTagList;Ljava/util/Collection;)V lambda$savePlayerScores$6
	a (Lnet/minecraft/server/NBTTagList;Lnet/minecraft/server/ScoreboardScore;)V lambda$null$5
	b (Ljava/lang/String;)Z hasObjective
	b (Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)Z hasPlayerScore
	b (Lnet/minecraft/server/ScoreboardScore;)Z lambda$null$4
	c (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardObjective; getOrCreateObjective
	createTeam (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeam; addPlayerTeam
	d ()Ljava/util/Collection; getObjectiveNames
	e (Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)Lnet/minecraft/server/ScoreboardScore; lambda$getOrCreatePlayerScore$3
	f ()Ljava/util/Collection; getTeamNames
	getObjectiveForSlot (I)Lnet/minecraft/server/ScoreboardObjective; getDisplayObjective
	getObjectivesForCriteria (Lnet/minecraft/server/IScoreboardCriteria;Ljava/lang/String;Ljava/util/function/Consumer;)V forAllObjectives
	getPlayerObjectives (Ljava/lang/String;)Ljava/util/Map; getPlayerScores
	getPlayerScoreForObjective (Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)Lnet/minecraft/server/ScoreboardScore; getOrCreatePlayerScore
	getPlayerTeam (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeam; getPlayersTeam
	getPlayers ()Ljava/util/Collection; getTrackedPlayers
	getScoresForObjective (Lnet/minecraft/server/ScoreboardObjective;)Ljava/util/Collection; getPlayerScores
	getSlotForName (Ljava/lang/String;)I getDisplaySlotByName
	getSlotName (I)Ljava/lang/String; getDisplaySlotName
	getTeam (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeam; getPlayerTeam
	getTeams ()Ljava/util/Collection; getPlayerTeams
	h ()[Ljava/lang/String; getDisplaySlotNames
	handleObjectiveAdded (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveAdded
	handleObjectiveChanged (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveChanged
	handleObjectiveRemoved (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveRemoved
	handlePlayerRemoved (Ljava/lang/String;)V onPlayerRemoved
	handleScoreChanged (Lnet/minecraft/server/ScoreboardScore;)V onScoreChanged
	handleTeamAdded (Lnet/minecraft/server/ScoreboardTeam;)V onTeamAdded
	handleTeamChanged (Lnet/minecraft/server/ScoreboardTeam;)V onTeamChanged
	handleTeamRemoved (Lnet/minecraft/server/ScoreboardTeam;)V onTeamRemoved
	i ()Lnet/minecraft/server/NBTTagList; savePlayerScores
	k (Ljava/lang/String;)Ljava/util/Map; lambda$getOrCreatePlayerScore$2
	registerObjective (Ljava/lang/String;Lnet/minecraft/server/IScoreboardCriteria;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay;)Lnet/minecraft/server/ScoreboardObjective; addObjective
	removeTeam (Lnet/minecraft/server/ScoreboardTeam;)V removePlayerTeam
	resetPlayerScores (Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)V resetPlayerScore
	setDisplaySlot (ILnet/minecraft/server/ScoreboardObjective;)V setDisplayObjective
	unregisterObjective (Lnet/minecraft/server/ScoreboardObjective;)V removeObjective
net/minecraft/server/ChatComponentKeybind net/minecraft/network/chat/KeybindComponent
	d keyResolver
	e name
	f nameResolver
	a (Ljava/util/function/Function;)V setKeyResolver
	b (Lnu$a;)Ljava/util/Optional; visitSelf
	b (Lnu$b;Lnet/minecraft/server/ChatModifier;)Ljava/util/Optional; visitSelf
	d ()Lnet/minecraft/server/ChatBaseComponent; plainCopy
	d (Ljava/lang/String;)Ljava/util/function/Supplier; lambda$static$1
	e (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; lambda$null$0
	g ()Lnet/minecraft/server/IChatMutableComponent; plainCopy
	h ()Lnet/minecraft/server/ChatComponentKeybind; plainCopy
	i ()Ljava/lang/String; getName
	j ()Lnet/minecraft/server/IChatBaseComponent; getNestedComponent
czj$a net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder
	a entries
	a ()Lczj$a; getThis
	b ()Lnet/minecraft/server/LootEntryAbstract; build
	b (Lczn$a;)Lczj$a; append
	d ()Lczn$a; getThis
net/minecraft/server/DataConverterEntityUUID net/minecraft/util/datafix/fixes/EntityUUIDFix
	c ABSTRACT_HORSES
	d TAMEABLE_ANIMALS
	e ANIMALS
	f MOBS
	g LIVING_ENTITIES
	h PROJECTILES
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateProjectile$14
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateLivingEntity
	b (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateLivingEntity$13
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateEntityUUID
	c (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$11
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updatePiglin
	d (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateFox$8
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateEvokerFangs
	e (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateFox$7
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateZombieVillager
	g (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAreaEffectCloud
	h (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateShulkerBullet
	i (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateItem
	j (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateFox
	k (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateHurtBy
	l (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAnimalOwner
	m (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAnimal
	n (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateMob
	o (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateProjectile
	p (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$12
	q (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$10
	r (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateMob$9
	s (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$6
	t (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$5
	u (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updatePiglin$4
	v (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$3
	w (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	x (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
net/minecraft/server/BlockPredicate net/minecraft/world/level/block/state/predicate/BlockPredicate
	a block
	a (Lnet/minecraft/server/Block;)Lnet/minecraft/server/BlockPredicate; forBlock
	a (Lnet/minecraft/server/IBlockData;)Z test
net/minecraft/server/BehaviorHome net/minecraft/world/entity/ai/behavior/LocateHidingPlace
	b speedModifier
	c radius
	d closeEnoughDist
	e currentPos
	a (Lnet/minecraft/server/BlockPosition;)Z lambda$start$3
	a (Lnet/minecraft/server/VillagePlaceType;)Z lambda$start$2
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/BlockPosition;)Z lambda$checkExtraStartConditions$1
	b (Lnet/minecraft/server/VillagePlaceType;)Z lambda$checkExtraStartConditions$0
net/minecraft/server/EntityExperienceOrb net/minecraft/world/entity/ExperienceOrb
	b tickCount
	c age
	d throwTime
	e health
	targetPlayer followingPlayer
	targetTime followingTime
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aB ()Z isMovementNoisy
	aL ()V doWaterSplashEffect
	a_ (Lnet/minecraft/server/EntityHuman;)V playerTouch
	b (I)I durabilityToXp
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bK ()Z isAttackable
	c (I)I xpToDurability
	e ()V defineSynchedData
	g ()I getValue
	getOrbValue (I)I getExperienceValue
	h ()I getIcon
	h (I)V burn
	i ()V setUnderwaterMovement
	j ()V tick
net/minecraft/server/BlockStateEnum net/minecraft/world/level/block/state/properties/EnumProperty
	a values
	b names
	a ()Ljava/util/Collection; getPossibleValues
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Ljava/lang/Enum;)Ljava/lang/String; getName
	a (Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Lnet/minecraft/server/BlockStateEnum; create
	a (Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Lnet/minecraft/server/BlockStateEnum; create
	b ()I generateHashCode
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	of (Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/server/BlockStateEnum; create
	of (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lnet/minecraft/server/BlockStateEnum; create
net/minecraft/server/TileEntityEnchantTable net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity
	a time
	b flip
	c oFlip
	g flipT
	h flipA
	i open
	j oOpen
	k rot
	l oRot
	m tRot
	n RANDOM
	o name
	Q ()Lnet/minecraft/server/IChatBaseComponent; getName
	S ()Lnet/minecraft/server/IChatBaseComponent; getCustomName
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	aj_ ()V tick
net/minecraft/server/WorldGenFeatureDefinedStructurePoolList net/minecraft/world/level/levelgen/feature/structures/ListPoolElement
	a CODEC
	b elements
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;Z)Z place
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolList;)Ljava/util/List; lambda$null$0
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure; setProjection
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure;)V lambda$setProjectionOnEachElement$2
	b (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)V setProjectionOnEachElement
net/minecraft/server/ArgumentScoreholder net/minecraft/commands/arguments/ScoreHolderArgument
	a SUGGEST_SCORE_HOLDERS
	b EXAMPLES
	c ERROR_NO_RESULTS
	d multiple
	a ()Lnet/minecraft/server/ArgumentScoreholder; scoreHolder
	a (Lcom/mojang/brigadier/StringReader;)Ldz$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$1
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; getName
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection; getNames
	a (Ljava/util/Collection;Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/function/Supplier;)Ljava/util/Collection; lambda$parse$3
	a (Lnet/minecraft/server/ArgumentScoreholder;)Z access$000
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/function/Supplier;)Ljava/util/Collection; lambda$parse$2
	b ()Lnet/minecraft/server/ArgumentScoreholder; scoreHolders
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V lambda$null$0
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getNames
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getNamesWithDefaultWildcard
bst$1 net/minecraft/world/level/biome/BiomeGenerationSettings$1
net/minecraft/server/ArgumentTag net/minecraft/commands/arguments/item/FunctionArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	c ERROR_UNKNOWN_FUNCTION
	a ()Lnet/minecraft/server/ArgumentTag; functions
	a (Lcom/mojang/brigadier/StringReader;)Lev$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getFunctions
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; access$000
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$getFunction$2
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; getFunctionOrTag
	b (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/CustomFunction; access$100
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	c (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/CustomFunction; getFunction
	d (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; getFunctionTag
net/minecraft/server/PathfinderGoalNearestAttackableTargetWitch net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal
	i canAttack
	a ()Z canUse
	a (Z)V setCanAttack
af$a net/minecraft/advancements/CriterionTrigger$Listener
	a trigger
	b advancement
	c criterion
	a ()Lnet/minecraft/server/CriterionInstance; getTriggerInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V run
net/minecraft/server/ResourcePackLoader$Position net/minecraft/server/packs/repository/Pack$Position
	c $VALUES
	a ()Lnet/minecraft/server/ResourcePackLoader$Position; opposite
	a (Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I insert
net/minecraft/server/DataConverterShoulderEntity net/minecraft/util/datafix/fixes/WriteAndReadFix
	a name
	b type
net/minecraft/server/BlockActionContext net/minecraft/world/item/context/BlockPlaceContext
	a replaceClicked
	b relativePos
	a ()Lnet/minecraft/server/BlockPosition; getClickedPos
	a (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockActionContext; at
	b ()Z canPlace
	c ()Z replacingClickedOnBlock
	d ()Lnet/minecraft/server/EnumDirection; getNearestLookingDirection
	e ()[Lnet/minecraft/server/EnumDirection; getNearestLookingDirections
net/minecraft/server/DamageSourceNetherBed net/minecraft/world/damagesource/BadRespawnPointDamage
	a (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; lambda$getLocalizedDeathMessage$0
	a (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/IChatBaseComponent; getLocalizedDeathMessage
net/minecraft/server/BlockPropertyInstrument net/minecraft/world/level/block/state/properties/NoteBlockInstrument
	q name
	r soundEvent
	s $VALUES
	a ()Ljava/lang/String; getSerializedName
	a (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/BlockPropertyInstrument; byState
	b ()Lnet/minecraft/server/SoundEffect; getSoundEvent
net/minecraft/server/ShapeDetector net/minecraft/world/level/block/state/pattern/BlockPattern
	a pattern
	b depth
	c height
	d width
	a ()I getDepth
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;III)Lnet/minecraft/server/BlockPosition; translateAndRotate
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;Lcom/google/common/cache/LoadingCache;)Lnet/minecraft/server/ShapeDetector$ShapeDetectorCollection; matches
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ShapeDetector$ShapeDetectorCollection; find
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/ShapeDetector$ShapeDetectorCollection; matches
	a (Lnet/minecraft/server/IWorldReader;Z)Lcom/google/common/cache/LoadingCache; createLevelCache
	b ()I getHeight
	c ()I getWidth
	d ()[[[Ljava/util/function/Predicate; getPattern
net/minecraft/server/ResourcePackInfo net/minecraft/server/packs/metadata/pack/PackMetadataSection
	a SERIALIZER
	b description
	c packFormat
	a ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	b ()I getPackFormat
net/minecraft/server/DragonControllerManager net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager
	a LOGGER
	currentDragonController currentPhase
	dragonControllers phases
	enderDragon dragon
	a ()Lnet/minecraft/server/IDragonController; getCurrentPhase
	b (Lnet/minecraft/server/DragonControllerPhase;)Lnet/minecraft/server/IDragonController; getPhase
	setControllerPhase (Lnet/minecraft/server/DragonControllerPhase;)V setPhase
net/minecraft/server/DataConverterBlockEntityKeepPacked net/minecraft/util/datafix/fixes/BlockEntityKeepPacked
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
dbf$1 net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$1
net/minecraft/server/ChatDeserializer net/minecraft/util/GsonHelper
	a GSON
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/JsonElement;)Z isStringValue
	a (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String; convertToString
	a (Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; convertToObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isStringValue
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;B)B getAsByte
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;C)C getAsCharacter
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;D)D getAsDouble
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;F)F getAsFloat
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;I)I getAsInt
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;J)J getAsLong
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray; getAsJsonArray
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; getAsObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject; getAsJsonObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; getAsObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getAsString
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal; getAsBigDecimal
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger; getAsBigInteger
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/server/Item;)Lnet/minecraft/server/Item; getAsItem
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;S)S getAsShort
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z getAsBoolean
	a (Ljava/io/Reader;)Lcom/google/gson/JsonObject; parse
	a (Ljava/io/Reader;Z)Lcom/google/gson/JsonObject; parse
	a (Ljava/lang/String;)Lcom/google/gson/JsonObject; parse
	a (Ljava/lang/String;Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$convertToItem$0
	a (Ljava/lang/String;Z)Lcom/google/gson/JsonObject; parse
	b (Lcom/google/gson/JsonElement;)Z isNumberValue
	b (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lnet/minecraft/server/Item; convertToItem
	b (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isNumberValue
	c (Lcom/google/gson/JsonElement;)Z isBooleanValue
	c (Lcom/google/gson/JsonElement;Ljava/lang/String;)Z convertToBoolean
	c (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isBooleanValue
	d (Lcom/google/gson/JsonElement;)Ljava/lang/String; getType
	d (Lcom/google/gson/JsonElement;Ljava/lang/String;)D convertToDouble
	d (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isArrayNode
	e (Lcom/google/gson/JsonElement;Ljava/lang/String;)F convertToFloat
	e (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isObjectNode
	f (Lcom/google/gson/JsonElement;Ljava/lang/String;)J convertToLong
	f (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isValidPrimitive
	g (Lcom/google/gson/JsonElement;Ljava/lang/String;)I convertToInt
	g (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isValidNode
	h (Lcom/google/gson/JsonElement;Ljava/lang/String;)B convertToByte
	h (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; getAsString
	i (Lcom/google/gson/JsonElement;Ljava/lang/String;)C convertToCharacter
	i (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/server/Item; getAsItem
	j (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal; convertToBigDecimal
	j (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z getAsBoolean
	k (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger; convertToBigInteger
	k (Lcom/google/gson/JsonObject;Ljava/lang/String;)D getAsDouble
	l (Lcom/google/gson/JsonElement;Ljava/lang/String;)S convertToShort
	l (Lcom/google/gson/JsonObject;Ljava/lang/String;)F getAsFloat
	m (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject; convertToJsonObject
	m (Lcom/google/gson/JsonObject;Ljava/lang/String;)J getAsLong
	n (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray; convertToJsonArray
	n (Lcom/google/gson/JsonObject;Ljava/lang/String;)I getAsInt
	o (Lcom/google/gson/JsonObject;Ljava/lang/String;)B getAsByte
	p (Lcom/google/gson/JsonObject;Ljava/lang/String;)C getAsCharacter
	q (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal; getAsBigDecimal
	r (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger; getAsBigInteger
	s (Lcom/google/gson/JsonObject;Ljava/lang/String;)S getAsShort
	t (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject; getAsJsonObject
	u (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray; getAsJsonArray
net/minecraft/server/ItemSword net/minecraft/world/item/SwordItem
	a attackDamage
	b defaultModifiers
	a (Lnet/minecraft/server/EntityLiving;)V lambda$mineBlock$1
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)Z canAttackBlock
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z mineBlock
	b (Lnet/minecraft/server/EntityLiving;)V lambda$hurtEnemy$0
	b (Lnet/minecraft/server/IBlockData;)Z isCorrectToolForDrops
	f ()F getDamage
net/minecraft/server/WorldGenEnder$Spike net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike
	a CODEC
	b centerX
	c centerZ
	d radius
	e height
	f guarded
	g topBoundingBox
	a ()I getCenterX
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lnet/minecraft/server/BlockPosition;)Z isCenterWithinChunk
	a (Lnet/minecraft/server/WorldGenEnder$Spike;)Ljava/lang/Boolean; lambda$null$4
	b ()I getCenterZ
	b (Lnet/minecraft/server/WorldGenEnder$Spike;)Ljava/lang/Integer; lambda$null$3
	c ()I getRadius
	c (Lnet/minecraft/server/WorldGenEnder$Spike;)Ljava/lang/Integer; lambda$null$2
	d ()I getHeight
	d (Lnet/minecraft/server/WorldGenEnder$Spike;)Ljava/lang/Integer; lambda$null$1
	e ()Z isGuarded
	e (Lnet/minecraft/server/WorldGenEnder$Spike;)Ljava/lang/Integer; lambda$null$0
	f ()Lnet/minecraft/server/AxisAlignedBB; getTopBoundingBox
net/minecraft/server/CriterionConditionBlock net/minecraft/advancements/critereon/BlockPredicate
	a ANY
	b tag
	c block
	d properties
	e nbt
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionBlock; fromJson
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z matches
net/minecraft/server/PathfinderGoalNearestAttackableTarget net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal
	a targetType
	b randomInterval
	c target
	d targetConditions
	a ()Z canUse
	a (D)Lnet/minecraft/server/AxisAlignedBB; getTargetSearchArea
	a (Lnet/minecraft/server/EntityLiving;)V setTarget
	c ()V start
	g ()V findTarget
net/minecraft/server/ExplosionDamageCalculator net/minecraft/world/level/ExplosionDamageCalculator
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;F)Z shouldBlockExplode
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Ljava/util/Optional; getBlockExplosionResistance
net/minecraft/server/EntityAgeable net/minecraft/world/entity/AgableMob
	b age
	bo DATA_BABY_ID
	c forcedAge
	d forcedAgeTimer
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Z)V setBaby
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	createChild (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	e ()V defineSynchedData
	k ()V aiStep
	m ()V ageBoundaryReached
	setAge (I)V ageUp
	setAge (IZ)V ageUp
	setAgeRaw (I)V setAge
	w_ ()Z isBaby
net/minecraft/server/WorldGenFeatureBlockPileConfiguration net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration
	a CODEC
	b stateProvider
	a (Lnet/minecraft/server/WorldGenFeatureBlockPileConfiguration;)Lnet/minecraft/server/WorldGenFeatureStateProvider; lambda$static$0
net/minecraft/server/IVectorPosition net/minecraft/commands/arguments/coordinates/Coordinates
	a ()Z isXRelative
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec3D; getPosition
	b ()Z isYRelative
	b (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec2F; getRotation
	c ()Z isZRelative
	c (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/BlockPosition; getBlockPos
net/minecraft/server/BlockBarrier net/minecraft/world/level/block/BarrierBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
net/minecraft/server/BlockTurtleEgg net/minecraft/world/level/block/TurtleEggBlock
	a HATCH
	b EGGS
	c ONE_EGG_AABB
	d MULTIPLE_EGGS_AABB
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z onSand
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/World;)Z shouldUpdateHatchLevel
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V stepOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;F)V fallOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;I)V destroyEgg
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V decreaseEggs
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;)Z canDestroyEgg
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isSand
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
net/minecraft/server/DefinedStructureProcessorBlockIgnore net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor
	a CODEC
	b STRUCTURE_BLOCK
	c AIR
	d STRUCTURE_AND_AIR
	e toIgnore
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/server/DefinedStructureProcessorBlockIgnore;)Ljava/util/List; lambda$static$0
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
ckw$a net/minecraft/world/level/levelgen/feature/StrongholdFeature$StrongholdStart
	e seed
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)V generatePieces
net/minecraft/server/MapIcon net/minecraft/world/level/saveddata/maps/MapDecoration
	rotation rot
	a (B)V setX
	b (B)V setY
	c (B)V setRot
	f ()Z renderOnFrame
	getRotation ()B getRot
	getType ()B getImage
net/minecraft/server/IWorldBorderListener net/minecraft/world/level/border/BorderChangeListener
	a (Lnet/minecraft/server/WorldBorder;D)V onBorderSizeSet
	a (Lnet/minecraft/server/WorldBorder;DD)V onBorderCenterSet
	a (Lnet/minecraft/server/WorldBorder;DDJ)V onBorderSizeLerping
	a (Lnet/minecraft/server/WorldBorder;I)V onBorderSetWarningTime
	b (Lnet/minecraft/server/WorldBorder;D)V onBorderSetDamagePerBlock
	b (Lnet/minecraft/server/WorldBorder;I)V onBorderSetWarningBlocks
	c (Lnet/minecraft/server/WorldBorder;D)V onBorderSetDamageSafeZOne
wf$1 net/minecraft/server/commands/AdvancementCommands$1
net/minecraft/server/EntityGuardian$ControllerMoveGuardian net/minecraft/world/entity/monster/Guardian$GuardianMoveControl
	i guardian
	a ()V tick
net/minecraft/server/DataConverterCoralFan net/minecraft/util/datafix/fixes/RenamedCoralFansFix
	a RENAMED_IDS
doc$a$a net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList$Entry
	a this$1
	b language
	a ()V select
	a (DDI)Z mouseClicked
	a (Ldfj;IIIIIIIZF)V render
	a (Ldoc$a$a;)Lekq; access$100
net/minecraft/server/WorldGenMineshaftPieces$WorldGenMineshaftCorridor net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCorridor
	b hasRails
	c spiderCorridor
	d hasPlacedSpider
	e numSections
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/StructureBoundingBox; findCorridorSize
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;IIIIILjava/util/Random;)V placeSupport
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;FIII)V placeCobWeb
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;IIILnet/minecraft/server/MinecraftKey;)Z createChest
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/EntitySquid$PathfinderGoalSquid net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal
	a this$0
	b squid
	a ()Z canUse
	e ()V tick
net/minecraft/server/EnchantmentSweeping net/minecraft/world/item/enchantment/SweepingEdgeEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
	e (I)F getSweepingDamageRatio
net/minecraft/server/EntityLlamaSpit net/minecraft/world/entity/projectile/LlamaSpit
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/server/MovingObjectPositionEntity;)V onHitEntity
	e ()V defineSynchedData
	j ()V tick
net/minecraft/server/IRegistry net/minecraft/core/Registry
	A VILLAGER_TYPE_REGISTRY
	B VILLAGER_PROFESSION_REGISTRY
	BLOCK_PLACER_TYPE BLOCK_PLACER_TYPES
	BLOCK_STATE_PROVIDER_TYPE BLOCKSTATE_PROVIDER_TYPES
	C POINT_OF_INTEREST_TYPE_REGISTRY
	D MEMORY_MODULE_TYPE_REGISTRY
	E SENSOR_TYPE_REGISTRY
	F SCHEDULE_REGISTRY
	FEATURE_SIZE_TYPE FEATURE_SIZE_TYPES
	FOLIAGE_PLACER_TYPE FOLIAGE_PLACER_TYPES
	G ACTIVITY_REGISTRY
	H LOOT_ENTRY_REGISTRY
	I LOOT_FUNCTION_REGISTRY
	J LOOT_ITEM_REGISTRY
	K DIMENSION_TYPE_REGISTRY
	L DIMENSION_REGISTRY
	M LEVEL_STEM_REGISTRY
	STATS STAT_TYPE
	TREE_DECORATOR_TYPE TREE_DECORATOR_TYPES
	TRUNK_PLACER_TYPE TRUNK_PLACER_TYPES
	a LOADERS
	aB CARVER_REGISTRY
	aD FEATURE_REGISTRY
	aF STRUCTURE_FEATURE_REGISTRY
	aH STRUCTURE_PIECE_REGISTRY
	aJ DECORATOR_REGISTRY
	aL BLOCK_STATE_PROVIDER_TYPE_REGISTRY
	aM BLOCK_PLACER_TYPE_REGISTRY
	aN FOLIAGE_PLACER_TYPE_REGISTRY
	aO TRUNK_PLACER_TYPE_REGISTRY
	aP TREE_DECORATOR_TYPE_REGISTRY
	aQ FEATURE_SIZE_TYPE_REGISTRY
	aR BIOME_SOURCE_REGISTRY
	aS CHUNK_GENERATOR_REGISTRY
	aT STRUCTURE_PROCESSOR_REGISTRY
	aU STRUCTURE_POOL_ELEMENT_REGISTRY
	ao LOOT_POOL_ENTRY_TYPE
	ap LOOT_FUNCTION_TYPE
	aq LOOT_CONDITION_TYPE
	ar NOISE_GENERATOR_SETTINGS_REGISTRY
	as CONFIGURED_SURFACE_BUILDER_REGISTRY
	at CONFIGURED_CARVER_REGISTRY
	au CONFIGURED_FEATURE_REGISTRY
	av CONFIGURED_STRUCTURE_FEATURE_REGISTRY
	aw PROCESSOR_LIST_REGISTRY
	ax TEMPLATE_POOL_REGISTRY
	ay BIOME_REGISTRY
	az SURFACE_BUILDER_REGISTRY
	b key
	bf lifecycle
	c LOGGER
	d ROOT_REGISTRY_NAME
	e WRITABLE_REGISTRY
	f REGISTRY
	g SOUND_EVENT_REGISTRY
	h FLUID_REGISTRY
	i MOB_EFFECT_REGISTRY
	j BLOCK_REGISTRY
	k ENCHANTMENT_REGISTRY
	l ENTITY_TYPE_REGISTRY
	m ITEM_REGISTRY
	n POTION_REGISTRY
	o PARTICLE_TYPE_REGISTRY
	p BLOCK_ENTITY_TYPE_REGISTRY
	q MOTIVE_REGISTRY
	r CUSTOM_STAT_REGISTRY
	s CHUNK_STATUS_REGISTRY
	t RULE_TEST_REGISTRY
	u POS_RULE_TEST_REGISTRY
	v MENU_REGISTRY
	w RECIPE_TYPE_REGISTRY
	x RECIPE_SERIALIZER_REGISTRY
	y ATTRIBUTE_REGISTRY
	z STAT_TYPE_REGISTRY
	A ()Lnet/minecraft/server/SensorType; lambda$static$24
	B ()Lnet/minecraft/server/MemoryModuleType; lambda$static$23
	C ()Lnet/minecraft/server/VillagePlaceType; lambda$static$22
	D ()Lnet/minecraft/server/VillagerProfession; lambda$static$21
	E ()Lnet/minecraft/server/VillagerType; lambda$static$20
	F ()Lnet/minecraft/server/StatisticWrapper; lambda$static$19
	G ()Lnet/minecraft/server/AttributeBase; lambda$static$18
	H ()Lnet/minecraft/server/RecipeSerializer; lambda$static$17
	I ()Lnet/minecraft/server/Recipes; lambda$static$16
	J ()Lnet/minecraft/server/Containers; lambda$static$15
	K ()Lnet/minecraft/server/PosRuleTestType; lambda$static$14
	L ()Lnet/minecraft/server/DefinedStructureRuleTestType; lambda$static$13
	M ()Lnet/minecraft/server/ChunkStatus; lambda$static$12
	N ()Lnet/minecraft/server/MinecraftKey; lambda$static$11
	O ()Lnet/minecraft/server/Paintings; lambda$static$10
	P ()Lnet/minecraft/server/TileEntityTypes; lambda$static$9
	Q ()Lnet/minecraft/server/Particle; lambda$static$8
	R ()Lnet/minecraft/server/PotionRegistry; lambda$static$7
	S ()Lnet/minecraft/server/Item; lambda$static$6
	T ()Lnet/minecraft/server/EntityTypes; lambda$static$5
	U ()Lnet/minecraft/server/Enchantment; lambda$static$4
	V ()Lnet/minecraft/server/Block; lambda$static$3
	W ()Lnet/minecraft/server/MobEffectList; lambda$static$2
	X ()Lnet/minecraft/server/FluidType; lambda$static$1
	Y ()Lnet/minecraft/server/SoundEffect; lambda$static$0
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; lambda$static$45
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult; lambda$decode$50
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair; lambda$decode$49
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/MinecraftKey;)Ljava/lang/Object; lambda$keys$51
	a (Ljava/lang/Number;)Lcom/mojang/serialization/DataResult; lambda$decode$48
	a (Ljava/lang/Object;)I getId
	a (Ljava/lang/String;)Lnet/minecraft/server/ResourceKey; createRegistryKey
	a (Ljava/util/Random;)Ljava/lang/Object; getRandom
	a (Lnet/minecraft/server/IRegistry;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; registerMapping
	a (Lnet/minecraft/server/IRegistry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/MinecraftKey;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lnet/minecraft/server/IRegistryWritable;)V checkRegistry
	a (Lnet/minecraft/server/IRegistryWritable;Lnet/minecraft/server/IRegistryWritable;)V lambda$checkRegistry$47
	a (Lnet/minecraft/server/MinecraftKey;Ljava/util/function/Supplier;)V lambda$static$46
	a (Lnet/minecraft/server/ResourceKey;)Ljava/lang/Object; get
	a (Lnet/minecraft/server/ResourceKey;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lnet/minecraft/server/IRegistry; registerSimple
	a (Lnet/minecraft/server/ResourceKey;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lnet/minecraft/server/RegistryBlocks; registerDefaulted
	a (Lnet/minecraft/server/ResourceKey;Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/server/RegistryBlocks; registerDefaulted
	a (Lnet/minecraft/server/ResourceKey;Ljava/util/function/Supplier;)Lnet/minecraft/server/IRegistry; registerSimple
	a (Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/IRegistryWritable;Ljava/util/function/Supplier;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/server/IRegistryWritable; internalRegister
	b ()Lcom/mojang/serialization/Lifecycle; elementsLifecycle
	b (Lnet/minecraft/server/ResourceKey;)Z containsKey
	c (Ljava/lang/Object;)Ljava/util/Optional; getResourceKey
	c (Lnet/minecraft/server/MinecraftKey;)Z containsKey
	c (Lnet/minecraft/server/ResourceKey;)Ljava/util/Optional; getOptional
	d ()Ljava/util/Set; entrySet
	d (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; lifecycle
	d (Lnet/minecraft/server/ResourceKey;)Ljava/lang/Object; getOrThrow
	e ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; lambda$static$44
	f ()Lnet/minecraft/server/ResourceKey; key
	g ()Ljava/util/stream/Stream; stream
	h ()Lcom/mojang/serialization/Codec; lambda$static$43
	i ()Lcom/mojang/serialization/Codec; lambda$static$42
	j ()Lnet/minecraft/server/FeatureSizeType; lambda$static$41
	k ()Lnet/minecraft/server/WorldGenFeatureTrees; lambda$static$40
	l ()Lnet/minecraft/server/TrunkPlacers; lambda$static$39
	m ()Lnet/minecraft/server/WorldGenFoilagePlacers; lambda$static$38
	n ()Lnet/minecraft/server/WorldGenBlockPlacers; lambda$static$37
	o ()Lnet/minecraft/server/WorldGenFeatureStateProviders; lambda$static$36
	p ()Lnet/minecraft/server/WorldGenDecorator; lambda$static$35
	q ()Lnet/minecraft/server/WorldGenFeatureStructurePieceType; lambda$static$34
	r ()Lnet/minecraft/server/StructureGenerator; lambda$static$33
	s ()Lnet/minecraft/server/WorldGenerator; lambda$static$32
	t ()Lnet/minecraft/server/WorldGenCarverAbstract; lambda$static$31
	u ()Lnet/minecraft/server/WorldGenSurface; lambda$static$30
	v ()Lnet/minecraft/server/LootItemConditionType; lambda$static$29
	w ()Lnet/minecraft/server/LootItemFunctionType; lambda$static$28
	x ()Lnet/minecraft/server/LootEntryType; lambda$static$27
	y ()Lnet/minecraft/server/Activity; lambda$static$26
	z ()Lnet/minecraft/server/Schedule; lambda$static$25
net/minecraft/server/BlockCommand net/minecraft/world/level/block/CommandBlock
	a FACING
	b CONDITIONAL
	c LOGGER
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/CommandBlockListenerAbstract;Z)V execute
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V executeChain
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/WorldGenFeatureStateProviders net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType
	a SIMPLE_STATE_PROVIDER
	b WEIGHTED_STATE_PROVIDER
	c PLAIN_FLOWER_PROVIDER
	d FOREST_FLOWER_PROVIDER
	e ROTATED_BLOCK_PROVIDER
	f codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/WorldGenFeatureStateProviders; register
net/minecraft/server/Advancement net/minecraft/advancements/Advancement
	key id
	a ()Lnet/minecraft/server/Advancement$SerializedAdvancement; deconstruct
	a (Lnet/minecraft/server/Advancement;)V addChild
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; lambda$new$0
	b ()Lnet/minecraft/server/Advancement; getParent
	c ()Lnet/minecraft/server/AdvancementDisplay; getDisplay
	d ()Lnet/minecraft/server/AdvancementRewards; getRewards
	e ()Ljava/lang/Iterable; getChildren
	g ()I getMaxCriteraRequired
	getName ()Lnet/minecraft/server/MinecraftKey; getId
	i ()[[Ljava/lang/String; getRequirements
	j ()Lnet/minecraft/server/IChatBaseComponent; getChatComponent
net/minecraft/server/SkipEncodeException net/minecraft/network/SkipPacketException
cem$1 net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate$1
	a (Lnet/minecraft/server/IBlockData;)Z test
dyz$a net/minecraft/client/particle/WhiteAshParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/BlockDispenser net/minecraft/world/level/block/DispenserBlock
	REGISTRY DISPENSER_REGISTRY
	a (Lcef$a;)V createBlockStateDefinition
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;)V lambda$static$0
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IDispenseBehavior;)V registerBehavior
	a (Lnet/minecraft/server/ISourceBlock;)Lnet/minecraft/server/IPosition; getDispensePosition
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IDispenseBehavior; getDispenseMethod
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	dispense (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V dispenseFrom
net/minecraft/server/PacketPlayOutMapChunk net/minecraft/network/protocol/game/ClientboundLevelChunkPacket
	a x
	b z
	c availableSections
	d heightmaps
	e biomes
	f buffer
	g blockEntitiesTags
	h fullChunk
	a (Lnet/minecraft/server/Chunk;I)I calculateChunkSize
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/Chunk;I)I extractChunkData
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/PacketDataSerializer; getReadBuffer
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getX
	d ()I getZ
	e ()I getAvailableSections
	f ()Z isFullChunk
	g ()Lnet/minecraft/server/NBTTagCompound; getHeightmaps
	h ()Ljava/util/List; getBlockEntitiesTags
	i ()[I getBiomes
	j ()Lio/netty/buffer/ByteBuf; getWriteBuffer
net/minecraft/server/WorldGenDecoratorNoiseConfiguration net/minecraft/world/level/levelgen/placement/NoiseCountFactorDecoratorConfiguration
	a CODEC
	c noiseToCountRatio
	d noiseFactor
	e noiseOffset
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lnet/minecraft/server/WorldGenDecoratorNoiseConfiguration;)Ljava/lang/Double; lambda$null$2
	b (Lnet/minecraft/server/WorldGenDecoratorNoiseConfiguration;)Ljava/lang/Double; lambda$null$1
	c (Lnet/minecraft/server/WorldGenDecoratorNoiseConfiguration;)Ljava/lang/Integer; lambda$null$0
net/minecraft/server/BlockGlazedTerracotta net/minecraft/world/level/block/GlazedTerracottaBlock
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	f (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
net/minecraft/server/Explosion net/minecraft/world/level/Explosion
	a EXPLOSION_DAMAGE_CALCULATOR
	b fire
	blocks toBlow
	c blockInteraction
	d random
	k damageSource
	l damageCalculator
	n hitPlayers
	posX x
	posY y
	posZ z
	size radius
	world level
	a ()V explode
	a (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V lambda$finalizeExplosion$0
	a (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)V addBlockDrops
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/ExplosionDamageCalculator; makeDamageCalculator
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;)F getSeenPercent
	a (Z)V finalizeExplosion
	b ()Lnet/minecraft/server/DamageSource; getDamageSource
	c ()Ljava/util/Map; getHitPlayers
	clearBlocks ()V clearToBlow
	getBlocks ()Ljava/util/List; getToBlow
	getSource ()Lnet/minecraft/server/EntityLiving; getSourceMob
net/minecraft/server/BlockBambooSapling net/minecraft/world/level/block/BambooSaplingBlock
	a SAPLING_SHAPE
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getDestroyProgress
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V growBamboo
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	ah_ ()Lnet/minecraft/server/BlockBase$EnumRandomOffset; getOffsetType
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
net/minecraft/server/NBTTagDouble net/minecraft/nbt/DoubleTag
	a ZERO
	b TYPE
	a ()B getId
	a (D)Lnet/minecraft/server/NBTTagDouble; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTTagType; getType
	c ()Lnet/minecraft/server/NBTBase; copy
	d ()Lnet/minecraft/server/NBTTagDouble; copy
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
net/minecraft/server/GameProfilerDisabled net/minecraft/util/profiling/InactiveProfiler
	a INSTANCE
	a ()V startTick
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	b ()V endTick
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c ()V pop
	c (Ljava/lang/String;)V incrementCounter
	c (Ljava/util/function/Supplier;)V incrementCounter
	d ()Lnet/minecraft/server/MethodProfilerResults; getResults
dbf$a net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionDamageSourceProperties;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionDamageSourceProperties; deserialize
dat$1 net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$1
bkp$12 net/minecraft/world/item/CreativeModeTab$9
	e ()Lnet/minecraft/server/ItemStack; makeIcon
net/minecraft/server/CommandDifficulty net/minecraft/server/commands/DifficultyCommand
	a ERROR_ALREADY_DIFFICULT
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EnumDifficulty;)I setDifficulty
	a (Lnet/minecraft/server/EnumDifficulty;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
cjt$a net/minecraft/world/level/levelgen/feature/IglooFeature$FeatureStart
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)V generatePieces
bkp$10 net/minecraft/world/item/CreativeModeTab$7
	e ()Lnet/minecraft/server/ItemStack; makeIcon
bkp$11 net/minecraft/world/item/CreativeModeTab$8
	e ()Lnet/minecraft/server/ItemStack; makeIcon
net/minecraft/server/EntityPiglinBrute net/minecraft/world/entity/monster/piglin/PiglinBrute
	bo MEMORY_TYPES
	d SENSOR_TYPES
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	N ()V customServerAiStep
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/server/BehaviorController; makeBrain
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	cI ()Lnet/minecraft/server/BehaviorController; getBrain
	cJ ()Larc$b; brainProvider
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eN ()Lnet/minecraft/server/EntityPiglinArmPose; getArmPose
	eP ()V playConvertedSound
	eS ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eT ()V playAngrySound
	i (Lnet/minecraft/server/ItemStack;)Z wantsToPickUp
	m ()Z canHunt
net/minecraft/server/EntityMinecartAbstract net/minecraft/world/entity/vehicle/AbstractMinecart
	ag POSE_DISMOUNT_HEIGHTS
	ah flipped
	ai EXITS
	aj lSteps
	ak lx
	al ly
	am lz
	an lyr
	ao lxr
	ap lxd
	aq lyd
	ar lzd
	b DATA_ID_HURT
	c DATA_ID_HURTDIR
	d DATA_ID_DAMAGE
	e DATA_ID_DISPLAY_BLOCK
	f DATA_ID_DISPLAY_OFFSET
	g DATA_ID_CUSTOM_DISPLAY
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (DDDD)Lnet/minecraft/server/Vec3D; getPosOffs
	a (DDDFFIZ)V lerpTo
	a (IIIZ)V activateMinecart
	a (Ljava/util/EnumMap;)V lambda$static$2
	a (Lnet/minecraft/server/BlockPosition$MutableBlockPosition;)Lnet/minecraft/server/VoxelShape; lambda$getDismountLocationForPassenger$0
	a (Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
	a (Lnet/minecraft/server/BlockPropertyTrackPosition;)Lcom/mojang/datafixers/util/Pair; exits
	a (Lnet/minecraft/server/DamageSource;)V destroy
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/BlockUtil$Rectangle;)Lnet/minecraft/server/Vec3D; getRelativePortalPosition
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/World;DDDLnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType;)Lnet/minecraft/server/EntityMinecartAbstract; createMinecart
	a (Z)V setCustomDisplay
	aB ()Z isMovementNoisy
	aS ()Z isPickable
	aT ()Z isPushable
	aq ()F getBlockSpeedFactor
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; lambda$getDismountLocationForPassenger$1
	b (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/Vec3D; getDismountLocationForPassenger
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bZ ()Lnet/minecraft/server/EnumDirection; getMotionDirection
	bb ()D getPassengersRidingOffset
	bl ()V animateHurt
	c (I)V setHurtTime
	c (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V moveAlongTrack
	cc ()Lnet/minecraft/server/AxisAlignedBB; getBoundingBoxForCulling
	d (I)V setHurtDir
	decelerate ()V applyNaturalSlowdown
	e ()V defineSynchedData
	getDisplayBlock ()Lnet/minecraft/server/IBlockData; getDisplayBlockState
	getDisplayBlockOffset ()I getDisplayOffset
	getType ()I getHurtTime
	h ()V comeOffTrack
	i (Lnet/minecraft/server/Entity;)V push
	j ()V tick
	j (Lnet/minecraft/server/Entity;)Z canCollideWith
	k (DDD)V lerpMotion
	n ()I getHurtDir
	p (DDD)Lnet/minecraft/server/Vec3D; getPos
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	s ()I getDefaultDisplayOffset
	setDisplayBlock (Lnet/minecraft/server/IBlockData;)V setDisplayBlockState
	setDisplayBlockOffset (I)V setDisplayOffset
	t ()Z hasCustomDisplay
net/minecraft/server/WorldGenFoilagePlacerFancy net/minecraft/world/level/levelgen/feature/foliageplacers/FancyFoliagePlacer
	c CODEC
	a ()Lnet/minecraft/server/WorldGenFoilagePlacers; type
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;ILcni$b;IILjava/util/Set;ILnet/minecraft/server/StructureBoundingBox;)V createFoliage
	c (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
bst$a net/minecraft/world/level/biome/BiomeGenerationSettings$Builder
	a surfaceBuilder
	b carvers
	c features
	d structureStarts
	a ()Lnet/minecraft/server/BiomeSettingsGeneration; build
	a (I)V addFeatureStepsUpTo
	a (ILjava/util/function/Supplier;)Lbst$a; addFeature
	a (Ljava/util/Map$Entry;)Ljava/util/List; lambda$build$6
	a (Ljava/util/function/Supplier;)Lbst$a; surfaceBuilder
	a (Lnet/minecraft/server/StructureFeature;)Lbst$a; addStructureStart
	a (Lnet/minecraft/server/WorldGenCarverWrapper;)Lnet/minecraft/server/WorldGenCarverWrapper; lambda$addCarver$3
	a (Lnet/minecraft/server/WorldGenFeatureConfigured;)Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$addFeature$1
	a (Lnet/minecraft/server/WorldGenStage$Decoration;Lnet/minecraft/server/WorldGenFeatureConfigured;)Lbst$a; addFeature
	a (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/List; lambda$addCarver$2
	a (Lnet/minecraft/server/WorldGenStage$Features;Lnet/minecraft/server/WorldGenCarverWrapper;)Lbst$a; addCarver
	a (Lnet/minecraft/server/WorldGenSurfaceComposite;)Lbst$a; surfaceBuilder
	b ()Ljava/lang/IllegalStateException; lambda$build$5
	b (Lnet/minecraft/server/StructureFeature;)Lnet/minecraft/server/StructureFeature; lambda$addStructureStart$4
	b (Lnet/minecraft/server/WorldGenSurfaceComposite;)Lnet/minecraft/server/WorldGenSurfaceComposite; lambda$surfaceBuilder$0
net/minecraft/server/BlockMobSpawner net/minecraft/world/level/block/SpawnerBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/BlockEnchantmentTable net/minecraft/world/level/block/EnchantmentTableBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$getMenuProvider$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	c_ (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/server/ArgumentRotationAxis net/minecraft/commands/arguments/coordinates/SwizzleArgument
	a EXAMPLES
	b ERROR_INVALID
	a ()Lnet/minecraft/server/ArgumentRotationAxis; swizzle
	a (Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet; getSwizzle
net/minecraft/server/PathfinderGoalTame net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal
	b speedModifier
	c posX
	d posY
	e posZ
	entity horse
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
net/minecraft/server/PacketPlayOutUpdateTime net/minecraft/network/protocol/game/ClientboundSetTimePacket
	a gameTime
	b dayTime
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()J getGameTime
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()J getDayTime
dxf$1 net/minecraft/client/particle/CritParticle$1
net/minecraft/server/DefinedStructureTestBlockState net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest
	a CODEC
	b blockState
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/server/DefinedStructureTestBlockState;)Lnet/minecraft/server/IBlockData; lambda$static$0
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
fm$a net/minecraft/commands/synchronization/SuggestionProviders$Wrapper
	a delegate
	b name
	a (Lfm$a;)Lnet/minecraft/server/MinecraftKey; access$000
net/minecraft/server/VectorPosition net/minecraft/commands/arguments/coordinates/WorldCoordinates
	a x
	b y
	c z
	a ()Z isXRelative
	a (DDD)Lnet/minecraft/server/VectorPosition; absolute
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/VectorPosition; parseInt
	a (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/server/VectorPosition; parseDouble
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec3D; getPosition
	a (Lnet/minecraft/server/Vec2F;)Lnet/minecraft/server/VectorPosition; absolute
	b ()Z isYRelative
	b (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec2F; getRotation
	c ()Z isZRelative
	d ()Lnet/minecraft/server/VectorPosition; current
net/minecraft/server/BehaviorBellRing net/minecraft/world/entity/ai/behavior/RingBell
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
brq$1 net/minecraft/world/level/GameRules$1
net/minecraft/server/DataWatcher net/minecraft/network/syncher/SynchedEntityData
	a LOGGER
	b ENTITY_ID_POOL
	entries itemsById
	f isEmpty
	g isDirty
	a ()Z isDirty
	a (Ljava/lang/Class;Lnet/minecraft/server/DataWatcherSerializer;)Lnet/minecraft/server/DataWatcherObject; defineId
	a (Ljava/util/List;)V assignValues
	a (Ljava/util/List;Lnet/minecraft/server/PacketDataSerializer;)V pack
	a (Lnet/minecraft/server/DataWatcher$Item;Lnet/minecraft/server/DataWatcher$Item;)V assignValue
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/util/List; unpack
	a (Lnet/minecraft/server/PacketDataSerializer;ILnet/minecraft/server/DataWatcherSerializer;)Lnet/minecraft/server/DataWatcher$Item; genericHelper
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/DataWatcher$Item;)V writeDataItem
	b ()Ljava/util/List; packDirty
	b (Lnet/minecraft/server/DataWatcherObject;)Lnet/minecraft/server/DataWatcher$Item; getItem
	c ()Ljava/util/List; getAll
	d ()Z isEmpty
	e ()V clearDirty
	register (Lnet/minecraft/server/DataWatcherObject;Ljava/lang/Object;)V define
	registerObject (Lnet/minecraft/server/DataWatcherObject;Ljava/lang/Object;)V createDataItem
eei$a net/minecraft/client/renderer/entity/EnderDragonRenderer$DragonModel
	A entity
	B a
	a head
	b neck
	f jaw
	g body
	h leftWing
	i leftWingTip
	j leftFrontLeg
	k leftFrontLegTip
	l leftFrontFoot
	m leftRearLeg
	n leftRearLegTip
	o leftRearFoot
	p rightWing
	t rightWingTip
	u rightFrontLeg
	v rightFrontLegTip
	w rightFrontFoot
	x rightRearLeg
	y rightRearLegTip
	z rightRearFoot
	a (Ldfj;Ldfn;IIFFFF)V renderToBuffer
	a (Ldfj;Ldfn;IIFLdwf;Ldwf;Ldwf;Ldwf;Ldwf;Ldwf;Ldwf;)V renderSide
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityEnderDragon;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityEnderDragon;FFFFF)V setupAnim
net/minecraft/server/DataConverterCustomNameTile net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
vt$1 net/minecraft/server/PlayerAdvancements$1
net/minecraft/server/EnchantmentMultishot net/minecraft/world/item/enchantment/MultiShotEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/AreaTransformer2 net/minecraft/world/level/newbiome/layer/traits/AreaTransformer1
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/AreaFactory;)Lnet/minecraft/server/AreaFactory; run
	a (Lnet/minecraft/server/AreaFactory;Lnet/minecraft/server/AreaContextTransformed;)Lnet/minecraft/server/Area; lambda$run$1
	b (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I lambda$null$0
net/minecraft/server/AreaTransformer3 net/minecraft/world/level/newbiome/layer/traits/AreaTransformer2
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;II)I lambda$null$0
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/AreaFactory;Lnet/minecraft/server/AreaFactory;)Lnet/minecraft/server/AreaFactory; run
	a (Lnet/minecraft/server/AreaFactory;Lnet/minecraft/server/AreaFactory;Lnet/minecraft/server/AreaContextTransformed;)Lnet/minecraft/server/Area; lambda$run$1
	a (Lnet/minecraft/server/WorldGenContext;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;II)I applyPixel
net/minecraft/server/AreaTransformer1 net/minecraft/world/level/newbiome/layer/traits/AreaTransformer0
	a (Lnet/minecraft/server/AreaContextTransformed;)Lnet/minecraft/server/AreaFactory; run
	a (Lnet/minecraft/server/AreaContextTransformed;II)I lambda$null$0
	a (Lnet/minecraft/server/WorldGenContext;II)I applyPixel
	b (Lnet/minecraft/server/AreaContextTransformed;)Lnet/minecraft/server/Area; lambda$run$1
dmw$a net/minecraft/client/gui/font/glyphs/BakedGlyph$Effect
	a x0
	b y0
	c x1
	d y1
	e depth
	f r
	h b
	i a
uu$13 net/minecraft/network/syncher/EntityDataSerializers$3
	a (Ljava/lang/Float;)Ljava/lang/Float; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Float;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Float; read
uu$14 net/minecraft/network/syncher/EntityDataSerializers$4
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Ljava/lang/String;)Ljava/lang/String; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/String;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/String; read
net/minecraft/server/CriterionTriggerEnterBlock net/minecraft/advancements/critereon/EnterBlockTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/Block; deserializeBlock
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lbc$a; createInstance
	a (Lnet/minecraft/server/Block;Ljava/lang/String;)V lambda$createInstance$0
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/IBlockData;)V trigger
	a (Lnet/minecraft/server/IBlockData;Lbc$a;)Z lambda$trigger$2
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$deserializeBlock$1
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
uu$11 net/minecraft/network/syncher/EntityDataSerializers$19
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntityPose; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/EntityPose;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/EntityPose; read
uu$12 net/minecraft/network/syncher/EntityDataSerializers$2
	a (Ljava/lang/Integer;)Ljava/lang/Integer; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Integer;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Integer; read
uu$10 net/minecraft/network/syncher/EntityDataSerializers$18
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Ljava/util/OptionalInt;)Ljava/util/OptionalInt; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/util/OptionalInt;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/util/OptionalInt; read
net/minecraft/server/DataConverterShulkerBoxItem net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix
	a NAMES_BY_COLOR
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
cay$1 net/minecraft/world/level/block/TrapDoorBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
uu$19 net/minecraft/network/syncher/EntityDataSerializers$9
	a (Ljava/lang/Boolean;)Ljava/lang/Boolean; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Boolean;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Boolean; read
net/minecraft/server/EnchantmentArrowDamage net/minecraft/world/item/enchantment/ArrowDamageEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
uu$17 net/minecraft/network/syncher/EntityDataSerializers$7
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/ItemStack;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ItemStack; read
uu$18 net/minecraft/network/syncher/EntityDataSerializers$8
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Ljava/util/Optional;)Ljava/util/Optional; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/util/Optional;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/util/Optional; read
net/minecraft/server/MojangsonParser net/minecraft/nbt/TagParser
	a ERROR_TRAILING_DATA
	b ERROR_EXPECTED_KEY
	c ERROR_EXPECTED_VALUE
	d ERROR_INSERT_MIXED_LIST
	e ERROR_INSERT_MIXED_ARRAY
	f ERROR_INVALID_ARRAY
	g DOUBLE_PATTERN_NOSUFFIX
	h DOUBLE_PATTERN
	i FLOAT_PATTERN
	j BYTE_PATTERN
	k LONG_PATTERN
	l SHORT_PATTERN
	m INT_PATTERN
	n reader
	a ()Lnet/minecraft/server/NBTTagCompound; readSingleStruct
	a (C)V expect
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lnet/minecraft/server/NBTTagType;Lnet/minecraft/server/NBTTagType;)Ljava/util/List; readArray
	b ()Ljava/lang/String; readKey
	b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	c ()Lnet/minecraft/server/NBTBase; readTypedValue
	d ()Lnet/minecraft/server/NBTBase; readValue
	e ()Lnet/minecraft/server/NBTBase; readList
	f ()Lnet/minecraft/server/NBTTagCompound; readStruct
	g ()Lnet/minecraft/server/NBTBase; readListTag
	i ()Z hasElementSeparator
	parse (Ljava/lang/String;)Lnet/minecraft/server/NBTTagCompound; parseTag
	parseArray ()Lnet/minecraft/server/NBTBase; readArrayTag
	parseLiteral (Ljava/lang/String;)Lnet/minecraft/server/NBTBase; type
uu$15 net/minecraft/network/syncher/EntityDataSerializers$5
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IChatBaseComponent;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IChatBaseComponent; read
uu$16 net/minecraft/network/syncher/EntityDataSerializers$6
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Ljava/util/Optional;)Ljava/util/Optional; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/util/Optional;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)Ljava/util/Optional; read
net/minecraft/server/EntityWither net/minecraft/world/entity/boss/wither/WitherBoss
	b DATA_TARGET_A
	bo DATA_TARGETS
	bossBattle bossEvent
	bp DATA_ID_INV
	bq xRotHeads
	br yRotHeads
	bs xRotOHeads
	bt yRotOHeads
	bu nextHeadUpdate
	bv idleHeadUpdates
	bw destroyBlocksTick
	by LIVING_ENTITY_SELECTOR
	bz TARGETING_CONDITIONS
	c DATA_TARGET_B
	d DATA_TARGET_C
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	N ()V customServerAiStep
	S_ ()Z isPowered
	a (FFF)F rotlerp
	a (I)F getHeadYRot
	a (IDDDZ)V performRangedAttack
	a (ILnet/minecraft/server/EntityLiving;)V performRangedAttack
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Vec3D;)V makeStuckInBlock
	a (Lnet/minecraft/server/IChatBaseComponent;)V setCustomName
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (FF)Z causeFallDamage
	b (I)F getHeadXRot
	b (Lnet/minecraft/server/EntityPlayer;)V startSeenByPlayer
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bN ()Z canChangeDimensions
	beginSpawnSequence ()V makeInvulnerable
	c (Lnet/minecraft/server/EntityPlayer;)V stopSeenByPlayer
	c (Lnet/minecraft/server/IBlockData;)Z canDestroy
	c (Lnet/minecraft/server/MobEffect;)Z addEffect
	cH ()V checkDespawn
	d (Lnet/minecraft/server/MobEffect;)Z canBeAffected
	dB ()Lnet/minecraft/server/EnumMonsterType; getMobType
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	getHeadTarget (I)I getAlternativeTarget
	getInvul ()I getInvulnerableTicks
	i (Lnet/minecraft/server/EntityLiving;)Z lambda$static$0
	k ()V aiStep
	n (Lnet/minecraft/server/Entity;)Z canRide
	o ()V registerGoals
	setHeadTarget (II)V setAlternativeTarget
	setInvul (I)V setInvulnerableTicks
	u (I)D getHeadX
	v (I)D getHeadY
	w (I)D getHeadZ
net/minecraft/server/EntityZoglin net/minecraft/world/entity/monster/Zoglin
	b SENSOR_TYPES
	bo attackAnimationRemainingTicks
	c MEMORY_TYPES
	d DATA_BABY_ID
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	M ()V sendDebugPackets
	N ()V customServerAiStep
	a (B)V handleEntityEvent
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/server/BehaviorController; makeBrain
	a (Lnet/minecraft/server/BehaviorController;)V initCoreActivity
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Z)V setBaby
	b (Lnet/minecraft/server/BehaviorController;)V initIdleActivity
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bb ()D getPassengersRidingOffset
	c (Lnet/minecraft/server/BehaviorController;)V initFightActivity
	cI ()Lnet/minecraft/server/BehaviorController; getBrain
	cJ ()Larc$b; brainProvider
	dB ()Lnet/minecraft/server/EnumMonsterType; getMobType
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityLiving;)V blockedByShield
	eK ()Z isAdult
	eL ()V updateActivity
	eM ()I getAttackAnimationRemainingTicks
	eN ()V playAngrySound
	eO ()Ljava/util/Optional; findNearestValidAttackTarget
	i (Lnet/minecraft/server/EntityLiving;)Z isTargetable
	j (Lnet/minecraft/server/EntityLiving;)V setAttackTarget
	k ()V aiStep
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	w_ ()Z isBaby
crr$1 net/minecraft/world/level/levelgen/structure/StructurePiece$1
	a $SwitchMap$net$minecraft$core$Direction
cmk$a net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder
	a stateProvider
	b blockPlacer
	c whitelist
	d blacklist
	e tries
	f xspread
	g yspread
	h zspread
	i canReplace
	j project
	k needWater
	a ()Lcmk$a; canReplace
	a (I)Lcmk$a; tries
	a (Ljava/util/Set;)Lcmk$a; whitelist
	b ()Lcmk$a; noProjection
	b (I)Lcmk$a; xspread
	b (Ljava/util/Set;)Lcmk$a; blacklist
	c ()Lcmk$a; needWater
	c (I)Lcmk$a; yspread
	d ()Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration; build
	d (I)Lcmk$a; zspread
ebg$a net/minecraft/client/renderer/block/model/Variant$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lebg; deserialize
	a (Lcom/google/gson/JsonObject;)Lelh; getBlockRotation
	b (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/MinecraftKey; getModel
	c (Lcom/google/gson/JsonObject;)I getWeight
	d (Lcom/google/gson/JsonObject;)Z getUvLock
agv$1 net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw$1
	a val$fixBlock
	a (Ljava/lang/String;)Ljava/lang/String; fixBlock
net/minecraft/server/EnumItemSlot net/minecraft/world/entity/EquipmentSlot
	g type
	h index
	i filterFlag
	j name
	k $VALUES
	a ()Lnet/minecraft/server/EnumItemSlot$Function; getType
	a (Lnet/minecraft/server/EnumItemSlot$Function;I)Lnet/minecraft/server/EnumItemSlot; byTypeAndIndex
	b ()I getIndex
	c ()I getFilterFlag
	fromName (Ljava/lang/String;)Lnet/minecraft/server/EnumItemSlot; byName
	getSlotName ()Ljava/lang/String; getName
bea$1 net/minecraft/world/entity/monster/Strider$1
net/minecraft/server/BossBattleCustomData net/minecraft/server/bossevents/CustomBossEvents
	a events
	a ()Ljava/util/Collection; getIds
	a (Lnet/minecraft/server/EntityPlayer;)V onPlayerConnect
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/BossBattleCustom; get
	b (Lnet/minecraft/server/EntityPlayer;)V onPlayerDisconnect
	getBattles ()Ljava/util/Collection; getEvents
	register (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/BossBattleCustom; create
net/minecraft/server/EntityHorseSkeleton net/minecraft/world/entity/animal/horse/SkeletonHorse
	bw skeletonTrapGoal
	bx isTrap
	by trapTime
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	au ()Lnet/minecraft/server/SoundEffect; getSwimSound
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bb ()D getPassengersRidingOffset
	bs ()Z rideableUnderWater
	d (F)V playSwimSound
	dB ()Lnet/minecraft/server/EnumMonsterType; getMobType
	dL ()F getWaterSlowDown
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()V randomizeAttributes
	eL ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	eM ()Z isTrap
	eV ()V addBehaviourGoals
	fn ()V playJumpSound
	k ()V aiStep
	t (Z)V setTrap
net/minecraft/server/LightEngineLayer net/minecraft/world/level/lighting/LayerLightEngine
	a chunkSource
	b layer
	c storage
	d pos
	e DIRECTIONS
	f runningLightUpdates
	g lastChunkPos
	h lastChunk
	a ()Z hasLightWork
	a (II)Lnet/minecraft/server/IBlockAccess; getChunk
	a (IZZ)I runUpdates
	a (J)Z isSource
	a (JI)V setLevel
	a (JJI)I getComputedLevel
	a (JLnet/minecraft/server/NibbleArray;Z)V queueSectionData
	a (JLorg/apache/commons/lang3/mutable/MutableInt;)Lnet/minecraft/server/IBlockData; getStateAndOpacity
	a (Lnet/minecraft/server/BlockPosition;)V checkBlock
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;I)I getLightBlockInto
	a (Lnet/minecraft/server/IBlockData;JLnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/NibbleArray;J)I getLevel
	a (Lnet/minecraft/server/SectionPosition;)Lnet/minecraft/server/NibbleArray; getDataLayerData
	a (Lnet/minecraft/server/SectionPosition;Z)V updateSectionStatus
	b (J)Ljava/lang/String; getDebugData
	b (JJI)I computeLevelFromNeighbor
	b (Lnet/minecraft/server/BlockPosition;)I getLightValue
	b (Lnet/minecraft/server/ChunkCoordIntPair;Z)V retainData
	c (J)I getLevel
	d ()V clearCache
	f (J)V checkNode
net/minecraft/server/RemoteStatusListener$RemoteStatusChallenge net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge
	d challengeBytes
	e ident
	identity identBytes
	token challenge
	a ()I getChallenge
	a (J)Ljava/lang/Boolean; before
	b ()[B getChallengeBytes
	c ()[B getIdentBytes
	d ()Ljava/lang/String; getIdent
net/minecraft/server/DataConverterZombieVillagerLevelXp net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
cmk$1 net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$1
bea$b net/minecraft/world/entity/monster/Strider$StriderPathNavigation
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
	a (Lnet/minecraft/server/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/server/PathType;)Z hasValidPathType
bbk net/minecraft/world/entity/animal/package-info
bbj net/minecraft/world/entity/animal/horse/package-info
bbl net/minecraft/world/entity/boss/BossMob
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	dj ()F getHealth
	dw ()F getMaxHealth
net/minecraft/server/BlockBrewingStand net/minecraft/world/level/block/BrewingStandBlock
	b SHAPE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
bea$a net/minecraft/world/entity/monster/Strider$StriderGoToLavaGoal
	g strider
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	j ()Lnet/minecraft/server/BlockPosition; getMoveToTarget
	k ()Z shouldRecalculatePath
net/minecraft/server/InventoryLargeChest net/minecraft/world/CompoundContainer
	left container1
	right container2
	V_ ()I getMaxStackSize
	X_ ()V setChanged
	Y_ ()V clearContent
	Z_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IInventory;)Z contains
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/server/ItemStack;)Z canPlaceItem
	b_ (Lnet/minecraft/server/EntityHuman;)V stopOpen
	c ()Z isEmpty
	c_ (Lnet/minecraft/server/EntityHuman;)V startOpen
dkg$f net/minecraft/client/StringSplitter$WidthProvider
bbp net/minecraft/world/entity/boss/enderdragon/package-info
dkg$e net/minecraft/client/StringSplitter$WidthLimitedCharSink
	a this$0
	b maxWidth
	c position
	a ()I getPosition
	b ()V resetPosition
dkg$d net/minecraft/client/StringSplitter$LinePosConsumer
net/minecraft/server/DataConverterSchemaV1451_2 net/minecraft/util/datafix/schemas/V1451_2
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$0
bpr$a net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor
net/minecraft/server/RegionLimitedWorldAccess net/minecraft/server/level/WorldGenRegion
	a LOGGER
	b cache
	c x
	d z
	e size
	f level
	g seed
	h levelData
	i random
	j dimensionType
	k blockTicks
	l liquidTicks
	m biomeManager
	n firstPos
	o lastPos
	C ()J getSeed
	E ()Lnet/minecraft/server/WorldServer; getLevel
	G ()Lnet/minecraft/server/IChunkProvider; getChunkSource
	H ()Lnet/minecraft/server/TickList; getLiquidTicks
	I ()Lnet/minecraft/server/TickList; getBlockTicks
	a ()I getCenterX
	a (DDDDLjava/util/function/Predicate;)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (II)Lnet/minecraft/server/IChunkAccess; getChunk
	a (III)Lnet/minecraft/server/BiomeBase; getUncachedNoiseBiome
	a (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntitiesOfClass
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;II)Z setBlock
	a (Lnet/minecraft/server/BlockPosition;Z)Z removeBlock
	a (Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/Entity;I)Z destroyBlock
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/server/EntityHuman;ILnet/minecraft/server/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EnumDirection;Z)F getShade
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/StructureGenerator;)Ljava/util/stream/Stream; startsForFeature
	b ()I getCenterZ
	b (II)Z hasChunk
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
	c ()I getSkyDarken
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	c (Lnet/minecraft/server/Entity;)Z addFreshEntity
	d ()Lnet/minecraft/server/BiomeManager; getBiomeManager
	d (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/DifficultyDamageScaler; getCurrentDifficultyAt
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	f ()Lnet/minecraft/server/WorldBorder; getWorldBorder
	h ()Lnet/minecraft/server/WorldData; getLevelData
	j (Lnet/minecraft/server/BlockPosition;)V markPosForPostprocessing
	k ()Lnet/minecraft/server/DimensionManager; dimensionType
	k (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TickList; lambda$new$1
	l ()Lnet/minecraft/server/MinecraftServer; getServer
	l (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TickList; lambda$new$0
	r ()Lnet/minecraft/server/IRegistryCustom; registryAccess
	s_ ()Z isClientSide
	t_ ()I getSeaLevel
	u_ ()Ljava/util/Random; getRandom
	x ()Ljava/util/List; players
net/minecraft/server/DataConverterSchemaV1451_1 net/minecraft/util/datafix/schemas/V1451_1
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
net/minecraft/server/DataConverterSchemaV1451_4 net/minecraft/util/datafix/schemas/V1451_4
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
net/minecraft/server/DataConverterSchemaV1451_3 net/minecraft/util/datafix/schemas/V1451_3
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
	f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
	g (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
	h (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	i (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	j (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
	k (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
net/minecraft/server/DataConverterSchemaV1451_6 net/minecraft/util/datafix/schemas/V1451_6
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
net/minecraft/server/DataConverterSchemaV1451_5 net/minecraft/util/datafix/schemas/V1451_5
net/minecraft/server/RegionFileSection net/minecraft/world/level/chunk/storage/SectionStorage
	a LOGGER
	b worker
	c storage
	d dirty
	e codec
	f factory
	g fixerUpper
	h type
	a (J)V setDirty
	a (JLcom/mojang/serialization/Dynamic;)Ljava/util/Optional; lambda$readColumn$2
	a (JZLjava/lang/Object;)V lambda$readColumn$3
	a (Lcom/mojang/serialization/Dynamic;)I getVersion
	a (Ljava/util/Map;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;Ljava/lang/Object;)V lambda$writeColumn$5
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V flush
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; writeColumn
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V readColumn
	b (J)V onSectionLoad
	b (Lnet/minecraft/server/ChunkCoordIntPair;)V readColumn
	b (Lnet/minecraft/server/SectionPosition;)Z outsideStoredRange
	c (J)Ljava/util/Optional; get
	c (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/NBTTagCompound; tryRead
	d (J)Ljava/util/Optional; getOrLoad
	d (Lnet/minecraft/server/ChunkCoordIntPair;)V writeColumn
	e (J)Ljava/lang/Object; getOrCreate
	f (J)V lambda$writeColumn$4
	g (J)V lambda$null$1
	h (J)V lambda$getOrCreate$0
net/minecraft/server/DataConverterSchemaV1451_7 net/minecraft/util/datafix/schemas/V1451_7
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
net/minecraft/server/EntityRabbit$ControllerMoveRabbit net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl
	i rabbit
	j nextJumpSpeed
	a ()V tick
	a (DDDD)V setWantedPosition
zg$1 net/minecraft/server/dedicated/DedicatedServer$1
	a this$0
net/minecraft/server/PacketPlayOutStopSound net/minecraft/network/protocol/game/ClientboundStopSoundPacket
	a name
	b source
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getName
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/SoundCategory; getSource
in$1 net/minecraft/data/models/blockstates/MultiPartGenerator$1
bch net/minecraft/world/entity/boss/package-info
bcg net/minecraft/world/entity/boss/enderdragon/phases/package-info
cra$2 net/minecraft/world/level/levelgen/structure/EndCityPieces$2
	a ()V init
	a (Lnet/minecraft/server/DefinedStructureManager;ILnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)Z generate
bcj net/minecraft/world/entity/boss/wither/package-info
net/minecraft/server/DismountUtil net/minecraft/world/entity/vehicle/DismountHelper
	a (D)Z isBlockFloorValid
	a (Lnet/minecraft/server/BlockPosition;ILjava/util/function/Function;)D findCeilingFrom
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/ICollisionAccess;Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/Vec3D; findSafeDismountLocation
	a (Lnet/minecraft/server/EnumDirection;)[[I offsetsForDirection
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; nonClimbableShape
	a (Lnet/minecraft/server/ICollisionAccess;DDDLnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/Vec3D; findDismountLocation
	a (Lnet/minecraft/server/ICollisionAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; lambda$findSafeDismountLocation$0
	a (Lnet/minecraft/server/ICollisionAccess;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AxisAlignedBB;)Z canDismountTo
cra$3 net/minecraft/world/level/levelgen/structure/EndCityPieces$3
	a shipCreated
	a ()V init
	a (Lnet/minecraft/server/DefinedStructureManager;ILnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)Z generate
net/minecraft/server/PacketPlayInBlockPlace net/minecraft/network/protocol/game/ServerboundUseItemPacket
	a hand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/EnumHand; getHand
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
cra$4 net/minecraft/world/level/levelgen/structure/EndCityPieces$4
	a ()V init
	a (Lnet/minecraft/server/DefinedStructureManager;ILnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)Z generate
biv$1 net/minecraft/world/inventory/HorseInventoryMenu$1
	a val$horse
	b this$0
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	b ()Z isActive
biv$2 net/minecraft/world/inventory/HorseInventoryMenu$2
	a val$horse
	b this$0
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	b ()Z isActive
bcq net/minecraft/world/entity/decoration/package-info
bcu net/minecraft/world/entity/item/package-info
net/minecraft/server/BlockPistonMoving net/minecraft/world/level/block/piston/MovingPistonBlock
	a FACING
	b TYPE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V destroy
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntityPiston; getBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;ZZ)Lnet/minecraft/server/TileEntity; newMovingBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
net/minecraft/server/ItemEnchantedBook net/minecraft/world/item/EnchantedBookItem
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/WeightedRandomEnchant;)V addEnchantment
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbni;)V appendHoverText
	a (Lnet/minecraft/server/WeightedRandomEnchant;)Lnet/minecraft/server/ItemStack; createForEnchantment
	d (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/NBTTagList; getEnchantments
	e (Lnet/minecraft/server/ItemStack;)Z isFoil
	f_ (Lnet/minecraft/server/ItemStack;)Z isEnchantable
net/minecraft/server/WorldGenDecoratorCountNoiseBiased net/minecraft/world/level/levelgen/placement/NoiseBasedDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorNoiseConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$place$0
eau$a net/minecraft/client/renderer/block/model/BlockElementFace$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Leau; deserialize
	a (Lcom/google/gson/JsonObject;)I getTintIndex
	b (Lcom/google/gson/JsonObject;)Ljava/lang/String; getTexture
	c (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/EnumDirection; getCullFacing
net/minecraft/server/EntityPhantom net/minecraft/world/entity/monster/Phantom
	b ID_SIZE
	bo attackPhase
	c moveTargetPoint
	d anchorPoint
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	L ()Z shouldDespawnInPeaceful
	N ()V customServerAiStep
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityPhantom;)Lnet/minecraft/server/Vec3D; access$400
	a (Lnet/minecraft/server/EntityPhantom;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; access$1402
	a (Lnet/minecraft/server/EntityPhantom;Lnet/minecraft/server/EntityPhantom$AttackPhase;)Lnet/minecraft/server/EntityPhantom$AttackPhase; access$502
	a (Lnet/minecraft/server/EntityPhantom;Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; access$402
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/server/EntityPhantom;)Lnet/minecraft/server/EntityPhantom$AttackPhase; access$500
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$600
	ct ()Lnet/minecraft/server/SoundCategory; getSoundSource
	d (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$700
	dB ()Lnet/minecraft/server/EnumMonsterType; getMobType
	dF ()F getSoundVolume
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$800
	eI ()Lnet/minecraft/server/Vec3D; getMovementTarget
	eJ ()V updatePhantomSizeInfo
	f (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$900
	g (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$1000
	getSize ()I getPhantomSize
	h (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$1100
	i (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$1200
	j ()V tick
	j (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$1300
	k ()V aiStep
	k (Lnet/minecraft/server/EntityPhantom;)Lnet/minecraft/server/BlockPosition; access$1400
	l (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$1500
	m (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$1600
	n (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$1700
	o ()V registerGoals
	o (Lnet/minecraft/server/EntityPhantom;)Ljava/util/Random; access$1800
	r ()Lnet/minecraft/server/EntityAIBodyControl; createBodyControl
	setSize (I)V setPhantomSize
net/minecraft/server/DataWatcherObject net/minecraft/network/syncher/EntityDataAccessor
	a id
	b serializer
	a ()I getId
	b ()Lnet/minecraft/server/DataWatcherSerializer; getSerializer
net/minecraft/server/WorldGenFeatureSeaPickel net/minecraft/world/level/levelgen/feature/SeaPickleFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/WorldGenDecoratorNetherGlowstone net/minecraft/world/level/levelgen/placement/nether/GlowstoneDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$place$0
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
cra$1 net/minecraft/world/level/levelgen/structure/EndCityPieces$1
	a ()V init
	a (Lnet/minecraft/server/DefinedStructureManager;ILnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)Z generate
cah$1 net/minecraft/world/level/block/StairBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$StairsShape
	b $SwitchMap$net$minecraft$world$level$block$Mirror
net/minecraft/server/ItemKnowledgeBook net/minecraft/world/item/KnowledgeBookItem
	a LOGGER
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
dx$b net/minecraft/commands/arguments/RangeArgument$Ints
	a EXAMPLES
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; getRange
net/minecraft/server/EntitySkeletonWither net/minecraft/world/entity/monster/WitherSkeleton
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentEnchantments
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityArrow; getArrow
	d (Lnet/minecraft/server/MobEffect;)Z canBeAffected
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/SoundEffect; getStepSound
	o ()V registerGoals
dx$a net/minecraft/commands/arguments/RangeArgument$Floats
	a EXAMPLES
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; getRange
bdo$a net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal
	a mob
	b speedModifier
	c leaderSpeedModifier
	d cooldownUntil
	a ()Z canUse
	a (Lnet/minecraft/server/EntityMonsterPatrolling;)Z lambda$findPatrolCompanions$0
	c ()V start
	d ()V stop
	e ()V tick
	g ()Ljava/util/List; findPatrolCompanions
	h ()Z moveRandomly
net/minecraft/server/EntityFox$Type net/minecraft/world/entity/animal/Fox$Type
	c BY_ID
	d BY_NAME
	e id
	f name
	g biomes
	h $VALUES
	a ()Ljava/lang/String; getName
	a (I)Lnet/minecraft/server/EntityFox$Type; byId
	a (Ljava/lang/String;)Lnet/minecraft/server/EntityFox$Type; byName
	a (Ljava/util/Optional;)Lnet/minecraft/server/EntityFox$Type; byBiome
	a (Lnet/minecraft/server/EntityFox$Type;)Lnet/minecraft/server/EntityFox$Type; lambda$static$1
	b ()I getId
	b (I)[Lnet/minecraft/server/EntityFox$Type; lambda$static$0
net/minecraft/server/Reloadable net/minecraft/server/packs/resources/SimpleReloadInstance
	a resourceManager
	b allPreparations
	c allDone
	d preparingListeners
	e listenerCount
	f startedReloads
	g finishedReloads
	h startedTaskCounter
	i doneTaskCounter
	a ()Ljava/util/concurrent/CompletableFuture; done
	a (Ljava/lang/Runnable;)V lambda$null$3
	a (Ljava/util/List;)Lnet/minecraft/server/Unit; lambda$done$5
	a (Ljava/util/concurrent/Executor;Laca$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/IReloadListener;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; lambda$of$0
	a (Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V lambda$new$4
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/Reloadable; of
	a (Lnet/minecraft/server/Reloadable;)Ljava/util/Set; access$000
	b ()F getActualProgress
	b (Ljava/lang/Runnable;)V lambda$null$1
	b (Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V lambda$new$2
	c ()Z isApplying
	d ()Z isDone
	e ()V checkExceptions
net/minecraft/server/PathType net/minecraft/world/level/pathfinder/BlockPathTypes
	y malus
	z $VALUES
	a ()F getMalus
net/minecraft/server/WorldGenFeatureRandomChoiceConfiguration net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration
	a CODEC
	b features
	c defaultFeature
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/WorldGenFeatureConfigured;)Lnet/minecraft/server/WorldGenFeatureConfigured; lambda$new$3
	a (Lnet/minecraft/server/WorldGenFeatureRandomChoiceConfiguration;)Ljava/util/function/Supplier; lambda$null$1
	a (Lnet/minecraft/server/WorldGenFeatureRandomChoiceConfigurationWeight;)Ljava/util/stream/Stream; lambda$getFeatures$4
	an_ ()Ljava/util/stream/Stream; getFeatures
	b (Lnet/minecraft/server/WorldGenFeatureRandomChoiceConfiguration;)Ljava/util/List; lambda$null$0
ben net/minecraft/world/entity/monster/package-info
bem net/minecraft/world/entity/monster/hoglin/package-info
dwj$a net/minecraft/client/multiplayer/ClientChunkCache$Storage
	a this$0
	b chunks
	c chunkRadius
	d viewRange
	e viewCenterX
	f viewCenterZ
	g chunkCount
	a (I)Lnet/minecraft/server/Chunk; getChunk
	a (II)I getIndex
	a (ILnet/minecraft/server/Chunk;)V replace
	a (ILnet/minecraft/server/Chunk;Lnet/minecraft/server/Chunk;)Lnet/minecraft/server/Chunk; replace
	a (Ldwj$a;)Ljava/util/concurrent/atomic/AtomicReferenceArray; access$300
	a (Ldwj$a;I)I access$402
	a (Ldwj$a;II)Z access$100
	a (Ljava/lang/String;)V dumpChunks
	b (II)Z inRange
	b (Ldwj$a;)I access$600
	b (Ldwj$a;I)I access$502
	b (Ldwj$a;II)I access$200
	c (Ldwj$a;)I access$400
	d (Ldwj$a;)I access$500
	e (Ldwj$a;)I access$700
net/minecraft/server/DispenseBehaviorItem net/minecraft/core/dispenser/DefaultDispenseItemBehavior
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/EnumDirection;)V playAnimation
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;ILnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IPosition;)V spawnItem
net/minecraft/server/BlockDoor net/minecraft/world/level/block/DoorBlock
	f SOUTH_AABB
	g NORTH_AABB
	h WEST_AABB
	i EAST_AABB
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)J getSeed
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z isWoodenDoor
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)V playSound
	b (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/BlockPropertyDoorHinge; getHinge
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c ()I getCloseSound
	d ()I getOpenSound
	f (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	h (Lnet/minecraft/server/IBlockData;)Z isOpen
	l (Lnet/minecraft/server/IBlockData;)Z isWoodenDoor
	setDoor (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Z)V setOpen
net/minecraft/server/CommandDeop net/minecraft/server/commands/DeOpCommands
	a ERROR_NOT_OP
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I deopPlayers
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdCrossing net/minecraft/world/level/levelgen/structure/StrongholdPieces$FiveCrossing
	a leftLow
	b leftHigh
	c rightLow
	e rightHigh
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdCrossing; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
in$b net/minecraft/data/models/blockstates/MultiPartGenerator$Entry
	a variants
	a ()Lcom/google/gson/JsonElement; get
	a (Lcom/google/gson/JsonObject;)V decorate
	a (Lnet/minecraft/server/BlockStateList;)V validate
in$a net/minecraft/data/models/blockstates/MultiPartGenerator$ConditionalEntry
	a condition
	a (Lcom/google/gson/JsonObject;)V decorate
	a (Lnet/minecraft/server/BlockStateList;)V validate
net/minecraft/server/EntityArrow net/minecraft/world/entity/projectile/AbstractArrow
	ag lastState
	ak soundEvent
	al piercingIgnoreEntityIds
	am piercedAndKilledEntities
	c inGroundTime
	damage baseDamage
	despawnCounter life
	f ID_FLAGS
	fromPlayer pickup
	g PIERCE_LEVEL
	knockbackStrength knockback
	shake shakeTime
	A ()V resetPiercedEntities
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (DDDFFIZ)V lerpTo
	a (IZ)V setFlag
	a (Lnet/minecraft/server/Entity;)Z canHitEntity
	a (Lnet/minecraft/server/EntityLiving;)V doPostHurtEffects
	a (Lnet/minecraft/server/EntityLiving;F)V setEnchantmentEffectsFromEntity
	a (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/server/EnumMoveType;Lnet/minecraft/server/Vec3D;)V move
	a (Lnet/minecraft/server/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/server/MovingObjectPositionEntity;)V onHitEntity
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/SoundEffect;)V setSoundEvent
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/MovingObjectPositionEntity; findHitEntity
	aB ()Z isMovementNoisy
	a_ (Lnet/minecraft/server/EntityHuman;)V playerTouch
	b (Lnet/minecraft/server/Entity;)V setOwner
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bK ()Z isAttackable
	c (DDDFF)V shoot
	e ()V defineSynchedData
	g ()Z isInGround
	getDamage ()D getBaseDamage
	getItemStack ()Lnet/minecraft/server/ItemStack; getPickupItem
	getSoundHit ()Lnet/minecraft/server/SoundEffect; getHitGroundSoundEvent
	h ()V tickDespawn
	i ()Lnet/minecraft/server/SoundEffect; getDefaultHitGroundSoundEvent
	isCritical ()Z isCritArrow
	isShotFromCrossbow ()Z shotFromCrossbow
	j ()V tick
	k (DDD)V lerpMotion
	o ()I getKnockback
	o (Z)V setNoPhysics
	s ()F getWaterInertia
	setCritical (Z)V setCritArrow
	setDamage (D)V setBaseDamage
	setKnockbackStrength (I)V setKnockback
	t ()Z isNoPhysics
	u ()Z shouldFall
	z ()V startFalling
acr$1 net/minecraft/server/players/OldUsersConverter$1
	a val$server
	b val$userMap
	c val$bans
acr$3 net/minecraft/server/players/OldUsersConverter$3
	a val$server
	b val$whitelist
acr$2 net/minecraft/server/players/OldUsersConverter$2
	a val$server
	b val$opsList
bfa net/minecraft/world/entity/monster/piglin/package-info
dfq$a com/mojang/blaze3d/vertex/VertexMultiConsumer$Double
	a first
	b second
	a (DDD)Ldfn; vertex
	a (FF)Ldfn; uv
	a (FFFFFFFFFIIFFF)V vertex
	a (II)Ldfn; overlayCoords
	a (IIII)Ldfn; color
	b (FFF)Ldfn; normal
	b (II)Ldfn; uv2
	b (IIII)V defaultColor
	d ()V endVertex
	k ()V unsetDefaultColor
net/minecraft/server/WorldGenTrees net/minecraft/world/level/levelgen/feature/TreeFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Set;Ljava/util/Set;)Lnet/minecraft/server/VoxelShapeDiscrete; updateLeaves
	a (Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTree;)V lambda$place$7
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Z place
	a (Lnet/minecraft/server/IBlockData;)Z lambda$isReplaceablePlant$5
	a (Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V setBlock
	a (Lnet/minecraft/server/VirtualLevelReadable;ILnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)I getMaxFreeTreeHeight
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Z doPlace
	a (Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;IIILjava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lcni$b;)V lambda$doPlace$6
	a (Lzz;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V simulate
	a (Lzz;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)V simulate
	b (Lnet/minecraft/server/IBlockData;)Z lambda$isGrassOrDirtOrFarmland$4
	b (Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V setBlockKnownShape
	c (Lnet/minecraft/server/IBlockData;)Z lambda$isAirOrLeaves$3
	c (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isFree
	d (Lnet/minecraft/server/IBlockData;)Z lambda$isBlockWater$2
	d (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isAirOrLeaves
	e (Lnet/minecraft/server/IBlockData;)Z lambda$isVine$1
	e (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z validTreePos
	f (Lnet/minecraft/server/IBlockData;)Z lambda$isFree$0
	f (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isVine
	g (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isBlockWater
	h (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isGrassOrDirtOrFarmland
	i (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isReplaceablePlant
net/minecraft/server/TileEntityFurnace net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity
	b dataAccess
	burnTime litTime
	c recipeType
	cookTime cookingProgress
	cookTimeTotal cookingTotalTime
	g SLOTS_FOR_UP
	h SLOTS_FOR_DOWN
	i SLOTS_FOR_SIDES
	n recipesUsed
	ticksForCurrentFuel litDuration
	Y_ ()V clearContent
	Z_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (Ljava/util/List;Lnet/minecraft/server/World;Lnet/minecraft/server/Vec3D;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;Lnet/minecraft/server/IRecipe;)V lambda$getRecipesToAwardAndPopExperience$1
	a (Ljava/util/Map;Lnet/minecraft/server/IMaterial;I)V add
	a (Ljava/util/Map;Lnet/minecraft/server/Tag;I)V add
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/IRecipe;)V setRecipeUsed
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/MinecraftKey;Ljava/lang/Integer;)V lambda$save$0
	a (Lnet/minecraft/server/TileEntityFurnace;)I access$000
	a (Lnet/minecraft/server/TileEntityFurnace;I)I access$002
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Vec3D;)Ljava/util/List; getRecipesToAwardAndPopExperience
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Vec3D;IF)V createExperience
	aj_ ()V tick
	ak_ ()Lnet/minecraft/server/IRecipe; getRecipeUsed
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/server/ItemStack;)Z canPlaceItem
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
	b (Lnet/minecraft/server/EntityHuman;)V awardUsedRecipes
	b (Lnet/minecraft/server/Item;)Z isNeverAFurnaceFuel
	b (Lnet/minecraft/server/TileEntityFurnace;)I access$100
	b (Lnet/minecraft/server/TileEntityFurnace;I)I access$102
	c ()Z isEmpty
	c (Lnet/minecraft/server/TileEntityFurnace;)I access$200
	c (Lnet/minecraft/server/TileEntityFurnace;I)I access$202
	d (Lnet/minecraft/server/EntityHuman;)V awardUsedRecipesAndPopExperience
	d (Lnet/minecraft/server/TileEntityFurnace;)I access$300
	d (Lnet/minecraft/server/TileEntityFurnace;I)I access$302
	f ()Ljava/util/Map; getFuel
	fuelTime (Lnet/minecraft/server/ItemStack;)I getBurnDuration
	getRecipeCookingTime ()I getTotalCookTime
	isBurning ()Z isLit
net/minecraft/server/BlockCarpet net/minecraft/world/level/block/WoolCarpetBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c ()Lnet/minecraft/server/EnumColor; getColor
bfe net/minecraft/world/entity/npc/InventoryCarrier
	eS ()Lnet/minecraft/server/IInventory; getInventory
nu$4 net/minecraft/network/chat/FormattedText$4
	a val$parts
	a (Lnu$a;)Ljava/util/Optional; visit
	a (Lnu$b;Lnet/minecraft/server/ChatModifier;)Ljava/util/Optional; visit
daj$a net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder
	a count
	b limit
	a ()Ldaj$a; getThis
	a (I)Ldaj$a; setLimit
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Ldaf$a; getThis
acr$5 net/minecraft/server/players/OldUsersConverter$5
	a val$server
	b val$worldNewPlayerDirectory
	c val$unknownPlayerDirectory
	d val$worldPlayerDirectory
	e val$names
	a (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getFileNameForProfile
	a (Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V movePlayerFile
nu$3 net/minecraft/network/chat/FormattedText$3
	a val$text
	d val$style
	a (Lnu$a;)Ljava/util/Optional; visit
	a (Lnu$b;Lnet/minecraft/server/ChatModifier;)Ljava/util/Optional; visit
daj$b net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEnchantFunction; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEnchantFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
acr$4 net/minecraft/server/players/OldUsersConverter$4
	a val$server
	b val$profiles
nu$2 net/minecraft/network/chat/FormattedText$2
	a val$text
	a (Lnu$a;)Ljava/util/Optional; visit
	a (Lnu$b;Lnet/minecraft/server/ChatModifier;)Ljava/util/Optional; visit
net/minecraft/server/PacketPlayInCloseWindow net/minecraft/network/protocol/game/ServerboundContainerClosePacket
	id containerId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
nu$1 net/minecraft/network/chat/FormattedText$1
	a (Lnu$a;)Ljava/util/Optional; visit
	a (Lnu$b;Lnet/minecraft/server/ChatModifier;)Ljava/util/Optional; visit
bfo net/minecraft/world/entity/npc/package-info
net/minecraft/server/PathfinderGoalFloat net/minecraft/world/entity/ai/goal/FloatGoal
	a mob
	a ()Z canUse
	e ()V tick
dlj$a net/minecraft/client/gui/components/CommandSuggestions$SuggestionsList
	a this$0
	b rect
	c originalContents
	d suggestionList
	e offset
	f current
	g lastMouse
	h tabCycles
	i lastNarratedEntry
	a ()V useSuggestion
	a (D)Z mouseScrolled
	a (I)V cycle
	a (III)Z mouseClicked
	a (Ldfj;II)V render
	a (Ldlj$a;)Ljava/lang/String; access$100
	b ()V hide
	b (I)V select
	b (III)Z keyPressed
	c ()Ljava/lang/String; getNarrationMessage
bfp net/minecraft/world/entity/package-info
bfu net/minecraft/world/entity/player/PlayerModelPart
	a CAPE
	b JACKET
	c LEFT_SLEEVE
	d RIGHT_SLEEVE
	e LEFT_PANTS_LEG
	f RIGHT_PANTS_LEG
	g HAT
	h bit
	i mask
	j id
	k name
	l $VALUES
	a ()I getMask
	b ()I getBit
	c ()Ljava/lang/String; getId
	d ()Lnet/minecraft/server/IChatBaseComponent; getName
net/minecraft/server/ContainerBrewingStand net/minecraft/world/inventory/BrewingStandMenu
	d brewingStandData
	e ingredientSlot
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()I getFuel
	f ()I getBrewingTicks
bfw net/minecraft/world/entity/player/package-info
net/minecraft/server/WorldGenDecoratorCount net/minecraft/world/level/levelgen/placement/CountDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; lambda$place$0
net/minecraft/server/WorldGenDecoratorIceburg net/minecraft/world/level/levelgen/placement/IcebergPlacementDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
aum$a$1 net/minecraft/world/entity/ai/behavior/WeightedList$WeightedEntry$1
	a val$elementCodec
	a (Laum$a;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/Object;)Laum$a; lambda$decode$0
	a (Lcom/mojang/serialization/DynamicOps;Laum$a;)Lcom/mojang/datafixers/util/Pair; lambda$decode$1
net/minecraft/server/PathfinderGoalHurtByTarget net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal
	a HURT_BY_TARGETING
	b alertSameType
	c timestamp
	d toIgnoreDamage
	i toIgnoreAlert
	a ()Z canUse
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V alertOther
	a ([Ljava/lang/Class;)Lnet/minecraft/server/PathfinderGoalHurtByTarget; setAlertOthers
	c ()V start
	g ()V alertOthers
net/minecraft/server/PathfinderGoalFollowOwner net/minecraft/world/entity/ai/goal/FollowOwnerGoal
	a tamable
	b owner
	c level
	d speedModifier
	e navigation
	f timeToRecalcPath
	g stopDistance
	h startDistance
	i oldWaterCost
	j canFly
	a ()Z canUse
	a (II)I randomIntInclusive
	a (III)Z maybeTeleportTo
	a (Lnet/minecraft/server/BlockPosition;)Z canTeleportTo
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()V teleportToOwner
aod$a net/minecraft/util/thread/StrictQueue$FixedPriorityQueue
	a queueList
	a ()Ljava/lang/Object; pop
	a (I)Ljava/util/concurrent/ConcurrentLinkedQueue; lambda$new$0
	a (Laod$b;)Z push
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
	c ()Ljava/lang/Runnable; pop
czq$a net/minecraft/world/level/storage/loot/entries/LootTableReference$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorLootTable; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorLootTable;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
dwj$1 net/minecraft/client/multiplayer/ClientChunkCache$1
aod$b net/minecraft/util/thread/StrictQueue$IntRunnable
	a priority
	b task
	a ()I getPriority
aod$c net/minecraft/util/thread/StrictQueue$QueueStrictQueue
	a queue
	a ()Ljava/lang/Object; pop
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceEntry net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentEntryRoom
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
net/minecraft/server/BehaviorWake net/minecraft/world/entity/ai/behavior/WakeUp
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
mr$1 net/minecraft/nbt/ShortTag$1
	a ()Ljava/lang/String; getName
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagShort; load
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; load
	c ()Z isValue
bgg net/minecraft/world/entity/projectile/ItemSupplier
	g ()Lnet/minecraft/server/ItemStack; getItem
net/minecraft/server/SensorDummy net/minecraft/world/entity/ai/sensing/DummySensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
eic$1 net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer$1
	a $SwitchMap$net$minecraft$world$entity$EquipmentSlot
dkg$c net/minecraft/client/StringSplitter$LineComponent
	a contents
	d style
	a (Ldkg$c;)Ljava/lang/String; access$100
	a (Lnu$a;)Ljava/util/Optional; visit
	a (Lnu$b;Lnet/minecraft/server/ChatModifier;)Ljava/util/Optional; visit
	b (Ldkg$c;)Lnet/minecraft/server/ChatModifier; access$200
net/minecraft/server/CommandBlockListenerAbstract net/minecraft/world/level/BaseCommandBlock
	b TIME_FORMAT
	c DEFAULT_NAME
	customName name
	R_ ()Z shouldInformAdmins
	a ()Z acceptsSuccess
	a (I)V setSuccessCount
	a (Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$performCommand$0
	a (Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/EnumInteractionResult; usedBy
	a (Lnet/minecraft/server/IChatBaseComponent;Ljava/util/UUID;)V sendMessage
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/World;)Z performCommand
	a (Z)V setTrackOutput
	b ()Z acceptsFailure
	b (Lnet/minecraft/server/IChatBaseComponent;)V setLastOutput
	b (Lnet/minecraft/server/NBTTagCompound;)V load
	d ()Lnet/minecraft/server/WorldServer; getLevel
	e ()V onUpdated
	f ()Lnet/minecraft/server/Vec3D; getPosition
	g ()Ljava/lang/String; lambda$performCommand$1
	getWrapper ()Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
	i ()I getSuccessCount
	j ()Lnet/minecraft/server/IChatBaseComponent; getLastOutput
	m ()Z isTrackOutput
dkg$b net/minecraft/client/StringSplitter$LineBreakFinder
	a this$0
	b maxWidth
	c lineBreak
	d lineBreakStyle
	e hadNonZeroWidthChar
	f width
	g lastSpace
	h lastSpaceStyle
	i nextChar
	j offset
	a ()I getSplitPosition
	a (I)V addToOffset
	a (ILnet/minecraft/server/ChatModifier;)Z finishIteration
	b ()Lnet/minecraft/server/ChatModifier; getSplitStyle
	c ()Z lineBreakFound
net/minecraft/server/VillagePlace$Occupancy net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy
	d test
	e $VALUES
	a ()Ljava/util/function/Predicate; getTest
	a (Lnet/minecraft/server/VillagePlaceRecord;)Z lambda$static$0
dkg$a net/minecraft/client/StringSplitter$FlatComponents
	a parts
	b flatParts
	a ()Lnet/minecraft/server/IChatFormatted; getRemainder
	a (I)C charAt
	a (IILnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/IChatFormatted; splitAt
	a (Ldkg$a;)Ljava/util/List; access$300
	a (Ldkg$c;)Ljava/lang/String; lambda$new$0
dju$1 net/minecraft/client/KeyboardHandler$1
	a $SwitchMap$net$minecraft$world$phys$HitResult$Type
net/minecraft/server/DefinedStructureRuleTest net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest
	c CODEC
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
net/minecraft/server/BlockStateBoolean net/minecraft/world/level/block/state/properties/BooleanProperty
	a values
	a ()Ljava/util/Collection; getPossibleValues
	a (Ljava/lang/Boolean;)Ljava/lang/String; getName
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	b ()I generateHashCode
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	of (Ljava/lang/String;)Lnet/minecraft/server/BlockStateBoolean; create
net/minecraft/server/ShapelessRecipes net/minecraft/world/item/crafting/ShapelessRecipe
	key id
	a ()Lnet/minecraft/server/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/ShapelessRecipes;)Ljava/lang/String; access$000
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	b (Lnet/minecraft/server/ShapelessRecipes;)Lnet/minecraft/server/NonNullList; access$100
	c ()Lnet/minecraft/server/ItemStack; getResultItem
	c (Lnet/minecraft/server/ShapelessRecipes;)Lnet/minecraft/server/ItemStack; access$200
	d ()Ljava/lang/String; getGroup
	f ()Lnet/minecraft/server/MinecraftKey; getId
bgx net/minecraft/world/entity/projectile/package-info
net/minecraft/server/PortalTravelAgent net/minecraft/world/level/portal/PortalForcer
	world level
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/EnumDirection;I)Z canHostFrame
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceRecord;)D lambda$findPortalAround$1
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)Z lambda$null$4
	a (Lnet/minecraft/server/VillagePlaceRecord;)Lnet/minecraft/server/BlockUtil$Rectangle; lambda$findPortalAround$5
	a (Lnet/minecraft/server/VillagePlaceType;)Z lambda$findPortalAround$0
	b (Lnet/minecraft/server/VillagePlaceRecord;)Z lambda$findPortalAround$3
	c (Lnet/minecraft/server/VillagePlaceRecord;)I lambda$findPortalAround$2
	findPortal (Lnet/minecraft/server/BlockPosition;Z)Ljava/util/Optional; findPortalAround
bhb net/minecraft/world/entity/raid/package-info
net/minecraft/server/DataConverterFlattenSpawnEgg net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix
	a MAP
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Ljava/util/HashMap;)V lambda$static$0
net/minecraft/server/AreaTransformerOffset1 net/minecraft/world/level/newbiome/layer/traits/DimensionOffset1Transformer
	a (I)I getParentX
	b (I)I getParentY
bhh net/minecraft/world/entity/schedule/package-info
net/minecraft/server/Material net/minecraft/world/level/material/Material
	BANNER BARRIER
	CLOTH WOOL
	DRAGON_EGG EGG
	EARTH DIRT
	HEAVY HEAVY_METAL
	ORE METAL
	ORIENTABLE DECORATION
	PACKED_ICE TOP_SNOW
	PUMPKIN VEGETABLE
	S color
	SHATTERABLE GLASS
	SNOW_BLOCK SNOW
	SNOW_LAYER ICE_SOLID
	STRUCTURE_VOID STRUCTURAL_AIR
	T pushReaction
	TNT EXPLOSIVE
	U blocksMotion
	W liquid
	WOOL CLOTH_DECORATION
	X solidBlocking
	Y replaceable
	Z solid
	canBurn flammable
	h REPLACEABLE_FIREPROOF_PLANT
	f ()Z isSolidBlocking
	h ()Lnet/minecraft/server/MaterialMapColor; getColor
	isBuildable ()Z isSolid
	isBurnable ()Z isFlammable
	isSolid ()Z blocksMotion
net/minecraft/server/IContainerProperties net/minecraft/world/inventory/ContainerData
	a ()I getCount
	getProperty (I)I get
	setProperty (II)V set
net/minecraft/server/DataConverterJukeBox net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix
	a ()Ljava/lang/IllegalStateException; lambda$fix$0
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
bhu net/minecraft/world/food/FoodConstants
bht net/minecraft/world/entity/vehicle/package-info
nd$1 net/minecraft/network/Connection$1
	a val$connection
cd$a net/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance
	a block
	b state
	c location
	d item
	a (Lnet/minecraft/server/Block;)Lcd$a; placedBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ItemStack;)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
bhy net/minecraft/world/food/package-info
net/minecraft/server/PacketPlayInBeacon net/minecraft/network/protocol/game/ServerboundSetBeaconPacket
	a primary
	b secondary
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getPrimary
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getSecondary
nu$b net/minecraft/network/chat/FormattedText$StyledContentConsumer
net/minecraft/server/TileEntityBell net/minecraft/world/level/block/entity/BellBlockEntity
	a ticks
	b shaking
	c clickDirection
	g lastRingTimestamp
	h nearbyEntities
	i resonating
	j resonationTicks
	a (Lnet/minecraft/server/BlockPosition;ILorg/apache/commons/lang3/mutable/MutableInt;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)V lambda$showBellParticles$1
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z lambda$showBellParticles$0
	a (Lnet/minecraft/server/EntityLiving;)Z isRaiderWithinRange
	a (Lnet/minecraft/server/EnumDirection;)V onHit
	a (Lnet/minecraft/server/World;)V makeRaidersGlow
	a_ (II)Z triggerEvent
	aj_ ()V tick
	b (Lnet/minecraft/server/EntityLiving;)V glow
	b (Lnet/minecraft/server/World;)V showBellParticles
	d ()V playResonateSound
	f ()V updateEntities
	h ()Z areRaidersNearby
nu$a net/minecraft/network/chat/FormattedText$ContentConsumer
nd$2 net/minecraft/network/Connection$2
	a val$connection
net/minecraft/server/CommandSummon net/minecraft/server/commands/SummonCommand
	a ERROR_FAILED
	b ERROR_DUPLICATE_UUID
	c INVALID_POSITION
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/NBTTagCompound;Z)I spawnEntity
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Entity; lambda$spawnEntity$4
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
aca$a net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier
	a (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; wait
net/minecraft/server/LootItemFunctionLimitCount net/minecraft/world/level/storage/loot/functions/LimitCount
	a limiter
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootIntegerLimit;)Ldaf$a; limitCount
	a (Lnet/minecraft/server/LootIntegerLimit;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$limitCount$0
	a (Lnet/minecraft/server/LootItemFunctionLimitCount;)Lnet/minecraft/server/LootIntegerLimit; access$000
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
dkg$1 net/minecraft/client/StringSplitter$1
	a val$output
	b this$0
	c collector
net/minecraft/server/PacketPlayOutSpawnPosition net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket
	b angle
	position pos
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()F getAngle
net/minecraft/server/ContainerBeacon net/minecraft/world/inventory/BeaconMenu
	containerAccess access
	containerProperties beaconData
	d paymentSlot
	a (II)V setData
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	c (II)V updateEffects
	e ()I getLevels
	f ()Lnet/minecraft/server/MobEffectList; getPrimaryEffect
	g ()Lnet/minecraft/server/MobEffectList; getSecondaryEffect
	h ()Z hasPayment
net/minecraft/server/CriterionTriggerFilledBucket net/minecraft/advancements/critereon/FilledBucketTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lbi$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;)V trigger
	a (Lnet/minecraft/server/ItemStack;Lbi$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/PathfinderGoalRandomStrollLand net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal
	h probability
	g ()Lnet/minecraft/server/Vec3D; getPosition
net/minecraft/server/ChunkRegionLoader net/minecraft/world/level/chunk/storage/ChunkSerializer
	a LOGGER
	a (ILnet/minecraft/server/ChunkSection;)Z lambda$write$3
	a (Lnet/minecraft/server/Block;)Z lambda$read$0
	a (Lnet/minecraft/server/Chunk;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Entity; lambda$postLoadChunk$4
	a (Lnet/minecraft/server/ChunkCoordIntPair;Ljava/lang/String;J)Z lambda$unpackStructureReferences$5
	a (Lnet/minecraft/server/ChunkCoordIntPair;Ljava/util/Map;Ljava/util/Map;)Lnet/minecraft/server/NBTTagCompound; packStructureData
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/NBTTagCompound;)Ljava/util/Map; unpackStructureReferences
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/NBTTagCompound;J)Ljava/util/Map; unpackStructureStart
	a (Lnet/minecraft/server/FluidType;)Z lambda$read$1
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/ChunkStatus$Type; getChunkTypeFromTag
	a ([Lit/unimi/dsi/fastutil/shorts/ShortList;)Lnet/minecraft/server/NBTTagList; packOffsets
	b (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/Chunk;)V lambda$read$2
	loadChunk (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/VillagePlace;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/ProtoChunk; read
	loadEntities (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/Chunk;)V postLoadChunk
	saveChunk (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/IChunkAccess;)Lnet/minecraft/server/NBTTagCompound; write
net/minecraft/server/EntityShulkerBullet net/minecraft/world/entity/projectile/ShulkerBullet
	ag targetId
	d flightSteps
	dir currentMoveDirection
	e targetDeltaX
	f targetDeltaY
	g targetDeltaZ
	target finalTarget
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/Entity;)Z canHitEntity
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)V selectNextMoveDirection
	a (Lnet/minecraft/server/EnumDirection;)V setMoveDirection
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/server/MovingObjectPositionEntity;)V onHitEntity
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aQ ()F getBrightness
	aS ()Z isPickable
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bp ()Z isOnFire
	cH ()V checkDespawn
	ct ()Lnet/minecraft/server/SoundCategory; getSoundSource
	e ()V defineSynchedData
	g ()Lnet/minecraft/server/EnumDirection; getMoveDirection
	j ()V tick
mr$a net/minecraft/nbt/ShortTag$Cache
	a cache
ba$a net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance
	a item
	b levels
	a (Lnet/minecraft/server/ItemStack;I)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	c ()Lba$a; enchantedItem
ma$1 net/minecraft/nbt/ByteArrayTag$1
	a ()Ljava/lang/String; getName
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagByteArray; load
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; load
net/minecraft/server/PathfinderGoalSit net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal
	entity mob
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
net/minecraft/server/CommandDebug net/minecraft/server/commands/DebugCommand
	a LOGGER
	b ERROR_NOT_RUNNING
	c ERROR_ALREADY_RUNNING
	d ZIP_FS_PROVIDER
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Ljava/nio/file/spi/FileSystemProvider;)Z lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)I start
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lnet/minecraft/server/CommandListenerWrapper;)I stop
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lnet/minecraft/server/CommandListenerWrapper;)I report
	d (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$1
dxm$1 net/minecraft/client/particle/FallingDustParticle$1
net/minecraft/server/LootValueConstant net/minecraft/world/level/storage/loot/ConstantIntValue
	d value
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (I)Lnet/minecraft/server/LootValueConstant; exactly
	a (Ljava/util/Random;)I getInt
	a (Lnet/minecraft/server/LootValueConstant;)I access$000
br$a net/minecraft/advancements/critereon/ItemUsedOnBlockTrigger$TriggerInstance
	a location
	b item
	a (Lbw$a;Lbq$a;)Lbr$a; itemUsedOnBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)Z matches
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
net/minecraft/server/PacketDecompressor net/minecraft/network/CompressionDecoder
	a inflater
	b threshold
	a ()I getThreshold
	a (I)V setThreshold
ckm$a net/minecraft/world/level/levelgen/feature/RuinedPortalFeature$FeatureStart
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureRuinedPortalConfiguration;)V generatePieces
bjt net/minecraft/world/inventory/package-info
apx$a net/minecraft/world/entity/Entity$MoveFunction
net/minecraft/server/CommandClear net/minecraft/server/commands/ClearInventoryCommands
	a ERROR_SINGLE
	b ERROR_MULTIPLE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$2
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Ljava/util/function/Predicate;I)I clearInventory
	a (Lnet/minecraft/server/ItemStack;)Z lambda$null$5
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	b (Lnet/minecraft/server/ItemStack;)Z lambda$null$3
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
net/minecraft/server/OpList net/minecraft/server/players/ServerOpList
	a ()[Ljava/lang/String; getUserList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/JsonListEntry; createEntry
	a (Lcom/mojang/authlib/GameProfile;)I getOpLevel
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; find
	b (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	c (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
net/minecraft/server/BehaviorAttackTargetForget net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid
	b stopAttackingWhen
	a (Lnet/minecraft/server/EntityInsentient;)Z isCurrentTargetInDifferentLevel
	a (Lnet/minecraft/server/EntityLiving;)Z isTiredOfTryingToReachTarget
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/EntityLiving; getAttackTarget
	b (Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
	c (Lnet/minecraft/server/EntityInsentient;)Z isCurrentTargetDeadOrRemoved
	d (Lnet/minecraft/server/EntityInsentient;)V clearAttackTarget
net/minecraft/server/EntityAnimal net/minecraft/world/entity/animal/Animal
	breedCause loveCause
	loveTicks inLove
	D ()I getAmbientSoundInterval
	N ()V customServerAiStep
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)V usePlayerItem
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAnimal;)V spawnChildFromBreeding
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkAnimalSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	ba ()D getMyRidingOffset
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	eP ()Z canFallInLove
	eQ ()I getInLoveTime
	g (Lnet/minecraft/server/EntityHuman;)V setInLove
	getBreedCause ()Lnet/minecraft/server/EntityPlayer; getLoveCause
	getExpValue (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	h (D)Z removeWhenFarAway
	k ()V aiStep
	k (Lnet/minecraft/server/ItemStack;)Z isFood
	mate (Lnet/minecraft/server/EntityAnimal;)Z canMate
	setLoveTicks (I)V setInLoveTime
net/minecraft/server/PacketDecoder net/minecraft/network/PacketDecoder
	a LOGGER
	b MARKER
	c flow
ao$a net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance
	a parent
	b partner
	c child
	a (Lbg$a;)Lao$a; bredAnimals
	a (Lnet/minecraft/server/CriterionConditionEntity;Lnet/minecraft/server/CriterionConditionEntity;Lnet/minecraft/server/CriterionConditionEntity;)Lao$a; bredAnimals
	a (Lnet/minecraft/server/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/LootTableInfo;)Z matches
	c ()Lao$a; bredAnimals
czq$1 net/minecraft/world/level/storage/loot/entries/LootTableReference$1
net/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection
	c CODEC
	d BY_NAME
	e name
	f processors
	g $VALUES
	a ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching; byName
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching; lambda$static$0
	b ()Ljava/lang/String; getName
	c ()Lcom/google/common/collect/ImmutableList; getProcessors
net/minecraft/server/ItemActionContext net/minecraft/world/item/context/UseOnContext
	a player
	b hand
	c hitResult
	d level
	e itemStack
	f ()Lnet/minecraft/server/EnumDirection; getHorizontalDirection
	getClickPosition ()Lnet/minecraft/server/BlockPosition; getClickedPos
	getEntity ()Lnet/minecraft/server/EntityHuman; getPlayer
	getItemStack ()Lnet/minecraft/server/ItemStack; getItemInHand
	getPos ()Lnet/minecraft/server/Vec3D; getClickLocation
	getWorld ()Lnet/minecraft/server/World; getLevel
	h ()F getRotation
	i ()Lnet/minecraft/server/MovingObjectPositionBlock; getHitResult
	isSneaking ()Z isSecondaryUseActive
	l ()Z isInside
net/minecraft/server/Behaviors net/minecraft/world/entity/ai/behavior/VillagerGoalPackages
	a ()Lcom/mojang/datafixers/util/Pair; getFullLookBehavior
	a (F)Lcom/google/common/collect/ImmutableList; getPlayPackage
	a (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getCorePackage
	b ()Lcom/mojang/datafixers/util/Pair; getMinimalLookBehavior
	b (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getWorkPackage
	c (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getRestPackage
	d (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getMeetPackage
	e (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getIdlePackage
	f (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getPanicPackage
	g (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getPreRaidPackage
	h (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getRaidPackage
	i (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getHidePackage
dlj$1 net/minecraft/client/gui/components/CommandSuggestions$1
net/minecraft/server/WorldGenFeatureEmpty net/minecraft/world/level/levelgen/feature/NoOpFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/RecipeSuspiciousStew net/minecraft/world/item/crafting/SuspiciousStewRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	ag_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
net/minecraft/server/LootSelectorLootTable net/minecraft/world/level/storage/loot/entries/LootTableReference
	g name
	a ()Lnet/minecraft/server/LootEntryType; getType
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/LootSelectorLootTable;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lnet/minecraft/server/MinecraftKey;)Lczp$a; lootTableReference
	a (Lnet/minecraft/server/MinecraftKey;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; lambda$lootTableReference$0
net/minecraft/server/HoglinAI net/minecraft/world/entity/monster/hoglin/HoglinAi
	a RETREAT_DURATION
	b ADULT_FOLLOW_RANGE
	a ()Lnet/minecraft/server/BehaviorGateSingle; createIdleMovementBehaviors
	a (Lnet/minecraft/server/BehaviorController;)Lnet/minecraft/server/BehaviorController; makeBrain
	a (Lnet/minecraft/server/EntityHoglin;)V updateActivity
	a (Lnet/minecraft/server/EntityHoglin;Lnet/minecraft/server/Activity;)Lnet/minecraft/server/SoundEffect; getSoundForActivity
	a (Lnet/minecraft/server/EntityHoglin;Lnet/minecraft/server/BlockPosition;)Z isPosNearNearestRepellent
	a (Lnet/minecraft/server/EntityHoglin;Lnet/minecraft/server/EntityLiving;)V onHitTarget
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityHoglin;)V lambda$broadcastAttackTarget$1
	b (Lnet/minecraft/server/BehaviorController;)V initCoreActivity
	b (Lnet/minecraft/server/EntityHoglin;)Ljava/util/Optional; getSoundForCurrentActivity
	b (Lnet/minecraft/server/EntityHoglin;Lnet/minecraft/server/Activity;)Lnet/minecraft/server/SoundEffect; lambda$getSoundForCurrentActivity$2
	b (Lnet/minecraft/server/EntityHoglin;Lnet/minecraft/server/EntityLiving;)V wasHurtBy
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityHoglin;)V lambda$broadcastRetreat$0
	c (Lnet/minecraft/server/BehaviorController;)V initIdleActivity
	c (Lnet/minecraft/server/EntityHoglin;)Z isPacified
	c (Lnet/minecraft/server/EntityHoglin;Lnet/minecraft/server/EntityLiving;)V broadcastRetreat
	d (Lnet/minecraft/server/BehaviorController;)V initFightActivity
	d (Lnet/minecraft/server/EntityHoglin;)Ljava/util/Optional; findNearestValidAttackTarget
	d (Lnet/minecraft/server/EntityHoglin;Lnet/minecraft/server/EntityLiving;)V retreatFromNearestTarget
	e (Lnet/minecraft/server/BehaviorController;)V initRetreatActivity
	e (Lnet/minecraft/server/EntityHoglin;)Z wantsToStopFleeing
	e (Lnet/minecraft/server/EntityHoglin;Lnet/minecraft/server/EntityLiving;)V setAvoidTarget
	f (Lnet/minecraft/server/EntityHoglin;)Z piglinsOutnumberHoglins
	f (Lnet/minecraft/server/EntityHoglin;Lnet/minecraft/server/EntityLiving;)V maybeRetaliate
	g (Lnet/minecraft/server/EntityHoglin;)Ljava/util/List; getVisibleAdultHoglins
	g (Lnet/minecraft/server/EntityHoglin;Lnet/minecraft/server/EntityLiving;)V setAttackTarget
	h (Lnet/minecraft/server/EntityHoglin;)Z isNearRepellent
	h (Lnet/minecraft/server/EntityHoglin;Lnet/minecraft/server/EntityLiving;)V broadcastAttackTarget
	i (Lnet/minecraft/server/EntityHoglin;)Z isBreeding
	i (Lnet/minecraft/server/EntityHoglin;Lnet/minecraft/server/EntityLiving;)V setAttackTargetIfCloserThanCurrent
net/minecraft/server/WorldGenFeatureDefinedStructureJigsawPlacement net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement
	a LOGGER
	a ()Lorg/apache/logging/log4j/Logger; access$000
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/WorldGenFeaturePillagerOutpostPoolPiece;ILcob$a;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Ljava/util/List;Ljava/util/Random;)V addPieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/WorldGenFeatureVillageConfiguration;Lcob$a;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;ZZ)V addPieces
fv$1 net/minecraft/core/AxisCycle$1
	a ()Lnet/minecraft/server/EnumAxisCycle; inverse
	a (DDDLnet/minecraft/server/EnumDirection$EnumAxis;)D cycle
	a (IIILnet/minecraft/server/EnumDirection$EnumAxis;)I cycle
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection$EnumAxis; cycle
net/minecraft/server/WorldGenDecoratorRoofedTree net/minecraft/world/level/levelgen/placement/DarkOakTreePlacementDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenDecoratorContext;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;I)Lnet/minecraft/server/BlockPosition; lambda$getPositions$0
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;)Lnet/minecraft/server/HeightMap$Type; type
	a (Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;)Lnet/minecraft/server/HeightMap$Type; type
fv$2 net/minecraft/core/AxisCycle$2
	a ()Lnet/minecraft/server/EnumAxisCycle; inverse
	a (DDDLnet/minecraft/server/EnumDirection$EnumAxis;)D cycle
	a (IIILnet/minecraft/server/EnumDirection$EnumAxis;)I cycle
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection$EnumAxis; cycle
fv$3 net/minecraft/core/AxisCycle$3
	a ()Lnet/minecraft/server/EnumAxisCycle; inverse
	a (DDDLnet/minecraft/server/EnumDirection$EnumAxis;)D cycle
	a (IIILnet/minecraft/server/EnumDirection$EnumAxis;)I cycle
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection$EnumAxis; cycle
dxm$a net/minecraft/client/particle/FallingDustParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleParamBlock;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/PacketPlayOutRespawn net/minecraft/network/protocol/game/ClientboundRespawnPacket
	a dimensionType
	b dimension
	c seed
	d playerGameType
	e previousPlayerGameType
	f isDebug
	g isFlat
	h keepAllPlayerData
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/DimensionManager; getDimensionType
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/ResourceKey; getDimension
	d ()J getSeed
	e ()Lnet/minecraft/server/EnumGamemode; getPlayerGameType
	f ()Lnet/minecraft/server/EnumGamemode; getPreviousPlayerGameType
	g ()Z isDebug
	h ()Z isFlat
	i ()Z shouldKeepAllPlayerData
	j ()Lnet/minecraft/server/DimensionManager; lambda$write$0
daj$1 net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$1
dmm$a net/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds
	a TUTORIAL_HINT
	b NARRATOR_TOGGLE
	c WORLD_BACKUP
	d WORLD_GEN_SETTINGS_TRANSFER
	e PACK_LOAD_FAILURE
	f WORLD_ACCESS_FAILURE
	g PACK_COPY_FAILURE
	h $VALUES
net/minecraft/server/BehaviorRememberHuntedHoglin net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled
	a (Lnet/minecraft/server/EntityPiglin;)Z isAttackTargetDeadHoglin
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityPiglin;J)V start
net/minecraft/server/DefinedStructureProcessor net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
net/minecraft/server/WorldGenFeatureKelp net/minecraft/world/level/levelgen/feature/KelpFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/SessionLock net/minecraft/util/DirectoryLock
	a lockFile
	b lock
	c DUMMY
	a ()Z isValid
	a (Ljava/nio/file/Path;)Lnet/minecraft/server/SessionLock; create
	b (Ljava/nio/file/Path;)Z isLocked
net/minecraft/server/IRecipe net/minecraft/world/item/crafting/Recipe
	a ()Lnet/minecraft/server/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	b (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/NonNullList; getRemainingItems
	d ()Ljava/lang/String; getGroup
	g ()Lnet/minecraft/server/Recipes; getType
	getKey ()Lnet/minecraft/server/MinecraftKey; getId
	getRecipeSerializer ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	getResult ()Lnet/minecraft/server/ItemStack; getResultItem
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
	isComplex ()Z isSpecial
net/minecraft/server/ChatMessage net/minecraft/network/chat/TranslatableComponent
	d NO_ARGS
	e TEXT_PERCENT
	f TEXT_NULL
	i decomposedWith
	j decomposedParts
	k FORMAT_PATTERN
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatMutableComponent; resolve
	b (I)Lnet/minecraft/server/IChatFormatted; getArgument
	b (Lnu$a;)Ljava/util/Optional; visitSelf
	b (Lnu$b;Lnet/minecraft/server/ChatModifier;)Ljava/util/Optional; visitSelf
	d ()Lnet/minecraft/server/ChatBaseComponent; plainCopy
	d (Ljava/lang/String;)V decomposeTemplate
	g ()Lnet/minecraft/server/IChatMutableComponent; plainCopy
	h ()Lnet/minecraft/server/ChatMessage; plainCopy
	k ()V decompose
net/minecraft/server/OperatorBoolean net/minecraft/world/phys/shapes/BooleanOp
	a (ZZ)Z lambda$static$15
	b (ZZ)Z lambda$static$14
	c (ZZ)Z lambda$static$13
	d (ZZ)Z lambda$static$12
	e (ZZ)Z lambda$static$11
	f (ZZ)Z lambda$static$10
	g (ZZ)Z lambda$static$9
	h (ZZ)Z lambda$static$8
	i (ZZ)Z lambda$static$7
	j (ZZ)Z lambda$static$6
	k (ZZ)Z lambda$static$5
	l (ZZ)Z lambda$static$4
	m (ZZ)Z lambda$static$3
	n (ZZ)Z lambda$static$2
	o (ZZ)Z lambda$static$1
	p (ZZ)Z lambda$static$0
net/minecraft/server/BehaviorGate$Order net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy
	c consumer
	d $VALUES
	a (Lnet/minecraft/server/WeightedList;)V apply
	b (Lnet/minecraft/server/WeightedList;)V lambda$static$0
fe$b net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option
	a modifier
	b predicate
	c description
net/minecraft/server/ArgumentMobEffect net/minecraft/commands/arguments/MobEffectArgument
	a ERROR_UNKNOWN_EFFECT
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentMobEffect; effect
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/MobEffectList; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/MobEffectList; getEffect
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$parse$1
fe$a net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier
arm$a net/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry
	a random
	b previousAttemptTimestamp
	c nextScheduledAttemptTimestamp
	d currentDelay
	a (J)V markAttempt
	b (J)Z isStillValid
	c (J)Z shouldRetry
net/minecraft/server/EntityVillagerAbstract net/minecraft/world/entity/npc/AbstractVillager
	bp DATA_UNHAPPY_COUNTER
	trades offers
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/MerchantRecipe;)V notifyTrade
	a (Lnet/minecraft/server/MerchantRecipeList;)V overrideOffers
	a (Lnet/minecraft/server/MerchantRecipeList;[Lnet/minecraft/server/VillagerTrades$IMerchantRecipeOption;I)V addOffersFromItemListings
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/ParticleParam;)V addParticlesAroundSelf
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/MerchantRecipe;)V rewardTradeXp
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/Entity; changeDimension
	e ()V defineSynchedData
	eK ()I getUnhappyCounter
	eL ()I getVillagerXp
	eM ()Lnet/minecraft/server/EntityHuman; getTradingPlayer
	eN ()Z isTrading
	eO ()Lnet/minecraft/server/MerchantRecipeList; getOffers
	eP ()Z showProgressBar
	eQ ()Lnet/minecraft/server/SoundEffect; getNotifyTradeSound
	eR ()V playCelebrateSound
	eS ()Lnet/minecraft/server/IInventory; getInventory
	eT ()V stopTrading
	eV ()Lnet/minecraft/server/World; getLevel
	eW ()V updateTrades
	f (Lnet/minecraft/server/EntityHuman;)V setTradingPlayer
	k (Lnet/minecraft/server/ItemStack;)V notifyTradeUpdated
	o (F)Lnet/minecraft/server/Vec3D; getRopeHoldPosition
	s (I)V setUnhappyCounter
	t (I)V overrideXp
	t (Z)Lnet/minecraft/server/SoundEffect; getTradeUpdatedSound
net/minecraft/server/PathfinderTurtle net/minecraft/world/level/pathfinder/TurtleNodeEvaluator
	k oldWalkableCost
	l oldWaterBorderCost
	a ()V done
	a (DDD)Lnet/minecraft/server/PathDestination; getGoal
	a (IIIID)Lnet/minecraft/server/PathPoint; getAcceptedNode
	a (Lnet/minecraft/server/ChunkCache;Lnet/minecraft/server/EntityInsentient;)V prepare
	a (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;ZZLnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathType;)Lnet/minecraft/server/PathType; evaluateBlockPathType
	a ([Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)I getNeighbors
	b ()Lnet/minecraft/server/PathPoint; getStart
	b (Lnet/minecraft/server/BlockPosition;)D inWaterDependentPosHeight
net/minecraft/server/DataConverterTrappedChest net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix
	a LOGGER
	a (IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$5
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$4
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
net/minecraft/server/WorldGenFeatureTreeBeehive net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator
	a CODEC
	b probability
	a ()Lnet/minecraft/server/WorldGenFeatureTrees; type
	a (ILnet/minecraft/server/BlockPosition;)Z lambda$place$1
	a (Lnet/minecraft/server/GeneratorAccessSeed;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V place
	a (Lnet/minecraft/server/WorldGenFeatureTreeBeehive;)Ljava/lang/Float; lambda$static$0
bni net/minecraft/world/item/TooltipFlag
	a ()Z isAdvanced
net/minecraft/server/GenLayerMushroomShore net/minecraft/world/level/newbiome/layer/ShoreLayer
	b SNOWY
	c JUNGLES
	d $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
	c (I)Z isJungleCompatible
	d (I)Z isMesa
net/minecraft/server/CriterionSlideDownBlock net/minecraft/advancements/critereon/SlideDownBlockTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/Block; deserializeBlock
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lcl$a; createInstance
	a (Lnet/minecraft/server/Block;Ljava/lang/String;)V lambda$createInstance$0
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/IBlockData;)V trigger
	a (Lnet/minecraft/server/IBlockData;Lcl$a;)Z lambda$trigger$2
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$deserializeBlock$1
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/WorldGenFeaturePillagerOutpostPoolPiece net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece
	a element
	b position
	c rotation
	d LOGGER
	e groundLevelDelta
	f junctions
	g structureManager
	a (III)V move
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/BlockPosition;Z)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTBase;)V lambda$new$0
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTBase;)V lambda$addAdditionalSaveData$1
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructureJigsawJunction;)V addJunction
	ap_ ()Lnet/minecraft/server/EnumBlockRotation; getRotation
	b ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure; getElement
	c ()Lnet/minecraft/server/BlockPosition; getPosition
	d ()I getGroundLevelDelta
	e ()Ljava/util/List; getJunctions
net/minecraft/server/BlockPropertyWallHeight net/minecraft/world/level/block/state/properties/WallSide
	d name
	e $VALUES
	a ()Ljava/lang/String; getSerializedName
bow$a net/minecraft/world/item/crafting/SimpleCookingSerializer$CookieBaker
net/minecraft/server/EntityEndermite net/minecraft/world/entity/monster/Endermite
	b life
	c playerSpawned
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aB ()Z isMovementNoisy
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkEndermiteSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	ba ()D getMyRidingOffset
	dB ()Lnet/minecraft/server/EnumMonsterType; getMobType
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	j ()V tick
	k ()V aiStep
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	n (F)V setYBodyRot
	o ()V registerGoals
dzs$a net/minecraft/client/renderer/GpuWarnlistManager$Preparations
	a rendererPatterns
	b versionPatterns
	c vendorPatterns
	a ()Lcom/google/common/collect/ImmutableMap; apply
	a (Ldzs$a;)Lcom/google/common/collect/ImmutableMap; access$100
	a (Ljava/util/List;Ljava/lang/String;)Ljava/lang/String; matchAny
net/minecraft/server/GameTestHarnessInfo net/minecraft/gametest/framework/GameTestInfo
	a testFunction
	b structureBlockPos
	c level
	d listeners
	e timeoutTicks
	f sequences
	g runAtTickTimeMap
	h startTick
	i tickCount
	j started
	k timer
	l done
	m rotation
	n error
	a ()V startExecution
	a (JLjava/lang/Runnable;)V setRunAtTickTime
	a (Ljava/lang/Throwable;)V fail
	a (Lnet/minecraft/server/BlockPosition;)V setStructureBlockPos
	a (Lnet/minecraft/server/BlockPosition;I)V spawnStructure
	a (Lnet/minecraft/server/GameTestHarnessListener;)V addListener
	a (Lnet/minecraft/server/GameTestHarnessSequence;)V lambda$tick$1
	b ()V tick
	b (Lnet/minecraft/server/GameTestHarnessListener;)V lambda$spawnStructure$4
	b (Lnet/minecraft/server/GameTestHarnessSequence;)V lambda$tick$0
	c ()Ljava/lang/String; getTestName
	c (Lnet/minecraft/server/GameTestHarnessListener;)V lambda$fail$3
	d ()Lnet/minecraft/server/BlockPosition; getStructureBlockPos
	d (Lnet/minecraft/server/GameTestHarnessListener;)V lambda$succeed$2
	e ()Lnet/minecraft/server/BlockPosition; getStructureSize
	f ()Lnet/minecraft/server/AxisAlignedBB; getStructureBounds
	g ()Lnet/minecraft/server/WorldServer; getLevel
	h ()Z hasSucceeded
	i ()Z hasFailed
	j ()Z hasStarted
	k ()Z isDone
	l ()J getRunTime
	m ()V succeed
	n ()Ljava/lang/Throwable; getError
	o ()J getTick
	p ()Lnet/minecraft/server/GameTestHarnessSequence; createSequence
	q ()Z isRequired
	r ()Z isOptional
	s ()Ljava/lang/String; getStructureName
	t ()Lnet/minecraft/server/EnumBlockRotation; getRotation
	u ()Lnet/minecraft/server/GameTestHarnessTestFunction; getTestFunction
	v ()V startTest
	w ()Lnet/minecraft/server/TileEntityStructure; getStructureBlockEntity
	x ()V finish
fe$1 net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$1
dii$1 com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen$1
	a this$0
	a ()V lambda$run$0
bnu net/minecraft/world/item/alchemy/package-info
bny net/minecraft/world/item/context/package-info
ddb$a net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer
net/minecraft/server/CommandBanList net/minecraft/server/commands/BanListCommands
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I showList
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
net/minecraft/server/SensorNearestLivingEntities net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$doTick$1
	c (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$doTick$0
net/minecraft/server/PlayerChunk net/minecraft/server/level/ChunkHolder
	CHUNK_STATES FULL_CHUNK_STATUSES
	UNLOADED_CHUNK UNLOADED_LEVEL_CHUNK
	UNLOADED_CHUNK_ACCESS UNLOADED_CHUNK
	UNLOADED_CHUNK_ACCESS_FUTURE UNLOADED_CHUNK_FUTURE
	UNLOADED_CHUNK_FUTURE UNLOADED_LEVEL_CHUNK_FUTURE
	chunkSave chunkToSave
	dirtyBlocks changedBlocksPerSection
	entityTickingFuture entityTickingChunkFuture
	hasBeenLoaded wasAccessibleSinceLastSave
	location pos
	n queueLevel
	p hasChangedSections
	players playerProvider
	r blockChangedLightSectionFilter
	s skyChangedLightSectionFilter
	statusFutures futures
	tickingFuture tickingChunkFuture
	u onLevelChange
	x resendLight
	a ()Ljava/util/concurrent/CompletableFuture; getTickingChunkFuture
	a (I)V setTicketLevel
	a (Ljava/util/concurrent/CompletableFuture;)V updateChunkToSave
	a (Lnet/minecraft/server/BlockPosition;)V blockChanged
	a (Lnet/minecraft/server/Chunk;)V broadcastChanges
	a (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/PlayerChunkMap;)Ljava/util/concurrent/CompletableFuture; getOrScheduleFuture
	a (Lnet/minecraft/server/EnumSkyBlock;I)V sectionLightChanged
	a (Lnet/minecraft/server/IChunkAccess;)Lnet/minecraft/server/IChunkAccess; lambda$null$2
	a (Lnet/minecraft/server/IChunkAccess;Lcom/mojang/datafixers/util/Either;)Lnet/minecraft/server/IChunkAccess; lambda$updateChunkToSave$4
	a (Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/PlayerChunk$Failure;)Lnet/minecraft/server/IChunkAccess; lambda$null$3
	a (Lnet/minecraft/server/Packet;Lnet/minecraft/server/EntityPlayer;)V lambda$broadcast$1
	a (Lnet/minecraft/server/Packet;Z)V broadcast
	a (Lnet/minecraft/server/PlayerChunk;)Lnet/minecraft/server/ChunkCoordIntPair; access$000
	a (Lnet/minecraft/server/PlayerChunkMap;)V updateFutures
	a (Lnet/minecraft/server/PlayerChunkMap;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$updateFutures$5
	a (Lnet/minecraft/server/ProtoChunkExtension;)V replaceProtoChunk
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V broadcastBlockEntity
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V broadcastBlockEntityIfNeeded
	b ()Ljava/util/concurrent/CompletableFuture; getEntityTickingChunkFuture
	b (Lnet/minecraft/server/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; getFutureIfPresent
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V lambda$broadcastChanges$0
	c ()Ljava/util/concurrent/CompletableFuture; getFullChunkFuture
	d (I)V setQueueLevel
	e ()Lnet/minecraft/server/ChunkStatus; getLastAvailableStatus
	f ()Lnet/minecraft/server/IChunkAccess; getLastAvailable
	getChunk ()Lnet/minecraft/server/Chunk; getTickingChunk
	getChunkSave ()Ljava/util/concurrent/CompletableFuture; getChunkToSave
	getChunkState (I)Lnet/minecraft/server/PlayerChunk$State; getFullChunkStatus
	getChunkStatus (I)Lnet/minecraft/server/ChunkStatus; getStatus
	getStatusFutureUnchecked (Lnet/minecraft/server/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; getFutureIfPresentUnchecked
	h ()Lnet/minecraft/server/PlayerChunk$State; getFullStatus
	hasBeenLoaded ()Z wasAccessibleSinceLastSave
	i ()Lnet/minecraft/server/ChunkCoordIntPair; getPos
	k ()I getQueueLevel
	m ()V refreshAccessibility
net/minecraft/server/LootItemFunctionApplyBonus net/minecraft/world/level/storage/loot/functions/ApplyBonusCount
	a FORMULAS
	b enchantment
	d formula
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/Enchantment;)Ldaf$a; addOreBonusCount
	a (Lnet/minecraft/server/Enchantment;FI)Ldaf$a; addBonusBinomialDistributionCount
	a (Lnet/minecraft/server/Enchantment;I)Ldaf$a; addUniformBonusCount
	a (Lnet/minecraft/server/Enchantment;IF[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$addBonusBinomialDistributionCount$0
	a (Lnet/minecraft/server/Enchantment;I[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$addUniformBonusCount$3
	a (Lnet/minecraft/server/Enchantment;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$addUniformBonusCount$2
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionApplyBonus;)Lnet/minecraft/server/Enchantment; access$000
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
	b (Lnet/minecraft/server/Enchantment;)Ldaf$a; addUniformBonusCount
	b (Lnet/minecraft/server/Enchantment;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$addOreBonusCount$1
	b (Lnet/minecraft/server/LootItemFunctionApplyBonus;)Lczu$b; access$100
	c ()Ljava/util/Map; access$200
net/minecraft/server/PathfinderGoalOwnerHurtTarget net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal
	a tameAnimal
	b ownerLastHurt
	c timestamp
	a ()Z canUse
	c ()V start
net/minecraft/server/DataConverterBannerColour net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$null$3
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$4
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$0
net/minecraft/server/NoiseSlideSettings net/minecraft/world/level/levelgen/NoiseSlideSettings
	a CODEC
	b target
	c size
	d offset
	a ()I target
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	b ()I size
	c ()I offset
dyp$a net/minecraft/client/particle/SquidInkParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/ServerPing$ServerData$Serializer net/minecraft/network/protocol/status/ServerStatus$Version$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/ServerPing$ServerData; deserialize
	a (Lnet/minecraft/server/ServerPing$ServerData;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/BlockLongGrass net/minecraft/world/level/block/TallGrassBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	ah_ ()Lnet/minecraft/server/BlockBase$EnumRandomOffset; getOffsetType
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
net/minecraft/server/BehaviorStrollInside net/minecraft/world/entity/ai/behavior/InsideBrownianWalk
	b speedModifier
	a (Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/BlockPosition;)V lambda$start$3
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z lambda$start$0
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/BlockPosition;)Z lambda$start$2
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/BlockPosition;)Z lambda$start$1
net/minecraft/server/NoiseGeneratorOctaves net/minecraft/world/level/levelgen/synth/PerlinNoise
	a noiseLevels
	b amplitudes
	c lowestFreqValueFactor
	d lowestFreqInputFactor
	a (D)D wrap
	a (DDD)D getValue
	a (DDDD)D getSurfaceNoiseValue
	a (DDDDDZ)D getValue
	a (I)Lnet/minecraft/server/NoiseGeneratorPerlin; getOctaveNoise
	a (Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair; makeAmplitudes
	a (Lnet/minecraft/server/SeededRandom;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/server/NoiseGeneratorOctaves; create
	a (Lnet/minecraft/server/SeededRandom;I[D)Lnet/minecraft/server/NoiseGeneratorOctaves; create
aqj$1 net/minecraft/world/entity/LivingEntity$1
	a $SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	b $SwitchMap$net$minecraft$world$entity$EquipmentSlot
net/minecraft/server/WorldGenMineshaft net/minecraft/world/level/levelgen/feature/MineshaftFeature
	a ()Lckx$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldChunkManager;JLnet/minecraft/server/SeededRandom;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/WorldGenMineshaftConfiguration;)Z isFeatureChunk
net/minecraft/server/EntityPainting net/minecraft/world/entity/decoration/Painting
	art motive
	P ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (DDDFFIZ)V lerpTo
	a (Lnet/minecraft/server/Entity;)V dropItem
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (DDDFF)V moveTo
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	i ()I getWidth
	k ()I getHeight
	m ()V playPlacementSound
net/minecraft/server/SlotFurnaceFuel net/minecraft/world/inventory/FurnaceFuelSlot
	a menu
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	b (Lnet/minecraft/server/ItemStack;)I getMaxStackSize
	c_ (Lnet/minecraft/server/ItemStack;)Z isBucket
net/minecraft/server/ItemWorldMap net/minecraft/world/item/MapItem
	a (I)Ljava/lang/String; makeKey
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;)Lnet/minecraft/server/WorldMap; getSavedData
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;I)V scaleMap
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;IIIZZLnet/minecraft/server/ResourceKey;)Lnet/minecraft/server/WorldMap; createAndStoreSavedData
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbni;)V appendHoverText
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Packet; getUpdatePacket
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;Lnet/minecraft/server/WorldMap;)V update
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getCorrectStateForFluidBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;)V lockMap
	a ([Lnet/minecraft/server/BiomeBase;III)Z isLand
	applySepiaFilter (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ItemStack;)V renderBiomePreviewMap
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;)V onCraftedBy
	createFilledMapView (Lnet/minecraft/server/World;IIBZZ)Lnet/minecraft/server/ItemStack; create
	d (Lnet/minecraft/server/ItemStack;)I getMapId
	g (Lnet/minecraft/server/ItemStack;)I getColor
	getSavedMap (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;)Lnet/minecraft/server/WorldMap; getOrCreateSavedData
net/minecraft/server/GenLayerSmooth net/minecraft/world/level/newbiome/layer/SmoothLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/TagsInstance net/minecraft/tags/SerializationTags
	a instance
	a ()Lnet/minecraft/server/ITagRegistry; getInstance
	a (Laej$e;)Lnet/minecraft/server/Tag; lambda$static$3
	a (Lnet/minecraft/server/ITagRegistry;)V bind
	b (Laej$e;)Lnet/minecraft/server/Tag; lambda$static$2
	c (Laej$e;)Lnet/minecraft/server/Tag; lambda$static$1
	d (Laej$e;)Lnet/minecraft/server/Tag; lambda$static$0
bpf net/minecraft/world/item/crafting/package-info
net/minecraft/server/WorldGenFeatureHugeFungiConfiguration net/minecraft/world/level/levelgen/feature/HugeFungusConfiguration
	CRIMSON_FUNGUS HUGE_CRIMSON_FUNGI_PLANTED_CONFIG
	WARPED_FUNGUS HUGE_WARPED_FUNGI_PLANTED_CONFIG
	a CODEC
	c HUGE_CRIMSON_FUNGI_NOT_PLANTED_CONFIG
	e HUGE_WARPED_FUNGI_NOT_PLANTED_CONFIG
	f validBaseState
	g stemState
	h hatState
	i decorState
	j planted
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lnet/minecraft/server/WorldGenFeatureHugeFungiConfiguration;)Ljava/lang/Boolean; lambda$null$4
	b (Lnet/minecraft/server/WorldGenFeatureHugeFungiConfiguration;)Lnet/minecraft/server/IBlockData; lambda$null$3
	c (Lnet/minecraft/server/WorldGenFeatureHugeFungiConfiguration;)Lnet/minecraft/server/IBlockData; lambda$null$2
	d (Lnet/minecraft/server/WorldGenFeatureHugeFungiConfiguration;)Lnet/minecraft/server/IBlockData; lambda$null$1
	e (Lnet/minecraft/server/WorldGenFeatureHugeFungiConfiguration;)Lnet/minecraft/server/IBlockData; lambda$null$0
net/minecraft/server/BehaviorNop net/minecraft/world/entity/ai/behavior/DoNothing
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/StreamAccumulator net/minecraft/util/RewindableStream
	a cache
	b source
	a ()Ljava/util/stream/Stream; getStream
	a (Lnet/minecraft/server/StreamAccumulator;)Ljava/util/List; access$000
	b (Lnet/minecraft/server/StreamAccumulator;)Ljava/util/Spliterator; access$100
net/minecraft/server/CustomFunctionCallbackTimers net/minecraft/world/level/timers/TimerCallbacks
	a SERVER_CALLBACKS
	b LOGGER
	c idToSerializer
	d classToSerializer
	a (Ldca$a;)Lnet/minecraft/server/CustomFunctionCallbackTimers; register
	a (Ljava/lang/Class;)Ldca$a; getSerializer
	a (Lnet/minecraft/server/CustomFunctionCallbackTimer;)Lnet/minecraft/server/NBTTagCompound; serialize
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallbackTimer; deserialize
net/minecraft/server/CriterionConditionEntityFlags net/minecraft/advancements/critereon/EntityFlagsPredicate
	a ANY
	b isOnFire
	c isCrouching
	d isSprinting
	e isSwimming
	f isBaby
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionEntityFlags; fromJson
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; getOptionalBoolean
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V addOptionalBoolean
	a (Lnet/minecraft/server/Entity;)Z matches
net/minecraft/server/EntityArrow$PickupStatus net/minecraft/world/entity/projectile/AbstractArrow$Pickup
	d $VALUES
	a (I)Lnet/minecraft/server/EntityArrow$PickupStatus; byOrdinal
net/minecraft/server/EntityBlaze net/minecraft/world/entity/monster/Blaze
	b allowedHeightOffset
	c nextHeightOffsetChangeTick
	d DATA_FLAGS_ID
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	N ()V customServerAiStep
	a (Lnet/minecraft/server/EntityBlaze;Z)V access$000
	aQ ()F getBrightness
	b (FF)Z causeFallDamage
	bp ()Z isOnFire
	dN ()Z isSensitiveToWater
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e ()V defineSynchedData
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Z isCharged
	k ()V aiStep
	m ()Lnet/minecraft/server/AttributeProvider$Builder; createAttributes
	o ()V registerGoals
	t (Z)V setCharged
net/minecraft/server/BlockJigsaw net/minecraft/world/level/block/JigsawBlock
	a ORIENTATION
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;)Z canAttach
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/TileEntityJigsaw$JointType; lambda$canAttach$0
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	h (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumDirection; getFrontFacing
	l (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumDirection; getTopFacing
net/minecraft/server/ArgumentNBTBase net/minecraft/commands/arguments/NbtTagArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/ArgumentNBTBase; nbtTag
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/NBTBase; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/NBTBase; getNbtTag
net/minecraft/server/LootSerializer net/minecraft/world/level/storage/loot/Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
dyp$1 net/minecraft/client/particle/SquidInkParticle$1
net/minecraft/server/PathfinderGoalBeg net/minecraft/world/entity/ai/goal/BegGoal
	a wolf
	b player
	c level
	d lookDistance
	e lookTime
	f begTargeting
	a ()Z canUse
	a (Lnet/minecraft/server/EntityHuman;)Z playerHoldingInteresting
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/DataConverterSchemaV501 net/minecraft/util/datafix/schemas/V501
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/SensorAdult net/minecraft/world/entity/ai/sensing/AdultSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/EntityAgeable;)Z lambda$setNearestVisibleAdult$3
	a (Lnet/minecraft/server/EntityAgeable;Ljava/util/List;)V setNearestVisibleAdult
	a (Lnet/minecraft/server/EntityAgeable;Lnet/minecraft/server/EntityLiving;)Z lambda$setNearestVisibleAdult$1
	a (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityAgeable; lambda$setNearestVisibleAdult$2
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityAgeable;)V doTick
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	b (Lnet/minecraft/server/EntityAgeable;Ljava/util/List;)V lambda$doTick$0
net/minecraft/server/TagsEntity net/minecraft/tags/EntityTypeTags
	RADIERS RAIDERS
	a HELPER
	a ()Lnet/minecraft/server/Tags; getAllTags
	a (Ljava/lang/String;)Laej$e; bind
	b ()Ljava/util/List; getWrappers
net/minecraft/server/EntityFishingHook$HookState net/minecraft/world/entity/projectile/FishingHook$FishHookState
	d $VALUES
net/minecraft/server/BlockCactus net/minecraft/world/level/block/CactusBlock
	b COLLISION_SHAPE
	c OUTLINE_SHAPE
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
net/minecraft/server/BiomesSettingsDefault net/minecraft/data/worldgen/biome/VanillaBiomes
	a ()Lnet/minecraft/server/BiomeBase; jungleBiome
	a (F)I calculateSkyColor
	a (FF)Lnet/minecraft/server/BiomeBase; mushroomFieldsBiome
	a (FFFFIZZ)Lnet/minecraft/server/BiomeBase; beachBiome
	a (FFFIZ)Lnet/minecraft/server/BiomeBase; riverBiome
	a (FFFZ)Lnet/minecraft/server/BiomeBase; giantTreeTaiga
	a (FFFZZ)Lnet/minecraft/server/BiomeBase; savannaBiome
	a (FFFZZLbtd$a;)Lnet/minecraft/server/BiomeBase; baseSavannaBiome
	a (FFFZZZLbtd$a;)Lnet/minecraft/server/BiomeBase; baseJungleBiome
	a (FFII)Lnet/minecraft/server/BiomeBase; bambooJungleBiome
	a (FFIII)Lnet/minecraft/server/BiomeBase; jungleBiome
	a (FFLnet/minecraft/server/WorldGenSurfaceComposite;Z)Lnet/minecraft/server/BiomeBase; mountainBiome
	a (FFZ)Lnet/minecraft/server/BiomeBase; birchForestBiome
	a (FFZLbtd$a;)Lnet/minecraft/server/BiomeBase; baseForestBiome
	a (FFZZ)Lnet/minecraft/server/BiomeBase; tundraBiome
	a (FFZZZ)Lnet/minecraft/server/BiomeBase; desertBiome
	a (FFZZZZ)Lnet/minecraft/server/BiomeBase; taigaBiome
	a (Lbst$a;)Lnet/minecraft/server/BiomeBase; baseEndBiome
	a (Lbtd$a;IIZLbst$a;)Lnet/minecraft/server/BiomeBase; baseOceanBiome
	a (Lnet/minecraft/server/WorldGenSurfaceComposite;FFZZ)Lnet/minecraft/server/BiomeBase; baseBadlandsBiome
	a (Lnet/minecraft/server/WorldGenSurfaceComposite;ZZZ)Lbst$a; baseOceanGeneration
	a (Z)Lnet/minecraft/server/BiomeBase; plainsBiome
	b ()Lnet/minecraft/server/BiomeBase; jungleEdgeBiome
	b (FF)Lnet/minecraft/server/BiomeBase; woodedBadlandsPlateauBiome
	b (FFZ)Lnet/minecraft/server/BiomeBase; badlandsBiome
	b (Z)Lnet/minecraft/server/BiomeBase; coldOceanBiome
	c ()Lnet/minecraft/server/BiomeBase; modifiedJungleEdgeBiome
	c (FF)Lnet/minecraft/server/BiomeBase; forestBiome
	c (FFZ)Lnet/minecraft/server/BiomeBase; darkForestBiome
	c (Z)Lnet/minecraft/server/BiomeBase; oceanBiome
	d ()Lnet/minecraft/server/BiomeBase; modifiedJungleBiome
	d (FFZ)Lnet/minecraft/server/BiomeBase; swampBiome
	d (Z)Lnet/minecraft/server/BiomeBase; lukeWarmOceanBiome
	e ()Lnet/minecraft/server/BiomeBase; jungleHillsBiome
	e (Z)Lnet/minecraft/server/BiomeBase; frozenOceanBiome
	f ()Lnet/minecraft/server/BiomeBase; bambooJungleBiome
	g ()Lnet/minecraft/server/BiomeBase; bambooJungleHillsBiome
	h ()Lnet/minecraft/server/BiomeBase; endBarrensBiome
	i ()Lnet/minecraft/server/BiomeBase; theEndBiome
	j ()Lnet/minecraft/server/BiomeBase; endMidlandsBiome
	k ()Lnet/minecraft/server/BiomeBase; endHighlandsBiome
	l ()Lnet/minecraft/server/BiomeBase; smallEndIslandsBiome
	m ()Lnet/minecraft/server/BiomeBase; savanaPlateauBiome
	n ()Lnet/minecraft/server/BiomeBase; erodedBadlandsBiome
	o ()Lnet/minecraft/server/BiomeBase; warmOceanBiome
	p ()Lnet/minecraft/server/BiomeBase; deepWarmOceanBiome
	q ()Lnet/minecraft/server/BiomeBase; flowerForestBiome
	r ()Lnet/minecraft/server/BiomeBase; theVoidBiome
	s ()Lnet/minecraft/server/BiomeBase; netherWastesBiome
	t ()Lnet/minecraft/server/BiomeBase; soulSandValleyBiome
	u ()Lnet/minecraft/server/BiomeBase; basaltDeltasBiome
	v ()Lnet/minecraft/server/BiomeBase; crimsonForestBiome
	w ()Lnet/minecraft/server/BiomeBase; warpedForestBiome
	x ()Lbtd$a; savannaMobs
	y ()Lbtd$a; defaultSpawns
net/minecraft/server/BehaviorSwim net/minecraft/world/entity/ai/behavior/Swim
	b chance
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)Z canStillUse
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V tick
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
apx$1 net/minecraft/world/entity/Entity$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
net/minecraft/server/GenLayerJungle net/minecraft/world/level/newbiome/layer/RareBiomeLargeLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
caq$1 net/minecraft/world/level/block/SupportType$1
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isSupporting
bqp net/minecraft/world/item/enchantment/package-info
caq$2 net/minecraft/world/level/block/SupportType$2
	d CENTER_SUPPORT_WIDTH
	e CENTER_SUPPORT_SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isSupporting
caq$3 net/minecraft/world/level/block/SupportType$3
	d RIGID_SUPPORT_WIDTH
	e RIGID_SUPPORT_SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isSupporting
bqq net/minecraft/world/item/package-info
net/minecraft/server/TrunkPlacerStraight net/minecraft/world/level/levelgen/feature/trunkplacers/StraightTrunkPlacer
	a CODEC
	a ()Lnet/minecraft/server/TrunkPlacers; type
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;ILnet/minecraft/server/BlockPosition;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
bqu net/minecraft/world/item/trading/package-info
net/minecraft/server/BlockSprawling net/minecraft/world/level/block/PipeBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e UP
	f DOWN
	g PROPERTY_BY_DIRECTION
	h shapeByIndex
	i DIRECTIONS
	a (F)[Lnet/minecraft/server/VoxelShape; makeShapes
	a (Ljava/util/EnumMap;)V lambda$static$0
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	h (Lnet/minecraft/server/IBlockData;)I getAABBIndex
net/minecraft/server/ReputationHandler net/minecraft/world/entity/ReputationEventHandler
	a (Lnet/minecraft/server/ReputationEvent;Lnet/minecraft/server/Entity;)V onReputationEventFrom
net/minecraft/server/PathfinderGoalOcelotAttack net/minecraft/world/entity/ai/goal/OcelotAttackGoal
	a level
	b mob
	c target
	d attackTime
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
net/minecraft/server/DataConverterArmorStand net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
ji$a net/minecraft/data/recipes/ShapelessRecipeBuilder$Result
	a id
	b result
	c count
	d group
	e ingredients
	f advancement
	g advancementId
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
net/minecraft/server/BlockPropertyDoubleBlockHalf net/minecraft/world/level/block/state/properties/DoubleBlockHalf
	c $VALUES
	a ()Ljava/lang/String; getSerializedName
net/minecraft/server/EntitySilverfish$PathfinderGoalSilverfishWakeOthers net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal
	b lookForFriends
	a ()Z canUse
	e ()V tick
	g ()V notifyHurt
net/minecraft/server/CriterionTriggerConstructBeacon net/minecraft/advancements/critereon/ConstructBeaconTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Las$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/TileEntityBeacon;)V trigger
	a (Lnet/minecraft/server/TileEntityBeacon;Las$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
net/minecraft/server/LayerIsland net/minecraft/world/level/newbiome/layer/IslandLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;II)I applyPixel
net/minecraft/server/BehaviorStopRiding net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting
	b maxWalkDistToRideTarget
	c dontRideIf
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;)Z isVehicleValid
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
bro net/minecraft/world/level/FoliageColor
	a pixels
	a ()I getEvergreenColor
	a (DD)I get
	a ([I)V init
	b ()I getBirchColor
	c ()I getDefaultColor
cgo$b$5 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$5
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
bdx$b net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal
	b this$0
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
bdx$c net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal
	b attackWarmupDelay
	c nextAttackTickCount
	d this$0
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
	m ()I getCastWarmupTime
bdg$1 net/minecraft/world/entity/monster/Evoker$1
net/minecraft/server/WorldGenCarverAbstract net/minecraft/world/level/levelgen/carver/WorldCarver
	a CAVE
	b NETHER_CAVE
	c CANYON
	d UNDERWATER_CANYON
	e UNDERWATER_CAVE
	f AIR
	g CAVE_AIR
	h WATER
	i LAVA
	j replaceableBlocks
	k liquids
	l genHeight
	m configuredCodec
	a (DDDI)Z skip
	a (IIDDIIF)Z canReach
	a (IIIIII)Z isEdge
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenCarverAbstract;)Lnet/minecraft/server/WorldGenCarverAbstract; register
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenCarverConfiguration;)Z isStartChunk
	a (Lnet/minecraft/server/IBlockData;)Z canReplaceBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)Z canReplaceBlock
	a (Lnet/minecraft/server/IChunkAccess;IIIIIIII)Z hasWater
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;JIIIDDDDDLjava/util/BitSet;)Z carveSphere
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;IIIIIIIILorg/apache/commons/lang3/mutable/MutableBoolean;)Z carveBlock
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/server/WorldGenCarverConfiguration;)Z carve
	a (Lnet/minecraft/server/WorldGenCarverConfiguration;)Lnet/minecraft/server/WorldGenCarverWrapper; configured
	c ()Lcom/mojang/serialization/Codec; configuredCodec
	d ()I getRange
cgo$b$3 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$3
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
brs net/minecraft/world/level/GrassColor
	a pixels
	a (DD)I get
	a ([I)V init
net/minecraft/server/PacketStatusInPing net/minecraft/network/protocol/status/ServerboundPingRequestPacket
	a time
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketStatusInListener;)V handle
	b ()J getTime
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
cgo$b$4 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$4
	g queue
	a ()Ljava/util/List; lambda$$0
	a (Lnet/minecraft/server/GeneratorAccess;)V processChunk
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
net/minecraft/server/WorldGenFeatureDesertVillage net/minecraft/data/worldgen/DesertVillagePools
	a START
	a ()V bootstrap
net/minecraft/server/IChatMutableComponent net/minecraft/network/chat/MutableComponent
	a (Lnet/minecraft/server/EnumChatFormat;)Lnet/minecraft/server/IChatMutableComponent; withStyle
	a ([Lnet/minecraft/server/EnumChatFormat;)Lnet/minecraft/server/IChatMutableComponent; withStyle
	addSibling (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatMutableComponent; append
	c (Ljava/lang/String;)Lnet/minecraft/server/IChatMutableComponent; append
	c (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/IChatMutableComponent; withStyle
	format (Ljava/util/function/UnaryOperator;)Lnet/minecraft/server/IChatMutableComponent; withStyle
	setChatModifier (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/IChatMutableComponent; setStyle
cgo$b$1 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$1
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
net/minecraft/server/WorldGenFeatureOreConfiguration$Target net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$Predicates
cgo$b$2 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$2
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
net/minecraft/server/StructureStart net/minecraft/world/level/levelgen/structure/StructureStart
	a INVALID_START
	b pieces
	c boundingBox
	d random
	e feature
	f chunkX
	g chunkZ
	h references
	a ()Lnet/minecraft/server/BlockPosition; getLocatePos
	a (II)Lnet/minecraft/server/NBTTagCompound; createTag
	a (ILjava/util/Random;I)V moveBelowSeaLevel
	a (Ljava/util/Random;II)V moveInsideHeights
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)V placeInChunk
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	b ()V calculateBoundingBox
	c ()Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	d ()Ljava/util/List; getPieces
	e ()Z isValid
	f ()I getChunkX
	g ()I getChunkZ
	h ()Z canBeReferenced
	i ()V addReference
	j ()I getReferences
	k ()I getMaxReferences
	l ()Lnet/minecraft/server/StructureGenerator; getFeature
net/minecraft/server/PacketPlayOutNamedSoundEffect net/minecraft/network/protocol/game/ClientboundSoundPacket
	a sound
	b source
	c x
	d y
	e z
	f volume
	g pitch
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/SoundEffect; getSound
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/SoundCategory; getSource
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()F getVolume
	h ()F getPitch
net/minecraft/server/GameProfileBanEntry net/minecraft/server/players/UserBanListEntry
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
	e ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
bzx$1 net/minecraft/world/level/block/SnowLayerBlock$1
	a $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
net/minecraft/server/FluidTypeEmpty net/minecraft/world/level/material/EmptyFluid
	a ()Lnet/minecraft/server/Item; getBucket
	a (Lnet/minecraft/server/Fluid;)F getOwnHeight
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getHeight
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/Vec3D; getFlow
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	b ()Z isEmpty
	b (Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/IBlockData; createLegacyBlock
	b (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getShape
	c ()F getExplosionResistance
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d (Lnet/minecraft/server/Fluid;)I getAmount
net/minecraft/server/DefinedStructureProcessorPredicates net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule
	a CODEC
	b inputPredicate
	c locPredicate
	d posPredicate
	e outputState
	f outputTag
	a ()Lnet/minecraft/server/IBlockData; getOutputState
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lnet/minecraft/server/DefinedStructureProcessorPredicates;)Ljava/util/Optional; lambda$null$4
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z test
	b ()Lnet/minecraft/server/NBTTagCompound; getOutputTag
	b (Lnet/minecraft/server/DefinedStructureProcessorPredicates;)Lnet/minecraft/server/IBlockData; lambda$null$3
	c (Lnet/minecraft/server/DefinedStructureProcessorPredicates;)Lnet/minecraft/server/PosRuleTest; lambda$null$2
	d (Lnet/minecraft/server/DefinedStructureProcessorPredicates;)Lnet/minecraft/server/DefinedStructureRuleTest; lambda$null$1
	e (Lnet/minecraft/server/DefinedStructureProcessorPredicates;)Lnet/minecraft/server/DefinedStructureRuleTest; lambda$null$0
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairs net/minecraft/world/level/levelgen/structure/StrongholdPieces$Straight
	a leftChild
	b rightChild
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairs; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/ItemFireball net/minecraft/world/item/FireChargeItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V playSound
net/minecraft/server/ArgumentPredicateItemStack net/minecraft/commands/arguments/item/ItemInput
	a ERROR_STACK_TOO_BIG
	b item
	c tag
	a ()Lnet/minecraft/server/Item; getItem
	a (IZ)Lnet/minecraft/server/ItemStack; createItemStack
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/ItemStack;)Z test
	b ()Lnet/minecraft/server/NBTTagCompound; getTag
	c ()Ljava/lang/String; serialize
doc$a net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList
	a this$0
	a (Ldfj;)V renderBackground
	a (Ldlc$a;)V setSelected
	a (Ldoc$a$a;)V setSelected
	a (Ldoc$a;)I access$200
	b ()Z isFocused
	d ()I getRowWidth
	e ()I getScrollbarPosition
dnq$1 net/minecraft/client/gui/screens/ConnectScreen$1
	a val$hostname
	b val$port
	c this$0
	a ()V lambda$run$1
	a (Ldnq;Lnet/minecraft/server/IChatBaseComponent;)V lambda$run$0
	a (Ljava/lang/String;)V lambda$run$2
bin$3 net/minecraft/world/inventory/DataSlot$3
	a value
	a (I)V set
	b ()I get
bzg$1 net/minecraft/world/level/block/RespawnAnchorBlock$1
	a val$pos
	b val$inWater
	c this$0
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Ljava/util/Optional; getBlockExplosionResistance
bin$1 net/minecraft/world/inventory/DataSlot$1
	a val$container
	b val$dataId
	a (I)V set
	b ()I get
bin$2 net/minecraft/world/inventory/DataSlot$2
	a val$storage
	b val$index
	a (I)V set
	b ()I get
net/minecraft/server/BlockNetherrack net/minecraft/world/level/block/NetherrackBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
net/minecraft/server/WorldGenMineshaft$Type net/minecraft/world/level/levelgen/feature/MineshaftFeature$Type
	c CODEC
	d BY_NAME
	e name
	f $VALUES
	a ()Ljava/lang/String; getSerializedName
	a (I)Lnet/minecraft/server/WorldGenMineshaft$Type; byId
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenMineshaft$Type; byName
	a (Lnet/minecraft/server/WorldGenMineshaft$Type;)Lnet/minecraft/server/WorldGenMineshaft$Type; lambda$static$0
	b ()Ljava/lang/String; getName
net/minecraft/server/PosRuleTestAxisAlignedLinear net/minecraft/world/level/levelgen/structure/templatesystem/AxisAlignedLinearPosTest
	a CODEC
	b minChance
	d maxChance
	e minDist
	f maxDist
	g axis
	a ()Lnet/minecraft/server/PosRuleTestType; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z test
	a (Lnet/minecraft/server/PosRuleTestAxisAlignedLinear;)Lnet/minecraft/server/EnumDirection$EnumAxis; lambda$null$4
	b (Lnet/minecraft/server/PosRuleTestAxisAlignedLinear;)Ljava/lang/Integer; lambda$null$3
	c (Lnet/minecraft/server/PosRuleTestAxisAlignedLinear;)Ljava/lang/Integer; lambda$null$2
	d (Lnet/minecraft/server/PosRuleTestAxisAlignedLinear;)Ljava/lang/Float; lambda$null$1
	e (Lnet/minecraft/server/PosRuleTestAxisAlignedLinear;)Ljava/lang/Float; lambda$null$0
efc$1 net/minecraft/client/renderer/entity/IllusionerRenderer$1
	a this$0
	a (Ldfj;Ldzy;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityIllagerIllusioner;FFFFFF)V render
	a (Ldfj;Ldzy;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
cfx$b net/minecraft/world/level/chunk/ChunkStatus$GenerationTask
net/minecraft/server/EnumSkyBlock net/minecraft/world/level/LightLayer
	c surrounding
	d $VALUES
cfg$1 net/minecraft/world/level/block/state/properties/Property$1
cfx$d net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask
bti net/minecraft/world/level/biome/package-info
cfx$c net/minecraft/world/level/chunk/ChunkStatus$LoadingTask
net/minecraft/server/Foods net/minecraft/world/food/Foods
	A POISONOUS_POTATO
	B PORKCHOP
	C POTATO
	D PUFFERFISH
	E PUMPKIN_PIE
	F RABBIT
	G RABBIT_STEW
	H ROTTEN_FLESH
	I SALMON
	J SPIDER_EYE
	K SUSPICIOUS_STEW
	L SWEET_BERRIES
	M TROPICAL_FISH
	a APPLE
	b BAKED_POTATO
	c BEEF
	d BEETROOT
	e BEETROOT_SOUP
	f BREAD
	g CARROT
	h CHICKEN
	i CHORUS_FRUIT
	j COD
	k COOKED_BEEF
	l COOKED_CHICKEN
	m COOKED_COD
	n COOKED_MUTTON
	o COOKED_PORKCHOP
	p COOKED_RABBIT
	q COOKED_SALMON
	r COOKIE
	s DRIED_KELP
	t ENCHANTED_GOLDEN_APPLE
	u GOLDEN_APPLE
	v GOLDEN_CARROT
	w HONEY_BOTTLE
	x MELON_SLICE
	y MUSHROOM_STEW
	z MUTTON
	a (I)Lnet/minecraft/server/FoodInfo; stew
cm$1 net/minecraft/advancements/critereon/StatePropertiesPredicate$1
net/minecraft/server/GameProfilerFillerActive net/minecraft/util/profiling/ProfileCollector
	d ()Lnet/minecraft/server/MethodProfilerResults; getResults
net/minecraft/server/EntityMonsterPatrolling net/minecraft/world/entity/monster/PatrollingMonster
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkPatrollingMonsterSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	ba ()D getMyRidingOffset
	eN ()Z canBeLeader
	eP ()Z hasPatrolTarget
	eT ()Z canJoinPatrol
	eU ()V findPatrolTarget
	h (D)Z removeWhenFarAway
	o ()V registerGoals
	u (Z)V setPatrolling
net/minecraft/server/EnchantmentFrostWalker net/minecraft/world/item/enchantment/FrostWalkerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;I)V onEntityMoved
	b ()Z isTreasureOnly
	b (I)I getMaxCost
net/minecraft/server/WorldGenFeatureRandomChoice net/minecraft/world/level/levelgen/feature/RandomSelectorFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRandomChoiceConfiguration;)Z place
net/minecraft/server/BlockLectern net/minecraft/world/level/block/LecternBlock
	a FACING
	b POWERED
	c HAS_BOOK
	d SHAPE_BASE
	e SHAPE_POST
	f SHAPE_COMMON
	g SHAPE_TOP_PLATE
	h SHAPE_COLLISION
	i SHAPE_WEST
	j SHAPE_NORTH
	k SHAPE_EAST
	o SHAPE_SOUTH
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V openScreen
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V signalPageChange
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/ItemStack;)Z tryPlaceBook
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V updateBelow
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/ItemStack;)V placeBook
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V changePowered
	b_ (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	c_ (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V popBook
	setHasBook (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V resetBookState
net/minecraft/server/DataConverterBook net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$2
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$null$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
net/minecraft/server/BehaviorUtil net/minecraft/world/entity/ai/behavior/BehaviorUtils
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/EntityLiving;)Z entityIsVisible
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/MemoryModuleType;Ljava/util/function/Predicate;)Z targetIsValid
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/MemoryModuleType;Lnet/minecraft/server/EntityTypes;)Z targetIsValid
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;I)Z isWithinAttackRange
	a (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityVillager; lambda$null$6
	a (Lnet/minecraft/server/EntityLiving;Ljava/util/List;)Z lambda$entityIsVisible$0
	a (Lnet/minecraft/server/EntityLiving;Ljava/util/Optional;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityLiving; getNearestTarget
	a (Lnet/minecraft/server/EntityLiving;Ljava/util/UUID;)Lnet/minecraft/server/EntityLiving; lambda$getLivingEntityFromUUIDMemory$4
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BlockPosition;FI)V setWalkAndLookTargetMemories
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;FI)V setWalkAndLookTargetMemories
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)V lookAtEntity
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;D)Z isOtherTargetMuchFurtherAwayThanCurrentAttackTarget
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;F)V lockGazeAndWalkToEachOther
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityLiving; getTargetNearestMe
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Vec3D;)V throwItem
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/MemoryModuleType;)Ljava/util/Optional; getLivingEntityFromUUIDMemory
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/EntityLiving;)Z lambda$targetIsValid$1
	a (Lnet/minecraft/server/EntityVillager;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; getNearbyVillagersWithCondition
	a (Lnet/minecraft/server/EntityVillager;Ljava/util/function/Predicate;Ljava/util/List;)Ljava/util/stream/Stream; lambda$getNearbyVillagersWithCondition$7
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityLiving;)Z lambda$null$5
	a (Lnet/minecraft/server/WorldServer;ILnet/minecraft/server/SectionPosition;)Z lambda$findSectionClosestToVillage$3
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/SectionPosition;I)Lnet/minecraft/server/SectionPosition; findSectionClosestToVillage
	b (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/EntityLiving;)Z lambda$targetIsValid$2
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z isWithinMeleeAttackRange
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;F)V setWalkAndLookTargetMemoriesToEachOther
	c (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z canSee
	d (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)V lookAtEachOther
net/minecraft/server/BlockCocoa net/minecraft/world/level/block/CocoaBlock
	b EAST_AABB
	c WEST_AABB
	d NORTH_AABB
	e SOUTH_AABB
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	a_ (Lnet/minecraft/server/IBlockData;)Z isRandomlyTicking
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
dp$b net/minecraft/commands/arguments/MessageArgument$Part
	a start
	b end
	c selector
	a ()I getStart
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/IChatBaseComponent; toComponent
	b ()I getEnd
	c ()Lnet/minecraft/server/EntitySelector; getSelector
net/minecraft/server/WorldGenFeatureShipwreckConfiguration net/minecraft/world/level/levelgen/feature/configurations/ShipwreckConfiguration
	a CODEC
	b isBeached
	a (Lnet/minecraft/server/WorldGenFeatureShipwreckConfiguration;)Ljava/lang/Boolean; lambda$static$0
dp$a net/minecraft/commands/arguments/MessageArgument$Message
	a text
	b parts
	a ()Ljava/lang/String; getText
	a (Lcom/mojang/brigadier/StringReader;Z)Ldp$a; parseText
	a (Lnet/minecraft/server/CommandListenerWrapper;Z)Lnet/minecraft/server/IChatBaseComponent; toComponent
	b ()[Ldp$b; getParts
net/minecraft/server/BlockGrindstone net/minecraft/world/level/block/GrindstoneBlock
	A WALL_SOUTH_ALL_LEGS
	B WALL_SOUTH_GRINDSTONE
	C WALL_NORTH_LEFT_POST
	D WALL_NORTH_RIGHT_POST
	E WALL_NORTH_LEFT_PIVOT
	F WALL_NORTH_RIGHT_PIVOT
	G WALL_NORTH_LEFT_LEG
	H WALL_NORTH_RIGHT_LEG
	I WALL_NORTH_ALL_LEGS
	J WALL_NORTH_GRINDSTONE
	K WALL_WEST_LEFT_POST
	L WALL_WEST_RIGHT_POST
	M WALL_WEST_LEFT_PIVOT
	N WALL_WEST_RIGHT_PIVOT
	O WALL_WEST_LEFT_LEG
	P WALL_WEST_RIGHT_LEG
	Q WALL_WEST_ALL_LEGS
	R WALL_WEST_GRINDSTONE
	S WALL_EAST_LEFT_POST
	T WALL_EAST_RIGHT_POST
	U WALL_EAST_LEFT_PIVOT
	V WALL_EAST_RIGHT_PIVOT
	W WALL_EAST_LEFT_LEG
	X WALL_EAST_RIGHT_LEG
	Y WALL_EAST_ALL_LEGS
	Z WALL_EAST_GRINDSTONE
	a FLOOR_NORTH_SOUTH_LEFT_POST
	aD CONTAINER_TITLE
	aa CEILING_NORTH_SOUTH_LEFT_POST
	ab CEILING_NORTH_SOUTH_RIGHT_POST
	ac CEILING_NORTH_SOUTH_LEFT_PIVOT
	ad CEILING_NORTH_SOUTH_RIGHT_PIVOT
	ae CEILING_NORTH_SOUTH_LEFT_LEG
	af CEILING_NORTH_SOUTH_RIGHT_LEG
	ag CEILING_NORTH_SOUTH_ALL_LEGS
	ah CEILING_NORTH_SOUTH_GRINDSTONE
	ai CEILING_EAST_WEST_LEFT_POST
	aj CEILING_EAST_WEST_RIGHT_POST
	ak CEILING_EAST_WEST_LEFT_PIVOT
	al CEILING_EAST_WEST_RIGHT_PIVOT
	am CEILING_EAST_WEST_LEFT_LEG
	an CEILING_EAST_WEST_RIGHT_LEG
	ao CEILING_EAST_WEST_ALL_LEGS
	ap CEILING_EAST_WEST_GRINDSTONE
	b FLOOR_NORTH_SOUTH_RIGHT_POST
	c FLOOR_NORTH_SOUTH_LEFT_PIVOT
	d FLOOR_NORTH_SOUTH_RIGHT_PIVOT
	e FLOOR_NORTH_SOUTH_LEFT_LEG
	f FLOOR_NORTH_SOUTH_RIGHT_LEG
	g FLOOR_NORTH_SOUTH_ALL_LEGS
	h FLOOR_NORTH_SOUTH_GRINDSTONE
	i FLOOR_EAST_WEST_LEFT_POST
	j FLOOR_EAST_WEST_RIGHT_POST
	k FLOOR_EAST_WEST_LEFT_PIVOT
	o FLOOR_EAST_WEST_RIGHT_PIVOT
	p FLOOR_EAST_WEST_LEFT_LEG
	q FLOOR_EAST_WEST_RIGHT_LEG
	r FLOOR_EAST_WEST_ALL_LEGS
	s FLOOR_EAST_WEST_GRINDSTONE
	t WALL_SOUTH_LEFT_POST
	v WALL_SOUTH_RIGHT_POST
	w WALL_SOUTH_LEFT_PIVOT
	x WALL_SOUTH_RIGHT_PIVOT
	y WALL_SOUTH_LEFT_LEG
	z WALL_SOUTH_RIGHT_LEG
	a (Lcef$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Container; lambda$getMenuProvider$0
	b (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	l (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/VoxelShape; getVoxelShape
net/minecraft/server/PacketPlayInStruct net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket
	a pos
	b updateType
	c mode
	d name
	e offset
	f size
	g mirror
	h rotation
	i data
	j ignoreEntities
	k showAir
	l showBoundingBox
	m integrity
	n seed
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/TileEntityStructure$UpdateType; getUpdateType
	d ()Lnet/minecraft/server/BlockPropertyStructureMode; getMode
	e ()Ljava/lang/String; getName
	f ()Lnet/minecraft/server/BlockPosition; getOffset
	g ()Lnet/minecraft/server/BlockPosition; getSize
	h ()Lnet/minecraft/server/EnumBlockMirror; getMirror
	i ()Lnet/minecraft/server/EnumBlockRotation; getRotation
	j ()Ljava/lang/String; getData
	k ()Z isIgnoreEntities
	l ()Z isShowAir
	m ()Z isShowBoundingBox
	n ()F getIntegrity
	o ()J getSeed
net/minecraft/server/PacketPlayInSteerVehicle net/minecraft/network/protocol/game/ServerboundPlayerInputPacket
	a xxa
	b zza
	c isJumping
	d isShiftKeyDown
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()F getXxa
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()F getZza
	d ()Z isJumping
	e ()Z isShiftKeyDown
crj$a net/minecraft/world/level/levelgen/structure/OceanRuinFeature$OceanRuinStart
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureOceanRuinConfiguration;)V generatePieces
bdg$b net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal
	a this$0
	e ()V tick
bdg$a net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal
	a this$0
	a (DDDDFI)V createSpellEntity
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
net/minecraft/server/WorldGenJunglePyramidPiece net/minecraft/world/level/levelgen/structure/JunglePyramidPiece
	e placedMainChest
	f placedHiddenChest
	g placedTrap1
	h placedTrap2
	i STONE_SELECTOR
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
bdg$d net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal
	a this$0
	e wololoTargeting
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLiving;)Z lambda$new$0
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
	m ()I getCastWarmupTime
bdg$c net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal
	a this$0
	e vexCountTargeting
	a ()Z canUse
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
net/minecraft/server/ItemSplashPotion net/minecraft/world/item/SplashPotionItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/WorldGenFeatureNoSurfaceOre net/minecraft/world/level/levelgen/feature/NoSurfaceOreFeature
	a (Ljava/util/Random;I)I getRandomPlacementInOneAxisRelativeToOrigin
	a (Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;I)V offsetTargetPos
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z isFacingAir
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureOreConfiguration;)Z place
net/minecraft/server/ResourcePackRepository net/minecraft/server/packs/repository/PackRepository
	a sources
	b available
	c selected
	d constructor
	a ()V reload
	a (Ljava/lang/String;)Lnet/minecraft/server/ResourcePackLoader; getPack
	a (Ljava/util/Collection;)V setSelected
	a (Ljava/util/Map;Lnet/minecraft/server/ResourcePackLoader;)V lambda$discoverAvailable$0
	b ()Ljava/util/Collection; getAvailableIds
	b (Ljava/lang/String;)Z isAvailable
	b (Ljava/util/Collection;)Ljava/util/List; rebuildSelected
	c ()Ljava/util/Collection; getAvailablePacks
	c (Ljava/util/Collection;)Ljava/util/stream/Stream; getAvailablePacks
	d ()Ljava/util/Collection; getSelectedIds
	e ()Ljava/util/Collection; getSelectedPacks
	f ()Ljava/util/List; openAllSelected
	g ()Ljava/util/Map; discoverAvailable
net/minecraft/server/NextTickListEntry net/minecraft/world/level/TickNextTickData
	a pos
	b triggerTick
	c priority
	d counter
	e type
	f c
	a ()Ljava/util/Comparator; createTimeComparator
	a (Lnet/minecraft/server/NextTickListEntry;)J lambda$createTimeComparator$2
	b ()Ljava/lang/Object; getType
	b (Lnet/minecraft/server/NextTickListEntry;)Lnet/minecraft/server/TickListPriority; lambda$createTimeComparator$1
	c (Lnet/minecraft/server/NextTickListEntry;)J lambda$createTimeComparator$0
cqx$1 net/minecraft/world/level/levelgen/structure/BoundingBox$1
	a $SwitchMap$net$minecraft$core$Direction
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition
	a index
	b connections
	c hasOpening
	d claimed
	e isSource
	f scanIndex
	a ()V updateOpenings
	a (I)Z findSource
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)V setConnection
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)I access$000
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Z)Z access$102
	b ()Z isSpecial
	b (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z access$100
	b (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Z)Z access$902
	c ()I countOpenings
	c (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)[Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker; access$1000
	d (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)[Z access$1100
net/minecraft/server/BehaviorInteract net/minecraft/world/entity/ai/behavior/InteractWith
	b maxDist
	c speedModifier
	d type
	e interactionRangeSqr
	f targetFilter
	g selfFilter
	h memory
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/EntityLiving;)V lambda$null$6
	a (Lnet/minecraft/server/EntityLiving;)Z seesAtLeastOneValidTarget
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BehaviorController;Ljava/util/List;)V lambda$start$7
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z lambda$null$5
	a (Lnet/minecraft/server/EntityTypes;ILjava/util/function/Predicate;Lnet/minecraft/server/MemoryModuleType;FI)Lnet/minecraft/server/BehaviorInteract; of
	a (Lnet/minecraft/server/EntityTypes;ILnet/minecraft/server/MemoryModuleType;FI)Lnet/minecraft/server/BehaviorInteract; of
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityLiving;)Z isTargetValid
	c (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityLiving; lambda$null$4
	d (Lnet/minecraft/server/EntityLiving;)Z lambda$null$3
	e (Lnet/minecraft/server/EntityLiving;)Z lambda$of$2
	f (Lnet/minecraft/server/EntityLiving;)Z lambda$of$1
	g (Lnet/minecraft/server/EntityLiving;)Z lambda$of$0
net/minecraft/server/TagsBlock net/minecraft/tags/BlockTags
	a HELPER
	aB FENCE_GATES
	aC UNSTABLE_BOTTOM_CENTER
	aD MUSHROOM_GROW_BLOCK
	aE INFINIBURN_OVERWORLD
	aF INFINIBURN_NETHER
	aG INFINIBURN_END
	aH BASE_STONE_OVERWORLD
	aI BASE_STONE_NETHER
	a ()Lnet/minecraft/server/Tags; getAllTags
	a (Ljava/lang/String;)Laej$e; bind
	b ()Ljava/util/List; getWrappers
net/minecraft/server/RunnableSaveScoreboard net/minecraft/world/level/saveddata/SaveDataDirtyRunnable
	a savedData
net/minecraft/server/NBTNumber net/minecraft/nbt/NumericTag
	asByte ()B getAsByte
	asDouble ()D getAsDouble
	asFloat ()F getAsFloat
	asInt ()I getAsInt
	asLong ()J getAsLong
	asShort ()S getAsShort
	k ()Ljava/lang/Number; getAsNumber
net/minecraft/server/WorldGenFeatureCoralMushroom net/minecraft/world/level/levelgen/feature/CoralMushroomFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z placeFeature
cm$d net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedPropertyMatcher
	a minValue
	b maxValue
	a ()Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/server/IBlockDataHolder;Lnet/minecraft/server/IBlockState;)Z match
net/minecraft/server/TickListServer net/minecraft/world/level/ServerTickList
	a ignore
	b toId
	e level
	f currentlyTicking
	g alreadyTicked
	h ticker
	nextTickList tickNextTickList
	nextTickListHash tickNextTickSet
	a ()I size
	a (Ljava/util/List;Ljava/util/Collection;Lnet/minecraft/server/StructureBoundingBox;Z)Ljava/util/List; fetchTicksInArea
	a (Ljava/util/function/Function;Ljava/lang/Iterable;J)Lnet/minecraft/server/NBTTagList; saveTickList
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/NBTTagList; save
	a (Lnet/minecraft/server/ChunkCoordIntPair;ZZ)Ljava/util/List; fetchTicksInChunk
	a (Lnet/minecraft/server/NextTickListEntry;)V addTickData
	a (Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/BlockPosition;)V copy
	a (Lnet/minecraft/server/StructureBoundingBox;ZZ)Ljava/util/List; fetchTicksInArea
	b ()V tick
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
net/minecraft/server/DataConverterOptionsAddTextBackground net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$1
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; lambda$null$0
	a (Ljava/lang/String;)D calculateBackground
cm$b net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactPropertyMatcher
	a value
	a ()Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/server/IBlockDataHolder;Lnet/minecraft/server/IBlockState;)Z match
cm$c net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher
	a name
	a ()Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/server/BlockStateList;Ljava/util/function/Consumer;)V checkState
	a (Lnet/minecraft/server/BlockStateList;Lnet/minecraft/server/IBlockDataHolder;)Z match
	a (Lnet/minecraft/server/IBlockDataHolder;Lnet/minecraft/server/IBlockState;)Z match
	b ()Ljava/lang/String; getName
cm$a net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder
	a matchers
	a ()Lcm$a; properties
	a (Lnet/minecraft/server/IBlockState;I)Lcm$a; hasProperty
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Lcm$a; hasProperty
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/String;)Lcm$a; hasProperty
	a (Lnet/minecraft/server/IBlockState;Z)Lcm$a; hasProperty
	b ()Lnet/minecraft/server/CriterionTriggerProperties; build
acj$1 net/minecraft/server/packs/resources/SimpleReloadInstance$1
	a val$mainThreadExecutor
	b val$listener
	c val$previousTask
	d this$0
	a (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; wait
	a (Ljava/lang/Object;Lnet/minecraft/server/Unit;Ljava/lang/Object;)Ljava/lang/Object; lambda$wait$1
	a (Lnet/minecraft/server/IReloadListener;)V lambda$wait$0
net/minecraft/server/DragonControllerStrafe net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase
	b LOGGER
	c fireballCharge
	d currentPath
	e targetLocation
	f attackTarget
	g holdingPatternClockwise
	a (Lnet/minecraft/server/EntityLiving;)V setTarget
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
dew$1 com/mojang/blaze3d/platform/Window$1
net/minecraft/server/ItemMonsterEgg net/minecraft/world/item/SpawnEggItem
	a BY_ID
	b color1
	c color2
	d defaultType
	a (I)I getColor
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/ItemStack;)Ljava/util/Optional; spawnOffspringFromSpawnEgg
	a (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/ItemMonsterEgg; byId
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/EntityTypes; getType
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/EntityTypes;)Z spawnsEntity
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	f ()Ljava/lang/Iterable; eggs
net/minecraft/server/EnchantmentTridentImpaling net/minecraft/world/item/enchantment/TridentImpalerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/server/EnumMonsterType;)F getDamageBonus
	b (I)I getMaxCost
net/minecraft/server/WorldGenDecoratorSquare net/minecraft/world/level/levelgen/placement/SquareDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/ServerConnection net/minecraft/server/network/ServerConnectionListener
	a SERVER_EVENT_GROUP
	b SERVER_EPOLL_EVENT_GROUP
	c running
	connectedChannels connections
	d LOGGER
	e server
	listeningChannels channels
	a ()Ljava/net/SocketAddress; startMemoryChannel
	a (Ljava/net/InetAddress;I)V startTcpServerListener
	a (Lnet/minecraft/server/NetworkManager;Lnet/minecraft/server/IChatBaseComponent;Lio/netty/util/concurrent/Future;)V lambda$tick$2
	a (Lnet/minecraft/server/ServerConnection;)Lnet/minecraft/server/MinecraftServer; access$000
	b ()V stop
	b (Lnet/minecraft/server/ServerConnection;)Ljava/util/List; access$100
	c ()V tick
	d ()Lnet/minecraft/server/MinecraftServer; getServer
	e ()Lio/netty/channel/epoll/EpollEventLoopGroup; lambda$static$1
	f ()Lio/netty/channel/nio/NioEventLoopGroup; lambda$static$0
net/minecraft/server/WorldGenWitchHut net/minecraft/world/level/levelgen/structure/SwamplandHutPiece
	e spawnedWitch
	f spawnedCat
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/StructureBoundingBox;)V spawnCat
net/minecraft/server/ContainerBrewingStand$SlotBrewing net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
czi$a net/minecraft/world/level/storage/loot/entries/EmptyLootItem$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEmpty; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
net/minecraft/server/PathfinderGoalUtil net/minecraft/world/entity/ai/util/GoalUtils
	a (Lnet/minecraft/server/EntityInsentient;)Z hasGroundPathNavigation
net/minecraft/server/WorldGenDecoratorDecorated net/minecraft/world/level/levelgen/placement/DecoratedDecorator
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorDecpratedConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/WorldGenDecoratorDecpratedConfiguration;Lnet/minecraft/server/WorldGenDecoratorContext;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; lambda$getPositions$0
net/minecraft/server/LootItemConditionLocationCheck net/minecraft/world/level/storage/loot/predicates/LocationCheck
	a predicate
	b offset
	a (Lbw$a;)Ldbl$a; checkLocation
	a (Lbw$a;Lnet/minecraft/server/BlockPosition;)Ldbl$a; checkLocation
	a (Lnet/minecraft/server/LootItemConditionLocationCheck;)Lnet/minecraft/server/CriterionConditionLocation; access$000
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lnet/minecraft/server/LootItemConditionType; getType
	b (Lbw$a;)Lnet/minecraft/server/LootItemCondition; lambda$checkLocation$0
	b (Lbw$a;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/LootItemCondition; lambda$checkLocation$1
	b (Lnet/minecraft/server/LootItemConditionLocationCheck;)Lnet/minecraft/server/BlockPosition; access$100
dab$a net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder
	a destination
	b mapDecoration
	c zoom
	d searchRadius
	e skipKnownStructures
	a ()Ldab$a; getThis
	a (B)Ldab$a; setZoom
	a (I)Ldab$a; setSearchRadius
	a (Lnet/minecraft/server/MapIcon$Type;)Ldab$a; setMapDecoration
	a (Lnet/minecraft/server/StructureGenerator;)Ldab$a; setDestination
	a (Z)Ldab$a; setSkipKnownStructures
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Ldaf$a; getThis
dab$b net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Serializer
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/StructureGenerator; readStructure
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionExplorationMap; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionExplorationMap;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/BlockSponge net/minecraft/world/level/block/SpongeBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V tryAbsorbWater
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z removeWaterBreadthFirstSearch
bfm$a net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal
	a trader
	b stopDistance
	c speedModifier
	d this$0
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;D)Z isTooFarAway
	d ()V stop
	e ()V tick
net/minecraft/server/Raid$Status net/minecraft/world/entity/raid/Raid$RaidStatus
	e VALUES
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/Raid$Status; access$000
	b (Ljava/lang/String;)Lnet/minecraft/server/Raid$Status; getByName
net/minecraft/server/CommandSaveOn net/minecraft/server/commands/SaveOnCommand
	a ERROR_ALREADY_ON
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$0
net/minecraft/server/PacketPlayOutSpawnEntity net/minecraft/network/protocol/game/ClientboundAddEntityPacket
	a id
	b uuid
	c x
	d y
	e z
	f xa
	g ya
	h za
	i xRot
	j yRot
	k type
	l data
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/UUID; getUUID
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()D getXa
	h ()D getYa
	i ()D getZa
	j ()I getxRot
	k ()I getyRot
	l ()Lnet/minecraft/server/EntityTypes; getType
	m ()I getData
net/minecraft/server/ControllerMove net/minecraft/world/entity/ai/control/MoveControl
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f strafeForwards
	g strafeRight
	h operation
	a ()V tick
	a (DDDD)V setWantedPosition
	a (FF)V strafe
	a (FFF)F rotlerp
	a (Lnet/minecraft/server/ControllerMove;)V copyFrom
	b ()Z hasWanted
	b (FF)Z isWalkable
	c ()D getSpeedModifier
	d ()D getWantedX
	e ()D getWantedY
	f ()D getWantedZ
net/minecraft/server/EnchantmentSilkTouch net/minecraft/world/item/enchantment/UntouchingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/ResourceManagerFallback net/minecraft/server/packs/resources/FallbackResourceManager
	a fallbacks
	b LOGGER
	c type
	d namespace
	a ()Ljava/util/Set; getNamespaces
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; listResources
	a (Lnet/minecraft/server/IResourcePack;)V add
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/IResource; getResource
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IResourcePack;)Ljava/io/InputStream; getWrappedResource
	b ()Ljava/util/stream/Stream; listPacks
	b (Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c ()Lorg/apache/logging/log4j/Logger; access$000
	c (Lnet/minecraft/server/MinecraftKey;)Ljava/util/List; getResources
	d (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; getMetadataLocation
	e (Lnet/minecraft/server/MinecraftKey;)V validateLocation
	f (Lnet/minecraft/server/MinecraftKey;)Z isValidLocation
net/minecraft/server/LootItemConditionRandomChanceWithLooting net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition
	a percent
	b lootingMultiplier
	a ()Ljava/util/Set; getReferencedContextParams
	a (FF)Ldbl$a; randomChanceAndLootingBoost
	a (Lnet/minecraft/server/LootItemConditionRandomChanceWithLooting;)F access$000
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lnet/minecraft/server/LootItemConditionType; getType
	b (FF)Lnet/minecraft/server/LootItemCondition; lambda$randomChanceAndLootingBoost$0
	b (Lnet/minecraft/server/LootItemConditionRandomChanceWithLooting;)F access$100
net/minecraft/server/DataConverterDropChances net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix
	a FLOAT_LIST_CODEC
	a (ILjava/util/List;)Ljava/lang/Boolean; lambda$isZeroList$3
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
	a (Lcom/mojang/serialization/OptionalDynamic;I)Z isZeroList
	a (Ljava/lang/Float;)Z lambda$null$2
acj$a net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory
net/minecraft/server/RecipeHolder net/minecraft/world/inventory/RecipeHolder
	a (Lnet/minecraft/server/IRecipe;)V setRecipeUsed
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/IRecipe;)Z setRecipeUsed
	ak_ ()Lnet/minecraft/server/IRecipe; getRecipeUsed
	b (Lnet/minecraft/server/EntityHuman;)V awardUsedRecipes
net/minecraft/server/IStructureAccess net/minecraft/world/level/chunk/FeatureAccess
	a (Lnet/minecraft/server/StructureGenerator;)Lnet/minecraft/server/StructureStart; getStartForFeature
	a (Lnet/minecraft/server/StructureGenerator;J)V addReferenceForFeature
	a (Lnet/minecraft/server/StructureGenerator;Lnet/minecraft/server/StructureStart;)V setStartForFeature
	b (Ljava/util/Map;)V setAllReferences
	b (Lnet/minecraft/server/StructureGenerator;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
	v ()Ljava/util/Map; getAllReferences
net/minecraft/server/LootItemFunctionSetName net/minecraft/world/level/storage/loot/functions/SetNameFunction
	a LOGGER
	b name
	d resolutionContext
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; lambda$createResolver$0
	a (Lnet/minecraft/server/IChatBaseComponent;)Ldaf$a; setName
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/LootTableInfo$EntityTarget;)Ldaf$a; setName
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/LootTableInfo$EntityTarget;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$setName$3
	a (Lnet/minecraft/server/IChatBaseComponent;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunction; lambda$setName$2
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionSetName;)Lnet/minecraft/server/IChatBaseComponent; access$000
	a (Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/LootTableInfo$EntityTarget;)Ljava/util/function/UnaryOperator; createResolver
	b ()Lnet/minecraft/server/LootItemFunctionType; getType
	b (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; lambda$createResolver$1
	b (Lnet/minecraft/server/LootItemFunctionSetName;)Lnet/minecraft/server/LootTableInfo$EntityTarget; access$100
net/minecraft/server/LootDeserializationContext net/minecraft/advancements/critereon/DeserializationContext
	a LOGGER
	b id
	c predicateManager
	d predicateGson
	a ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
	a (Lcom/google/gson/JsonArray;Ljava/lang/String;Lnet/minecraft/server/LootContextParameterSet;)[Lnet/minecraft/server/LootItemCondition; deserializeConditions
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V lambda$deserializeConditions$1
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootTable; lambda$deserializeConditions$0
net/minecraft/server/PacketPlayOutAutoRecipe net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket
	a containerId
	b recipe
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getRecipe
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getContainerId
net/minecraft/server/GameProfileBanList net/minecraft/server/players/UserBanList
	a ()[Ljava/lang/String; getUserList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/JsonListEntry; createEntry
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; find
	b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
net/minecraft/server/VoxelShapeMergerList net/minecraft/world/phys/shapes/IndirectMerger
	a result
	b firstIndices
	c secondIndices
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Ldcw$a;)Z forMergedIndexes
net/minecraft/server/WorldGenFeatureDisk net/minecraft/world/level/levelgen/feature/BaseDiskFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureCircleConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/SessionLock$ExceptionWorldConflict net/minecraft/util/DirectoryLock$LockException
	a (Ljava/nio/file/Path;)Lnet/minecraft/server/SessionLock$ExceptionWorldConflict; alreadyLocked
net/minecraft/server/PathfinderGoalMoveTowardsRestriction net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/server/PathfinderFlying net/minecraft/world/level/pathfinder/FlyNodeEvaluator
	a ()V done
	a (DDD)Lnet/minecraft/server/PathDestination; getGoal
	a (III)Lnet/minecraft/server/PathPoint; getNode
	a (Lnet/minecraft/server/ChunkCache;Lnet/minecraft/server/EntityInsentient;)V prepare
	a (Lnet/minecraft/server/EntityInsentient;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;IIILnet/minecraft/server/EntityInsentient;IIIZZ)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/PathPoint;)Z hasMalus
	a ([Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)I getNeighbors
	b ()Lnet/minecraft/server/PathPoint; getStart
	b (Lnet/minecraft/server/PathPoint;)Z isOpen
mj$1 net/minecraft/nbt/ListTag$1
	a ()Ljava/lang/String; getName
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagList; load
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; load
net/minecraft/server/WorldGenFeatureDefinedStructurePoolSingle net/minecraft/world/level/levelgen/feature/structures/SinglePoolElement
	a TEMPLATE_CODEC
	b CODEC
	c template
	d processors
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; getType
	a (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encodeTemplate
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	a (Lnet/minecraft/server/DefinedStructureManager;)Lnet/minecraft/server/DefinedStructure; getTemplate
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Z)Ljava/util/List; getDataMarkers
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;Z)Z place
	a (Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;Z)Lnet/minecraft/server/DefinedStructureInfo; getSettings
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolSingle;)Lcom/mojang/datafixers/util/Either; lambda$templateCodec$2
	b ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; processorsCodec
	b (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolSingle;)Ljava/util/function/Supplier; lambda$processorsCodec$1
	c ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; templateCodec
	h ()Lnet/minecraft/server/ProcessorList; lambda$new$3
net/minecraft/server/Path net/minecraft/world/level/pathfinder/BinaryHeap
	a heap
	b size
	a ()V clear
	a (I)V upHeap
	a (Lnet/minecraft/server/PathPoint;)Lnet/minecraft/server/PathPoint; insert
	a (Lnet/minecraft/server/PathPoint;F)V changeCost
	b ()Lnet/minecraft/server/PathPoint; peek
	b (I)V downHeap
	b (Lnet/minecraft/server/PathPoint;)V remove
	c ()Lnet/minecraft/server/PathPoint; pop
	d ()I size
	e ()Z isEmpty
	f ()[Lnet/minecraft/server/PathPoint; getHeap
bxw net/minecraft/world/level/block/LevelEvent
dew$a com/mojang/blaze3d/platform/Window$WindowInitFailed
net/minecraft/server/WorldGenMineshaftPieces$WorldGenMineshaftCross net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCrossing
	b direction
	c isTwoFloored
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/StructureBoundingBox; findCrossing
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureBoundingBox;IIII)V placeSupportPillar
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/PacketStatusInStart net/minecraft/network/protocol/status/ServerboundStatusRequestPacket
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketStatusInListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/MobSpawnerCat net/minecraft/world/entity/npc/CatSpawner
	a nextTick
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;)I spawnCat
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)I spawnInVillage
	a (Lnet/minecraft/server/WorldServer;ZZ)I tick
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)I spawnInHut
net/minecraft/server/PersistentStructureLegacy net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler
	a CURRENT_TO_LEGACY_MAP
	b LEGACY_TO_CURRENT_MAP
	c hasLegacyData
	d dataMap
	e indexMap
	f legacyKeys
	g currentKeys
	a (II)Z isUnhandledStructureStart
	a (IILjava/lang/String;)Z hasLegacyStart
	a (J)V removeIndex
	a (Ljava/lang/String;)Lnet/minecraft/server/PersistentIndexed; lambda$populateCaches$3
	a (Ljava/util/HashMap;)V lambda$static$1
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; updateFromLegacy
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/NBTTagCompound; updateStructureStart
	a (Lnet/minecraft/server/ResourceKey;Lnet/minecraft/server/WorldPersistentData;)Lnet/minecraft/server/PersistentStructureLegacy; getLegacyStructureHandler
	a (Lnet/minecraft/server/WorldPersistentData;)V populateCaches
	b (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/Long2ObjectMap; lambda$populateCaches$2
	b (Ljava/util/HashMap;)V lambda$static$0
net/minecraft/server/CompletionProviders net/minecraft/commands/synchronization/SuggestionProviders
	a ASK_SERVER
	b ALL_RECIPES
	c AVAILABLE_SOUNDS
	d AVAILABLE_BIOMES
	e SUMMONABLE_ENTITIES
	f PROVIDERS_BY_NAME
	g DEFAULT_NAME
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$5
	a (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lnet/minecraft/server/MinecraftKey; getName
	a (Lnet/minecraft/server/EntityTypes;)Lcom/mojang/brigadier/Message; lambda$null$4
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; getProvider
	a (Lnet/minecraft/server/MinecraftKey;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; register
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$3
	b (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; safelySwap
	c (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$2
	d (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$1
	e (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
net/minecraft/server/SourceBlock net/minecraft/core/BlockSourceImpl
	a level
	b pos
	a ()D x
	b ()D y
	c ()D z
	d ()Lnet/minecraft/server/BlockPosition; getPos
	e ()Lnet/minecraft/server/IBlockData; getBlockState
	f ()Lnet/minecraft/server/Material; getMaterial
	g ()Lnet/minecraft/server/TileEntity; getEntity
	h ()Lnet/minecraft/server/WorldServer; getLevel
net/minecraft/server/PacketPlayOutOpenWindowMerchant net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket
	a containerId
	b offers
	c villagerLevel
	d villagerXp
	e showProgress
	f canRestock
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/MerchantRecipeList; getOffers
	d ()I getVillagerLevel
	e ()I getVillagerXp
	f ()Z showProgress
	g ()Z canRestock
hc$1 net/minecraft/core/particles/BlockParticleOption$1
	a (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParamBlock; fromCommand
	a (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParamBlock; fromNetwork
	b (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParam; fromCommand
	b (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParam; fromNetwork
net/minecraft/server/ItemDye net/minecraft/world/item/DyeItem
	a ITEM_BY_COLOR
	b dyeColor
	a (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/ItemDye; byColor
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interactLivingEntity
	d ()Lnet/minecraft/server/EnumColor; getDyeColor
net/minecraft/server/RecipeSerializerComplex net/minecraft/world/item/crafting/SimpleRecipeSerializer
	v constructor
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
net/minecraft/server/BlockPropertyTrackPosition net/minecraft/world/level/block/state/properties/RailShape
	k name
	l $VALUES
	a ()Ljava/lang/String; getSerializedName
	b ()Ljava/lang/String; getName
	c ()Z isAscending
net/minecraft/server/CustomFunctionCallbackTag net/minecraft/world/level/timers/FunctionTagCallback
	a tagId
	a (Ljava/lang/Object;Lnet/minecraft/server/CustomFunctionCallbackTimerQueue;J)V handle
	a (Lnet/minecraft/server/CustomFunctionCallbackTag;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/CustomFunctionCallbackTimerQueue;J)V handle
net/minecraft/server/LootIntegerLimit net/minecraft/world/level/storage/loot/IntLimiter
	a min
	b max
	c op
	a (I)Lnet/minecraft/server/LootIntegerLimit; lowerBound
	a (II)Lnet/minecraft/server/LootIntegerLimit; clamp
	a (III)I lambda$new$3
	a (Lnet/minecraft/server/LootIntegerLimit;)Ljava/lang/Integer; access$100
	b (I)Lnet/minecraft/server/LootIntegerLimit; upperBound
	b (II)I lambda$new$2
	b (Lnet/minecraft/server/LootIntegerLimit;)Ljava/lang/Integer; access$200
	c (I)I lambda$new$0
	c (II)I lambda$new$1
net/minecraft/server/IOWorker net/minecraft/world/level/chunk/storage/IOWorker
	a LOGGER
	b shutdownRequested
	c mailbox
	d storage
	e pendingWrites
	a ()Ljava/util/concurrent/CompletableFuture; synchronize
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$null$4
	a (Lcgs$a;)Ljava/util/concurrent/CompletableFuture; lambda$null$3
	a (Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage; lambda$synchronize$7
	a (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; submitTask
	a (Ljava/util/function/Supplier;Lnet/minecraft/server/Mailbox;)Laod$b; lambda$submitTask$9
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/NBTTagCompound; load
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lcgs$a;)V runStore
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/NBTTagCompound;)Ljava/util/concurrent/CompletableFuture; store
	a (Lnet/minecraft/server/Mailbox;)Laod$b; lambda$close$11
	a (Lnet/minecraft/server/Mailbox;Ljava/util/function/Supplier;)V lambda$null$8
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/ChunkCoordIntPair;)Lcgs$a; lambda$null$0
	b ()V storePendingChunk
	b (Lnet/minecraft/server/ChunkCoordIntPair;)Lcom/mojang/datafixers/util/Either; lambda$load$2
	b (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/NBTTagCompound;)Lcom/mojang/datafixers/util/Either; lambda$store$1
	b (Lnet/minecraft/server/Mailbox;)V lambda$null$10
	c ()V tellStorePending
	d ()Lcom/mojang/datafixers/util/Either; lambda$null$6
	e ()Lcom/mojang/datafixers/util/Either; lambda$synchronize$5
net/minecraft/server/BlockPropertyRedstoneSide net/minecraft/world/level/block/state/properties/RedstoneSide
	d name
	e $VALUES
	a ()Ljava/lang/String; getSerializedName
	b ()Z isConnected
das$1 net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$1
net/minecraft/server/DataConverterAdvancementBase net/minecraft/util/datafix/fixes/AdvancementsRenameFix
	a name
	b renamer
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$2
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$1
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$null$0
net/minecraft/server/WorldGenFeatureSeaGrass net/minecraft/world/level/levelgen/feature/SeagrassFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfigurationChance;)Z place
bss$d net/minecraft/world/level/biome/Biome$ClimateSettings
	a CODEC
	b precipitation
	c temperature
	d temperatureModifier
	e downfall
	a (Lbss$d;)Lnet/minecraft/server/BiomeBase$Precipitation; access$200
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	b (Lbss$d;)Lnet/minecraft/server/BiomeBase$TemperatureModifier; access$300
	c (Lbss$d;)F access$400
	d (Lbss$d;)F access$500
	e (Lbss$d;)Ljava/lang/Float; lambda$null$3
	f (Lbss$d;)Lnet/minecraft/server/BiomeBase$TemperatureModifier; lambda$null$2
	g (Lbss$d;)Ljava/lang/Float; lambda$null$1
	h (Lbss$d;)Lnet/minecraft/server/BiomeBase$Precipitation; lambda$null$0
net/minecraft/server/NBTTagFloat net/minecraft/nbt/FloatTag
	a ZERO
	b TYPE
	a ()B getId
	a (F)Lnet/minecraft/server/NBTTagFloat; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTTagType; getType
	c ()Lnet/minecraft/server/NBTBase; copy
	d ()Lnet/minecraft/server/NBTTagFloat; copy
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
net/minecraft/server/NBTTagEnd net/minecraft/nbt/EndTag
	a TYPE
	b INSTANCE
	a ()B getId
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTTagType; getType
	c ()Lnet/minecraft/server/NBTBase; copy
	d ()Lnet/minecraft/server/NBTTagEnd; copy
net/minecraft/server/CommandPublish net/minecraft/server/commands/PublishCommand
	a ERROR_FAILED
	b ERROR_ALREADY_PUBLISHED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	a (Lnet/minecraft/server/CommandListenerWrapper;)Z lambda$register$1
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I publish
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
bss$c net/minecraft/world/level/biome/Biome$ClimateParameters
	a CODEC
	b temperature
	c humidity
	d altitude
	e weirdness
	f offset
	a (Lbss$c;)F fitness
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	b (Lbss$c;)Ljava/lang/Float; lambda$null$4
	c (Lbss$c;)Ljava/lang/Float; lambda$null$3
	d (Lbss$c;)Ljava/lang/Float; lambda$null$2
	e (Lbss$c;)Ljava/lang/Float; lambda$null$1
	f (Lbss$c;)Ljava/lang/Float; lambda$null$0
czz$1 net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$1
net/minecraft/server/BlockRedstoneTorch$RedstoneUpdateInfo net/minecraft/world/level/block/RedstoneTorchBlock$Toggle
	a pos
	b when
	a (Lnet/minecraft/server/BlockRedstoneTorch$RedstoneUpdateInfo;)J access$000
	b (Lnet/minecraft/server/BlockRedstoneTorch$RedstoneUpdateInfo;)Lnet/minecraft/server/BlockPosition; access$100
net/minecraft/server/AttributeProvider net/minecraft/world/entity/ai/attributes/AttributeSupplier
	a instances
	a ()Lnet/minecraft/server/AttributeProvider$Builder; builder
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/AttributeBase;)Lnet/minecraft/server/AttributeModifiable; createInstance
	a (Lnet/minecraft/server/AttributeBase;)D getValue
	a (Lnet/minecraft/server/AttributeBase;Ljava/util/UUID;)D getModifierValue
	b (Lnet/minecraft/server/AttributeBase;)D getBaseValue
	b (Lnet/minecraft/server/AttributeBase;Ljava/util/UUID;)Z hasModifier
	c (Lnet/minecraft/server/AttributeBase;)Z hasAttribute
	d (Lnet/minecraft/server/AttributeBase;)Lnet/minecraft/server/AttributeModifiable; getAttributeInstance
cdz$1 net/minecraft/world/level/block/piston/PistonMath$1
	a $SwitchMap$net$minecraft$core$Direction
dxv$a net/minecraft/client/particle/MobAppearanceParticle$Provider
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dxe$1 net/minecraft/client/particle/CampfireSmokeParticle$1
cus$1 net/minecraft/world/level/material/FlowingFluid$1
net/minecraft/server/ContainerBlastFurnace net/minecraft/world/inventory/BlastFurnaceMenu
net/minecraft/server/WorldGenDecoratorRangeBiased net/minecraft/world/level/levelgen/placement/BiasedRangeDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureChanceDecoratorRangeConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/ItemFishingRod net/minecraft/world/item/FishingRodItem
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/EntityHuman;)V lambda$use$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	c ()I getEnchantmentValue
net/minecraft/server/EntityHanging net/minecraft/world/entity/decoration/HangingEntity
	b HANGING_ENTITY
	blockPosition pos
	e checkInterval
	a (I)D offs
	a (Lnet/minecraft/server/Entity;)V dropItem
	a (Lnet/minecraft/server/EnumBlockMirror;)F mirror
	a (Lnet/minecraft/server/EnumBlockRotation;)F rotate
	a (Lnet/minecraft/server/EnumMoveType;Lnet/minecraft/server/Vec3D;)V move
	a (Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityItem; spawnAtLocation
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLightning;)V thunderHit
	aS ()Z isPickable
	aU ()Z repositionEntityAfterLoad
	b (Lnet/minecraft/server/Entity;)Z lambda$static$0
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bY ()Lnet/minecraft/server/EnumDirection; getDirection
	d (DDD)V setPos
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	e ()V defineSynchedData
	getBlockPosition ()Lnet/minecraft/server/BlockPosition; getPos
	getHangingHeight ()I getHeight
	getHangingWidth ()I getWidth
	i (DDD)V push
	j ()V tick
	playPlaceSound ()V playPlacementSound
	t (Lnet/minecraft/server/Entity;)Z skipAttackInteraction
	updateBoundingBox ()V recalculateBoundingBox
	x_ ()V refreshDimensions
net/minecraft/server/WorldGenStage net/minecraft/world/level/levelgen/GenerationStep
bxi$1 net/minecraft/world/level/block/HopperBlock$1
	a $SwitchMap$net$minecraft$core$Direction
asc$b$1 net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$1
	a (Lnet/minecraft/server/Behavior;)Z lambda$apply$0
	a (Lnet/minecraft/server/WeightedList;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V apply
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;JLnet/minecraft/server/Behavior;)Z lambda$apply$1
net/minecraft/server/AreaTransformerIdentity net/minecraft/world/level/newbiome/layer/traits/DimensionOffset0Transformer
	a (I)I getParentX
	b (I)I getParentY
asc$b$2 net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$2
	a (Lnet/minecraft/server/Behavior;)Z lambda$apply$0
	a (Lnet/minecraft/server/WeightedList;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V apply
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;JLnet/minecraft/server/Behavior;)V lambda$apply$1
net/minecraft/server/WorldGenDecoratorNetherFire net/minecraft/world/level/levelgen/placement/nether/FireDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
baw$a net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal
	i this$0
	j wolf
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLlama;)Z avoidLlama
	c ()V start
	e ()V tick
net/minecraft/server/LightEngineStorageArray net/minecraft/world/level/lighting/DataLayerStorageMap
	a map
	b lastSectionKeys
	c lastSections
	d cacheEnabled
	a (J)V copyDataLayer
	a (JLnet/minecraft/server/NibbleArray;)V setLayer
	b ()Lnet/minecraft/server/LightEngineStorageArray; copy
	b (J)Z hasLayer
	c ()V clearCache
	c (J)Lnet/minecraft/server/NibbleArray; getLayer
	d ()V disableCache
	d (J)Lnet/minecraft/server/NibbleArray; removeLayer
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector7 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/ContainerWorkbench net/minecraft/world/inventory/CraftingMenu
	containerAccess access
	craftInventory craftSlots
	f player
	resultInventory resultSlots
	a (ILnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/InventoryCraftResult;)V slotChangedCraftingGrid
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$removed$1
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/IRecipe;)Z recipeMatches
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$quickMoveStack$2
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V lambda$slotsChanged$0
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()V clearCraftingContent
	f ()I getResultSlotIndex
	g ()I getGridWidth
	h ()I getGridHeight
	i ()I getSize
	m ()Lnet/minecraft/server/RecipeBookType; getRecipeBookType
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector6 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXYRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
czz$a net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder
	a enchantments
	a ()Lczz$a; getThis
	a (Lnet/minecraft/server/Enchantment;)Lczz$a; withEnchantment
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Ldaf$a; getThis
czz$b net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionEnchant; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionEnchant;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$deserialize$0
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector1 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleTopRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/ITickable net/minecraft/world/level/block/entity/TickableBlockEntity
net/minecraft/server/WorldGenLiquids net/minecraft/world/level/levelgen/feature/SpringFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureHellFlowingLavaConfiguration;)Z place
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector5 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/DefinedStructureProcessorBlockAge net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor
	a CODEC
	b mossiness
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Ljava/util/Random;)Lnet/minecraft/server/IBlockData; maybeReplaceFullStoneBlock
	a (Ljava/util/Random;Lnet/minecraft/server/Block;)Lnet/minecraft/server/IBlockData; getRandomFacingStairs
	a (Ljava/util/Random;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; maybeReplaceStairs
	a (Ljava/util/Random;[Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; getRandomBlock
	a (Ljava/util/Random;[Lnet/minecraft/server/IBlockData;[Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; getRandomBlock
	a (Lnet/minecraft/server/DefinedStructureProcessorBlockAge;)Ljava/lang/Float; lambda$static$0
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
	b (Ljava/util/Random;)Lnet/minecraft/server/IBlockData; maybeReplaceSlab
	c (Ljava/util/Random;)Lnet/minecraft/server/IBlockData; maybeReplaceWall
	d (Ljava/util/Random;)Lnet/minecraft/server/IBlockData; maybeReplaceObsidian
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector4 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYZRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/PacketEncoder net/minecraft/network/PacketEncoder
	a LOGGER
	b MARKER
	c flow
	a (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/server/Packet;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector3 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleZRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector2 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
dls$a net/minecraft/client/gui/components/ObjectSelectionList$Entry
	c_ (Z)Z changeFocus
net/minecraft/server/NetworkManagerServer net/minecraft/network/RateKickingConnection
	g LOGGER
	h EXCEED_REASON
	i rateLimitPacketsPerSecond
	a (Lio/netty/util/concurrent/Future;)V lambda$tickSecond$0
	b ()V tickSecond
net/minecraft/server/ItemEgg net/minecraft/world/item/EggItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
wx$b net/minecraft/server/commands/ExecuteCommand$CommandPredicate
wx$a net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate
net/minecraft/server/DataConverterFlattenState net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
drl$b net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlaySmeltingRecipeButton
	c this$0
	a (Lnet/minecraft/server/IRecipe;)V calculateIngredientsPositions
drl$a net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton
	a ingredientPos
	b this$0
	c recipe
	d isCraftable
	a (Ldrl$a;)Lnet/minecraft/server/IRecipe; access$000
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	a (Lnet/minecraft/server/IRecipe;)V calculateIngredientsPositions
	b (Ldfj;IIF)V renderButton
net/minecraft/server/ItemPotionThrowable net/minecraft/world/item/ThrowablePotionItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/PacketPlayOutPlayerInfo$PlayerInfoData net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate
	a this$0
	b latency
	c gameMode
	d profile
	e displayName
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	b ()I getLatency
	c ()Lnet/minecraft/server/EnumGamemode; getGameMode
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/EnumChatFormat net/minecraft/ChatFormatting
	A isFormat
	B toString
	C id
	D color
	E $VALUES
	character code
	w FORMATTING_BY_NAME
	x STRIP_FORMATTING_PATTERN
	y name
	a ()C getChar
	a (C)Lnet/minecraft/server/EnumChatFormat; getByCode
	a (I)Lnet/minecraft/server/EnumChatFormat; getById
	a (Ljava/lang/String;)Ljava/lang/String; stripFormatting
	a (Lnet/minecraft/server/EnumChatFormat;)Lnet/minecraft/server/EnumChatFormat; lambda$static$1
	a (ZZ)Ljava/util/Collection; getNames
	b ()I getId
	b (Ljava/lang/String;)Lnet/minecraft/server/EnumChatFormat; getByName
	b (Lnet/minecraft/server/EnumChatFormat;)Ljava/lang/String; lambda$static$0
	c (Ljava/lang/String;)Ljava/lang/String; cleanName
	d ()Z isColor
	e ()Ljava/lang/Integer; getColor
	f ()Ljava/lang/String; getName
czi$1 net/minecraft/world/level/storage/loot/entries/EmptyLootItem$1
net/minecraft/server/WorldGenFeatureChorusPlant net/minecraft/world/level/levelgen/feature/ChorusPlantFeature
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/EntitySize net/minecraft/world/entity/EntityDimensions
	c fixed
	a (DDD)Lnet/minecraft/server/AxisAlignedBB; makeBoundingBox
	a (F)Lnet/minecraft/server/EntitySize; scale
	a (FF)Lnet/minecraft/server/EntitySize; scale
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/AxisAlignedBB; makeBoundingBox
	b (FF)Lnet/minecraft/server/EntitySize; scalable
	c (FF)Lnet/minecraft/server/EntitySize; fixed
dxe$b net/minecraft/client/particle/CampfireSmokeParticle$SignalProvider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
dxe$a net/minecraft/client/particle/CampfireSmokeParticle$CosyProvider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/LootTableInfo$Builder net/minecraft/world/level/storage/loot/LootContext$Builder
	a level
	b params
	c dynamicDrops
	d random
	e luck
	a ()Lnet/minecraft/server/WorldServer; getLevel
	a (F)Lnet/minecraft/server/LootTableInfo$Builder; withLuck
	a (J)Lnet/minecraft/server/LootTableInfo$Builder; withOptionalRandomSeed
	a (JLjava/util/Random;)Lnet/minecraft/server/LootTableInfo$Builder; withOptionalRandomSeed
	a (Ljava/util/Random;)Lnet/minecraft/server/LootTableInfo$Builder; withRandom
	a (Lnet/minecraft/server/LootContextParameter;)Ljava/lang/Object; getParameter
	a (Lnet/minecraft/server/MinecraftKey;Lcys$b;)Lnet/minecraft/server/LootTableInfo$Builder; withDynamicDrop
	b (Lnet/minecraft/server/LootContextParameter;)Ljava/lang/Object; getOptionalParameter
	build (Lnet/minecraft/server/LootContextParameterSet;)Lnet/minecraft/server/LootTableInfo; create
	set (Lnet/minecraft/server/LootContextParameter;Ljava/lang/Object;)Lnet/minecraft/server/LootTableInfo$Builder; withParameter
	setOptional (Lnet/minecraft/server/LootContextParameter;Ljava/lang/Object;)Lnet/minecraft/server/LootTableInfo$Builder; withOptionalParameter
das$b net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetStewEffect; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetStewEffect;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$deserialize$0
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
net/minecraft/server/WorldGenSurfaceEmpty net/minecraft/world/level/levelgen/surfacebuilders/NopeSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/WorldGenFeatureRuinedPortal net/minecraft/world/level/levelgen/feature/RuinedPortalFeature
	u STRUCTURE_LOCATION_PORTALS
	v STRUCTURE_LOCATION_GIANT_PORTALS
	a ()Lckx$a; getStartFactory
	a (Ljava/util/Random;II)I randomIntInclusive
	a (Ljava/util/Random;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldGenFeatureRuinedPortalPieces$Position;ZIILnet/minecraft/server/StructureBoundingBox;)I access$200
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BiomeBase;)Z access$300
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockAccess; lambda$findSuitableY$0
	b (Ljava/util/Random;II)I getRandomWithinInterval
	b (Ljava/util/Random;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/WorldGenFeatureRuinedPortalPieces$Position;ZIILnet/minecraft/server/StructureBoundingBox;)I findSuitableY
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BiomeBase;)Z isCold
	d ()[Ljava/lang/String; access$000
	e ()[Ljava/lang/String; access$100
dab$1 net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$1
cjb$a net/minecraft/world/level/levelgen/feature/DesertPyramidFeature$FeatureStart
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)V generatePieces
das$a net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder
	a effectDurationMap
	a ()Ldas$a; getThis
	a (Lnet/minecraft/server/MobEffectList;Lnet/minecraft/server/LootValueBounds;)Ldas$a; withEffect
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Ldaf$a; getThis
net/minecraft/server/ScheduleBuilder net/minecraft/world/entity/schedule/ScheduleBuilder
	a schedule
	b transitions
	a ()Lnet/minecraft/server/Schedule; build
	a (ILnet/minecraft/server/Activity;)Lnet/minecraft/server/ScheduleBuilder; changeActivityAt
	a (Lbhf$a;)V lambda$build$1
	a (Lbhf$a;Lnet/minecraft/server/ScheduleActivity;)V lambda$null$0
net/minecraft/server/ForcedChunk net/minecraft/world/level/ForcedChunksSavedData
	a chunks
	a ()Lit/unimi/dsi/fastutil/longs/LongSet; getChunks
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
net/minecraft/server/ArgumentNBTTag net/minecraft/commands/arguments/CompoundTagArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/ArgumentNBTTag; compoundTag
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/NBTTagCompound; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/NBTTagCompound; getCompoundTag
dia$b com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionList
	a this$0
	a (DDI)Z mouseClicked
	a (I)V selectItem
	a (IIDDI)V itemClicked
	a (Ldfj;)V renderBackground
	a (Ldgk;)V addEntry
	a (Ldia$a;)V setSelected
	a (Ldlc$a;)V setSelected
	b ()Z isFocused
	b (I)V selectInviteListItem
	c ()I getMaxPosition
	d ()I getRowWidth
	e ()I getScrollbarPosition
dia$c com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$UserAction
	a TOGGLE_OP
	b REMOVE
	c NONE
	d $VALUES
net/minecraft/server/ServerPing$Serializer net/minecraft/network/protocol/status/ServerStatus$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/ServerPing; deserialize
	a (Lnet/minecraft/server/ServerPing;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/BehaviorCelebrateDeath net/minecraft/world/entity/ai/behavior/StartCelebratingIfTargetDead
	b celebrateDuration
	c dancePredicate
	a (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityLiving; getAttackTarget
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
dia$a com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry
	a this$0
	b playerInfo
	a (Ldfj;I)V lambda$renderInvitedItem$0
	a (Ldfj;IIIIIIIZF)V render
	a (Ldfj;Ldgk;IIII)V renderInvitedItem
bcl$1 net/minecraft/world/entity/decoration/HangingEntity$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
net/minecraft/server/ItemEndCrystal net/minecraft/world/item/EndCrystalItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	e (Lnet/minecraft/server/ItemStack;)Z isFoil
gw$20 net/minecraft/core/dispenser/DispenseItemBehavior$4
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityEgg;)V lambda$getProjectile$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
gw$21 net/minecraft/core/dispenser/DispenseItemBehavior$5
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntitySnowball;)V lambda$getProjectile$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
net/minecraft/server/ChunkMapDistance net/minecraft/server/level/DistanceManager
	a LOGGER
	b PLAYER_TICKET_LEVEL
	c playersPerChunk
	currentTick ticketTickCounter
	f naturalSpawnChunkCounter
	g playerTicketManager
	i ticketThrottler
	j ticketThrottlerInput
	k ticketThrottlerReleaser
	l ticketsToRelease
	m mainThreadExecutor
	pendingChunkUpdates chunksToUpdateFutures
	ticketLevelTracker ticketTracker
	a (I)V updatePlayerTickets
	a (J)Z isChunkToRemove
	a (JILnet/minecraft/server/PlayerChunk;I)Lnet/minecraft/server/PlayerChunk; updateChunkScheduling
	a (JLcom/mojang/datafixers/util/Either;)V lambda$runAllUpdates$5
	a (Ljava/lang/String;)V dumpTickets
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V updateChunkForced
	a (Lnet/minecraft/server/ChunkMapDistance;)Lit/unimi/dsi/fastutil/longs/Long2ObjectMap; access$000
	a (Lnet/minecraft/server/ChunkMapDistance;JLnet/minecraft/server/Ticket;)V access$700
	a (Lnet/minecraft/server/PlayerChunkMap;)Z runAllUpdates
	a (Lnet/minecraft/server/PlayerChunkMap;Lnet/minecraft/server/PlayerChunk;)V lambda$runAllUpdates$1
	a (Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/EntityPlayer;)V addPlayer
	a (Lnet/minecraft/server/Ticket;)Z lambda$runAllUpdates$2
	a (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V addTicket
	addTicket (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V addRegionTicket
	b ()I getNaturalSpawnChunkCount
	b (J)Lnet/minecraft/server/PlayerChunk; getChunk
	b (Lnet/minecraft/server/ChunkMapDistance;)Lnet/minecraft/server/Mailbox; access$300
	b (Lnet/minecraft/server/ChunkMapDistance;JLnet/minecraft/server/Ticket;)V access$800
	b (Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/EntityPlayer;)V removePlayer
	b (Lnet/minecraft/server/Ticket;)Z lambda$purgeStaleTickets$0
	b (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V removeTicket
	c ()Ljava/lang/String; getDebugStatus
	c (J)Ljava/lang/String; getTicketDebugString
	c (Lnet/minecraft/server/ChunkMapDistance;)Lnet/minecraft/server/Mailbox; access$400
	d ()Lorg/apache/logging/log4j/Logger; access$100
	d (J)Z hasPlayersNearby
	d (Lnet/minecraft/server/ChunkMapDistance;)Lnet/minecraft/server/ChunkTaskQueueSorter; access$500
	e ()I access$200
	e (J)Lnet/minecraft/server/ArraySetSorted; getTickets
	e (Lnet/minecraft/server/ChunkMapDistance;)Ljava/util/concurrent/Executor; access$600
	f ()V lambda$null$3
	f (J)Lit/unimi/dsi/fastutil/objects/ObjectSet; lambda$addPlayer$7
	f (Lnet/minecraft/server/ChunkMapDistance;)Lit/unimi/dsi/fastutil/longs/LongSet; access$900
	g (J)Lnet/minecraft/server/ArraySetSorted; lambda$getTickets$6
	g (Lnet/minecraft/server/ChunkMapDistance;)Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap; access$1000
	getLowestTicketLevel (Lnet/minecraft/server/ArraySetSorted;)I getTicketLevelAt
	h (J)V lambda$null$4
	h (Lnet/minecraft/server/ChunkMapDistance;)Ljava/util/Set; access$1100
	purgeTickets ()V purgeStaleTickets
	removeTicket (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V removeRegionTicket
gw$24 net/minecraft/core/dispenser/DispenseItemBehavior$8
net/minecraft/server/SpawnerCreature net/minecraft/world/level/NaturalSpawner
	a LOGGER
	b MAGIC_NUMBER
	c SPAWNING_CATEGORIES
	a ()I access$100
	a (I)[Lnet/minecraft/server/EnumCreatureType; lambda$static$1
	a (ILjava/lang/Iterable;Lbsd$b;)Lbsd$d; createState
	a (Lbsd$d;Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/IChunkAccess;)V lambda$spawnForChunk$4
	a (Lbsd$d;Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IChunkAccess;)Z lambda$spawnForChunk$3
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;Lnet/minecraft/server/SpawnerCreatureProbabilities;Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/Chunk;)V lambda$createState$2
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IChunkAccess;)Lnet/minecraft/server/BiomeBase; access$000
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/IChunkAccess;)V lambda$spawnCategoryForPosition$6
	a (Lnet/minecraft/server/EntityPositionTypes$Surface;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isSpawnPositionOk
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IChunkAccess;)Z lambda$spawnCategoryForPosition$5
	a (Lnet/minecraft/server/EnumCreatureType;)Z lambda$static$0
	a (Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V spawnCategoryForPosition
	a (Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Chunk;Lbsd$c;Lbsd$a;)V spawnCategoryForChunk
	a (Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BlockPosition;Lbsd$c;Lbsd$a;)V spawnCategoryForPosition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;Lnet/minecraft/server/EntityTypes;)Z isValidEmptySpawnBlock
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/EntityTypes;II)Lnet/minecraft/server/BlockPosition; getTopNonCollidingPos
	a (Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/BiomeBase;IILjava/util/Random;)V spawnMobsForChunkGeneration
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Chunk;Lbsd$d;ZZZ)V spawnForChunk
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;D)Z isValidPositionForMob
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/EntityInsentient; getMobForSpawn
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Lbtd$c;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;D)Z isValidSpawnPostitionForType
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;D)Z isRightDistanceToPlayerAndSpawnPoint
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/EnumCreatureType;Lbtd$c;Lnet/minecraft/server/BlockPosition;)Z canSpawnMobAt
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/EnumCreatureType;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lbtd$c; getRandomSpawnMobAt
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BiomeBase;)Ljava/util/List; mobsAt
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IChunkAccess;)Lnet/minecraft/server/BiomeBase; getRoughBiome
	getRandomPosition (Lnet/minecraft/server/World;Lnet/minecraft/server/Chunk;)Lnet/minecraft/server/BlockPosition; getRandomPosWithin
net/minecraft/server/PathfinderGoalWater net/minecraft/world/entity/ai/goal/TryFindWaterGoal
	a mob
	a ()Z canUse
	c ()V start
gw$25 net/minecraft/core/dispenser/DispenseItemBehavior$9
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
gw$22 net/minecraft/core/dispenser/DispenseItemBehavior$6
	a ()F getUncertainty
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityThrownExpBottle;)V lambda$getProjectile$0
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
	b ()F getPower
net/minecraft/server/ChatComponentScore net/minecraft/network/chat/ScoreComponent
	d name
	e selector
	f objective
	a (Ljava/lang/String;Lnet/minecraft/server/CommandListenerWrapper;)Ljava/lang/String; getScore
	a (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/lang/String; findTargetName
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatMutableComponent; resolve
	d ()Lnet/minecraft/server/ChatBaseComponent; plainCopy
	d (Ljava/lang/String;)Lnet/minecraft/server/EntitySelector; parseSelector
	g ()Lnet/minecraft/server/IChatMutableComponent; plainCopy
	h ()Ljava/lang/String; getName
	i ()Lnet/minecraft/server/EntitySelector; getSelector
	j ()Ljava/lang/String; getObjective
	k ()Lnet/minecraft/server/ChatComponentScore; plainCopy
gw$23 net/minecraft/core/dispenser/DispenseItemBehavior$7
net/minecraft/server/SoundEffects net/minecraft/sounds/SoundEvents
	BLOCK_ANCIENT_DEBRIS_BREAK ANCIENT_DEBRIS_BREAK
	BLOCK_ANCIENT_DEBRIS_FALL ANCIENT_DEBRIS_FALL
	BLOCK_ANCIENT_DEBRIS_HIT ANCIENT_DEBRIS_HIT
	BLOCK_ANCIENT_DEBRIS_PLACE ANCIENT_DEBRIS_PLACE
	BLOCK_ANCIENT_DEBRIS_STEP ANCIENT_DEBRIS_STEP
	BLOCK_ANVIL_BREAK ANVIL_BREAK
	BLOCK_ANVIL_DESTROY ANVIL_DESTROY
	BLOCK_ANVIL_FALL ANVIL_FALL
	BLOCK_ANVIL_HIT ANVIL_HIT
	BLOCK_ANVIL_LAND ANVIL_LAND
	BLOCK_ANVIL_PLACE ANVIL_PLACE
	BLOCK_ANVIL_STEP ANVIL_STEP
	BLOCK_ANVIL_USE ANVIL_USE
	BLOCK_BAMBOO_BREAK BAMBOO_BREAK
	BLOCK_BAMBOO_FALL BAMBOO_FALL
	BLOCK_BAMBOO_HIT BAMBOO_HIT
	BLOCK_BAMBOO_PLACE BAMBOO_PLACE
	BLOCK_BAMBOO_SAPLING_BREAK BAMBOO_SAPLING_BREAK
	BLOCK_BAMBOO_SAPLING_HIT BAMBOO_SAPLING_HIT
	BLOCK_BAMBOO_SAPLING_PLACE BAMBOO_SAPLING_PLACE
	BLOCK_BAMBOO_STEP BAMBOO_STEP
	BLOCK_BARREL_CLOSE BARREL_CLOSE
	BLOCK_BARREL_OPEN BARREL_OPEN
	BLOCK_BASALT_BREAK BASALT_BREAK
	BLOCK_BASALT_FALL BASALT_FALL
	BLOCK_BASALT_HIT BASALT_HIT
	BLOCK_BASALT_PLACE BASALT_PLACE
	BLOCK_BASALT_STEP BASALT_STEP
	BLOCK_BEACON_ACTIVATE BEACON_ACTIVATE
	BLOCK_BEACON_AMBIENT BEACON_AMBIENT
	BLOCK_BEACON_DEACTIVATE BEACON_DEACTIVATE
	BLOCK_BEACON_POWER_SELECT BEACON_POWER_SELECT
	BLOCK_BEEHIVE_DRIP BEEHIVE_DRIP
	BLOCK_BEEHIVE_ENTER BEEHIVE_ENTER
	BLOCK_BEEHIVE_EXIT BEEHIVE_EXIT
	BLOCK_BEEHIVE_SHEAR BEEHIVE_SHEAR
	BLOCK_BEEHIVE_WORK BEEHIVE_WORK
	BLOCK_BELL_RESONATE BELL_RESONATE
	BLOCK_BELL_USE BELL_BLOCK
	BLOCK_BLASTFURNACE_FIRE_CRACKLE BLASTFURNACE_FIRE_CRACKLE
	BLOCK_BONE_BLOCK_BREAK BONE_BLOCK_BREAK
	BLOCK_BONE_BLOCK_FALL BONE_BLOCK_FALL
	BLOCK_BONE_BLOCK_HIT BONE_BLOCK_HIT
	BLOCK_BONE_BLOCK_PLACE BONE_BLOCK_PLACE
	BLOCK_BONE_BLOCK_STEP BONE_BLOCK_STEP
	BLOCK_BREWING_STAND_BREW BREWING_STAND_BREW
	BLOCK_BUBBLE_COLUMN_BUBBLE_POP BUBBLE_COLUMN_BUBBLE_POP
	BLOCK_BUBBLE_COLUMN_UPWARDS_AMBIENT BUBBLE_COLUMN_UPWARDS_AMBIENT
	BLOCK_BUBBLE_COLUMN_UPWARDS_INSIDE BUBBLE_COLUMN_UPWARDS_INSIDE
	BLOCK_BUBBLE_COLUMN_WHIRLPOOL_AMBIENT BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
	BLOCK_BUBBLE_COLUMN_WHIRLPOOL_INSIDE BUBBLE_COLUMN_WHIRLPOOL_INSIDE
	BLOCK_CAMPFIRE_CRACKLE CAMPFIRE_CRACKLE
	BLOCK_CHAIN_BREAK CHAIN_BREAK
	BLOCK_CHAIN_FALL CHAIN_FALL
	BLOCK_CHAIN_HIT CHAIN_HIT
	BLOCK_CHAIN_PLACE CHAIN_PLACE
	BLOCK_CHAIN_STEP CHAIN_STEP
	BLOCK_CHEST_CLOSE CHEST_CLOSE
	BLOCK_CHEST_LOCKED CHEST_LOCKED
	BLOCK_CHEST_OPEN CHEST_OPEN
	BLOCK_CHORUS_FLOWER_DEATH CHORUS_FLOWER_DEATH
	BLOCK_CHORUS_FLOWER_GROW CHORUS_FLOWER_GROW
	BLOCK_COMPARATOR_CLICK COMPARATOR_CLICK
	BLOCK_COMPOSTER_EMPTY COMPOSTER_EMPTY
	BLOCK_COMPOSTER_FILL COMPOSTER_FILL
	BLOCK_COMPOSTER_FILL_SUCCESS COMPOSTER_FILL_SUCCESS
	BLOCK_COMPOSTER_READY COMPOSTER_READY
	BLOCK_CONDUIT_ACTIVATE CONDUIT_ACTIVATE
	BLOCK_CONDUIT_AMBIENT CONDUIT_AMBIENT
	BLOCK_CONDUIT_AMBIENT_SHORT CONDUIT_AMBIENT_SHORT
	BLOCK_CONDUIT_ATTACK_TARGET CONDUIT_ATTACK_TARGET
	BLOCK_CONDUIT_DEACTIVATE CONDUIT_DEACTIVATE
	BLOCK_CORAL_BLOCK_BREAK CORAL_BLOCK_BREAK
	BLOCK_CORAL_BLOCK_FALL CORAL_BLOCK_FALL
	BLOCK_CORAL_BLOCK_HIT CORAL_BLOCK_HIT
	BLOCK_CORAL_BLOCK_PLACE CORAL_BLOCK_PLACE
	BLOCK_CORAL_BLOCK_STEP CORAL_BLOCK_STEP
	BLOCK_CROP_BREAK CROP_BREAK
	BLOCK_DISPENSER_DISPENSE DISPENSER_DISPENSE
	BLOCK_DISPENSER_FAIL DISPENSER_FAIL
	BLOCK_DISPENSER_LAUNCH DISPENSER_LAUNCH
	BLOCK_ENCHANTMENT_TABLE_USE ENCHANTMENT_TABLE_USE
	BLOCK_ENDER_CHEST_CLOSE ENDER_CHEST_CLOSE
	BLOCK_ENDER_CHEST_OPEN ENDER_CHEST_OPEN
	BLOCK_END_GATEWAY_SPAWN END_GATEWAY_SPAWN
	BLOCK_END_PORTAL_FRAME_FILL END_PORTAL_FRAME_FILL
	BLOCK_END_PORTAL_SPAWN END_PORTAL_SPAWN
	BLOCK_FENCE_GATE_CLOSE FENCE_GATE_CLOSE
	BLOCK_FENCE_GATE_OPEN FENCE_GATE_OPEN
	BLOCK_FIRE_AMBIENT FIRE_AMBIENT
	BLOCK_FIRE_EXTINGUISH FIRE_EXTINGUISH
	BLOCK_FUNGUS_BREAK FUNGUS_BREAK
	BLOCK_FUNGUS_FALL FUNGUS_FALL
	BLOCK_FUNGUS_HIT FUNGUS_HIT
	BLOCK_FUNGUS_PLACE FUNGUS_PLACE
	BLOCK_FUNGUS_STEP FUNGUS_STEP
	BLOCK_FURNACE_FIRE_CRACKLE FURNACE_FIRE_CRACKLE
	BLOCK_GILDED_BLACKSTONE_BREAK GILDED_BLACKSTONE_BREAK
	BLOCK_GILDED_BLACKSTONE_FALL GILDED_BLACKSTONE_FALL
	BLOCK_GILDED_BLACKSTONE_HIT GILDED_BLACKSTONE_HIT
	BLOCK_GILDED_BLACKSTONE_PLACE GILDED_BLACKSTONE_PLACE
	BLOCK_GILDED_BLACKSTONE_STEP GILDED_BLACKSTONE_STEP
	BLOCK_GLASS_BREAK GLASS_BREAK
	BLOCK_GLASS_FALL GLASS_FALL
	BLOCK_GLASS_HIT GLASS_HIT
	BLOCK_GLASS_PLACE GLASS_PLACE
	BLOCK_GLASS_STEP GLASS_STEP
	BLOCK_GRASS_BREAK GRASS_BREAK
	BLOCK_GRASS_FALL GRASS_FALL
	BLOCK_GRASS_HIT GRASS_HIT
	BLOCK_GRASS_PLACE GRASS_PLACE
	BLOCK_GRASS_STEP GRASS_STEP
	BLOCK_GRAVEL_BREAK GRAVEL_BREAK
	BLOCK_GRAVEL_FALL GRAVEL_FALL
	BLOCK_GRAVEL_HIT GRAVEL_HIT
	BLOCK_GRAVEL_PLACE GRAVEL_PLACE
	BLOCK_GRAVEL_STEP GRAVEL_STEP
	BLOCK_GRINDSTONE_USE GRINDSTONE_USE
	BLOCK_HONEY_BLOCK_BREAK HONEY_BLOCK_BREAK
	BLOCK_HONEY_BLOCK_FALL HONEY_BLOCK_FALL
	BLOCK_HONEY_BLOCK_HIT HONEY_BLOCK_HIT
	BLOCK_HONEY_BLOCK_PLACE HONEY_BLOCK_PLACE
	BLOCK_HONEY_BLOCK_SLIDE HONEY_BLOCK_SLIDE
	BLOCK_HONEY_BLOCK_STEP HONEY_BLOCK_STEP
	BLOCK_IRON_DOOR_CLOSE IRON_DOOR_CLOSE
	BLOCK_IRON_DOOR_OPEN IRON_DOOR_OPEN
	BLOCK_IRON_TRAPDOOR_CLOSE IRON_TRAPDOOR_CLOSE
	BLOCK_IRON_TRAPDOOR_OPEN IRON_TRAPDOOR_OPEN
	BLOCK_LADDER_BREAK LADDER_BREAK
	BLOCK_LADDER_FALL LADDER_FALL
	BLOCK_LADDER_HIT LADDER_HIT
	BLOCK_LADDER_PLACE LADDER_PLACE
	BLOCK_LADDER_STEP LADDER_STEP
	BLOCK_LANTERN_BREAK LANTERN_BREAK
	BLOCK_LANTERN_FALL LANTERN_FALL
	BLOCK_LANTERN_HIT LANTERN_HIT
	BLOCK_LANTERN_PLACE LANTERN_PLACE
	BLOCK_LANTERN_STEP LANTERN_STEP
	BLOCK_LAVA_AMBIENT LAVA_AMBIENT
	BLOCK_LAVA_EXTINGUISH LAVA_EXTINGUISH
	BLOCK_LAVA_POP LAVA_POP
	BLOCK_LEVER_CLICK LEVER_CLICK
	BLOCK_LILY_PAD_PLACE LILY_PAD_PLACE
	BLOCK_LODESTONE_BREAK LODESTONE_BREAK
	BLOCK_LODESTONE_FALL LODESTONE_FALL
	BLOCK_LODESTONE_HIT LODESTONE_HIT
	BLOCK_LODESTONE_PLACE LODESTONE_PLACE
	BLOCK_LODESTONE_STEP LODESTONE_STEP
	BLOCK_METAL_BREAK METAL_BREAK
	BLOCK_METAL_FALL METAL_FALL
	BLOCK_METAL_HIT METAL_HIT
	BLOCK_METAL_PLACE METAL_PLACE
	BLOCK_METAL_PRESSURE_PLATE_CLICK_OFF METAL_PRESSURE_PLATE_CLICK_OFF
	BLOCK_METAL_PRESSURE_PLATE_CLICK_ON METAL_PRESSURE_PLATE_CLICK_ON
	BLOCK_METAL_STEP METAL_STEP
	BLOCK_NETHERITE_BLOCK_BREAK NETHERITE_BLOCK_BREAK
	BLOCK_NETHERITE_BLOCK_FALL NETHERITE_BLOCK_FALL
	BLOCK_NETHERITE_BLOCK_HIT NETHERITE_BLOCK_HIT
	BLOCK_NETHERITE_BLOCK_PLACE NETHERITE_BLOCK_PLACE
	BLOCK_NETHERITE_BLOCK_STEP NETHERITE_BLOCK_STEP
	BLOCK_NETHERRACK_BREAK NETHERRACK_BREAK
	BLOCK_NETHERRACK_FALL NETHERRACK_FALL
	BLOCK_NETHERRACK_HIT NETHERRACK_HIT
	BLOCK_NETHERRACK_PLACE NETHERRACK_PLACE
	BLOCK_NETHERRACK_STEP NETHERRACK_STEP
	BLOCK_NETHER_BRICKS_BREAK NETHER_BRICKS_BREAK
	BLOCK_NETHER_BRICKS_FALL NETHER_BRICKS_FALL
	BLOCK_NETHER_BRICKS_HIT NETHER_BRICKS_HIT
	BLOCK_NETHER_BRICKS_PLACE NETHER_BRICKS_PLACE
	BLOCK_NETHER_BRICKS_STEP NETHER_BRICKS_STEP
	BLOCK_NETHER_GOLD_ORE_BREAK NETHER_GOLD_ORE_BREAK
	BLOCK_NETHER_GOLD_ORE_FALL NETHER_GOLD_ORE_FALL
	BLOCK_NETHER_GOLD_ORE_HIT NETHER_GOLD_ORE_HIT
	BLOCK_NETHER_GOLD_ORE_PLACE NETHER_GOLD_ORE_PLACE
	BLOCK_NETHER_GOLD_ORE_STEP NETHER_GOLD_ORE_STEP
	BLOCK_NETHER_ORE_BREAK NETHER_ORE_BREAK
	BLOCK_NETHER_ORE_FALL NETHER_ORE_FALL
	BLOCK_NETHER_ORE_HIT NETHER_ORE_HIT
	BLOCK_NETHER_ORE_PLACE NETHER_ORE_PLACE
	BLOCK_NETHER_ORE_STEP NETHER_ORE_STEP
	BLOCK_NETHER_SPROUTS_BREAK NETHER_SPROUTS_BREAK
	BLOCK_NETHER_SPROUTS_FALL NETHER_SPROUTS_FALL
	BLOCK_NETHER_SPROUTS_HIT NETHER_SPROUTS_HIT
	BLOCK_NETHER_SPROUTS_PLACE NETHER_SPROUTS_PLACE
	BLOCK_NETHER_SPROUTS_STEP NETHER_SPROUTS_STEP
	BLOCK_NETHER_WART_BREAK NETHER_WART_BREAK
	BLOCK_NOTE_BLOCK_BANJO NOTE_BLOCK_BANJO
	BLOCK_NOTE_BLOCK_BASEDRUM NOTE_BLOCK_BASEDRUM
	BLOCK_NOTE_BLOCK_BASS NOTE_BLOCK_BASS
	BLOCK_NOTE_BLOCK_BELL NOTE_BLOCK_BELL
	BLOCK_NOTE_BLOCK_BIT NOTE_BLOCK_BIT
	BLOCK_NOTE_BLOCK_CHIME NOTE_BLOCK_CHIME
	BLOCK_NOTE_BLOCK_COW_BELL NOTE_BLOCK_COW_BELL
	BLOCK_NOTE_BLOCK_DIDGERIDOO NOTE_BLOCK_DIDGERIDOO
	BLOCK_NOTE_BLOCK_FLUTE NOTE_BLOCK_FLUTE
	BLOCK_NOTE_BLOCK_GUITAR NOTE_BLOCK_GUITAR
	BLOCK_NOTE_BLOCK_HARP NOTE_BLOCK_HARP
	BLOCK_NOTE_BLOCK_HAT NOTE_BLOCK_HAT
	BLOCK_NOTE_BLOCK_IRON_XYLOPHONE NOTE_BLOCK_IRON_XYLOPHONE
	BLOCK_NOTE_BLOCK_PLING NOTE_BLOCK_PLING
	BLOCK_NOTE_BLOCK_SNARE NOTE_BLOCK_SNARE
	BLOCK_NOTE_BLOCK_XYLOPHONE NOTE_BLOCK_XYLOPHONE
	BLOCK_NYLIUM_BREAK NYLIUM_BREAK
	BLOCK_NYLIUM_FALL NYLIUM_FALL
	BLOCK_NYLIUM_HIT NYLIUM_HIT
	BLOCK_NYLIUM_PLACE NYLIUM_PLACE
	BLOCK_NYLIUM_STEP NYLIUM_STEP
	BLOCK_PISTON_CONTRACT PISTON_CONTRACT
	BLOCK_PISTON_EXTEND PISTON_EXTEND
	BLOCK_PORTAL_AMBIENT PORTAL_AMBIENT
	BLOCK_PORTAL_TRAVEL PORTAL_TRAVEL
	BLOCK_PORTAL_TRIGGER PORTAL_TRIGGER
	BLOCK_PUMPKIN_CARVE PUMPKIN_CARVE
	BLOCK_REDSTONE_TORCH_BURNOUT REDSTONE_TORCH_BURNOUT
	BLOCK_RESPAWN_ANCHOR_AMBIENT RESPAWN_ANCHOR_AMBIENT
	BLOCK_RESPAWN_ANCHOR_CHARGE RESPAWN_ANCHOR_CHARGE
	BLOCK_RESPAWN_ANCHOR_DEPLETE RESPAWN_ANCHOR_DEPLETE
	BLOCK_RESPAWN_ANCHOR_SET_SPAWN RESPAWN_ANCHOR_SET_SPAWN
	BLOCK_ROOTS_BREAK ROOTS_BREAK
	BLOCK_ROOTS_FALL ROOTS_FALL
	BLOCK_ROOTS_HIT ROOTS_HIT
	BLOCK_ROOTS_PLACE ROOTS_PLACE
	BLOCK_ROOTS_STEP ROOTS_STEP
	BLOCK_SAND_BREAK SAND_BREAK
	BLOCK_SAND_FALL SAND_FALL
	BLOCK_SAND_HIT SAND_HIT
	BLOCK_SAND_PLACE SAND_PLACE
	BLOCK_SAND_STEP SAND_STEP
	BLOCK_SCAFFOLDING_BREAK SCAFFOLDING_BREAK
	BLOCK_SCAFFOLDING_FALL SCAFFOLDING_FALL
	BLOCK_SCAFFOLDING_HIT SCAFFOLDING_HIT
	BLOCK_SCAFFOLDING_PLACE SCAFFOLDING_PLACE
	BLOCK_SCAFFOLDING_STEP SCAFFOLDING_STEP
	BLOCK_SHROOMLIGHT_BREAK SHROOMLIGHT_BREAK
	BLOCK_SHROOMLIGHT_FALL SHROOMLIGHT_FALL
	BLOCK_SHROOMLIGHT_HIT SHROOMLIGHT_HIT
	BLOCK_SHROOMLIGHT_PLACE SHROOMLIGHT_PLACE
	BLOCK_SHROOMLIGHT_STEP SHROOMLIGHT_STEP
	BLOCK_SHULKER_BOX_CLOSE SHULKER_BOX_CLOSE
	BLOCK_SHULKER_BOX_OPEN SHULKER_BOX_OPEN
	BLOCK_SLIME_BLOCK_BREAK SLIME_BLOCK_BREAK
	BLOCK_SLIME_BLOCK_FALL SLIME_BLOCK_FALL
	BLOCK_SLIME_BLOCK_HIT SLIME_BLOCK_HIT
	BLOCK_SLIME_BLOCK_PLACE SLIME_BLOCK_PLACE
	BLOCK_SLIME_BLOCK_STEP SLIME_BLOCK_STEP
	BLOCK_SMITHING_TABLE_USE SMITHING_TABLE_USE
	BLOCK_SMOKER_SMOKE SMOKER_SMOKE
	BLOCK_SNOW_BREAK SNOW_BREAK
	BLOCK_SNOW_FALL SNOW_FALL
	BLOCK_SNOW_HIT SNOW_HIT
	BLOCK_SNOW_PLACE SNOW_PLACE
	BLOCK_SNOW_STEP SNOW_STEP
	BLOCK_SOUL_SAND_BREAK SOUL_SAND_BREAK
	BLOCK_SOUL_SAND_FALL SOUL_SAND_FALL
	BLOCK_SOUL_SAND_HIT SOUL_SAND_HIT
	BLOCK_SOUL_SAND_PLACE SOUL_SAND_PLACE
	BLOCK_SOUL_SAND_STEP SOUL_SAND_STEP
	BLOCK_SOUL_SOIL_BREAK SOUL_SOIL_BREAK
	BLOCK_SOUL_SOIL_FALL SOUL_SOIL_FALL
	BLOCK_SOUL_SOIL_HIT SOUL_SOIL_HIT
	BLOCK_SOUL_SOIL_PLACE SOUL_SOIL_PLACE
	BLOCK_SOUL_SOIL_STEP SOUL_SOIL_STEP
	BLOCK_STEM_BREAK STEM_BREAK
	BLOCK_STEM_FALL STEM_FALL
	BLOCK_STEM_HIT STEM_HIT
	BLOCK_STEM_PLACE STEM_PLACE
	BLOCK_STEM_STEP STEM_STEP
	BLOCK_STONE_BREAK STONE_BREAK
	BLOCK_STONE_BUTTON_CLICK_OFF STONE_BUTTON_CLICK_OFF
	BLOCK_STONE_BUTTON_CLICK_ON STONE_BUTTON_CLICK_ON
	BLOCK_STONE_FALL STONE_FALL
	BLOCK_STONE_HIT STONE_HIT
	BLOCK_STONE_PLACE STONE_PLACE
	BLOCK_STONE_PRESSURE_PLATE_CLICK_OFF STONE_PRESSURE_PLATE_CLICK_OFF
	BLOCK_STONE_PRESSURE_PLATE_CLICK_ON STONE_PRESSURE_PLATE_CLICK_ON
	BLOCK_STONE_STEP STONE_STEP
	BLOCK_SWEET_BERRY_BUSH_BREAK SWEET_BERRY_BUSH_BREAK
	BLOCK_SWEET_BERRY_BUSH_PLACE SWEET_BERRY_BUSH_PLACE
	BLOCK_TRIPWIRE_ATTACH TRIPWIRE_ATTACH
	BLOCK_TRIPWIRE_CLICK_OFF TRIPWIRE_CLICK_OFF
	BLOCK_TRIPWIRE_CLICK_ON TRIPWIRE_CLICK_ON
	BLOCK_TRIPWIRE_DETACH TRIPWIRE_DETACH
	BLOCK_VINE_STEP VINE_STEP
	BLOCK_WART_BLOCK_BREAK WART_BLOCK_BREAK
	BLOCK_WART_BLOCK_FALL WART_BLOCK_FALL
	BLOCK_WART_BLOCK_HIT WART_BLOCK_HIT
	BLOCK_WART_BLOCK_PLACE WART_BLOCK_PLACE
	BLOCK_WART_BLOCK_STEP WART_BLOCK_STEP
	BLOCK_WATER_AMBIENT WATER_AMBIENT
	BLOCK_WEEPING_VINES_BREAK WEEPING_VINES_BREAK
	BLOCK_WEEPING_VINES_FALL WEEPING_VINES_FALL
	BLOCK_WEEPING_VINES_HIT WEEPING_VINES_HIT
	BLOCK_WEEPING_VINES_PLACE WEEPING_VINES_PLACE
	BLOCK_WEEPING_VINES_STEP WEEPING_VINES_STEP
	BLOCK_WET_GRASS_BREAK WET_GRASS_BREAK
	BLOCK_WET_GRASS_FALL WET_GRASS_FALL
	BLOCK_WET_GRASS_HIT WET_GRASS_HIT
	BLOCK_WET_GRASS_PLACE WET_GRASS_PLACE
	BLOCK_WET_GRASS_STEP WET_GRASS_STEP
	BLOCK_WOODEN_BUTTON_CLICK_OFF WOODEN_BUTTON_CLICK_OFF
	BLOCK_WOODEN_BUTTON_CLICK_ON WOODEN_BUTTON_CLICK_ON
	BLOCK_WOODEN_DOOR_CLOSE WOODEN_DOOR_CLOSE
	BLOCK_WOODEN_DOOR_OPEN WOODEN_DOOR_OPEN
	BLOCK_WOODEN_PRESSURE_PLATE_CLICK_OFF WOODEN_PRESSURE_PLATE_CLICK_OFF
	BLOCK_WOODEN_PRESSURE_PLATE_CLICK_ON WOODEN_PRESSURE_PLATE_CLICK_ON
	BLOCK_WOODEN_TRAPDOOR_CLOSE WOODEN_TRAPDOOR_CLOSE
	BLOCK_WOODEN_TRAPDOOR_OPEN WOODEN_TRAPDOOR_OPEN
	BLOCK_WOOD_BREAK WOOD_BREAK
	BLOCK_WOOD_FALL WOOD_FALL
	BLOCK_WOOD_HIT WOOD_HIT
	BLOCK_WOOD_PLACE WOOD_PLACE
	BLOCK_WOOD_STEP WOOD_STEP
	BLOCK_WOOL_BREAK WOOL_BREAK
	BLOCK_WOOL_FALL WOOL_FALL
	BLOCK_WOOL_HIT WOOL_HIT
	BLOCK_WOOL_PLACE WOOL_PLACE
	BLOCK_WOOL_STEP WOOL_STEP
	ENCHANT_THORNS_HIT THORNS_HIT
	ENTITY_ARMOR_STAND_BREAK ARMOR_STAND_BREAK
	ENTITY_ARMOR_STAND_FALL ARMOR_STAND_FALL
	ENTITY_ARMOR_STAND_HIT ARMOR_STAND_HIT
	ENTITY_ARMOR_STAND_PLACE ARMOR_STAND_PLACE
	ENTITY_ARROW_HIT ARROW_HIT
	ENTITY_ARROW_HIT_PLAYER ARROW_HIT_PLAYER
	ENTITY_ARROW_SHOOT ARROW_SHOOT
	ENTITY_BAT_AMBIENT BAT_AMBIENT
	ENTITY_BAT_DEATH BAT_DEATH
	ENTITY_BAT_HURT BAT_HURT
	ENTITY_BAT_LOOP BAT_LOOP
	ENTITY_BAT_TAKEOFF BAT_TAKEOFF
	ENTITY_BEE_DEATH BEE_DEATH
	ENTITY_BEE_HURT BEE_HURT
	ENTITY_BEE_LOOP BEE_LOOP
	ENTITY_BEE_LOOP_AGGRESSIVE BEE_LOOP_AGGRESSIVE
	ENTITY_BEE_POLLINATE BEE_POLLINATE
	ENTITY_BEE_STING BEE_STING
	ENTITY_BLAZE_AMBIENT BLAZE_AMBIENT
	ENTITY_BLAZE_BURN BLAZE_BURN
	ENTITY_BLAZE_DEATH BLAZE_DEATH
	ENTITY_BLAZE_HURT BLAZE_HURT
	ENTITY_BLAZE_SHOOT BLAZE_SHOOT
	ENTITY_BOAT_PADDLE_LAND BOAT_PADDLE_LAND
	ENTITY_BOAT_PADDLE_WATER BOAT_PADDLE_WATER
	ENTITY_CAT_AMBIENT CAT_AMBIENT
	ENTITY_CAT_BEG_FOR_FOOD CAT_BEG_FOR_FOOD
	ENTITY_CAT_DEATH CAT_DEATH
	ENTITY_CAT_EAT CAT_EAT
	ENTITY_CAT_HISS CAT_HISS
	ENTITY_CAT_HURT CAT_HURT
	ENTITY_CAT_PURR CAT_PURR
	ENTITY_CAT_PURREOW CAT_PURREOW
	ENTITY_CAT_STRAY_AMBIENT CAT_STRAY_AMBIENT
	ENTITY_CHICKEN_AMBIENT CHICKEN_AMBIENT
	ENTITY_CHICKEN_DEATH CHICKEN_DEATH
	ENTITY_CHICKEN_EGG CHICKEN_EGG
	ENTITY_CHICKEN_HURT CHICKEN_HURT
	ENTITY_CHICKEN_STEP CHICKEN_STEP
	ENTITY_COD_AMBIENT COD_AMBIENT
	ENTITY_COD_DEATH COD_DEATH
	ENTITY_COD_FLOP COD_FLOP
	ENTITY_COD_HURT COD_HURT
	ENTITY_COW_AMBIENT COW_AMBIENT
	ENTITY_COW_DEATH COW_DEATH
	ENTITY_COW_HURT COW_HURT
	ENTITY_COW_MILK COW_MILK
	ENTITY_COW_STEP COW_STEP
	ENTITY_CREEPER_DEATH CREEPER_DEATH
	ENTITY_CREEPER_HURT CREEPER_HURT
	ENTITY_CREEPER_PRIMED CREEPER_PRIMED
	ENTITY_DOLPHIN_AMBIENT DOLPHIN_AMBIENT
	ENTITY_DOLPHIN_AMBIENT_WATER DOLPHIN_AMBIENT_WATER
	ENTITY_DOLPHIN_ATTACK DOLPHIN_ATTACK
	ENTITY_DOLPHIN_DEATH DOLPHIN_DEATH
	ENTITY_DOLPHIN_EAT DOLPHIN_EAT
	ENTITY_DOLPHIN_HURT DOLPHIN_HURT
	ENTITY_DOLPHIN_JUMP DOLPHIN_JUMP
	ENTITY_DOLPHIN_PLAY DOLPHIN_PLAY
	ENTITY_DOLPHIN_SPLASH DOLPHIN_SPLASH
	ENTITY_DOLPHIN_SWIM DOLPHIN_SWIM
	ENTITY_DONKEY_AMBIENT DONKEY_AMBIENT
	ENTITY_DONKEY_ANGRY DONKEY_ANGRY
	ENTITY_DONKEY_CHEST DONKEY_CHEST
	ENTITY_DONKEY_DEATH DONKEY_DEATH
	ENTITY_DONKEY_EAT DONKEY_EAT
	ENTITY_DONKEY_HURT DONKEY_HURT
	ENTITY_DRAGON_FIREBALL_EXPLODE DRAGON_FIREBALL_EXPLODE
	ENTITY_DROWNED_AMBIENT DROWNED_AMBIENT
	ENTITY_DROWNED_AMBIENT_WATER DROWNED_AMBIENT_WATER
	ENTITY_DROWNED_DEATH DROWNED_DEATH
	ENTITY_DROWNED_DEATH_WATER DROWNED_DEATH_WATER
	ENTITY_DROWNED_HURT DROWNED_HURT
	ENTITY_DROWNED_HURT_WATER DROWNED_HURT_WATER
	ENTITY_DROWNED_SHOOT DROWNED_SHOOT
	ENTITY_DROWNED_STEP DROWNED_STEP
	ENTITY_DROWNED_SWIM DROWNED_SWIM
	ENTITY_EGG_THROW EGG_THROW
	ENTITY_ELDER_GUARDIAN_AMBIENT ELDER_GUARDIAN_AMBIENT
	ENTITY_ELDER_GUARDIAN_AMBIENT_LAND ELDER_GUARDIAN_AMBIENT_LAND
	ENTITY_ELDER_GUARDIAN_CURSE ELDER_GUARDIAN_CURSE
	ENTITY_ELDER_GUARDIAN_DEATH ELDER_GUARDIAN_DEATH
	ENTITY_ELDER_GUARDIAN_DEATH_LAND ELDER_GUARDIAN_DEATH_LAND
	ENTITY_ELDER_GUARDIAN_FLOP ELDER_GUARDIAN_FLOP
	ENTITY_ELDER_GUARDIAN_HURT ELDER_GUARDIAN_HURT
	ENTITY_ELDER_GUARDIAN_HURT_LAND ELDER_GUARDIAN_HURT_LAND
	ENTITY_ENDERMAN_AMBIENT ENDERMAN_AMBIENT
	ENTITY_ENDERMAN_DEATH ENDERMAN_DEATH
	ENTITY_ENDERMAN_HURT ENDERMAN_HURT
	ENTITY_ENDERMAN_SCREAM ENDERMAN_SCREAM
	ENTITY_ENDERMAN_STARE ENDERMAN_STARE
	ENTITY_ENDERMAN_TELEPORT ENDERMAN_TELEPORT
	ENTITY_ENDERMITE_AMBIENT ENDERMITE_AMBIENT
	ENTITY_ENDERMITE_DEATH ENDERMITE_DEATH
	ENTITY_ENDERMITE_HURT ENDERMITE_HURT
	ENTITY_ENDERMITE_STEP ENDERMITE_STEP
	ENTITY_ENDER_DRAGON_AMBIENT ENDER_DRAGON_AMBIENT
	ENTITY_ENDER_DRAGON_DEATH ENDER_DRAGON_DEATH
	ENTITY_ENDER_DRAGON_FLAP ENDER_DRAGON_FLAP
	ENTITY_ENDER_DRAGON_GROWL ENDER_DRAGON_GROWL
	ENTITY_ENDER_DRAGON_HURT ENDER_DRAGON_HURT
	ENTITY_ENDER_DRAGON_SHOOT ENDER_DRAGON_SHOOT
	ENTITY_ENDER_EYE_DEATH ENDER_EYE_DEATH
	ENTITY_ENDER_EYE_LAUNCH ENDER_EYE_LAUNCH
	ENTITY_ENDER_PEARL_THROW ENDER_PEARL_THROW
	ENTITY_EVOKER_AMBIENT EVOKER_AMBIENT
	ENTITY_EVOKER_CAST_SPELL EVOKER_CAST_SPELL
	ENTITY_EVOKER_CELEBRATE EVOKER_CELEBRATE
	ENTITY_EVOKER_DEATH EVOKER_DEATH
	ENTITY_EVOKER_FANGS_ATTACK EVOKER_FANGS_ATTACK
	ENTITY_EVOKER_HURT EVOKER_HURT
	ENTITY_EVOKER_PREPARE_ATTACK EVOKER_PREPARE_ATTACK
	ENTITY_EVOKER_PREPARE_SUMMON EVOKER_PREPARE_SUMMON
	ENTITY_EVOKER_PREPARE_WOLOLO EVOKER_PREPARE_WOLOLO
	ENTITY_EXPERIENCE_BOTTLE_THROW EXPERIENCE_BOTTLE_THROW
	ENTITY_EXPERIENCE_ORB_PICKUP EXPERIENCE_ORB_PICKUP
	ENTITY_FIREWORK_ROCKET_BLAST FIREWORK_ROCKET_BLAST
	ENTITY_FIREWORK_ROCKET_BLAST_FAR FIREWORK_ROCKET_BLAST_FAR
	ENTITY_FIREWORK_ROCKET_LARGE_BLAST FIREWORK_ROCKET_LARGE_BLAST
	ENTITY_FIREWORK_ROCKET_LARGE_BLAST_FAR FIREWORK_ROCKET_LARGE_BLAST_FAR
	ENTITY_FIREWORK_ROCKET_LAUNCH FIREWORK_ROCKET_LAUNCH
	ENTITY_FIREWORK_ROCKET_SHOOT FIREWORK_ROCKET_SHOOT
	ENTITY_FIREWORK_ROCKET_TWINKLE FIREWORK_ROCKET_TWINKLE
	ENTITY_FIREWORK_ROCKET_TWINKLE_FAR FIREWORK_ROCKET_TWINKLE_FAR
	ENTITY_FISHING_BOBBER_RETRIEVE FISHING_BOBBER_RETRIEVE
	ENTITY_FISHING_BOBBER_SPLASH FISHING_BOBBER_SPLASH
	ENTITY_FISHING_BOBBER_THROW FISHING_BOBBER_THROW
	ENTITY_FISH_SWIM FISH_SWIM
	ENTITY_FOX_AGGRO FOX_AGGRO
	ENTITY_FOX_AMBIENT FOX_AMBIENT
	ENTITY_FOX_BITE FOX_BITE
	ENTITY_FOX_DEATH FOX_DEATH
	ENTITY_FOX_EAT FOX_EAT
	ENTITY_FOX_HURT FOX_HURT
	ENTITY_FOX_SCREECH FOX_SCREECH
	ENTITY_FOX_SLEEP FOX_SLEEP
	ENTITY_FOX_SNIFF FOX_SNIFF
	ENTITY_FOX_SPIT FOX_SPIT
	ENTITY_FOX_TELEPORT FOX_TELEPORT
	ENTITY_GENERIC_BIG_FALL GENERIC_BIG_FALL
	ENTITY_GENERIC_BURN GENERIC_BURN
	ENTITY_GENERIC_DEATH GENERIC_DEATH
	ENTITY_GENERIC_DRINK GENERIC_DRINK
	ENTITY_GENERIC_EAT GENERIC_EAT
	ENTITY_GENERIC_EXPLODE GENERIC_EXPLODE
	ENTITY_GENERIC_EXTINGUISH_FIRE GENERIC_EXTINGUISH_FIRE
	ENTITY_GENERIC_HURT GENERIC_HURT
	ENTITY_GENERIC_SMALL_FALL GENERIC_SMALL_FALL
	ENTITY_GENERIC_SPLASH GENERIC_SPLASH
	ENTITY_GENERIC_SWIM GENERIC_SWIM
	ENTITY_GHAST_AMBIENT GHAST_AMBIENT
	ENTITY_GHAST_DEATH GHAST_DEATH
	ENTITY_GHAST_HURT GHAST_HURT
	ENTITY_GHAST_SCREAM GHAST_SCREAM
	ENTITY_GHAST_SHOOT GHAST_SHOOT
	ENTITY_GHAST_WARN GHAST_WARN
	ENTITY_GUARDIAN_AMBIENT GUARDIAN_AMBIENT
	ENTITY_GUARDIAN_AMBIENT_LAND GUARDIAN_AMBIENT_LAND
	ENTITY_GUARDIAN_ATTACK GUARDIAN_ATTACK
	ENTITY_GUARDIAN_DEATH GUARDIAN_DEATH
	ENTITY_GUARDIAN_DEATH_LAND GUARDIAN_DEATH_LAND
	ENTITY_GUARDIAN_FLOP GUARDIAN_FLOP
	ENTITY_GUARDIAN_HURT GUARDIAN_HURT
	ENTITY_GUARDIAN_HURT_LAND GUARDIAN_HURT_LAND
	ENTITY_HOGLIN_AMBIENT HOGLIN_AMBIENT
	ENTITY_HOGLIN_ANGRY HOGLIN_ANGRY
	ENTITY_HOGLIN_ATTACK HOGLIN_ATTACK
	ENTITY_HOGLIN_CONVERTED_TO_ZOMBIFIED HOGLIN_CONVERTED_TO_ZOMBIFIED
	ENTITY_HOGLIN_DEATH HOGLIN_DEATH
	ENTITY_HOGLIN_HURT HOGLIN_HURT
	ENTITY_HOGLIN_RETREAT HOGLIN_RETREAT
	ENTITY_HOGLIN_STEP HOGLIN_STEP
	ENTITY_HORSE_AMBIENT HORSE_AMBIENT
	ENTITY_HORSE_ANGRY HORSE_ANGRY
	ENTITY_HORSE_ARMOR HORSE_ARMOR
	ENTITY_HORSE_BREATHE HORSE_BREATHE
	ENTITY_HORSE_DEATH HORSE_DEATH
	ENTITY_HORSE_EAT HORSE_EAT
	ENTITY_HORSE_GALLOP HORSE_GALLOP
	ENTITY_HORSE_HURT HORSE_HURT
	ENTITY_HORSE_JUMP HORSE_JUMP
	ENTITY_HORSE_LAND HORSE_LAND
	ENTITY_HORSE_SADDLE HORSE_SADDLE
	ENTITY_HORSE_STEP HORSE_STEP
	ENTITY_HORSE_STEP_WOOD HORSE_STEP_WOOD
	ENTITY_HOSTILE_BIG_FALL HOSTILE_BIG_FALL
	ENTITY_HOSTILE_DEATH HOSTILE_DEATH
	ENTITY_HOSTILE_HURT HOSTILE_HURT
	ENTITY_HOSTILE_SMALL_FALL HOSTILE_SMALL_FALL
	ENTITY_HOSTILE_SPLASH HOSTILE_SPLASH
	ENTITY_HOSTILE_SWIM HOSTILE_SWIM
	ENTITY_HUSK_AMBIENT HUSK_AMBIENT
	ENTITY_HUSK_CONVERTED_TO_ZOMBIE HUSK_CONVERTED_TO_ZOMBIE
	ENTITY_HUSK_DEATH HUSK_DEATH
	ENTITY_HUSK_HURT HUSK_HURT
	ENTITY_HUSK_STEP HUSK_STEP
	ENTITY_ILLUSIONER_AMBIENT ILLUSIONER_AMBIENT
	ENTITY_ILLUSIONER_CAST_SPELL ILLUSIONER_CAST_SPELL
	ENTITY_ILLUSIONER_DEATH ILLUSIONER_DEATH
	ENTITY_ILLUSIONER_HURT ILLUSIONER_HURT
	ENTITY_ILLUSIONER_MIRROR_MOVE ILLUSIONER_MIRROR_MOVE
	ENTITY_ILLUSIONER_PREPARE_BLINDNESS ILLUSIONER_PREPARE_BLINDNESS
	ENTITY_ILLUSIONER_PREPARE_MIRROR ILLUSIONER_PREPARE_MIRROR
	ENTITY_IRON_GOLEM_ATTACK IRON_GOLEM_ATTACK
	ENTITY_IRON_GOLEM_DAMAGE IRON_GOLEM_DAMAGE
	ENTITY_IRON_GOLEM_DEATH IRON_GOLEM_DEATH
	ENTITY_IRON_GOLEM_HURT IRON_GOLEM_HURT
	ENTITY_IRON_GOLEM_REPAIR IRON_GOLEM_REPAIR
	ENTITY_IRON_GOLEM_STEP IRON_GOLEM_STEP
	ENTITY_ITEM_BREAK ITEM_BREAK
	ENTITY_ITEM_FRAME_ADD_ITEM ITEM_FRAME_ADD_ITEM
	ENTITY_ITEM_FRAME_BREAK ITEM_FRAME_BREAK
	ENTITY_ITEM_FRAME_PLACE ITEM_FRAME_PLACE
	ENTITY_ITEM_FRAME_REMOVE_ITEM ITEM_FRAME_REMOVE_ITEM
	ENTITY_ITEM_FRAME_ROTATE_ITEM ITEM_FRAME_ROTATE_ITEM
	ENTITY_ITEM_PICKUP ITEM_PICKUP
	ENTITY_LEASH_KNOT_BREAK LEASH_KNOT_BREAK
	ENTITY_LEASH_KNOT_PLACE LEASH_KNOT_PLACE
	ENTITY_LIGHTNING_BOLT_IMPACT LIGHTNING_BOLT_IMPACT
	ENTITY_LIGHTNING_BOLT_THUNDER LIGHTNING_BOLT_THUNDER
	ENTITY_LINGERING_POTION_THROW LINGERING_POTION_THROW
	ENTITY_LLAMA_AMBIENT LLAMA_AMBIENT
	ENTITY_LLAMA_ANGRY LLAMA_ANGRY
	ENTITY_LLAMA_CHEST LLAMA_CHEST
	ENTITY_LLAMA_DEATH LLAMA_DEATH
	ENTITY_LLAMA_EAT LLAMA_EAT
	ENTITY_LLAMA_HURT LLAMA_HURT
	ENTITY_LLAMA_SPIT LLAMA_SPIT
	ENTITY_LLAMA_STEP LLAMA_STEP
	ENTITY_LLAMA_SWAG LLAMA_SWAG
	ENTITY_MAGMA_CUBE_DEATH MAGMA_CUBE_DEATH
	ENTITY_MAGMA_CUBE_DEATH_SMALL MAGMA_CUBE_DEATH_SMALL
	ENTITY_MAGMA_CUBE_HURT MAGMA_CUBE_HURT
	ENTITY_MAGMA_CUBE_HURT_SMALL MAGMA_CUBE_HURT_SMALL
	ENTITY_MAGMA_CUBE_JUMP MAGMA_CUBE_JUMP
	ENTITY_MAGMA_CUBE_SQUISH MAGMA_CUBE_SQUISH
	ENTITY_MAGMA_CUBE_SQUISH_SMALL MAGMA_CUBE_SQUISH_SMALL
	ENTITY_MINECART_INSIDE MINECART_INSIDE
	ENTITY_MINECART_RIDING MINECART_RIDING
	ENTITY_MOOSHROOM_CONVERT MOOSHROOM_CONVERT
	ENTITY_MOOSHROOM_EAT MOOSHROOM_EAT
	ENTITY_MOOSHROOM_MILK MOOSHROOM_MILK
	ENTITY_MOOSHROOM_SHEAR MOOSHROOM_SHEAR
	ENTITY_MOOSHROOM_SUSPICIOUS_MILK MOOSHROOM_MILK_SUSPICIOUSLY
	ENTITY_MULE_AMBIENT MULE_AMBIENT
	ENTITY_MULE_ANGRY MULE_ANGRY
	ENTITY_MULE_CHEST MULE_CHEST
	ENTITY_MULE_DEATH MULE_DEATH
	ENTITY_MULE_EAT MULE_EAT
	ENTITY_MULE_HURT MULE_HURT
	ENTITY_OCELOT_AMBIENT OCELOT_AMBIENT
	ENTITY_OCELOT_DEATH OCELOT_DEATH
	ENTITY_OCELOT_HURT OCELOT_HURT
	ENTITY_PAINTING_BREAK PAINTING_BREAK
	ENTITY_PAINTING_PLACE PAINTING_PLACE
	ENTITY_PANDA_AGGRESSIVE_AMBIENT PANDA_AGGRESSIVE_AMBIENT
	ENTITY_PANDA_AMBIENT PANDA_AMBIENT
	ENTITY_PANDA_BITE PANDA_BITE
	ENTITY_PANDA_CANT_BREED PANDA_CANT_BREED
	ENTITY_PANDA_DEATH PANDA_DEATH
	ENTITY_PANDA_EAT PANDA_EAT
	ENTITY_PANDA_HURT PANDA_HURT
	ENTITY_PANDA_PRE_SNEEZE PANDA_PRE_SNEEZE
	ENTITY_PANDA_SNEEZE PANDA_SNEEZE
	ENTITY_PANDA_STEP PANDA_STEP
	ENTITY_PANDA_WORRIED_AMBIENT PANDA_WORRIED_AMBIENT
	ENTITY_PARROT_AMBIENT PARROT_AMBIENT
	ENTITY_PARROT_DEATH PARROT_DEATH
	ENTITY_PARROT_EAT PARROT_EAT
	ENTITY_PARROT_FLY PARROT_FLY
	ENTITY_PARROT_HURT PARROT_HURT
	ENTITY_PARROT_IMITATE_BLAZE PARROT_IMITATE_BLAZE
	ENTITY_PARROT_IMITATE_CREEPER PARROT_IMITATE_CREEPER
	ENTITY_PARROT_IMITATE_DROWNED PARROT_IMITATE_DROWNED
	ENTITY_PARROT_IMITATE_ELDER_GUARDIAN PARROT_IMITATE_ELDER_GUARDIAN
	ENTITY_PARROT_IMITATE_ENDERMITE PARROT_IMITATE_ENDERMITE
	ENTITY_PARROT_IMITATE_ENDER_DRAGON PARROT_IMITATE_ENDER_DRAGON
	ENTITY_PARROT_IMITATE_EVOKER PARROT_IMITATE_EVOKER
	ENTITY_PARROT_IMITATE_GHAST PARROT_IMITATE_GHAST
	ENTITY_PARROT_IMITATE_GUARDIAN PARROT_IMITATE_GUARDIAN
	ENTITY_PARROT_IMITATE_HOGLIN PARROT_IMITATE_HOGLIN
	ENTITY_PARROT_IMITATE_HUSK PARROT_IMITATE_HUSK
	ENTITY_PARROT_IMITATE_ILLUSIONER PARROT_IMITATE_ILLUSIONER
	ENTITY_PARROT_IMITATE_MAGMA_CUBE PARROT_IMITATE_MAGMA_CUBE
	ENTITY_PARROT_IMITATE_PHANTOM PARROT_IMITATE_PHANTOM
	ENTITY_PARROT_IMITATE_PIGLIN PARROT_IMITATE_PIGLIN
	ENTITY_PARROT_IMITATE_PIGLIN_BRUTE PARROT_IMITATE_PIGLIN_BRUTE
	ENTITY_PARROT_IMITATE_PILLAGER PARROT_IMITATE_PILLAGER
	ENTITY_PARROT_IMITATE_RAVAGER PARROT_IMITATE_RAVAGER
	ENTITY_PARROT_IMITATE_SHULKER PARROT_IMITATE_SHULKER
	ENTITY_PARROT_IMITATE_SILVERFISH PARROT_IMITATE_SILVERFISH
	ENTITY_PARROT_IMITATE_SKELETON PARROT_IMITATE_SKELETON
	ENTITY_PARROT_IMITATE_SLIME PARROT_IMITATE_SLIME
	ENTITY_PARROT_IMITATE_SPIDER PARROT_IMITATE_SPIDER
	ENTITY_PARROT_IMITATE_STRAY PARROT_IMITATE_STRAY
	ENTITY_PARROT_IMITATE_VEX PARROT_IMITATE_VEX
	ENTITY_PARROT_IMITATE_VINDICATOR PARROT_IMITATE_VINDICATOR
	ENTITY_PARROT_IMITATE_WITCH PARROT_IMITATE_WITCH
	ENTITY_PARROT_IMITATE_WITHER PARROT_IMITATE_WITHER
	ENTITY_PARROT_IMITATE_WITHER_SKELETON PARROT_IMITATE_WITHER_SKELETON
	ENTITY_PARROT_IMITATE_ZOGLIN PARROT_IMITATE_ZOGLIN
	ENTITY_PARROT_IMITATE_ZOMBIE PARROT_IMITATE_ZOMBIE
	ENTITY_PARROT_IMITATE_ZOMBIE_VILLAGER PARROT_IMITATE_ZOMBIE_VILLAGER
	ENTITY_PARROT_STEP PARROT_STEP
	ENTITY_PHANTOM_AMBIENT PHANTOM_AMBIENT
	ENTITY_PHANTOM_BITE PHANTOM_BITE
	ENTITY_PHANTOM_DEATH PHANTOM_DEATH
	ENTITY_PHANTOM_FLAP PHANTOM_FLAP
	ENTITY_PHANTOM_HURT PHANTOM_HURT
	ENTITY_PHANTOM_SWOOP PHANTOM_SWOOP
	ENTITY_PIGLIN_ADMIRING_ITEM PIGLIN_ADMIRING_ITEM
	ENTITY_PIGLIN_AMBIENT PIGLIN_AMBIENT
	ENTITY_PIGLIN_ANGRY PIGLIN_ANGRY
	ENTITY_PIGLIN_BRUTE_AMBIENT PIGLIN_BRUTE_AMBIENT
	ENTITY_PIGLIN_BRUTE_ANGRY PIGLIN_BRUTE_ANGRY
	ENTITY_PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED
	ENTITY_PIGLIN_BRUTE_DEATH PIGLIN_BRUTE_DEATH
	ENTITY_PIGLIN_BRUTE_HURT PIGLIN_BRUTE_HURT
	ENTITY_PIGLIN_BRUTE_STEP PIGLIN_BRUTE_STEP
	ENTITY_PIGLIN_CELEBRATE PIGLIN_CELEBRATE
	ENTITY_PIGLIN_CONVERTED_TO_ZOMBIFIED PIGLIN_CONVERTED_TO_ZOMBIFIED
	ENTITY_PIGLIN_DEATH PIGLIN_DEATH
	ENTITY_PIGLIN_HURT PIGLIN_HURT
	ENTITY_PIGLIN_JEALOUS PIGLIN_JEALOUS
	ENTITY_PIGLIN_RETREAT PIGLIN_RETREAT
	ENTITY_PIGLIN_STEP PIGLIN_STEP
	ENTITY_PIG_AMBIENT PIG_AMBIENT
	ENTITY_PIG_DEATH PIG_DEATH
	ENTITY_PIG_HURT PIG_HURT
	ENTITY_PIG_SADDLE PIG_SADDLE
	ENTITY_PIG_STEP PIG_STEP
	ENTITY_PILLAGER_AMBIENT PILLAGER_AMBIENT
	ENTITY_PILLAGER_CELEBRATE PILLAGER_CELEBRATE
	ENTITY_PILLAGER_DEATH PILLAGER_DEATH
	ENTITY_PILLAGER_HURT PILLAGER_HURT
	ENTITY_PLAYER_ATTACK_CRIT PLAYER_ATTACK_CRIT
	ENTITY_PLAYER_ATTACK_KNOCKBACK PLAYER_ATTACK_KNOCKBACK
	ENTITY_PLAYER_ATTACK_NODAMAGE PLAYER_ATTACK_NODAMAGE
	ENTITY_PLAYER_ATTACK_STRONG PLAYER_ATTACK_STRONG
	ENTITY_PLAYER_ATTACK_SWEEP PLAYER_ATTACK_SWEEP
	ENTITY_PLAYER_ATTACK_WEAK PLAYER_ATTACK_WEAK
	ENTITY_PLAYER_BIG_FALL PLAYER_BIG_FALL
	ENTITY_PLAYER_BREATH PLAYER_BREATH
	ENTITY_PLAYER_BURP PLAYER_BURP
	ENTITY_PLAYER_DEATH PLAYER_DEATH
	ENTITY_PLAYER_HURT PLAYER_HURT
	ENTITY_PLAYER_HURT_DROWN PLAYER_HURT_DROWN
	ENTITY_PLAYER_HURT_ON_FIRE PLAYER_HURT_ON_FIRE
	ENTITY_PLAYER_HURT_SWEET_BERRY_BUSH PLAYER_HURT_SWEET_BERRY_BUSH
	ENTITY_PLAYER_LEVELUP PLAYER_LEVELUP
	ENTITY_PLAYER_SMALL_FALL PLAYER_SMALL_FALL
	ENTITY_PLAYER_SPLASH PLAYER_SPLASH
	ENTITY_PLAYER_SPLASH_HIGH_SPEED PLAYER_SPLASH_HIGH_SPEED
	ENTITY_PLAYER_SWIM PLAYER_SWIM
	ENTITY_POLAR_BEAR_AMBIENT POLAR_BEAR_AMBIENT
	ENTITY_POLAR_BEAR_AMBIENT_BABY POLAR_BEAR_AMBIENT_BABY
	ENTITY_POLAR_BEAR_DEATH POLAR_BEAR_DEATH
	ENTITY_POLAR_BEAR_HURT POLAR_BEAR_HURT
	ENTITY_POLAR_BEAR_STEP POLAR_BEAR_STEP
	ENTITY_POLAR_BEAR_WARNING POLAR_BEAR_WARNING
	ENTITY_PUFFER_FISH_AMBIENT PUFFER_FISH_AMBIENT
	ENTITY_PUFFER_FISH_BLOW_OUT PUFFER_FISH_BLOW_OUT
	ENTITY_PUFFER_FISH_BLOW_UP PUFFER_FISH_BLOW_UP
	ENTITY_PUFFER_FISH_DEATH PUFFER_FISH_DEATH
	ENTITY_PUFFER_FISH_FLOP PUFFER_FISH_FLOP
	ENTITY_PUFFER_FISH_HURT PUFFER_FISH_HURT
	ENTITY_PUFFER_FISH_STING PUFFER_FISH_STING
	ENTITY_RABBIT_AMBIENT RABBIT_AMBIENT
	ENTITY_RABBIT_ATTACK RABBIT_ATTACK
	ENTITY_RABBIT_DEATH RABBIT_DEATH
	ENTITY_RABBIT_HURT RABBIT_HURT
	ENTITY_RABBIT_JUMP RABBIT_JUMP
	ENTITY_RAVAGER_AMBIENT RAVAGER_AMBIENT
	ENTITY_RAVAGER_ATTACK RAVAGER_ATTACK
	ENTITY_RAVAGER_CELEBRATE RAVAGER_CELEBRATE
	ENTITY_RAVAGER_DEATH RAVAGER_DEATH
	ENTITY_RAVAGER_HURT RAVAGER_HURT
	ENTITY_RAVAGER_ROAR RAVAGER_ROAR
	ENTITY_RAVAGER_STEP RAVAGER_STEP
	ENTITY_RAVAGER_STUNNED RAVAGER_STUNNED
	ENTITY_SALMON_AMBIENT SALMON_AMBIENT
	ENTITY_SALMON_DEATH SALMON_DEATH
	ENTITY_SALMON_FLOP SALMON_FLOP
	ENTITY_SALMON_HURT SALMON_HURT
	ENTITY_SHEEP_AMBIENT SHEEP_AMBIENT
	ENTITY_SHEEP_DEATH SHEEP_DEATH
	ENTITY_SHEEP_HURT SHEEP_HURT
	ENTITY_SHEEP_SHEAR SHEEP_SHEAR
	ENTITY_SHEEP_STEP SHEEP_STEP
	ENTITY_SHULKER_AMBIENT SHULKER_AMBIENT
	ENTITY_SHULKER_BULLET_HIT SHULKER_BULLET_HIT
	ENTITY_SHULKER_BULLET_HURT SHULKER_BULLET_HURT
	ENTITY_SHULKER_CLOSE SHULKER_CLOSE
	ENTITY_SHULKER_DEATH SHULKER_DEATH
	ENTITY_SHULKER_HURT SHULKER_HURT
	ENTITY_SHULKER_HURT_CLOSED SHULKER_HURT_CLOSED
	ENTITY_SHULKER_OPEN SHULKER_OPEN
	ENTITY_SHULKER_SHOOT SHULKER_SHOOT
	ENTITY_SHULKER_TELEPORT SHULKER_TELEPORT
	ENTITY_SILVERFISH_AMBIENT SILVERFISH_AMBIENT
	ENTITY_SILVERFISH_DEATH SILVERFISH_DEATH
	ENTITY_SILVERFISH_HURT SILVERFISH_HURT
	ENTITY_SILVERFISH_STEP SILVERFISH_STEP
	ENTITY_SKELETON_AMBIENT SKELETON_AMBIENT
	ENTITY_SKELETON_DEATH SKELETON_DEATH
	ENTITY_SKELETON_HORSE_AMBIENT SKELETON_HORSE_AMBIENT
	ENTITY_SKELETON_HORSE_AMBIENT_WATER SKELETON_HORSE_AMBIENT_WATER
	ENTITY_SKELETON_HORSE_DEATH SKELETON_HORSE_DEATH
	ENTITY_SKELETON_HORSE_GALLOP_WATER SKELETON_HORSE_GALLOP_WATER
	ENTITY_SKELETON_HORSE_HURT SKELETON_HORSE_HURT
	ENTITY_SKELETON_HORSE_JUMP_WATER SKELETON_HORSE_JUMP_WATER
	ENTITY_SKELETON_HORSE_STEP_WATER SKELETON_HORSE_STEP_WATER
	ENTITY_SKELETON_HORSE_SWIM SKELETON_HORSE_SWIM
	ENTITY_SKELETON_HURT SKELETON_HURT
	ENTITY_SKELETON_SHOOT SKELETON_SHOOT
	ENTITY_SKELETON_STEP SKELETON_STEP
	ENTITY_SLIME_ATTACK SLIME_ATTACK
	ENTITY_SLIME_DEATH SLIME_DEATH
	ENTITY_SLIME_DEATH_SMALL SLIME_DEATH_SMALL
	ENTITY_SLIME_HURT SLIME_HURT
	ENTITY_SLIME_HURT_SMALL SLIME_HURT_SMALL
	ENTITY_SLIME_JUMP SLIME_JUMP
	ENTITY_SLIME_JUMP_SMALL SLIME_JUMP_SMALL
	ENTITY_SLIME_SQUISH SLIME_SQUISH
	ENTITY_SLIME_SQUISH_SMALL SLIME_SQUISH_SMALL
	ENTITY_SNOWBALL_THROW SNOWBALL_THROW
	ENTITY_SNOW_GOLEM_AMBIENT SNOW_GOLEM_AMBIENT
	ENTITY_SNOW_GOLEM_DEATH SNOW_GOLEM_DEATH
	ENTITY_SNOW_GOLEM_HURT SNOW_GOLEM_HURT
	ENTITY_SNOW_GOLEM_SHEAR SNOW_GOLEM_SHEAR
	ENTITY_SNOW_GOLEM_SHOOT SNOW_GOLEM_SHOOT
	ENTITY_SPIDER_AMBIENT SPIDER_AMBIENT
	ENTITY_SPIDER_DEATH SPIDER_DEATH
	ENTITY_SPIDER_HURT SPIDER_HURT
	ENTITY_SPIDER_STEP SPIDER_STEP
	ENTITY_SPLASH_POTION_BREAK SPLASH_POTION_BREAK
	ENTITY_SPLASH_POTION_THROW SPLASH_POTION_THROW
	ENTITY_SQUID_AMBIENT SQUID_AMBIENT
	ENTITY_SQUID_DEATH SQUID_DEATH
	ENTITY_SQUID_HURT SQUID_HURT
	ENTITY_SQUID_SQUIRT SQUID_SQUIRT
	ENTITY_STRAY_AMBIENT STRAY_AMBIENT
	ENTITY_STRAY_DEATH STRAY_DEATH
	ENTITY_STRAY_HURT STRAY_HURT
	ENTITY_STRAY_STEP STRAY_STEP
	ENTITY_STRIDER_AMBIENT STRIDER_AMBIENT
	ENTITY_STRIDER_DEATH STRIDER_DEATH
	ENTITY_STRIDER_EAT STRIDER_EAT
	ENTITY_STRIDER_HAPPY STRIDER_HAPPY
	ENTITY_STRIDER_HURT STRIDER_HURT
	ENTITY_STRIDER_RETREAT STRIDER_RETREAT
	ENTITY_STRIDER_SADDLE STRIDER_SADDLE
	ENTITY_STRIDER_STEP STRIDER_STEP
	ENTITY_STRIDER_STEP_LAVA STRIDER_STEP_LAVA
	ENTITY_TNT_PRIMED TNT_PRIMED
	ENTITY_TROPICAL_FISH_AMBIENT TROPICAL_FISH_AMBIENT
	ENTITY_TROPICAL_FISH_DEATH TROPICAL_FISH_DEATH
	ENTITY_TROPICAL_FISH_FLOP TROPICAL_FISH_FLOP
	ENTITY_TROPICAL_FISH_HURT TROPICAL_FISH_HURT
	ENTITY_TURTLE_AMBIENT_LAND TURTLE_AMBIENT_LAND
	ENTITY_TURTLE_DEATH TURTLE_DEATH
	ENTITY_TURTLE_DEATH_BABY TURTLE_DEATH_BABY
	ENTITY_TURTLE_EGG_BREAK TURTLE_EGG_BREAK
	ENTITY_TURTLE_EGG_CRACK TURTLE_EGG_CRACK
	ENTITY_TURTLE_EGG_HATCH TURTLE_EGG_HATCH
	ENTITY_TURTLE_HURT TURTLE_HURT
	ENTITY_TURTLE_HURT_BABY TURTLE_HURT_BABY
	ENTITY_TURTLE_LAY_EGG TURTLE_LAY_EGG
	ENTITY_TURTLE_SHAMBLE TURTLE_SHAMBLE
	ENTITY_TURTLE_SHAMBLE_BABY TURTLE_SHAMBLE_BABY
	ENTITY_TURTLE_SWIM TURTLE_SWIM
	ENTITY_VEX_AMBIENT VEX_AMBIENT
	ENTITY_VEX_CHARGE VEX_CHARGE
	ENTITY_VEX_DEATH VEX_DEATH
	ENTITY_VEX_HURT VEX_HURT
	ENTITY_VILLAGER_AMBIENT VILLAGER_AMBIENT
	ENTITY_VILLAGER_CELEBRATE VILLAGER_CELEBRATE
	ENTITY_VILLAGER_DEATH VILLAGER_DEATH
	ENTITY_VILLAGER_HURT VILLAGER_HURT
	ENTITY_VILLAGER_NO VILLAGER_NO
	ENTITY_VILLAGER_TRADE VILLAGER_TRADE
	ENTITY_VILLAGER_WORK_ARMORER VILLAGER_WORK_ARMORER
	ENTITY_VILLAGER_WORK_BUTCHER VILLAGER_WORK_BUTCHER
	ENTITY_VILLAGER_WORK_CARTOGRAPHER VILLAGER_WORK_CARTOGRAPHER
	ENTITY_VILLAGER_WORK_CLERIC VILLAGER_WORK_CLERIC
	ENTITY_VILLAGER_WORK_FARMER VILLAGER_WORK_FARMER
	ENTITY_VILLAGER_WORK_FISHERMAN VILLAGER_WORK_FISHERMAN
	ENTITY_VILLAGER_WORK_FLETCHER VILLAGER_WORK_FLETCHER
	ENTITY_VILLAGER_WORK_LEATHERWORKER VILLAGER_WORK_LEATHERWORKER
	ENTITY_VILLAGER_WORK_LIBRARIAN VILLAGER_WORK_LIBRARIAN
	ENTITY_VILLAGER_WORK_MASON VILLAGER_WORK_MASON
	ENTITY_VILLAGER_WORK_SHEPHERD VILLAGER_WORK_SHEPHERD
	ENTITY_VILLAGER_WORK_TOOLSMITH VILLAGER_WORK_TOOLSMITH
	ENTITY_VILLAGER_WORK_WEAPONSMITH VILLAGER_WORK_WEAPONSMITH
	ENTITY_VILLAGER_YES VILLAGER_YES
	ENTITY_VINDICATOR_AMBIENT VINDICATOR_AMBIENT
	ENTITY_VINDICATOR_CELEBRATE VINDICATOR_CELEBRATE
	ENTITY_VINDICATOR_DEATH VINDICATOR_DEATH
	ENTITY_VINDICATOR_HURT VINDICATOR_HURT
	ENTITY_WANDERING_TRADER_AMBIENT WANDERING_TRADER_AMBIENT
	ENTITY_WANDERING_TRADER_DEATH WANDERING_TRADER_DEATH
	ENTITY_WANDERING_TRADER_DISAPPEARED WANDERING_TRADER_DISAPPEARED
	ENTITY_WANDERING_TRADER_DRINK_MILK WANDERING_TRADER_DRINK_MILK
	ENTITY_WANDERING_TRADER_DRINK_POTION WANDERING_TRADER_DRINK_POTION
	ENTITY_WANDERING_TRADER_HURT WANDERING_TRADER_HURT
	ENTITY_WANDERING_TRADER_NO WANDERING_TRADER_NO
	ENTITY_WANDERING_TRADER_REAPPEARED WANDERING_TRADER_REAPPEARED
	ENTITY_WANDERING_TRADER_TRADE WANDERING_TRADER_TRADE
	ENTITY_WANDERING_TRADER_YES WANDERING_TRADER_YES
	ENTITY_WITCH_AMBIENT WITCH_AMBIENT
	ENTITY_WITCH_CELEBRATE WITCH_CELEBRATE
	ENTITY_WITCH_DEATH WITCH_DEATH
	ENTITY_WITCH_DRINK WITCH_DRINK
	ENTITY_WITCH_HURT WITCH_HURT
	ENTITY_WITCH_THROW WITCH_THROW
	ENTITY_WITHER_AMBIENT WITHER_AMBIENT
	ENTITY_WITHER_BREAK_BLOCK WITHER_BREAK_BLOCK
	ENTITY_WITHER_DEATH WITHER_DEATH
	ENTITY_WITHER_HURT WITHER_HURT
	ENTITY_WITHER_SHOOT WITHER_SHOOT
	ENTITY_WITHER_SKELETON_AMBIENT WITHER_SKELETON_AMBIENT
	ENTITY_WITHER_SKELETON_DEATH WITHER_SKELETON_DEATH
	ENTITY_WITHER_SKELETON_HURT WITHER_SKELETON_HURT
	ENTITY_WITHER_SKELETON_STEP WITHER_SKELETON_STEP
	ENTITY_WITHER_SPAWN WITHER_SPAWN
	ENTITY_WOLF_AMBIENT WOLF_AMBIENT
	ENTITY_WOLF_DEATH WOLF_DEATH
	ENTITY_WOLF_GROWL WOLF_GROWL
	ENTITY_WOLF_HOWL WOLF_HOWL
	ENTITY_WOLF_HURT WOLF_HURT
	ENTITY_WOLF_PANT WOLF_PANT
	ENTITY_WOLF_SHAKE WOLF_SHAKE
	ENTITY_WOLF_STEP WOLF_STEP
	ENTITY_WOLF_WHINE WOLF_WHINE
	ENTITY_ZOGLIN_AMBIENT ZOGLIN_AMBIENT
	ENTITY_ZOGLIN_ANGRY ZOGLIN_ANGRY
	ENTITY_ZOGLIN_ATTACK ZOGLIN_ATTACK
	ENTITY_ZOGLIN_DEATH ZOGLIN_DEATH
	ENTITY_ZOGLIN_HURT ZOGLIN_HURT
	ENTITY_ZOGLIN_STEP ZOGLIN_STEP
	ENTITY_ZOMBIE_AMBIENT ZOMBIE_AMBIENT
	ENTITY_ZOMBIE_ATTACK_IRON_DOOR ZOMBIE_ATTACK_IRON_DOOR
	ENTITY_ZOMBIE_ATTACK_WOODEN_DOOR ZOMBIE_ATTACK_WOODEN_DOOR
	ENTITY_ZOMBIE_BREAK_WOODEN_DOOR ZOMBIE_BREAK_WOODEN_DOOR
	ENTITY_ZOMBIE_CONVERTED_TO_DROWNED ZOMBIE_CONVERTED_TO_DROWNED
	ENTITY_ZOMBIE_DEATH ZOMBIE_DEATH
	ENTITY_ZOMBIE_DESTROY_EGG ZOMBIE_DESTROY_EGG
	ENTITY_ZOMBIE_HORSE_AMBIENT ZOMBIE_HORSE_AMBIENT
	ENTITY_ZOMBIE_HORSE_DEATH ZOMBIE_HORSE_DEATH
	ENTITY_ZOMBIE_HORSE_HURT ZOMBIE_HORSE_HURT
	ENTITY_ZOMBIE_HURT ZOMBIE_HURT
	ENTITY_ZOMBIE_INFECT ZOMBIE_INFECT
	ENTITY_ZOMBIE_STEP ZOMBIE_STEP
	ENTITY_ZOMBIE_VILLAGER_AMBIENT ZOMBIE_VILLAGER_AMBIENT
	ENTITY_ZOMBIE_VILLAGER_CONVERTED ZOMBIE_VILLAGER_CONVERTED
	ENTITY_ZOMBIE_VILLAGER_CURE ZOMBIE_VILLAGER_CURE
	ENTITY_ZOMBIE_VILLAGER_DEATH ZOMBIE_VILLAGER_DEATH
	ENTITY_ZOMBIE_VILLAGER_HURT ZOMBIE_VILLAGER_HURT
	ENTITY_ZOMBIE_VILLAGER_STEP ZOMBIE_VILLAGER_STEP
	ENTITY_ZOMBIFIED_PIGLIN_AMBIENT ZOMBIFIED_PIGLIN_AMBIENT
	ENTITY_ZOMBIFIED_PIGLIN_ANGRY ZOMBIFIED_PIGLIN_ANGRY
	ENTITY_ZOMBIFIED_PIGLIN_DEATH ZOMBIFIED_PIGLIN_DEATH
	ENTITY_ZOMBIFIED_PIGLIN_HURT ZOMBIFIED_PIGLIN_HURT
	EVENT_RAID_HORN RAID_HORN
	ITEM_ARMOR_EQUIP_CHAIN ARMOR_EQUIP_CHAIN
	ITEM_ARMOR_EQUIP_DIAMOND ARMOR_EQUIP_DIAMOND
	ITEM_ARMOR_EQUIP_ELYTRA ARMOR_EQUIP_ELYTRA
	ITEM_ARMOR_EQUIP_GENERIC ARMOR_EQUIP_GENERIC
	ITEM_ARMOR_EQUIP_GOLD ARMOR_EQUIP_GOLD
	ITEM_ARMOR_EQUIP_IRON ARMOR_EQUIP_IRON
	ITEM_ARMOR_EQUIP_LEATHER ARMOR_EQUIP_LEATHER
	ITEM_ARMOR_EQUIP_NETHERITE ARMOR_EQUIP_NETHERITE
	ITEM_ARMOR_EQUIP_TURTLE ARMOR_EQUIP_TURTLE
	ITEM_AXE_STRIP AXE_STRIP
	ITEM_BOOK_PAGE_TURN BOOK_PAGE_TURN
	ITEM_BOOK_PUT BOOK_PUT
	ITEM_BOTTLE_EMPTY BOTTLE_EMPTY
	ITEM_BOTTLE_FILL BOTTLE_FILL
	ITEM_BOTTLE_FILL_DRAGONBREATH BOTTLE_FILL_DRAGONBREATH
	ITEM_BUCKET_EMPTY BUCKET_EMPTY
	ITEM_BUCKET_EMPTY_FISH BUCKET_EMPTY_FISH
	ITEM_BUCKET_EMPTY_LAVA BUCKET_EMPTY_LAVA
	ITEM_BUCKET_FILL BUCKET_FILL
	ITEM_BUCKET_FILL_FISH BUCKET_FILL_FISH
	ITEM_BUCKET_FILL_LAVA BUCKET_FILL_LAVA
	ITEM_CHORUS_FRUIT_TELEPORT CHORUS_FRUIT_TELEPORT
	ITEM_CROP_PLANT CROP_PLANTED
	ITEM_CROSSBOW_HIT CROSSBOW_HIT
	ITEM_CROSSBOW_LOADING_END CROSSBOW_LOADING_END
	ITEM_CROSSBOW_LOADING_MIDDLE CROSSBOW_LOADING_MIDDLE
	ITEM_CROSSBOW_LOADING_START CROSSBOW_LOADING_START
	ITEM_CROSSBOW_QUICK_CHARGE_1 CROSSBOW_QUICK_CHARGE_1
	ITEM_CROSSBOW_QUICK_CHARGE_2 CROSSBOW_QUICK_CHARGE_2
	ITEM_CROSSBOW_QUICK_CHARGE_3 CROSSBOW_QUICK_CHARGE_3
	ITEM_CROSSBOW_SHOOT CROSSBOW_SHOOT
	ITEM_ELYTRA_FLYING ELYTRA_FLYING
	ITEM_FIRECHARGE_USE FIRECHARGE_USE
	ITEM_FLINTANDSTEEL_USE FLINTANDSTEEL_USE
	ITEM_HOE_TILL HOE_TILL
	ITEM_HONEY_BOTTLE_DRINK HONEY_DRINK
	ITEM_LODESTONE_COMPASS_LOCK LODESTONE_COMPASS_LOCK
	ITEM_NETHER_WART_PLANT NETHER_WART_PLANTED
	ITEM_SHIELD_BLOCK SHIELD_BLOCK
	ITEM_SHIELD_BREAK SHIELD_BREAK
	ITEM_SHOVEL_FLATTEN SHOVEL_FLATTEN
	ITEM_SWEET_BERRIES_PICK_FROM_BUSH SWEET_BERRY_BUSH_PICK_BERRIES
	ITEM_TOTEM_USE TOTEM_USE
	ITEM_TRIDENT_HIT TRIDENT_HIT
	ITEM_TRIDENT_HIT_GROUND TRIDENT_HIT_GROUND
	ITEM_TRIDENT_RETURN TRIDENT_RETURN
	ITEM_TRIDENT_RIPTIDE_1 TRIDENT_RIPTIDE_1
	ITEM_TRIDENT_RIPTIDE_2 TRIDENT_RIPTIDE_2
	ITEM_TRIDENT_RIPTIDE_3 TRIDENT_RIPTIDE_3
	ITEM_TRIDENT_THROW TRIDENT_THROW
	ITEM_TRIDENT_THUNDER TRIDENT_THUNDER
	MUSIC_NETHER_BASALT_DELTAS MUSIC_BIOME_BASALT_DELTAS
	MUSIC_NETHER_CRIMSON_FOREST MUSIC_BIOME_CRIMSON_FOREST
	MUSIC_NETHER_NETHER_WASTES MUSIC_BIOME_NETHER_WASTES
	MUSIC_NETHER_SOUL_SAND_VALLEY MUSIC_BIOME_SOUL_SAND_VALLEY
	MUSIC_NETHER_WARPED_FOREST MUSIC_BIOME_WARPED_FOREST
	PARTICLE_SOUL_ESCAPE SOUL_ESCAPE
	a (Ljava/lang/String;)Lnet/minecraft/server/SoundEffect; register
net/minecraft/server/WorldGenMineshaftPieces net/minecraft/world/level/levelgen/structure/MineShaftPieces
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;ILnet/minecraft/server/WorldGenMineshaft$Type;)Lcre$c; createRandomShaftPiece
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lcre$c; access$000
	b (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lcre$c; generateAndAddPiece
net/minecraft/server/GameTestHarnessAssertion net/minecraft/gametest/framework/GameTestAssertException
net/minecraft/server/WorldGenDecoratorFrequencyConfiguration net/minecraft/world/level/levelgen/feature/configurations/CountConfiguration
	a CODEC
	c count
	a ()Lnet/minecraft/server/IntSpread; count
net/minecraft/server/EntitySkeletonStray net/minecraft/world/entity/monster/Stray
	I ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/WorldAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkStraySpawnRules
	b (Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityArrow; getArrow
	dp ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/SoundEffect; getStepSound
net/minecraft/server/NBTTagLong net/minecraft/nbt/LongTag
	a TYPE
	a ()B getId
	a (J)Lnet/minecraft/server/NBTTagLong; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTTagType; getType
	c ()Lnet/minecraft/server/NBTBase; copy
	d ()Lnet/minecraft/server/NBTTagLong; copy
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
net/minecraft/server/PacketPlayOutMultiBlockChange net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket
	a sectionPos
	b positions
	c states
	d suppressLightUpdates
	a (I)V initFields
	a (Ljava/util/function/BiConsumer;)V runUpdates
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Z shouldSuppressLightUpdates
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/ExplosionDamageCalculatorEntity net/minecraft/world/level/EntityBasedExplosionDamageCalculator
	a source
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;F)Z shouldBlockExplode
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Ljava/util/Optional; getBlockExplosionResistance
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;Ljava/lang/Float;)Ljava/lang/Float; lambda$getBlockExplosionResistance$0
bie$a net/minecraft/world/inventory/BrewingStandMenu$FuelSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a_ (Lnet/minecraft/server/ItemStack;)Z mayPlaceItem
gw$10 net/minecraft/core/dispenser/DispenseItemBehavior$18
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairsStraight net/minecraft/world/level/levelgen/structure/StrongholdPieces$StraightStairsDown
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairsStraight; createPiece
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/TileEntityJigsaw$JointType net/minecraft/world/level/block/entity/JigsawBlockEntity$JointType
	c name
	d $VALUES
	a ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;)Ljava/util/Optional; byName
	a (Ljava/lang/String;Lnet/minecraft/server/TileEntityJigsaw$JointType;)Z lambda$byName$0
net/minecraft/server/InventoryCraftResult net/minecraft/world/inventory/ResultContainer
	b recipeUsed
	items itemStacks
	X_ ()V setChanged
	Y_ ()V clearContent
	Z_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IRecipe;)V setRecipeUsed
	ak_ ()Lnet/minecraft/server/IRecipe; getRecipeUsed
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	c ()Z isEmpty
gw$13 net/minecraft/core/dispenser/DispenseItemBehavior$20
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
gw$14 net/minecraft/core/dispenser/DispenseItemBehavior$21
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
gw$11 net/minecraft/core/dispenser/DispenseItemBehavior$19
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
net/minecraft/server/WorldGenFeatureDefinedStructurePoolLegacySingle net/minecraft/world/level/levelgen/feature/structures/LegacySinglePoolElement
	a CODEC
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	a (Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;Z)Lnet/minecraft/server/DefinedStructureInfo; getSettings
net/minecraft/server/BlockTallPlantFlower net/minecraft/world/level/block/TallFlowerBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
gw$12 net/minecraft/core/dispenser/DispenseItemBehavior$2
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
gw$17 net/minecraft/core/dispenser/DispenseItemBehavior$24
	b defaultDispenseItemBehavior
	a (Lnet/minecraft/server/BlockBase$BlockData;)Z lambda$execute$0
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; takeLiquid
dir$a com/mojang/realmsclient/util/TextRenderingUtils$Line
	a segments
gw$18 net/minecraft/core/dispenser/DispenseItemBehavior$25
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
dir$b com/mojang/realmsclient/util/TextRenderingUtils$LineSegment
	a fullText
	b linkTitle
	c linkUrl
	a ()Ljava/lang/String; renderedText
	a (Ljava/lang/String;)Ldir$b; text
	a (Ljava/lang/String;Ljava/lang/String;)Ldir$b; link
	b ()Z isLink
	c ()Ljava/lang/String; getLinkUrl
clh$a net/minecraft/world/level/levelgen/feature/WoodlandMansionFeature$WoodlandMansionStart
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)V placeInChunk
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)V generatePieces
gw$15 net/minecraft/core/dispenser/DispenseItemBehavior$22
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
gw$16 net/minecraft/core/dispenser/DispenseItemBehavior$23
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
bte$1 net/minecraft/world/level/biome/MultiNoiseBiomeSource$1
net/minecraft/server/WorldGenFeatureRuinedPortalPieces net/minecraft/world/level/levelgen/structure/RuinedPortalPiece
	d LOGGER
	e templateLocation
	f rotation
	g mirror
	h verticalPlacement
	i properties
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;)V addNetherrackDripColumnsBelowPortal
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V maybeAddVines
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/BlockPosition;)V lambda$postProcess$1
	a (Lnet/minecraft/server/Block;FLnet/minecraft/server/Block;)Lnet/minecraft/server/DefinedStructureProcessorPredicates; getBlockReplaceRule
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)Lnet/minecraft/server/DefinedStructureProcessorPredicates; getBlockReplaceRule
	a (Lnet/minecraft/server/DefinedStructure;Lnet/minecraft/server/BlockPosition;)V loadTemplate
	a (Lnet/minecraft/server/GeneratorAccess;IILnet/minecraft/server/WorldGenFeatureRuinedPortalPieces$Position;)I getSurfaceY
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z canBlockBeReplacedByNetherrackOrMagma
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/BlockPosition;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTBase;)V lambda$addAdditionalSaveData$0
	a (Lnet/minecraft/server/WorldGenFeatureRuinedPortalPieces$Position;)Lnet/minecraft/server/HeightMap$Type; getHeightMapType
	b (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;)V spreadNetherrack
	b (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V maybeAddLeavesAbove
	c ()Lnet/minecraft/server/DefinedStructureProcessorPredicates; getLavaProcessorRule
	c (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V addNetherrackDripColumn
	d (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V placeNetherrackOrMagma
net/minecraft/server/CircularTimer net/minecraft/util/FrameTimer
	a loggedTimes
	b logStart
	c logLength
	d logEnd
	a ()I getLogStart
	a (I)J getAverageDuration
	a (II)I scaleAverageDurationTo
	a (J)V logFrameDuration
	a (JII)I scaleSampleTo
	b ()I getLogEnd
	b (I)I wrapIndex
	c ()[J getLog
gw$19 net/minecraft/core/dispenser/DispenseItemBehavior$3
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
net/minecraft/server/WorldGenFoilagePlacerMegaPine net/minecraft/world/level/levelgen/feature/foliageplacers/MegaPineFoliagePlacer
	a CODEC
	b crownHeight
	a ()Lnet/minecraft/server/WorldGenFoilagePlacers; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ljava/util/Random;IIIIZ)Z shouldSkipLocation
	a (Ljava/util/Random;ILnet/minecraft/server/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;ILcni$b;IILjava/util/Set;ILnet/minecraft/server/StructureBoundingBox;)V createFoliage
	a (Lnet/minecraft/server/WorldGenFoilagePlacerMegaPine;)Lnet/minecraft/server/IntSpread; lambda$null$0
net/minecraft/server/DefinedStructureProcessorRotation net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor
	a CODEC
	b integrity
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/server/DefinedStructureProcessorRotation;)Ljava/lang/Float; lambda$static$0
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
net/minecraft/server/CommandSetBlock$Filter net/minecraft/server/commands/SetBlockCommand$Filter
net/minecraft/server/BehaviorInteractPlayer net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink
	b speedModifier
	a (J)Z timedOut
	a (Lnet/minecraft/server/EntityVillager;)V followPlayer
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
net/minecraft/server/BlockMelon net/minecraft/world/level/block/MelonBlock
	c ()Lnet/minecraft/server/BlockStem; getStem
	d ()Lnet/minecraft/server/BlockStemAttached; getAttachedStem
akz$a net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection
	e chestIds
	a ()Z skippable
	a (I)Z isTrappedChest
bte$c net/minecraft/world/level/biome/MultiNoiseBiomeSource$PresetInstance
	a CODEC
	b preset
	c biomes
	d seed
	a ()Lbte$b; preset
	a (Lbte$b;)Lcom/mojang/serialization/DataResult; lambda$null$2
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/serialization/DataResult; lambda$null$1
	b ()Lnet/minecraft/server/IRegistry; biomes
	b (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/serialization/DataResult; lambda$null$0
	c ()J seed
	d ()Lnet/minecraft/server/WorldChunkManagerMultiNoise; biomeSource
dso$a net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory$TeamSelectionItem
	a this$0
	b team
	c location
	d players
	a (Ldfj;FI)V renderIcon
	a (Ldsi;)V selectItem
	aA_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	aB_ ()Z isEnabled
bte$b net/minecraft/world/level/biome/MultiNoiseBiomeSource$Preset
	a NETHER
	b BY_NAME
	c name
	d biomeSource
	a ()Ljava/util/Map; access$100
	a (Lbte$b;)Lnet/minecraft/server/MinecraftKey; access$000
	a (Lbte$b;Lnet/minecraft/server/IRegistry;Ljava/lang/Long;)Lnet/minecraft/server/WorldChunkManagerMultiNoise; lambda$static$5
	a (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/BiomeBase; lambda$null$4
	a (Lnet/minecraft/server/IRegistry;J)Lnet/minecraft/server/WorldChunkManagerMultiNoise; biomeSource
	b (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/BiomeBase; lambda$null$3
	c (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/BiomeBase; lambda$null$2
	d (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/BiomeBase; lambda$null$1
	e (Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/BiomeBase; lambda$null$0
bte$a net/minecraft/world/level/biome/MultiNoiseBiomeSource$NoiseParameters
	a CODEC
	b firstOctave
	c amplitudes
	a ()I firstOctave
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	b ()Lit/unimi/dsi/fastutil/doubles/DoubleList; amplitudes
net/minecraft/server/EnchantmentArrowKnockback net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/DataConverterColorlessShulkerEntity net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
net/minecraft/server/LootTableRegistry net/minecraft/world/level/storage/loot/LootTables
	a LOGGER
	b GSON
	c tables
	d predicateManager
	a ()Ljava/util/Set; getIds
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonElement;)V lambda$apply$0
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/lang/String;Ljava/lang/String;)V lambda$apply$2
	a (Ljava/util/Map;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/LootCollector;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/LootTable;)V validate
	a (Lnet/minecraft/server/LootTable;)Lcom/google/gson/JsonElement; serialize
	b (Lnet/minecraft/server/LootCollector;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/LootTable;)V lambda$apply$1
	getLootTable (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootTable; get
bss$1 net/minecraft/world/level/biome/Biome$1
	a this$0
dxv$1 net/minecraft/client/particle/MobAppearanceParticle$1
net/minecraft/server/WorldNBTStorage net/minecraft/world/level/storage/PlayerDataStorage
	a fixerUpper
	b LOGGER
cke$a net/minecraft/world/level/levelgen/feature/OceanMonumentFeature$OceanMonumentStart
	e isCreated
	a (Lnet/minecraft/server/GeneratorAccessSeed;Lnet/minecraft/server/StructureManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)V placeInChunk
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V generatePieces
	a (Lnet/minecraft/server/IRegistryCustom;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)V generatePieces
	b (II)V generatePieces
net/minecraft/server/VoxelShapeCube net/minecraft/world/phys/shapes/CubeVoxelShape
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;D)I findIndex
net/minecraft/server/FluidTypeWater net/minecraft/world/level/material/WaterFluid
	a ()Lnet/minecraft/server/Item; getBucket
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/server/FluidType;)Z isSame
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V beforeDestroyingBlock
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Ljava/util/Random;)V animateTick
	b (Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/IBlockData; createLegacyBlock
	b (Lnet/minecraft/server/IWorldReader;)I getSlopeFindDistance
	c ()F getExplosionResistance
	c (Lnet/minecraft/server/IWorldReader;)I getDropOff
	d ()Lnet/minecraft/server/FluidType; getFlowing
	e ()Lnet/minecraft/server/FluidType; getSource
	f ()Z canConvertToSource
	i ()Lnet/minecraft/server/ParticleParam; getDripParticle
bss$a net/minecraft/world/level/biome/Biome$BiomeBuilder
	a precipitation
	b biomeCategory
	c depth
	d scale
	e temperature
	f temperatureModifier
	g downfall
	h specialEffects
	i mobSpawnSettings
	j generationSettings
	a ()Lnet/minecraft/server/BiomeBase; build
	a (F)Lbss$a; depth
	a (Lnet/minecraft/server/BiomeBase$Geography;)Lbss$a; biomeCategory
	a (Lnet/minecraft/server/BiomeBase$Precipitation;)Lbss$a; precipitation
	a (Lnet/minecraft/server/BiomeBase$TemperatureModifier;)Lbss$a; temperatureAdjustment
	a (Lnet/minecraft/server/BiomeFog;)Lbss$a; specialEffects
	a (Lnet/minecraft/server/BiomeSettingsGeneration;)Lbss$a; generationSettings
	a (Lnet/minecraft/server/BiomeSettingsMobs;)Lbss$a; mobSpawnSettings
	b (F)Lbss$a; scale
	c (F)Lbss$a; temperature
	d (F)Lbss$a; downfall
net/minecraft/server/WorldChunkManagerCheckerBoard net/minecraft/world/level/biome/CheckerboardColumnBiomeSource
	e CODEC
	f allowedBiomes
	g bitShift
	h size
	a ()Lcom/mojang/serialization/Codec; codec
	a (J)Lnet/minecraft/server/WorldChunkManager; withSeed
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lnet/minecraft/server/WorldChunkManagerCheckerBoard;)Ljava/lang/Integer; lambda$null$1
	b (III)Lnet/minecraft/server/BiomeBase; getNoiseBiome
	b (Lnet/minecraft/server/WorldChunkManagerCheckerBoard;)Ljava/util/List; lambda$null$0
net/minecraft/server/ItemVanishable net/minecraft/world/item/Vanishable
net/minecraft/server/ContainerHorse net/minecraft/world/inventory/HorseInventoryMenu
	c horseContainer
	d horse
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()Lnet/minecraft/server/IInventory; getContainer
net/minecraft/server/CriterionTriggerNetherTravel net/minecraft/advancements/critereon/NetherTravelTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lcc$a; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Vec3D;)V trigger
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Vec3D;Lcc$a;)Z lambda$trigger$0
	b ()Lnet/minecraft/server/MinecraftKey; access$000
	b (Lcom/google/gson/JsonObject;Lbg$b;Lnet/minecraft/server/LootDeserializationContext;)Lnet/minecraft/server/CriterionInstanceAbstract; createInstance
dyy$a net/minecraft/client/particle/WaterDropParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Ldwl;DDDDDD)Ldxy; createParticle
	a (Lnet/minecraft/server/ParticleType;Ldwl;DDDDDD)Ldxy; createParticle
net/minecraft/server/GenLayerZoomer net/minecraft/world/level/biome/BiomeZoomer
	a (JIIILnet/minecraft/server/BiomeManager$Provider;)Lnet/minecraft/server/BiomeBase; getBiome
aqb$b net/minecraft/world/entity/EntityType$EntityFactory
net/minecraft/server/PacketLoginOutSetCompression net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket
	a compressionThreshold
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginOutListener;)V handle
	b ()I getCompressionThreshold
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
